using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using LIV.SDK.Unity;
using LitJson;
using MK.Glow.Legacy;
using NibiruTask;
using NoloClientCSharp;
using Nvr.Internal;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Photon.Chat;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using Valve.VR;
using VolumetricFogAndMist;
using VortexStudios.PostProcessing;
using ns3dRudder;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A084", Offset = "0x87A084")]
internal sealed class <>f__AnonymousType0<<pose>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x886880", Offset = "0x886880")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8868C0", Offset = "0x8868C0")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x17000001")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<pose>j__TPar pose, <index>j__TPar index)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A0C0", Offset = "0x87A0C0")]
internal sealed class <>f__AnonymousType1<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x886900", Offset = "0x886900")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x886940", Offset = "0x886940")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x886980", Offset = "0x886980")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x17000003")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000004")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000008")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000005")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000009")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x600000A")]
	[DebuggerHidden]
	public <>f__AnonymousType1(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass)
	{
	}

	[Token(Token = "0x600000B")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000D")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A0FC", Offset = "0x87A0FC")]
internal sealed class <>f__AnonymousType2<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar, <deviceRole>j__TPar, <modelNumber>j__TPar, <renderModel>j__TPar>
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8869C0", Offset = "0x8869C0")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x886A00", Offset = "0x886A00")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x886A40", Offset = "0x886A40")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x886A80", Offset = "0x886A80")]
	private readonly <deviceRole>j__TPar <deviceRole>i__Field;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x886AC0", Offset = "0x886AC0")]
	private readonly <modelNumber>j__TPar <modelNumber>i__Field;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x886B00", Offset = "0x886B00")]
	private readonly <renderModel>j__TPar <renderModel>i__Field;

	[Token(Token = "0x17000006")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x600000E")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000007")]
	public <index>j__TPar index
	{
		[Token(Token = "0x600000F")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000008")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000010")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x17000009")]
	public <deviceRole>j__TPar deviceRole
	{
		[Token(Token = "0x6000011")]
		get
		{
			return (<deviceRole>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000A")]
	public <modelNumber>j__TPar modelNumber
	{
		[Token(Token = "0x6000012")]
		get
		{
			return (<modelNumber>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000B")]
	public <renderModel>j__TPar renderModel
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (<renderModel>j__TPar)null;
		}
	}

	[Token(Token = "0x6000014")]
	[DebuggerHidden]
	public <>f__AnonymousType2(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass, <deviceRole>j__TPar deviceRole, <modelNumber>j__TPar modelNumber, <renderModel>j__TPar renderModel)
	{
	}

	[Token(Token = "0x6000015")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000017")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x87A138", Offset = "0x87A138")]
public class Controller3dRudder : MonoBehaviour
{
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E290", Offset = "0x87E290")]
	private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x170002DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600204D")]
			[Address(RVA = "0x1351214", Offset = "0x1351214", VA = "0x1351214", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600204F")]
			[Address(RVA = "0x13512E4", Offset = "0x13512E4", VA = "0x13512E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x1350FDC", Offset = "0x1350FDC", VA = "0x1350FDC")]
		[DebuggerHidden]
		public <Start>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x13510F4", Offset = "0x13510F4", VA = "0x13510F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x1351108", Offset = "0x1351108", VA = "0x1351108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x1351244", Offset = "0x1351244", VA = "0x1351244", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public uint PortNumber;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0002")]
	public bool CanForward;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79651C")]
	public float SpeedForwardBackward;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool CanStrafe;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float SpeedLeftRight;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool CanUpDown;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public float SpeedUpDown;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool CanRotate;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AEFA8")]
	public float SpeedRotation;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IAxesParam axesParam;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1350F3C", Offset = "0x1350F3C", VA = "0x1350F3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89DACC", Offset = "0x89DACC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1351024", Offset = "0x1351024", VA = "0x1351024")]
	private void Update()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1351038", Offset = "0x1351038", VA = "0x1351038")]
	private void GetAxes()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x135104C", Offset = "0x135104C", VA = "0x135104C")]
	public Controller3dRudder()
	{
	}
}
[Token(Token = "0x2000006")]
public class Manager3dRudder : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private static Manager3dRudder instance;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool IsInitialized;

	[Token(Token = "0x1700000C")]
	public static Manager3dRudder Instance
	{
		[Token(Token = "0x600001C")]
		[Address(RVA = "0x130896C", Offset = "0x130896C", VA = "0x130896C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1308D94", Offset = "0x1308D94", VA = "0x1308D94")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1308E90", Offset = "0x1308E90", VA = "0x1308E90")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1308F74", Offset = "0x1308F74", VA = "0x1308F74")]
	public Manager3dRudder()
	{
	}
}
[Token(Token = "0x2000007")]
public class oculusTest : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AEFB8")]
	private int indexDerecha;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int indexIzquierda;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool mandoDerechoCargado;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool mandoIzquierdoCargado;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	private MandoOculusT mandoDerecho;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private MandoOculusT mandoIzquierdo;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AEFC8")]
	private MandoOculusT tracker;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform d;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform i;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x14F9F68", Offset = "0x14F9F68", VA = "0x14F9F68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x14FA06C", Offset = "0x14FA06C", VA = "0x14FA06C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x14FA2BC", Offset = "0x14FA2BC", VA = "0x14FA2BC")]
	public oculusTest()
	{
	}
}
[Token(Token = "0x2000008")]
public class MandoOculusT
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public XRNode index;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	public float trigger;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool triggerPress;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AEFD8")]
	public bool triggerUp;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerDown;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float grip;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool gripPress;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	public bool gripPressDown;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool gripPressUp;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AEFE8")]
	public bool botonAplicationPress;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAplicationPressDown;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAplicationPressUp;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool touchPress;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	public bool touchPressUp;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool touchPressDown;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF054")]
	public Vector2 stick;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAXOculusPress;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAXOculusPressUp;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAXOculusPressDown;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	public bool botonBYOculusPress;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool botonBYOculusPressUp;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF064")]
	public bool botonBYOculusPressDown;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonMenu;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 velocidadMando;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool algunBotonTocado;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	private bool pulsandoTrigger;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool pulsandoGrip;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF074")]
	private bool pulsandoAX;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool pulsandoBY;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool pulsandoMenu;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 localPosition;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
	public Quaternion localrotation;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x130B434", Offset = "0x130B434", VA = "0x130B434")]
	public MandoOculusT(XRNode index)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x130B5B4", Offset = "0x130B5B4", VA = "0x130B5B4")]
	public void LeerBotones()
	{
	}
}
[Token(Token = "0x2000009")]
public class ApagameSiEsCalidadBaja : MonoBehaviour
{
	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1508658", Offset = "0x1508658", VA = "0x1508658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1508750", Offset = "0x1508750", VA = "0x1508750")]
	public ApagameSiEsCalidadBaja()
	{
	}
}
[Token(Token = "0x200000A")]
public class LanguageManager
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TMP_FontAsset fuenteOccidental;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF084")]
	public TMP_FontAsset fuenteOccidentalNegra;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TMP_FontAsset fuenteOccidentalSinBorde;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Font fuenteStandardOccidental;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TMP_FontAsset fuenteJaponesa;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	public TMP_FontAsset fuenteJaponesaNegra;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TMP_FontAsset fuenteJaponesaSinBorde;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF094")]
	public Font fuenteStandardJaponesa;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TMP_FontAsset fuenteChina;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TMP_FontAsset fuenteChinaNegra;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TMP_FontAsset fuenteChinaSinBorde;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
	public Font fuenteStandardChina;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TMP_FontAsset fuenteKoreana;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF0A4")]
	public TMP_FontAsset fuenteKoreanaNegra;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TMP_FontAsset fuenteKoreanaSinBorde;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Font fuenteStandardKoreana;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TMP_FontAsset fuenteRusa;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	public TMP_FontAsset fuenteRusaNegra;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TMP_FontAsset fuenteRusaSinBorde;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF0B4")]
	public Font fuenteStandardRusa;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LanguageManager sharedinstance;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public UnityEvent enCambioDeIdioma;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<string> idiomas;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
	private Dictionary<string, string> Idioma;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public string idiomaActual;

	[Token(Token = "0x1700000D")]
	public static LanguageManager instance
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0x11C2B1C", Offset = "0x11C2B1C", VA = "0x11C2B1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x11E693C", Offset = "0x11E693C", VA = "0x11E693C")]
	public LanguageManager()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x11E77E0", Offset = "0x11E77E0", VA = "0x11E77E0")]
	private void CargarIdioma(string idiomaActual)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x11CA9F8", Offset = "0x11CA9F8", VA = "0x11CA9F8")]
	public string DameTexto(string key, [Optional] TextMeshProUGUI texto, bool fuenteNegra = false, bool fuenteAzulSinBorde = false, bool cambioDeFuente = true)
	{
		return null;
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x11E8250", Offset = "0x11E8250", VA = "0x11E8250")]
	public bool EsIdiomaEspecial()
	{
		return default(bool);
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x11C487C", Offset = "0x11C487C", VA = "0x11C487C")]
	public TMP_FontAsset GetFuentePro(bool fuenteNegra = false, bool fuenteAzulSinBorde = false, bool cambioDeFuente = true)
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x11E8460", Offset = "0x11E8460", VA = "0x11E8460")]
	public Font GetFuenteStandar()
	{
		return null;
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x11E866C", Offset = "0x11E866C", VA = "0x11E866C")]
	public string DameTexto(string key, [Optional] Text texto, bool cambioDeFuente = true)
	{
		return null;
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x11C2DE8", Offset = "0x11C2DE8", VA = "0x11C2DE8")]
	public string DameTexto(string key)
	{
		return null;
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x11E89E0", Offset = "0x11E89E0", VA = "0x11E89E0")]
	public void CambiarIdioma()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x11E8EAC", Offset = "0x11E8EAC", VA = "0x11E8EAC")]
	public void EventoCambioIdioma()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x11E7640", Offset = "0x11E7640", VA = "0x11E7640")]
	private bool ComprobarSiExisteIdioma(string idioma)
	{
		return default(bool);
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87A19C", Offset = "0x87A19C")]
public class TraducirEsteTexto : MonoBehaviour
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF0C4")]
	[HideInInspector]
	public string textoOriginal;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TextMeshProUGUI texto;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool fuenteNegra;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool fuenteSinBorde;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool enMinuscula;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool enMayuscula;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF0D4")]
	public bool combinar;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool cambiarFuente;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1393C20", Offset = "0x1393C20", VA = "0x1393C20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1393CE4", Offset = "0x1393CE4", VA = "0x1393CE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x13945D4", Offset = "0x13945D4", VA = "0x13945D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1394728", Offset = "0x1394728", VA = "0x1394728")]
	private void TraducemeEsto()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1394194", Offset = "0x1394194", VA = "0x1394194")]
	private void Combinar()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x13949A0", Offset = "0x13949A0", VA = "0x13949A0")]
	public TraducirEsteTexto()
	{
	}
}
[Token(Token = "0x200000C")]
public class TraducirEsteTextoNormal : MonoBehaviour
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string textoOriginal;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Text texto;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
	private TextMesh textoM;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private TextMeshPro textoP;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF0E4")]
	public bool TextMesh;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool TextMeshPro;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool fuenteNegra;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x13949E4", Offset = "0x13949E4", VA = "0x13949E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1394BB4", Offset = "0x1394BB4", VA = "0x1394BB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1395418", Offset = "0x1395418", VA = "0x1395418")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x139556C", Offset = "0x139556C", VA = "0x139556C")]
	private void TraducemeEsto()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x13958D4", Offset = "0x13958D4", VA = "0x13958D4")]
	public TraducirEsteTextoNormal()
	{
	}
}
[Token(Token = "0x200000D")]
public class LoadingCamera : MonoBehaviour
{
	[Token(Token = "0x200043A")]
	public enum EstadosCamaraLoading
	{
		[Token(Token = "0x4002487")]
		desactivada,
		[Token(Token = "0x4002488")]
		enTransicion,
		[Token(Token = "0x4002489")]
		pantallaNegraActivada,
		[Token(Token = "0x400248A")]
		cargandoEscena
	}

	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E2CC", Offset = "0x87E2CC")]
	private sealed class <ActivarPantallaNegraSync>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF114")]
		private int <>1__state;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoadingCamera <>4__this;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float velocidad;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
		private Color <aux>5__2;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private float <t>5__3;

		[Token(Token = "0x170002DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x173DCFC", Offset = "0x173DCFC", VA = "0x173DCFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002055")]
			[Address(RVA = "0x173DDCC", Offset = "0x173DDCC", VA = "0x173DDCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x173CB20", Offset = "0x173CB20", VA = "0x173CB20")]
		[DebuggerHidden]
		public <ActivarPantallaNegraSync>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x173D08C", Offset = "0x173D08C", VA = "0x173D08C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x173D0A0", Offset = "0x173D0A0", VA = "0x173D0A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x173DD2C", Offset = "0x173DD2C", VA = "0x173DD2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E308", Offset = "0x87E308")]
	private sealed class <DesactivarPantallaNegraSync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF124")]
		private int <>1__state;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float velocidad;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoadingCamera <>4__this;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		private Color <aux>5__2;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private float <t>5__3;

		[Token(Token = "0x170002E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002059")]
			[Address(RVA = "0x173F39C", Offset = "0x173F39C", VA = "0x173F39C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0x173F46C", Offset = "0x173F46C", VA = "0x173F46C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x173CCD4", Offset = "0x173CCD4", VA = "0x173CCD4")]
		[DebuggerHidden]
		public <DesactivarPantallaNegraSync>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x173E9F0", Offset = "0x173E9F0", VA = "0x173E9F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x173EA04", Offset = "0x173EA04", VA = "0x173EA04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x173F3CC", Offset = "0x173F3CC", VA = "0x173F3CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E344", Offset = "0x87E344")]
	private sealed class <CargarEscenaAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF134")]
		private int <>1__state;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoadingCamera <>4__this;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string escena;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private float <t>5__3;

		[Token(Token = "0x170002E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0x173E8F0", Offset = "0x173E8F0", VA = "0x173E8F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x173E9C0", Offset = "0x173E9C0", VA = "0x173E9C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x173D014", Offset = "0x173D014", VA = "0x173D014")]
		[DebuggerHidden]
		public <CargarEscenaAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x173DDFC", Offset = "0x173DDFC", VA = "0x173DDFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x173DE10", Offset = "0x173DE10", VA = "0x173DE10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x173E920", Offset = "0x173E920", VA = "0x173E920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LoadingCamera instance;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	public Image fondoNegro;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject canvasLoading;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF0F4")]
	public Transform posicionCabeza;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform camara;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Camera m_camera;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EstadosCamaraLoading estadoActual;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
	private Coroutine corrutina;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool pararCorrutina;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF104")]
	private Coroutine cargandoEscena;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x173C134", Offset = "0x173C134", VA = "0x173C134")]
	private void RecolocarCamara()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x173C418", Offset = "0x173C418", VA = "0x173C418")]
	private void Update()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x173C5E0", Offset = "0x173C5E0", VA = "0x173C5E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x173C988", Offset = "0x173C988", VA = "0x173C988")]
	public Coroutine ActivarCamaraNegraAsync(float velocidad = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x173CACC", Offset = "0x173CACC", VA = "0x173CACC")]
	public void ActivarCamaraNegraInstantanea()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x173C9E8", Offset = "0x173C9E8", VA = "0x173C9E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89DB7C", Offset = "0x89DB7C")]
	public IEnumerator ActivarPantallaNegraSync(float velocidad = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x173CB68", Offset = "0x173CB68", VA = "0x173CB68")]
	public void TerminarTodasLasCorrutinas()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x173CB98", Offset = "0x173CB98", VA = "0x173CB98")]
	public Coroutine DesactivarCamaraNegraAsync()
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x173CBF0", Offset = "0x173CBF0", VA = "0x173CBF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89DC2C", Offset = "0x89DC2C")]
	public IEnumerator DesactivarPantallaNegraSync(float velocidad = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x173CD1C", Offset = "0x173CD1C", VA = "0x173CD1C")]
	public void CargarEscena(string escena)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x173CF30", Offset = "0x173CF30", VA = "0x173CF30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89DCDC", Offset = "0x89DCDC")]
	public IEnumerator CargarEscenaAsync(string escena)
	{
		return null;
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x173D05C", Offset = "0x173D05C", VA = "0x173D05C")]
	public LoadingCamera()
	{
	}
}
[Token(Token = "0x200000E")]
public class ControladorNaveAdorno : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200043E")]
	public struct Nave
	{
		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform tNave;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform posicionDestino;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float velocidadNave;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
		public int frecuenciaDeSalida;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float esperaParaSalir;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF154")]
		public float ultimaVezQueSali;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool activo;
	}

	[Token(Token = "0x200043F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E380", Offset = "0x87E380")]
	private sealed class <CorotinaAnimacionDesaparicion>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		public Nave nave;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private float <t>5__2;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF174")]
		private float <escalaBase>5__3;

		[Token(Token = "0x170002E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002065")]
			[Address(RVA = "0x147CE24", Offset = "0x147CE24", VA = "0x147CE24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002067")]
			[Address(RVA = "0x147CEF4", Offset = "0x147CEF4", VA = "0x147CEF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x147AA28", Offset = "0x147AA28", VA = "0x147AA28")]
		[DebuggerHidden]
		public <CorotinaAnimacionDesaparicion>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x147CA3C", Offset = "0x147CA3C", VA = "0x147CA3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x147CA50", Offset = "0x147CA50", VA = "0x147CA50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x147CE54", Offset = "0x147CE54", VA = "0x147CE54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E3BC", Offset = "0x87E3BC")]
	private sealed class <CorotinaSiguientedestino>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControladorNaveAdorno <>4__this;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14B")]
		public int i;

		[Token(Token = "0x170002E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600206B")]
			[Address(RVA = "0x147D10C", Offset = "0x147D10C", VA = "0x147D10C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600206D")]
			[Address(RVA = "0x147D1DC", Offset = "0x147D1DC", VA = "0x147D1DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x147BCD8", Offset = "0x147BCD8", VA = "0x147BCD8")]
		[DebuggerHidden]
		public <CorotinaSiguientedestino>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x147CF24", Offset = "0x147CF24", VA = "0x147CF24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x147CF38", Offset = "0x147CF38", VA = "0x147CF38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x147D13C", Offset = "0x147D13C", VA = "0x147D13C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF144")]
	[SerializeField]
	private Vector3 areaSize;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float velocidadRotacion;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Nave[] naves;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 direccionObjetivo;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
	private int direccionMovimiento;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int ticksSubiendoArtificialmente;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF154")]
	public bool variarDireccionDeMovimiento;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x147A924", Offset = "0x147A924", VA = "0x147A924")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89DD8C", Offset = "0x89DD8C")]
	public IEnumerator CorotinaAnimacionDesaparicion(Nave nave)
	{
		return null;
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x147AA70", Offset = "0x147AA70", VA = "0x147AA70")]
	private void Start()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x147AB30", Offset = "0x147AB30", VA = "0x147AB30")]
	private void CalcularSiguienteDestino(int indexNave)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x147BBF4", Offset = "0x147BBF4", VA = "0x147BBF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89DE3C", Offset = "0x89DE3C")]
	public IEnumerator CorotinaSiguientedestino(int i)
	{
		return null;
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x147BD20", Offset = "0x147BD20", VA = "0x147BD20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x147C938", Offset = "0x147C938", VA = "0x147C938")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x147C9E0", Offset = "0x147C9E0", VA = "0x147C9E0")]
	public ControladorNaveAdorno()
	{
	}
}
[Token(Token = "0x200000F")]
public class RotacionEnCadena : MonoBehaviour
{
	[Token(Token = "0x2000441")]
	public enum SituacionDelJugador
	{
		[Token(Token = "0x40024AE")]
		desconocido,
		[Token(Token = "0x40024AF")]
		cerca,
		[Token(Token = "0x40024B0")]
		lejos
	}

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public List<Transform> partes;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF184")]
	private Vector3[] escalaInicialPartes;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float coldDownRotacion;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float VelocidadLerpEscalaRotacion;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float velocidadMovimiento;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
	public float distanciaEntreObjetos;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool puedoGirar;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF194")]
	private float tGrioPrincipal;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float ultimaVezQueCambie;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion giroDestino;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float maximaEscala;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
	public Transform objetoQueSigo;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool escalaUniforme;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF1A4")]
	public bool sinRotacion;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int distanciaAlaQueTengoQueActivarme;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 posicion;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int ticksSinActualizar;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
	public SituacionDelJugador situacionDelJugador;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x11F7348", Offset = "0x11F7348", VA = "0x11F7348")]
	private void Start()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x11F7538", Offset = "0x11F7538", VA = "0x11F7538")]
	private void Update()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x11F8790", Offset = "0x11F8790", VA = "0x11F8790")]
	public RotacionEnCadena()
	{
	}
}
[Token(Token = "0x2000010")]
public class EfectoDesaparecer : MonoBehaviour
{
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E3F8", Offset = "0x87E3F8")]
	private sealed class <HacerEfectoDesaparecer>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
		private int <>1__state;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF204")]
		public EfectoDesaparecer <>4__this;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool rapido;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <t>5__2;

		[Token(Token = "0x170002E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002071")]
			[Address(RVA = "0x12D6618", Offset = "0x12D6618", VA = "0x12D6618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002073")]
			[Address(RVA = "0x12D66E8", Offset = "0x12D66E8", VA = "0x12D66E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x12D45E8", Offset = "0x12D45E8", VA = "0x12D45E8")]
		[DebuggerHidden]
		public <HacerEfectoDesaparecer>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x12D54DC", Offset = "0x12D54DC", VA = "0x12D54DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x12D54F0", Offset = "0x12D54F0", VA = "0x12D54F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x12D6648", Offset = "0x12D6648", VA = "0x12D6648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E434", Offset = "0x87E434")]
	private sealed class <HacerEfectoAparecer>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x193")]
		private object <>2__current;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public EfectoDesaparecer <>4__this;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF214")]
		public bool deleteTexturaBase;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material <matActual>5__2;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <t>5__3;

		[Token(Token = "0x170002EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002077")]
			[Address(RVA = "0x12D53DC", Offset = "0x12D53DC", VA = "0x12D53DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002079")]
			[Address(RVA = "0x12D54AC", Offset = "0x12D54AC", VA = "0x12D54AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x12D4630", Offset = "0x12D4630", VA = "0x12D4630")]
		[DebuggerHidden]
		public <HacerEfectoAparecer>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x12D4794", Offset = "0x12D4794", VA = "0x12D4794", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x12D47A8", Offset = "0x12D47A8", VA = "0x12D47A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x12D540C", Offset = "0x12D540C", VA = "0x12D540C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Texture texturaSlice;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	public Renderer[] renderers;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject[] objetosQueApagarDirectamente;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF1C4")]
	public bool sinDestruir;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool sinTiempoLento;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool usarTexturaNivel;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool hacerEfectoVerde;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
	[HideInInspector]
	public bool efectoEnSala;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool autoGetRender;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF1D4")]
	public GameObject efectoDesaparecerPrefab;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Shader shaderDesaparecer;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture texturaSliceDefault;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture myText;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
	public bool esferaEstaDesapareciendo;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ParticleSystem particulasExplosionEsfera;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF1E4")]
	public bool fueraDePool;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float velocidadAparicion;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float velocidadDesaparicion;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Bola bola;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x183")]
	private bool porAparecer;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool apagar;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF1F4")]
	private Coroutine aparecerCor;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine efectoYDestruirObjeto;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Material> materiales;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Material> startMaterials;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x12D1250", Offset = "0x12D1250", VA = "0x12D1250")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x12D1264", Offset = "0x12D1264", VA = "0x12D1264")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x12D16B0", Offset = "0x12D16B0", VA = "0x12D16B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x12D1E84", Offset = "0x12D1E84", VA = "0x12D1E84")]
	public void Aparecer(bool blackTexture = false, bool deleteTexturaBase = false)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x12D3098", Offset = "0x12D3098", VA = "0x12D3098")]
	public void Desaparecer(bool rapido = false)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x12D44F0", Offset = "0x12D44F0", VA = "0x12D44F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89DEEC", Offset = "0x89DEEC")]
	private IEnumerator HacerEfectoDesaparecer(bool rapido = false)
	{
		return null;
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x12D2FA0", Offset = "0x12D2FA0", VA = "0x12D2FA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89DF9C", Offset = "0x89DF9C")]
	private IEnumerator HacerEfectoAparecer(bool deleteTexturaBase = false)
	{
		return null;
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x12D4678", Offset = "0x12D4678", VA = "0x12D4678")]
	public EfectoDesaparecer()
	{
	}
}
[Token(Token = "0x2000011")]
public class EfectoDesaparecerEscudo : MonoBehaviour
{
	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E470", Offset = "0x87E470")]
	private sealed class <HacerEfectoAparecerEscudo>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF224")]
		private object <>2__current;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EfectoDesaparecerEscudo <>4__this;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <t>5__2;

		[Token(Token = "0x170002EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0x12D6F48", Offset = "0x12D6F48", VA = "0x12D6F48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600207F")]
			[Address(RVA = "0x12D7018", Offset = "0x12D7018", VA = "0x12D7018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x12D69AC", Offset = "0x12D69AC", VA = "0x12D69AC")]
		[DebuggerHidden]
		public <HacerEfectoAparecerEscudo>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x12D6BE8", Offset = "0x12D6BE8", VA = "0x12D6BE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x12D6BFC", Offset = "0x12D6BFC", VA = "0x12D6BFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x12D6F78", Offset = "0x12D6F78", VA = "0x12D6F78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer mRenderer;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
	private Coroutine aparecerEscudoCor;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x12D6718", Offset = "0x12D6718", VA = "0x12D6718")]
	public void AparecerEscudo()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x12D68F0", Offset = "0x12D68F0", VA = "0x12D68F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89E04C", Offset = "0x89E04C")]
	private IEnumerator HacerEfectoAparecerEscudo()
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x12D69F4", Offset = "0x12D69F4", VA = "0x12D69F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x12D6BB8", Offset = "0x12D6BB8", VA = "0x12D6BB8")]
	public EfectoDesaparecerEscudo()
	{
	}
}
[Token(Token = "0x2000012")]
public static class ME_ColorHelper
{
	[Token(Token = "0x2000445")]
	public struct HSBColor
	{
		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float H;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF224")]
		public float S;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float B;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float A;

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xAAFB74", Offset = "0xAAFB74", VA = "0xAAFB74")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x40000A7")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A3")]
	private static string[] colorProperties;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x174A4AC", Offset = "0x174A4AC", VA = "0x174A4AC")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x174AB7C", Offset = "0x174AB7C", VA = "0x174AB7C")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x174B214", Offset = "0x174B214", VA = "0x174B214")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x174B520", Offset = "0x174B520", VA = "0x174B520")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x174D3D0", Offset = "0x174D3D0", VA = "0x174D3D0")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x174D564", Offset = "0x174D564", VA = "0x174D564")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x2000013")]
public class ME_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material Material;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AB")]
	public bool IsFirstMaterial;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x174D9C0", Offset = "0x174D9C0", VA = "0x174D9C0")]
	public ME_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x2000014")]
[ExecuteInEditMode]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject MeshObject;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF244")]
	public Color Color;

	[Token(Token = "0x40000AD")]
	private const string materialName = "MeshEffect";

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Material[]> rendererMaterials;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Material[]> skinnedMaterials;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B3")]
	private Color oldColor;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1402E7C", Offset = "0x1402E7C", VA = "0x1402E7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1402F0C", Offset = "0x1402F0C", VA = "0x1402F0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1403028", Offset = "0x1403028", VA = "0x1403028")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x14031E0", Offset = "0x14031E0", VA = "0x14031E0")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1403398", Offset = "0x1403398", VA = "0x1403398")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x140419C", Offset = "0x140419C", VA = "0x140419C")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1403540", Offset = "0x1403540", VA = "0x1403540")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1403D3C", Offset = "0x1403D3C", VA = "0x1403D3C")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x14043EC", Offset = "0x14043EC", VA = "0x14043EC")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, ME_MeshMaterialEffect meshMatEffect)
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x140471C", Offset = "0x140471C", VA = "0x140471C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1405000", Offset = "0x1405000", VA = "0x1405000")]
	private void Eliminar()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x14050F8", Offset = "0x14050F8", VA = "0x14050F8")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87A288", Offset = "0x87A288")]
public class PartidaSync : MonoBehaviourPunCallbacks, IPunObservable
{
	[Token(Token = "0x2000446")]
	public class Jugador
	{
		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string nombre;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int idJugador;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EB")]
		public int idPhotonObjetoPlayer;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public int idJuego;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF2C4")]
		public bool isMaster;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool soyJugador;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float escalaTiempoJugador;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool estaMuerto;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F3")]
		public int equipo;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public int puntos;

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x1178924", Offset = "0x1178924", VA = "0x1178924")]
		public Jugador(string nombre_, int idJugador_, int idPhotonObjetoPlayer_, int idJuego_, bool master, bool soyJugador_, bool estaMuerto_, int equipo_, int puntos)
		{
		}
	}

	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E4AC", Offset = "0x87E4AC")]
	private sealed class <EsperarAPlayer>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF2D4")]
		private int <>1__state;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PartidaSync <>4__this;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int numeroJuegoAsignado;

		[Token(Token = "0x170002EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x118814C", Offset = "0x118814C", VA = "0x118814C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002087")]
			[Address(RVA = "0x118821C", Offset = "0x118821C", VA = "0x118821C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x117B628", Offset = "0x117B628", VA = "0x117B628")]
		[DebuggerHidden]
		public <EsperarAPlayer>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x1187A18", Offset = "0x1187A18", VA = "0x1187A18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x1187A2C", Offset = "0x1187A2C", VA = "0x1187A2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x118817C", Offset = "0x118817C", VA = "0x118817C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E4E8", Offset = "0x87E4E8")]
	private sealed class <Reinicio>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FB")]
		private int <>1__state;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF2E4")]
		public PartidaSync <>4__this;

		[Token(Token = "0x170002F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x1188984", Offset = "0x1188984", VA = "0x1188984", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600208D")]
			[Address(RVA = "0x1188A54", Offset = "0x1188A54", VA = "0x1188A54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x1184C0C", Offset = "0x1184C0C", VA = "0x1184C0C")]
		[DebuggerHidden]
		public <Reinicio>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x118824C", Offset = "0x118824C", VA = "0x118824C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x1188260", Offset = "0x1188260", VA = "0x1188260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x11889B4", Offset = "0x11889B4", VA = "0x11889B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static PartidaSync instance;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF254")]
	private bool soyElMasterClient;

	[Token(Token = "0x40000B3")]
	private const int NUM_MAX_JUGADORES_ONLINE = 8;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int miIdPhotonObjetoPlayer;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<SyncPelota> pelotasEncendidas;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
	[HideInInspector]
	public int numPlayersPreparados;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Dictionary<int, Jugador> jugadores;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF264")]
	public Jugador miJugador;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<SyncPelota> pelotasSync;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int puntuacionEquipo1;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int puntuacionEquipo2;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C3")]
	public int MAXPARTIDASCOMPETITIVO;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Transform playerObjetivo;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF274")]
	private float tiempoSinCambiar;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool daIgualQueMasterSeDesconecte;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<int, GameObject> goJugadores;

	[Token(Token = "0x40000C1")]
	private const string RPC_IniciaPartida = "InicializarPartidaPUN";

	[Token(Token = "0x40000C2")]
	private const string RPC_MasterEstosSonMisDatos = "MasterEstosSonMisDatosPUN";

	[Token(Token = "0x40000C3")]
	private const string RPC_Muerte = "MuertePUN";

	[Token(Token = "0x40000C4")]
	private const string RPC_ComunicarMiMuerte = "ComunicarMiMuertePUN";

	[Token(Token = "0x40000C5")]
	private const string RPC_ClienteHasDestruidoUnaEsfera = "ClienteHasDestruidoUnaEsferaPUN";

	[Token(Token = "0x40000C6")]
	private const string RPC_ClienteHazRebotarElGancho = "ClienteHazRebotarElGanchoPUN";

	[Token(Token = "0x40000C7")]
	private const string RPC_MasterHeDestruidoUnaEsfera = "MasterHeDestruidoUnaEsferaPUN";

	[Token(Token = "0x40000C8")]
	private const string RPC_MasterHeDestruidoUnEscudo = "MasterHeDestruidoUnEscudoPUN";

	[Token(Token = "0x40000C9")]
	private const string RPC_ClienteATuBalaLeQuedanXUsos = "ClienteATuBalaLeQuedanXUsosPUN";

	[Token(Token = "0x40000CA")]
	private const string RPC_MasterHeDadoAUnaMina = "MasterHeDadoAUnaMinaPUN";

	[Token(Token = "0x40000CB")]
	private const string RPC_RefrescarListaJugadores = "RefrescarListaJugadoresPUN";

	[Token(Token = "0x40000CC")]
	private const string RPC_MasterHeCogidoLasPistolas = "MasterHeCogidoLasPistolasPUN";

	[Token(Token = "0x40000CD")]
	private const string RPC_QueEmpieceElJuego = "QueEmpieceElJuegoPUN";

	[Token(Token = "0x40000CE")]
	private const string RPC_ClientesPasadDeNivel = "ClientesPasadDeNivelPUN";

	[Token(Token = "0x40000CF")]
	private const string RPC_QuitarTutoPowerUp = "QuitarTutoPowerUpPUN";

	[Token(Token = "0x40000D0")]
	private const string RPC_ActivarPowerUp = "ActivarPowerUpPUN";

	[Token(Token = "0x40000D1")]
	private const string RPC_EstamosTodosMuertos = "EstamosTodosMuertosPUN";

	[Token(Token = "0x40000D2")]
	private const string RPC_Reiniciar = "ReiniciarPUN";

	[Token(Token = "0x40000D3")]
	private const string RPC_MasterReinicia = "MasterReiniciaPUN";

	[Token(Token = "0x40000D4")]
	private const string RPC_ArenaAcabada = "PartidaArenaAcabadaPUN";

	[Token(Token = "0x40000D5")]
	private const string RPC_MasterEstamosTodosMuertos = "MasterEstamosTodosMuertosPUN";

	[Token(Token = "0x40000D6")]
	private const string RPC_Pausad = "PausadPUN";

	[Token(Token = "0x40000D7")]
	private const string RPC_TenemosEquipoGanador = "TenemosEquipoGanadorPUN";

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1178060", Offset = "0x1178060", VA = "0x1178060")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1178B10", Offset = "0x1178B10", VA = "0x1178B10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1178B24", Offset = "0x1178B24", VA = "0x1178B24")]
	public Transform GetPlayerObjetivo()
	{
		return null;
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1179874", Offset = "0x1179874", VA = "0x1179874", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x117A3B4", Offset = "0x117A3B4", VA = "0x117A3B4", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x117A6C0", Offset = "0x117A6C0", VA = "0x117A6C0")]
	public GameObject DameJugadorOnline(int idObjJugador)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x117AA4C", Offset = "0x117AA4C", VA = "0x117AA4C", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x117ACC8", Offset = "0x117ACC8", VA = "0x117ACC8")]
	public int GetIdJuegoSegunIdPhotonPlayer(int idPlayer)
	{
		return default(int);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x117A0F0", Offset = "0x117A0F0", VA = "0x117A0F0")]
	private void IniciarPartida(Photon.Realtime.Player newPlayer, int numeroJuegoAsignado)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x117B130", Offset = "0x117B130", VA = "0x117B130")]
	[PunRPC]
	private void InicializarPartidaPUN(int numeroJuegoAsignado, int paisActual, int numJugadores)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x117B4EC", Offset = "0x117B4EC", VA = "0x117B4EC")]
	private void MasterEstosSonMisDatos(int numeroJuegoAsignado)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x117B544", Offset = "0x117B544", VA = "0x117B544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89E138", Offset = "0x89E138")]
	private IEnumerator EsperarAPlayer(int numeroJuegoAsignado)
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x117B670", Offset = "0x117B670", VA = "0x117B670")]
	[PunRPC]
	private void MasterEstosSonMisDatosPUN(string nombre, int numeroJuegoAsignado, int numeroidPhotonObjetoPlayer)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x117D698", Offset = "0x117D698", VA = "0x117D698")]
	public void ClienteMuerete(int numeroJuegoAsignado, int idPhotonObjetoMuerte = -1)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x117D9DC", Offset = "0x117D9DC", VA = "0x117D9DC")]
	[PunRPC]
	private void MuertePUN(int numeroJuegoAsignado)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x117EC2C", Offset = "0x117EC2C", VA = "0x117EC2C")]
	public void ComunicarMiMuerte(int keyJuego, int idPhotonObjetoMuerte = -1)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x117EDD4", Offset = "0x117EDD4", VA = "0x117EDD4")]
	[PunRPC]
	private void ComunicarMiMuertePUN(int keyJuego, int idPhotonObjetoMuerte)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x117F04C", Offset = "0x117F04C", VA = "0x117F04C")]
	public void ClienteHasDestruidoUnaEsfera(Photon.Realtime.Player cliente, bool armaDerecha, bool rebote, int puntos)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x117F234", Offset = "0x117F234", VA = "0x117F234")]
	[PunRPC]
	private void ClienteHasDestruidoUnaEsferaPUN(bool armaDerecha, bool rebote)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1180078", Offset = "0x1180078", VA = "0x1180078")]
	public void ClienteHazRebotarElGancho(Photon.Realtime.Player cliente, bool armaDerecha)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x11801E0", Offset = "0x11801E0", VA = "0x11801E0")]
	[PunRPC]
	private void ClienteHazRebotarElGanchoPUN(bool armaDerecha)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1180828", Offset = "0x1180828", VA = "0x1180828")]
	public void MasterHeDestruidoUnaEsfera(int idPhotonEsferaDestruida, int numJugador, Vector3 velBala)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1180B40", Offset = "0x1180B40", VA = "0x1180B40")]
	[PunRPC]
	private void MasterHeDestruidoUnaEsferaPUN(int idPhotonEsferaDestruida, int numJugador, float xVelBala, float yVelBala, float zVelBala)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1181080", Offset = "0x1181080", VA = "0x1181080")]
	public void MasterHeDestruidoUnEscudo(int idPhotonEsferaDestruida, int numJugador, int numGolpes, int idBala, int idCliente)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1181364", Offset = "0x1181364", VA = "0x1181364")]
	[PunRPC]
	private void MasterHeDestruidoUnEscudoPUN(int idPhotonEsferaDestruida, int numJugador, int numGolpes, int idBala, int idCliente)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1181794", Offset = "0x1181794", VA = "0x1181794")]
	public void ClienteATuBalaLeQuedanXUsos(int idPhotonBala, int numGolpes, int idCliente)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1181A38", Offset = "0x1181A38", VA = "0x1181A38")]
	[PunRPC]
	private void ClienteATuBalaLeQuedanXUsosPUN(int idPhotonBala, int numGolpes)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1181CAC", Offset = "0x1181CAC", VA = "0x1181CAC")]
	public void MasterHeDadoAUnaMina(int idPhotonMina, bool esGancho, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1181FC0", Offset = "0x1181FC0", VA = "0x1181FC0")]
	[PunRPC]
	private void MasterHeDadoAUnaMinaPUN(int idPhotonMina, bool esGancho, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x117BB48", Offset = "0x117BB48", VA = "0x117BB48")]
	public void RefrescarListaJugadores(bool forzarRefresco = false, int idPhotonObjetoMuerte = -1)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1182AB8", Offset = "0x1182AB8", VA = "0x1182AB8")]
	[PunRPC]
	private void RefrescarListaJugadoresPUN(Dictionary<int, string> nombres, Dictionary<int, int> idsJugador, Dictionary<int, int> idsPhotonObjetoPlayer, Dictionary<int, int> masters, Dictionary<int, int> muertos, Dictionary<int, int> equipos, Dictionary<int, int> puntos)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x118354C", Offset = "0x118354C", VA = "0x118354C")]
	public void MasterHeCogidoLasPistolas()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1183618", Offset = "0x1183618", VA = "0x1183618")]
	[PunRPC]
	private void MasterHeCogidoLasPistolasPUN()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x118377C", Offset = "0x118377C", VA = "0x118377C")]
	public void QueEmpieceElJuego()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1183848", Offset = "0x1183848", VA = "0x1183848")]
	[PunRPC]
	private void QueEmpieceElJuegoPUN()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x11838E8", Offset = "0x11838E8", VA = "0x11838E8")]
	public void ClientesPasadDeNivel()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x11839B4", Offset = "0x11839B4", VA = "0x11839B4")]
	[PunRPC]
	private void ClientesPasadDeNivelPUN()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x11839FC", Offset = "0x11839FC", VA = "0x11839FC")]
	public void QuitarTutoPowerUp()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1183AC8", Offset = "0x1183AC8", VA = "0x1183AC8")]
	[PunRPC]
	private void QuitarTutoPowerUpPUN()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1183F00", Offset = "0x1183F00", VA = "0x1183F00")]
	public void ActivarPowerUp(int idPhotonPowUp)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x11840A8", Offset = "0x11840A8", VA = "0x11840A8")]
	[PunRPC]
	private void ActivarPowerUpPUN(int idPhotonPowUp)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1182510", Offset = "0x1182510", VA = "0x1182510")]
	public void EstamosTodosMuertos()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x11843A8", Offset = "0x11843A8", VA = "0x11843A8")]
	[PunRPC]
	private void EstamosTodosMuertosPUN()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1184494", Offset = "0x1184494", VA = "0x1184494")]
	public void Reiniciar()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1184B08", Offset = "0x1184B08", VA = "0x1184B08")]
	[PunRPC]
	private void ReiniciarPUN()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1184B50", Offset = "0x1184B50", VA = "0x1184B50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89E5E4", Offset = "0x89E5E4")]
	private IEnumerator Reinicio()
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1184A3C", Offset = "0x1184A3C", VA = "0x1184A3C")]
	public void MasterReinicia()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1184C54", Offset = "0x1184C54", VA = "0x1184C54")]
	[PunRPC]
	private void MasterReiniciaPUN()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1184C84", Offset = "0x1184C84", VA = "0x1184C84")]
	public void PartidaArenaAcabada()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1184D50", Offset = "0x1184D50", VA = "0x1184D50")]
	[PunRPC]
	private void PartidaArenaAcabadaPUN()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x11842DC", Offset = "0x11842DC", VA = "0x11842DC")]
	public void MasterEstamosTodosMuertos()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1184DEC", Offset = "0x1184DEC", VA = "0x1184DEC")]
	[PunRPC]
	private void MasterEstamosTodosMuertosPUN()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1184E1C", Offset = "0x1184E1C", VA = "0x1184E1C")]
	public void Pausad(bool estado, int idPlayer)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1184FF0", Offset = "0x1184FF0", VA = "0x1184FF0")]
	[PunRPC]
	private void PausadPUN(bool estado, int idPlayer)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1182294", Offset = "0x1182294", VA = "0x1182294")]
	public void TenemosEquipoGanador(int equipoGanador, int idPhotonObjetoMuerte = -1, bool porEliminacionDeBolas = false)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1187684", Offset = "0x1187684", VA = "0x1187684")]
	[PunRPC]
	private void TenemosEquipoGanadorPUN(int equipoGanador, int idPhotonObjetoMuerte, bool porEliminacionDeBolas = false)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1187888", Offset = "0x1187888", VA = "0x1187888")]
	public PartidaSync()
	{
	}
}
[Token(Token = "0x2000016")]
public class MonedaMultiplicador : MonoBehaviour
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMesh cantidadPuntos;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform aro;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem holy;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x203")]
	public ParticleSystem shield;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 vectorAux;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF2F4")]
	public AudioSource aSource;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioClip[] audios;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x131AA2C", Offset = "0x131AA2C", VA = "0x131AA2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x131AA40", Offset = "0x131AA40", VA = "0x131AA40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x131AC50", Offset = "0x131AC50", VA = "0x131AC50")]
	private void Apagar()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x131ACAC", Offset = "0x131ACAC", VA = "0x131ACAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x131AEE4", Offset = "0x131AEE4", VA = "0x131AEE4")]
	public void PonerSonido(int puntos)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x131B1E4", Offset = "0x131B1E4", VA = "0x131B1E4")]
	public MonedaMultiplicador()
	{
	}
}
[Token(Token = "0x2000017")]
public interface INvrGazePointer
{
	[Token(Token = "0x60000B4")]
	void OnGazeEnabled();

	[Token(Token = "0x60000B5")]
	void OnGazeDisabled();

	[Token(Token = "0x60000B6")]
	void OnGazeStart(Camera camera, GameObject targetObject, Vector3 intersectionPosition, bool isInteractive);

	[Token(Token = "0x60000B7")]
	void OnGazeStay(Camera camera, GameObject targetObject, Vector3 intersectionPosition, bool isInteractive);

	[Token(Token = "0x60000B8")]
	void OnGazeExit(Camera camera, GameObject targetObject);

	[Token(Token = "0x60000B9")]
	void OnGazeTriggerStart(Camera camera);

	[Token(Token = "0x60000BA")]
	void OnGazeTriggerEnd(Camera camera);

	[Token(Token = "0x60000BB")]
	void GetPointerRadius(out float innerRadius, out float outerRadius);

	[Token(Token = "0x60000BC")]
	void UpdateStatus();
}
[Token(Token = "0x2000018")]
public interface INvrGazeResponder
{
	[Token(Token = "0x60000BD")]
	void OnGazeEnter();

	[Token(Token = "0x60000BE")]
	void OnGazeExit();

	[Token(Token = "0x60000BF")]
	void OnGazeTrigger();
}
[Token(Token = "0x2000019")]
public interface INibiruJoystickListener
{
	[Token(Token = "0x60000C0")]
	void OnPressL1();

	[Token(Token = "0x60000C1")]
	void OnPressL2();

	[Token(Token = "0x60000C2")]
	void OnPressR1();

	[Token(Token = "0x60000C3")]
	void OnPressR2();

	[Token(Token = "0x60000C4")]
	void OnPressX();

	[Token(Token = "0x60000C5")]
	void OnPressY();

	[Token(Token = "0x60000C6")]
	void OnPressA();

	[Token(Token = "0x60000C7")]
	void OnPressB();

	[Token(Token = "0x60000C8")]
	void OnPressSelect();

	[Token(Token = "0x60000C9")]
	void OnPressStart();

	[Token(Token = "0x60000CA")]
	void OnPressDpadUp();

	[Token(Token = "0x60000CB")]
	void OnPressDpadDown();

	[Token(Token = "0x60000CC")]
	void OnPressDpadLeft();

	[Token(Token = "0x60000CD")]
	void OnPressDpadRight();

	[Token(Token = "0x60000CE")]
	void OnLeftStickX(float axisValue);

	[Token(Token = "0x60000CF")]
	void OnLeftStickY(float axisValue);

	[Token(Token = "0x60000D0")]
	void OnLeftStickDown();

	[Token(Token = "0x60000D1")]
	void OnRightStickX(float axisValue);

	[Token(Token = "0x60000D2")]
	void OnRightStickY(float axisValue);

	[Token(Token = "0x60000D3")]
	void OnRightStickDown();
}
[Token(Token = "0x200001A")]
public class MyFPS : MonoBehaviour
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float updateInterval;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private double lastInterval;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
	private int frames;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float fpss;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1325750", Offset = "0x1325750", VA = "0x1325750")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x13257A4", Offset = "0x13257A4", VA = "0x13257A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x13259A4", Offset = "0x13259A4", VA = "0x13259A4")]
	public MyFPS()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87A338", Offset = "0x87A338")]
public class NoloVR_GraphicRaycaster : GraphicRaycaster
{
	[Token(Token = "0x2000449")]
	private struct VRGraphic
	{
		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF304")]
		public Graphic graphic;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 pointerPosition;
	}

	[Serializable]
	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E524", Offset = "0x87E524")]
	private sealed class <>c
	{
		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21B")]
		public static readonly <>c <>9;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public static Comparison<VRGraphic> <>9__11_0;

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x1563418", Offset = "0x1563418", VA = "0x1563418")]
		public <>c()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x1563448", Offset = "0x1563448", VA = "0x1563448")]
		internal int <Raycast>b__11_0(VRGraphic g1, VRGraphic g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF304")]
	public GameObject raycastSource;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Canvas canvas;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector2 lastKnownPosition;

	[Token(Token = "0x40000E6")]
	private const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	private List<VRGraphic> m_RaycastResults;

	[NonSerialized]
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static readonly List<VRGraphic> s_SortedGraphics;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x1560F4C", Offset = "0x1560F4C", VA = "0x1560F4C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x15614DC", Offset = "0x15614DC", VA = "0x15614DC", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x15623BC", Offset = "0x15623BC", VA = "0x15623BC")]
	private void SetNearestRaycast(ref PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x1562BA4", Offset = "0x1562BA4", VA = "0x1562BA4")]
	private float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x1561740", Offset = "0x1561740", VA = "0x1561740")]
	private void Raycast(Canvas canvas, Camera eventCamera, Ray ray, List<VRGraphic> results)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x1563198", Offset = "0x1563198", VA = "0x1563198")]
	public NoloVR_GraphicRaycaster()
	{
	}
}
[Token(Token = "0x200001C")]
public class NoloVR_InputModule : PointerInputModule
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF324")]
	public List<NoloVR_SimplePointer> pointers;

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x1563520", Offset = "0x1563520", VA = "0x1563520", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x1563550", Offset = "0x1563550", VA = "0x1563550", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x15639EC", Offset = "0x15639EC", VA = "0x15639EC")]
	private List<RaycastResult> CheckRaycasts(NoloVR_SimplePointer pointer)
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x1565634", Offset = "0x1565634", VA = "0x1565634")]
	private bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1565844", Offset = "0x1565844", VA = "0x1565844")]
	private bool NoValidCollision(NoloVR_SimplePointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1565A88", Offset = "0x1565A88", VA = "0x1565A88")]
	private bool IsHovering(NoloVR_SimplePointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x1563C68", Offset = "0x1563C68", VA = "0x1563C68")]
	private void Hover(NoloVR_SimplePointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1564BAC", Offset = "0x1564BAC", VA = "0x1564BAC")]
	private void Click(NoloVR_SimplePointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1565618", Offset = "0x1565618", VA = "0x1565618")]
	private void Scroll(NoloVR_SimplePointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1566090", Offset = "0x1566090", VA = "0x1566090", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x156624C", Offset = "0x156624C", VA = "0x156624C")]
	public NoloVR_InputModule()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87A3E8", Offset = "0x87A3E8")]
public class NoloVR_SimplePointer : MonoBehaviour
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color pointerHitColor;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color pointerMissColor;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material pointerMaterial;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x223")]
	public LayerMask layersToIgnore;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject customPointerCursor;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF334")]
	public float pointerLength;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float pointerThickness;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject pointerHolder;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject pointer;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22B")]
	private GameObject pointerTip;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 pointerTipScale;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF344")]
	[HideInInspector]
	public NoloDeviceType deviceType;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float pointerContactDistance;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RaycastHit pointerContactRaycastHit;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x233")]
	private Transform pointerContactTarget;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 destinationPosition;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF354")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x14000001")]
	public event UIPointerEventHandlerNOLO UIPointerElementEnter
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x19977E4", Offset = "0x19977E4", VA = "0x19977E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89E7C0", Offset = "0x89E7C0")]
		add
		{
		}
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1997930", Offset = "0x1997930", VA = "0x1997930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89E7FC", Offset = "0x89E7FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event UIPointerEventHandlerNOLO UIPointerElementExit
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x1997A7C", Offset = "0x1997A7C", VA = "0x1997A7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89E838", Offset = "0x89E838")]
		add
		{
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x1997BC8", Offset = "0x1997BC8", VA = "0x1997BC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89E874", Offset = "0x89E874")]
		remove
		{
		}
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1995D48", Offset = "0x1995D48", VA = "0x1995D48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1996864", Offset = "0x1996864", VA = "0x1996864")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1995DFC", Offset = "0x1995DFC", VA = "0x1995DFC")]
	private void InitPointer()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1996B20", Offset = "0x1996B20", VA = "0x1996B20")]
	private void PointerActivate(bool state)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x199719C", Offset = "0x199719C", VA = "0x199719C")]
	private void SetPointerTransform(float setLength, float setThicknes)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1996BC4", Offset = "0x1996BC4", VA = "0x1996BC4")]
	private float GetPointerBeamLength(bool hasRayHit, RaycastHit collidedWith)
	{
		return default(float);
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1997500", Offset = "0x1997500", VA = "0x1997500")]
	private void UpdatePointerMaterial(Color color)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x19974EC", Offset = "0x19974EC", VA = "0x19974EC")]
	public void PointerOut()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x19977D0", Offset = "0x19977D0", VA = "0x19977D0")]
	public void PointerIn()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1997D14", Offset = "0x1997D14", VA = "0x1997D14")]
	public bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1997DD0", Offset = "0x1997DD0", VA = "0x1997DD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1997FE4", Offset = "0x1997FE4", VA = "0x1997FE4", Slot = "4")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs_NOLO e)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x19980B4", Offset = "0x19980B4", VA = "0x19980B4", Slot = "5")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs_NOLO e)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1998314", Offset = "0x1998314", VA = "0x1998314")]
	public UIPointerEventArgs_NOLO SetUIPointerEvent(GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs_NOLO);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x19983CC", Offset = "0x19983CC", VA = "0x19983CC")]
	public NoloVR_SimplePointer()
	{
	}
}
[Token(Token = "0x200001E")]
public struct UIPointerEventArgs_NOLO
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22B")]
	public GameObject currentTarget;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public GameObject previousTarget;
}
[Token(Token = "0x200001F")]
public delegate void UIPointerEventHandlerNOLO(object sender, UIPointerEventArgs_NOLO e);
[Token(Token = "0x2000020")]
public class NoloVR_AndroidPlayform : NoloVR_Playform
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF364")]
	private AndroidJavaClass unityPlayer;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AndroidJavaObject currentActivity;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AndroidJavaObject jc;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AndroidJavaObject jo;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x243")]
	private ConnectedStatusCallBackFunc func;

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x155BA00", Offset = "0x155BA00", VA = "0x155BA00", Slot = "4")]
	public override bool InitDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x155B67C", Offset = "0x155B67C", VA = "0x155B67C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x89E8B0", Offset = "0x89E8B0")]
	public static void ConnectedStatusCallBack(int status)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x155C330", Offset = "0x155C330", VA = "0x155C330", Slot = "5")]
	public override void DisconnectDevice()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x155C4BC", Offset = "0x155C4BC", VA = "0x155C4BC", Slot = "6")]
	public override void ReconnectDeviceCallBack()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x155C644", Offset = "0x155C644", VA = "0x155C644", Slot = "7")]
	public override void DisConnectedCallBack()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x155C7CC", Offset = "0x155C7CC", VA = "0x155C7CC", Slot = "8")]
	public override void Authentication(string appKey)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x155CC54", Offset = "0x155CC54", VA = "0x155CC54", Slot = "9")]
	public override void ReportError(string msg)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x155CD5C", Offset = "0x155CD5C", VA = "0x155CD5C", Slot = "10")]
	public override bool IsInstallServer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x155CED4", Offset = "0x155CED4", VA = "0x155CED4", Slot = "11")]
	public override bool IsStartUpServer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x155D04C", Offset = "0x155D04C", VA = "0x155D04C")]
	public NoloVR_AndroidPlayform()
	{
	}
}
[Token(Token = "0x2000021")]
public class NoloVR_OtherPlayform : NoloVR_Playform
{
	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1992C88", Offset = "0x1992C88", VA = "0x1992C88", Slot = "8")]
	public override void Authentication(string appKey)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1992D84", Offset = "0x1992D84", VA = "0x1992D84", Slot = "5")]
	public override void DisconnectDevice()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1992E7C", Offset = "0x1992E7C", VA = "0x1992E7C", Slot = "7")]
	public override void DisConnectedCallBack()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1992F74", Offset = "0x1992F74", VA = "0x1992F74", Slot = "4")]
	public override bool InitDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1993084", Offset = "0x1993084", VA = "0x1993084", Slot = "10")]
	public override bool IsInstallServer()
	{
		return default(bool);
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1993194", Offset = "0x1993194", VA = "0x1993194", Slot = "11")]
	public override bool IsStartUpServer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x19932A4", Offset = "0x19932A4", VA = "0x19932A4", Slot = "6")]
	public override void ReconnectDeviceCallBack()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x199339C", Offset = "0x199339C", VA = "0x199339C", Slot = "9")]
	public override void ReportError(string msg)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x19933B4", Offset = "0x19933B4", VA = "0x19933B4")]
	public NoloVR_OtherPlayform()
	{
	}
}
[Token(Token = "0x2000022")]
public abstract class NoloVR_Playform
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected static NoloError playformError;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF374")]
	protected static bool isAuthentication;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NoloVR_Playform instance;

	[Token(Token = "0x6000113")]
	public abstract bool InitDevice();

	[Token(Token = "0x6000114")]
	public abstract void DisconnectDevice();

	[Token(Token = "0x6000115")]
	public abstract void ReconnectDeviceCallBack();

	[Token(Token = "0x6000116")]
	public abstract void DisConnectedCallBack();

	[Token(Token = "0x6000117")]
	public abstract void Authentication(string appKey);

	[Token(Token = "0x6000118")]
	public abstract void ReportError(string msg);

	[Token(Token = "0x6000119")]
	public abstract bool IsInstallServer();

	[Token(Token = "0x600011A")]
	public abstract bool IsStartUpServer();

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x199349C", Offset = "0x199349C", VA = "0x199349C")]
	protected NoloVR_Playform()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x19900BC", Offset = "0x19900BC", VA = "0x19900BC")]
	public static NoloVR_Playform GetInstance()
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1994A28", Offset = "0x1994A28", VA = "0x1994A28")]
	public NoloError GetPlayformError()
	{
		return default(NoloError);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1994B14", Offset = "0x1994B14", VA = "0x1994B14")]
	public bool GetAuthentication()
	{
		return default(bool);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1994C14", Offset = "0x1994C14", VA = "0x1994C14", Slot = "1")]
	~NoloVR_Playform()
	{
	}
}
[Token(Token = "0x2000023")]
public enum TurnAroundButtonType
{
	[Token(Token = "0x400010A")]
	Null = -1,
	[Token(Token = "0x400010B")]
	Touchpad = 0,
	[Token(Token = "0x400010C")]
	Menu = 2,
	[Token(Token = "0x400010D")]
	Grip = 4
}
[Token(Token = "0x2000024")]
public enum NoloDeviceType
{
	[Token(Token = "0x400010F")]
	Hmd,
	[Token(Token = "0x4000110")]
	LeftController,
	[Token(Token = "0x4000111")]
	RightController,
	[Token(Token = "0x4000112")]
	BaseStation
}
[Token(Token = "0x2000025")]
public enum NoloButtonID
{
	[Token(Token = "0x4000114")]
	Trigger = 0,
	[Token(Token = "0x4000115")]
	TouchPad = 1,
	[Token(Token = "0x4000116")]
	System = 2,
	[Token(Token = "0x4000117")]
	SystemLongPress = 3,
	[Token(Token = "0x4000118")]
	Back = 4,
	[Token(Token = "0x4000119")]
	VolumeDown = 6,
	[Token(Token = "0x400011A")]
	VolumeUp = 7
}
[Token(Token = "0x2000026")]
public enum NoloC1ButtonID
{
	[Token(Token = "0x400011C")]
	Trigger = 0,
	[Token(Token = "0x400011D")]
	TouchPad = 1,
	[Token(Token = "0x400011E")]
	System = 2,
	[Token(Token = "0x400011F")]
	SystemLongPress = 3,
	[Token(Token = "0x4000120")]
	Back = 4,
	[Token(Token = "0x4000121")]
	VolumeDown = 6,
	[Token(Token = "0x4000122")]
	VolumeUp = 7
}
[Token(Token = "0x2000027")]
public enum NoloTouchID
{
	[Token(Token = "0x4000124")]
	TouchPad,
	[Token(Token = "0x4000125")]
	Trigger
}
[Token(Token = "0x2000028")]
public enum NoloError
{
	[Token(Token = "0x4000127")]
	None,
	[Token(Token = "0x4000128")]
	ConnectFail,
	[Token(Token = "0x4000129")]
	NoConnect,
	[Token(Token = "0x400012A")]
	DisConnect,
	[Token(Token = "0x400012B")]
	UnKnow
}
[Token(Token = "0x2000029")]
public enum NoloTrackingStatus
{
	[Token(Token = "0x400012D")]
	NotConnect,
	[Token(Token = "0x400012E")]
	Normal,
	[Token(Token = "0x400012F")]
	OutofRange
}
[Token(Token = "0x200002A")]
public class NoloVR_Plugins
{
	[Token(Token = "0x4000130")]
	public const int trackedDeviceNumber = 4;

	[Token(Token = "0x4000131")]
	public const string noloSDKVersion = "2.0.20";

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1994F90", Offset = "0x1994F90", VA = "0x1994F90")]
	public static string GetNoloSDKVersion()
	{
		return null;
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1995000", Offset = "0x1995000", VA = "0x1995000")]
	public static Nolo_Transform GetPose(int deviceIndex)
	{
		return default(Nolo_Transform);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x199563C", Offset = "0x199563C", VA = "0x199563C")]
	public static Nolo_Transform GetPose(NoloDeviceType type)
	{
		return default(Nolo_Transform);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1995674", Offset = "0x1995674", VA = "0x1995674")]
	public static Nolo_ControllerStates GetControllerStates(int deviceIndex)
	{
		return default(Nolo_ControllerStates);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x19956AC", Offset = "0x19956AC", VA = "0x19956AC")]
	public static Nolo_ControllerStates GetControllerStates(NoloDeviceType type)
	{
		return default(Nolo_ControllerStates);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x19956E4", Offset = "0x19956E4", VA = "0x19956E4")]
	public static int GetElectricity(int deviceIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1995724", Offset = "0x1995724", VA = "0x1995724")]
	public static int GetElectricity(NoloDeviceType type)
	{
		return default(int);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1995764", Offset = "0x1995764", VA = "0x1995764")]
	public static void TriggerHapticPulse(int deviceIndex, int intensity)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x19957AC", Offset = "0x19957AC", VA = "0x19957AC")]
	public static void TriggerHapticPulse(NoloDeviceType type, int intensity)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x19957F4", Offset = "0x19957F4", VA = "0x19957F4")]
	public static bool GetNoloConnectStatus(int deviceIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1995860", Offset = "0x1995860", VA = "0x1995860")]
	public static bool GetNoloConnectStatus(NoloDeviceType type)
	{
		return default(bool);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x19958B4", Offset = "0x19958B4", VA = "0x19958B4")]
	public static int GetTrackModel()
	{
		return default(int);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x19958E4", Offset = "0x19958E4", VA = "0x19958E4")]
	public NoloVR_Plugins()
	{
	}
}
[Token(Token = "0x200002B")]
public class NoloVR_System
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static NoloVR_System instance;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF3EC")]
	public NoloVR_TrackedDevice[] objects;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject VRCamera;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NoloVR_Manager.TrackModel trackModel;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float defaultHeight;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x283")]
	public int realTrackDevices;

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1998544", Offset = "0x1998544", VA = "0x1998544")]
	private NoloVR_System()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x198FEB4", Offset = "0x198FEB4", VA = "0x198FEB4")]
	public static NoloVR_System GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1998634", Offset = "0x1998634", VA = "0x1998634", Slot = "1")]
	~NoloVR_System()
	{
	}
}
[Token(Token = "0x200002C")]
public class BoundaryRegion_Manager : MonoBehaviour
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject baseStation;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF3FC")]
	private bool isOutOfRange;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x14C5110", Offset = "0x14C5110", VA = "0x14C5110")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x14C528C", Offset = "0x14C528C", VA = "0x14C528C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x14C5408", Offset = "0x14C5408", VA = "0x14C5408")]
	private void OutOfRange(params object[] args)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x14C54DC", Offset = "0x14C54DC", VA = "0x14C54DC")]
	private void InRange(params object[] args)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x14C55D0", Offset = "0x14C55D0", VA = "0x14C55D0")]
	public BoundaryRegion_Manager()
	{
	}
}
[Token(Token = "0x200002D")]
public class NoloVR_AppInfo : MonoBehaviour
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string appKey;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x155D134", Offset = "0x155D134", VA = "0x155D134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x155D24C", Offset = "0x155D24C", VA = "0x155D24C")]
	public NoloVR_AppInfo()
	{
	}
}
[Token(Token = "0x200002E")]
public class NoloVR_BaseStation : MonoBehaviour
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool showTrackingBoundary;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x155D27C", Offset = "0x155D27C", VA = "0x155D27C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x155D2CC", Offset = "0x155D2CC", VA = "0x155D2CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x155DF78", Offset = "0x155DF78", VA = "0x155DF78")]
	public NoloVR_BaseStation()
	{
	}
}
[Token(Token = "0x200002F")]
public class NoloVR_Controller
{
	[Token(Token = "0x200044B")]
	public class ButtonMask
	{
		[Token(Token = "0x6002091")]
		[Address(RVA = "0x155F430", Offset = "0x155F430", VA = "0x155F430")]
		public static uint GetButtonMask(NoloButtonID button)
		{
			return default(uint);
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x155F44C", Offset = "0x155F44C", VA = "0x155F44C")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x200044C")]
	public class TouchMask
	{
		[Token(Token = "0x6002093")]
		[Address(RVA = "0x1560A3C", Offset = "0x1560A3C", VA = "0x1560A3C")]
		public static uint GetTouchMask(NoloTouchID touch)
		{
			return default(uint);
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x1560F1C", Offset = "0x1560F1C", VA = "0x1560F1C")]
		public TouchMask()
		{
		}
	}

	[Token(Token = "0x200044D")]
	public class NoloDevice
	{
		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D394", Offset = "0x89D394")]
		private int <index>k__BackingField;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Nolo_ControllerStates controllerStates;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x293")]
		private Nolo_ControllerStates preControllerStates;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private Nolo_Transform pose;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF41C")]
		private bool connectStatus;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int electricity;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentRealTrackDevices;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int lastRealTrackDevices;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29B")]
		private int currentReceiveCount;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int maxReceiveCount;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF42C")]
		private bool isGetDevices;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int preFrame;

		[Token(Token = "0x170002F2")]
		public int index
		{
			[Token(Token = "0x6002096")]
			[Address(RVA = "0x155F47C", Offset = "0x155F47C", VA = "0x155F47C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AEBE8", Offset = "0x8AEBE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x155F4AC", Offset = "0x155F4AC", VA = "0x155F4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AEC24", Offset = "0x8AEC24")]
			private set
			{
			}
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x155DFA8", Offset = "0x155DFA8", VA = "0x155DFA8")]
		public NoloDevice(int num)
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x155DF38", Offset = "0x155DF38", VA = "0x155DF38")]
		public Nolo_Transform GetPose()
		{
			return default(Nolo_Transform);
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x15602A8", Offset = "0x15602A8", VA = "0x15602A8")]
		public int GetNoloDeviceElectricity()
		{
			return default(int);
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x15602E8", Offset = "0x15602E8", VA = "0x15602E8")]
		public bool GetNoloDeviceConnectStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x156033C", Offset = "0x156033C", VA = "0x156033C")]
		public bool GetNoloButtonPressed(uint buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x15603E8", Offset = "0x15603E8", VA = "0x15603E8")]
		public bool GetNoloButtonDown(uint buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x15604DC", Offset = "0x15604DC", VA = "0x15604DC")]
		public bool GetNoloButtonUp(uint buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x15605E4", Offset = "0x15605E4", VA = "0x15605E4")]
		public bool GetNoloButtonPressed(NoloButtonID button)
		{
			return default(bool);
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x1560650", Offset = "0x1560650", VA = "0x1560650")]
		public bool GetNoloButtonDown(NoloButtonID button)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x15606BC", Offset = "0x15606BC", VA = "0x15606BC")]
		public bool GetNoloButtonUp(NoloButtonID button)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x1560728", Offset = "0x1560728", VA = "0x1560728")]
		public bool GetNoloTouchPressed(uint touchMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x15607D4", Offset = "0x15607D4", VA = "0x15607D4")]
		public bool GetNoloTouchDown(uint touchMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x15608C8", Offset = "0x15608C8", VA = "0x15608C8")]
		public bool GetNoloTouchUp(uint touchMask)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x15609D0", Offset = "0x15609D0", VA = "0x15609D0")]
		public bool GetNoloTouchPressed(NoloTouchID touch)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x1560B28", Offset = "0x1560B28", VA = "0x1560B28")]
		public bool GetNoloTouchDown(NoloTouchID touch)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x1560B94", Offset = "0x1560B94", VA = "0x1560B94")]
		public bool GetNoloTouchUp(NoloTouchID touch)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x1560C00", Offset = "0x1560C00", VA = "0x1560C00")]
		public Vector2 GetAxis(NoloTouchID axisIndex = NoloTouchID.TouchPad)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x155F4E4", Offset = "0x155F4E4", VA = "0x155F4E4")]
		public void Update()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x1560DE0", Offset = "0x1560DE0", VA = "0x1560DE0")]
		public void TriggerHapticPulse(int intensity)
		{
		}
	}

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isTurnAround;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28B")]
	private static Vector3 recPosition;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static NoloDevice[] devices;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF40C")]
	private static float real_yaw;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float PI;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x155DB18", Offset = "0x155DB18", VA = "0x155DB18")]
	public static NoloDevice GetDevice(NoloDeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x155E01C", Offset = "0x155E01C", VA = "0x155E01C")]
	public static NoloDevice GetDevice(NoloVR_TrackedDevice trackedObject)
	{
		return null;
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x155E128", Offset = "0x155E128", VA = "0x155E128")]
	private static void TurnAroundEvents(params object[] args)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x155E268", Offset = "0x155E268", VA = "0x155E268")]
	private static void RecenterLeftEvents(params object[] args)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x155E970", Offset = "0x155E970", VA = "0x155E970")]
	private static void RecenterRightEvents(params object[] args)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x155F078", Offset = "0x155F078", VA = "0x155F078")]
	public static void Listen()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x155F1A8", Offset = "0x155F1A8", VA = "0x155F1A8")]
	public static void Remove()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x155F2D8", Offset = "0x155F2D8", VA = "0x155F2D8")]
	public NoloVR_Controller()
	{
	}
}
[Token(Token = "0x2000030")]
public class NoloVR_Manager : MonoBehaviour
{
	[Token(Token = "0x200044E")]
	public enum TrackModel
	{
		[Token(Token = "0x40024E8")]
		Track_3dof = 3,
		[Token(Token = "0x40024E9")]
		Track_6dof = 6
	}

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string appKey;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject VRCamera;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A3")]
	public TrackModel gameTrackModel;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool useDefaultHeight;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF43C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886EC4", Offset = "0x886EC4")]
	public float defaultHeight;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject leftController;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject rightController;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public NoloVR_TrackedDevice[] objects;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x198FB24", Offset = "0x198FB24", VA = "0x198FB24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x198FC3C", Offset = "0x198FC3C", VA = "0x198FC3C")]
	public void DoAwake()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x198FFA4", Offset = "0x198FFA4", VA = "0x198FFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x19902F0", Offset = "0x19902F0", VA = "0x19902F0")]
	public void OnClickButton()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1990490", Offset = "0x1990490", VA = "0x1990490")]
	private void Update()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x19904A4", Offset = "0x19904A4", VA = "0x19904A4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x199063C", Offset = "0x199063C", VA = "0x199063C")]
	public NoloVR_Manager()
	{
	}
}
[Token(Token = "0x2000031")]
public class NoloVR_Model : MonoBehaviour
{
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private NoloVR_TrackedDevice trackedDevice;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform touchpad;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform menu;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B3")]
	private Transform system;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Transform grip_left;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF45C")]
	private Transform grip_right;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform trigger;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x19906B4", Offset = "0x19906B4", VA = "0x19906B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x19908F8", Offset = "0x19908F8", VA = "0x19908F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x199090C", Offset = "0x199090C", VA = "0x199090C")]
	private void TouchPad_Down()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x19909B0", Offset = "0x19909B0", VA = "0x19909B0")]
	private void TouchPad_Up()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1990ABC", Offset = "0x1990ABC", VA = "0x1990ABC")]
	private void Menu_Down()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1990B60", Offset = "0x1990B60", VA = "0x1990B60")]
	private void Menu_Up()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1990C6C", Offset = "0x1990C6C", VA = "0x1990C6C")]
	private void System_Down()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1990D10", Offset = "0x1990D10", VA = "0x1990D10")]
	private void System_Up()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1990E1C", Offset = "0x1990E1C", VA = "0x1990E1C")]
	private void Trigger_Down()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1990FB8", Offset = "0x1990FB8", VA = "0x1990FB8")]
	private void Trigger_Up()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x199117C", Offset = "0x199117C", VA = "0x199117C")]
	private void Grip_Down()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x19912A0", Offset = "0x19912A0", VA = "0x19912A0")]
	private void Grip_Up()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1991414", Offset = "0x1991414", VA = "0x1991414")]
	public NoloVR_Model()
	{
	}
}
[Token(Token = "0x2000032")]
public class NoloVR_Model_C1 : MonoBehaviour
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private NoloVR_TrackedDevice trackedDevice;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform touchpad;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BB")]
	private Transform back;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Transform system;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF46C")]
	private Transform trigger;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform volume;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1991444", Offset = "0x1991444", VA = "0x1991444")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1991640", Offset = "0x1991640", VA = "0x1991640")]
	private void Update()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1991654", Offset = "0x1991654", VA = "0x1991654")]
	private void TouchPad_Down()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x19916F8", Offset = "0x19916F8", VA = "0x19916F8")]
	private void TouchPad_Up()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1991804", Offset = "0x1991804", VA = "0x1991804")]
	private void Back_Down()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x19918A8", Offset = "0x19918A8", VA = "0x19918A8")]
	private void Back_Up()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x19919B4", Offset = "0x19919B4", VA = "0x19919B4")]
	private void System_Down()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1991A58", Offset = "0x1991A58", VA = "0x1991A58")]
	private void System_Up()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1991B64", Offset = "0x1991B64", VA = "0x1991B64")]
	private void Trigger_Down()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1991D0C", Offset = "0x1991D0C", VA = "0x1991D0C")]
	private void Trigger_Up()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1991ED0", Offset = "0x1991ED0", VA = "0x1991ED0")]
	private void VolumeDown_Down()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x19920A4", Offset = "0x19920A4", VA = "0x19920A4")]
	private void VolumeUp_Down()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1992278", Offset = "0x1992278", VA = "0x1992278")]
	private void Volume_Up()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x199243C", Offset = "0x199243C", VA = "0x199243C")]
	public NoloVR_Model_C1()
	{
	}
}
[Token(Token = "0x2000033")]
public class NoloVR_Model_Manager : MonoBehaviour
{
	[Token(Token = "0x6000166")]
	[Address(RVA = "0x199246C", Offset = "0x199246C", VA = "0x199246C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1992598", Offset = "0x1992598", VA = "0x1992598")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x19926C4", Offset = "0x19926C4", VA = "0x19926C4")]
	public void GetTrackModel(params object[] args)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1992C58", Offset = "0x1992C58", VA = "0x1992C58")]
	public NoloVR_Model_Manager()
	{
	}
}
[Token(Token = "0x2000034")]
public class NoloVR_TrackedDevice : MonoBehaviour
{
	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NoloDeviceType deviceType;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject vrCamera;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x199B1BC", Offset = "0x199B1BC", VA = "0x199B1BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x199B20C", Offset = "0x199B20C", VA = "0x199B20C")]
	private void Update()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x199B23C", Offset = "0x199B23C", VA = "0x199B23C")]
	private void UpdatePose()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x199BDF0", Offset = "0x199BDF0", VA = "0x199BDF0")]
	public NoloVR_TrackedDevice()
	{
	}
}
[Token(Token = "0x2000035")]
public enum NoloLogType
{
	[Token(Token = "0x4000159")]
	Console,
	[Token(Token = "0x400015A")]
	Screen
}
[Token(Token = "0x2000036")]
public class NoloVR_Logs : MonoBehaviour
{
	[Token(Token = "0x200044F")]
	private struct NoloLog
	{
		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public string logMessage;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF48C")]
		public string stackTrace;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LogType type;
	}

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool drawScreen;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private NoloLogType logType;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly List<NoloLog> logs;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CB")]
	private Vector2 screenPosition;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool collapse;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF48C")]
	private static readonly Dictionary<LogType, Color> logTypeColors;

	[Token(Token = "0x4000161")]
	private const int margin = 20;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly GUIContent clearLabel;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly GUIContent collapseLabel;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D3")]
	private Rect windowRect;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1566304", Offset = "0x1566304", VA = "0x1566304")]
	public void SetLogType(NoloLogType type)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x156633C", Offset = "0x156633C", VA = "0x156633C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x15663B8", Offset = "0x15663B8", VA = "0x15663B8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x15664F8", Offset = "0x15664F8", VA = "0x15664F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x15665AC", Offset = "0x15665AC", VA = "0x15665AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1566660", Offset = "0x1566660", VA = "0x1566660")]
	private void HandleLog(string message, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x15667A8", Offset = "0x15667A8", VA = "0x15667A8")]
	private void DrawConsoleWindow(int windowID)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x15667EC", Offset = "0x15667EC", VA = "0x15667EC")]
	private void DrawLogsList()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x1566C90", Offset = "0x1566C90", VA = "0x1566C90")]
	private void DrawToolbar()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x1566F54", Offset = "0x1566F54", VA = "0x1566F54")]
	public NoloVR_Logs()
	{
	}
}
[Token(Token = "0x2000037")]
[ExecuteInEditMode]
public class NoloVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x2000450")]
	public enum PlaySize
	{
		[Token(Token = "0x40024EE")]
		_300x500,
		[Token(Token = "0x40024EF")]
		_250x400,
		[Token(Token = "0x40024F0")]
		_200x350
	}

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float height;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PlaySize size;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DB")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private System.Collections.Hashtable values;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x19935C4", Offset = "0x19935C4", VA = "0x19935C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x19935F4", Offset = "0x19935F4", VA = "0x19935F4")]
	private void GetVectors()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1993FA4", Offset = "0x1993FA4", VA = "0x1993FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1994410", Offset = "0x1994410", VA = "0x1994410")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x19949E4", Offset = "0x19949E4", VA = "0x19949E4")]
	public NoloVR_PlayArea()
	{
	}
}
[Token(Token = "0x2000038")]
public struct Nolo_Transform
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D3")]
	public Vector3 pos;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public Quaternion rot;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF4AC")]
	public Vector3 vecVelocity;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 vecAngularVelocity;

	[Token(Token = "0x1700000E")]
	public static Nolo_Transform identity
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x199C2DC", Offset = "0x199C2DC", VA = "0x199C2DC")]
		get
		{
			return default(Nolo_Transform);
		}
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xB38B0C", Offset = "0xB38B0C", VA = "0xB38B0C")]
	public Nolo_Transform(Nolo_Pose pose)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xB38C14", Offset = "0xB38C14", VA = "0xB38C14")]
	public Nolo_Transform(Vector3 pos, Quaternion rot, Vector3 vecVelocity, Vector3 vecAngularVelocity)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xB38DD4", Offset = "0xB38DD4", VA = "0xB38DD4")]
	public Nolo_Transform(NVector3 pos, NQuaternion rot, NVector3 vecVelocity, NVector3 vecAngularVelocity)
	{
	}
}
[Token(Token = "0x2000039")]
public class NOLO_Events
{
	[Token(Token = "0x2000451")]
	public enum EventsType
	{
		[Token(Token = "0x40024F2")]
		TrackingOutofRange,
		[Token(Token = "0x40024F3")]
		TrackingInRange,
		[Token(Token = "0x40024F4")]
		TurnAround,
		[Token(Token = "0x40024F5")]
		RecenterLeft,
		[Token(Token = "0x40024F6")]
		RecenterRight,
		[Token(Token = "0x40024F7")]
		GetTrackModel
	}

	[Token(Token = "0x2000452")]
	public delegate void Handler(params object[] args);

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Collections.Hashtable listeners;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1326EF8", Offset = "0x1326EF8", VA = "0x1326EF8")]
	public static void Listen(EventsType eventMessage, Handler action)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x13272A0", Offset = "0x13272A0", VA = "0x13272A0")]
	public static void Remove(EventsType eventMessage, Handler action)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x132756C", Offset = "0x132756C", VA = "0x132756C")]
	public static void Send(EventsType eventMessage, params object[] args)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1327B14", Offset = "0x1327B14", VA = "0x1327B14")]
	public NOLO_Events()
	{
	}
}
[Token(Token = "0x200003A")]
public class UI_Test : MonoBehaviour
{
	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F3")]
	private Text UIText;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1397704", Offset = "0x1397704", VA = "0x1397704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1397790", Offset = "0x1397790", VA = "0x1397790")]
	private void Update()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x13987E4", Offset = "0x13987E4", VA = "0x13987E4")]
	public UI_Test()
	{
	}
}
[Token(Token = "0x200003B")]
public class NoloVR_RotateScene : MonoBehaviour
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform objectParents;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF4DC")]
	public bool isChangeScale;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isChangeRotation;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform leftController;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform rightController;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FB")]
	private GameObject controllerCenter;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float originDistance;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF4EC")]
	private float distance;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float scaling;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float preScaling;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 preVetor;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x303")]
	private Vector3 vetor;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 prerotation;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF4FC")]
	private float maxAngel;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1995914", Offset = "0x1995914", VA = "0x1995914")]
	private void Start()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1995BA8", Offset = "0x1995BA8", VA = "0x1995BA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1995BBC", Offset = "0x1995BBC", VA = "0x1995BBC")]
	public NoloVR_RotateScene()
	{
	}
}
[Token(Token = "0x200003C")]
public static class Bezier
{
	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1510270", Offset = "0x1510270", VA = "0x1510270")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1510594", Offset = "0x1510594", VA = "0x1510594")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1510840", Offset = "0x1510840", VA = "0x1510840")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1510C70", Offset = "0x1510C70", VA = "0x1510C70")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200003D")]
public class CurveGenerator : MonoBehaviour
{
	[Token(Token = "0x2000453")]
	private enum BezierControlPointMode
	{
		[Token(Token = "0x40024F9")]
		Free,
		[Token(Token = "0x40024FA")]
		Aligned,
		[Token(Token = "0x40024FB")]
		Mirrored
	}

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3[] points;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] items;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private BezierControlPointMode[] modes;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B")]
	private bool loop;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int frequency;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF50C")]
	private bool customTracer;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool rescalePointerTracer;

	[Token(Token = "0x1700000F")]
	private bool Loop
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x13524E4", Offset = "0x13524E4", VA = "0x13524E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x1352528", Offset = "0x1352528", VA = "0x1352528")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	private int ControlPointCount
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x135334C", Offset = "0x135334C", VA = "0x135334C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000011")]
	private int CurveCount
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x1353B04", Offset = "0x1353B04", VA = "0x1353B04")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1351314", Offset = "0x1351314", VA = "0x1351314")]
	public void Create(int setFrequency, float radius, GameObject tracer, bool rescaleTracer = false)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1351A14", Offset = "0x1351A14", VA = "0x1351A14")]
	public void SetPoints(Vector3[] controlPoints, Material material, Color color)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1352474", Offset = "0x1352474", VA = "0x1352474")]
	public void TogglePoints(bool state)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1351830", Offset = "0x1351830", VA = "0x1351830")]
	private GameObject CreateSphere()
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1353390", Offset = "0x1353390", VA = "0x1353390")]
	private Vector3 GetControlPoint(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1352680", Offset = "0x1352680", VA = "0x1352680")]
	private void SetControlPoint(int index, Vector3 point)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x13533FC", Offset = "0x13533FC", VA = "0x13533FC")]
	private void EnforceMode(int index)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1353B68", Offset = "0x1353B68", VA = "0x1353B68")]
	private Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1351C04", Offset = "0x1351C04", VA = "0x1351C04")]
	private void SetObjects(Material material, Color color)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1353F1C", Offset = "0x1353F1C", VA = "0x1353F1C")]
	private void setMaterial(GameObject item, Material material, Color color)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1354544", Offset = "0x1354544", VA = "0x1354544")]
	public CurveGenerator()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87A4D4", Offset = "0x87A4D4")]
public class NoloVR_Teleport : MonoBehaviour
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF51C")]
	public bool enableTeleport;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color pointerHitColor;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color pointerMissColor;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material pointerMaterial;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31B")]
	public LayerMask layersToIgnore;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int pointerDensity;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF52C")]
	public float pointerLength;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float beamCurveOffset;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x886F88", Offset = "0x886F88")]
	public float beamHeightLimitAngle;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float pointerCursorRadius;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x323")]
	public GameObject customPointerTracer;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject customPointerCursor;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF53C")]
	public bool rescalePointerTracer;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject pointerCursor;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject curvedBeamContainer;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private CurveGenerator curvedBeam;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32B")]
	private NoloDeviceType deviceType;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 destinationPosition;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF54C")]
	private Transform pointerContactTarget;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 contactNormal;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float pointerContactDistance;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RaycastHit pointerContactRaycastHit;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x333")]
	private Vector3 fixedForwardBeamForward;

	[Token(Token = "0x400019B")]
	private const float BEAM_ADJUST_OFFSET = 1E-05f;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF55C")]
	private Color currentPointerColor;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 downPosition;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1998844", Offset = "0x1998844", VA = "0x1998844")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1998D60", Offset = "0x1998D60", VA = "0x1998D60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1999130", Offset = "0x1999130", VA = "0x1999130")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x19988F8", Offset = "0x19988F8", VA = "0x19988F8")]
	private void InitPointer()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x199942C", Offset = "0x199942C", VA = "0x199942C")]
	private void PointerActivate(bool state)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x19994D0", Offset = "0x19994D0", VA = "0x19994D0")]
	private void UpdatePointerMaterial(Color color)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1999144", Offset = "0x1999144", VA = "0x1999144")]
	private GameObject CreateCursor()
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1999880", Offset = "0x1999880", VA = "0x1999880")]
	private Vector3 ProjectForwardBeam()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x199A0FC", Offset = "0x199A0FC", VA = "0x199A0FC")]
	private Vector3 ProjectDownBeam(Vector3 jointPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x199A7B8", Offset = "0x199A7B8", VA = "0x199A7B8")]
	private void DisplayCurvedBeam(Vector3 jointPosition, Vector3 downPosition)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x199AB90", Offset = "0x199AB90", VA = "0x199AB90")]
	private void SetPointerCursor(Vector3 downPosition)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x199A790", Offset = "0x199A790", VA = "0x199A790")]
	private void PointerOut()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x199A7A4", Offset = "0x199A7A4", VA = "0x199A7A4")]
	private void PointerIn()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x199AEE0", Offset = "0x199AEE0", VA = "0x199AEE0")]
	public NoloVR_Teleport()
	{
	}
}
[Token(Token = "0x200003F")]
public class NOLO_TestThrow : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject prefab;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Rigidbody attachPoint;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33B")]
	private NoloVR_Controller.NoloDevice device;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private NoloVR_TrackedDevice trackedObj;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF56C")]
	private FixedJoint joint;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1327CF8", Offset = "0x1327CF8", VA = "0x1327CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1327E24", Offset = "0x1327E24", VA = "0x1327E24")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1327E38", Offset = "0x1327E38", VA = "0x1327E38")]
	public NOLO_TestThrow()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x87A584", Offset = "0x87A584")]
public class FastList<T>
{
	[Token(Token = "0x2000454")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E560", Offset = "0x87E560")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170002F3")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60020B5")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170002F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020B7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B2")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60020B3")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020B4")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B6")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000012")]
	public int Count
	{
		[Token(Token = "0x60001B3")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public T Item
	{
		[Token(Token = "0x60001B5")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60001B6")]
		set
		{
		}
	}

	[Token(Token = "0x60001B1")]
	public FastList()
	{
	}

	[Token(Token = "0x60001B2")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60001B7")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60001B8")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60001B9")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60001BA")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60001BB")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60001BC")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60001BD")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60001BE")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60001BF")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C0")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60001C1")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60001C2")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60001C4")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60001C5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89E960", Offset = "0x89E960")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60001C7")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60001C8")]
	private void Trim()
	{
	}

	[Token(Token = "0x60001C9")]
	public void Clear()
	{
	}

	[Token(Token = "0x60001CA")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000041")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly string header;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly string message;

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x11D8698", Offset = "0x11D8698", VA = "0x11D8698")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000042")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly string message;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x11D8650", Offset = "0x11D8650", VA = "0x11D8650")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000043")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x343")]
	private Vector3 headPos;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Quaternion headRot;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF57C")]
	private float voiceAmplitude;

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x13FC648", Offset = "0x13FC648", VA = "0x13FC648")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x13FC93C", Offset = "0x13FC93C", VA = "0x13FC93C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x13FD1A0", Offset = "0x13FD1A0", VA = "0x13FD1A0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x13FD54C", Offset = "0x13FD54C", VA = "0x13FD54C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x13FD59C", Offset = "0x13FD59C", VA = "0x13FD59C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000044")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform poseRoot;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1420C58", Offset = "0x1420C58", VA = "0x1420C58")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x1420D8C", Offset = "0x1420D8C", VA = "0x1420D8C")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x14210AC", Offset = "0x14210AC", VA = "0x14210AC")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000045")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34B")]
	public int RadiusMultiplier;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000014")]
	public bool IsVisible
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x11BFE64", Offset = "0x11BFE64", VA = "0x11BFE64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x11BFEA8", Offset = "0x11BFEA8", VA = "0x11BFEA8")]
		set
		{
		}
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x11C013C", Offset = "0x11C013C", VA = "0x11C013C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x11C0500", Offset = "0x11C0500", VA = "0x11C0500")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x11C0550", Offset = "0x11C0550", VA = "0x11C0550")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000046")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000456")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public byte[] PacketData;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF59C")]
		public float FakeLatency;

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x11EC150", Offset = "0x11EC150", VA = "0x11EC150")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000457")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89D3D0", Offset = "0x89D3D0")]
		public float FakeLatencyMax;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89D418", Offset = "0x89D418")]
		public float FakeLatencyMin;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89D460", Offset = "0x89D460")]
		public float LatencyWeight;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35B")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89D4A8", Offset = "0x89D4A8")]
		public int MaxSamples;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		internal float AverageWindow;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF5AC")]
		internal float LatencySum;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x11EC180", Offset = "0x11EC180", VA = "0x11EC180")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x11EC584", Offset = "0x11EC584", VA = "0x11EC584")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF58C")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int PacketSequence;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x353")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x11EAA70", Offset = "0x11EAA70", VA = "0x11EAA70")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x11EACDC", Offset = "0x11EACDC", VA = "0x11EACDC")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x11EB4A0", Offset = "0x11EB4A0", VA = "0x11EB4A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x11EB354", Offset = "0x11EB354", VA = "0x11EB354")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x11EBBA8", Offset = "0x11EBBA8", VA = "0x11EBBA8")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x11EC498", Offset = "0x11EC498", VA = "0x11EC498")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000047")]
public class P2PManager
{
	[Token(Token = "0x2000458")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400250A")]
		Update = 1
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x13FFB88", Offset = "0x13FFB88", VA = "0x13FFB88")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x13FFC9C", Offset = "0x13FFC9C", VA = "0x13FFC9C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x13FFE90", Offset = "0x13FFE90", VA = "0x13FFE90")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x140000C", Offset = "0x140000C", VA = "0x140000C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1400348", Offset = "0x1400348", VA = "0x1400348")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x140098C", Offset = "0x140098C", VA = "0x140098C")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x14012EC", Offset = "0x14012EC", VA = "0x14012EC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1401984", Offset = "0x1401984", VA = "0x1401984")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1400DD0", Offset = "0x1400DD0", VA = "0x1400DD0")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1401784", Offset = "0x1401784", VA = "0x1401784")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x1400FF8", Offset = "0x1400FF8", VA = "0x1400FF8")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x14020C0", Offset = "0x14020C0", VA = "0x14020C0")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1400E7C", Offset = "0x1400E7C", VA = "0x1400E7C")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1401830", Offset = "0x1401830", VA = "0x1401830")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1401170", Offset = "0x1401170", VA = "0x1401170")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1402214", Offset = "0x1402214", VA = "0x1402214")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000048")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x363")]
	public Camera spyCamera;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GameObject cameraRig;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF604")]
	private bool showUI;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x141CE78", Offset = "0x141CE78", VA = "0x141CE78", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x141CEDC", Offset = "0x141CEDC", VA = "0x141CEDC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x141CF40", Offset = "0x141CF40", VA = "0x141CF40", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x141CF80", Offset = "0x141CF80", VA = "0x141CF80")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x141D40C", Offset = "0x141D40C", VA = "0x141D40C")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x141D5B0", Offset = "0x141D5B0", VA = "0x141D5B0")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x141D6AC", Offset = "0x141D6AC", VA = "0x141D6AC")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000049")]
public class RemotePlayer
{
	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong remoteUserID;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool stillInRoom;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36B")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF614")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x373")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x11EC690", Offset = "0x11EC690", VA = "0x11EC690")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200004A")]
public class RoomManager
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ulong roomID;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF624")]
	private ulong invitedRoomID;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool amIServer;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool startupDone;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x11F2E20", Offset = "0x11F2E20", VA = "0x11F2E20")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x11F2F74", Offset = "0x11F2F74", VA = "0x11F2F74")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x11F3538", Offset = "0x11F3538", VA = "0x11F3538")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x11F376C", Offset = "0x11F376C", VA = "0x11F376C")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x11F3868", Offset = "0x11F3868", VA = "0x11F3868")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x11F47B8", Offset = "0x11F47B8", VA = "0x11F47B8")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x11F35E0", Offset = "0x11F35E0", VA = "0x11F35E0")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x11F48E4", Offset = "0x11F48E4", VA = "0x11F48E4")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x11F58E4", Offset = "0x11F58E4", VA = "0x11F58E4")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x11F5EB4", Offset = "0x11F5EB4", VA = "0x11F5EB4")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x11F4E7C", Offset = "0x11F4E7C", VA = "0x11F4E7C")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x200004B")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000459")]
	public enum State
	{
		[Token(Token = "0x400250C")]
		INITIALIZING,
		[Token(Token = "0x400250D")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400250E")]
		CREATING_A_ROOM,
		[Token(Token = "0x400250F")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4002510")]
		JOINING_A_ROOM,
		[Token(Token = "0x4002511")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4002512")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4002513")]
		SHUTDOWN
	}

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37B")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF634")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x383")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static readonly Color BLACK;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF644")]
	private static readonly Color WHITE;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Color CYAN;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Color BLUE;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38B")]
	private float voiceCurrent;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private uint packetSequence;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF654")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject helpPanel;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x393")]
	public Material riftMaterial;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Material gearMaterial;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF664")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39B")]
	public GameObject roomSphere;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF674")]
	public GameObject roomFloor;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected State currentState;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A3")]
	protected RoomManager roomManager;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF684")]
	protected VoipManager voipManager;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected ulong myID;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected string myOculusID;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000015")]
	public static State CurrentState
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x120A7C8", Offset = "0x120A7C8", VA = "0x120A7C8")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000016")]
	public static ulong MyID
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x11F3BE8", Offset = "0x11F3BE8", VA = "0x11F3BE8")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000017")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x120A8C4", Offset = "0x120A8C4", VA = "0x120A8C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1206C88", Offset = "0x1206C88", VA = "0x1206C88", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x120785C", Offset = "0x120785C", VA = "0x120785C", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x120802C", Offset = "0x120802C", VA = "0x120802C")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x12082C4", Offset = "0x12082C4", VA = "0x12082C4", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x12082D8", Offset = "0x12082D8", VA = "0x12082D8")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1208488", Offset = "0x1208488", VA = "0x1208488")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x12094A4", Offset = "0x12094A4", VA = "0x12094A4")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1209DD4", Offset = "0x1209DD4", VA = "0x1209DD4")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x120A32C", Offset = "0x120A32C", VA = "0x120A32C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x120A70C", Offset = "0x120A70C", VA = "0x120A70C")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1207ED4", Offset = "0x1207ED4", VA = "0x1207ED4")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x11F3250", Offset = "0x11F3250", VA = "0x11F3250")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x11F3E1C", Offset = "0x11F3E1C", VA = "0x11F3E1C")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x120ABCC", Offset = "0x120ABCC", VA = "0x120ABCC")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x11F4570", Offset = "0x11F4570", VA = "0x11F4570")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x11F5FE4", Offset = "0x11F5FE4", VA = "0x11F5FE4")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x11F6A84", Offset = "0x11F6A84", VA = "0x11F6A84")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x11F6C44", Offset = "0x11F6C44", VA = "0x11F6C44")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x11F33C4", Offset = "0x11F33C4", VA = "0x11F33C4")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x11F64A4", Offset = "0x11F64A4", VA = "0x11F64A4")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x11F65EC", Offset = "0x11F65EC", VA = "0x11F65EC")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x120AFE4", Offset = "0x120AFE4", VA = "0x120AFE4")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x120B3F4", Offset = "0x120B3F4", VA = "0x120B3F4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1206B60", Offset = "0x1206B60", VA = "0x1206B60")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x89EA10", Offset = "0x89EA10")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x120B744", Offset = "0x120B744", VA = "0x120B744")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x120B8FC", Offset = "0x120B8FC", VA = "0x120B8FC")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200004C")]
public class VoipManager
{
	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1CC53AC", Offset = "0x1CC53AC", VA = "0x1CC53AC")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1CC54C0", Offset = "0x1CC54C0", VA = "0x1CC54C0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1CC56B4", Offset = "0x1CC56B4", VA = "0x1CC56B4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1CC5830", Offset = "0x1CC5830", VA = "0x1CC5830")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1CC5B6C", Offset = "0x1CC5B6C", VA = "0x1CC5B6C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200004D")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x11BF748", Offset = "0x11BF748", VA = "0x11BF748")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x11BF80C", Offset = "0x11BF80C", VA = "0x11BF80C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x11BFAB0", Offset = "0x11BFAB0", VA = "0x11BFAB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x11BFB54", Offset = "0x11BFB54", VA = "0x11BFB54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x11BF874", Offset = "0x11BF874", VA = "0x11BF874")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x11BFCD0", Offset = "0x11BFCD0", VA = "0x11BFCD0")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x11BFE34", Offset = "0x11BFE34", VA = "0x11BFE34")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200004E")]
public class AvatarLayer
{
	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int layerIndex;

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x150AD70", Offset = "0x150AD70", VA = "0x150AD70")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200004F")]
public class PacketRecordSettings
{
	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BB")]
	internal bool RecordingFrames;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float UpdateRate;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF6B4")]
	internal float AccumulatedTime;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1405234", Offset = "0x1405234", VA = "0x1405234")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000050")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200045A")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF7A4")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x13DD5FC", Offset = "0x13DD5FC", VA = "0x13DD5FC")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200045B")]
	public enum HandType
	{
		[Token(Token = "0x4002516")]
		Right,
		[Token(Token = "0x4002517")]
		Left,
		[Token(Token = "0x4002518")]
		Max
	}

	[Token(Token = "0x200045C")]
	public enum HandJoint
	{
		[Token(Token = "0x400251A")]
		HandBase,
		[Token(Token = "0x400251B")]
		IndexBase,
		[Token(Token = "0x400251C")]
		IndexTip,
		[Token(Token = "0x400251D")]
		ThumbBase,
		[Token(Token = "0x400251E")]
		ThumbTip,
		[Token(Token = "0x400251F")]
		Max
	}

	[Token(Token = "0x200045D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E59C", Offset = "0x87E59C")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF7C4")]
		private int <>1__state;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170002F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x13DD4FC", Offset = "0x13DD4FC", VA = "0x13DD4FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x13DD5CC", Offset = "0x13DD5CC", VA = "0x13DD5CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x13DD088", Offset = "0x13DD088", VA = "0x13DD088")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x13DD0D0", Offset = "0x13DD0D0", VA = "0x13DD0D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x13DD0E4", Offset = "0x13DD0E4", VA = "0x13DD0E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x13DD52C", Offset = "0x13DD52C", VA = "0x13DD52C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887010", Offset = "0x887010")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string oculusUserID;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C3")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887074", Offset = "0x887074")]
	public bool EnableBody;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool EnableHands;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF6C4")]
	public bool EnableBase;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool EnableExpressive;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8870D8", Offset = "0x8870D8")]
	public bool RecordPackets;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool UseSDKPackets;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CB")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88713C", Offset = "0x88713C")]
	public bool StartWithControllers;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF6D4")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D3")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8871A0", Offset = "0x8871A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8871A0", Offset = "0x8871A0")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF6E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887268", Offset = "0x887268")]
	private bool CombineMeshes;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8872CC", Offset = "0x8872CC")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887330", Offset = "0x887330")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DB")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF6F4")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E3")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF704")]
	public Shader EyeLens;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x887394", Offset = "0x887394")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8873F8", Offset = "0x8873F8")]
	public bool EnableLaughter;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3EB")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF714")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F3")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF724")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FB")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float[] visemes;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF734")]
	private AudioSource audioSource;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x403")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF744")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40B")]
	private bool showLeftController;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool showRightController;

	[Token(Token = "0x400022C")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400022E")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400022F")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000230")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000231")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000232")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41B")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF774")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x423")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF784")]
	private static string[,] HandJoints;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42B")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF794")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string NECK_JONT;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x433")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x13CEA64", Offset = "0x13CEA64", VA = "0x13CEA64")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x13CEEF4", Offset = "0x13CEEF4", VA = "0x13CEEF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x13CF024", Offset = "0x13CF024", VA = "0x13CF024")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x13CF0D8", Offset = "0x13CF0D8", VA = "0x13CF0D8")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x13CF3B4", Offset = "0x13CF3B4", VA = "0x13CF3B4")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x13CF52C", Offset = "0x13CF52C", VA = "0x13CF52C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x13CF694", Offset = "0x13CF694", VA = "0x13CF694")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x13CFDB8", Offset = "0x13CFDB8", VA = "0x13CFDB8")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x13CFFD8", Offset = "0x13CFFD8", VA = "0x13CFFD8")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x13D00D0", Offset = "0x13D00D0", VA = "0x13D00D0")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x13D0460", Offset = "0x13D0460", VA = "0x13D0460")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x13D0688", Offset = "0x13D0688", VA = "0x13D0688")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x13D0914", Offset = "0x13D0914", VA = "0x13D0914")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x13D0A58", Offset = "0x13D0A58", VA = "0x13D0A58")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x600023D")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x13D1738", Offset = "0x13D1738", VA = "0x13D1738")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x13D2048", Offset = "0x13D2048", VA = "0x13D2048")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x13D2480", Offset = "0x13D2480", VA = "0x13D2480")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x13D2990", Offset = "0x13D2990", VA = "0x13D2990")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x13D2B60", Offset = "0x13D2B60", VA = "0x13D2B60")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x13D33B0", Offset = "0x13D33B0", VA = "0x13D33B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x13D3C64", Offset = "0x13D3C64", VA = "0x13D3C64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x13D5444", Offset = "0x13D5444", VA = "0x13D5444")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x13D56A4", Offset = "0x13D56A4", VA = "0x13D56A4")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x13D30C8", Offset = "0x13D30C8", VA = "0x13D30C8")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x13D323C", Offset = "0x13D323C", VA = "0x13D323C")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x13D5720", Offset = "0x13D5720", VA = "0x13D5720")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x13D459C", Offset = "0x13D459C", VA = "0x13D459C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x13D5C78", Offset = "0x13D5C78", VA = "0x13D5C78")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x13D57C0", Offset = "0x13D57C0", VA = "0x13D57C0")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x13D62A0", Offset = "0x13D62A0", VA = "0x13D62A0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x13D6EB0", Offset = "0x13D6EB0", VA = "0x13D6EB0")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x13D7480", Offset = "0x13D7480", VA = "0x13D7480")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x13D772C", Offset = "0x13D772C", VA = "0x13D772C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x13D7BAC", Offset = "0x13D7BAC", VA = "0x13D7BAC")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x13D49EC", Offset = "0x13D49EC", VA = "0x13D49EC")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x13D7D50", Offset = "0x13D7D50", VA = "0x13D7D50")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x13D4600", Offset = "0x13D4600", VA = "0x13D4600")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x13D7FF8", Offset = "0x13D7FF8", VA = "0x13D7FF8")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x13D8CD8", Offset = "0x13D8CD8", VA = "0x13D8CD8")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x13D9764", Offset = "0x13D9764", VA = "0x13D9764")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x13D98BC", Offset = "0x13D98BC", VA = "0x13D98BC")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x13D9A38", Offset = "0x13D9A38", VA = "0x13D9A38")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x13D5210", Offset = "0x13D5210", VA = "0x13D5210")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x13D81CC", Offset = "0x13D81CC", VA = "0x13D81CC")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x13DA624", Offset = "0x13DA624", VA = "0x13DA624")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89EAC0", Offset = "0x89EAC0")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x13DA6E0", Offset = "0x13DA6E0", VA = "0x13DA6E0")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x13DA388", Offset = "0x13DA388", VA = "0x13DA388")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x13DA884", Offset = "0x13DA884", VA = "0x13DA884")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x13DAA78", Offset = "0x13DAA78", VA = "0x13DAA78")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x13D9C94", Offset = "0x13D9C94", VA = "0x13D9C94")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x13DAC6C", Offset = "0x13DAC6C", VA = "0x13DAC6C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000051")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x13DD6FC", Offset = "0x13DD6FC", VA = "0x13DD6FC")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000052")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44B")]
	public Mesh mesh;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF7D4")]
	public string[] jointNames;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x13DD890", Offset = "0x13DD890", VA = "0x13DD890")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x13E12E8", Offset = "0x13E12E8", VA = "0x13E12E8")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x13E07DC", Offset = "0x13E07DC", VA = "0x13E07DC")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x13E017C", Offset = "0x13E017C", VA = "0x13E017C")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x13E03E8", Offset = "0x13E03E8", VA = "0x13E03E8")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x13E19D0", Offset = "0x13E19D0", VA = "0x13E19D0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000053")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture2D texture;

	[Token(Token = "0x400024F")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x13E24A4", Offset = "0x13E24A4", VA = "0x13E24A4")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000054")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x13E2BF8", Offset = "0x13E2BF8", VA = "0x13E2BF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x13E353C", Offset = "0x13E353C", VA = "0x13E353C")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000055")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x453")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x13E3720", Offset = "0x13E3720", VA = "0x13E3720")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x13E3AA0", Offset = "0x13E3AA0", VA = "0x13E3AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x13E3D4C", Offset = "0x13E3D4C", VA = "0x13E3D4C")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000056")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF7E4")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45B")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF7F4")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x463")]
	protected OvrAvatar owner;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x13E3E34", Offset = "0x13E3E34", VA = "0x13E3E34")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x13E2EA4", Offset = "0x13E2EA4", VA = "0x13E2EA4")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x13E4F5C", Offset = "0x13E4F5C", VA = "0x13E4F5C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x13E5158", Offset = "0x13E5158", VA = "0x13E5158")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x13E75B8", Offset = "0x13E75B8", VA = "0x13E75B8")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x13E3624", Offset = "0x13E3624", VA = "0x13E3624")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000057")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200045E")]
	public enum PacketMode
	{
		[Token(Token = "0x4002524")]
		SDK,
		[Token(Token = "0x4002525")]
		Unity
	}

	[Token(Token = "0x200045F")]
	public struct ControllerPose
	{
		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF804")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float indexTrigger;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x463")]
		public float handTrigger;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public bool isActive;

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x13E97AC", Offset = "0x13E97AC", VA = "0x13E97AC")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000460")]
	public struct PoseFrame
	{
		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF814")]
		public Vector3 headPosition;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Quaternion headRotation;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46B")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF824")]
		public float voiceAmplitude;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x13E9D1C", Offset = "0x13E9D1C", VA = "0x13E9D1C")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF804")]
	public PacketMode Mode;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x13E9028", Offset = "0x13E9028", VA = "0x13E9028")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000278")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x13E9050", Offset = "0x13E9050", VA = "0x13E9050")]
	private void Start()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x13E91DC", Offset = "0x13E91DC", VA = "0x13E91DC")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x13E9748", Offset = "0x13E9748", VA = "0x13E9748")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x13E9768", Offset = "0x13E9768", VA = "0x13E9768")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000058")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isLeftHand;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x483")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x13EA9E4", Offset = "0x13EA9E4", VA = "0x13EA9E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x13EADF0", Offset = "0x13EADF0", VA = "0x13EADF0")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000059")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF844")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float voiceAmplitude;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x13EAEE8", Offset = "0x13EAEE8", VA = "0x13EAEE8")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x13EB1DC", Offset = "0x13EB1DC", VA = "0x13EB1DC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x13EBA40", Offset = "0x13EBA40", VA = "0x13EBA40")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x13EBEAC", Offset = "0x13EBEAC", VA = "0x13EBEAC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x13EBEFC", Offset = "0x13EBEFC", VA = "0x13EBEFC")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200005A")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000461")]
	public enum TextureType
	{
		[Token(Token = "0x4002536")]
		DiffuseTextures,
		[Token(Token = "0x4002537")]
		NormalMaps,
		[Token(Token = "0x4002538")]
		RoughnessMaps,
		[Token(Token = "0x4002539")]
		Count
	}

	[Token(Token = "0x2000462")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AB")]
		public Color Color;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF8A4")]
		public float DiffuseIntensity;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float RimIntensity;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000463")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B3")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000464")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public Vector4[] Colors;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF8B4")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] RimIntensities;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000465")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CB")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x13F0700", Offset = "0x13F0700", VA = "0x13F0700")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000466")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E5D8", Offset = "0x87E5D8")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF8D4")]
		private object <>2__current;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action callBack;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <srcBlend>5__2;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D3")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AF8E4")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4DB")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170002F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x13F1B54", Offset = "0x13F1B54", VA = "0x13F1B54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x13F1C24", Offset = "0x13F1C24", VA = "0x13F1C24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x13F04C4", Offset = "0x13F04C4", VA = "0x13F04C4")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x13F0C40", Offset = "0x13F0C40", VA = "0x13F0C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x13F0C54", Offset = "0x13F0C54", VA = "0x13F0C54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x13F1B84", Offset = "0x13F1B84", VA = "0x13F1B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48B")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF854")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Shader CombinedShader;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x493")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF864")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49B")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF874")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A3")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF884")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4AB")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000283")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000284")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000285")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000286")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x13EC064", Offset = "0x13EC064", VA = "0x13EC064")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x13EC34C", Offset = "0x13EC34C", VA = "0x13EC34C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x13EC3BC", Offset = "0x13EC3BC", VA = "0x13EC3BC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x13ED498", Offset = "0x13ED498", VA = "0x13ED498")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x13EDB88", Offset = "0x13EDB88", VA = "0x13EDB88")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x13EC4A0", Offset = "0x13EC4A0", VA = "0x13EC4A0")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x13EDDA0", Offset = "0x13EDDA0", VA = "0x13EDDA0")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x13ECF88", Offset = "0x13ECF88", VA = "0x13ECF88")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x13EE454", Offset = "0x13EE454", VA = "0x13EE454")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x13EEB04", Offset = "0x13EEB04", VA = "0x13EEB04")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x13EED18", Offset = "0x13EED18", VA = "0x13EED18")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x13EEE38", Offset = "0x13EEE38", VA = "0x13EEE38")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x13ED3B4", Offset = "0x13ED3B4", VA = "0x13ED3B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89EB70", Offset = "0x89EB70")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x13F050C", Offset = "0x13F050C", VA = "0x13F050C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200005B")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF8F4")]
	private List<float> frameTimes;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000018")]
	public float Duration
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0x13F1C54", Offset = "0x13F1C54", VA = "0x13F1C54")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000019")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0x13F1D4C", Offset = "0x13F1D4C", VA = "0x13F1D4C")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x13F1E44", Offset = "0x13F1E44", VA = "0x13F1E44")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x13F1F90", Offset = "0x13F1F90", VA = "0x13F1F90")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x13F219C", Offset = "0x13F219C", VA = "0x13F219C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x13F231C", Offset = "0x13F231C", VA = "0x13F231C")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x13F2468", Offset = "0x13F2468", VA = "0x13F2468")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x13F2908", Offset = "0x13F2908", VA = "0x13F2908")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x13F2E08", Offset = "0x13F2E08", VA = "0x13F2E08")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200005C")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1511894", Offset = "0x1511894", VA = "0x1511894")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1511DA4", Offset = "0x1511DA4", VA = "0x1511DA4")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1512248", Offset = "0x1512248", VA = "0x1512248")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1511E8C", Offset = "0x1511E8C", VA = "0x1511E8C")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1512048", Offset = "0x1512048", VA = "0x1512048")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200005D")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x15110D4", Offset = "0x15110D4", VA = "0x15110D4")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x15117C4", Offset = "0x15117C4", VA = "0x15117C4")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x15113E0", Offset = "0x15113E0", VA = "0x15113E0")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x15114E0", Offset = "0x15114E0", VA = "0x15114E0")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1511610", Offset = "0x1511610", VA = "0x1511610")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200005E")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E3")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float CurrentPacketTime;

	[Token(Token = "0x400028E")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400028F")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int CurrentSequence;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isStreaming;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4EB")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x13F331C", Offset = "0x13F331C", VA = "0x13F331C")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x13F3404", Offset = "0x13F3404", VA = "0x13F3404", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x13F34B8", Offset = "0x13F34B8", VA = "0x13F34B8")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x13F39B8", Offset = "0x13F39B8", VA = "0x13F39B8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x13F3E08", Offset = "0x13F3E08", VA = "0x13F3E08")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200005F")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF914")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform[] bones;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isBodyComponent;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x13F3EE8", Offset = "0x13F3EE8", VA = "0x13F3EE8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x13F439C", Offset = "0x13F439C", VA = "0x13F439C")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x13F4768", Offset = "0x13F4768", VA = "0x13F4768")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x13F5168", Offset = "0x13F5168", VA = "0x13F5168")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x13F533C", Offset = "0x13F533C", VA = "0x13F533C")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000060")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000298")]
	Body = 1,
	[Token(Token = "0x4000299")]
	Hands = 2,
	[Token(Token = "0x400029A")]
	Base = 4,
	[Token(Token = "0x400029B")]
	BodyTilt = 0x10,
	[Token(Token = "0x400029C")]
	Expressive = 0x20,
	[Token(Token = "0x400029D")]
	All = -1
}
[Token(Token = "0x2000061")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400029F")]
	AvatarSpecification,
	[Token(Token = "0x40002A0")]
	AssetLoaded,
	[Token(Token = "0x40002A1")]
	Count
}
[Token(Token = "0x2000062")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000063")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F3")]
	public ulong assetID;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public IntPtr asset;
}
[Token(Token = "0x2000064")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40002A7")]
	Mesh,
	[Token(Token = "0x40002A8")]
	Texture,
	[Token(Token = "0x40002A9")]
	Pose,
	[Token(Token = "0x40002AA")]
	Material,
	[Token(Token = "0x40002AB")]
	CombinedMesh,
	[Token(Token = "0x40002AC")]
	PBSMaterial,
	[Token(Token = "0x40002AD")]
	FailedLoad,
	[Token(Token = "0x40002AE")]
	Count
}
[Token(Token = "0x2000065")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x503")]
	public float y;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float z;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF954")]
	public float nx;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ny;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float nz;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tx;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50B")]
	public float ty;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float tz;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF964")]
	public float tw;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float u;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float v;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public byte[] blendIndices;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x513")]
	public float[] blendWeights;
}
[Token(Token = "0x2000066")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float x;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF974")]
	public float y;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float z;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float nx;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ny;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51B")]
	public float nz;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float tx;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF984")]
	public float ty;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tz;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tw;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float u;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x523")]
	public float v;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float r;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF994")]
	public float g;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float b;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float a;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public byte[] blendIndices;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52B")]
	public float[] blendWeights;
}
[Token(Token = "0x2000067")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float x;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF9A4")]
	public float y;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float z;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float nx;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ny;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x533")]
	public float nz;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float tx;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF9B4")]
	public float ty;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tz;
}
[Token(Token = "0x2000068")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53B")]
	public uint indexCount;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF9C4")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000069")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint indexCount;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x543")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200006A")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40002E3")]
	RGB24,
	[Token(Token = "0x40002E4")]
	DXT1,
	[Token(Token = "0x40002E5")]
	DXT5,
	[Token(Token = "0x40002E6")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40002E7")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40002E8")]
	Count
}
[Token(Token = "0x200006B")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint sizeX;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint sizeY;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x553")]
	public uint mipCount;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ulong textureDataSize;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AF9F4")]
	public IntPtr textureData;
}
[Token(Token = "0x200006C")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40002F0")]
	SkinnedMeshRender,
	[Token(Token = "0x40002F1")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40002F2")]
	ProjectorRender,
	[Token(Token = "0x40002F3")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40002F4")]
	Count
}
[Token(Token = "0x200006D")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40002F6")]
	Unknown,
	[Token(Token = "0x40002F7")]
	Default,
	[Token(Token = "0x40002F8")]
	Verbose,
	[Token(Token = "0x40002F9")]
	Debug,
	[Token(Token = "0x40002FA")]
	Info,
	[Token(Token = "0x40002FB")]
	Warn,
	[Token(Token = "0x40002FC")]
	Error,
	[Token(Token = "0x40002FD")]
	Fatal,
	[Token(Token = "0x40002FE")]
	Silent
}
[Token(Token = "0x200006E")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public Vector3 position;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFA24")]
	public Quaternion orientation;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 scale;
}
[Token(Token = "0x200006F")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000303")]
	One = 1,
	[Token(Token = "0x4000304")]
	Two = 2,
	[Token(Token = "0x4000305")]
	Three = 4,
	[Token(Token = "0x4000306")]
	Joystick = 8
}
[Token(Token = "0x2000070")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000308")]
	One = 1,
	[Token(Token = "0x4000309")]
	Two = 2,
	[Token(Token = "0x400030A")]
	Joystick = 4,
	[Token(Token = "0x400030B")]
	ThumbRest = 8,
	[Token(Token = "0x400030C")]
	Index = 0x10,
	[Token(Token = "0x400030D")]
	Pointing = 0x40,
	[Token(Token = "0x400030E")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000071")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x583")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFA54")]
	public float joystickX;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float joystickY;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float indexTrigger;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float handTrigger;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58B")]
	public bool isActive;
}
[Token(Token = "0x2000072")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFA64")]
	public uint renderPartCount;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr renderParts;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;
}
[Token(Token = "0x2000073")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A3")]
	public static int renderPartCount;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static int renderParts;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFA84")]
	public static int name;
}
[Token(Token = "0x2000074")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000075")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59B")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFA84")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000076")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B3")]
	public static long renderComponent;
}
[Token(Token = "0x2000077")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFA94")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000078")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000079")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400032E")]
	Add,
	[Token(Token = "0x400032F")]
	Multiply,
	[Token(Token = "0x4000330")]
	Count
}
[Token(Token = "0x200007A")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000332")]
	Color,
	[Token(Token = "0x4000333")]
	Texture,
	[Token(Token = "0x4000334")]
	TextureSingleChannel,
	[Token(Token = "0x4000335")]
	Parallax,
	[Token(Token = "0x4000336")]
	Count
}
[Token(Token = "0x200007B")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000338")]
	None,
	[Token(Token = "0x4000339")]
	Positional,
	[Token(Token = "0x400033A")]
	ViewReflection,
	[Token(Token = "0x400033B")]
	Fresnel,
	[Token(Token = "0x400033C")]
	Pulse,
	[Token(Token = "0x400033D")]
	Count
}
[Token(Token = "0x200007C")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x400033F")]
	Touch,
	[Token(Token = "0x4000340")]
	Malibu,
	[Token(Token = "0x4000341")]
	Go,
	[Token(Token = "0x4000342")]
	Quest,
	[Token(Token = "0x4000343")]
	Count
}
[Token(Token = "0x200007D")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000345")]
	Lowest = 1,
	[Token(Token = "0x4000346")]
	Medium = 3,
	[Token(Token = "0x4000347")]
	Highest = 5
}
[Token(Token = "0x200007E")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000349")]
	Unknown = -1,
	[Token(Token = "0x400034A")]
	One,
	[Token(Token = "0x400034B")]
	Two
}
[Token(Token = "0x200007F")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D3")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFAF4")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 layerColor;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong sampleTexture;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5DB")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFB04")]
	public Vector4 maskAxis;

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x14FC88C", Offset = "0x14FC88C", VA = "0x14FC88C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xA45930", Offset = "0xA45930", VA = "0xA45930", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xA45A8C", Offset = "0xA45A8C", VA = "0xA45A8C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000080")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E3")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFB14")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5EB")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFB24")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint layerCount;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x14FD43C", Offset = "0x14FD43C", VA = "0x14FD43C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xA46B44", Offset = "0xA46B44", VA = "0xA46B44", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xA46D2C", Offset = "0xA46D2C", VA = "0xA46D2C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000081")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F3")]
	public Vector4 irisColor;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFB34")]
	public Vector4 lashColor;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 browColor;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 lipColor;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 teethColor;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5FB")]
	public Vector4 gumColor;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float browLashIntensity;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFB44")]
	public float lipSmoothness;

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x14FAD6C", Offset = "0x14FAD6C", VA = "0x14FAD6C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xA44E74", Offset = "0xA44E74", VA = "0xA44E74", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xA44FD0", Offset = "0xA44FD0", VA = "0xA44FD0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000082")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong albedoTextureID;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x603")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float glossinessScale;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFB54")]
	public ulong normalTextureID;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong heightTextureID;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60B")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFB64")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x14FE944", Offset = "0x14FE944", VA = "0x14FE944")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xA48BB4", Offset = "0xA48BB4", VA = "0xA48BB4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xA48D80", Offset = "0xA48D80", VA = "0xA48D80", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000083")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x13DD72C", Offset = "0x13DD72C", VA = "0x13DD72C")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000084")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x613")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public int[] jointParents;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFB74")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000085")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000380")]
	FirstPerson = 1,
	[Token(Token = "0x4000381")]
	ThirdPerson = 2,
	[Token(Token = "0x4000382")]
	SelfOccluding = 4
}
[Token(Token = "0x2000086")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFB84")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong meshAssetID;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000087")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x623")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFB94")]
	public ulong meshAssetID;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000088")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62B")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public uint componentIndex;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFBA4")]
	public uint renderPartIndex;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000089")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x633")]
	public ulong meshAssetID;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFBB4")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200008A")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000398")]
	Default,
	[Token(Token = "0x4000399")]
	GripSphere,
	[Token(Token = "0x400039A")]
	GripCube,
	[Token(Token = "0x400039B")]
	Count
}
[Token(Token = "0x200008B")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400039D")]
	Body,
	[Token(Token = "0x400039E")]
	Clothing,
	[Token(Token = "0x400039F")]
	Eyewear,
	[Token(Token = "0x40003A0")]
	Hair,
	[Token(Token = "0x40003A1")]
	Beard,
	[Token(Token = "0x40003A2")]
	Count
}
[Token(Token = "0x200008C")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200008D")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65B")]
	public static long blendShapeParams;
}
[Token(Token = "0x200008E")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public uint visemeParamCount;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFBE4")]
	public float[] visemeParams;
}
[Token(Token = "0x200008F")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long visemeParams;
}
[Token(Token = "0x2000090")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40003AC")]
	AvatarHead,
	[Token(Token = "0x40003AD")]
	AvatarHand,
	[Token(Token = "0x40003AE")]
	Object,
	[Token(Token = "0x40003AF")]
	ObjectStatic,
	[Token(Token = "0x40003B0")]
	Count
}
[Token(Token = "0x2000091")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65B")]
	public Vector3 worldPosition;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000092")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFC14")]
	public static int id;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int worldPosition;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int type;
}
[Token(Token = "0x2000093")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x663")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000094")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static int targetCount;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFC24")]
	public static long targets;
}
[Token(Token = "0x2000095")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40003BC")]
	Point,
	[Token(Token = "0x40003BD")]
	Direction,
	[Token(Token = "0x40003BE")]
	Spot,
	[Token(Token = "0x40003BF")]
	Count
}
[Token(Token = "0x2000096")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFC24")]
	public uint id;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float intensity;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 worldDirection;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x673")]
	public Vector3 worldPosition;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float range;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFC34")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000097")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long type;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long intensity;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68B")]
	public static long worldDirection;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static long worldPosition;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFC54")]
	public static long range;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000098")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint lightCount;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x683")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000099")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static long ambientIntensity;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFC64")]
	public static long lightCount;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long lights;
}
[Token(Token = "0x200009A")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40003D5")]
	None = 0u,
	[Token(Token = "0x40003D6")]
	GazeTarget = 1u,
	[Token(Token = "0x40003D7")]
	Any = uint.MaxValue
}
[Token(Token = "0x200009B")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFC64")]
	public Vector3 startPoint;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 endPoint;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 color;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x693")]
	public IntPtr text;
}
[Token(Token = "0x200009C")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFC74")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr text;
}
[Token(Token = "0x200009D")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200009E")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200009F")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000A0")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000467")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6AB")]
		public specificationCallback _callback;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AFCA4")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B3")]
		public bool _enableExpressive;

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xA21970", Offset = "0xA21970", VA = "0xA21970")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool initialized;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6AB")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFC94")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B3")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFCA4")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40003EC")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700001A")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x13E76D8", Offset = "0x13E76D8", VA = "0x13E76D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x13F5380", Offset = "0x13F5380", VA = "0x13F5380")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x13F5824", Offset = "0x13F5824", VA = "0x13F5824")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x13F5924", Offset = "0x13F5924", VA = "0x13F5924")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x13F71F8", Offset = "0x13F71F8", VA = "0x13F71F8")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x13F72CC", Offset = "0x13F72CC", VA = "0x13F72CC")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x13F73A0", Offset = "0x13F73A0", VA = "0x13F73A0")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x13F7440", Offset = "0x13F7440", VA = "0x13F7440")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x13F74E0", Offset = "0x13F74E0", VA = "0x13F74E0")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x13F6CE4", Offset = "0x13F6CE4", VA = "0x13F6CE4")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x13F7650", Offset = "0x13F7650", VA = "0x13F7650")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x13F7898", Offset = "0x13F7898", VA = "0x13F7898")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x13E7A98", Offset = "0x13E7A98", VA = "0x13E7A98")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x13F7A20", Offset = "0x13F7A20", VA = "0x13F7A20")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x13F579C", Offset = "0x13F579C", VA = "0x13F579C")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x13ED540", Offset = "0x13ED540", VA = "0x13ED540")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x13F7B9C", Offset = "0x13F7B9C", VA = "0x13F7B9C")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000A1")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFCC4")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700001B")]
	public static string AppID
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x13F7B14", Offset = "0x13F7B14", VA = "0x13F7B14")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x13F7F74", Offset = "0x13F7F74", VA = "0x13F7F74")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public static string MobileAppID
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x13F7B58", Offset = "0x13F7B58", VA = "0x13F7B58")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x13F7FC0", Offset = "0x13F7FC0", VA = "0x13F7FC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x13F7D1C", Offset = "0x13F7D1C", VA = "0x13F7D1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x13F800C", Offset = "0x13F800C", VA = "0x13F800C")]
		set
		{
		}
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x13F8094", Offset = "0x13F8094", VA = "0x13F8094")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000A2")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Shader surface;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6CB")]
	private bool previouslyActive;

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x13FBC68", Offset = "0x13FBC68", VA = "0x13FBC68")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x13E3E6C", Offset = "0x13E3E6C", VA = "0x13E3E6C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x13FC044", Offset = "0x13FC044", VA = "0x13FC044")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x13FC348", Offset = "0x13FC348", VA = "0x13FC348")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000A3")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x13FC378", Offset = "0x13FC378", VA = "0x13FC378")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x13E4498", Offset = "0x13E4498", VA = "0x13E4498")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x13FC618", Offset = "0x13FC618", VA = "0x13FC618")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000A4")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFCD4")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool previouslyActive;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D3")]
	private bool EnableExpressive;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int blendShapeCount;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFCE4")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40003FB")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40003FC")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40003FD")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x13F8134", Offset = "0x13F8134", VA = "0x13F8134")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x13E4888", Offset = "0x13E4888", VA = "0x13E4888")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x13FA38C", Offset = "0x13FA38C", VA = "0x13FA38C")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x13F90F4", Offset = "0x13F90F4", VA = "0x13F90F4")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x13F8CB8", Offset = "0x13F8CB8", VA = "0x13F8CB8")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x13F8ED0", Offset = "0x13F8ED0", VA = "0x13F8ED0")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x13FBC38", Offset = "0x13FBC38", VA = "0x13FBC38")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000A5")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000468")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AFD04")]
		public bool Initialized;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000469")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E3")]
		public Texture Dst;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public int Mip;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AFD14")]
		public int SrcSize;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int DstElement;

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xA23454", Offset = "0xA23454", VA = "0xA23454")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200046A")]
	public struct TextureSet
	{
		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsProcessed;

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xA23618", Offset = "0xA23618", VA = "0xA23618")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E614", Offset = "0x87E614")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6FB")]
		private int <>1__state;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AFD34")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int gameobjectID;

		[Token(Token = "0x170002F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x13FF584", Offset = "0x13FF584", VA = "0x13FF584", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x13FF654", Offset = "0x13FF654", VA = "0x13FF654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x13FE384", Offset = "0x13FE384", VA = "0x13FE384")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x13FE68C", Offset = "0x13FE68C", VA = "0x13FE68C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x13FE6A0", Offset = "0x13FE6A0", VA = "0x13FE6A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x13FF5B4", Offset = "0x13FF5B4", VA = "0x13FF5B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6DB")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFCF4")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000401")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000402")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E3")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000405")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000406")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000407")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000408")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000409")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400040A")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400040B")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x13FD6D4", Offset = "0x13FD6D4", VA = "0x13FD6D4")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x13FDB58", Offset = "0x13FDB58", VA = "0x13FDB58")]
	public void Update()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x13F1ABC", Offset = "0x13F1ABC", VA = "0x13F1ABC")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x13EDFF4", Offset = "0x13EDFF4", VA = "0x13EDFF4")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x13FDF50", Offset = "0x13FDF50", VA = "0x13FDF50")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x13ED684", Offset = "0x13ED684", VA = "0x13ED684")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x13EDBFC", Offset = "0x13EDBFC", VA = "0x13EDBFC")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x13FE220", Offset = "0x13FE220", VA = "0x13FE220")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89EE78", Offset = "0x89EE78")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x13F75BC", Offset = "0x13F75BC", VA = "0x13F75BC")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x13FE3CC", Offset = "0x13FE3CC", VA = "0x13FE3CC")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000A6")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isLeftHand;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x703")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x13FF684", Offset = "0x13FF684", VA = "0x13FF684")]
	private void Update()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x13FFA90", Offset = "0x13FFA90", VA = "0x13FFA90")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000A7")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000303")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x12D7A40", Offset = "0x12D7A40", VA = "0x12D7A40")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000A8")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFD44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8874D4", Offset = "0x8874D4")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887538", Offset = "0x887538")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88759C", Offset = "0x88759C")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float resetRotation;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70B")]
	private float rotationAmount;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float rotationMax;

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x173A59C", Offset = "0x173A59C", VA = "0x173A59C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x173A5B0", Offset = "0x173A5B0", VA = "0x173A5B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x173A700", Offset = "0x173A700", VA = "0x173A700")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x173ACA8", Offset = "0x173ACA8", VA = "0x173ACA8")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000A9")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFD54")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int targetSet;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int maxTarget;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x173AD5C", Offset = "0x173AD5C", VA = "0x173AD5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x173AF5C", Offset = "0x173AF5C", VA = "0x173AF5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x173B91C", Offset = "0x173B91C", VA = "0x173B91C")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x173BF2C", Offset = "0x173BF2C", VA = "0x173BF2C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x173C0F0", Offset = "0x173C0F0", VA = "0x173C0F0")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000AA")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x713")]
	public ArrayList messages;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int maxMessages;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFD64")]
	public Text textMsg;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool clearTimeoutOn;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float clearTimeout;

	[Token(Token = "0x1700001E")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0x18FDF80", Offset = "0x18FDF80", VA = "0x18FDF80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x18FE5EC", Offset = "0x18FE5EC", VA = "0x18FE5EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x18FE90C", Offset = "0x18FE90C", VA = "0x18FE90C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x18FE6E8", Offset = "0x18FE6E8", VA = "0x18FE6E8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x18F9124", Offset = "0x18F9124", VA = "0x18F9124")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x18FED3C", Offset = "0x18FED3C", VA = "0x18FED3C")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x18F902C", Offset = "0x18F902C", VA = "0x18F902C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x18F9220", Offset = "0x18F9220", VA = "0x18F9220")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x18FEAA0", Offset = "0x18FEAA0", VA = "0x18FEAA0")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x18FEF60", Offset = "0x18FEF60", VA = "0x18FEF60")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x18FEFBC", Offset = "0x18FEFBC", VA = "0x18FEFBC")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x18FF3C0", Offset = "0x18FF3C0", VA = "0x18FF3C0")]
	private void Prune()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x18FF00C", Offset = "0x18FF00C", VA = "0x18FF00C")]
	private void Display()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x18FF524", Offset = "0x18FF524", VA = "0x18FF524")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000AB")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71B")]
	public readonly string[] names;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1900F44", Offset = "0x1900F44", VA = "0x1900F44")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000AC")]
public static class OVRTouchpad
{
	[Token(Token = "0x200046C")]
	public enum TouchEvent
	{
		[Token(Token = "0x400256C")]
		SingleTap,
		[Token(Token = "0x400256D")]
		DoubleTap,
		[Token(Token = "0x400256E")]
		Left,
		[Token(Token = "0x400256F")]
		Right,
		[Token(Token = "0x4002570")]
		Up,
		[Token(Token = "0x4002571")]
		Down
	}

	[Token(Token = "0x200046D")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFD74")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x18F60BC", Offset = "0x18F60BC", VA = "0x18F60BC")]
	public static void Create()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x190D060", Offset = "0x190D060", VA = "0x190D060")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x190D678", Offset = "0x190D678", VA = "0x190D678")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x190D2FC", Offset = "0x190D2FC", VA = "0x190D2FC")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x18F81C4", Offset = "0x18F81C4", VA = "0x18F81C4")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20000AD")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000324")]
	[Address(RVA = "0x190D7AC", Offset = "0x190D7AC", VA = "0x190D7AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x190D8A4", Offset = "0x190D8A4", VA = "0x190D8A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x190D9DC", Offset = "0x190D9DC", VA = "0x190D9DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x190DAC0", Offset = "0x190DAC0", VA = "0x190DAC0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x190DBA4", Offset = "0x190DBA4", VA = "0x190DBA4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x190DC68", Offset = "0x190DC68", VA = "0x190DC68")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20000AE")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x200046E")]
	public enum Result
	{
		[Token(Token = "0x4002573")]
		Success = 0,
		[Token(Token = "0x4002574")]
		Unknown = -2200,
		[Token(Token = "0x4002575")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4002576")]
		InvalidParam = -2202,
		[Token(Token = "0x4002577")]
		BadSampleRate = -2203,
		[Token(Token = "0x4002578")]
		MissingDLL = -2204,
		[Token(Token = "0x4002579")]
		BadVersion = -2205,
		[Token(Token = "0x400257A")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x200046F")]
	public enum AudioDataType
	{
		[Token(Token = "0x400257C")]
		S16_Mono,
		[Token(Token = "0x400257D")]
		S16_Stereo,
		[Token(Token = "0x400257E")]
		F32_Mono,
		[Token(Token = "0x400257F")]
		F32_Stereo
	}

	[Token(Token = "0x2000470")]
	public enum Viseme
	{
		[Token(Token = "0x4002581")]
		sil,
		[Token(Token = "0x4002582")]
		PP,
		[Token(Token = "0x4002583")]
		FF,
		[Token(Token = "0x4002584")]
		TH,
		[Token(Token = "0x4002585")]
		DD,
		[Token(Token = "0x4002586")]
		kk,
		[Token(Token = "0x4002587")]
		CH,
		[Token(Token = "0x4002588")]
		SS,
		[Token(Token = "0x4002589")]
		nn,
		[Token(Token = "0x400258A")]
		RR,
		[Token(Token = "0x400258B")]
		aa,
		[Token(Token = "0x400258C")]
		E,
		[Token(Token = "0x400258D")]
		ih,
		[Token(Token = "0x400258E")]
		oh,
		[Token(Token = "0x400258F")]
		ou
	}

	[Token(Token = "0x2000471")]
	public enum Signals
	{
		[Token(Token = "0x4002591")]
		VisemeOn,
		[Token(Token = "0x4002592")]
		VisemeOff,
		[Token(Token = "0x4002593")]
		VisemeAmount,
		[Token(Token = "0x4002594")]
		VisemeSmoothing,
		[Token(Token = "0x4002595")]
		LaughterAmount
	}

	[Token(Token = "0x2000472")]
	public enum ContextProviders
	{
		[Token(Token = "0x4002597")]
		Original,
		[Token(Token = "0x4002598")]
		Enhanced,
		[Token(Token = "0x4002599")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000473")]
	public class Frame
	{
		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int frameNumber;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int frameDelay;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] Visemes;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76B")]
		public float laughterScore;

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x18F7B84", Offset = "0x18F7B84", VA = "0x18F7B84")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x18F7C74", Offset = "0x18F7C74", VA = "0x18F7C74")]
		public void Reset()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x18F7DC0", Offset = "0x18F7DC0", VA = "0x18F7DC0")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72B")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000426")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Result sInitialized;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x600032A")]
	[Address(RVA = "0x18F4ED0", Offset = "0x18F4ED0", VA = "0x18F4ED0")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x600032B")]
	[Address(RVA = "0x18F4FD4", Offset = "0x18F4FD4", VA = "0x18F4FD4")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x600032C")]
	[Address(RVA = "0x18F50BC", Offset = "0x18F50BC", VA = "0x18F50BC")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x600032D")]
	[Address(RVA = "0x18F51C8", Offset = "0x18F51C8", VA = "0x18F51C8")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600032E")]
	[Address(RVA = "0x18F52EC", Offset = "0x18F52EC", VA = "0x18F52EC")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600032F")]
	[Address(RVA = "0x18F5448", Offset = "0x18F5448", VA = "0x18F5448")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000330")]
	[Address(RVA = "0x18F5544", Offset = "0x18F5544", VA = "0x18F5544")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000331")]
	[Address(RVA = "0x18F5640", Offset = "0x18F5640", VA = "0x18F5640")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000332")]
	[Address(RVA = "0x18F5754", Offset = "0x18F5754", VA = "0x18F5754")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x18F5920", Offset = "0x18F5920", VA = "0x18F5920")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x18F60CC", Offset = "0x18F60CC", VA = "0x18F60CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x18F5E44", Offset = "0x18F5E44", VA = "0x18F5E44")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x18F62EC", Offset = "0x18F62EC", VA = "0x18F62EC")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x18F6524", Offset = "0x18F6524", VA = "0x18F6524")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x18F6620", Offset = "0x18F6620", VA = "0x18F6620")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x18F6708", Offset = "0x18F6708", VA = "0x18F6708")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x18F6958", Offset = "0x18F6958", VA = "0x18F6958")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x18F6BB8", Offset = "0x18F6BB8", VA = "0x18F6BB8")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x18F6D44", Offset = "0x18F6D44", VA = "0x18F6D44")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x18F6ED0", Offset = "0x18F6ED0", VA = "0x18F6ED0")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x18F708C", Offset = "0x18F708C", VA = "0x18F708C")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x18F74A0", Offset = "0x18F74A0", VA = "0x18F74A0")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x18F78B0", Offset = "0x18F78B0", VA = "0x18F78B0")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20000AF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87A78C", Offset = "0x87A78C")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887600", Offset = "0x887600")]
	public bool enableKeyboardInput;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFE14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887664", Offset = "0x887664")]
	public bool enableTouchInput;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8876C8", Offset = "0x8876C8")]
	public bool audioLoopback;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88772C", Offset = "0x88772C")]
	public KeyCode loopbackKey;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887790", Offset = "0x887790")]
	public bool showVisemes;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x773")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8877F4", Offset = "0x8877F4")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887858", Offset = "0x887858")]
	public bool skipAudioSource;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFE24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8878BC", Offset = "0x8878BC")]
	public float gain;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool showLaughter;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77B")]
	public float laughterScore;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x18F7EE8", Offset = "0x18F7EE8", VA = "0x18F7EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x18F8320", Offset = "0x18F8320", VA = "0x18F8320")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x18F9328", Offset = "0x18F9328", VA = "0x18F9328")]
	private void Update()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x18F9988", Offset = "0x18F9988", VA = "0x18F9988")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x18F9AA4", Offset = "0x18F9AA4", VA = "0x18F9AA4")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x18F9BE0", Offset = "0x18F9BE0", VA = "0x18F9BE0")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x18FA00C", Offset = "0x18FA00C", VA = "0x18FA00C")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x18FA438", Offset = "0x18FA438", VA = "0x18FA438")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x18FA658", Offset = "0x18FA658", VA = "0x18FA658")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x18F93B8", Offset = "0x18F93B8", VA = "0x18F93B8")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x18F8D88", Offset = "0x18F8D88", VA = "0x18F8D88")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x18FA6D0", Offset = "0x18FA6D0", VA = "0x18FA6D0")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x18FAAFC", Offset = "0x18FAAFC", VA = "0x18FAAFC")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87A83C", Offset = "0x87A83C")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public AudioSource audioSource;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFE44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887920", Offset = "0x887920")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887984", Offset = "0x887984")]
	public bool enableAcceleration;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private uint context;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x783")]
	private int _smoothing;

	[Token(Token = "0x1700001F")]
	public int Smoothing
	{
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x18FAEC8", Offset = "0x18FAEC8", VA = "0x18FAEC8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x18FAC4C", Offset = "0x18FAC4C", VA = "0x18FAC4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public uint Context
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x18FAEF8", Offset = "0x18FAEF8", VA = "0x18FAEF8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000021")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x18FAF28", Offset = "0x18FAF28", VA = "0x18FAF28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x18FAF58", Offset = "0x18FAF58", VA = "0x18FAF58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x18FB450", Offset = "0x18FB450", VA = "0x18FB450")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x18FB7B8", Offset = "0x18FB7B8", VA = "0x18FB7B8")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x18FB7E8", Offset = "0x18FB7E8", VA = "0x18FB7E8")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x18FBA5C", Offset = "0x18FBA5C", VA = "0x18FBA5C")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x18FBC08", Offset = "0x18FBC08", VA = "0x18FBC08")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x18FAB80", Offset = "0x18FAB80", VA = "0x18FAB80")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20000B1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87A8EC", Offset = "0x87A8EC")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8879E8", Offset = "0x8879E8")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x18FBD24", Offset = "0x18FBD24", VA = "0x18FBD24")]
	private void Update()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x18FC0CC", Offset = "0x18FC0CC", VA = "0x18FC0CC")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20000B2")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFE54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887A4C", Offset = "0x887A4C")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887AB0", Offset = "0x887AB0")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887B14", Offset = "0x887B14")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887B78", Offset = "0x887B78")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887BDC", Offset = "0x887BDC")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887C40", Offset = "0x887C40")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFE64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887CA4", Offset = "0x887CA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887CA4", Offset = "0x887CA4")]
	public float laughterThreshold;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887D38", Offset = "0x887D38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887D38", Offset = "0x887D38")]
	public float laughterMultiplier;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x887DCC", Offset = "0x887DCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887DCC", Offset = "0x887DCC")]
	public int smoothAmount;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x18FC0FC", Offset = "0x18FC0FC", VA = "0x18FC0FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x18FC428", Offset = "0x18FC428", VA = "0x18FC428")]
	private void Update()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x18FCB3C", Offset = "0x18FCB3C", VA = "0x18FCB3C")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x18FC6F0", Offset = "0x18FC6F0", VA = "0x18FC6F0")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x18FC8B4", Offset = "0x18FC8B4", VA = "0x18FC8B4")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x18FCD0C", Offset = "0x18FCD0C", VA = "0x18FCD0C")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x18FCE70", Offset = "0x18FCE70", VA = "0x18FCE70")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x18FCF50", Offset = "0x18FCF50", VA = "0x18FCF50")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20000B3")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x793")]
	public Material material;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x887E64", Offset = "0x887E64")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x887E64", Offset = "0x887E64")]
	public Texture[] Textures;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFE74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x888330", Offset = "0x888330")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888330", Offset = "0x888330")]
	public int smoothAmount;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x18FD1B0", Offset = "0x18FD1B0", VA = "0x18FD1B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x18FD4D8", Offset = "0x18FD4D8", VA = "0x18FD4D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x18FDA8C", Offset = "0x18FDA8C", VA = "0x18FDA8C")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x18FDE10", Offset = "0x18FDE10", VA = "0x18FDE10")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x20000B4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87A99C", Offset = "0x87A99C")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000474")]
	public enum micActivation
	{
		[Token(Token = "0x400259F")]
		HoldToSpeak,
		[Token(Token = "0x40025A0")]
		PushToSpeak,
		[Token(Token = "0x40025A1")]
		ConstantSpeak
	}

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8883C8", Offset = "0x8883C8")]
	public AudioSource audioSource;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88842C", Offset = "0x88842C")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888490", Offset = "0x888490")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFE84")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8884F4", Offset = "0x8884F4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8884F4", Offset = "0x8884F4")]
	private float micInputVolume;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8885B4", Offset = "0x8885B4")]
	private int micFrequency;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88863C", Offset = "0x88863C")]
	public micActivation micControl;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8886A0", Offset = "0x8886A0")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A3")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888704", Offset = "0x888704")]
	public string selectedDevice;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool micSelected;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFE94")]
	private int minFreq;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int maxFreq;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool focused;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool initialized;

	[Token(Token = "0x17000022")]
	public float MicFrequency
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x18FF5F0", Offset = "0x18FF5F0", VA = "0x18FF5F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x18FF624", Offset = "0x18FF624", VA = "0x18FF624")]
		set
		{
		}
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x18FF74C", Offset = "0x18FF74C", VA = "0x18FF74C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x18FF908", Offset = "0x18FF908", VA = "0x18FF908")]
	private void Start()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x18FF99C", Offset = "0x18FF99C", VA = "0x18FF99C")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x18FFCA4", Offset = "0x18FFCA4", VA = "0x18FFCA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x19006F4", Offset = "0x19006F4", VA = "0x19006F4")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1900778", Offset = "0x1900778", VA = "0x1900778")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1900824", Offset = "0x1900824", VA = "0x1900824")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1900854", Offset = "0x1900854", VA = "0x1900854")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x190093C", Offset = "0x190093C", VA = "0x190093C")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x18FFAA8", Offset = "0x18FFAA8", VA = "0x18FFAA8")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1900390", Offset = "0x1900390", VA = "0x1900390")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x19000B8", Offset = "0x19000B8", VA = "0x19000B8")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1900DC4", Offset = "0x1900DC4", VA = "0x1900DC4")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1900DDC", Offset = "0x1900DDC", VA = "0x1900DDC")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B5")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float length;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x18FBF08", Offset = "0x18FBF08", VA = "0x18FBF08")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1900E8C", Offset = "0x1900E8C", VA = "0x1900E8C")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20000B6")]
public class OculusNetworkManager : LogrosRecords
{
	[Token(Token = "0x2000475")]
	private enum TipoOperacion
	{
		[Token(Token = "0x40025A3")]
		obtenerResultados,
		[Token(Token = "0x40025A4")]
		subirRecord
	}

	[Token(Token = "0x2000476")]
	private struct Operacion
	{
		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TipoOperacion tipoOperacion;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tablaSolicitada;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7BB")]
		public int numeroResultadosQueQuiero;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public int record;
	}

	[Token(Token = "0x2000477")]
	private enum TipoDatos
	{
		[Token(Token = "0x40025AA")]
		top,
		[Token(Token = "0x40025AB")]
		alrededorMio
	}

	[Token(Token = "0x2000478")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E650", Offset = "0x87E650")]
	private sealed class <SiguienteOperacionConPausa>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D3")]
		private object <>2__current;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public OculusNetworkManager <>4__this;

		[Token(Token = "0x170002FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020DE")]
			[Address(RVA = "0x13A1334", Offset = "0x13A1334", VA = "0x13A1334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020E0")]
			[Address(RVA = "0x13A1404", Offset = "0x13A1404", VA = "0x13A1404", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x13A1114", Offset = "0x13A1114", VA = "0x13A1114")]
		[DebuggerHidden]
		public <SiguienteOperacionConPausa>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x13A115C", Offset = "0x13A115C", VA = "0x13A115C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x13A1170", Offset = "0x13A1170", VA = "0x13A1170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x13A1364", Offset = "0x13A1364", VA = "0x13A1364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B3")]
	public static ulong m_myID;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static string m_myOculusID;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFEB4")]
	public static bool loginCorrecto;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string tablaSolicitada;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TipoDatos tipoDatosActual;

	[Token(Token = "0x400045F")]
	private const int kRangoResultados = 100;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7BB")]
	public bool ejecutandoOperacion;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private List<Operacion> operacionesPendientes;

	[Token(Token = "0x4000462")]
	private const int kFramesQueMeSalto = 30;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int framesQueLlevoSaltados;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int nResultadosQueQuiero;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Resultado> resultadoActual;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C3")]
	private List<Resultado> resultadosTop;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1926670", Offset = "0x1926670", VA = "0x1926670")]
	private void Start()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x19268E0", Offset = "0x19268E0", VA = "0x19268E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1926AA0", Offset = "0x1926AA0", VA = "0x1926AA0", Slot = "15")]
	public override void MostrarTienda()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1926AB4", Offset = "0x1926AB4", VA = "0x1926AB4", Slot = "14")]
	public override string DameMiNombre()
	{
		return null;
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1926C80", Offset = "0x1926C80", VA = "0x1926C80", Slot = "7")]
	public override void GuardarLogros()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1926C94", Offset = "0x1926C94", VA = "0x1926C94", Slot = "10")]
	public override void InicializarTablas(List<InfoTabla> tablas)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1926CAC", Offset = "0x1926CAC", VA = "0x1926CAC", Slot = "9")]
	public override void InicializarTablas(string[] tablas)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1926CC4", Offset = "0x1926CC4", VA = "0x1926CC4", Slot = "8")]
	public override void InicializarLogros()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1926CD8", Offset = "0x1926CD8", VA = "0x1926CD8", Slot = "13")]
	public override void MarcarLogroCompletado(string idLogro)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1926F28", Offset = "0x1926F28", VA = "0x1926F28", Slot = "16")]
	public override void ComprobarYDarLogroPlatino()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1927110", Offset = "0x1927110", VA = "0x1927110")]
	private void AcabarDeComprobarPlatino(Message<AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1927604", Offset = "0x1927604", VA = "0x1927604", Slot = "11")]
	public override void ObtenerResultadosAlrededorMioConTop(string tabla, int resultadosQueQuiero, bool esEvento, long record = -1L)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1927BC4", Offset = "0x1927BC4", VA = "0x1927BC4", Slot = "12")]
	public override void SubirRecord(string tabla, int record)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1927EE8", Offset = "0x1927EE8", VA = "0x1927EE8")]
	private void SubirRecordCallback(Message<bool> msg)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1927F94", Offset = "0x1927F94", VA = "0x1927F94")]
	private void ResultadosCallback(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x19269E4", Offset = "0x19269E4", VA = "0x19269E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89EF28", Offset = "0x89EF28")]
	private IEnumerator SiguienteOperacionConPausa()
	{
		return null;
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x192970C", Offset = "0x192970C", VA = "0x192970C")]
	private void SiguienteOperacion()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1929BB4", Offset = "0x1929BB4", VA = "0x1929BB4")]
	public OculusNetworkManager()
	{
	}
}
[Token(Token = "0x20000B7")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000479")]
	public delegate void OnClick();

	[Token(Token = "0x200047A")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200047B")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200047C")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200047D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E68C", Offset = "0x87E68C")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OnClick handler;

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x13565D0", Offset = "0x13565D0", VA = "0x13565D0")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x1357B4C", Offset = "0x1357B4C", VA = "0x1357B4C")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E6C8", Offset = "0x87E6C8")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x1356AF8", Offset = "0x1356AF8", VA = "0x1356AF8")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x1357DD0", Offset = "0x1357DD0", VA = "0x1357DD0")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200047F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E704", Offset = "0x87E704")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7FB")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Toggle t;

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x1356F90", Offset = "0x1356F90", VA = "0x1356F90")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x1358104", Offset = "0x1358104", VA = "0x1358104")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000480")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E740", Offset = "0x87E740")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30AFF44")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Toggle t;

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x1357330", Offset = "0x1357330", VA = "0x1357330")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x1358544", Offset = "0x1358544", VA = "0x1358544")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E77C", Offset = "0x87E77C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Toggle tb;

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x13578CC", Offset = "0x13578CC", VA = "0x13578CC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x13585A8", Offset = "0x13585A8", VA = "0x13585A8")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000467")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000468")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000469")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7DB")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFF04")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E3")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool[] reEnable;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFF14")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000476")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000477")]
	private const float marginH = 16f;

	[Token(Token = "0x4000478")]
	private const float marginV = 16f;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFF24")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 menuOffset;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OVRCameraRig rig;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F3")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private LaserPointer lp;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFF34")]
	private LineRenderer lr;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1354574", Offset = "0x1354574", VA = "0x1354574")]
	public void Awake()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1354D30", Offset = "0x1354D30", VA = "0x1354D30")]
	public void Show()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1355944", Offset = "0x1355944", VA = "0x1355944")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x13554C0", Offset = "0x13554C0", VA = "0x13554C0")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1355D10", Offset = "0x1355D10", VA = "0x1355D10")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x13561D0", Offset = "0x13561D0", VA = "0x13561D0")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1356600", Offset = "0x1356600", VA = "0x1356600")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x13567DC", Offset = "0x13567DC", VA = "0x13567DC")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1356B28", Offset = "0x1356B28", VA = "0x1356B28")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1356C7C", Offset = "0x1356C7C", VA = "0x1356C7C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1356FC0", Offset = "0x1356FC0", VA = "0x1356FC0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1357360", Offset = "0x1357360", VA = "0x1357360")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x13578FC", Offset = "0x13578FC", VA = "0x13578FC")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1357A94", Offset = "0x1357A94", VA = "0x1357A94")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000B8")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x803")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x11C66D8", Offset = "0x11C66D8", VA = "0x11C66D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x11C67FC", Offset = "0x11C67FC", VA = "0x11C67FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x11C6928", Offset = "0x11C6928", VA = "0x11C6928")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x11C6A00", Offset = "0x11C6A00", VA = "0x11C6A00")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000B9")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000482")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40025B8")]
		On,
		[Token(Token = "0x40025B9")]
		Off,
		[Token(Token = "0x40025BA")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFF54")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float maxLength;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80B")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 _forward;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFF64")]
	private Vector3 _endPoint;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool _hitTarget;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000023")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x1739270", Offset = "0x1739270", VA = "0x1739270")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1739168", Offset = "0x1739168", VA = "0x1739168")]
		set
		{
		}
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x17392A0", Offset = "0x17392A0", VA = "0x17392A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x173932C", Offset = "0x173932C", VA = "0x173932C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1739568", Offset = "0x1739568", VA = "0x1739568", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x173962C", Offset = "0x173962C", VA = "0x173962C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x17396FC", Offset = "0x17396FC", VA = "0x17396FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1739CAC", Offset = "0x1739CAC", VA = "0x1739CAC")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1739FB0", Offset = "0x1739FB0", VA = "0x1739FB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x173A0EC", Offset = "0x173A0EC", VA = "0x173A0EC")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x173A27C", Offset = "0x173A27C", VA = "0x173A27C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x173A3F0", Offset = "0x173A3F0", VA = "0x173A3F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x173A558", Offset = "0x173A558", VA = "0x173A558")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000BA")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81B")]
	private Bounds? m_bounds;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x14CC290", Offset = "0x14CC290", VA = "0x14CC290")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x14CC5E4", Offset = "0x14CC5E4", VA = "0x14CC5E4")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x14CCFD0", Offset = "0x14CCFD0", VA = "0x14CCFD0")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x20000BB")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFF84")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x11C57FC", Offset = "0x11C57FC", VA = "0x11C57FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x11C5A20", Offset = "0x11C5A20", VA = "0x11C5A20")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x11C5F50", Offset = "0x11C5F50", VA = "0x11C5F50")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x20000BC")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x823")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFF94")]
	private int m_framecount;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000024")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x11C60CC", Offset = "0x11C60CC", VA = "0x11C60CC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000003")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x11C58D4", Offset = "0x11C58D4", VA = "0x11C58D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89EFD8", Offset = "0x89EFD8")]
		add
		{
		}
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x11C5F80", Offset = "0x11C5F80", VA = "0x11C5F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F014", Offset = "0x89F014")]
		remove
		{
		}
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x11C6114", Offset = "0x11C6114", VA = "0x11C6114")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x11C62C8", Offset = "0x11C62C8", VA = "0x11C62C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x11C6664", Offset = "0x11C6664", VA = "0x11C6664")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x11C6694", Offset = "0x11C6694", VA = "0x11C6694")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x20000BD")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000499")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x400049A")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400049B")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8889FC", Offset = "0x8889FC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFFA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888A60", Offset = "0x888A60")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888AC4", Offset = "0x888AC4")]
	public float HeightOffset;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888B28", Offset = "0x888B28")]
	public float MinimumHeight;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888B8C", Offset = "0x888B8C")]
	public float MaximumHeight;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x833")]
	private CapsuleCollider _character;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x14D6B90", Offset = "0x14D6B90", VA = "0x14D6B90")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x14D6BC0", Offset = "0x14D6BC0", VA = "0x14D6BC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x14D6C78", Offset = "0x14D6C78", VA = "0x14D6C78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x14D6D44", Offset = "0x14D6D44", VA = "0x14D6D44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x14D6E10", Offset = "0x14D6E10", VA = "0x14D6E10")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x14D7588", Offset = "0x14D7588", VA = "0x14D7588")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x14D7B54", Offset = "0x14D7B54", VA = "0x14D7B54")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000BE")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFFB4")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x173F588", Offset = "0x173F588", VA = "0x173F588")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x173F730", Offset = "0x173F730", VA = "0x173F730")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000BF")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000483")]
	public enum States
	{
		[Token(Token = "0x40025BC")]
		Ready,
		[Token(Token = "0x40025BD")]
		Aim,
		[Token(Token = "0x40025BE")]
		CancelAim,
		[Token(Token = "0x40025BF")]
		PreTeleport,
		[Token(Token = "0x40025C0")]
		CancelTeleport,
		[Token(Token = "0x40025C1")]
		Teleporting,
		[Token(Token = "0x40025C2")]
		PostTeleport
	}

	[Token(Token = "0x2000484")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40025C4")]
		None,
		[Token(Token = "0x40025C5")]
		Aim,
		[Token(Token = "0x40025C6")]
		PreTeleport,
		[Token(Token = "0x40025C7")]
		Teleport
	}

	[Token(Token = "0x2000485")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40025C9")]
		Point,
		[Token(Token = "0x40025CA")]
		Sphere,
		[Token(Token = "0x40025CB")]
		Capsule
	}

	[Token(Token = "0x2000486")]
	public class AimData
	{
		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0044")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool TargetValid;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3? Destination;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Radius;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x883")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D4F0", Offset = "0x89D4F0")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170002FD")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x1746D44", Offset = "0x1746D44", VA = "0x1746D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF23C", Offset = "0x8AF23C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x1746D74", Offset = "0x1746D74", VA = "0x1746D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF278", Offset = "0x8AF278")]
			private set
			{
			}
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x1746C88", Offset = "0x1746C88", VA = "0x1746C88")]
		public AimData()
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x1746DAC", Offset = "0x1746DAC", VA = "0x1746DAC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E7B8", Offset = "0x87E7B8")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0054")]
		private object <>2__current;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170002FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002102")]
			[Address(RVA = "0x1746798", Offset = "0x1746798", VA = "0x1746798", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002104")]
			[Address(RVA = "0x1746868", Offset = "0x1746868", VA = "0x1746868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x1742670", Offset = "0x1742670", VA = "0x1742670")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x17463F0", Offset = "0x17463F0", VA = "0x17463F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x1746404", Offset = "0x1746404", VA = "0x1746404", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x17467C8", Offset = "0x17467C8", VA = "0x17467C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000488")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E7F4", Offset = "0x87E7F4")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88B")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000300")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002108")]
			[Address(RVA = "0x17453A0", Offset = "0x17453A0", VA = "0x17453A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600210A")]
			[Address(RVA = "0x1745470", Offset = "0x1745470", VA = "0x1745470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x1743008", Offset = "0x1743008", VA = "0x1743008")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x1744E9C", Offset = "0x1744E9C", VA = "0x1744E9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1744EB0", Offset = "0x1744EB0", VA = "0x1744EB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x17453D0", Offset = "0x17453D0", VA = "0x17453D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000489")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E830", Offset = "0x87E830")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0064")]
		private object <>2__current;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000302")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600210E")]
			[Address(RVA = "0x17456D0", Offset = "0x17456D0", VA = "0x17456D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002110")]
			[Address(RVA = "0x17457A0", Offset = "0x17457A0", VA = "0x17457A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x17433A4", Offset = "0x17433A4", VA = "0x17433A4")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x17454A0", Offset = "0x17454A0", VA = "0x17454A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x17454B4", Offset = "0x17454B4", VA = "0x17454B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x1745700", Offset = "0x1745700", VA = "0x1745700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200048A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E86C", Offset = "0x87E86C")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x893")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000304")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002114")]
			[Address(RVA = "0x17462F0", Offset = "0x17462F0", VA = "0x17462F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002116")]
			[Address(RVA = "0x17463C0", Offset = "0x17463C0", VA = "0x17463C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1743740", Offset = "0x1743740", VA = "0x1743740")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x1745F58", Offset = "0x1745F58", VA = "0x1745F58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x1745F6C", Offset = "0x1745F6C", VA = "0x1745F6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x1746320", Offset = "0x1746320", VA = "0x1746320", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E8A8", Offset = "0x87E8A8")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0074")]
		private object <>2__current;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000306")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600211A")]
			[Address(RVA = "0x1745A00", Offset = "0x1745A00", VA = "0x1745A00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000307")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600211C")]
			[Address(RVA = "0x1745AD0", Offset = "0x1745AD0", VA = "0x1745AD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x1743ADC", Offset = "0x1743ADC", VA = "0x1743ADC")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x17457D0", Offset = "0x17457D0", VA = "0x17457D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x17457E4", Offset = "0x17457E4", VA = "0x17457E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x1745A30", Offset = "0x1745A30", VA = "0x1745A30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E8E4", Offset = "0x87E8E4")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89B")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000308")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002120")]
			[Address(RVA = "0x1746B88", Offset = "0x1746B88", VA = "0x1746B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002122")]
			[Address(RVA = "0x1746C58", Offset = "0x1746C58", VA = "0x1746C58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x1743E78", Offset = "0x1743E78", VA = "0x1743E78")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x1746898", Offset = "0x1746898", VA = "0x1746898", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x17468AC", Offset = "0x17468AC", VA = "0x17468AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x1746BB8", Offset = "0x1746BB8", VA = "0x1746BB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200048D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E920", Offset = "0x87E920")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0084")]
		private object <>2__current;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700030A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002126")]
			[Address(RVA = "0x1745E58", Offset = "0x1745E58", VA = "0x1745E58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002128")]
			[Address(RVA = "0x1745F28", Offset = "0x1745F28", VA = "0x1745F28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x1744214", Offset = "0x1744214", VA = "0x1744214")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x1745B00", Offset = "0x1745B00", VA = "0x1745B00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x1745B14", Offset = "0x1745B14", VA = "0x1745B14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x1745E88", Offset = "0x1745E88", VA = "0x1745E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888BF0", Offset = "0x888BF0")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888C54", Offset = "0x888C54")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888CB8", Offset = "0x888CB8")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFFC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888D1C", Offset = "0x888D1C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888D80", Offset = "0x888D80")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888DE4", Offset = "0x888DE4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888E48", Offset = "0x888E48")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x843")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888EAC", Offset = "0x888EAC")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x888F10", Offset = "0x888F10")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFFD4")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888F4C", Offset = "0x888F4C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x888FB0", Offset = "0x888FB0")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84B")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFFE4")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x853")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889050", Offset = "0x889050")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88908C", Offset = "0x88908C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30AFFF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8890F0", Offset = "0x8890F0")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889154", Offset = "0x889154")]
	public float AimCollisionRadius;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8891B8", Offset = "0x8891B8")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000025")]
	public States CurrentState
	{
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x1740E10", Offset = "0x1740E10", VA = "0x1740E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F050", Offset = "0x89F050")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x1740E40", Offset = "0x1740E40", VA = "0x1740E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F08C", Offset = "0x89F08C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x17412F0", Offset = "0x17412F0", VA = "0x17412F0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000027")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x1741364", Offset = "0x1741364", VA = "0x1741364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F140", Offset = "0x89F140")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x1741394", Offset = "0x1741394", VA = "0x1741394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F17C", Offset = "0x89F17C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x1740E78", Offset = "0x1740E78", VA = "0x1740E78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F0C8", Offset = "0x89F0C8")]
		add
		{
		}
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1740FC4", Offset = "0x1740FC4", VA = "0x1740FC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F104", Offset = "0x89F104")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x17423D8", Offset = "0x17423D8", VA = "0x17423D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F21C", Offset = "0x89F21C")]
		add
		{
		}
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1742524", Offset = "0x1742524", VA = "0x1742524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F258", Offset = "0x89F258")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x17426B8", Offset = "0x17426B8", VA = "0x17426B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F344", Offset = "0x89F344")]
		add
		{
		}
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x1742804", Offset = "0x1742804", VA = "0x1742804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F380", Offset = "0x89F380")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x1742950", Offset = "0x1742950", VA = "0x1742950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F3BC", Offset = "0x89F3BC")]
		add
		{
		}
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x1742A9C", Offset = "0x1742A9C", VA = "0x1742A9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F3F8", Offset = "0x89F3F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x1742CB4", Offset = "0x1742CB4", VA = "0x1742CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F434", Offset = "0x89F434")]
		add
		{
		}
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x1742E00", Offset = "0x1742E00", VA = "0x1742E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F470", Offset = "0x89F470")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x1743050", Offset = "0x1743050", VA = "0x1743050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F55C", Offset = "0x89F55C")]
		add
		{
		}
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x174319C", Offset = "0x174319C", VA = "0x174319C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F598", Offset = "0x89F598")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x17433EC", Offset = "0x17433EC", VA = "0x17433EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F684", Offset = "0x89F684")]
		add
		{
		}
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x1743538", Offset = "0x1743538", VA = "0x1743538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F6C0", Offset = "0x89F6C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x1743788", Offset = "0x1743788", VA = "0x1743788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F7AC", Offset = "0x89F7AC")]
		add
		{
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x17438D4", Offset = "0x17438D4", VA = "0x17438D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F7E8", Offset = "0x89F7E8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1743B24", Offset = "0x1743B24", VA = "0x1743B24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F8D4", Offset = "0x89F8D4")]
		add
		{
		}
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1743C70", Offset = "0x1743C70", VA = "0x1743C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F910", Offset = "0x89F910")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1743EC0", Offset = "0x1743EC0", VA = "0x1743EC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89F9FC", Offset = "0x89F9FC")]
		add
		{
		}
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x174400C", Offset = "0x174400C", VA = "0x174400C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FA38", Offset = "0x89FA38")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x174425C", Offset = "0x174425C", VA = "0x174425C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FB24", Offset = "0x89FB24")]
		add
		{
		}
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x17443A8", Offset = "0x17443A8", VA = "0x17443A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FB60", Offset = "0x89FB60")]
		remove
		{
		}
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x1740660", Offset = "0x1740660", VA = "0x1740660")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1740730", Offset = "0x1740730", VA = "0x1740730")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1741110", Offset = "0x1741110", VA = "0x1741110")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x17413CC", Offset = "0x17413CC", VA = "0x17413CC")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1741BBC", Offset = "0x1741BBC", VA = "0x1741BBC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x89F1B8", Offset = "0x89F1B8")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1741D14", Offset = "0x1741D14", VA = "0x1741D14")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1741F10", Offset = "0x1741F10", VA = "0x1741F10")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1741F58", Offset = "0x1741F58", VA = "0x1741F58")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1742114", Offset = "0x1742114", VA = "0x1742114")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x17421EC", Offset = "0x17421EC", VA = "0x17421EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x1742290", Offset = "0x1742290", VA = "0x1742290", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x17423A8", Offset = "0x17423A8", VA = "0x17423A8", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x17422EC", Offset = "0x17422EC", VA = "0x17422EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89F294", Offset = "0x89F294")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1742BE8", Offset = "0x1742BE8", VA = "0x1742BE8")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1742F4C", Offset = "0x1742F4C", VA = "0x1742F4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89F4AC", Offset = "0x89F4AC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x17432E8", Offset = "0x17432E8", VA = "0x17432E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89F5D4", Offset = "0x89F5D4")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1743684", Offset = "0x1743684", VA = "0x1743684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89F6FC", Offset = "0x89F6FC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1743A20", Offset = "0x1743A20", VA = "0x1743A20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89F824", Offset = "0x89F824")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1743DBC", Offset = "0x1743DBC", VA = "0x1743DBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89F94C", Offset = "0x89F94C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1744158", Offset = "0x1744158", VA = "0x1744158")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89FA74", Offset = "0x89FA74")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x17444F4", Offset = "0x17444F4", VA = "0x17444F4")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x17447EC", Offset = "0x17447EC", VA = "0x17447EC")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1744878", Offset = "0x1744878", VA = "0x1744878")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1744B3C", Offset = "0x1744B3C", VA = "0x1744B3C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1744DE0", Offset = "0x1744DE0", VA = "0x1744DE0")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000C0")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool EnableRotation;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A3")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0094")]
	public float RotationAngle;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Speed;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8AB")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000F")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x120554C", Offset = "0x120554C", VA = "0x120554C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FB9C", Offset = "0x89FB9C")]
		add
		{
		}
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x1205698", Offset = "0x1205698", VA = "0x1205698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FBD8", Offset = "0x89FBD8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x12057E4", Offset = "0x12057E4", VA = "0x12057E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FC14", Offset = "0x89FC14")]
		add
		{
		}
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x1205930", Offset = "0x1205930", VA = "0x1205930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FC50", Offset = "0x89FC50")]
		remove
		{
		}
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1205A7C", Offset = "0x1205A7C", VA = "0x1205A7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1205BEC", Offset = "0x1205BEC", VA = "0x1205BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1205C00", Offset = "0x1205C00", VA = "0x1205C00")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1205D3C", Offset = "0x1205D3C", VA = "0x1205D3C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1206000", Offset = "0x1206000", VA = "0x1206000")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1206628", Offset = "0x1206628", VA = "0x1206628")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1206ADC", Offset = "0x1206ADC", VA = "0x1206ADC")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000C1")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000401")]
	[Address(RVA = "0x13872F8", Offset = "0x13872F8", VA = "0x13872F8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1387400", Offset = "0x1387400", VA = "0x1387400", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000403")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x13875B0", Offset = "0x13875B0", VA = "0x13875B0")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000C2")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8894EC", Offset = "0x8894EC")]
	public float Range;

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1387610", Offset = "0x1387610", VA = "0x1387610", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x138786C", Offset = "0x138786C", VA = "0x138786C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000C3")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889550", Offset = "0x889550")]
	public float Range;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8895B4", Offset = "0x8895B4")]
	public float MinimumElevation;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B3")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889618", Offset = "0x889618")]
	public float Gravity;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88967C", Offset = "0x88967C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88967C", Offset = "0x88967C")]
	public float AimVelocity;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B00B4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889720", Offset = "0x889720")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x889720", Offset = "0x889720")]
	public float AimStep;

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x13878B0", Offset = "0x13878B0", VA = "0x13878B0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1387E28", Offset = "0x1387E28", VA = "0x1387E28")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000C4")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8897C4", Offset = "0x8897C4")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8BB")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B00C4")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1387EAC", Offset = "0x1387EAC", VA = "0x1387EAC")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1388008", Offset = "0x1388008", VA = "0x1388008")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1388078", Offset = "0x1388078", VA = "0x1388078")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x13880E8", Offset = "0x13880E8", VA = "0x13880E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1388244", Offset = "0x1388244", VA = "0x1388244", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1388344", Offset = "0x1388344", VA = "0x1388344", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1388444", Offset = "0x1388444", VA = "0x1388444")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000C5")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889828", Offset = "0x889828")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889864", Offset = "0x889864")]
	public Transform PositionIndicator;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8898C8", Offset = "0x8898C8")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C3")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88992C", Offset = "0x88992C")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B00D4")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool _eventsActive;

	[Token(Token = "0x17000028")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000410")]
		[Address(RVA = "0x1388770", Offset = "0x1388770", VA = "0x1388770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FC8C", Offset = "0x89FC8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x13887B4", Offset = "0x13887B4", VA = "0x13887B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FCC8", Offset = "0x89FCC8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0x1388BB0", Offset = "0x1388BB0", VA = "0x1388BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FD04", Offset = "0x89FD04")]
		add
		{
		}
		[Token(Token = "0x6000417")]
		[Address(RVA = "0x1388CFC", Offset = "0x1388CFC", VA = "0x1388CFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FD40", Offset = "0x89FD40")]
		remove
		{
		}
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1388800", Offset = "0x1388800", VA = "0x1388800")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x13888F8", Offset = "0x13888F8", VA = "0x13888F8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1388AE8", Offset = "0x1388AE8", VA = "0x1388AE8")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1388B80", Offset = "0x1388B80", VA = "0x1388B80")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1388E48", Offset = "0x1388E48", VA = "0x1388E48")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1388F20", Offset = "0x1388F20", VA = "0x1388F20")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1388F6C", Offset = "0x1388F6C", VA = "0x1388F6C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000C6")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200048E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E95C", Offset = "0x87E95C")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B00E4")]
		private int <>1__state;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700030C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600212C")]
			[Address(RVA = "0x1389FE8", Offset = "0x1389FE8", VA = "0x1389FE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600212E")]
			[Address(RVA = "0x138A0B8", Offset = "0x138A0B8", VA = "0x138A0B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x13898B0", Offset = "0x13898B0", VA = "0x13898B0")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x1389E18", Offset = "0x1389E18", VA = "0x1389E18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x1389E2C", Offset = "0x1389E2C", VA = "0x1389E2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x138A018", Offset = "0x138A018", VA = "0x138A018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E998", Offset = "0x87E998")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D3")]
		private object <>2__current;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700030E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002132")]
			[Address(RVA = "0x1389D18", Offset = "0x1389D18", VA = "0x1389D18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002134")]
			[Address(RVA = "0x1389DE8", Offset = "0x1389DE8", VA = "0x1389DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x13899B4", Offset = "0x13899B4", VA = "0x13899B4")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x1389A8C", Offset = "0x1389A8C", VA = "0x1389A8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x1389AA0", Offset = "0x1389AA0", VA = "0x1389AA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x1389D48", Offset = "0x1389D48", VA = "0x1389D48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8CB")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x138946C", Offset = "0x138946C", VA = "0x138946C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x138956C", Offset = "0x138956C", VA = "0x138956C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x138962C", Offset = "0x138962C", VA = "0x138962C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x13897F4", Offset = "0x13897F4", VA = "0x13897F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89FD7C", Offset = "0x89FD7C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x13898F8", Offset = "0x13898F8", VA = "0x13898F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89FE2C", Offset = "0x89FE2C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000420")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000421")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x13899FC", Offset = "0x13899FC", VA = "0x13899FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FEDC", Offset = "0x89FEDC")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1389A44", Offset = "0x1389A44", VA = "0x1389A44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FF18", Offset = "0x89FF18")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000C7")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B00F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8899CC", Offset = "0x8899CC")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889A08", Offset = "0x889A08")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889A6C", Offset = "0x889A6C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889AD0", Offset = "0x889AD0")]
	public bool FastTeleport;

	[Token(Token = "0x17000029")]
	public Transform Pointer
	{
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x138A0E8", Offset = "0x138A0E8", VA = "0x138A0E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FF54", Offset = "0x89FF54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x138A118", Offset = "0x138A118", VA = "0x138A118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89FF90", Offset = "0x89FF90")]
		private set
		{
		}
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x138A150", Offset = "0x138A150", VA = "0x138A150", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x138A4F4", Offset = "0x138A4F4", VA = "0x138A4F4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x138A644", Offset = "0x138A644", VA = "0x138A644")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000C8")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000490")]
	public enum InputModes
	{
		[Token(Token = "0x40025ED")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40025EE")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40025EF")]
		ThumbstickTeleport,
		[Token(Token = "0x40025F0")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000491")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40025F2")]
		A,
		[Token(Token = "0x40025F3")]
		B,
		[Token(Token = "0x40025F4")]
		LeftTrigger,
		[Token(Token = "0x40025F5")]
		LeftThumbstick,
		[Token(Token = "0x40025F6")]
		RightTrigger,
		[Token(Token = "0x40025F7")]
		RightThumbstick,
		[Token(Token = "0x40025F8")]
		X,
		[Token(Token = "0x40025F9")]
		Y
	}

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8DB")]
	public Transform LeftHand;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform RightHand;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0104")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889B34", Offset = "0x889B34")]
	public InputModes InputMode;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889B98", Offset = "0x889B98")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E3")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889BFC", Offset = "0x889BFC")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0114")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889C60", Offset = "0x889C60")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x138A674", Offset = "0x138A674", VA = "0x138A674")]
	private void Start()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x138A688", Offset = "0x138A688", VA = "0x138A688", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x138B1E8", Offset = "0x138B1E8", VA = "0x138B1E8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x138B38C", Offset = "0x138B38C", VA = "0x138B38C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000C9")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000492")]
	public enum OrientationModes
	{
		[Token(Token = "0x40025FB")]
		HeadRelative,
		[Token(Token = "0x40025FC")]
		ForwardFacing
	}

	[Token(Token = "0x2000493")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E9D4", Offset = "0x87E9D4")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x903")]
		private object <>2__current;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000310")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002138")]
			[Address(RVA = "0x138BD8C", Offset = "0x138BD8C", VA = "0x138BD8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000311")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600213A")]
			[Address(RVA = "0x138BE5C", Offset = "0x138BE5C", VA = "0x138BE5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x138B890", Offset = "0x138B890", VA = "0x138B890")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x138BB0C", Offset = "0x138BB0C", VA = "0x138BB0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x138BB20", Offset = "0x138BB20", VA = "0x138BB20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x138BDBC", Offset = "0x138BDBC", VA = "0x138BDBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8FB")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x138B548", Offset = "0x138B548", VA = "0x138B548")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x138B664", Offset = "0x138B664", VA = "0x138B664")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x138B69C", Offset = "0x138B69C", VA = "0x138B69C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x138B738", Offset = "0x138B738", VA = "0x138B738", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x138B7D4", Offset = "0x138B7D4", VA = "0x138B7D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x89FFCC", Offset = "0x89FFCC")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000432")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000433")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x138B8D8", Offset = "0x138B8D8", VA = "0x138B8D8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x138BAC4", Offset = "0x138BAC4", VA = "0x138BAC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A007C", Offset = "0x8A007C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000CA")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000436")]
	[Address(RVA = "0x138BE8C", Offset = "0x138BE8C", VA = "0x138BE8C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x138BEA0", Offset = "0x138BEA0", VA = "0x138BEA0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x138C038", Offset = "0x138C038", VA = "0x138C038")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000CB")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0154")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889CC4", Offset = "0x889CC4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889D28", Offset = "0x889D28")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889D8C", Offset = "0x889D8C")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889DF0", Offset = "0x889DF0")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90B")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x138C068", Offset = "0x138C068", VA = "0x138C068", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x138C13C", Offset = "0x138C13C", VA = "0x138C13C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x138CC40", Offset = "0x138CC40", VA = "0x138CC40")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000CC")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889E54", Offset = "0x889E54")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0164")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889EB8", Offset = "0x889EB8")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889F1C", Offset = "0x889F1C")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x913")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x138CC70", Offset = "0x138CC70", VA = "0x138CC70", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x138CD3C", Offset = "0x138CD3C", VA = "0x138CD3C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x138D804", Offset = "0x138D804", VA = "0x138D804")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float dimmingSpeed;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0174")]
	public float fullIntensity;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float lowIntensity;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform destTransform;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float lastLookAtTime;

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x138D84C", Offset = "0x138D84C", VA = "0x138D84C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x138D860", Offset = "0x138D860", VA = "0x138D860")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x138D890", Offset = "0x138D890", VA = "0x138D890")]
	private void Update()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x138DA70", Offset = "0x138DA70", VA = "0x138DA70")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x138DAAC", Offset = "0x138DAAC", VA = "0x138DAAC")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000CE")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x889F80", Offset = "0x889F80")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool _eventsActive;

	[Token(Token = "0x1700002A")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000444")]
		[Address(RVA = "0x138DB18", Offset = "0x138DB18", VA = "0x138DB18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A00B8", Offset = "0x8A00B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x138DB48", Offset = "0x138DB48", VA = "0x138DB48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A00F4", Offset = "0x8A00F4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1387350", Offset = "0x1387350", VA = "0x1387350", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1387560", Offset = "0x1387560", VA = "0x1387560", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x138DB80", Offset = "0x138DB80", VA = "0x138DB80")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8A0130", Offset = "0x8A0130")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1388314", Offset = "0x1388314", VA = "0x1388314", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1388414", Offset = "0x1388414", VA = "0x1388414", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x13875E0", Offset = "0x13875E0", VA = "0x13875E0")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000CF")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000494")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EA10", Offset = "0x87EA10")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0194")]
		private object <>2__current;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000312")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600213E")]
			[Address(RVA = "0x138EBC0", Offset = "0x138EBC0", VA = "0x138EBC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000313")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002140")]
			[Address(RVA = "0x138EC90", Offset = "0x138EC90", VA = "0x138EC90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x138DFA8", Offset = "0x138DFA8", VA = "0x138DFA8")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x138E3C8", Offset = "0x138E3C8", VA = "0x138E3C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x138E3DC", Offset = "0x138E3DC", VA = "0x138E3DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x138EBF0", Offset = "0x138EBF0", VA = "0x138EBF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0184")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x889FBC", Offset = "0x889FBC")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000510")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x138DCE4", Offset = "0x138DCE4", VA = "0x138DCE4")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x138DE1C", Offset = "0x138DE1C", VA = "0x138DE1C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x138DE84", Offset = "0x138DE84", VA = "0x138DE84", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x138DEEC", Offset = "0x138DEEC", VA = "0x138DEEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A0194", Offset = "0x8A0194")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x138DFF0", Offset = "0x138DFF0", VA = "0x138DFF0", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000451")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x138E038", Offset = "0x138E038", VA = "0x138E038", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x138E380", Offset = "0x138E380", VA = "0x138E380")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0244", Offset = "0x8A0244")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000D0")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private NavMeshPath _path;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x138ECC0", Offset = "0x138ECC0", VA = "0x138ECC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x138ED5C", Offset = "0x138ED5C", VA = "0x138ED5C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x138F0D0", Offset = "0x138F0D0", VA = "0x138F0D0", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x138F334", Offset = "0x138F334", VA = "0x138F334")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8A0280", Offset = "0x8A0280")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x138F348", Offset = "0x138F348", VA = "0x138F348")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000D1")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88A020", Offset = "0x88A020")]
	public float LOSOffset;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88A084", Offset = "0x88A084")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x138F38C", Offset = "0x138F38C", VA = "0x138F38C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x138F8E0", Offset = "0x138F8E0", VA = "0x138F8E0")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000D2")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600045B")]
	[Address(RVA = "0x138F924", Offset = "0x138F924", VA = "0x138F924", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x138FC98", Offset = "0x138FC98", VA = "0x138FC98")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000D3")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600045D")]
	[Address(RVA = "0x138FCC8", Offset = "0x138FCC8", VA = "0x138FCC8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x138FDCC", Offset = "0x138FDCC", VA = "0x138FDCC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600045F")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x138FED0", Offset = "0x138FED0", VA = "0x138FED0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000D4")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EA4C", Offset = "0x87EA4C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x933")]
		private object <>2__current;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B01B4")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000314")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002144")]
			[Address(RVA = "0x139064C", Offset = "0x139064C", VA = "0x139064C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000315")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002146")]
			[Address(RVA = "0x139071C", Offset = "0x139071C", VA = "0x139071C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x1390004", Offset = "0x1390004", VA = "0x1390004")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x13902E4", Offset = "0x13902E4", VA = "0x13902E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x13902F8", Offset = "0x13902F8", VA = "0x13902F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x139067C", Offset = "0x139067C", VA = "0x139067C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B01A4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88A0E8", Offset = "0x88A0E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A0E8", Offset = "0x88A0E8")]
	public float TransitionDuration;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88A18C", Offset = "0x88A18C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A18C", Offset = "0x88A18C")]
	public float TeleportDelay;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88A228", Offset = "0x88A228")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x138FF00", Offset = "0x138FF00", VA = "0x138FF00", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x138FF48", Offset = "0x138FF48", VA = "0x138FF48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A02E4", Offset = "0x8A02E4")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x139004C", Offset = "0x139004C", VA = "0x139004C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000D5")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000464")]
	[Address(RVA = "0x139074C", Offset = "0x139074C", VA = "0x139074C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1390798", Offset = "0x1390798", VA = "0x1390798")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000D6")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EA88", Offset = "0x87EA88")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B01C4")]
		private object <>2__current;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000316")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600214A")]
			[Address(RVA = "0x1390D70", Offset = "0x1390D70", VA = "0x1390D70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600214C")]
			[Address(RVA = "0x1390E40", Offset = "0x1390E40", VA = "0x1390E40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x13908CC", Offset = "0x13908CC", VA = "0x13908CC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x1390994", Offset = "0x1390994", VA = "0x1390994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x13909A8", Offset = "0x13909A8", VA = "0x13909A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x1390DA0", Offset = "0x1390DA0", VA = "0x1390DA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88A28C", Offset = "0x88A28C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A28C", Offset = "0x88A28C")]
	public float TransitionDuration;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93B")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x13907C8", Offset = "0x13907C8", VA = "0x13907C8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1390810", Offset = "0x1390810", VA = "0x1390810")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A0394", Offset = "0x8A0394")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1390914", Offset = "0x1390914", VA = "0x1390914")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000D7")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000497")]
	public enum PlabackState
	{
		[Token(Token = "0x400260F")]
		Idle = 1,
		[Token(Token = "0x4002610")]
		Preparing,
		[Token(Token = "0x4002611")]
		Buffering,
		[Token(Token = "0x4002612")]
		Ready,
		[Token(Token = "0x4002613")]
		Ended
	}

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x943")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B01D4")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94B")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B01E4")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x953")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B01F4")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95B")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700002B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000469")]
		[Address(RVA = "0x1328298", Offset = "0x1328298", VA = "0x1328298")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0x1328ABC", Offset = "0x1328ABC", VA = "0x1328ABC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600046B")]
		[Address(RVA = "0x131DAB8", Offset = "0x131DAB8", VA = "0x131DAB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600046C")]
		[Address(RVA = "0x13208B0", Offset = "0x13208B0", VA = "0x13208B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600046D")]
		[Address(RVA = "0x13291C4", Offset = "0x13291C4", VA = "0x13291C4")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000030")]
	public static long Duration
	{
		[Token(Token = "0x600046E")]
		[Address(RVA = "0x1320DEC", Offset = "0x1320DEC", VA = "0x1320DEC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000031")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600046F")]
		[Address(RVA = "0x1320B58", Offset = "0x1320B58", VA = "0x1320B58")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000470")]
		[Address(RVA = "0x131F780", Offset = "0x131F780", VA = "0x131F780")]
		set
		{
		}
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1321DB0", Offset = "0x1321DB0", VA = "0x1321DB0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x13216CC", Offset = "0x13216CC", VA = "0x13216CC")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x131EED8", Offset = "0x131EED8", VA = "0x131EED8")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x131F2B4", Offset = "0x131F2B4", VA = "0x131F2B4")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1321270", Offset = "0x1321270", VA = "0x1321270")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x1322238", Offset = "0x1322238", VA = "0x1322238")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1320400", Offset = "0x1320400", VA = "0x1320400")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000D8")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000012")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000479")]
		[Address(RVA = "0x14CD000", Offset = "0x14CD000", VA = "0x14CD000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0444", Offset = "0x8A0444")]
		add
		{
		}
		[Token(Token = "0x600047A")]
		[Address(RVA = "0x14CD14C", Offset = "0x14CD14C", VA = "0x14CD14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0480", Offset = "0x8A0480")]
		remove
		{
		}
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x14CD298", Offset = "0x14CD298", VA = "0x14CD298", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x14CD310", Offset = "0x14CD310", VA = "0x14CD310")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000D9")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000498")]
	public enum ButtonType
	{
		[Token(Token = "0x4002615")]
		Play,
		[Token(Token = "0x4002616")]
		Pause,
		[Token(Token = "0x4002617")]
		FastForward,
		[Token(Token = "0x4002618")]
		Rewind,
		[Token(Token = "0x4002619")]
		SkipForward,
		[Token(Token = "0x400261A")]
		SkipBack,
		[Token(Token = "0x400261B")]
		Stop
	}

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000032")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0x1312200", Offset = "0x1312200", VA = "0x1312200")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600047E")]
		[Address(RVA = "0x1312230", Offset = "0x1312230", VA = "0x1312230")]
		set
		{
		}
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x13122B0", Offset = "0x13122B0", VA = "0x13122B0", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x13156E8", Offset = "0x13156E8", VA = "0x13156E8")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000DA")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000499")]
	public enum VideoShape
	{
		[Token(Token = "0x400261D")]
		_360,
		[Token(Token = "0x400261E")]
		_180,
		[Token(Token = "0x400261F")]
		Quad
	}

	[Token(Token = "0x200049A")]
	public enum VideoStereo
	{
		[Token(Token = "0x4002621")]
		Mono,
		[Token(Token = "0x4002622")]
		TopBottom,
		[Token(Token = "0x4002623")]
		LeftRight,
		[Token(Token = "0x4002624")]
		BottomTop
	}

	[Token(Token = "0x200049B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EAC4", Offset = "0x87EAC4")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000318")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002150")]
			[Address(RVA = "0x1322A08", Offset = "0x1322A08", VA = "0x1322A08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000319")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002152")]
			[Address(RVA = "0x1322AD8", Offset = "0x1322AD8", VA = "0x1322AD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x131E780", Offset = "0x131E780", VA = "0x131E780")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x1322558", Offset = "0x1322558", VA = "0x1322558", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x132256C", Offset = "0x132256C", VA = "0x132256C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x1322A38", Offset = "0x1322A38", VA = "0x1322A38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200049C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EB00", Offset = "0x87EB00")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99B")]
		public string moviePath;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public string drmLicencesUrl;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0284")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x131ED58", Offset = "0x131ED58", VA = "0x131ED58")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x1321BAC", Offset = "0x1321BAC", VA = "0x1321BAC")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x973")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0234")]
	private OVROverlay overlay;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88A3E4", Offset = "0x88A3E4")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88A420", Offset = "0x88A420")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x97B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88A45C", Offset = "0x88A45C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0244")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string MovieName;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool LoopVideo;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x983")]
	public VideoShape Shape;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public VideoStereo Stereo;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0254")]
	public bool DisplayMono;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000033")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000481")]
		[Address(RVA = "0x131D3DC", Offset = "0x131D3DC", VA = "0x131D3DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A04BC", Offset = "0x8A04BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000482")]
		[Address(RVA = "0x131D420", Offset = "0x131D420", VA = "0x131D420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A04F8", Offset = "0x8A04F8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public long Duration
	{
		[Token(Token = "0x6000483")]
		[Address(RVA = "0x131D46C", Offset = "0x131D46C", VA = "0x131D46C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0534", Offset = "0x8A0534")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000484")]
		[Address(RVA = "0x131D49C", Offset = "0x131D49C", VA = "0x131D49C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0570", Offset = "0x8A0570")]
		private set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0x131D4D4", Offset = "0x131D4D4", VA = "0x131D4D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A05AC", Offset = "0x8A05AC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000486")]
		[Address(RVA = "0x131D504", Offset = "0x131D504", VA = "0x131D504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A05E8", Offset = "0x8A05E8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x131D53C", Offset = "0x131D53C", VA = "0x131D53C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x131DBD0", Offset = "0x131DBD0", VA = "0x131DBD0")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x131DCC0", Offset = "0x131DCC0", VA = "0x131DCC0")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x131E6C4", Offset = "0x131E6C4", VA = "0x131E6C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A0624", Offset = "0x8A0624")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x131E7C8", Offset = "0x131E7C8", VA = "0x131E7C8")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x131ED88", Offset = "0x131ED88", VA = "0x131ED88")]
	public void Play()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x131F164", Offset = "0x131F164", VA = "0x131F164")]
	public void Pause()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x131F540", Offset = "0x131F540", VA = "0x131F540")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x131FA8C", Offset = "0x131FA8C", VA = "0x131FA8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1321080", Offset = "0x1321080", VA = "0x1321080")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x132157C", Offset = "0x132157C", VA = "0x132157C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1321958", Offset = "0x1321958", VA = "0x1321958")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x1321B58", Offset = "0x1321B58", VA = "0x1321B58")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000DB")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200049D")]
	private enum PlaybackState
	{
		[Token(Token = "0x400262C")]
		Playing,
		[Token(Token = "0x400262D")]
		Paused,
		[Token(Token = "0x400262E")]
		Rewinding,
		[Token(Token = "0x400262F")]
		FastForwarding
	}

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A3")]
	public GameObject LeftHand;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject RightHand;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0294")]
	public Canvas Canvas;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Slider ProgressBar;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9AB")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B02A4")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float TimeoutTime;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool _isVisible;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B3")]
	private float _lastButtonTime;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool _didSeek;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B02B4")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private PlaybackState _state;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1322B08", Offset = "0x1322B08", VA = "0x1322B08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1322FF0", Offset = "0x1322FF0", VA = "0x1322FF0")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x13232F4", Offset = "0x13232F4", VA = "0x13232F4")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x13235F0", Offset = "0x13235F0", VA = "0x13235F0")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1323844", Offset = "0x1323844", VA = "0x1323844")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1323558", Offset = "0x1323558", VA = "0x1323558")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x13239B4", Offset = "0x13239B4", VA = "0x13239B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1322DC0", Offset = "0x1322DC0", VA = "0x1322DC0")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x13241D4", Offset = "0x13241D4", VA = "0x13241D4")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000DC")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87AA4C", Offset = "0x87AA4C")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x200049E")]
	private enum CubeFace
	{
		[Token(Token = "0x4002631")]
		Right,
		[Token(Token = "0x4002632")]
		Left,
		[Token(Token = "0x4002633")]
		Top,
		[Token(Token = "0x4002634")]
		Bottom,
		[Token(Token = "0x4002635")]
		Front,
		[Token(Token = "0x4002636")]
		Back,
		[Token(Token = "0x4002637")]
		COUNT
	}

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Mesh _Mesh;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C3")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private List<Vector2> _UV;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B02D4")]
	private List<int> _Tris;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OVROverlay _Overlay;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9CB")]
	private Transform _CameraRoot;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Transform _Transform;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B02E4")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D3")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B02F4")]
	private bool _Awake;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x190494C", Offset = "0x190494C", VA = "0x190494C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1904C18", Offset = "0x1904C18", VA = "0x1904C18")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1905040", Offset = "0x1905040", VA = "0x1905040")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1905BA8", Offset = "0x1905BA8", VA = "0x1905BA8")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1906184", Offset = "0x1906184", VA = "0x1906184")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x19091A4", Offset = "0x19091A4", VA = "0x19091A4")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x19092B0", Offset = "0x19092B0", VA = "0x19092B0")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1906678", Offset = "0x1906678", VA = "0x1906678")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1909490", Offset = "0x1909490", VA = "0x1909490")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1909A04", Offset = "0x1909A04", VA = "0x1909A04")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1907370", Offset = "0x1907370", VA = "0x1907370")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1908018", Offset = "0x1908018", VA = "0x1908018")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1908608", Offset = "0x1908608", VA = "0x1908608")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1909D14", Offset = "0x1909D14", VA = "0x1909D14")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000DD")]
public static class VectorUtil
{
	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1CC5288", Offset = "0x1CC5288", VA = "0x1CC5288")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000DE")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0314")]
	private bool inMenu;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Text sliderText;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1358D34", Offset = "0x1358D34", VA = "0x1358D34")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x135942C", Offset = "0x135942C", VA = "0x135942C")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x13595A0", Offset = "0x13595A0", VA = "0x13595A0")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x13598B8", Offset = "0x13598B8", VA = "0x13598B8")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1359A40", Offset = "0x1359A40", VA = "0x1359A40")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1359CB4", Offset = "0x1359CB4", VA = "0x1359CB4")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1359DAC", Offset = "0x1359DAC", VA = "0x1359DAC")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1359DDC", Offset = "0x1359DDC", VA = "0x1359DDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0710", Offset = "0x8A0710")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1359E88", Offset = "0x1359E88", VA = "0x1359E88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A074C", Offset = "0x8A074C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1359F34", Offset = "0x1359F34", VA = "0x1359F34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0788", Offset = "0x8A0788")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1359FE0", Offset = "0x1359FE0", VA = "0x1359FE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A07C4", Offset = "0x8A07C4")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000DF")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200049F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EB3C", Offset = "0x87EB3C")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0324")]
		private int <>1__state;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700031A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002158")]
			[Address(RVA = "0x11C73E0", Offset = "0x11C73E0", VA = "0x11C73E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600215A")]
			[Address(RVA = "0x11C74B0", Offset = "0x11C74B0", VA = "0x11C74B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x11C6FC4", Offset = "0x11C6FC4", VA = "0x11C6FC4")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x11C703C", Offset = "0x11C703C", VA = "0x11C703C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x11C7050", Offset = "0x11C7050", VA = "0x11C7050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x11C7410", Offset = "0x11C7410", VA = "0x11C7410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject _notification;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9EB")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Transform _centerEye;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x11C6A30", Offset = "0x11C6A30", VA = "0x11C6A30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x11C6C20", Offset = "0x11C6C20", VA = "0x11C6C20")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x11C6B64", Offset = "0x11C6B64", VA = "0x11C6B64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A0800", Offset = "0x8A0800")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x11C700C", Offset = "0x11C700C", VA = "0x11C700C")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000E0")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private CharacterController _character;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F3")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float _height;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0334")]
	private float _radius;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A4D4", Offset = "0x88A4D4")]
	public int SubdivisionsU;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88A520", Offset = "0x88A520")]
	public int SubdivisionsV;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int _subdivisionU;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9FB")]
	private int _subdivisionV;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0344")]
	private int[] _triangles;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x144A514", Offset = "0x144A514", VA = "0x144A514")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x144C6F4", Offset = "0x144C6F4", VA = "0x144C6F4")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000E1")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private LocomotionController lc;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool inMenu;

	[Token(Token = "0x17000036")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x173F760", Offset = "0x173F760", VA = "0x173F760")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x173F7F8", Offset = "0x173F7F8", VA = "0x173F7F8")]
	public void Start()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x173FE50", Offset = "0x173FE50", VA = "0x173FE50")]
	public void Update()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x17400C4", Offset = "0x17400C4", VA = "0x17400C4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8A08B0", Offset = "0x8A08B0")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60004C2")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60004C3")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60004C4")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60004C5")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60004C6")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60004C7")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60004C8")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60004C9")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x17401B4", Offset = "0x17401B4", VA = "0x17401B4")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x1740284", Offset = "0x1740284", VA = "0x1740284")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1740378", Offset = "0x1740378", VA = "0x1740378")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1740800", Offset = "0x1740800", VA = "0x1740800")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1740990", Offset = "0x1740990", VA = "0x1740990")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x173FC34", Offset = "0x173FC34", VA = "0x173FC34")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1740B10", Offset = "0x1740B10", VA = "0x1740B10")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1740BF0", Offset = "0x1740BF0", VA = "0x1740BF0")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1740DE0", Offset = "0x1740DE0", VA = "0x1740DE0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87AB90", Offset = "0x87AB90")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20004A0")]
	public enum DrawMode
	{
		[Token(Token = "0x400263C")]
		Opaque,
		[Token(Token = "0x400263D")]
		OpaqueWithClip,
		[Token(Token = "0x400263E")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400263F")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA03")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0354")]
	private Canvas _canvas;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Camera _camera;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0B")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Mesh _quad;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0364")]
	private Material _defaultMat;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int MaxTextureSize;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int MinTextureSize;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA13")]
	public int DrawRate;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int DrawFrameOffset;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0374")]
	public bool Expensive;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int Layer;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public DrawMode Opacity;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool ScaleViewport;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1B")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000037")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x19044A8", Offset = "0x19044A8", VA = "0x19044A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x1904614", Offset = "0x1904614", VA = "0x1904614")]
		set
		{
		}
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1900F8C", Offset = "0x1900F8C", VA = "0x1900F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x1902DD0", Offset = "0x1902DD0", VA = "0x1902DD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1902EF4", Offset = "0x1902EF4", VA = "0x1902EF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1903120", Offset = "0x1903120", VA = "0x1903120")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x190334C", Offset = "0x190334C", VA = "0x190334C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1903894", Offset = "0x1903894", VA = "0x1903894")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x19047FC", Offset = "0x19047FC", VA = "0x19047FC")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000E3")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20004A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EB78", Offset = "0x87EB78")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int sceneIndex;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StartMenu <>4__this;

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x120DF70", Offset = "0x120DF70", VA = "0x120DF70")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x120E160", Offset = "0x120E160", VA = "0x120E160")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA23")]
	public OVROverlay overlay;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public OVROverlay text;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0394")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x120DC54", Offset = "0x120DC54", VA = "0x120DC54")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x120DFA0", Offset = "0x120DFA0", VA = "0x120DFA0")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x120E130", Offset = "0x120E130", VA = "0x120E130")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000E4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87AC40", Offset = "0x87AC40")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20004A2")]
	public enum RotationAxes
	{
		[Token(Token = "0x4002643")]
		MouseXAndY,
		[Token(Token = "0x4002644")]
		MouseX,
		[Token(Token = "0x4002645")]
		MouseY
	}

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RotationAxes axes;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2B")]
	public float sensitivityX;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float sensitivityY;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B03A4")]
	public float minimumX;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float maximumX;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float minimumY;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float maximumY;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA33")]
	private float rotationY;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x131B214", Offset = "0x131B214", VA = "0x131B214")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x131B724", Offset = "0x131B724", VA = "0x131B724")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x131B87C", Offset = "0x131B87C", VA = "0x131B87C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000E5")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20004A3")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4002647")]
		Uninitialized = -1,
		[Token(Token = "0x4002648")]
		NotEnabled,
		[Token(Token = "0x4002649")]
		Success,
		[Token(Token = "0x400264A")]
		StreamError,
		[Token(Token = "0x400264B")]
		ProcessError,
		[Token(Token = "0x400264C")]
		MaxStatValue
	}

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource source;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3B")]
	private static int numFOAChannels;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B03C4")]
	private static int paramAmbiStat;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000038")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x2753738", Offset = "0x2753738", VA = "0x2753738")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x275377C", Offset = "0x275377C", VA = "0x275377C")]
		set
		{
		}
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x27537C8", Offset = "0x27537C8", VA = "0x27537C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x2753D44", Offset = "0x2753D44", VA = "0x2753D44")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x2754460", Offset = "0x2754460", VA = "0x2754460")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000E6")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20004A4")]
	private enum Parameters
	{
		[Token(Token = "0x400264E")]
		P_GAIN,
		[Token(Token = "0x400264F")]
		P_USEINVSQR,
		[Token(Token = "0x4002650")]
		P_NEAR,
		[Token(Token = "0x4002651")]
		P_FAR,
		[Token(Token = "0x4002652")]
		P_RADIUS,
		[Token(Token = "0x4002653")]
		P_DISABLE_RFL,
		[Token(Token = "0x4002654")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4002655")]
		P_AMBISTAT,
		[Token(Token = "0x4002656")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4002657")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4002658")]
		P_SENDLEVEL,
		[Token(Token = "0x4002659")]
		P_NUM
	}

	[Token(Token = "0x40005A1")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B03E4")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA53")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B03F4")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000039")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x2754B98", Offset = "0x2754B98", VA = "0x2754B98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x2754BDC", Offset = "0x2754BDC", VA = "0x2754BDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public float Gain
	{
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x2754C28", Offset = "0x2754C28", VA = "0x2754C28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x2754C58", Offset = "0x2754C58", VA = "0x2754C58")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x2754D74", Offset = "0x2754D74", VA = "0x2754D74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x2754DB8", Offset = "0x2754DB8", VA = "0x2754DB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float Near
	{
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x2754E04", Offset = "0x2754E04", VA = "0x2754E04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x2754E34", Offset = "0x2754E34", VA = "0x2754E34")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float Far
	{
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x2754F54", Offset = "0x2754F54", VA = "0x2754F54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x2754F84", Offset = "0x2754F84", VA = "0x2754F84")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x27550A4", Offset = "0x27550A4", VA = "0x27550A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x27550D4", Offset = "0x27550D4", VA = "0x27550D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public float ReverbSend
	{
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x27551F0", Offset = "0x27551F0", VA = "0x27551F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x2755220", Offset = "0x2755220", VA = "0x2755220")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public bool EnableRfl
	{
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x2755340", Offset = "0x2755340", VA = "0x2755340")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x2755384", Offset = "0x2755384", VA = "0x2755384")]
		set
		{
		}
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x2754560", Offset = "0x2754560", VA = "0x2754560")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8A0914", Offset = "0x8A0914")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x27549B8", Offset = "0x27549B8", VA = "0x27549B8")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x27553D0", Offset = "0x27553D0", VA = "0x27553D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x2755800", Offset = "0x2755800", VA = "0x2755800")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x2755814", Offset = "0x2755814", VA = "0x2755814")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x275548C", Offset = "0x275548C", VA = "0x275548C")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x27559A4", Offset = "0x27559A4", VA = "0x27559A4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x2756434", Offset = "0x2756434", VA = "0x2756434")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000501")]
	[Address(RVA = "0x27548BC", Offset = "0x27548BC", VA = "0x27548BC")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x2756644", Offset = "0x2756644", VA = "0x2756644")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000E7")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool profilerEnabled;

	[Token(Token = "0x40005AC")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int port;

	[Token(Token = "0x40005AE")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x27566C8", Offset = "0x27566C8", VA = "0x27566C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x27566FC", Offset = "0x27566FC", VA = "0x27566FC")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000506")]
	[Address(RVA = "0x27568CC", Offset = "0x27568CC", VA = "0x27568CC")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000507")]
	[Address(RVA = "0x27567D0", Offset = "0x27567D0", VA = "0x27567D0")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x27569D8", Offset = "0x27569D8", VA = "0x27569D8")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000E8")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20004A5")]
	private struct MeshMaterial
	{
		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6B")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20004A6")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public Terrain terrain;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0434")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string filePathRelative;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool fileEnabled;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA73")]
	public bool includeChildMeshes;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0434")]
	public static int OSPSuccess;

	[Token(Token = "0x40005B5")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int terrainDecimation;

	[Token(Token = "0x17000041")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x275C540", Offset = "0x275C540", VA = "0x275C540")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000042")]
	public string filePath
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x275C664", Offset = "0x275C664", VA = "0x275C664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x275C784", Offset = "0x275C784", VA = "0x275C784")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x275CA90", Offset = "0x275CA90", VA = "0x275CA90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x275CAC0", Offset = "0x275CAC0", VA = "0x275CAC0")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x275D4C0", Offset = "0x275D4C0", VA = "0x275D4C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x275DADC", Offset = "0x275DADC", VA = "0x275DADC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x275DCDC", Offset = "0x275DCDC", VA = "0x275DCDC")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x275EC68", Offset = "0x275EC68", VA = "0x275EC68")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x275ED5C", Offset = "0x275ED5C", VA = "0x275ED5C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x2762F30", Offset = "0x2762F30", VA = "0x2762F30")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x2762C1C", Offset = "0x2762C1C", VA = "0x2762C1C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x275D15C", Offset = "0x275D15C", VA = "0x275D15C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x275CDF0", Offset = "0x275CDF0", VA = "0x275CDF0")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x2763E64", Offset = "0x2763E64", VA = "0x2763E64")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x2764590", Offset = "0x2764590", VA = "0x2764590")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000E9")]
internal class ONSPPropagation
{
	[Token(Token = "0x20004A7")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4002660")]
		Int8,
		[Token(Token = "0x4002661")]
		UInt8,
		[Token(Token = "0x4002662")]
		Int16,
		[Token(Token = "0x4002663")]
		UInt16,
		[Token(Token = "0x4002664")]
		Int32,
		[Token(Token = "0x4002665")]
		UInt32,
		[Token(Token = "0x4002666")]
		Int64,
		[Token(Token = "0x4002667")]
		UInt64,
		[Token(Token = "0x4002668")]
		Float16,
		[Token(Token = "0x4002669")]
		Float32,
		[Token(Token = "0x400266A")]
		Float64
	}

	[Token(Token = "0x20004A8")]
	public class ClientType
	{
		[Token(Token = "0x400266B")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x400266C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x400266D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x400266E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400266F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4002670")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4002671")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4002672")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4002673")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4002674")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4002675")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4002676")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4002677")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4002678")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4002679")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x27574F8", Offset = "0x27574F8", VA = "0x27574F8")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20004A9")]
	public interface PropagationInterface
	{
		[Token(Token = "0x600215E")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x600215F")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6002160")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6002161")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002162")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6002163")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002164")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002165")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002166")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002167")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002168")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002169")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x600216A")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600216B")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600216C")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20004AA")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x400267A")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA93")]
		private IntPtr context_;

		[Token(Token = "0x1700031C")]
		private IntPtr context
		{
			[Token(Token = "0x600216D")]
			[Address(RVA = "0x2758F84", Offset = "0x2758F84", VA = "0x2758F84")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600216E")]
		[Address(RVA = "0x275905C", Offset = "0x275905C", VA = "0x275905C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600216F")]
		[Address(RVA = "0x2759160", Offset = "0x2759160", VA = "0x2759160")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x2759264", Offset = "0x2759264", VA = "0x2759264", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002171")]
		[Address(RVA = "0x27592C0", Offset = "0x27592C0", VA = "0x27592C0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x27593C4", Offset = "0x27593C4", VA = "0x27593C4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002173")]
		[Address(RVA = "0x2759420", Offset = "0x2759420", VA = "0x2759420")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x2759524", Offset = "0x2759524", VA = "0x2759524", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002175")]
		[Address(RVA = "0x2759580", Offset = "0x2759580", VA = "0x2759580")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x275967C", Offset = "0x275967C", VA = "0x275967C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002177")]
		[Address(RVA = "0x27596C0", Offset = "0x27596C0", VA = "0x27596C0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x27598E8", Offset = "0x27598E8", VA = "0x27598E8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002179")]
		[Address(RVA = "0x2759AF8", Offset = "0x2759AF8", VA = "0x2759AF8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x2759C28", Offset = "0x2759C28", VA = "0x2759C28", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600217B")]
		[Address(RVA = "0x2759C7C", Offset = "0x2759C7C", VA = "0x2759C7C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x2759EF0", Offset = "0x2759EF0", VA = "0x2759EF0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600217D")]
		[Address(RVA = "0x2759F44", Offset = "0x2759F44", VA = "0x2759F44")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x275A078", Offset = "0x275A078", VA = "0x275A078", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600217F")]
		[Address(RVA = "0x275A0CC", Offset = "0x275A0CC", VA = "0x275A0CC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x275A200", Offset = "0x275A200", VA = "0x275A200", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002181")]
		[Address(RVA = "0x275A254", Offset = "0x275A254", VA = "0x275A254")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x275A388", Offset = "0x275A388", VA = "0x275A388", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002183")]
		[Address(RVA = "0x275A3DC", Offset = "0x275A3DC", VA = "0x275A3DC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x275A4E0", Offset = "0x275A4E0", VA = "0x275A4E0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002185")]
		[Address(RVA = "0x275A53C", Offset = "0x275A53C", VA = "0x275A53C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x275A638", Offset = "0x275A638", VA = "0x275A638", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002187")]
		[Address(RVA = "0x275A67C", Offset = "0x275A67C", VA = "0x275A67C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x275A790", Offset = "0x275A790", VA = "0x275A790", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002189")]
		[Address(RVA = "0x275A804", Offset = "0x275A804", VA = "0x275A804")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x275A918", Offset = "0x275A918", VA = "0x275A918", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600218B")]
		[Address(RVA = "0x275A98C", Offset = "0x275A98C", VA = "0x275A98C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x275AA90", Offset = "0x275AA90", VA = "0x275AA90", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x2757448", Offset = "0x2757448", VA = "0x2757448")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20004AB")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x400267C")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0474")]
		private IntPtr context_;

		[Token(Token = "0x1700031D")]
		private IntPtr context
		{
			[Token(Token = "0x600218E")]
			[Address(RVA = "0x275AAE4", Offset = "0x275AAE4", VA = "0x275AAE4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600218F")]
		[Address(RVA = "0x2757140", Offset = "0x2757140", VA = "0x2757140")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002190")]
		[Address(RVA = "0x275ABBC", Offset = "0x275ABBC", VA = "0x275ABBC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x275ACC0", Offset = "0x275ACC0", VA = "0x275ACC0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002192")]
		[Address(RVA = "0x275AD1C", Offset = "0x275AD1C", VA = "0x275AD1C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x275AE20", Offset = "0x275AE20", VA = "0x275AE20", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002194")]
		[Address(RVA = "0x275AE7C", Offset = "0x275AE7C", VA = "0x275AE7C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x275AF80", Offset = "0x275AF80", VA = "0x275AF80", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002196")]
		[Address(RVA = "0x275AFDC", Offset = "0x275AFDC", VA = "0x275AFDC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x275B0D8", Offset = "0x275B0D8", VA = "0x275B0D8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002198")]
		[Address(RVA = "0x275B11C", Offset = "0x275B11C", VA = "0x275B11C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x275B344", Offset = "0x275B344", VA = "0x275B344", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600219A")]
		[Address(RVA = "0x275B554", Offset = "0x275B554", VA = "0x275B554")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x275B684", Offset = "0x275B684", VA = "0x275B684", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600219C")]
		[Address(RVA = "0x275B6D8", Offset = "0x275B6D8", VA = "0x275B6D8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x275B94C", Offset = "0x275B94C", VA = "0x275B94C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600219E")]
		[Address(RVA = "0x275B9A0", Offset = "0x275B9A0", VA = "0x275B9A0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x275BAD4", Offset = "0x275BAD4", VA = "0x275BAD4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x275BB28", Offset = "0x275BB28", VA = "0x275BB28")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x275BC5C", Offset = "0x275BC5C", VA = "0x275BC5C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x275BCB0", Offset = "0x275BCB0", VA = "0x275BCB0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x275BDE4", Offset = "0x275BDE4", VA = "0x275BDE4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x275BE38", Offset = "0x275BE38", VA = "0x275BE38")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x275BF3C", Offset = "0x275BF3C", VA = "0x275BF3C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x275BF98", Offset = "0x275BF98", VA = "0x275BF98")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x275C094", Offset = "0x275C094", VA = "0x275C094", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x275C0D8", Offset = "0x275C0D8", VA = "0x275C0D8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x275C1EC", Offset = "0x275C1EC", VA = "0x275C1EC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x275C260", Offset = "0x275C260", VA = "0x275C260")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x275C374", Offset = "0x275C374", VA = "0x275C374", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x275C3E8", Offset = "0x275C3E8", VA = "0x275C3E8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x275C4EC", Offset = "0x275C4EC", VA = "0x275C4EC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x2757244", Offset = "0x2757244", VA = "0x2757244")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20004AC")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400267E")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr context_;

		[Token(Token = "0x1700031E")]
		private IntPtr context
		{
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x2757528", Offset = "0x2757528", VA = "0x2757528")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x27572C4", Offset = "0x27572C4", VA = "0x27572C4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x2757600", Offset = "0x2757600", VA = "0x2757600")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x2757704", Offset = "0x2757704", VA = "0x2757704", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x2757760", Offset = "0x2757760", VA = "0x2757760")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x2757864", Offset = "0x2757864", VA = "0x2757864", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x27578C0", Offset = "0x27578C0", VA = "0x27578C0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x27579C4", Offset = "0x27579C4", VA = "0x27579C4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x2757A20", Offset = "0x2757A20", VA = "0x2757A20")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x2757B1C", Offset = "0x2757B1C", VA = "0x2757B1C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x2757B60", Offset = "0x2757B60", VA = "0x2757B60")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x2757D88", Offset = "0x2757D88", VA = "0x2757D88", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x2757F98", Offset = "0x2757F98", VA = "0x2757F98")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x27580C8", Offset = "0x27580C8", VA = "0x27580C8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x275811C", Offset = "0x275811C", VA = "0x275811C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x2758390", Offset = "0x2758390", VA = "0x2758390", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x27583E4", Offset = "0x27583E4", VA = "0x27583E4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x2758518", Offset = "0x2758518", VA = "0x2758518", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x275856C", Offset = "0x275856C", VA = "0x275856C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x27586A0", Offset = "0x27586A0", VA = "0x27586A0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x27586F4", Offset = "0x27586F4", VA = "0x27586F4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x2758828", Offset = "0x2758828", VA = "0x2758828", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x275887C", Offset = "0x275887C", VA = "0x275887C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x2758980", Offset = "0x2758980", VA = "0x2758980", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x27589DC", Offset = "0x27589DC", VA = "0x27589DC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x2758AD8", Offset = "0x2758AD8", VA = "0x2758AD8", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x2758B1C", Offset = "0x2758B1C", VA = "0x2758B1C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x2758C30", Offset = "0x2758C30", VA = "0x2758C30", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x2758CA4", Offset = "0x2758CA4", VA = "0x2758CA4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x2758DB8", Offset = "0x2758DB8", VA = "0x2758DB8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x2758E2C", Offset = "0x2758E2C", VA = "0x2758E2C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x2758F30", Offset = "0x2758F30", VA = "0x2758F30", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x27573C8", Offset = "0x27573C8", VA = "0x27573C8")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000043")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600051A")]
		[Address(RVA = "0x2756A1C", Offset = "0x2756A1C", VA = "0x2756A1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x2756AFC", Offset = "0x2756AFC", VA = "0x2756AFC")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x27574C8", Offset = "0x27574C8", VA = "0x27574C8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000EA")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20004AD")]
	public enum Preset
	{
		[Token(Token = "0x4002681")]
		Custom,
		[Token(Token = "0x4002682")]
		AcousticTile,
		[Token(Token = "0x4002683")]
		Brick,
		[Token(Token = "0x4002684")]
		BrickPainted,
		[Token(Token = "0x4002685")]
		Carpet,
		[Token(Token = "0x4002686")]
		CarpetHeavy,
		[Token(Token = "0x4002687")]
		CarpetHeavyPadded,
		[Token(Token = "0x4002688")]
		CeramicTile,
		[Token(Token = "0x4002689")]
		Concrete,
		[Token(Token = "0x400268A")]
		ConcreteRough,
		[Token(Token = "0x400268B")]
		ConcreteBlock,
		[Token(Token = "0x400268C")]
		ConcreteBlockPainted,
		[Token(Token = "0x400268D")]
		Curtain,
		[Token(Token = "0x400268E")]
		Foliage,
		[Token(Token = "0x400268F")]
		Glass,
		[Token(Token = "0x4002690")]
		GlassHeavy,
		[Token(Token = "0x4002691")]
		Grass,
		[Token(Token = "0x4002692")]
		Gravel,
		[Token(Token = "0x4002693")]
		GypsumBoard,
		[Token(Token = "0x4002694")]
		PlasterOnBrick,
		[Token(Token = "0x4002695")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4002696")]
		Soil,
		[Token(Token = "0x4002697")]
		SoundProof,
		[Token(Token = "0x4002698")]
		Snow,
		[Token(Token = "0x4002699")]
		Steel,
		[Token(Token = "0x400269A")]
		Water,
		[Token(Token = "0x400269B")]
		WoodThin,
		[Token(Token = "0x400269C")]
		WoodThick,
		[Token(Token = "0x400269D")]
		WoodFloor,
		[Token(Token = "0x400269E")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20004AE")]
	public sealed class Point
	{
		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float frequency;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xACB")]
		public float data;

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x2772A84", Offset = "0x2772A84", VA = "0x2772A84")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x2772CAC", Offset = "0x2772CAC", VA = "0x2772CAC")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x2772DCC", Offset = "0x2772DCC", VA = "0x2772DCC")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20004AF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x87EBB4", Offset = "0x87EBB4")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886844", Offset = "0x886844")]
		private sealed class <>c
		{
			[Token(Token = "0x4002DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4002DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0x2773AC4", Offset = "0x2773AC4", VA = "0x2773AC4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0x2773AF4", Offset = "0x2773AF4", VA = "0x2773AF4")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6002CEA")]
			[Address(RVA = "0x2773B38", Offset = "0x2773B38", VA = "0x2773B38")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public int selection;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B04E4")]
		public List<Point> points;

		[Token(Token = "0x1700031F")]
		public float Item
		{
			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x2772E74", Offset = "0x2772E74", VA = "0x2772E74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x2772BE8", Offset = "0x2772BE8", VA = "0x2772BE8")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr materialHandle;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88A840", Offset = "0x88A840")]
	public Spectrum absorption;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88A8A4", Offset = "0x88A8A4")]
	public Spectrum transmission;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0484")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88A908", Offset = "0x88A908")]
	public Spectrum scattering;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000044")]
	public Preset preset
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0x2764714", Offset = "0x2764714", VA = "0x2764714")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x2764744", Offset = "0x2764744", VA = "0x2764744")]
		set
		{
		}
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x2764798", Offset = "0x2764798", VA = "0x2764798")]
	private void Start()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x2763C60", Offset = "0x2763C60", VA = "0x2763C60")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x2765180", Offset = "0x2765180", VA = "0x2765180")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x27651B0", Offset = "0x27651B0", VA = "0x27651B0")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x27647C8", Offset = "0x27647C8", VA = "0x27647C8")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x27626C4", Offset = "0x27626C4", VA = "0x27626C4")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x27652BC", Offset = "0x27652BC", VA = "0x27652BC")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x2765AA0", Offset = "0x2765AA0", VA = "0x2765AA0")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x27662B8", Offset = "0x27662B8", VA = "0x27662B8")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x2766A70", Offset = "0x2766A70", VA = "0x2766A70")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x276725C", Offset = "0x276725C", VA = "0x276725C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x2767A80", Offset = "0x2767A80", VA = "0x2767A80")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x27682A4", Offset = "0x27682A4", VA = "0x27682A4")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x2768A90", Offset = "0x2768A90", VA = "0x2768A90")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x276927C", Offset = "0x276927C", VA = "0x276927C")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x2769A94", Offset = "0x2769A94", VA = "0x2769A94")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x276A2C0", Offset = "0x276A2C0", VA = "0x276A2C0")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x276AADC", Offset = "0x276AADC", VA = "0x276AADC")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x276B300", Offset = "0x276B300", VA = "0x276B300")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x276BAD8", Offset = "0x276BAD8", VA = "0x276BAD8")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x276C28C", Offset = "0x276C28C", VA = "0x276C28C")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x276CA48", Offset = "0x276CA48", VA = "0x276CA48")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x276D040", Offset = "0x276D040", VA = "0x276D040")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x276D630", Offset = "0x276D630", VA = "0x276D630")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x276DE4C", Offset = "0x276DE4C", VA = "0x276DE4C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x276E654", Offset = "0x276E654", VA = "0x276E654")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x276EE6C", Offset = "0x276EE6C", VA = "0x276EE6C")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x276F444", Offset = "0x276F444", VA = "0x276F444")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x276F6A0", Offset = "0x276F6A0", VA = "0x276F6A0")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x276FC84", Offset = "0x276FC84", VA = "0x276FC84")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x277041C", Offset = "0x277041C", VA = "0x277041C")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x2770B98", Offset = "0x2770B98", VA = "0x2770B98")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x2771350", Offset = "0x2771350", VA = "0x2771350")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x2771B0C", Offset = "0x2771B0C", VA = "0x2771B0C")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x27722C8", Offset = "0x27722C8", VA = "0x27722C8")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x2772AE4", Offset = "0x2772AE4", VA = "0x2772AE4")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000EB")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD3")]
	public float quality;

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x2773B7C", Offset = "0x2773B7C", VA = "0x2773B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x2773C48", Offset = "0x2773C48", VA = "0x2773C48")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000EC")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B04F4")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000045")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x2754664", Offset = "0x2754664", VA = "0x2754664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x2774A34", Offset = "0x2774A34", VA = "0x2774A34")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000ED")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40005C0")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000547")]
	[Address(RVA = "0x2774A78", Offset = "0x2774A78", VA = "0x2774A78")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x2774B7C", Offset = "0x2774B7C", VA = "0x2774B7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x2774D50", Offset = "0x2774D50", VA = "0x2774D50")]
	private void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x2774D64", Offset = "0x2774D64", VA = "0x2774D64")]
	private void Update()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x2774D78", Offset = "0x2774D78", VA = "0x2774D78")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000EE")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20004B0")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public LayerMask layerMask;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool visualizeRoom;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xADB")]
	public int raysPerSecond;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float roomInterpSpeed;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0504")]
	public float maxWallDistance;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int rayCacheSize;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float particleSize;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE3")]
	private float particleOffset;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GameObject room;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0514")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] dims;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] coefs;

	[Token(Token = "0x40005CF")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAEB")]
	private Vector3[] points;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3[] normals;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0524")]
	private ParticleSystem sys;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40005D5")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x13C9984", Offset = "0x13C9984", VA = "0x13C9984")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x13C95BC", Offset = "0x13C95BC", VA = "0x13C95BC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8A0954", Offset = "0x8A0954")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x13C9A40", Offset = "0x13C9A40", VA = "0x13C9A40")]
	private void Start()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x13C9D00", Offset = "0x13C9D00", VA = "0x13C9D00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x13C9EF4", Offset = "0x13C9EF4", VA = "0x13C9EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x13CB334", Offset = "0x13CB334", VA = "0x13CB334")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000552")]
	[Address(RVA = "0x13C9BDC", Offset = "0x13C9BDC", VA = "0x13C9BDC")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000553")]
	[Address(RVA = "0x13C9DF0", Offset = "0x13C9DF0", VA = "0x13C9DF0")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000554")]
	[Address(RVA = "0x13CAE48", Offset = "0x13CAE48", VA = "0x13CAE48")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000555")]
	[Address(RVA = "0x13CAF44", Offset = "0x13CAF44", VA = "0x13CAF44")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000556")]
	[Address(RVA = "0x13CB040", Offset = "0x13CB040", VA = "0x13CB040")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000557")]
	[Address(RVA = "0x13CB13C", Offset = "0x13CB13C", VA = "0x13CB13C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000558")]
	[Address(RVA = "0x13CB238", Offset = "0x13CB238", VA = "0x13CB238")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000559")]
	[Address(RVA = "0x13CD2A8", Offset = "0x13CD2A8", VA = "0x13CD2A8")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x600055A")]
	[Address(RVA = "0x13CD40C", Offset = "0x13CD40C", VA = "0x13CD40C")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x13CD570", Offset = "0x13CD570", VA = "0x13CD570")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000EF")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE3")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
	public float fadeTime;
}
[Token(Token = "0x20000F0")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0534")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float fadeTime;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x2773C8C", Offset = "0x2773C8C", VA = "0x2773C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x2773CA0", Offset = "0x2773CA0", VA = "0x2773CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x2773CB4", Offset = "0x2773CB4", VA = "0x2773CB4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x277406C", Offset = "0x277406C", VA = "0x277406C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x2773D34", Offset = "0x2773D34", VA = "0x2773D34")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x2773EA8", Offset = "0x2773EA8", VA = "0x2773EA8")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x27740EC", Offset = "0x27740EC", VA = "0x27740EC")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x2774254", Offset = "0x2774254", VA = "0x2774254")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x27745A8", Offset = "0x27745A8", VA = "0x27745A8")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x2774930", Offset = "0x2774930", VA = "0x2774930")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000F1")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x6000568")]
	[Address(RVA = "0x1508D54", Offset = "0x1508D54", VA = "0x1508D54")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x20000F2")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAFB")]
	public string Channel;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x14D6978", Offset = "0x14D6978", VA = "0x14D6978")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x14D6A40", Offset = "0x14D6A40", VA = "0x14D6A40", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x14D6B60", Offset = "0x14D6B60", VA = "0x14D6B60")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x20000F3")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Text Description;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x144C724", Offset = "0x144C724", VA = "0x144C724")]
	public void Update()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x144CA38", Offset = "0x144CA38", VA = "0x144CA38")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x20000F4")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0544")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string[] FriendsList;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88A9E4", Offset = "0x88A9E4")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB03")]
	private string selectedChannelName;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ChatClient chatClient;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0554")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RectTransform ChatPanel;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0B")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public InputField InputFieldChat;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0564")]
	public Text CurrentChannelText;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB13")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool ShowState;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0574")]
	public GameObject Title;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text StateText;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text UserIdText;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1B")]
	public int TestLength;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private byte[] testBytes;

	[Token(Token = "0x17000046")]
	public string UserName
	{
		[Token(Token = "0x600056E")]
		[Address(RVA = "0x144CA68", Offset = "0x144CA68", VA = "0x144CA68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0A40", Offset = "0x8A0A40")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056F")]
		[Address(RVA = "0x144CA98", Offset = "0x144CA98", VA = "0x144CA98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0A7C", Offset = "0x8A0A7C")]
		set
		{
		}
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x144CAD0", Offset = "0x144CAD0", VA = "0x144CAD0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x144D140", Offset = "0x144D140", VA = "0x144D140")]
	public void Connect()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x144D420", Offset = "0x144D420", VA = "0x144D420")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x144D4A0", Offset = "0x144D4A0", VA = "0x144D4A0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x144D520", Offset = "0x144D520", VA = "0x144D520")]
	public void Update()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x144D760", Offset = "0x144D760", VA = "0x144D760")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x144EEE0", Offset = "0x144EEE0", VA = "0x144EEE0")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x144D87C", Offset = "0x144D87C", VA = "0x144D87C")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x144F060", Offset = "0x144F060", VA = "0x144F060")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x144F814", Offset = "0x144F814", VA = "0x144F814", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x144FA54", Offset = "0x144FA54", VA = "0x144FA54", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x14501F8", Offset = "0x14501F8", VA = "0x14501F8", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1450250", Offset = "0x1450250", VA = "0x1450250", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x145033C", Offset = "0x145033C", VA = "0x145033C", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x14506A0", Offset = "0x14506A0", VA = "0x14506A0")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x144FF6C", Offset = "0x144FF6C", VA = "0x144FF6C")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x1450A14", Offset = "0x1450A14", VA = "0x1450A14", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x14510D4", Offset = "0x14510D4", VA = "0x14510D4", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1451168", Offset = "0x1451168", VA = "0x1451168", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1451394", Offset = "0x1451394", VA = "0x1451394", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x14516D0", Offset = "0x14516D0", VA = "0x14516D0", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1451870", Offset = "0x1451870", VA = "0x1451870", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1451A10", Offset = "0x1451A10", VA = "0x1451A10")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x144F1C0", Offset = "0x144F1C0", VA = "0x144F1C0")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1451C04", Offset = "0x1451C04", VA = "0x1451C04")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1451C88", Offset = "0x1451C88", VA = "0x1451C88")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x20000F5")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0584")]
	public Text NameLabel;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text StatusLabel;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text Health;

	[Token(Token = "0x17000047")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x12F5F50", Offset = "0x12F5F50", VA = "0x12F5F50")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058B")]
		[Address(RVA = "0x12F5EF8", Offset = "0x12F5EF8", VA = "0x12F5EF8")]
		set
		{
		}
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x12F5FA0", Offset = "0x12F5FA0", VA = "0x12F5FA0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x12F6050", Offset = "0x12F6050", VA = "0x12F6050")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x12F6420", Offset = "0x12F6420", VA = "0x12F6420")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x20000F6")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000590")]
	[Address(RVA = "0x11C7EBC", Offset = "0x11C7EBC", VA = "0x11C7EBC", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x11C7F58", Offset = "0x11C7F58", VA = "0x11C7F58")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87AD1C", Offset = "0x87AD1C")]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x40005F9")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB23")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public InputField idInput;

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1327E68", Offset = "0x1327E68", VA = "0x1327E68")]
	public void Start()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1328000", Offset = "0x1328000", VA = "0x1328000")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1328084", Offset = "0x1328084", VA = "0x1328084")]
	public void StartChat()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1328268", Offset = "0x1328268", VA = "0x1328268")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x20000F8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87ADCC", Offset = "0x87ADCC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87ADCC", Offset = "0x87ADCC")]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0594")]
	private PhotonView photonView;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x14D6344", Offset = "0x14D6344", VA = "0x14D6344")]
	private void Start()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x14D6508", Offset = "0x14D6508", VA = "0x14D6508")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x14D664C", Offset = "0x14D664C", VA = "0x14D664C")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x20000F9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87AEC8", Offset = "0x87AEC8")]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x6000599")]
	[Address(RVA = "0x14D667C", Offset = "0x14D667C", VA = "0x14D667C")]
	private void Start()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x14D67A4", Offset = "0x14D67A4", VA = "0x14D67A4")]
	public ChangeName()
	{
	}
}
[Token(Token = "0x20000FA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87AF78", Offset = "0x87AF78")]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x141D7A4", Offset = "0x141D7A4", VA = "0x141D7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x141D830", Offset = "0x141D830", VA = "0x141D830")]
	private void Update()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x141D8F8", Offset = "0x141D8F8", VA = "0x141D8F8")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x141DAB4", Offset = "0x141DAB4", VA = "0x141DAB4")]
	public PointersController()
	{
	}
}
[Token(Token = "0x20000FB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B028", Offset = "0x87B028")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B028", Offset = "0x87B028")]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2B")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B05A4")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private PhotonView photonView;

	[Token(Token = "0x17000048")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x142783C", Offset = "0x142783C", VA = "0x142783C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x14279A4", Offset = "0x14279A4", VA = "0x14279A4", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x1427AA8", Offset = "0x1427AA8", VA = "0x1427AA8")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x14280EC", Offset = "0x14280EC", VA = "0x14280EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x14284D4", Offset = "0x14284D4", VA = "0x14284D4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1428958", Offset = "0x1428958", VA = "0x1428958")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1429430", Offset = "0x1429430", VA = "0x1429430")]
	public ProximityVoiceTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FC")]
public class MouseLookHelper
{
	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float XSensitivity;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB33")]
	public float YSensitivity;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B05B4")]
	public float MinimumX;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float MaximumX;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool smooth;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float smoothTime;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3B")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x131B930", Offset = "0x131B930", VA = "0x131B930")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x131B9F4", Offset = "0x131B9F4", VA = "0x131B9F4")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x131C08C", Offset = "0x131C08C", VA = "0x131C08C")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x131C40C", Offset = "0x131C40C", VA = "0x131C40C")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x20000FD")]
public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0600")]
	public AudioClip JoinClip;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioClip LeaveClip;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource source;

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x120D734", Offset = "0x120D734", VA = "0x120D734", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x120D9AC", Offset = "0x120D9AC", VA = "0x120D9AC", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x120DC24", Offset = "0x120DC24", VA = "0x120DC24")]
	public SoundsForJoinAndLeave()
	{
	}
}
[Token(Token = "0x20000FE")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text dataOutput;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB43")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0610")]
	public InputField unLockInputField;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public InputField addCountInputField;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public InputField addFieldsInputField;

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x15011B8", Offset = "0x15011B8", VA = "0x15011B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x150129C", Offset = "0x150129C", VA = "0x150129C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1501380", Offset = "0x1501380", VA = "0x1501380")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1501634", Offset = "0x1501634", VA = "0x1501634")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1501668", Offset = "0x1501668", VA = "0x1501668")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x150173C", Offset = "0x150173C", VA = "0x150173C")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1501A64", Offset = "0x1501A64", VA = "0x1501A64")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1501D8C", Offset = "0x1501D8C", VA = "0x1501D8C")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1501F4C", Offset = "0x1501F4C", VA = "0x1501F4C")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x150210C", Offset = "0x150210C", VA = "0x150210C")]
	public void UnLock()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x15023B0", Offset = "0x15023B0", VA = "0x15023B0")]
	public void AddCount()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x1502A80", Offset = "0x1502A80", VA = "0x1502A80")]
	public void AddFields()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1501548", Offset = "0x1501548", VA = "0x1501548")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1501E60", Offset = "0x1501E60", VA = "0x1501E60")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x1502020", Offset = "0x1502020", VA = "0x1502020")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1502D68", Offset = "0x1502D68", VA = "0x1502D68")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x15028F0", Offset = "0x15028F0", VA = "0x15028F0")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x15022B4", Offset = "0x15022B4", VA = "0x15022B4")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1501C90", Offset = "0x1501C90", VA = "0x1501C90")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1501968", Offset = "0x1501968", VA = "0x1501968")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1501440", Offset = "0x1501440", VA = "0x1501440")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1502E74", Offset = "0x1502E74", VA = "0x1502E74")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1503CD8", Offset = "0x1503CD8", VA = "0x1503CD8")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1504724", Offset = "0x1504724", VA = "0x1504724")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1504AC0", Offset = "0x1504AC0", VA = "0x1504AC0")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x1504E5C", Offset = "0x1504E5C", VA = "0x1504E5C")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x15051F8", Offset = "0x15051F8", VA = "0x15051F8")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x15059DC", Offset = "0x15059DC", VA = "0x15059DC")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x1506310", Offset = "0x1506310", VA = "0x1506310")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x15066AC", Offset = "0x15066AC", VA = "0x15066AC")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1506800", Offset = "0x1506800", VA = "0x1506800")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x20000FF")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x20004B1")]
	public enum UserHandNess
	{
		[Token(Token = "0x40026A4")]
		Right,
		[Token(Token = "0x40026A5")]
		Left
	}

	[Token(Token = "0x20004B2")]
	public enum GazeType
	{
		[Token(Token = "0x40026A7")]
		Never,
		[Token(Token = "0x40026A8")]
		DuringMotion,
		[Token(Token = "0x40026A9")]
		Always
	}

	[Token(Token = "0x20004B3")]
	public enum ControllerAxis
	{
		[Token(Token = "0x40026AB")]
		Controller,
		[Token(Token = "0x40026AC")]
		Wrist,
		[Token(Token = "0x40026AD")]
		Elbow,
		[Token(Token = "0x40026AE")]
		Shoulder
	}

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject controller0;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4B")]
	public GameObject controller1;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static UserHandNess handness;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0620")]
	public ControllerAxis Axis;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GazeType Gazetype;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88AAD4", Offset = "0x88AAD4")]
	public float ElbowHeight;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88AB20", Offset = "0x88AB20")]
	public float ElbowDepth;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB53")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88AB6C", Offset = "0x88AB6C")]
	public float PointerTiltAngle;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float mouseX;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0630")]
	private float mouseY;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float mouseZ;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88ABB4", Offset = "0x88ABB4")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88ABF0", Offset = "0x88ABF0")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88AC2C", Offset = "0x88AC2C")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88AC68", Offset = "0x88AC68")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88ACA4", Offset = "0x88ACA4")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88ACE0", Offset = "0x88ACE0")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88AD1C", Offset = "0x88AD1C")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB63")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88AD58", Offset = "0x88AD58")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000049")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x142D710", Offset = "0x142D710", VA = "0x142D710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0AF4", Offset = "0x8A0AF4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x142D788", Offset = "0x142D788", VA = "0x142D788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0B30", Offset = "0x8A0B30")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x142D820", Offset = "0x142D820", VA = "0x142D820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0B6C", Offset = "0x8A0B6C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x142D8A0", Offset = "0x142D8A0", VA = "0x142D8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0BA8", Offset = "0x8A0BA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x142DA1C", Offset = "0x142DA1C", VA = "0x142DA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0BE4", Offset = "0x8A0BE4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x142DA94", Offset = "0x142DA94", VA = "0x142DA94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0C20", Offset = "0x8A0C20")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x142DB2C", Offset = "0x142DB2C", VA = "0x142DB2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0C5C", Offset = "0x8A0C5C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x142DBAC", Offset = "0x142DBAC", VA = "0x142DBAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0C98", Offset = "0x8A0C98")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x142DD28", Offset = "0x142DD28", VA = "0x142DD28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0CD4", Offset = "0x8A0CD4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x142DDA0", Offset = "0x142DDA0", VA = "0x142DDA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0D10", Offset = "0x8A0D10")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x142DE38", Offset = "0x142DE38", VA = "0x142DE38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0D4C", Offset = "0x8A0D4C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x142DEB8", Offset = "0x142DEB8", VA = "0x142DEB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0D88", Offset = "0x8A0D88")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x142E034", Offset = "0x142E034", VA = "0x142E034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0DC4", Offset = "0x8A0DC4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x142E0AC", Offset = "0x142E0AC", VA = "0x142E0AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0E00", Offset = "0x8A0E00")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x142E144", Offset = "0x142E144", VA = "0x142E144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0E3C", Offset = "0x8A0E3C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x142E1C4", Offset = "0x142E1C4", VA = "0x142E1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0E78", Offset = "0x8A0E78")]
		set
		{
		}
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x1429704", Offset = "0x1429704", VA = "0x1429704")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x142984C", Offset = "0x142984C", VA = "0x142984C")]
	public void DoAwake()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1429A58", Offset = "0x1429A58", VA = "0x1429A58")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1429B3C", Offset = "0x1429B3C", VA = "0x1429B3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1429D48", Offset = "0x1429D48", VA = "0x1429D48")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x1429E44", Offset = "0x1429E44", VA = "0x1429E44")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x1429E78", Offset = "0x1429E78", VA = "0x1429E78")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x1429D7C", Offset = "0x1429D7C", VA = "0x1429D7C")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1429F58", Offset = "0x1429F58", VA = "0x1429F58")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x142A2C0", Offset = "0x142A2C0", VA = "0x142A2C0")]
	private void ShowController()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x142A598", Offset = "0x142A598", VA = "0x142A598")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x142A778", Offset = "0x142A778", VA = "0x142A778")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1429EA8", Offset = "0x1429EA8", VA = "0x1429EA8")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x142ABFC", Offset = "0x142ABFC", VA = "0x142ABFC")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x142ACFC", Offset = "0x142ACFC", VA = "0x142ACFC")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x142AE48", Offset = "0x142AE48", VA = "0x142AE48")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x142D2D0", Offset = "0x142D2D0", VA = "0x142D2D0")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x142B180", Offset = "0x142B180", VA = "0x142B180")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x142B1FC", Offset = "0x142B1FC", VA = "0x142B1FC")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x142BD60", Offset = "0x142BD60", VA = "0x142BD60")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x142E340", Offset = "0x142E340", VA = "0x142E340")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x2000100")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject HeadSetController;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0670")]
	public GameObject controller0;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject controller1;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject cube;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Ray ray;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB7B")]
	private GameObject currentController;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Transform lastHit;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0680")]
	private Transform currentHit;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB83")]
	private bool noClick;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GameObject referenceObj;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0690")]
	public float rayDefaultLength;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isHasController;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool headcontrolmode;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RaycastHit hit;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8B")]
	private GameObject rayLine;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GameObject dot;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B06A0")]
	private Transform dragObj;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float disX;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float disY;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float disZ;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x142E3F8", Offset = "0x142E3F8", VA = "0x142E3F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x142E700", Offset = "0x142E700", VA = "0x142E700")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x142E8E0", Offset = "0x142E8E0", VA = "0x142E8E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x14320BC", Offset = "0x14320BC", VA = "0x14320BC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x1432228", Offset = "0x1432228", VA = "0x1432228")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1432398", Offset = "0x1432398", VA = "0x1432398")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x14324FC", Offset = "0x14324FC", VA = "0x14324FC")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x1432510", Offset = "0x1432510", VA = "0x1432510")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x2000101")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1432554", Offset = "0x1432554", VA = "0x1432554")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x1432870", Offset = "0x1432870", VA = "0x1432870")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x14329C0", Offset = "0x14329C0", VA = "0x14329C0")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x1432B10", Offset = "0x1432B10", VA = "0x1432B10")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1432C60", Offset = "0x1432C60", VA = "0x1432C60")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x1432DB0", Offset = "0x1432DB0", VA = "0x1432DB0")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x1432F00", Offset = "0x1432F00", VA = "0x1432F00")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x2000102")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x20004B4")]
	public enum TipoPicoController
	{
		[Token(Token = "0x40026B0")]
		goblin,
		[Token(Token = "0x40026B1")]
		neo,
		[Token(Token = "0x40026B2")]
		g2,
		[Token(Token = "0x40026B3")]
		neo2,
		[Token(Token = "0x40026B4")]
		neo3,
		[Token(Token = "0x40026B5")]
		ninguno
	}

	[Token(Token = "0x20004B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EC18", Offset = "0x87EC18")]
	private sealed class <RefreshController>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBBB")]
		private int <>1__state;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0704")]
		public int id;

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x17000320")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021DC")]
			[Address(RVA = "0x1435EF8", Offset = "0x1435EF8", VA = "0x1435EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021DE")]
			[Address(RVA = "0x1435FC8", Offset = "0x1435FC8", VA = "0x1435FC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x14351DC", Offset = "0x14351DC", VA = "0x14351DC")]
		[DebuggerHidden]
		public <RefreshController>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x1435714", Offset = "0x1435714", VA = "0x1435714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x1435728", Offset = "0x1435728", VA = "0x1435728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x1435F28", Offset = "0x1435F28", VA = "0x1435F28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB93")]
	public TipoPicoController tipoPicoController;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ControllerVariety Variety;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B06B0")]
	private bool isCustomModel;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9B")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B06C4")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int controllerType;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA3")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int systemOrUnity;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B06D4")]
	private JsonData curControllerData;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string modelName;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string texFormat;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string prePath;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBAB")]
	private string modelFilePath;

	[Token(Token = "0x4000655")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x4000656")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x4000657")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x4000658")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1432F30", Offset = "0x1432F30", VA = "0x1432F30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x143340C", Offset = "0x143340C", VA = "0x143340C")]
	public bool Conectado()
	{
		return default(bool);
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x14335F4", Offset = "0x14335F4", VA = "0x14335F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x14337B4", Offset = "0x14337B4", VA = "0x14337B4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1433C54", Offset = "0x1433C54", VA = "0x1433C54")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x14342E0", Offset = "0x14342E0", VA = "0x14342E0")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1434764", Offset = "0x1434764", VA = "0x1434764")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1434E4C", Offset = "0x1434E4C", VA = "0x1434E4C")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1433810", Offset = "0x1433810", VA = "0x1433810")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1434938", Offset = "0x1434938", VA = "0x1434938")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1434680", Offset = "0x1434680", VA = "0x1434680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A0EB4", Offset = "0x8A0EB4")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x1435224", Offset = "0x1435224", VA = "0x1435224")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x14353A8", Offset = "0x14353A8", VA = "0x14353A8")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x14355B0", Offset = "0x14355B0", VA = "0x14355B0")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x14355D8", Offset = "0x14355D8", VA = "0x14355D8")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x1435604", Offset = "0x1435604", VA = "0x1435604")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1435624", Offset = "0x1435624", VA = "0x1435624")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x2000103")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC3")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0714")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AndroidJavaObject activity;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string gameobjname;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool picoDevice;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBCB")]
	public string hummingBirdMac;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int hummingBirdRSSI;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0724")]
	public bool goblinserviceStarted;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool neoserviceStarted;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool controller0Connected;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool controller1Connected;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD3")]
	public int mainHandID;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0734")]
	public int controllerType;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ControllerHand Controller0;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ControllerHand Controller1;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int platFormType;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBDB")]
	public int trackingmode;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int systemProp;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0744")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool switchHomeKey;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] hbPoseData;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE3")]
	private float[] sensorData;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int[] keyData;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0754")]
	private int[] neo3TouchValue;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] fixedState;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] neoposeData;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int[] goblinKeyArray;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBEB")]
	private int[] neoKeyArray;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int[] neotriggerV;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0764")]
	private float[] velocity;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] angularVelocity;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float[] acceData;

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1435FF8", Offset = "0x1435FF8", VA = "0x1435FF8")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x14366D8", Offset = "0x14366D8", VA = "0x14366D8")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x14379CC", Offset = "0x14379CC", VA = "0x14379CC")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1437618", Offset = "0x1437618", VA = "0x1437618")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x14377C8", Offset = "0x14377C8", VA = "0x14377C8")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1437C44", Offset = "0x1437C44", VA = "0x1437C44")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1437E48", Offset = "0x1437E48", VA = "0x1437E48")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1438058", Offset = "0x1438058", VA = "0x1438058")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x143822C", Offset = "0x143822C", VA = "0x143822C")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x143843C", Offset = "0x143843C", VA = "0x143843C")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1438698", Offset = "0x1438698", VA = "0x1438698")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x143892C", Offset = "0x143892C", VA = "0x143892C")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1438B50", Offset = "0x1438B50", VA = "0x1438B50")]
	public void StartScan()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1438D08", Offset = "0x1438D08", VA = "0x1438D08")]
	public void StopScan()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x143744C", Offset = "0x143744C", VA = "0x143744C")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1438EE0", Offset = "0x1438EE0", VA = "0x1438EE0")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x143916C", Offset = "0x143916C", VA = "0x143916C")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1439360", Offset = "0x1439360", VA = "0x1439360")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x14394A4", Offset = "0x14394A4", VA = "0x14394A4")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1439640", Offset = "0x1439640", VA = "0x1439640")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x143988C", Offset = "0x143988C", VA = "0x143988C")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1439A60", Offset = "0x1439A60", VA = "0x1439A60")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1439C1C", Offset = "0x1439C1C", VA = "0x1439C1C")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1439DF0", Offset = "0x1439DF0", VA = "0x1439DF0")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1439FAC", Offset = "0x1439FAC", VA = "0x1439FAC")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x143A484", Offset = "0x143A484", VA = "0x143A484")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x143A63C", Offset = "0x143A63C", VA = "0x143A63C")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x143A88C", Offset = "0x143A88C", VA = "0x143A88C")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x143AADC", Offset = "0x143AADC", VA = "0x143AADC")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x143B078", Offset = "0x143B078", VA = "0x143B078")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x143B2B4", Offset = "0x143B2B4", VA = "0x143B2B4")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x143B394", Offset = "0x143B394", VA = "0x143B394")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x143C084", Offset = "0x143C084", VA = "0x143C084")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x143C358", Offset = "0x143C358", VA = "0x143C358")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x143CD24", Offset = "0x143CD24", VA = "0x143CD24")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x143D76C", Offset = "0x143D76C", VA = "0x143D76C")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x143F774", Offset = "0x143F774", VA = "0x143F774")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x143F9D4", Offset = "0x143F9D4", VA = "0x143F9D4")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x14427A4", Offset = "0x14427A4", VA = "0x14427A4")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1442AE0", Offset = "0x1442AE0", VA = "0x1442AE0")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1442D1C", Offset = "0x1442D1C", VA = "0x1442D1C")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1442FE8", Offset = "0x1442FE8", VA = "0x1442FE8")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x14432B4", Offset = "0x14432B4", VA = "0x14432B4")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x14434EC", Offset = "0x14434EC", VA = "0x14434EC")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x1443B38", Offset = "0x1443B38", VA = "0x1443B38")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1444148", Offset = "0x1444148", VA = "0x1444148")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x14446D4", Offset = "0x14446D4", VA = "0x14446D4")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x14448A8", Offset = "0x14448A8", VA = "0x14448A8")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1444CE4", Offset = "0x1444CE4", VA = "0x1444CE4")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1444EC0", Offset = "0x1444EC0", VA = "0x1444EC0")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x14450D8", Offset = "0x14450D8", VA = "0x14450D8")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x144523C", Offset = "0x144523C", VA = "0x144523C")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1445454", Offset = "0x1445454", VA = "0x1445454")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x144566C", Offset = "0x144566C", VA = "0x144566C")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1445884", Offset = "0x1445884", VA = "0x1445884")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x14459E8", Offset = "0x14459E8", VA = "0x14459E8")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1445B4C", Offset = "0x1445B4C", VA = "0x1445B4C")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1445E04", Offset = "0x1445E04", VA = "0x1445E04")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x144601C", Offset = "0x144601C", VA = "0x144601C")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x1446234", Offset = "0x1446234", VA = "0x1446234")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1446414", Offset = "0x1446414", VA = "0x1446414")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x14465F4", Offset = "0x14465F4", VA = "0x14465F4")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x14467D4", Offset = "0x14467D4", VA = "0x14467D4")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x14469EC", Offset = "0x14469EC", VA = "0x14469EC")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1446B50", Offset = "0x1446B50", VA = "0x1446B50")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1446CB4", Offset = "0x1446CB4", VA = "0x1446CB4")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1446F04", Offset = "0x1446F04", VA = "0x1446F04")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x144704C", Offset = "0x144704C", VA = "0x144704C")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1447190", Offset = "0x1447190", VA = "0x1447190")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x144735C", Offset = "0x144735C", VA = "0x144735C")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x1447528", Offset = "0x1447528", VA = "0x1447528")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x1447610", Offset = "0x1447610", VA = "0x1447610")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x14477C8", Offset = "0x14477C8", VA = "0x14477C8")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x1447980", Offset = "0x1447980", VA = "0x1447980")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1447B3C", Offset = "0x1447B3C", VA = "0x1447B3C")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1447D54", Offset = "0x1447D54", VA = "0x1447D54")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1447F6C", Offset = "0x1447F6C", VA = "0x1447F6C")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x14481A8", Offset = "0x14481A8", VA = "0x14481A8")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x14483C4", Offset = "0x14483C4", VA = "0x14483C4")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x2000104")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x20004B6")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x20004B7")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x20004B8")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x20004B9")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x20004BA")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x20004BB")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x20004BC")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x20004BD")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x20004BE")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x20004BF")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x20004C0")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x20004C1")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x20004C2")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x20004C3")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x20004C4")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x20004C5")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x20004C6")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x20004C7")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x20004C8")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x20004C9")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBF3")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float cTime;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0774")]
	private bool stopConnect;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool controllerServicestate;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float disConnectTime;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBFB")]
	private float[] sensorData;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int[] keyData;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0784")]
	private float[] g2SensorData;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int[] g2KeyData;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int keyOffset;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int rotControllerMode;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B07C4")]
	public Pvr_ControllerInit controllerDerercho;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Pvr_ControllerInit controllerIzquierdo;

	[Token(Token = "0x17000051")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x2FF2E60", Offset = "0x2FF2E60", VA = "0x2FF2E60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000013")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0x2FF3300", Offset = "0x2FF3300", VA = "0x2FF3300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0F64", Offset = "0x8A0F64")]
		add
		{
		}
		[Token(Token = "0x6000662")]
		[Address(RVA = "0x2FF352C", Offset = "0x2FF352C", VA = "0x2FF352C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0FA0", Offset = "0x8A0FA0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x6000663")]
		[Address(RVA = "0x2FF3758", Offset = "0x2FF3758", VA = "0x2FF3758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A0FDC", Offset = "0x8A0FDC")]
		add
		{
		}
		[Token(Token = "0x6000664")]
		[Address(RVA = "0x2FF3984", Offset = "0x2FF3984", VA = "0x2FF3984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1018", Offset = "0x8A1018")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x6000665")]
		[Address(RVA = "0x2FF3BB0", Offset = "0x2FF3BB0", VA = "0x2FF3BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1054", Offset = "0x8A1054")]
		add
		{
		}
		[Token(Token = "0x6000666")]
		[Address(RVA = "0x2FF3DDC", Offset = "0x2FF3DDC", VA = "0x2FF3DDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1090", Offset = "0x8A1090")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0x2FF4008", Offset = "0x2FF4008", VA = "0x2FF4008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A10CC", Offset = "0x8A10CC")]
		add
		{
		}
		[Token(Token = "0x6000668")]
		[Address(RVA = "0x2FF4234", Offset = "0x2FF4234", VA = "0x2FF4234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1108", Offset = "0x8A1108")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000669")]
		[Address(RVA = "0x2FF4460", Offset = "0x2FF4460", VA = "0x2FF4460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1144", Offset = "0x8A1144")]
		add
		{
		}
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x2FF468C", Offset = "0x2FF468C", VA = "0x2FF468C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1180", Offset = "0x8A1180")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x600066B")]
		[Address(RVA = "0x2FF48B8", Offset = "0x2FF48B8", VA = "0x2FF48B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A11BC", Offset = "0x8A11BC")]
		add
		{
		}
		[Token(Token = "0x600066C")]
		[Address(RVA = "0x2FF4AE4", Offset = "0x2FF4AE4", VA = "0x2FF4AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A11F8", Offset = "0x8A11F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0x2FF4D10", Offset = "0x2FF4D10", VA = "0x2FF4D10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1234", Offset = "0x8A1234")]
		add
		{
		}
		[Token(Token = "0x600066E")]
		[Address(RVA = "0x2FF4F3C", Offset = "0x2FF4F3C", VA = "0x2FF4F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1270", Offset = "0x8A1270")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0x2FF5168", Offset = "0x2FF5168", VA = "0x2FF5168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A12AC", Offset = "0x8A12AC")]
		add
		{
		}
		[Token(Token = "0x6000670")]
		[Address(RVA = "0x2FF5394", Offset = "0x2FF5394", VA = "0x2FF5394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A12E8", Offset = "0x8A12E8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x2FF55C0", Offset = "0x2FF55C0", VA = "0x2FF55C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1324", Offset = "0x8A1324")]
		add
		{
		}
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x2FF57EC", Offset = "0x2FF57EC", VA = "0x2FF57EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1360", Offset = "0x8A1360")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x6000673")]
		[Address(RVA = "0x2FF5A18", Offset = "0x2FF5A18", VA = "0x2FF5A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A139C", Offset = "0x8A139C")]
		add
		{
		}
		[Token(Token = "0x6000674")]
		[Address(RVA = "0x2FF5C44", Offset = "0x2FF5C44", VA = "0x2FF5C44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A13D8", Offset = "0x8A13D8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x6000675")]
		[Address(RVA = "0x2FF5E70", Offset = "0x2FF5E70", VA = "0x2FF5E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1414", Offset = "0x8A1414")]
		add
		{
		}
		[Token(Token = "0x6000676")]
		[Address(RVA = "0x2FF609C", Offset = "0x2FF609C", VA = "0x2FF609C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1450", Offset = "0x8A1450")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000677")]
		[Address(RVA = "0x2FF62C8", Offset = "0x2FF62C8", VA = "0x2FF62C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A148C", Offset = "0x8A148C")]
		add
		{
		}
		[Token(Token = "0x6000678")]
		[Address(RVA = "0x2FF64F4", Offset = "0x2FF64F4", VA = "0x2FF64F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A14C8", Offset = "0x8A14C8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x2FF6720", Offset = "0x2FF6720", VA = "0x2FF6720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1504", Offset = "0x8A1504")]
		add
		{
		}
		[Token(Token = "0x600067A")]
		[Address(RVA = "0x2FF694C", Offset = "0x2FF694C", VA = "0x2FF694C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1540", Offset = "0x8A1540")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x2FF6B78", Offset = "0x2FF6B78", VA = "0x2FF6B78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A157C", Offset = "0x8A157C")]
		add
		{
		}
		[Token(Token = "0x600067C")]
		[Address(RVA = "0x2FF6DA4", Offset = "0x2FF6DA4", VA = "0x2FF6DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A15B8", Offset = "0x8A15B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x600067D")]
		[Address(RVA = "0x2FF6FD0", Offset = "0x2FF6FD0", VA = "0x2FF6FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A15F4", Offset = "0x8A15F4")]
		add
		{
		}
		[Token(Token = "0x600067E")]
		[Address(RVA = "0x2FF71FC", Offset = "0x2FF71FC", VA = "0x2FF71FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1630", Offset = "0x8A1630")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x2FF7428", Offset = "0x2FF7428", VA = "0x2FF7428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A166C", Offset = "0x8A166C")]
		add
		{
		}
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x2FF7654", Offset = "0x2FF7654", VA = "0x2FF7654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A16A8", Offset = "0x8A16A8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x2FF7880", Offset = "0x2FF7880", VA = "0x2FF7880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A16E4", Offset = "0x8A16E4")]
		add
		{
		}
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x2FF7AAC", Offset = "0x2FF7AAC", VA = "0x2FF7AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1720", Offset = "0x8A1720")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x2FF7CD8", Offset = "0x2FF7CD8", VA = "0x2FF7CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A175C", Offset = "0x8A175C")]
		add
		{
		}
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x2FF7F04", Offset = "0x2FF7F04", VA = "0x2FF7F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1798", Offset = "0x8A1798")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x2FF8130", Offset = "0x2FF8130", VA = "0x2FF8130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A17D4", Offset = "0x8A17D4")]
		add
		{
		}
		[Token(Token = "0x6000686")]
		[Address(RVA = "0x2FF835C", Offset = "0x2FF835C", VA = "0x2FF835C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1810", Offset = "0x8A1810")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x2FF8588", Offset = "0x2FF8588", VA = "0x2FF8588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A184C", Offset = "0x8A184C")]
		add
		{
		}
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x2FF87B4", Offset = "0x2FF87B4", VA = "0x2FF87B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1888", Offset = "0x8A1888")]
		remove
		{
		}
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x2FF89E0", Offset = "0x2FF89E0", VA = "0x2FF89E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x2FF8B28", Offset = "0x2FF8B28", VA = "0x2FF8B28")]
	public void DoAwake()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x2FF91F8", Offset = "0x2FF91F8", VA = "0x2FF91F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x2FF9370", Offset = "0x2FF9370", VA = "0x2FF9370")]
	private void Update()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x2FFE6B8", Offset = "0x2FFE6B8", VA = "0x2FFE6B8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x2FFF480", Offset = "0x2FFF480", VA = "0x2FFF480")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x2FFF61C", Offset = "0x2FFF61C", VA = "0x2FFF61C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x2FFF9AC", Offset = "0x2FFF9AC", VA = "0x2FFF9AC")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x2FFFB4C", Offset = "0x2FFFB4C", VA = "0x2FFFB4C")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x2FFFCE8", Offset = "0x2FFFCE8", VA = "0x2FFFCE8")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x2FF9058", Offset = "0x2FF9058", VA = "0x2FF9058")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x2FFFE84", Offset = "0x2FFFE84", VA = "0x2FFFE84")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x3000024", Offset = "0x3000024", VA = "0x3000024")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x30001C4", Offset = "0x30001C4", VA = "0x30001C4")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x2FFF12C", Offset = "0x2FFF12C", VA = "0x2FFF12C")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x3000374", Offset = "0x3000374", VA = "0x3000374")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x3000514", Offset = "0x3000514", VA = "0x3000514")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x30006B4", Offset = "0x30006B4", VA = "0x30006B4")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x3000888", Offset = "0x3000888", VA = "0x3000888")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x3000A28", Offset = "0x3000A28", VA = "0x3000A28")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x3000B30", Offset = "0x3000B30", VA = "0x3000B30")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x3000C38", Offset = "0x3000C38", VA = "0x3000C38")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x3000D40", Offset = "0x3000D40", VA = "0x3000D40")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x3000E48", Offset = "0x3000E48", VA = "0x3000E48")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x3000FF4", Offset = "0x3000FF4", VA = "0x3000FF4")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x30011C8", Offset = "0x30011C8", VA = "0x30011C8")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x3001970", Offset = "0x3001970", VA = "0x3001970")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x3001A70", Offset = "0x3001A70", VA = "0x3001A70")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x30023B0", Offset = "0x30023B0", VA = "0x30023B0")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x3002D18", Offset = "0x3002D18", VA = "0x3002D18")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x3003BE4", Offset = "0x3003BE4", VA = "0x3003BE4")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x3004D88", Offset = "0x3004D88", VA = "0x3004D88")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x30053C0", Offset = "0x30053C0", VA = "0x30053C0")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x3006250", Offset = "0x3006250", VA = "0x3006250")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x3006888", Offset = "0x3006888", VA = "0x3006888")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x3006EC0", Offset = "0x3006EC0", VA = "0x3006EC0")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x30074F8", Offset = "0x30074F8", VA = "0x30074F8")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x3007B30", Offset = "0x3007B30", VA = "0x3007B30")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x3008168", Offset = "0x3008168", VA = "0x3008168")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x30087A0", Offset = "0x30087A0", VA = "0x30087A0")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x3008DD8", Offset = "0x3008DD8", VA = "0x3008DD8")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x3009410", Offset = "0x3009410", VA = "0x3009410")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x300999C", Offset = "0x300999C", VA = "0x300999C")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x30099B0", Offset = "0x30099B0", VA = "0x30099B0")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x30099C4", Offset = "0x30099C4", VA = "0x30099C4")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x30099DC", Offset = "0x30099DC", VA = "0x30099DC")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x3009D38", Offset = "0x3009D38", VA = "0x3009D38")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x300A098", Offset = "0x300A098", VA = "0x300A098")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x300A788", Offset = "0x300A788", VA = "0x300A788")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x3009D20", Offset = "0x3009D20", VA = "0x3009D20")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x300AE78", Offset = "0x300AE78", VA = "0x300AE78")]
	private void HideToast()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x300AE8C", Offset = "0x300AE8C", VA = "0x300AE8C")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x3005720", Offset = "0x3005720", VA = "0x3005720")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x2FFD574", Offset = "0x2FFD574", VA = "0x2FFD574")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x2FFC628", Offset = "0x2FFC628", VA = "0x2FFC628")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x300AEA0", Offset = "0x300AEA0", VA = "0x300AEA0")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x300B234", Offset = "0x300B234", VA = "0x300B234")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x300B48C", Offset = "0x300B48C", VA = "0x300B48C")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x300B6E8", Offset = "0x300B6E8", VA = "0x300B6E8")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x2000105")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x20004CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EC54", Offset = "0x87EC54")]
	private sealed class <ShowOrHideRay>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2B")]
		private object <>2__current;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B07E4")]
		public int id;

		[Token(Token = "0x17000322")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002232")]
			[Address(RVA = "0x300E1EC", Offset = "0x300E1EC", VA = "0x300E1EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002234")]
			[Address(RVA = "0x300E2BC", Offset = "0x300E2BC", VA = "0x300E2BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x300D640", Offset = "0x300D640", VA = "0x300D640")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x300DEB0", Offset = "0x300DEB0", VA = "0x300DEB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x300DEC4", Offset = "0x300DEC4", VA = "0x300DEC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x300E21C", Offset = "0x300E21C", VA = "0x300E21C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ControllerVariety Variety;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool IsCustomModel;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC23")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B07D4")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool moduleState;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool normal;

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x300CCB8", Offset = "0x300CCB8", VA = "0x300CCB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x300CD24", Offset = "0x300CD24", VA = "0x300CD24")]
	public void DoAwake()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x300D038", Offset = "0x300D038", VA = "0x300D038")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x300D1F8", Offset = "0x300D1F8", VA = "0x300D1F8")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x300D2E0", Offset = "0x300D2E0", VA = "0x300D2E0")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x300D528", Offset = "0x300D528", VA = "0x300D528")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x300D228", Offset = "0x300D228", VA = "0x300D228")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x300D55C", Offset = "0x300D55C", VA = "0x300D55C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A18C4", Offset = "0x8A18C4")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x300D688", Offset = "0x300D688", VA = "0x300D688")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x300D920", Offset = "0x300D920", VA = "0x300D920")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x300DE6C", Offset = "0x300DE6C", VA = "0x300DE6C")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x2000106")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC33")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B07F4")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Image powerImage;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int powerValue;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3B")]
	private float power;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x300E2EC", Offset = "0x300E2EC", VA = "0x300E2EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x300E460", Offset = "0x300E460", VA = "0x300E460")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x300E4FC", Offset = "0x300E4FC", VA = "0x300E4FC")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x300E978", Offset = "0x300E978", VA = "0x300E978")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x2000107")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0804")]
	public Texture2D m_idle;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture2D m_app;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture2D m_home;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture2D m_touchpad;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC43")]
	public Texture2D m_volUp;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Texture2D m_volDn;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0814")]
	public Texture2D m_trigger;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture2D m_a;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture2D m_b;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture2D m_x;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4B")]
	public Texture2D m_y;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Texture2D m_grip;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0824")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x300E9A8", Offset = "0x300E9A8", VA = "0x300E9A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x300EA34", Offset = "0x300EA34", VA = "0x300EA34")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x300EAF4", Offset = "0x300EAF4", VA = "0x300EAF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x300EB90", Offset = "0x300EB90", VA = "0x300EB90")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x300F368", Offset = "0x300F368", VA = "0x300F368")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x2000108")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x20004CB")]
	public enum TipBtn
	{
		[Token(Token = "0x40026BF")]
		app,
		[Token(Token = "0x40026C0")]
		touchpad,
		[Token(Token = "0x40026C1")]
		home,
		[Token(Token = "0x40026C2")]
		volup,
		[Token(Token = "0x40026C3")]
		voldown,
		[Token(Token = "0x40026C4")]
		trigger,
		[Token(Token = "0x40026C5")]
		grip
	}

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tipsAlpha;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC53")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x301A1F4", Offset = "0x301A1F4", VA = "0x301A1F4")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x301A6F8", Offset = "0x301A6F8", VA = "0x301A6F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x301A7B8", Offset = "0x301A7B8", VA = "0x301A7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x301B1A4", Offset = "0x301B1A4", VA = "0x301B1A4")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x301B988", Offset = "0x301B988", VA = "0x301B988")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x301BAD8", Offset = "0x301BAD8", VA = "0x301BAD8")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x2000109")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isHoving;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int mainHand;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC63")]
	private SwipeDirection direction;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector2 currPos;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0854")]
	private Vector2 tarPos;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float lerpSpeed;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform tranViewport;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float ignoreDis;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC6B")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0864")]
	private bool isTouching;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isClosed;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector2 vecOrigin;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x301BB08", Offset = "0x301BB08", VA = "0x301BB08")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x301BBFC", Offset = "0x301BBFC", VA = "0x301BBFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x301C69C", Offset = "0x301C69C", VA = "0x301C69C")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x301BF24", Offset = "0x301BF24", VA = "0x301BF24")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x301CAC8", Offset = "0x301CAC8", VA = "0x301CAC8")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x301D43C", Offset = "0x301D43C", VA = "0x301D43C")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x301DDF4", Offset = "0x301DDF4", VA = "0x301DDF4")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x301C1A0", Offset = "0x301C1A0", VA = "0x301C1A0")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x301C900", Offset = "0x301C900", VA = "0x301C900")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x301BC48", Offset = "0x301BC48", VA = "0x301BC48")]
	private void Process()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x301E000", Offset = "0x301E000", VA = "0x301E000")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x301E670", Offset = "0x301E670", VA = "0x301E670")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x301E8C4", Offset = "0x301E8C4", VA = "0x301E8C4")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x200010A")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC73")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0874")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x301E9FC", Offset = "0x301E9FC", VA = "0x301E9FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x301EB28", Offset = "0x301EB28", VA = "0x301EB28")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x301EBC4", Offset = "0x301EBC4", VA = "0x301EBC4")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x301EDC4", Offset = "0x301EDC4", VA = "0x301EDC4")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x200010B")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x20004CC")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x20004CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EC90", Offset = "0x87EC90")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject btnObj;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC83")]
		public DemoController <>4__this;

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x135B6FC", Offset = "0x135B6FC", VA = "0x135B6FC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x135C744", Offset = "0x135C744", VA = "0x135C744")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Callback callback;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject msg;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC7B")]
	private string currentOrderID;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject loading;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0884")]
	public GameObject BG;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject InputPanel;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x135A9F0", Offset = "0x135A9F0", VA = "0x135A9F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x135AD08", Offset = "0x135AD08", VA = "0x135AD08")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x135B448", Offset = "0x135B448", VA = "0x135B448")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x135AE60", Offset = "0x135AE60", VA = "0x135AE60")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x135B72C", Offset = "0x135B72C", VA = "0x135B72C")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x135BD60", Offset = "0x135BD60", VA = "0x135BD60")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x135BCE0", Offset = "0x135BCE0", VA = "0x135BCE0")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x135BDF0", Offset = "0x135BDF0", VA = "0x135BDF0")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x135C080", Offset = "0x135C080", VA = "0x135C080")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x135C574", Offset = "0x135C574", VA = "0x135C574")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x135C714", Offset = "0x135C714", VA = "0x135C714")]
	public DemoController()
	{
	}
}
[Token(Token = "0x200010C")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x173F49C", Offset = "0x173F49C", VA = "0x173F49C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x173F4B0", Offset = "0x173F4B0", VA = "0x173F4B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x173F558", Offset = "0x173F558", VA = "0x173F558")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x200010D")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x20004CE")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87ECCC", Offset = "0x87ECCC")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject btnObj;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8B")]
		public InputManager <>4__this;

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x11CC750", Offset = "0x11CC750", VA = "0x11CC750")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x11CD8B8", Offset = "0x11CD8B8", VA = "0x11CD8B8")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0894")]
	private StringBuilder sb;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ArrayList btnsName;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject enter;

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x11CB8E8", Offset = "0x11CB8E8", VA = "0x11CB8E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x11CC728", Offset = "0x11CC728", VA = "0x11CC728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x11CC73C", Offset = "0x11CC73C", VA = "0x11CC73C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x11CB918", Offset = "0x11CB918", VA = "0x11CB918")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x11CC780", Offset = "0x11CC780", VA = "0x11CC780")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x11CD62C", Offset = "0x11CD62C", VA = "0x11CD62C")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x11CCB88", Offset = "0x11CCB88", VA = "0x11CCB88")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x11CD2FC", Offset = "0x11CD2FC", VA = "0x11CD2FC")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x11CD7DC", Offset = "0x11CD7DC", VA = "0x11CD7DC")]
	public InputManager()
	{
	}
}
[Token(Token = "0x200010E")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static string IS_SUCCESS;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B08A4")]
	private static string MSG;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string CODE;

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x14D3BA0", Offset = "0x14D3BA0", VA = "0x14D3BA0")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x14D42B8", Offset = "0x14D42B8", VA = "0x14D42B8")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x14D47D0", Offset = "0x14D47D0", VA = "0x14D47D0")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x14D40FC", Offset = "0x14D40FC", VA = "0x14D40FC")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x14D4960", Offset = "0x14D4960", VA = "0x14D4960")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x14D49EC", Offset = "0x14D49EC", VA = "0x14D49EC")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x14D4B68", Offset = "0x14D4B68", VA = "0x14D4B68")]
	public Callback()
	{
	}
}
[Token(Token = "0x200010F")]
public class CommonDic
{
	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC93")]
	private string _app_ID;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private string _app_Key;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B08B4")]
	private string _user_token;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _access_token;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _open_id;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _refresh_token;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9B")]
	private string _expires_in;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private string _user_info;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B08C4")]
	private string _subject;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _body;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _order_id;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _total;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA3")]
	private string _goods_tag;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private string _notify_url;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B08D4")]
	private string _trade_type;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _pay_code;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _order_info;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _code;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCAB")]
	private string _msg;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private string _merchant_ID;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B08E4")]
	private string _payKey;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _isSuucess;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _loginMsg;

	[Token(Token = "0x17000052")]
	public string subject
	{
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x14552C0", Offset = "0x14552C0", VA = "0x14552C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000714")]
		[Address(RVA = "0x14552F0", Offset = "0x14552F0", VA = "0x14552F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public string body
	{
		[Token(Token = "0x6000715")]
		[Address(RVA = "0x1455328", Offset = "0x1455328", VA = "0x1455328")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x1455358", Offset = "0x1455358", VA = "0x1455358")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public string order_id
	{
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x1455390", Offset = "0x1455390", VA = "0x1455390")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x14553C0", Offset = "0x14553C0", VA = "0x14553C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public string total
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x14553F8", Offset = "0x14553F8", VA = "0x14553F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1455428", Offset = "0x1455428", VA = "0x1455428")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public string goods_tag
	{
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x1455460", Offset = "0x1455460", VA = "0x1455460")]
		get
		{
			return null;
		}
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1455490", Offset = "0x1455490", VA = "0x1455490")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public string notify_url
	{
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x14554C8", Offset = "0x14554C8", VA = "0x14554C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x14554F8", Offset = "0x14554F8", VA = "0x14554F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public string pay_code
	{
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x1455530", Offset = "0x1455530", VA = "0x1455530")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x1455560", Offset = "0x1455560", VA = "0x1455560")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public string trade_type
	{
		[Token(Token = "0x6000721")]
		[Address(RVA = "0x1455598", Offset = "0x1455598", VA = "0x1455598")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x14555C8", Offset = "0x14555C8", VA = "0x14555C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public string user_token
	{
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x1455600", Offset = "0x1455600", VA = "0x1455600")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1455630", Offset = "0x1455630", VA = "0x1455630")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public string access_token
	{
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1455668", Offset = "0x1455668", VA = "0x1455668")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x1455698", Offset = "0x1455698", VA = "0x1455698")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public string open_id
	{
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x14556D0", Offset = "0x14556D0", VA = "0x14556D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x1455700", Offset = "0x1455700", VA = "0x1455700")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public string refresh_token
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x1455738", Offset = "0x1455738", VA = "0x1455738")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x1455768", Offset = "0x1455768", VA = "0x1455768")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public string expires_in
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x14557A0", Offset = "0x14557A0", VA = "0x14557A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x14557D0", Offset = "0x14557D0", VA = "0x14557D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public string isSuccess
	{
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x1455808", Offset = "0x1455808", VA = "0x1455808")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x1455838", Offset = "0x1455838", VA = "0x1455838")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public string loginMsg
	{
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x1455870", Offset = "0x1455870", VA = "0x1455870")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x14558A0", Offset = "0x14558A0", VA = "0x14558A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public string user_info
	{
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x14558D8", Offset = "0x14558D8", VA = "0x14558D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1455908", Offset = "0x1455908", VA = "0x1455908")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public string order_info
	{
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x1455940", Offset = "0x1455940", VA = "0x1455940")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1455970", Offset = "0x1455970", VA = "0x1455970")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public string code
	{
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x14559A8", Offset = "0x14559A8", VA = "0x14559A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x14559D8", Offset = "0x14559D8", VA = "0x14559D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public string msg
	{
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1455A10", Offset = "0x1455A10", VA = "0x1455A10")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x1455A40", Offset = "0x1455A40", VA = "0x1455A40")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public string app_ID
	{
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x1455A78", Offset = "0x1455A78", VA = "0x1455A78")]
		get
		{
			return null;
		}
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1455AA8", Offset = "0x1455AA8", VA = "0x1455AA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public string app_Key
	{
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1455AE0", Offset = "0x1455AE0", VA = "0x1455AE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1455B10", Offset = "0x1455B10", VA = "0x1455B10")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public string merchant_ID
	{
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1455B48", Offset = "0x1455B48", VA = "0x1455B48")]
		get
		{
			return null;
		}
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1455B78", Offset = "0x1455B78", VA = "0x1455B78")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public string paykey
	{
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1455BB0", Offset = "0x1455BB0", VA = "0x1455BB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1455BE0", Offset = "0x1455BE0", VA = "0x1455BE0")]
		set
		{
		}
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1454278", Offset = "0x1454278", VA = "0x1454278")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1454DC8", Offset = "0x1454DC8", VA = "0x1454DC8")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x1454E4C", Offset = "0x1454E4C", VA = "0x1454E4C")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x14551C4", Offset = "0x14551C4", VA = "0x14551C4")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x14544C0", Offset = "0x14544C0", VA = "0x14544C0")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1454404", Offset = "0x1454404", VA = "0x1454404")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x2000110")]
public class LoginSDK
{
	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1746E84", Offset = "0x1746E84", VA = "0x1746E84")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1746F64", Offset = "0x1746F64", VA = "0x1746F64")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1747044", Offset = "0x1747044", VA = "0x1747044")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x2000111")]
public class PicoPaymentSDK
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000069")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x119F9AC", Offset = "0x119F9AC", VA = "0x119F9AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x119FA94", Offset = "0x119FA94", VA = "0x119FA94")]
		set
		{
		}
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x119FB84", Offset = "0x119FB84", VA = "0x119FB84")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x119FDDC", Offset = "0x119FDDC", VA = "0x119FDDC")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x11A0064", Offset = "0x11A0064", VA = "0x11A0064")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x11A02EC", Offset = "0x11A02EC", VA = "0x11A02EC")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x11A0544", Offset = "0x11A0544", VA = "0x11A0544")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x2000112")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCB3")]
	public Text deviceInfoText;

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x30197A4", Offset = "0x30197A4", VA = "0x30197A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x3019820", Offset = "0x3019820", VA = "0x3019820")]
	private void Start()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x301987C", Offset = "0x301987C", VA = "0x301987C")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x30197D4", Offset = "0x30197D4", VA = "0x30197D4")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x3019850", Offset = "0x3019850", VA = "0x3019850")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x30198AC", Offset = "0x30198AC", VA = "0x30198AC")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x30198D8", Offset = "0x30198D8", VA = "0x30198D8")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x3019A6C", Offset = "0x3019A6C", VA = "0x3019A6C")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x3019B80", Offset = "0x3019B80", VA = "0x3019B80")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x3019C9C", Offset = "0x3019C9C", VA = "0x3019C9C")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x3019D88", Offset = "0x3019D88", VA = "0x3019D88")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x3019E5C", Offset = "0x3019E5C", VA = "0x3019E5C")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x3019F9C", Offset = "0x3019F9C", VA = "0x3019F9C")]
	public void AppManager()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x301A084", Offset = "0x301A084", VA = "0x301A084")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x301A1C4", Offset = "0x301A1C4", VA = "0x301A1C4")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x2000113")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static int logLevel;

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x140276C", Offset = "0x140276C", VA = "0x140276C")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1402878", Offset = "0x1402878", VA = "0x1402878")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x1402A14", Offset = "0x1402A14", VA = "0x1402A14")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x1402BB0", Offset = "0x1402BB0", VA = "0x1402BB0")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1402D4C", Offset = "0x1402D4C", VA = "0x1402D4C")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1402E3C", Offset = "0x1402E3C", VA = "0x1402E3C")]
	public PLOG()
	{
	}
}
[Token(Token = "0x2000114")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B08F4")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool AppIDChecked;

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x14D1904", Offset = "0x14D1904", VA = "0x14D1904")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000115")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCBB")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0904")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 customRTSize;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool usedefaultfps;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int customfps;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC3")]
	public bool usesinglepass;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool usecontentprotect;

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x19E21B8", Offset = "0x19E21B8", VA = "0x19E21B8")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x19F3124", Offset = "0x19F3124", VA = "0x19F3124")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x2000116")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x20004D0")]
	public enum simulationType
	{
		[Token(Token = "0x40026CB")]
		Null,
		[Token(Token = "0x40026CC")]
		Invalid,
		[Token(Token = "0x40026CD")]
		Valid
	}

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0914")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<string> deviceSN;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCCB")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x1700006A")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x19F1498", Offset = "0x19F1498", VA = "0x19F1498")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x19F1674", Offset = "0x19F1674", VA = "0x19F1674")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x6000769")]
		[Address(RVA = "0x19F173C", Offset = "0x19F173C", VA = "0x19F173C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600076A")]
		[Address(RVA = "0x19F1794", Offset = "0x19F1794", VA = "0x19F1794")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x600076B")]
		[Address(RVA = "0x19F14F0", Offset = "0x19F14F0", VA = "0x19F14F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600076C")]
		[Address(RVA = "0x19F185C", Offset = "0x19F185C", VA = "0x19F185C")]
		set
		{
		}
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x19F18E4", Offset = "0x19F18E4", VA = "0x19F18E4")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x2000117")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x20004D1")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87ED08", Offset = "0x87ED08")]
	private sealed class <ToastManager>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD23")]
		private object <>2__current;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public float time;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B09D4")]
		public int type;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool state;

		[Token(Token = "0x17000324")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002248")]
			[Address(RVA = "0x19F1234", Offset = "0x19F1234", VA = "0x19F1234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600224A")]
			[Address(RVA = "0x19F1304", Offset = "0x19F1304", VA = "0x19F1304", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x19E5900", Offset = "0x19E5900", VA = "0x19E5900")]
		[DebuggerHidden]
		public <ToastManager>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x19F0D50", Offset = "0x19F0D50", VA = "0x19F0D50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x19F0D64", Offset = "0x19F0D64", VA = "0x19F0D64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x19F1264", Offset = "0x19F1264", VA = "0x19F1264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87ED44", Offset = "0x87ED44")]
	private sealed class <>c__DisplayClass114_0
	{
		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2B")]
		public Transform trans;

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x19E8434", Offset = "0x19E8434", VA = "0x19E8434")]
		public <>c__DisplayClass114_0()
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x19EE61C", Offset = "0x19EE61C", VA = "0x19EE61C")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x20004D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87ED80", Offset = "0x87ED80")]
	private sealed class <G3TipsManager>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B09E4")]
		private object <>2__current;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject tip;

		[Token(Token = "0x17000326")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002250")]
			[Address(RVA = "0x19EE880", Offset = "0x19EE880", VA = "0x19EE880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002252")]
			[Address(RVA = "0x19EE950", Offset = "0x19EE950", VA = "0x19EE950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x19E8B9C", Offset = "0x19E8B9C", VA = "0x19E8B9C")]
		[DebuggerHidden]
		public <G3TipsManager>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x19EE6C0", Offset = "0x19EE6C0", VA = "0x19EE6C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x19EE6D4", Offset = "0x19EE6D4", VA = "0x19EE6D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x19EE8B0", Offset = "0x19EE8B0", VA = "0x19EE8B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EDBC", Offset = "0x87EDBC")]
	private sealed class <Start>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD33")]
		private object <>2__current;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x17000328")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002256")]
			[Address(RVA = "0x19F0C50", Offset = "0x19F0C50", VA = "0x19F0C50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002258")]
			[Address(RVA = "0x19F0D20", Offset = "0x19F0D20", VA = "0x19F0D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x19EC5AC", Offset = "0x19EC5AC", VA = "0x19EC5AC")]
		[DebuggerHidden]
		public <Start>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x19F0784", Offset = "0x19F0784", VA = "0x19F0784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x19F0798", Offset = "0x19F0798", VA = "0x19F0798", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x19F0C80", Offset = "0x19F0C80", VA = "0x19F0C80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EDF8", Offset = "0x87EDF8")]
	private sealed class <InitRenderThreadRoutine>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B09F4")]
		private int <>1__state;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700032A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600225C")]
			[Address(RVA = "0x19EF22C", Offset = "0x19EF22C", VA = "0x19EF22C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600225E")]
			[Address(RVA = "0x19EF2FC", Offset = "0x19EF2FC", VA = "0x19EF2FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x19EC694", Offset = "0x19EC694", VA = "0x19EC694")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x19EE980", Offset = "0x19EE980", VA = "0x19EE980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x19EE994", Offset = "0x19EE994", VA = "0x19EE994", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x19EF25C", Offset = "0x19EF25C", VA = "0x19EF25C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EE34", Offset = "0x87EE34")]
	private sealed class <OnResume>d__146 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3B")]
		private object <>2__current;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0A04")]
		private int <ability6dof>5__2;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <waitNum>5__3;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <resetNum>5__4;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__5;

		[Token(Token = "0x1700032C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002262")]
			[Address(RVA = "0x19F0684", Offset = "0x19F0684", VA = "0x19F0684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002264")]
			[Address(RVA = "0x19F0754", Offset = "0x19F0754", VA = "0x19F0754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x19EE46C", Offset = "0x19EE46C", VA = "0x19EE46C")]
		[DebuggerHidden]
		public <OnResume>d__146(int <>1__state)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x19EF32C", Offset = "0x19EF32C", VA = "0x19EF32C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x19EF340", Offset = "0x19EF340", VA = "0x19EF340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x19F06B4", Offset = "0x19F06B4", VA = "0x19F06B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD3")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0934")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCDB")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0944")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCE3")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0954")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCEB")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0964")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCF3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88BDFC", Offset = "0x88BDFC")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0974")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool screenFade;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCFB")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0984")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isHasController;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject calltoast;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD03")]
	private GameObject msgtoast;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0994")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0B")]
	private float controllerpowershowtime;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool UseToast;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B09A4")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject G3LiteTips;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool mIsAndroid7;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD13")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B09B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C054", Offset = "0x88C054")]
	private static SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int SystemFFRLevel;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1B")]
	public int AppCheckResult;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B09C4")]
	private bool sensorCabezaIniciado;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool normal;

	[Token(Token = "0x1700006D")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x600076E")]
		[Address(RVA = "0x19CA350", Offset = "0x19CA350", VA = "0x19CA350")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public bool Rotfoldout
	{
		[Token(Token = "0x600076F")]
		[Address(RVA = "0x19E1D6C", Offset = "0x19E1D6C", VA = "0x19E1D6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x19E1DB0", Offset = "0x19E1DB0", VA = "0x19E1DB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x6000771")]
		[Address(RVA = "0x19E1E4C", Offset = "0x19E1E4C", VA = "0x19E1E4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000772")]
		[Address(RVA = "0x19E1E90", Offset = "0x19E1E90", VA = "0x19E1E90")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x6000773")]
		[Address(RVA = "0x19E1F2C", Offset = "0x19E1F2C", VA = "0x19E1F2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000774")]
		[Address(RVA = "0x19E1F70", Offset = "0x19E1F70", VA = "0x19E1F70")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x6000775")]
		[Address(RVA = "0x19E200C", Offset = "0x19E200C", VA = "0x19E200C")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x19E203C", Offset = "0x19E203C", VA = "0x19E203C")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x600077A")]
		[Address(RVA = "0x19E22CC", Offset = "0x19E22CC", VA = "0x19E22CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x19CCDAC", Offset = "0x19CCDAC", VA = "0x19CCDAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x600077C")]
		[Address(RVA = "0x19E2310", Offset = "0x19E2310", VA = "0x19E2310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1974", Offset = "0x8A1974")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x19E2354", Offset = "0x19E2354", VA = "0x19E2354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A19B0", Offset = "0x8A19B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public bool ShowFPS
	{
		[Token(Token = "0x600077E")]
		[Address(RVA = "0x19E23A0", Offset = "0x19E23A0", VA = "0x19E23A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x19E23E4", Offset = "0x19E23E4", VA = "0x19E23E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool ScreenFade
	{
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x19E2480", Offset = "0x19E2480", VA = "0x19E2480")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000781")]
		[Address(RVA = "0x19E24C4", Offset = "0x19E24C4", VA = "0x19E24C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public bool PVRNeck
	{
		[Token(Token = "0x6000782")]
		[Address(RVA = "0x19E2560", Offset = "0x19E2560", VA = "0x19E2560")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x19E25A4", Offset = "0x19E25A4", VA = "0x19E25A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x6000784")]
		[Address(RVA = "0x19E2640", Offset = "0x19E2640", VA = "0x19E2640")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x19E2684", Offset = "0x19E2684", VA = "0x19E2684")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public static StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6000786")]
		[Address(RVA = "0x19E274C", Offset = "0x19E274C", VA = "0x19E274C")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000079")]
	public static SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6000787")]
		[Address(RVA = "0x19E2834", Offset = "0x19E2834", VA = "0x19E2834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A19EC", Offset = "0x8A19EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000788")]
		[Address(RVA = "0x19E291C", Offset = "0x19E291C", VA = "0x19E291C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1A28", Offset = "0x8A1A28")]
		private set
		{
		}
	}

	[Token(Token = "0x14000027")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x6000789")]
		[Address(RVA = "0x19E2A0C", Offset = "0x19E2A0C", VA = "0x19E2A0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1A64", Offset = "0x8A1A64")]
		add
		{
		}
		[Token(Token = "0x600078A")]
		[Address(RVA = "0x19E2C38", Offset = "0x19E2C38", VA = "0x19E2C38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1AA0", Offset = "0x8A1AA0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x19E20C0", Offset = "0x19E20C0", VA = "0x19E20C0")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x19D15CC", Offset = "0x19D15CC", VA = "0x19D15CC")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x19E2248", Offset = "0x19E2248", VA = "0x19E2248")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x19E2E64", Offset = "0x19E2E64", VA = "0x19E2E64")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x19E3178", Offset = "0x19E3178", VA = "0x19E3178")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x19E34C0", Offset = "0x19E34C0", VA = "0x19E34C0")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x19E48A0", Offset = "0x19E48A0", VA = "0x19E48A0")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x19E5020", Offset = "0x19E5020", VA = "0x19E5020")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x19E5668", Offset = "0x19E5668", VA = "0x19E5668")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x19E3C40", Offset = "0x19E3C40", VA = "0x19E3C40")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x19E58EC", Offset = "0x19E58EC", VA = "0x19E58EC")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x19E4758", Offset = "0x19E4758", VA = "0x19E4758")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A1ADC", Offset = "0x8A1ADC")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x19E5948", Offset = "0x19E5948", VA = "0x19E5948")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x19E5C4C", Offset = "0x19E5C4C", VA = "0x19E5C4C")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x19E7DE0", Offset = "0x19E7DE0", VA = "0x19E7DE0")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x19E814C", Offset = "0x19E814C", VA = "0x19E814C")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x19E644C", Offset = "0x19E644C", VA = "0x19E644C")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x19E6F88", Offset = "0x19E6F88", VA = "0x19E6F88")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x19E76A0", Offset = "0x19E76A0", VA = "0x19E76A0")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x19E8464", Offset = "0x19E8464", VA = "0x19E8464")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x19E7CF0", Offset = "0x19E7CF0", VA = "0x19E7CF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A1B8C", Offset = "0x8A1B8C")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x19E8A90", Offset = "0x19E8A90", VA = "0x19E8A90")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x19E8BE4", Offset = "0x19E8BE4", VA = "0x19E8BE4")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x19E306C", Offset = "0x19E306C", VA = "0x19E306C")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x19E9078", Offset = "0x19E9078", VA = "0x19E9078")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x19E9234", Offset = "0x19E9234", VA = "0x19E9234")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x19E9258", Offset = "0x19E9258", VA = "0x19E9258")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x19E95BC", Offset = "0x19E95BC", VA = "0x19E95BC")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x19EA160", Offset = "0x19EA160", VA = "0x19EA160")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x19EA734", Offset = "0x19EA734", VA = "0x19EA734")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x19EAA28", Offset = "0x19EAA28", VA = "0x19EAA28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x19EAA94", Offset = "0x19EAA94", VA = "0x19EAA94")]
	public void DoAwake()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x19EC4F0", Offset = "0x19EC4F0", VA = "0x19EC4F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A1C3C", Offset = "0x8A1C3C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x19EC5F4", Offset = "0x19EC5F4", VA = "0x19EC5F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A1CEC", Offset = "0x8A1CEC")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x19EC6DC", Offset = "0x19EC6DC", VA = "0x19EC6DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x19ECDA4", Offset = "0x19ECDA4", VA = "0x19ECDA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x19ED10C", Offset = "0x19ED10C", VA = "0x19ED10C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x19ED4A8", Offset = "0x19ED4A8", VA = "0x19ED4A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x19ED4D8", Offset = "0x19ED4D8", VA = "0x19ED4D8")]
	private void OnPause()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x19EDB0C", Offset = "0x19EDB0C", VA = "0x19EDB0C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x19EE1F8", Offset = "0x19EE1F8", VA = "0x19EE1F8")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x19ED680", Offset = "0x19ED680", VA = "0x19ED680")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x19EE440", Offset = "0x19EE440", VA = "0x19EE440")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x19EBAEC", Offset = "0x19EBAEC", VA = "0x19EBAEC")]
	private void InitUI()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x19EBEE4", Offset = "0x19EBEE4", VA = "0x19EBEE4")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x19EB5F4", Offset = "0x19EB5F4", VA = "0x19EB5F4")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x19EE13C", Offset = "0x19EE13C", VA = "0x19EE13C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A1D9C", Offset = "0x8A1D9C")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x19EE4B4", Offset = "0x19EE4B4", VA = "0x19EE4B4")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x2000118")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x11EA520", Offset = "0x11EA520", VA = "0x11EA520")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x11EA534", Offset = "0x11EA534", VA = "0x11EA534")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x11EA58C", Offset = "0x11EA58C", VA = "0x11EA58C")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x2000119")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x20004D8")]
	private class EyeMaskData
	{
		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0A24")]
		public Eye eyeSide;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Camera camera;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x248786C", Offset = "0x248786C", VA = "0x248786C")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD43")]
	private Shader eyeMaskShader;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0A14")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float zDir;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4B")]
	private Color eyeMaskColor;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x24839E8", Offset = "0x24839E8", VA = "0x24839E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x2483B90", Offset = "0x2483B90", VA = "0x2483B90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x2485744", Offset = "0x2485744", VA = "0x2485744")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x2484948", Offset = "0x2484948", VA = "0x2484948")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x24871E8", Offset = "0x24871E8", VA = "0x24871E8")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x24861B0", Offset = "0x24861B0", VA = "0x24861B0")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x248694C", Offset = "0x248694C", VA = "0x248694C")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x2485D58", Offset = "0x2485D58", VA = "0x2485D58")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x2484008", Offset = "0x2484008", VA = "0x2484008")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x248776C", Offset = "0x248776C", VA = "0x248776C")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x2485BEC", Offset = "0x2485BEC", VA = "0x2485BEC")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x2485C74", Offset = "0x2485C74", VA = "0x2485C74")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x248789C", Offset = "0x248789C", VA = "0x248789C")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x200011A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B124", Offset = "0x87B124")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EE70", Offset = "0x87EE70")]
	private sealed class <EsperarAPlayer>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD7B")]
		private int <>1__state;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0A84")]
		public Pvr_UnitySDKEye <>4__this;

		[Token(Token = "0x1700032E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002269")]
			[Address(RVA = "0x19D429C", Offset = "0x19D429C", VA = "0x19D429C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600226B")]
			[Address(RVA = "0x19D436C", Offset = "0x19D436C", VA = "0x19D436C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x19CFA74", Offset = "0x19CFA74", VA = "0x19CFA74")]
		[DebuggerHidden]
		public <EsperarAPlayer>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x19D3BCC", Offset = "0x19D3BCC", VA = "0x19D3BCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x19D3BE0", Offset = "0x19D3BE0", VA = "0x19D3BE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x19D42CC", Offset = "0x19D42CC", VA = "0x19D42CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EEAC", Offset = "0x87EEAC")]
	private sealed class <ScreenFade>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Pvr_UnitySDKEye <>4__this;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD83")]
		public float velocidad;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public float startAlpha;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0A94")]
		public float endAlpha;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color <color>5__3;

		[Token(Token = "0x17000330")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600226F")]
			[Address(RVA = "0x19D4790", Offset = "0x19D4790", VA = "0x19D4790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002271")]
			[Address(RVA = "0x19D4860", Offset = "0x19D4860", VA = "0x19D4860", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x19D30FC", Offset = "0x19D30FC", VA = "0x19D30FC")]
		[DebuggerHidden]
		public <ScreenFade>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x19D439C", Offset = "0x19D439C", VA = "0x19D439C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x19D43B0", Offset = "0x19D43B0", VA = "0x19D43B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x19D47C0", Offset = "0x19D47C0", VA = "0x19D47C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD53")]
	public Eye eyeSide;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C108", Offset = "0x88C108")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0A34")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int lastBoundaryState;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5B")]
	private Pvr_UnitySDKEyeManager controller;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Matrix4x4 realProj;

	[Token(Token = "0x400075F")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int IDIndex;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RenderEventType eventType;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isFadeUsing;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD63")]
	private float elapsedTime;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float fadeTime;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0A54")]
	public Color fadeColor;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material fadeMaterial;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Color fadeMaterialColor;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MeshFilter fadeMeshFilter;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6B")]
	private static MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool isFading;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0A64")]
	private static Vector2 FoveationGainValue;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float FoveationAreaValue;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float FoveationMinimumValue;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int previousId;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD73")]
	public bool normal;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Coroutine esperarPlayerCor;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0A74")]
	public static bool setLevel;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material mat_Vignette;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject go_PantallaNegra;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine fadeCor;

	[Token(Token = "0x1700007A")]
	public Camera eyecamera
	{
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x19CCF38", Offset = "0x19CCF38", VA = "0x19CCF38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1E4C", Offset = "0x8A1E4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x19CCF68", Offset = "0x19CCF68", VA = "0x19CCF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A1E88", Offset = "0x8A1E88")]
		private set
		{
		}
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x19CCFA0", Offset = "0x19CCFA0", VA = "0x19CCFA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x19CD00C", Offset = "0x19CD00C", VA = "0x19CD00C")]
	public void DoAwake()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x19CD170", Offset = "0x19CD170", VA = "0x19CD170")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x19CE048", Offset = "0x19CE048", VA = "0x19CE048")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x19CE920", Offset = "0x19CE920", VA = "0x19CE920")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x19CF884", Offset = "0x19CF884", VA = "0x19CF884")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A1EC4", Offset = "0x8A1EC4")]
	private IEnumerator EsperarAPlayer()
	{
		return null;
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x19CFABC", Offset = "0x19CFABC", VA = "0x19CFABC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x19CFFA8", Offset = "0x19CFFA8", VA = "0x19CFFA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x19D0380", Offset = "0x19D0380", VA = "0x19D0380")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x19D0804", Offset = "0x19D0804", VA = "0x19D0804")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x19D0954", Offset = "0x19D0954", VA = "0x19D0954")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x19D04C8", Offset = "0x19D04C8", VA = "0x19D04C8")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x19D0AA4", Offset = "0x19D0AA4", VA = "0x19D0AA4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x19D12A0", Offset = "0x19D12A0", VA = "0x19D12A0")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x19CD33C", Offset = "0x19CD33C", VA = "0x19CD33C")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x19CD7B8", Offset = "0x19CD7B8", VA = "0x19CD7B8")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x19D1644", Offset = "0x19D1644", VA = "0x19D1644")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x19D1984", Offset = "0x19D1984", VA = "0x19D1984")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x19D1F98", Offset = "0x19D1F98", VA = "0x19D1F98")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x19D29DC", Offset = "0x19D29DC", VA = "0x19D29DC")]
	private void DestroyFadeMesh()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x19D2E5C", Offset = "0x19D2E5C", VA = "0x19D2E5C")]
	public void Fade(float startAlpha, float endAlpha, float velocidad = 1f)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x19CF940", Offset = "0x19CF940", VA = "0x19CF940")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A1F74", Offset = "0x8A1F74")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha, float velocidad = 1f)
	{
		return null;
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x19CF4CC", Offset = "0x19CF4CC", VA = "0x19CF4CC")]
	private void PonerPantallaEnNegro()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x19D3144", Offset = "0x19D3144", VA = "0x19D3144")]
	private void SetFadeMeshEnable()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x19D1BE8", Offset = "0x19D1BE8", VA = "0x19D1BE8")]
	private void vignette()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x19D0EC4", Offset = "0x19D0EC4", VA = "0x19D0EC4")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x19D37A0", Offset = "0x19D37A0", VA = "0x19D37A0")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x200011B")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EEE8", Offset = "0x87EEE8")]
	private sealed class <EndOfFrame>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDBB")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x17000332")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002275")]
			[Address(RVA = "0x19DE5A4", Offset = "0x19DE5A4", VA = "0x19DE5A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002277")]
			[Address(RVA = "0x19DE674", Offset = "0x19DE674", VA = "0x19DE674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x19D811C", Offset = "0x19D811C", VA = "0x19D811C")]
		[DebuggerHidden]
		public <EndOfFrame>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x19DA9B8", Offset = "0x19DA9B8", VA = "0x19DA9B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x19DA9CC", Offset = "0x19DA9CC", VA = "0x19DA9CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x19DE5D4", Offset = "0x19DE5D4", VA = "0x19DE5D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EF24", Offset = "0x87EF24")]
	private sealed class <ScreenFade>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0B04")]
		private object <>2__current;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float startAlpha;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float endAlpha;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC3")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000334")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600227B")]
			[Address(RVA = "0x19DEA3C", Offset = "0x19DEA3C", VA = "0x19DEA3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600227D")]
			[Address(RVA = "0x19DEB0C", Offset = "0x19DEB0C", VA = "0x19DEB0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x19DA7E0", Offset = "0x19DA7E0", VA = "0x19DA7E0")]
		[DebuggerHidden]
		public <ScreenFade>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x19DE6A4", Offset = "0x19DE6A4", VA = "0x19DE6A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x19DE6B8", Offset = "0x19DE6B8", VA = "0x19DE6B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x19DEA6C", Offset = "0x19DEA6C", VA = "0x19DEA6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8B")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0AA4")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int MonoEyeTextureID;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD93")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int frameNum;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0AB4")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool normal;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool encendido;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9B")]
	private int eyeTextureId;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private RenderEventType eventType;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0AC4")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int overlayLayerDepth;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int underlayLayerDepth;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isHeadLocked;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA3")]
	private int layerFlags;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0AD4")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C3A0", Offset = "0x88C3A0")]
	public bool screenFade;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDAB")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C404", Offset = "0x88C404")]
	public float fadeTime;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C468", Offset = "0x88C468")]
	public Color fadeColor;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0AE4")]
	public int renderQueue;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material fadeMaterial;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDB3")]
	private float elapsedTime;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool isFading;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0AF4")]
	private float currentAlpha;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float nowFadeAlpha;

	[Token(Token = "0x1700007B")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x19D3500", Offset = "0x19D3500", VA = "0x19D3500")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007C")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x19D4890", Offset = "0x19D4890", VA = "0x19D4890")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007D")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x19D49EC", Offset = "0x19D49EC", VA = "0x19D49EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x19D4A30", Offset = "0x19D4A30", VA = "0x19D4A30")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x19D4B34", Offset = "0x19D4B34", VA = "0x19D4B34")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x19D4B64", Offset = "0x19D4B64", VA = "0x19D4B64")]
		set
		{
		}
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x19D4BCC", Offset = "0x19D4BCC", VA = "0x19D4BCC")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x19D5148", Offset = "0x19D5148", VA = "0x19D5148")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x19D53A4", Offset = "0x19D53A4", VA = "0x19D53A4")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x19D55A0", Offset = "0x19D55A0", VA = "0x19D55A0")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x19D57A8", Offset = "0x19D57A8", VA = "0x19D57A8")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x19D5AD0", Offset = "0x19D5AD0", VA = "0x19D5AD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x19D5C9C", Offset = "0x19D5C9C", VA = "0x19D5C9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x19D7298", Offset = "0x19D7298", VA = "0x19D7298")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x19D72D8", Offset = "0x19D72D8", VA = "0x19D72D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x19D7898", Offset = "0x19D7898", VA = "0x19D7898")]
	private void OnPause()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x19D7A24", Offset = "0x19D7A24", VA = "0x19D7A24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x19D7A54", Offset = "0x19D7A54", VA = "0x19D7A54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x19D7E54", Offset = "0x19D7E54", VA = "0x19D7E54")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x19D8060", Offset = "0x19D8060", VA = "0x19D8060")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A2024", Offset = "0x8A2024")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x19D8164", Offset = "0x19D8164", VA = "0x19D8164")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x19D879C", Offset = "0x19D879C", VA = "0x19D879C")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x19D8CE8", Offset = "0x19D8CE8", VA = "0x19D8CE8")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x19D94EC", Offset = "0x19D94EC", VA = "0x19D94EC")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x19D9B8C", Offset = "0x19D9B8C", VA = "0x19D9B8C")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x19D7A84", Offset = "0x19D7A84", VA = "0x19D7A84")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x19DA4C4", Offset = "0x19DA4C4", VA = "0x19DA4C4")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x19D718C", Offset = "0x19D718C", VA = "0x19D718C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A20D4", Offset = "0x8A20D4")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x19DA510", Offset = "0x19DA510", VA = "0x19DA510")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x19D6E28", Offset = "0x19D6E28", VA = "0x19D6E28")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x19DA828", Offset = "0x19DA828", VA = "0x19DA828")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x200011C")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x20004DD")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x20004DE")]
	public enum OverlayShape
	{
		[Token(Token = "0x40026FF")]
		Quad,
		[Token(Token = "0x4002700")]
		Cylinder,
		[Token(Token = "0x4002701")]
		Equirect
	}

	[Token(Token = "0x20004DF")]
	public enum OverlayType
	{
		[Token(Token = "0x4002703")]
		Overlay,
		[Token(Token = "0x4002704")]
		Underlay
	}

	[Token(Token = "0x20004E0")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x4002706")]
		NotCare,
		[Token(Token = "0x4002707")]
		Nearest,
		[Token(Token = "0x4002708")]
		Linear,
		[Token(Token = "0x4002709")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x400270A")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x400270B")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x400270C")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0B14")]
	public int layerIndex;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OverlayType overlayType;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OverlayShape overlayShape;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform layerTransform;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDCB")]
	public Texture[] layerTextures;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int[] layerTextureIds;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0B24")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3[] ModelScales;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD3")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0B34")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 colorScale;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 colorOffset;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDDB")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0B44")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x19DEB3C", Offset = "0x19DEB3C", VA = "0x19DEB3C", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x19DEBA8", Offset = "0x19DEBA8", VA = "0x19DEBA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x19DF70C", Offset = "0x19DF70C", VA = "0x19DF70C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x19E00A4", Offset = "0x19E00A4", VA = "0x19E00A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x19D68F8", Offset = "0x19D68F8", VA = "0x19D68F8")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x19DF380", Offset = "0x19DF380", VA = "0x19DF380")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x19DF73C", Offset = "0x19DF73C", VA = "0x19DF73C")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x19E05A0", Offset = "0x19E05A0", VA = "0x19E05A0")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x19E068C", Offset = "0x19E068C", VA = "0x19E068C")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x19DE494", Offset = "0x19DE494", VA = "0x19DE494")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x19DE51C", Offset = "0x19DE51C", VA = "0x19DE51C")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x19E08C8", Offset = "0x19E08C8", VA = "0x19E08C8")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x200011D")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0B74")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDFB")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0B84")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool canConnecttoActivity;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isInitrenderThread;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string model;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE03")]
	private Vector2 prefinger1;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector2 prefinger2;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0B94")]
	public int eyeTextureCount;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int[] eyeTextureIds;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int currEyeTextureIdx;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0B")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0BA4")]
	public bool isSwitchSDK;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int RenderviewNumber;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isFirstStartup;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isShellMode;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE13")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C4CC", Offset = "0x88C4CC")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0BB4")]
	private float rtScaleFactor;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float eyeVFov;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float eyeHFov;

	[Token(Token = "0x1700007F")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x19CB40C", Offset = "0x19CB40C", VA = "0x19CB40C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x19F346C", Offset = "0x19F346C", VA = "0x19F346C")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x19F4864", Offset = "0x19F4864", VA = "0x19F4864")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000081")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x19F4894", Offset = "0x19F4894", VA = "0x19F4894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2184", Offset = "0x8A2184")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x19F48C4", Offset = "0x19F48C4", VA = "0x19F48C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A21C0", Offset = "0x8A21C0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public float RtScaleFactor
	{
		[Token(Token = "0x600081A")]
		[Address(RVA = "0x19F48FC", Offset = "0x19F48FC", VA = "0x19F48FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600081B")]
		[Address(RVA = "0x19F492C", Offset = "0x19F492C", VA = "0x19F492C")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public float EyeVFoV
	{
		[Token(Token = "0x600081C")]
		[Address(RVA = "0x19F4C70", Offset = "0x19F4C70", VA = "0x19F4C70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x19CC9F8", Offset = "0x19CC9F8", VA = "0x19CC9F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public float EyeHFoV
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x19F4CA0", Offset = "0x19F4CA0", VA = "0x19F4CA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x19F4CD0", Offset = "0x19F4CD0", VA = "0x19F4CD0")]
		set
		{
		}
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x19F3154", Offset = "0x19F3154", VA = "0x19F3154")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x19F355C", Offset = "0x19F355C", VA = "0x19F355C")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x19F46A8", Offset = "0x19F46A8", VA = "0x19F46A8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x19F5360", Offset = "0x19F5360", VA = "0x19F5360")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x19F5574", Offset = "0x19F5574", VA = "0x19F5574")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x19F56F0", Offset = "0x19F56F0", VA = "0x19F56F0")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x19F6B1C", Offset = "0x19F6B1C", VA = "0x19F6B1C")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x19F5D58", Offset = "0x19F5D58", VA = "0x19F5D58")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x19F60CC", Offset = "0x19F60CC", VA = "0x19F60CC")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x19F6F18", Offset = "0x19F6F18", VA = "0x19F6F18")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x19F49B0", Offset = "0x19F49B0", VA = "0x19F49B0")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x19F0BDC", Offset = "0x19F0BDC", VA = "0x19F0BDC")]
	public void ReInit()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x19EEEC8", Offset = "0x19EEEC8", VA = "0x19EEEC8")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x19F79E8", Offset = "0x19F79E8", VA = "0x19F79E8")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x19F6440", Offset = "0x19F6440", VA = "0x19F6440")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x19F7DDC", Offset = "0x19F7DDC", VA = "0x19F7DDC")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x19F4D40", Offset = "0x19F4D40", VA = "0x19F4D40")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x200011E")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1B")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0BC4")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE23")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0BD4")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x19FE724", Offset = "0x19FE724", VA = "0x19FE724", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x19FF7B8", Offset = "0x19FF7B8", VA = "0x19FF7B8", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x19FFB4C", Offset = "0x19FFB4C", VA = "0x19FFB4C", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1A00884", Offset = "0x1A00884", VA = "0x1A00884", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x19FF7E8", Offset = "0x19FF7E8", VA = "0x19FF7E8")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1A009D0", Offset = "0x1A009D0", VA = "0x1A009D0")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x19FEC84", Offset = "0x19FEC84", VA = "0x19FEC84")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x19FF4C8", Offset = "0x19FF4C8", VA = "0x19FF4C8")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1A00BEC", Offset = "0x1A00BEC", VA = "0x1A00BEC")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x1A00FBC", Offset = "0x1A00FBC", VA = "0x1A00FBC")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1A00DEC", Offset = "0x1A00DEC", VA = "0x1A00DEC")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1A008BC", Offset = "0x1A008BC", VA = "0x1A008BC")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x19E01B4", Offset = "0x19E01B4", VA = "0x19E01B4")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x19FFB7C", Offset = "0x19FFB7C", VA = "0x19FFB7C")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1A014EC", Offset = "0x1A014EC", VA = "0x1A014EC")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1A0139C", Offset = "0x1A0139C", VA = "0x1A0139C")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x19F78B4", Offset = "0x19F78B4", VA = "0x19F78B4")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x200011F")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x6000843")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x6000844")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x6000845")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x6000846")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x11F8E78", Offset = "0x11F8E78", VA = "0x11F8E78")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x2000120")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color HighlightColor;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float AnimationTime;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2B")]
	private Renderer myRenderer;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Color originalColor;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0BE4")]
	private Color targetColor;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x11C74E0", Offset = "0x11C74E0", VA = "0x11C74E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x11C75F8", Offset = "0x11C75F8", VA = "0x11C75F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x11C7B30", Offset = "0x11C7B30", VA = "0x11C7B30")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x2000121")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private LineRenderer _line;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x11EA5EC", Offset = "0x11EA5EC", VA = "0x11EA5EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x11EA6F0", Offset = "0x11EA6F0", VA = "0x11EA6F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x11EAA40", Offset = "0x11EAA40", VA = "0x11EAA40")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x2000122")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE33")]
	public RawImage viewImage_left;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public RawImage viewImage_right;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0BF4")]
	private int width;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int height;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3B")]
	private bool cameraPreview;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x11C541C", Offset = "0x11C541C", VA = "0x11C541C")]
	private void Start()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x11C5660", Offset = "0x11C5660", VA = "0x11C5660")]
	private void Update()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x11C576C", Offset = "0x11C576C", VA = "0x11C576C")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x11C544C", Offset = "0x11C544C", VA = "0x11C544C")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x11C56BC", Offset = "0x11C56BC", VA = "0x11C56BC")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x11C57CC", Offset = "0x11C57CC", VA = "0x11C57CC")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x2000123")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EF60", Offset = "0x87EF60")]
	private sealed class <>c
	{
		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE43")]
		public static readonly <>c <>9;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x13CE93C", Offset = "0x13CE93C", VA = "0x13CE93C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x13CE96C", Offset = "0x13CE96C", VA = "0x13CE96C")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public string movieName;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0C04")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x40007E7")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x13CDFEC", Offset = "0x13CDFEC", VA = "0x13CDFEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x13CE288", Offset = "0x13CE288", VA = "0x13CE288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x13CE380", Offset = "0x13CE380", VA = "0x13CE380")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x13CE86C", Offset = "0x13CE86C", VA = "0x13CE86C")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x2000124")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0C14")]
	private Vector3 startingPosition;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x131C4C0", Offset = "0x131C4C0", VA = "0x131C4C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x131C58C", Offset = "0x131C58C", VA = "0x131C58C")]
	public void Reset()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x131C658", Offset = "0x131C658", VA = "0x131C658")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x2000125")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B1D4", Offset = "0x87B1D4")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 startingPosition;

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x131C688", Offset = "0x131C688", VA = "0x131C688")]
	private void Start()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x131C998", Offset = "0x131C998", VA = "0x131C998")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x131C840", Offset = "0x131C840", VA = "0x131C840")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x131C9B0", Offset = "0x131C9B0", VA = "0x131C9B0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x131CBB0", Offset = "0x131CBB0", VA = "0x131CBB0")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x131CDCC", Offset = "0x131CDCC", VA = "0x131CDCC")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x2000126")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x6000861")]
	[Address(RVA = "0x11EC6C0", Offset = "0x11EC6C0", VA = "0x11EC6C0")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x11EC850", Offset = "0x11EC850", VA = "0x11EC850")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x2000127")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000863")]
	[Address(RVA = "0x1DC6550", Offset = "0x1DC6550", VA = "0x1DC6550")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x1DC6678", Offset = "0x1DC6678", VA = "0x1DC6678")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x1DC67A0", Offset = "0x1DC67A0", VA = "0x1DC67A0")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x1DC71AC", Offset = "0x1DC71AC", VA = "0x1DC71AC")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000128")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C508", Offset = "0x88C508")]
	public bool trackRotation;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C56C", Offset = "0x88C56C")]
	public bool trackPosition;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform target;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0C24")]
	private bool updated;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool dataClock;

	[Token(Token = "0x17000085")]
	public Ray Gaze
	{
		[Token(Token = "0x6000867")]
		[Address(RVA = "0x19E113C", Offset = "0x19E113C", VA = "0x19E113C")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x19E1CCC", Offset = "0x19E1CCC", VA = "0x19E1CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x19E1224", Offset = "0x19E1224", VA = "0x19E1224")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x19E1D10", Offset = "0x19E1D10", VA = "0x19E1D10")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x2000129")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C5D0", Offset = "0x88C5D0")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE53")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C60C", Offset = "0x88C60C")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C648", Offset = "0x88C648")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x17000086")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x600086B")]
		[Address(RVA = "0x19F2228", Offset = "0x19F2228", VA = "0x19F2228")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x17000087")]
	public Vector3 Position
	{
		[Token(Token = "0x600086C")]
		[Address(RVA = "0x19F2478", Offset = "0x19F2478", VA = "0x19F2478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A21FC", Offset = "0x8A21FC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600086D")]
		[Address(RVA = "0x19F24B8", Offset = "0x19F24B8", VA = "0x19F24B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2238", Offset = "0x8A2238")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public Quaternion Orientation
	{
		[Token(Token = "0x600086E")]
		[Address(RVA = "0x19F2518", Offset = "0x19F2518", VA = "0x19F2518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2274", Offset = "0x8A2274")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600086F")]
		[Address(RVA = "0x19F2560", Offset = "0x19F2560", VA = "0x19F2560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A22B0", Offset = "0x8A22B0")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000870")]
		[Address(RVA = "0x19F2690", Offset = "0x19F2690", VA = "0x19F2690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A22EC", Offset = "0x8A22EC")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000871")]
		[Address(RVA = "0x19F26B8", Offset = "0x19F26B8", VA = "0x19F26B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2328", Offset = "0x8A2328")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x19CCD20", Offset = "0x19CCD20", VA = "0x19CCD20")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x19F29FC", Offset = "0x19F29FC", VA = "0x19F29FC")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x19F2AA0", Offset = "0x19F2AA0", VA = "0x19F2AA0")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x19F2724", Offset = "0x19F2724", VA = "0x19F2724")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x19F2CE4", Offset = "0x19F2CE4", VA = "0x19F2CE4")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x200012A")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x20004E2")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x20004E3")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0C34")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool SensorStart;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool SensorInit;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5B")]
	private Vector3 UnityPosition;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0C44")]
	private bool dofClock;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action EyeFovChanged;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float vfov;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0C54")]
	private float hfov;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float w;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float x;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float y;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE6B")]
	private float z;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float px;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0C64")]
	private float py;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float pz;

	[Token(Token = "0x1700008A")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x19CB634", Offset = "0x19CB634", VA = "0x19CB634")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x19F7FA4", Offset = "0x19F7FA4", VA = "0x19F7FA4")]
		set
		{
		}
	}

	[Token(Token = "0x14000028")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x19F826C", Offset = "0x19F826C", VA = "0x19F826C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2364", Offset = "0x8A2364")]
		add
		{
		}
		[Token(Token = "0x600087C")]
		[Address(RVA = "0x19F8498", Offset = "0x19F8498", VA = "0x19F8498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A23A0", Offset = "0x8A23A0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x19F86C4", Offset = "0x19F86C4", VA = "0x19F86C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A23DC", Offset = "0x8A23DC")]
		add
		{
		}
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x19F88F0", Offset = "0x19F88F0", VA = "0x19F88F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2418", Offset = "0x8A2418")]
		remove
		{
		}
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x19F7E10", Offset = "0x19F7E10", VA = "0x19F7E10")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x19F8094", Offset = "0x19F8094", VA = "0x19F8094")]
	public void Init()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x19ECCD8", Offset = "0x19ECCD8", VA = "0x19ECCD8")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x19F9240", Offset = "0x19F9240", VA = "0x19F9240")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x19F8B1C", Offset = "0x19F8B1C", VA = "0x19F8B1C")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x19F02F8", Offset = "0x19F02F8", VA = "0x19F02F8")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x19ED780", Offset = "0x19ED780", VA = "0x19ED780")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x19E9D38", Offset = "0x19E9D38", VA = "0x19E9D38")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x19DDF24", Offset = "0x19DDF24", VA = "0x19DDF24")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x19F95CC", Offset = "0x19F95CC", VA = "0x19F95CC")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x19FC534", Offset = "0x19FC534", VA = "0x19FC534")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x19FC21C", Offset = "0x19FC21C", VA = "0x19FC21C")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x200012B")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int SplashScreenType;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE73")]
	public Texture2D Inside_background;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool UseSplashText;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0C74")]
	public string DefaultText;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string ChineseText;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string EnglishText;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string JapaneseText;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE7B")]
	public string KoreanText;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public string FontSize;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0C84")]
	public Color FontColor;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string TextHeight;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool UseCarousel;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int SplashTextAlignment;

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x14D184C", Offset = "0x14D184C", VA = "0x14D184C")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200012C")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x20004E4")]
	public struct Lenses
	{
		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float offset;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE7B")]
		public int alignment;

		[Token(Token = "0x4002713")]
		public const int AlignTop = -1;

		[Token(Token = "0x4002714")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4002715")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x20004E5")]
	public struct MaxFOV
	{
		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lower;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE83")]
		public float inner;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float outer;
	}

	[Token(Token = "0x20004E6")]
	public struct Distortion
	{
		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0CA4")]
		public float k1;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k2;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k3;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k4;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8B")]
		public float k5;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float k6;

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xB3EFB8", Offset = "0xB3EFB8", VA = "0xB3EFB8")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xB3F0A4", Offset = "0xB3F0A4", VA = "0xB3F0A4")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xB3F108", Offset = "0xB3F108", VA = "0xB3F108")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x20004E7")]
	public struct Device
	{
		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0CB4")]
		public Lenses devLenses;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Distortion devDistortion;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE83")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Device device;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0C94")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x19C7C74", Offset = "0x19C7C74", VA = "0x19C7C74")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x19C7D9C", Offset = "0x19C7D9C", VA = "0x19C7D9C")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x19C7F00", Offset = "0x19C7F00", VA = "0x19C7F00")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x19C89D0", Offset = "0x19C89D0", VA = "0x19C89D0")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x19C9184", Offset = "0x19C9184", VA = "0x19C9184")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x19C7D6C", Offset = "0x19C7D6C", VA = "0x19C7D6C")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x200012D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B284", Offset = "0x87B284")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA3")]
	public Text fpsText;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float updateInterval;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0CD4")]
	private float accum;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int frames;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float timeLeft;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string strFps;

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x19E0D60", Offset = "0x19E0D60", VA = "0x19E0D60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x19E0E84", Offset = "0x19E0E84", VA = "0x19E0E84")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x19E10F8", Offset = "0x19E10F8", VA = "0x19E10F8")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x200012E")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEAB")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Image image;

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x300F3C8", Offset = "0x300F3C8", VA = "0x300F3C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x300F454", Offset = "0x300F454", VA = "0x300F454")]
	private void Update()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x300F634", Offset = "0x300F634", VA = "0x300F634")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x300F77C", Offset = "0x300F77C", VA = "0x300F77C")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x200012F")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x20004E8")]
	public enum Mode
	{
		[Token(Token = "0x4002725")]
		Click,
		[Token(Token = "0x4002726")]
		Gaze
	}

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0CE4")]
	public Mode mode;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88C6FC", Offset = "0x88C6FC")]
	public string ClickInputName;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88C760", Offset = "0x88C760")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C7C4", Offset = "0x88C7C4")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEB3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C800", Offset = "0x88C800")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0CF4")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x1700008B")]
	public static float gazeFraction
	{
		[Token(Token = "0x600089A")]
		[Address(RVA = "0x300F7AC", Offset = "0x300F7AC", VA = "0x300F7AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2454", Offset = "0x8A2454")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600089B")]
		[Address(RVA = "0x300F82C", Offset = "0x300F82C", VA = "0x300F82C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2490", Offset = "0x8A2490")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x600089C")]
		[Address(RVA = "0x300F8B4", Offset = "0x300F8B4", VA = "0x300F8B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A24CC", Offset = "0x8A24CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600089D")]
		[Address(RVA = "0x300F934", Offset = "0x300F934", VA = "0x300F934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2508", Offset = "0x8A2508")]
		private set
		{
		}
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x300F9BC", Offset = "0x300F9BC", VA = "0x300F9BC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x300F9FC", Offset = "0x300F9FC", VA = "0x300F9FC")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x300FDC4", Offset = "0x300FDC4", VA = "0x300FDC4")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x3010694", Offset = "0x3010694", VA = "0x3010694")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x2000130")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B334", Offset = "0x87B334")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0D04")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C83C", Offset = "0x88C83C")]
	public Transform Crosshair;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC3")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x301073C", Offset = "0x301073C", VA = "0x301073C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x30107C8", Offset = "0x30107C8", VA = "0x30107C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x30108C0", Offset = "0x30108C0", VA = "0x30108C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x3010AF8", Offset = "0x3010AF8", VA = "0x3010AF8")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x3010D2C", Offset = "0x3010D2C", VA = "0x3010D2C")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x2000131")]
public enum RenderEventType
{
	[Token(Token = "0x4000830")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000831")]
	Pause,
	[Token(Token = "0x4000832")]
	Resume,
	[Token(Token = "0x4000833")]
	LeftEyeEndFrame,
	[Token(Token = "0x4000834")]
	RightEyeEndFrame,
	[Token(Token = "0x4000835")]
	TimeWarp,
	[Token(Token = "0x4000836")]
	ResetVrModeParms,
	[Token(Token = "0x4000837")]
	ShutdownRenderThread,
	[Token(Token = "0x4000838")]
	BeginEye,
	[Token(Token = "0x4000839")]
	EndEye,
	[Token(Token = "0x400083A")]
	BoundaryRenderLeft,
	[Token(Token = "0x400083B")]
	BoundaryRenderRight,
	[Token(Token = "0x400083C")]
	BothEyeEndFrame,
	[Token(Token = "0x400083D")]
	CameraFrameLeft,
	[Token(Token = "0x400083E")]
	CameraFrameRight,
	[Token(Token = "0x400083F")]
	StartCameraFrame,
	[Token(Token = "0x4000840")]
	StopCameraFrame
}
[Token(Token = "0x2000132")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x20004E9")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000841")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4000842")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x4000843")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x4000844")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x4000845")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x4000846")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x4000847")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0D54")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x19D1254", Offset = "0x19D1254", VA = "0x19D1254")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x19F19C8", Offset = "0x19F19C8", VA = "0x19F19C8")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x19F19F0", Offset = "0x19F19F0", VA = "0x19F19F0")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x19F1AB8", Offset = "0x19F1AB8", VA = "0x19F1AB8")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x19F199C", Offset = "0x19F199C", VA = "0x19F199C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8A2544", Offset = "0x8A2544")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x19F1B44", Offset = "0x19F1B44", VA = "0x19F1B44")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000133")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88C8A0", Offset = "0x88C8A0")]
	public GameObject cursor;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int trigger;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEEB")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0D64")]
	private PointerEventData pointerData;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x19FCAC8", Offset = "0x19FCAC8", VA = "0x19FCAC8", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x19FCC2C", Offset = "0x19FCC2C", VA = "0x19FCC2C", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x19FD1E0", Offset = "0x19FD1E0", VA = "0x19FD1E0", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x19FD368", Offset = "0x19FD368", VA = "0x19FD368", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x19FD3CC", Offset = "0x19FD3CC", VA = "0x19FD3CC")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x19FD6F8", Offset = "0x19FD6F8", VA = "0x19FD6F8")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x19FDA90", Offset = "0x19FDA90", VA = "0x19FDA90")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x19FCE34", Offset = "0x19FCE34", VA = "0x19FCE34")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x19FDF54", Offset = "0x19FDF54", VA = "0x19FDF54")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x19FE634", Offset = "0x19FE634", VA = "0x19FE634")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x2000134")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<int> triangles;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEF3")]
	private List<Vector2> uv;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private List<Vector3> normals;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0D74")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<int> intArray;

	[Token(Token = "0x4000856")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4000857")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000858")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static readonly float[] pow10;

	[Token(Token = "0x1700008D")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x3016CC4", Offset = "0x3016CC4", VA = "0x3016CC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x3016ED4", Offset = "0x3016ED4", VA = "0x3016ED4")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x3017698", Offset = "0x3017698", VA = "0x3017698")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x3018620", Offset = "0x3018620", VA = "0x3018620")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x3018A34", Offset = "0x3018A34", VA = "0x3018A34")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x30194F4", Offset = "0x30194F4", VA = "0x30194F4")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x3018D7C", Offset = "0x3018D7C", VA = "0x3018D7C")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x30193C0", Offset = "0x30193C0", VA = "0x30193C0")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x3016EA4", Offset = "0x3016EA4", VA = "0x3016EA4")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x2000135")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0D84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C97C", Offset = "0x88C97C")]
	private int <x>k__BackingField;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C9B8", Offset = "0x88C9B8")]
	private int <y>k__BackingField;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88C9F4", Offset = "0x88C9F4")]
	private int <z>k__BackingField;

	[Token(Token = "0x1700008E")]
	public int x
	{
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1429514", Offset = "0x1429514", VA = "0x1429514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A25F4", Offset = "0x8A25F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1429544", Offset = "0x1429544", VA = "0x1429544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2630", Offset = "0x8A2630")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public int y
	{
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x142957C", Offset = "0x142957C", VA = "0x142957C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A266C", Offset = "0x8A266C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x14295AC", Offset = "0x14295AC", VA = "0x14295AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A26A8", Offset = "0x8A26A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public int z
	{
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x14295E4", Offset = "0x14295E4", VA = "0x14295E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A26E4", Offset = "0x8A26E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x1429614", Offset = "0x1429614", VA = "0x1429614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2720", Offset = "0x8A2720")]
		set
		{
		}
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x142964C", Offset = "0x142964C", VA = "0x142964C")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x142967C", Offset = "0x142967C", VA = "0x142967C")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000136")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x300F398", Offset = "0x300F398", VA = "0x300F398")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000137")]
public enum ConfirmBtn
{
	[Token(Token = "0x400085E")]
	App = 1,
	[Token(Token = "0x400085F")]
	TouchPad = 2,
	[Token(Token = "0x4000860")]
	Trigger = 4
}
[Token(Token = "0x2000138")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0B")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x3010DE4", Offset = "0x3010DE4", VA = "0x3010DE4", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x3010EF0", Offset = "0x3010EF0", VA = "0x3010EF0")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x30110D0", Offset = "0x30110D0", VA = "0x30110D0")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x30112AC", Offset = "0x30112AC", VA = "0x30112AC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x3011BDC", Offset = "0x3011BDC", VA = "0x3011BDC", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x3011D94", Offset = "0x3011D94", VA = "0x3011D94", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x3011FB0", Offset = "0x3011FB0", VA = "0x3011FB0", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x3012200", Offset = "0x3012200", VA = "0x3012200", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x3012808", Offset = "0x3012808", VA = "0x3012808", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x30129C8", Offset = "0x30129C8", VA = "0x30129C8", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x3012B64", Offset = "0x3012B64", VA = "0x3012B64", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x3014A3C", Offset = "0x3014A3C", VA = "0x3014A3C", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x3014B1C", Offset = "0x3014B1C", VA = "0x3014B1C", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x3014C2C", Offset = "0x3014C2C", VA = "0x3014C2C", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x3014E24", Offset = "0x3014E24", VA = "0x3014E24", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x30155E8", Offset = "0x30155E8", VA = "0x30155E8", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x3015C94", Offset = "0x3015C94", VA = "0x3015C94", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x3016B4C", Offset = "0x3016B4C", VA = "0x3016B4C")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x2000139")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x20004EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EF9C", Offset = "0x87EF9C")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0DB4")]
		private object <>2__current;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Canvas canvas;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 canvasSize;

		[Token(Token = "0x17000336")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002297")]
			[Address(RVA = "0x3020734", Offset = "0x3020734", VA = "0x3020734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002299")]
			[Address(RVA = "0x3020804", Offset = "0x3020804", VA = "0x3020804", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x301F818", Offset = "0x301F818", VA = "0x301F818")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x302005C", Offset = "0x302005C", VA = "0x302005C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x3020070", Offset = "0x3020070", VA = "0x3020070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x3020764", Offset = "0x3020764", VA = "0x3020764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0DA4")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x400086A")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x301EDF4", Offset = "0x301EDF4", VA = "0x301EDF4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x301EE24", Offset = "0x301EE24", VA = "0x301EE24", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x301EE54", Offset = "0x301EE54", VA = "0x301EE54", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x301EE84", Offset = "0x301EE84", VA = "0x301EE84", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x301F688", Offset = "0x301F688", VA = "0x301F688", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A275C", Offset = "0x8A275C")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x301F860", Offset = "0x301F860", VA = "0x301F860", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x302002C", Offset = "0x302002C", VA = "0x302002C")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x200013A")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x200013B")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x200013C")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1B")]
	public bool restrictToDropZone;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0DC4")]
	public float moveOffset;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF23")]
	protected RectTransform dragTransform;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected Vector3 startPosition;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0DD4")]
	protected Quaternion startRotation;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected GameObject startDropZone;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Transform startParent;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Canvas startCanvas;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2B")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x1400002A")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x3020834", Offset = "0x3020834", VA = "0x3020834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A280C", Offset = "0x8A280C")]
		add
		{
		}
		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x3020980", Offset = "0x3020980", VA = "0x3020980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2848", Offset = "0x8A2848")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x3020ACC", Offset = "0x3020ACC", VA = "0x3020ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2884", Offset = "0x8A2884")]
		add
		{
		}
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x3020C18", Offset = "0x3020C18", VA = "0x3020C18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A28C0", Offset = "0x8A28C0")]
		remove
		{
		}
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x3020D64", Offset = "0x3020D64", VA = "0x3020D64", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x3020E44", Offset = "0x3020E44", VA = "0x3020E44", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x3020F24", Offset = "0x3020F24", VA = "0x3020F24", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x30212DC", Offset = "0x30212DC", VA = "0x30212DC", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x302131C", Offset = "0x302131C", VA = "0x302131C", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x3021BE8", Offset = "0x3021BE8", VA = "0x3021BE8", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x3021E04", Offset = "0x3021E04", VA = "0x3021E04", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x30222D4", Offset = "0x30222D4", VA = "0x30222D4", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x3022858", Offset = "0x3022858", VA = "0x3022858", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x30229A8", Offset = "0x30229A8", VA = "0x30229A8", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x3022A24", Offset = "0x3022A24", VA = "0x3022A24")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x200013D")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0DE4")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x3022A6C", Offset = "0x3022A6C", VA = "0x3022A6C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x3022CF4", Offset = "0x3022CF4", VA = "0x3022CF4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x3022E40", Offset = "0x3022E40", VA = "0x3022E40")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x200013E")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x20004EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87EFD8", Offset = "0x87EFD8")]
	private sealed class <>c
	{
		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public static readonly <>c <>9;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0DF4")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x3024C38", Offset = "0x3024C38", VA = "0x3024C38")]
		public <>c()
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x3024C68", Offset = "0x3024C68", VA = "0x3024C68")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Canvas currentCanvas;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x400087D")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF33")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x17000091")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x6000900")]
		[Address(RVA = "0x3024870", Offset = "0x3024870", VA = "0x3024870", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x3022E70", Offset = "0x3022E70", VA = "0x3022E70", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x3023174", Offset = "0x3023174", VA = "0x3023174", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x302374C", Offset = "0x302374C", VA = "0x302374C", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x3023D48", Offset = "0x3023D48", VA = "0x3023D48", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x30249FC", Offset = "0x30249FC", VA = "0x30249FC")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x200013F")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject currentTarget;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject previousTarget;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2B")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x2000140")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x2000141")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x20004EC")]
	public enum ClickMethods
	{
		[Token(Token = "0x400272E")]
		ClickOnButtonUp,
		[Token(Token = "0x400272F")]
		ClickOnButtonDown
	}

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ClickMethods clickMethod;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0E04")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF43")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0E14")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected bool pointerClicked;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected bool beamEnabledState;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4B")]
	protected bool lastPointerPressState;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected bool lastPointerClickState;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0E24")]
	protected GameObject currentTarget;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5B")]
	public static bool AppBtnValue;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400002C")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000907")]
		[Address(RVA = "0x3024CE4", Offset = "0x3024CE4", VA = "0x3024CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A28FC", Offset = "0x8A28FC")]
		add
		{
		}
		[Token(Token = "0x6000908")]
		[Address(RVA = "0x3024E30", Offset = "0x3024E30", VA = "0x3024E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2938", Offset = "0x8A2938")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x3024F7C", Offset = "0x3024F7C", VA = "0x3024F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2974", Offset = "0x8A2974")]
		add
		{
		}
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x30250C8", Offset = "0x30250C8", VA = "0x30250C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A29B0", Offset = "0x8A29B0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x3025214", Offset = "0x3025214", VA = "0x3025214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A29EC", Offset = "0x8A29EC")]
		add
		{
		}
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x3025360", Offset = "0x3025360", VA = "0x3025360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2A28", Offset = "0x8A2A28")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x30254AC", Offset = "0x30254AC", VA = "0x30254AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2A64", Offset = "0x8A2A64")]
		add
		{
		}
		[Token(Token = "0x600090E")]
		[Address(RVA = "0x30255F8", Offset = "0x30255F8", VA = "0x30255F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2AA0", Offset = "0x8A2AA0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x600090F")]
		[Address(RVA = "0x3025744", Offset = "0x3025744", VA = "0x3025744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2ADC", Offset = "0x8A2ADC")]
		add
		{
		}
		[Token(Token = "0x6000910")]
		[Address(RVA = "0x3025890", Offset = "0x3025890", VA = "0x3025890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2B18", Offset = "0x8A2B18")]
		remove
		{
		}
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x30259DC", Offset = "0x30259DC", VA = "0x30259DC", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x3025A00", Offset = "0x3025A00", VA = "0x3025A00", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x3025CA4", Offset = "0x3025CA4", VA = "0x3025CA4", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x3025DE8", Offset = "0x3025DE8", VA = "0x3025DE8", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x3025F2C", Offset = "0x3025F2C", VA = "0x3025F2C", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x3026068", Offset = "0x3026068", VA = "0x3026068", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x30260AC", Offset = "0x30260AC", VA = "0x30260AC", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x30262CC", Offset = "0x30262CC", VA = "0x30262CC", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x30264BC", Offset = "0x30264BC", VA = "0x30264BC", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x30266AC", Offset = "0x30266AC", VA = "0x30266AC", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x3026784", Offset = "0x3026784", VA = "0x3026784", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x302685C", Offset = "0x302685C", VA = "0x302685C", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x3026964", Offset = "0x3026964", VA = "0x3026964", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x302699C", Offset = "0x302699C", VA = "0x302699C", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x3026A30", Offset = "0x3026A30", VA = "0x3026A30", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x3026B18", Offset = "0x3026B18", VA = "0x3026B18", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x3026FB8", Offset = "0x3026FB8", VA = "0x3026FB8")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x2000142")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool vrModeEnabled;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF63")]
	private float mouseX;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float mouseY;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0E54")]
	private float mouseZ;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float neckModelScale;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool autoUntiltHead;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6B")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0E64")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x40008A8")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF73")]
	private float touchStartTime;

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x19C99C0", Offset = "0x19C99C0", VA = "0x19C99C0")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x19C9A18", Offset = "0x19C9A18", VA = "0x19C9A18")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x19C9A70", Offset = "0x19C9A70", VA = "0x19C9A70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x19C9FA4", Offset = "0x19C9FA4", VA = "0x19C9FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x19C9AB0", Offset = "0x19C9AB0", VA = "0x19C9AB0")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x19C9E4C", Offset = "0x19C9E4C", VA = "0x19C9E4C")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x19CBA38", Offset = "0x19CBA38", VA = "0x19CBA38")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x19CBE10", Offset = "0x19CBE10", VA = "0x19CBE10")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x19CA660", Offset = "0x19CA660", VA = "0x19CA660")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x19CC7F4", Offset = "0x19CC7F4", VA = "0x19CC7F4")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x19CA108", Offset = "0x19CA108", VA = "0x19CA108")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x19CB85C", Offset = "0x19CB85C", VA = "0x19CB85C")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x19CCA68", Offset = "0x19CCA68", VA = "0x19CCA68")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x19CBE58", Offset = "0x19CBE58", VA = "0x19CBE58")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x19CB0B8", Offset = "0x19CB0B8", VA = "0x19CB0B8")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x19CC884", Offset = "0x19CC884", VA = "0x19CC884")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x19CCE48", Offset = "0x19CCE48", VA = "0x19CCE48")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x2000143")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool VolEnable;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0E74")]
	private bool BattEnable;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text showResult;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text setVolumnum;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text setBrightnum;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF7B")]
	public string MusicPath;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x11E9694", Offset = "0x11E9694", VA = "0x11E9694")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x11E9878", Offset = "0x11E9878", VA = "0x11E9878")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x11E9988", Offset = "0x11E9988", VA = "0x11E9988")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x11E9A78", Offset = "0x11E9A78", VA = "0x11E9A78")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x11E9B68", Offset = "0x11E9B68", VA = "0x11E9B68")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x11E9C84", Offset = "0x11E9C84", VA = "0x11E9C84")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x11E9DA0", Offset = "0x11E9DA0", VA = "0x11E9DA0")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x11E9FA0", Offset = "0x11E9FA0", VA = "0x11E9FA0")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x11EA1A0", Offset = "0x11EA1A0", VA = "0x11EA1A0")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x11EA290", Offset = "0x11EA290", VA = "0x11EA290")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x11EA3C0", Offset = "0x11EA3C0", VA = "0x11EA3C0")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x11E9738", Offset = "0x11E9738", VA = "0x11E9738")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x11E9780", Offset = "0x11E9780", VA = "0x11E9780")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x11E9940", Offset = "0x11E9940", VA = "0x11E9940")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x11E97FC", Offset = "0x11E97FC", VA = "0x11E97FC")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x11E98F8", Offset = "0x11E98F8", VA = "0x11E98F8")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x11EA4F0", Offset = "0x11EA4F0", VA = "0x11EA4F0")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x2000144")]
public class GE_ToggleFullScreenUI : MonoBehaviour
{
	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int m_DefWidth;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0E84")]
	private int m_DefHeight;

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x12F6450", Offset = "0x12F6450", VA = "0x12F6450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x12F65F4", Offset = "0x12F65F4", VA = "0x12F65F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x12F6608", Offset = "0x12F6608", VA = "0x12F6608")]
	public void OnButton_ToggleFullScreen()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x12F6BD4", Offset = "0x12F6BD4", VA = "0x12F6BD4")]
	public GE_ToggleFullScreenUI()
	{
	}
}
[Token(Token = "0x2000145")]
public class GE_UIResponder : MonoBehaviour
{
	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string m_PackageTitle;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string m_TargetURL;

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x12F6C04", Offset = "0x12F6C04", VA = "0x12F6C04")]
	private void Start()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x12F6DB0", Offset = "0x12F6DB0", VA = "0x12F6DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x12F6DC4", Offset = "0x12F6DC4", VA = "0x12F6DC4")]
	public void OnButton_AssetName()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x12F6E04", Offset = "0x12F6E04", VA = "0x12F6E04")]
	public GE_UIResponder()
	{
	}
}
[Token(Token = "0x2000146")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B420", Offset = "0x87B420")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float effectDuration;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF83")]
	private float d;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x14CDBC8", Offset = "0x14CDBC8", VA = "0x14CDBC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x14CDC00", Offset = "0x14CDC00", VA = "0x14CDC00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x14CDE68", Offset = "0x14CDE68", VA = "0x14CDE68")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x2000147")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F014", Offset = "0x87F014")]
	private sealed class <>c
	{
		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9B")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x14CFB90", Offset = "0x14CFB90", VA = "0x14CFB90")]
		public <>c()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x14CFBC0", Offset = "0x14CFBC0", VA = "0x14CFBC0")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20004EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F050", Offset = "0x87F050")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0EC4")]
		private object <>2__current;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x17000338")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A3")]
			[Address(RVA = "0x14D0000", Offset = "0x14D0000", VA = "0x14D0000", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x14D00D0", Offset = "0x14D00D0", VA = "0x14D00D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x14CF9F0", Offset = "0x14CF9F0", VA = "0x14CF9F0")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x14CFC50", Offset = "0x14CFC50", VA = "0x14CFC50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x14CFC64", Offset = "0x14CFC64", VA = "0x14CFC64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x14D0030", Offset = "0x14D0030", VA = "0x14D0030", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Renderer groundRenderer;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0E94")]
	public Collider groundCollider;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x88CF1C", Offset = "0x88CF1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x88CF1C", Offset = "0x88CF1C")]
	public Image slowMoBtn;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text slowMoLabel;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Image camRotBtn;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8B")]
	public Text camRotLabel;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Image groundBtn;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0EA4")]
	public Text groundLabel;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x88CF78", Offset = "0x88CF78")]
	public Text EffectLabel;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Text EffectIndexLabel;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF93")]
	private int exampleIndex;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool slowMo;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0EB4")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x14CDEAC", Offset = "0x14CDEAC", VA = "0x14CDEAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x14CE500", Offset = "0x14CE500", VA = "0x14CE500")]
	private void Update()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x14CF3B0", Offset = "0x14CF3B0", VA = "0x14CF3B0")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x14CF56C", Offset = "0x14CF56C", VA = "0x14CF56C")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x14CF77C", Offset = "0x14CF77C", VA = "0x14CF77C")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x14CF8D4", Offset = "0x14CF8D4", VA = "0x14CF8D4")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x14CF904", Offset = "0x14CF904", VA = "0x14CF904")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x14CE338", Offset = "0x14CE338", VA = "0x14CE338")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x14CF030", Offset = "0x14CF030", VA = "0x14CF030")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x14CF934", Offset = "0x14CF934", VA = "0x14CF934")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A2B54", Offset = "0x8A2B54")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x14CEBB0", Offset = "0x14CEBB0", VA = "0x14CEBB0")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x14CECA4", Offset = "0x14CECA4", VA = "0x14CECA4")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x14CED68", Offset = "0x14CED68", VA = "0x14CED68")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x14CFA38", Offset = "0x14CFA38", VA = "0x14CFA38")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x2000148")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 min;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 max;

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x14D0100", Offset = "0x14D0100", VA = "0x14D0100")]
	private void Start()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x14D0258", Offset = "0x14D0258", VA = "0x14D0258")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000149")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA3")]
	public float speed;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 baseDir;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0ED4")]
	public Vector3 axis;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool gravity;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 dir;

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x14D0330", Offset = "0x14D0330", VA = "0x14D0330")]
	private void Start()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x14D0598", Offset = "0x14D0598", VA = "0x14D0598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x14D0820", Offset = "0x14D0820", VA = "0x14D0820")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x200014A")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFAB")]
	public float speed;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform rotationCenter;

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x14D0948", Offset = "0x14D0948", VA = "0x14D0948")]
	private void Update()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x14D0B40", Offset = "0x14D0B40", VA = "0x14D0B40")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x200014B")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0EE4")]
	public float speed;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 rotation;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 axis;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool gravity;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB3")]
	private Vector3 dir;

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x14D0C0C", Offset = "0x14D0C0C", VA = "0x14D0C0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x14D0D6C", Offset = "0x14D0D6C", VA = "0x14D0D6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x14D0EE8", Offset = "0x14D0EE8", VA = "0x14D0EE8")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x200014C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B4D0", Offset = "0x87B4D0")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x20004EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F08C", Offset = "0x87F08C")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B0EF4")]
		private int <>1__state;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x1700033A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0x14CD938", Offset = "0x14CD938", VA = "0x14CD938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022AB")]
			[Address(RVA = "0x14CDA08", Offset = "0x14CDA08", VA = "0x14CDA08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x14CD484", Offset = "0x14CD484", VA = "0x14CD484")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x14CD4FC", Offset = "0x14CD4FC", VA = "0x14CD4FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x14CD510", Offset = "0x14CD510", VA = "0x14CD510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x14CD968", Offset = "0x14CD968", VA = "0x14CD968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool OnlyDeactivate;

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x14CD340", Offset = "0x14CD340", VA = "0x14CD340")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x14CD3C8", Offset = "0x14CD3C8", VA = "0x14CD3C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A2C04", Offset = "0x8A2C04")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x14CD4CC", Offset = "0x14CD4CC", VA = "0x14CD4CC")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x200014D")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFBB")]
	public Vector3 rotation;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Space space;

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x14CDA38", Offset = "0x14CDA38", VA = "0x14CDA38")]
	private void Update()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x14CDB84", Offset = "0x14CDB84", VA = "0x14CDB84")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x200014E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B580", Offset = "0x87B580")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0F04")]
	public bool loop;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float smoothFactor;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float addIntensity;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float minIntensity;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC3")]
	private float maxIntensity;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float baseIntensity;

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x14D1010", Offset = "0x14D1010", VA = "0x14D1010")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x14D10BC", Offset = "0x14D10BC", VA = "0x14D10BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x14D1128", Offset = "0x14D1128", VA = "0x14D1128")]
	private void Update()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x14D12AC", Offset = "0x14D12AC", VA = "0x14D12AC")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x200014F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B630", Offset = "0x87B630")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0F14")]
	public float duration;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float delay;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float finalIntensity;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float baseIntensity;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFCB")]
	public bool autodestruct;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float p_lifetime;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0F24")]
	private float p_delay;

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x14D1300", Offset = "0x14D1300", VA = "0x14D1300")]
	private void Start()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x14D13AC", Offset = "0x14D13AC", VA = "0x14D13AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x14D14A8", Offset = "0x14D14A8", VA = "0x14D14A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x14D1808", Offset = "0x14D1808", VA = "0x14D1808")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000150")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B6E0", Offset = "0x87B6E0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87B6E0", Offset = "0x87B6E0")]
public class FilterBehavior : MonoBehaviour
{
	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Shader shader;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material _Material;

	[Token(Token = "0x17000092")]
	protected Material material
	{
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x12F5BA4", Offset = "0x12F5BA4", VA = "0x12F5BA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x12F5A0C", Offset = "0x12F5A0C", VA = "0x12F5A0C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x12F5D3C", Offset = "0x12F5D3C", VA = "0x12F5D3C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x12F5EC8", Offset = "0x12F5EC8", VA = "0x12F5EC8")]
	public FilterBehavior()
	{
	}
}
[Token(Token = "0x2000151")]
[ExecuteInEditMode]
public class OLDTVScreen : FilterBehavior
{
	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float screenSaturation;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD3")]
	public Texture chromaticAberrationPattern;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float chromaticAberrationMagnetude;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0F34")]
	public Texture noisePattern;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float noiseMagnetude;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture staticPattern;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture staticMask;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFDB")]
	public float staticVertical;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float staticMagnetude;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1F32DB8", Offset = "0x1F32DB8", VA = "0x1F32DB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1F32F9C", Offset = "0x1F32F9C", VA = "0x1F32F9C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1F33400", Offset = "0x1F33400", VA = "0x1F33400")]
	public OLDTVScreen()
	{
	}
}
[Token(Token = "0x2000152")]
[ExecuteInEditMode]
public class OLDTVTube : FilterBehavior
{
	[Token(Token = "0x20004F0")]
	public delegate void RepaintAction();

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0F44")]
	public Texture scanlinePattern;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool scanlineCountAuto;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int scanlineCount;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float scanlineBrightMin;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFE3")]
	public float scanlineBrightMax;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Texture mask;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0F54")]
	public Texture reflex;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float reflexMagnetude;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float radialDistortion;

	[Token(Token = "0x14000031")]
	public event RepaintAction WantRepaint
	{
		[Token(Token = "0x600097E")]
		[Address(RVA = "0x1F33474", Offset = "0x1F33474", VA = "0x1F33474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2CB4", Offset = "0x8A2CB4")]
		add
		{
		}
		[Token(Token = "0x600097F")]
		[Address(RVA = "0x1F335C0", Offset = "0x1F335C0", VA = "0x1F335C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A2CF0", Offset = "0x8A2CF0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1F3370C", Offset = "0x1F3370C", VA = "0x1F3370C")]
	private void Repaint()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1F33780", Offset = "0x1F33780", VA = "0x1F33780")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1F33B2C", Offset = "0x1F33B2C", VA = "0x1F33B2C")]
	public OLDTVTube()
	{
	}
}
[Token(Token = "0x2000153")]
public class CameraReflex : MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFEB")]
	private OLDTVTube _oldtvtube;

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x14D5788", Offset = "0x14D5788", VA = "0x14D5788")]
	private void Start()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x14D579C", Offset = "0x14D579C", VA = "0x14D579C")]
	public CameraReflex()
	{
	}
}
[Token(Token = "0x2000154")]
[ExecuteInEditMode]
public class OLDTVFilter3 : MonoBehaviour
{
	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private OLDTVPreset _preset;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0F64")]
	[SerializeField]
	private Camera _camera;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool customAspectRatio;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Vector2 _aspectRatio;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool timeScale;

	[Token(Token = "0x17000093")]
	public OLDTVPreset preset
	{
		[Token(Token = "0x6000985")]
		[Address(RVA = "0x1F30964", Offset = "0x1F30964", VA = "0x1F30964")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000986")]
		[Address(RVA = "0x1F30994", Offset = "0x1F30994", VA = "0x1F30994")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public Vector2 aspectRatio
	{
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x1F30A9C", Offset = "0x1F30A9C", VA = "0x1F30A9C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000987")]
		[Address(RVA = "0x1F309CC", Offset = "0x1F309CC", VA = "0x1F309CC")]
		set
		{
		}
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1F30AD4", Offset = "0x1F30AD4", VA = "0x1F30AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x1F30B50", Offset = "0x1F30B50", VA = "0x1F30B50")]
	private void Update()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1F30B04", Offset = "0x1F30B04", VA = "0x1F30B04")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1F30E50", Offset = "0x1F30E50", VA = "0x1F30E50")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1F314A8", Offset = "0x1F314A8", VA = "0x1F314A8")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1F32CD8", Offset = "0x1F32CD8", VA = "0x1F32CD8")]
	public OLDTVFilter3()
	{
	}
}
[Token(Token = "0x2000155")]
public class CameraReflexNew : MonoBehaviour
{
	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFF3")]
	private OLDTVFilter3 _oldtvfilter;

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x14D57CC", Offset = "0x14D57CC", VA = "0x14D57CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x14D57E0", Offset = "0x14D57E0", VA = "0x14D57E0")]
	public CameraReflexNew()
	{
	}
}
[Token(Token = "0x2000156")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 rotation;

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x11F8CA8", Offset = "0x11F8CA8", VA = "0x11F8CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x11F8CBC", Offset = "0x11F8CBC", VA = "0x11F8CBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x11F8DF8", Offset = "0x11F8DF8", VA = "0x11F8DF8")]
	public Rotate()
	{
	}
}
[Token(Token = "0x2000157")]
public class AnimacionPuntos : MonoBehaviour
{
	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F0C8", Offset = "0x87F0C8")]
	private sealed class <CorutinaAnimacion>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFFB")]
		public AnimacionPuntos <>4__this;

		[Token(Token = "0x1700033C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x1508558", Offset = "0x1508558", VA = "0x1508558", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x1508628", Offset = "0x1508628", VA = "0x1508628", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x1508070", Offset = "0x1508070", VA = "0x1508070")]
		[DebuggerHidden]
		public <CorutinaAnimacion>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x15080E8", Offset = "0x15080E8", VA = "0x15080E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x15080FC", Offset = "0x15080FC", VA = "0x15080FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x1508588", Offset = "0x1508588", VA = "0x1508588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0F74")]
	private TextMeshProUGUI texto;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine animacion;

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1507E1C", Offset = "0x1507E1C", VA = "0x1507E1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x1507EA8", Offset = "0x1507EA8", VA = "0x1507EA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1507FB4", Offset = "0x1507FB4", VA = "0x1507FB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A2D2C", Offset = "0x8A2D2C")]
	private IEnumerator CorutinaAnimacion()
	{
		return null;
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x15080B8", Offset = "0x15080B8", VA = "0x15080B8")]
	public AnimacionPuntos()
	{
	}
}
[Token(Token = "0x2000158")]
public class AnimDoorsDown : MonoBehaviour
{
	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Animator anim;

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1506830", Offset = "0x1506830", VA = "0x1506830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x15068BC", Offset = "0x15068BC", VA = "0x15068BC")]
	public void OpenDoors()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x1506968", Offset = "0x1506968", VA = "0x1506968")]
	public AnimDoorsDown()
	{
	}
}
[Token(Token = "0x2000159")]
public class AnimDoorsUp : MonoBehaviour
{
	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0F84")]
	private Animator anim;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private InputsController iCtr;

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x1506998", Offset = "0x1506998", VA = "0x1506998")]
	private void Start()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x1506AC0", Offset = "0x1506AC0", VA = "0x1506AC0")]
	public void OpenDoors()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x1506B98", Offset = "0x1506B98", VA = "0x1506B98")]
	public AnimDoorsUp()
	{
	}
}
[Token(Token = "0x200015A")]
public class AnimManos : MonoBehaviour
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator anim;

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x1506BC8", Offset = "0x1506BC8", VA = "0x1506BC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1506BDC", Offset = "0x1506BDC", VA = "0x1506BDC")]
	private Animator GetAnim()
	{
		return null;
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1506D28", Offset = "0x1506D28", VA = "0x1506D28")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1506D3C", Offset = "0x1506D3C", VA = "0x1506D3C")]
	public void CatchWeapon()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1506E74", Offset = "0x1506E74", VA = "0x1506E74")]
	public void ReleaseActualWeapon()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1506F64", Offset = "0x1506F64", VA = "0x1506F64")]
	public void FireBullet()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x1507004", Offset = "0x1507004", VA = "0x1507004")]
	public void HoldHook()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x15070FC", Offset = "0x15070FC", VA = "0x15070FC")]
	public void AttractWeapon()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x15071E4", Offset = "0x15071E4", VA = "0x15071E4")]
	public void EmptyHandTryCatchWeapon()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x1507294", Offset = "0x1507294", VA = "0x1507294")]
	public void EmptyHandStopTryCatchWeapon()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x1507344", Offset = "0x1507344", VA = "0x1507344")]
	public void MenuSeñalar()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x15073F4", Offset = "0x15073F4", VA = "0x15073F4")]
	public void MenuNormal()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x15074A4", Offset = "0x15074A4", VA = "0x15074A4")]
	public AnimManos()
	{
	}
}
[Token(Token = "0x200015B")]
public class AnimTransformPistola : MonoBehaviour
{
	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator animWeapon;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1003")]
	[HideInInspector]
	public int idPlayer;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public SyncJugadores syncjugador;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0F94")]
	private Weapon _weapon;

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x15074D4", Offset = "0x15074D4", VA = "0x15074D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1507560", Offset = "0x1507560", VA = "0x1507560")]
	public void TransformHookToPistol(Weapon weapon, bool noApagarMeshDisplay = false)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x1507770", Offset = "0x1507770", VA = "0x1507770")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1507994", Offset = "0x1507994", VA = "0x1507994")]
	public void TransformPistolToHook()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x1507A40", Offset = "0x1507A40", VA = "0x1507A40")]
	public void ActivarPistolaMesh()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x1507B94", Offset = "0x1507B94", VA = "0x1507B94")]
	public AnimTransformPistola()
	{
	}
}
[Token(Token = "0x200015C")]
public class ApagarParticulasYDevolverAlPadre : MonoBehaviour
{
	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempo;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tiempoDesaparicion;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject padre;

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x1508780", Offset = "0x1508780", VA = "0x1508780")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x15087AC", Offset = "0x15087AC", VA = "0x15087AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x1508D24", Offset = "0x1508D24", VA = "0x1508D24")]
	public ApagarParticulasYDevolverAlPadre()
	{
	}
}
[Token(Token = "0x200015D")]
public class Ascensor : MonoBehaviour
{
	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100B")]
	public GameObject puerta;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject meshAscensor;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0FA4")]
	public GameObject player;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject fondo;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float vel;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float velPuerta;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1013")]
	public Transform puntoSuperior;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform puntoInferior;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0FB4")]
	public Transform posPuertaAbierta;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform posPuertaCerrada;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Boton boton;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool playerDentro;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101B")]
	public bool abajo;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool subir;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0FC4")]
	public bool bajar;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool abrirPuerta;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool cerrarPuerta;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool parado;

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1509C48", Offset = "0x1509C48", VA = "0x1509C48")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1509D1C", Offset = "0x1509D1C", VA = "0x1509D1C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1509DF0", Offset = "0x1509DF0", VA = "0x1509DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1509EC0", Offset = "0x1509EC0", VA = "0x1509EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x150ABFC", Offset = "0x150ABFC", VA = "0x150ABFC")]
	public void MoverAscensor()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x150ABB4", Offset = "0x150ABB4", VA = "0x150ABB4")]
	public void AbrirPuerta()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x150ACF8", Offset = "0x150ACF8", VA = "0x150ACF8")]
	public void CerrarPuerta()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x150AD40", Offset = "0x150AD40", VA = "0x150AD40")]
	public Ascensor()
	{
	}
}
[Token(Token = "0x200015E")]
public abstract class BossBase : MonoBehaviour
{
	[Token(Token = "0x20004F2")]
	public enum FasesBoss
	{
		[Token(Token = "0x400273D")]
		Apareciendo,
		[Token(Token = "0x400273E")]
		Movimiento,
		[Token(Token = "0x400273F")]
		Invulnerable,
		[Token(Token = "0x4002740")]
		Vulnerable,
		[Token(Token = "0x4002741")]
		Invocando,
		[Token(Token = "0x4002742")]
		Muerte
	}

	[Token(Token = "0x20004F3")]
	public enum ClipsAudioBoss
	{
		[Token(Token = "0x4002744")]
		Risa,
		[Token(Token = "0x4002745")]
		Enfado,
		[Token(Token = "0x4002746")]
		Flotar,
		[Token(Token = "0x4002747")]
		Invocar,
		[Token(Token = "0x4002748")]
		GolpeEscudoCorrecto,
		[Token(Token = "0x4002749")]
		GolpeEscudoIncorrecto,
		[Token(Token = "0x400274A")]
		EscudoRoto,
		[Token(Token = "0x400274B")]
		muerte,
		[Token(Token = "0x400274C")]
		victoria,
		[Token(Token = "0x400274D")]
		extra1,
		[Token(Token = "0x400274E")]
		extra2,
		[Token(Token = "0x400274F")]
		extra3,
		[Token(Token = "0x4002750")]
		frase,
		[Token(Token = "0x4002751")]
		Cont
	}

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1023")]
	public FasesBoss faseActual;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Bola.TipoEscudo tipoEscudo;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0FD4")]
	public bool escudoDestruido;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int numeroBalasEscudo;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool ganchoEnganchado;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture texturaEscudoNegro;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102B")]
	protected int golpesTotalesBoss;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Animator animatorParaPararElBossInicio;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0FE4")]
	protected bool nivelIniciado;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected int tickSinHacerCosasEsteticas;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected int contadorLevitacion;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected bool animacionInicioAcabada;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1033")]
	[HideInInspector]
	public bool muerto;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public int tipoEscudoParaOnline;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B0FF4")]
	[HideInInspector]
	public PhotonView photonView;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int onlineAuxiliar;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material activado;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material desactivado;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103B")]
	protected AudioClip[] audioClipsBoss;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected AudioSource[] audioSources;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1004")]
	private int audioSourceAnterior;

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x151B48C", Offset = "0x151B48C", VA = "0x151B48C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x151B6B0", Offset = "0x151B6B0", VA = "0x151B6B0", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60009BE")]
	protected abstract void BuscarReferencias();

	[Token(Token = "0x60009BF")]
	public abstract void Morir();

	[Token(Token = "0x60009C0")]
	public abstract void GolpearBoss(int arma);

	[Token(Token = "0x60009C1")]
	public abstract void InvocarEsferas(int numEsferas, int nivelEsferas);

	[Token(Token = "0x60009C2")]
	protected abstract IEnumerator AnimacionMorir();

	[Token(Token = "0x60009C3")]
	protected abstract void CargarClipsAudio();

	[Token(Token = "0x60009C4")]
	public abstract void PonerEscudoNegro();

	[Token(Token = "0x60009C5")]
	public abstract void PonerEscudo();

	[Token(Token = "0x60009C6")]
	public abstract void QuitarEscudo();

	[Token(Token = "0x60009C7")]
	public abstract int TieneEscudo();

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x151B9A8", Offset = "0x151B9A8", VA = "0x151B9A8")]
	public void SetGanchoEnganchado(bool enganchado)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x151BAC4", Offset = "0x151BAC4", VA = "0x151BAC4")]
	public void PonerAudioEnAudioSource(ClipsAudioBoss clipAudio)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x151BF28", Offset = "0x151BF28", VA = "0x151BF28")]
	public Color GetBaseColorShield()
	{
		return default(Color);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x151C19C", Offset = "0x151C19C", VA = "0x151C19C")]
	public Color GetFresnelColorShield()
	{
		return default(Color);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x151C414", Offset = "0x151C414", VA = "0x151C414")]
	public void PararAnimacion()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x151C4E8", Offset = "0x151C4E8", VA = "0x151C4E8")]
	public void ActivarAnimacion()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x151C580", Offset = "0x151C580", VA = "0x151C580")]
	protected BossBase()
	{
	}
}
[Token(Token = "0x200015F")]
public class BossDragon : BossBase
{
	[Token(Token = "0x20004F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F104", Offset = "0x87F104")]
	private sealed class <TiempoPoderGolpear>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossDragon <>4__this;

		[Token(Token = "0x1700033E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0x1526D10", Offset = "0x1526D10", VA = "0x1526D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0x1526DE0", Offset = "0x1526DE0", VA = "0x1526DE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x1522658", Offset = "0x1522658", VA = "0x1522658")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x1526AB8", Offset = "0x1526AB8", VA = "0x1526AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x1526ACC", Offset = "0x1526ACC", VA = "0x1526ACC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x1526D40", Offset = "0x1526D40", VA = "0x1526D40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F140", Offset = "0x87F140")]
	private sealed class <ReiniciarNumeroDisparosEscudo>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108B")]
		private int <>1__state;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B10A4")]
		public BossDragon <>4__this;

		[Token(Token = "0x17000340")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022BF")]
			[Address(RVA = "0x15269B8", Offset = "0x15269B8", VA = "0x15269B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000341")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x1526A88", Offset = "0x1526A88", VA = "0x1526A88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x1522B6C", Offset = "0x1522B6C", VA = "0x1522B6C")]
		[DebuggerHidden]
		public <ReiniciarNumeroDisparosEscudo>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x152667C", Offset = "0x152667C", VA = "0x152667C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x1526690", Offset = "0x1526690", VA = "0x1526690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x15269E8", Offset = "0x15269E8", VA = "0x15269E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F17C", Offset = "0x87F17C")]
	private sealed class <PonerEscudoVertexOffseetInicio>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossDragon <>4__this;

		[Token(Token = "0x17000342")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x152657C", Offset = "0x152657C", VA = "0x152657C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x152664C", Offset = "0x152664C", VA = "0x152664C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x1522C70", Offset = "0x1522C70", VA = "0x1522C70")]
		[DebuggerHidden]
		public <PonerEscudoVertexOffseetInicio>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x1526350", Offset = "0x1526350", VA = "0x1526350", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x1526364", Offset = "0x1526364", VA = "0x1526364", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x15265AC", Offset = "0x15265AC", VA = "0x15265AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F1B8", Offset = "0x87F1B8")]
	private sealed class <CorrutinaDestruirEscudo>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1093")]
		private int <>1__state;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B10B4")]
		public BossDragon <>4__this;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <i>5__2;

		[Token(Token = "0x17000344")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022CB")]
			[Address(RVA = "0x1526250", Offset = "0x1526250", VA = "0x1526250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x1526320", Offset = "0x1526320", VA = "0x1526320", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x1522D74", Offset = "0x1522D74", VA = "0x1522D74")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x1525B04", Offset = "0x1525B04", VA = "0x1525B04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x1525B18", Offset = "0x1525B18", VA = "0x1525B18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x1526280", Offset = "0x1526280", VA = "0x1526280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F1F4", Offset = "0x87F1F4")]
	private sealed class <AnimacionMorir>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109B")]
		public BossDragon <>4__this;

		[Token(Token = "0x17000346")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022D1")]
			[Address(RVA = "0x1525A04", Offset = "0x1525A04", VA = "0x1525A04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0x1525AD4", Offset = "0x1525AD4", VA = "0x1525AD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x1523788", Offset = "0x1523788", VA = "0x1523788")]
		[DebuggerHidden]
		public <AnimacionMorir>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x1524E14", Offset = "0x1524E14", VA = "0x1524E14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x1524E28", Offset = "0x1524E28", VA = "0x1524E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x1525A34", Offset = "0x1525A34", VA = "0x1525A34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 velocidadSinTrucar;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1044")]
	public Vector3 dir;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool escudoActivo;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int vecesEscudoDestruido;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int golpesPorFase;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1063")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform bossMesh;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1054")]
	[HideInInspector]
	public Texture[] iconosEscudos;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rigidbody rb;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SphereCollider[] colider;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer mesh;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x106B")]
	public Transform puntoSpawn;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Animator anim;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1064")]
	public GameObject bossGolpeado;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RotacionEnCadena efectoDragon;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1073")]
	private bool enAnimacion;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1074")]
	public bool dragonBase;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<EsferaScript> esferasFase1;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<EsferaScript> esferasFase2;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<EsferaScript> esferasFase3;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x107B")]
	private bool yaEstanMuertos;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int animMovimiento;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1084")]
	public bool risa;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine reiniciarNumeroDisparos;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool poderGolpear;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 nevaEscala;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1083")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Texture noiseEscudo;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1094")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x151C638", Offset = "0x151C638", VA = "0x151C638", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x151CACC", Offset = "0x151CACC", VA = "0x151CACC")]
	private void instanciarEsferasCola()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x151D8BC", Offset = "0x151D8BC", VA = "0x151D8BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x152024C", Offset = "0x152024C", VA = "0x152024C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1520914", Offset = "0x1520914", VA = "0x1520914")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x15209A4", Offset = "0x15209A4", VA = "0x15209A4")]
	private void SeleccionarMovimientoBoss()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x151F71C", Offset = "0x151F71C", VA = "0x151F71C")]
	private void CambiarFaseAInvulnerable()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x151F7B0", Offset = "0x151F7B0", VA = "0x151F7B0")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x1520B6C", Offset = "0x1520B6C", VA = "0x1520B6C", Slot = "15")]
	public virtual void QuitarEsferaPool(EsferaScript esfera)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x15201E8", Offset = "0x15201E8", VA = "0x15201E8")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x1521038", Offset = "0x1521038", VA = "0x1521038")]
	private void CambiarFaseInvocar()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x15218AC", Offset = "0x15218AC", VA = "0x15218AC", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x1521A10", Offset = "0x1521A10", VA = "0x1521A10")]
	public Texture[] GetIconosEscudo()
	{
		return null;
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x1521C04", Offset = "0x1521C04", VA = "0x1521C04")]
	public int GetEstadoEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x1521C34", Offset = "0x1521C34", VA = "0x1521C34", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x152259C", Offset = "0x152259C", VA = "0x152259C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A2DDC", Offset = "0x8A2DDC")]
	private IEnumerator TiempoPoderGolpear()
	{
		return null;
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x15226A0", Offset = "0x15226A0", VA = "0x15226A0")]
	private void FinalAnimacion(float scala)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x1522844", Offset = "0x1522844", VA = "0x1522844")]
	private void ActivarMuro()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x15229F4", Offset = "0x15229F4", VA = "0x15229F4")]
	private void PonerTiempoParado()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x1522A94", Offset = "0x1522A94", VA = "0x1522A94", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x1522AB0", Offset = "0x1522AB0", VA = "0x1522AB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A2E8C", Offset = "0x8A2E8C")]
	private IEnumerator ReiniciarNumeroDisparosEscudo()
	{
		return null;
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x1522BB4", Offset = "0x1522BB4", VA = "0x1522BB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A2F3C", Offset = "0x8A2F3C")]
	private IEnumerator PonerEscudoVertexOffseetInicio()
	{
		return null;
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x151EF9C", Offset = "0x151EF9C", VA = "0x151EF9C")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x1522CB8", Offset = "0x1522CB8", VA = "0x1522CB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A2FEC", Offset = "0x8A2FEC")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1522DBC", Offset = "0x1522DBC", VA = "0x1522DBC", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x15232B0", Offset = "0x15232B0", VA = "0x15232B0")]
	private void InvocarEsfera(int nivel)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x15236CC", Offset = "0x15236CC", VA = "0x15236CC", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A309C", Offset = "0x8A309C")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x151F034", Offset = "0x151F034", VA = "0x151F034")]
	private void PonerEsferas()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x15237D0", Offset = "0x15237D0", VA = "0x15237D0", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x1523B70", Offset = "0x1523B70", VA = "0x1523B70")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x152449C", Offset = "0x152449C", VA = "0x152449C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x152463C", Offset = "0x152463C", VA = "0x152463C", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x1524B00", Offset = "0x1524B00", VA = "0x1524B00", Slot = "12")]
	public override void PonerEscudo()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1524B30", Offset = "0x1524B30", VA = "0x1524B30", Slot = "13")]
	public override void QuitarEscudo()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x1524CE0", Offset = "0x1524CE0", VA = "0x1524CE0", Slot = "14")]
	public override int TieneEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x1524D10", Offset = "0x1524D10", VA = "0x1524D10")]
	public BossDragon()
	{
	}
}
[Token(Token = "0x2000160")]
public class BossDragonDebil : BossDragon
{
	[Token(Token = "0x20004F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F230", Offset = "0x87F230")]
	private sealed class <TiempoPoderGolpear>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B10F4")]
		private int <>1__state;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossDragonDebil <>4__this;

		[Token(Token = "0x17000348")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022D7")]
			[Address(RVA = "0x1531540", Offset = "0x1531540", VA = "0x1531540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000349")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0x1531610", Offset = "0x1531610", VA = "0x1531610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x152CF68", Offset = "0x152CF68", VA = "0x152CF68")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x15312E8", Offset = "0x15312E8", VA = "0x15312E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x15312FC", Offset = "0x15312FC", VA = "0x15312FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x1531570", Offset = "0x1531570", VA = "0x1531570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F26C", Offset = "0x87F26C")]
	private sealed class <ReiniciarNumeroDisparosEscudo>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10BB")]
		private object <>2__current;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public BossDragonDebil <>4__this;

		[Token(Token = "0x1700034A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022DD")]
			[Address(RVA = "0x15311E8", Offset = "0x15311E8", VA = "0x15311E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0x15312B8", Offset = "0x15312B8", VA = "0x15312B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x152D47C", Offset = "0x152D47C", VA = "0x152D47C")]
		[DebuggerHidden]
		public <ReiniciarNumeroDisparosEscudo>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x1530EAC", Offset = "0x1530EAC", VA = "0x1530EAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x1530EC0", Offset = "0x1530EC0", VA = "0x1530EC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x1531218", Offset = "0x1531218", VA = "0x1531218", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F2A8", Offset = "0x87F2A8")]
	private sealed class <PonerEscudoVertexOffseetInicio>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1104")]
		private int <>1__state;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossDragonDebil <>4__this;

		[Token(Token = "0x1700034C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x1530DAC", Offset = "0x1530DAC", VA = "0x1530DAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0x1530E7C", Offset = "0x1530E7C", VA = "0x1530E7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x152D580", Offset = "0x152D580", VA = "0x152D580")]
		[DebuggerHidden]
		public <PonerEscudoVertexOffseetInicio>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x1530B80", Offset = "0x1530B80", VA = "0x1530B80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x1530B94", Offset = "0x1530B94", VA = "0x1530B94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x1530DDC", Offset = "0x1530DDC", VA = "0x1530DDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F2E4", Offset = "0x87F2E4")]
	private sealed class <CorrutinaDestruirEscudo>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C3")]
		private object <>2__current;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public BossDragonDebil <>4__this;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1114")]
		private float <i>5__2;

		[Token(Token = "0x1700034E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0x1530A80", Offset = "0x1530A80", VA = "0x1530A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x1530B50", Offset = "0x1530B50", VA = "0x1530B50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x152D684", Offset = "0x152D684", VA = "0x152D684")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x1530334", Offset = "0x1530334", VA = "0x1530334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x1530348", Offset = "0x1530348", VA = "0x1530348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x1530AB0", Offset = "0x1530AB0", VA = "0x1530AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F320", Offset = "0x87F320")]
	private sealed class <AnimacionMorir>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossDragonDebil <>4__this;

		[Token(Token = "0x17000350")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022EF")]
			[Address(RVA = "0x1530234", Offset = "0x1530234", VA = "0x1530234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x1530304", Offset = "0x1530304", VA = "0x1530304", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x152E108", Offset = "0x152E108", VA = "0x152E108")]
		[DebuggerHidden]
		public <AnimacionMorir>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x152F644", Offset = "0x152F644", VA = "0x152F644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x152F658", Offset = "0x152F658", VA = "0x152F658", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x1530264", Offset = "0x1530264", VA = "0x1530264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 velocidadSinTrucar;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B10C4")]
	private Rigidbody rb;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator anim;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool enAnimacion;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A3")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject golpeBossDebil;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B10D4")]
	private GameObject old_golpeBoss;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posicionInicio;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SphereCollider[] colidersBoss;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool proteccionNoMatable;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10AB")]
	private bool yaEstanMuertos;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int animMovimiento;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B10E4")]
	private Coroutine reiniciarNumeroDisparos;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool poderGolpear;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 nevaEscala;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B3")]
	private Texture noiseEscudo;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1526E10", Offset = "0x1526E10", VA = "0x1526E10", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x152729C", Offset = "0x152729C", VA = "0x152729C")]
	private void instanciarEsferasColaDevil()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1527874", Offset = "0x1527874", VA = "0x1527874")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x152A0C0", Offset = "0x152A0C0", VA = "0x152A0C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x152A660", Offset = "0x152A660", VA = "0x152A660")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x152A880", Offset = "0x152A880", VA = "0x152A880")]
	private void CambiarFaseDebil()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x152A6B8", Offset = "0x152A6B8", VA = "0x152A6B8")]
	private void SeleccionarMovimientoBoss()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x152A9D8", Offset = "0x152A9D8", VA = "0x152A9D8")]
	public void CambiarMaterialOnline(bool enabled)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x1529748", Offset = "0x1529748", VA = "0x1529748")]
	private void CambiarFaseAInvulnerable()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x152AA8C", Offset = "0x152AA8C", VA = "0x152AA8C")]
	private void VolverAPonerEsferasCola(int fase)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x15297DC", Offset = "0x15297DC", VA = "0x15297DC")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x152BB10", Offset = "0x152BB10", VA = "0x152BB10", Slot = "15")]
	public override void QuitarEsferaPool(EsferaScript esfera)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x152A05C", Offset = "0x152A05C", VA = "0x152A05C")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x152BE94", Offset = "0x152BE94", VA = "0x152BE94")]
	private void CambiarFaseInvocar()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x152C708", Offset = "0x152C708", VA = "0x152C708", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x152C86C", Offset = "0x152C86C", VA = "0x152C86C", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x152CEAC", Offset = "0x152CEAC", VA = "0x152CEAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A314C", Offset = "0x8A314C")]
	private IEnumerator TiempoPoderGolpear()
	{
		return null;
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x152CFB0", Offset = "0x152CFB0", VA = "0x152CFB0")]
	private void FinalAnimacion(float scala)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x152D154", Offset = "0x152D154", VA = "0x152D154")]
	private void ActivarMuro()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x152D304", Offset = "0x152D304", VA = "0x152D304")]
	private void PonerTiempoParado()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x152D3A4", Offset = "0x152D3A4", VA = "0x152D3A4", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x152D3C0", Offset = "0x152D3C0", VA = "0x152D3C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A31FC", Offset = "0x8A31FC")]
	private IEnumerator ReiniciarNumeroDisparosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x152D4C4", Offset = "0x152D4C4", VA = "0x152D4C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A32AC", Offset = "0x8A32AC")]
	private IEnumerator PonerEscudoVertexOffseetInicio()
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x152D5C8", Offset = "0x152D5C8", VA = "0x152D5C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A335C", Offset = "0x8A335C")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x152D6CC", Offset = "0x152D6CC", VA = "0x152D6CC", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x152DBD0", Offset = "0x152DBD0", VA = "0x152DBD0")]
	private void InvocarEsfera(int nivel)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x152E04C", Offset = "0x152E04C", VA = "0x152E04C", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A340C", Offset = "0x8A340C")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x1529060", Offset = "0x1529060", VA = "0x1529060")]
	private void PonerEsferas()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x152E150", Offset = "0x152E150", VA = "0x152E150", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x152E4BC", Offset = "0x152E4BC", VA = "0x152E4BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x152EC5C", Offset = "0x152EC5C", VA = "0x152EC5C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x152F090", Offset = "0x152F090", VA = "0x152F090", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x152F554", Offset = "0x152F554", VA = "0x152F554")]
	public BossDragonDebil()
	{
	}
}
[Token(Token = "0x2000161")]
public class BossEscudoBala : BossBase
{
	[Token(Token = "0x20004FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F35C", Offset = "0x87F35C")]
	private sealed class <TiempoPoderGolpear>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10FB")]
		private int <>1__state;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1184")]
		public BossEscudoBala <>4__this;

		[Token(Token = "0x17000352")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0x1D49AFC", Offset = "0x1D49AFC", VA = "0x1D49AFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x1D49BCC", Offset = "0x1D49BCC", VA = "0x1D49BCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x1D44E60", Offset = "0x1D44E60", VA = "0x1D44E60")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x1D498A4", Offset = "0x1D498A4", VA = "0x1D498A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x1D498B8", Offset = "0x1D498B8", VA = "0x1D498B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x1D49B2C", Offset = "0x1D49B2C", VA = "0x1D49B2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F398", Offset = "0x87F398")]
	private sealed class <ReiniciarNumeroDisparosEscudo>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossEscudoBala <>4__this;

		[Token(Token = "0x17000354")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022FB")]
			[Address(RVA = "0x1D497A4", Offset = "0x1D497A4", VA = "0x1D497A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022FD")]
			[Address(RVA = "0x1D49874", Offset = "0x1D49874", VA = "0x1D49874", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x1D452E4", Offset = "0x1D452E4", VA = "0x1D452E4")]
		[DebuggerHidden]
		public <ReiniciarNumeroDisparosEscudo>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x1D49468", Offset = "0x1D49468", VA = "0x1D49468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x1D4947C", Offset = "0x1D4947C", VA = "0x1D4947C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x1D497D4", Offset = "0x1D497D4", VA = "0x1D497D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000500")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F3D4", Offset = "0x87F3D4")]
	private sealed class <PonerEscudoVertexOffseetInicio>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1103")]
		private int <>1__state;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1194")]
		public BossEscudoBala <>4__this;

		[Token(Token = "0x17000356")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002301")]
			[Address(RVA = "0x1D49368", Offset = "0x1D49368", VA = "0x1D49368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002303")]
			[Address(RVA = "0x1D49438", Offset = "0x1D49438", VA = "0x1D49438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x1D4532C", Offset = "0x1D4532C", VA = "0x1D4532C")]
		[DebuggerHidden]
		public <PonerEscudoVertexOffseetInicio>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x1D4913C", Offset = "0x1D4913C", VA = "0x1D4913C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x1D49150", Offset = "0x1D49150", VA = "0x1D49150", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x1D49398", Offset = "0x1D49398", VA = "0x1D49398", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000501")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F410", Offset = "0x87F410")]
	private sealed class <CorrutinaDestruirEscudo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossEscudoBala <>4__this;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110B")]
		private float <i>5__2;

		[Token(Token = "0x17000358")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002307")]
			[Address(RVA = "0x1D4903C", Offset = "0x1D4903C", VA = "0x1D4903C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002309")]
			[Address(RVA = "0x1D4910C", Offset = "0x1D4910C", VA = "0x1D4910C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x1D45430", Offset = "0x1D45430", VA = "0x1D45430")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x1D4891C", Offset = "0x1D4891C", VA = "0x1D4891C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x1D48930", Offset = "0x1D48930", VA = "0x1D48930", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x1D4906C", Offset = "0x1D4906C", VA = "0x1D4906C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000502")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F44C", Offset = "0x87F44C")]
	private sealed class <AnimacionMorir>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B11A4")]
		private object <>2__current;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossEscudoBala <>4__this;

		[Token(Token = "0x1700035A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600230D")]
			[Address(RVA = "0x1D4881C", Offset = "0x1D4881C", VA = "0x1D4881C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600230F")]
			[Address(RVA = "0x1D488EC", Offset = "0x1D488EC", VA = "0x1D488EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x1D4648C", Offset = "0x1D4648C", VA = "0x1D4648C")]
		[DebuggerHidden]
		public <AnimacionMorir>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x1D48110", Offset = "0x1D48110", VA = "0x1D48110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x1D48124", Offset = "0x1D48124", VA = "0x1D48124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x1D4884C", Offset = "0x1D4884C", VA = "0x1D4884C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10CB")]
	private Vector3 velocidadSinTrucar;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float vel;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1124")]
	public float velBoss;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float porcentaje;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 dir;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int vecesEscudoDestruido;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D3")]
	public int golpesPorFase;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1134")]
	public Transform bossMesh;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture[] iconosEscudos;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rigidbody rb;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SphereCollider[] colider;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10DB")]
	public MeshRenderer mesh;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float tiempoVida;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1144")]
	[HideInInspector]
	public int tiempoParaQuitarFantasmal;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool fantasmal;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform puntoSpawn;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator anim;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10E3")]
	private Vector3 posicionCentro;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 posicionTV;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1154")]
	private bool invocarEsferas;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool esferasInvocadas;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool ponerEscudo;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject bossGolpeado;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10EB")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject muroDerecho;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1164")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool enAnimacion;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool yaEstanMuertos;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10F3")]
	private Coroutine reiniciarNumeroDisparos;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool poderGolpear;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1174")]
	private Vector3 nevaEscala;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Texture noiseEscudo;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x1D41104", Offset = "0x1D41104", VA = "0x1D41104", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x1D416C8", Offset = "0x1D416C8", VA = "0x1D416C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x1D43CD4", Offset = "0x1D43CD4", VA = "0x1D43CD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x1D437C4", Offset = "0x1D437C4", VA = "0x1D437C4")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x1D43B54", Offset = "0x1D43B54", VA = "0x1D43B54")]
	private void CambiarFaseAInvulnerable()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x1D43A44", Offset = "0x1D43A44", VA = "0x1D43A44")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x1D436DC", Offset = "0x1D436DC", VA = "0x1D436DC")]
	private void CambiarFaseAInvocar()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x1D43C2C", Offset = "0x1D43C2C", VA = "0x1D43C2C")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x1D44104", Offset = "0x1D44104", VA = "0x1D44104", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x1D44268", Offset = "0x1D44268", VA = "0x1D44268")]
	public Texture[] GetIconosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x1D4445C", Offset = "0x1D4445C", VA = "0x1D4445C")]
	public int GetEstadoEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x1D4448C", Offset = "0x1D4448C", VA = "0x1D4448C")]
	public void GolpeoEscudo(int numGolpes = 1)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x1D447A8", Offset = "0x1D447A8", VA = "0x1D447A8")]
	public void SetTexturaEscudoBalas()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x1D44A04", Offset = "0x1D44A04", VA = "0x1D44A04", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x1D44DA4", Offset = "0x1D44DA4", VA = "0x1D44DA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A34BC", Offset = "0x8A34BC")]
	private IEnumerator TiempoPoderGolpear()
	{
		return null;
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x1D44EA8", Offset = "0x1D44EA8", VA = "0x1D44EA8")]
	private void FinalAnimacion(float scala)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x1D43D2C", Offset = "0x1D43D2C", VA = "0x1D43D2C")]
	private void LlamarAInvocarEsfera()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x1D45090", Offset = "0x1D45090", VA = "0x1D45090")]
	private void FinalizarInvocarEsferas()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x1D4517C", Offset = "0x1D4517C", VA = "0x1D4517C")]
	private void PonerTiempoParado()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x1D45264", Offset = "0x1D45264", VA = "0x1D45264", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x1D44654", Offset = "0x1D44654", VA = "0x1D44654")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A356C", Offset = "0x8A356C")]
	private IEnumerator ReiniciarNumeroDisparosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x1D44948", Offset = "0x1D44948", VA = "0x1D44948")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A361C", Offset = "0x8A361C")]
	private IEnumerator PonerEscudoVertexOffseetInicio()
	{
		return null;
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x1D44710", Offset = "0x1D44710", VA = "0x1D44710")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x1D45374", Offset = "0x1D45374", VA = "0x1D45374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A36CC", Offset = "0x8A36CC")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x1D45478", Offset = "0x1D45478", VA = "0x1D45478", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x1D45914", Offset = "0x1D45914", VA = "0x1D45914", Slot = "12")]
	public override void PonerEscudo()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x1D45D2C", Offset = "0x1D45D2C", VA = "0x1D45D2C", Slot = "13")]
	public override void QuitarEscudo()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x1D45EDC", Offset = "0x1D45EDC", VA = "0x1D45EDC", Slot = "14")]
	public override int TieneEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x1D45F0C", Offset = "0x1D45F0C", VA = "0x1D45F0C")]
	private void InvocarEsfera(int nivel)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x1D463D0", Offset = "0x1D463D0", VA = "0x1D463D0", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A377C", Offset = "0x8A377C")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x1D464D4", Offset = "0x1D464D4", VA = "0x1D464D4", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x1D46764", Offset = "0x1D46764", VA = "0x1D46764")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x1D47624", Offset = "0x1D47624", VA = "0x1D47624")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x1D47B50", Offset = "0x1D47B50", VA = "0x1D47B50", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1D48014", Offset = "0x1D48014", VA = "0x1D48014")]
	public BossEscudoBala()
	{
	}
}
[Token(Token = "0x2000162")]
public class BossEscudoCadena : BossBase
{
	[Token(Token = "0x2000503")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F488", Offset = "0x87F488")]
	private sealed class <TiempoPoderGolpear>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113B")]
		private int <>1__state;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1204")]
		public float tiempo;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossEscudoCadena <>4__this;

		[Token(Token = "0x1700035C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002313")]
			[Address(RVA = "0x1D514B8", Offset = "0x1D514B8", VA = "0x1D514B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002315")]
			[Address(RVA = "0x1D51588", Offset = "0x1D51588", VA = "0x1D51588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x1D4CE8C", Offset = "0x1D4CE8C", VA = "0x1D4CE8C")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x1D511F0", Offset = "0x1D511F0", VA = "0x1D511F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x1D51204", Offset = "0x1D51204", VA = "0x1D51204", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x1D514E8", Offset = "0x1D514E8", VA = "0x1D514E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F4C4", Offset = "0x87F4C4")]
	private sealed class <PonerEscudoVertexOffseetInicio>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1143")]
		public BossEscudoCadena <>4__this;

		[Token(Token = "0x1700035E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002319")]
			[Address(RVA = "0x1D510F0", Offset = "0x1D510F0", VA = "0x1D510F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600231B")]
			[Address(RVA = "0x1D511C0", Offset = "0x1D511C0", VA = "0x1D511C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x1D4D2B8", Offset = "0x1D4D2B8", VA = "0x1D4D2B8")]
		[DebuggerHidden]
		public <PonerEscudoVertexOffseetInicio>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x1D50EC4", Offset = "0x1D50EC4", VA = "0x1D50EC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x1D50ED8", Offset = "0x1D50ED8", VA = "0x1D50ED8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1D51120", Offset = "0x1D51120", VA = "0x1D51120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000505")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F500", Offset = "0x87F500")]
	private sealed class <CorrutinaDestruirEscudo>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1214")]
		private object <>2__current;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossEscudoCadena <>4__this;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <i>5__2;

		[Token(Token = "0x17000360")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600231F")]
			[Address(RVA = "0x1D50DC4", Offset = "0x1D50DC4", VA = "0x1D50DC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0x1D50E94", Offset = "0x1D50E94", VA = "0x1D50E94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1D4D3BC", Offset = "0x1D4D3BC", VA = "0x1D4D3BC")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x1D506A4", Offset = "0x1D506A4", VA = "0x1D506A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x1D506B8", Offset = "0x1D506B8", VA = "0x1D506B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x1D50DF4", Offset = "0x1D50DF4", VA = "0x1D50DF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000506")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F53C", Offset = "0x87F53C")]
	private sealed class <AnimacionMorir>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114B")]
		private object <>2__current;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public BossEscudoCadena <>4__this;

		[Token(Token = "0x17000362")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002325")]
			[Address(RVA = "0x1D505A4", Offset = "0x1D505A4", VA = "0x1D505A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002327")]
			[Address(RVA = "0x1D50674", Offset = "0x1D50674", VA = "0x1D50674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x1D4E478", Offset = "0x1D4E478", VA = "0x1D4E478")]
		[DebuggerHidden]
		public <AnimacionMorir>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x1D4F910", Offset = "0x1D4F910", VA = "0x1D4F910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x1D4F924", Offset = "0x1D4F924", VA = "0x1D4F924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x1D505D4", Offset = "0x1D505D4", VA = "0x1D505D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool escudoActivo;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int vecesEscudoDestruido;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1113")]
	public int golpesPorFase;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B11B4")]
	public Transform bossMesh;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture iconosEscudos;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rigidbody rb;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SphereCollider[] colider;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111B")]
	public MeshRenderer mesh;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 posInicio;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B11C4")]
	public Transform puntoSpawn;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator anim;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool invocarEsferas;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool esferasInvocadas;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1123")]
	private bool ponerEscudo;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject bossGolpeado;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B11D4")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool enAnimacion;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112B")]
	public bool bossMejorado;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float velocidadAnimaciones;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B11E4")]
	private bool yaEstanMuertos;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine reiniciarNumeroDisparos;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool poderGolpear;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 nevaEscala;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1133")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Texture noiseEscudo;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B11F4")]
	private int nivelMina;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int animMovimiento;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool risa;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1D49BFC", Offset = "0x1D49BFC", VA = "0x1D49BFC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x1D4A33C", Offset = "0x1D4A33C", VA = "0x1D4A33C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1D4BCB0", Offset = "0x1D4BCB0", VA = "0x1D4BCB0")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1D4BE6C", Offset = "0x1D4BE6C", VA = "0x1D4BE6C")]
	private void CambiarFaseAInvulnerable()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x1D4BF34", Offset = "0x1D4BF34", VA = "0x1D4BF34")]
	private void DesactivarAnimator()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x1D4BF8C", Offset = "0x1D4BF8C", VA = "0x1D4BF8C")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x1D4C0A4", Offset = "0x1D4C0A4", VA = "0x1D4C0A4")]
	private void CambiarFaseAInvocar()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x1D4C350", Offset = "0x1D4C350", VA = "0x1D4C350")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x1D4C3E4", Offset = "0x1D4C3E4", VA = "0x1D4C3E4", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x1D4C4D0", Offset = "0x1D4C4D0", VA = "0x1D4C4D0")]
	public Texture GetIconosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x1D4C564", Offset = "0x1D4C564", VA = "0x1D4C564")]
	public int GetEstadoEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x1D4C594", Offset = "0x1D4C594", VA = "0x1D4C594")]
	public void GolpeoEscudo(int numGolpes = 1)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x1D4C794", Offset = "0x1D4C794", VA = "0x1D4C794", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x1D4CDA8", Offset = "0x1D4CDA8", VA = "0x1D4CDA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A382C", Offset = "0x8A382C")]
	private IEnumerator TiempoPoderGolpear(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1D4CED4", Offset = "0x1D4CED4", VA = "0x1D4CED4")]
	private void FinalAnimacion(float scala)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x1D4C114", Offset = "0x1D4C114", VA = "0x1D4C114")]
	private void LlamarAInvocarEsfera()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x1D4D078", Offset = "0x1D4D078", VA = "0x1D4D078")]
	private void FinalizarInvocarEsferas()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x1D4D124", Offset = "0x1D4D124", VA = "0x1D4D124")]
	private void PonerTiempoParado()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1D4D1C4", Offset = "0x1D4D1C4", VA = "0x1D4D1C4", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x1D4D1FC", Offset = "0x1D4D1FC", VA = "0x1D4D1FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A38DC", Offset = "0x8A38DC")]
	private IEnumerator PonerEscudoVertexOffseetInicio()
	{
		return null;
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x1D4C6FC", Offset = "0x1D4C6FC", VA = "0x1D4C6FC")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x1D4D300", Offset = "0x1D4D300", VA = "0x1D4D300")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A398C", Offset = "0x8A398C")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x1D4D404", Offset = "0x1D4D404", VA = "0x1D4D404", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x1D4D8A0", Offset = "0x1D4D8A0", VA = "0x1D4D8A0", Slot = "12")]
	public override void PonerEscudo()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x1D4DD60", Offset = "0x1D4DD60", VA = "0x1D4DD60", Slot = "13")]
	public override void QuitarEscudo()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x1D4DF10", Offset = "0x1D4DF10", VA = "0x1D4DF10", Slot = "14")]
	public override int TieneEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1D4DF40", Offset = "0x1D4DF40", VA = "0x1D4DF40")]
	private void InvocarEsfera(int nivel)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x1D4E3BC", Offset = "0x1D4E3BC", VA = "0x1D4E3BC", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A3A3C", Offset = "0x8A3A3C")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1D4BA54", Offset = "0x1D4BA54", VA = "0x1D4BA54")]
	private void SeleccionarMovimientoBoss()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x1D4E4C0", Offset = "0x1D4E4C0", VA = "0x1D4E4C0", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x1D4E750", Offset = "0x1D4E750", VA = "0x1D4E750")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x1D4EE7C", Offset = "0x1D4EE7C", VA = "0x1D4EE7C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x1D4F3D8", Offset = "0x1D4F3D8", VA = "0x1D4F3D8", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1D4F89C", Offset = "0x1D4F89C", VA = "0x1D4F89C")]
	public BossEscudoCadena()
	{
	}
}
[Token(Token = "0x2000163")]
public class BossHackerMetralleta : BossBase
{
	[Token(Token = "0x2000507")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F578", Offset = "0x87F578")]
	private sealed class <TiempoPoderGolpear>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x117B")]
		private int <>1__state;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1284")]
		public BossHackerMetralleta <>4__this;

		[Token(Token = "0x17000364")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600232B")]
			[Address(RVA = "0x1D57B94", Offset = "0x1D57B94", VA = "0x1D57B94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600232D")]
			[Address(RVA = "0x1D57C64", Offset = "0x1D57C64", VA = "0x1D57C64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x1D544E4", Offset = "0x1D544E4", VA = "0x1D544E4")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x1D5793C", Offset = "0x1D5793C", VA = "0x1D5793C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x1D57950", Offset = "0x1D57950", VA = "0x1D57950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x1D57BC4", Offset = "0x1D57BC4", VA = "0x1D57BC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F5B4", Offset = "0x87F5B4")]
	private sealed class <CorrutinaDestruirEscudo>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossHackerMetralleta <>4__this;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1183")]
		private float <i>5__2;

		[Token(Token = "0x17000366")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002331")]
			[Address(RVA = "0x1D5783C", Offset = "0x1D5783C", VA = "0x1D5783C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002333")]
			[Address(RVA = "0x1D5790C", Offset = "0x1D5790C", VA = "0x1D5790C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x1D54680", Offset = "0x1D54680", VA = "0x1D54680")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x1D57198", Offset = "0x1D57198", VA = "0x1D57198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x1D571AC", Offset = "0x1D571AC", VA = "0x1D571AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x1D5786C", Offset = "0x1D5786C", VA = "0x1D5786C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000509")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F5F0", Offset = "0x87F5F0")]
	private sealed class <AnimacionMorir>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1294")]
		private object <>2__current;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossHackerMetralleta <>4__this;

		[Token(Token = "0x17000368")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002337")]
			[Address(RVA = "0x1D57098", Offset = "0x1D57098", VA = "0x1D57098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002339")]
			[Address(RVA = "0x1D57168", Offset = "0x1D57168", VA = "0x1D57168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x1D54B44", Offset = "0x1D54B44", VA = "0x1D54B44")]
		[DebuggerHidden]
		public <AnimacionMorir>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x1D56310", Offset = "0x1D56310", VA = "0x1D56310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x1D56324", Offset = "0x1D56324", VA = "0x1D56324", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x1D570C8", Offset = "0x1D570C8", VA = "0x1D570C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1224")]
	private Vector3 velocidadSinTrucar;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 newScale;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float vel;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float velBoss;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1153")]
	public float porcentaje;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 dir;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1234")]
	private bool escudoActivo;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int VecesGolpeado;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int golpesEnFase;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject esferaSpawn;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115B")]
	public Transform bossMesh;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Rigidbody rb;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1244")]
	public SphereCollider[] colider;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer mesh;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject bossGolpeado;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1163")]
	private Animator anim;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int animMovimiento;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1254")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParedPistola[] torretas;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool bossMejorado;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject muroDerecho;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x116B")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool risa;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1264")]
	public float velocidadAnimaciones;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarLasTorretas;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool yaEstanMuertos;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1173")]
	public float tiempoVulnerable;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 ultimoTamaño;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1274")]
	private bool torretasActivas;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool poderGolpear;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1D515B8", Offset = "0x1D515B8", VA = "0x1D515B8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1D51FD4", Offset = "0x1D51FD4", VA = "0x1D51FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1D53898", Offset = "0x1D53898", VA = "0x1D53898")]
	public void CambiarTamañoEnd()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1D53910", Offset = "0x1D53910", VA = "0x1D53910")]
	public void CambiarTamañoStart()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1D53574", Offset = "0x1D53574", VA = "0x1D53574")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1D535CC", Offset = "0x1D535CC", VA = "0x1D535CC")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x1D53C54", Offset = "0x1D53C54", VA = "0x1D53C54")]
	private void ActivarTorretas()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1D53E30", Offset = "0x1D53E30", VA = "0x1D53E30")]
	private void DesactivarTorretas()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1D53F4C", Offset = "0x1D53F4C", VA = "0x1D53F4C")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1D53A8C", Offset = "0x1D53A8C", VA = "0x1D53A8C")]
	private void SeleccionarMovimientoBoss()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x1D5409C", Offset = "0x1D5409C", VA = "0x1D5409C", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x1D540CC", Offset = "0x1D540CC", VA = "0x1D540CC", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1D54428", Offset = "0x1D54428", VA = "0x1D54428")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A3AEC", Offset = "0x8A3AEC")]
	private IEnumerator TiempoPoderGolpear()
	{
		return null;
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x1D5452C", Offset = "0x1D5452C", VA = "0x1D5452C")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1D545C4", Offset = "0x1D545C4", VA = "0x1D545C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A3B9C", Offset = "0x8A3B9C")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x1D546C8", Offset = "0x1D546C8", VA = "0x1D546C8", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x1D54A88", Offset = "0x1D54A88", VA = "0x1D54A88", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A3C4C", Offset = "0x8A3C4C")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x1D54B8C", Offset = "0x1D54B8C", VA = "0x1D54B8C", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x1D54E1C", Offset = "0x1D54E1C", VA = "0x1D54E1C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x1D55824", Offset = "0x1D55824", VA = "0x1D55824")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1D55C00", Offset = "0x1D55C00", VA = "0x1D55C00", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x1D55E9C", Offset = "0x1D55E9C", VA = "0x1D55E9C", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x1D55F44", Offset = "0x1D55F44", VA = "0x1D55F44")]
	private void QuitarInvunerable()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1D55F74", Offset = "0x1D55F74", VA = "0x1D55F74", Slot = "12")]
	public override void PonerEscudo()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1D55FA4", Offset = "0x1D55FA4", VA = "0x1D55FA4", Slot = "13")]
	public override void QuitarEscudo()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x1D56154", Offset = "0x1D56154", VA = "0x1D56154", Slot = "14")]
	public override int TieneEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x1D56184", Offset = "0x1D56184", VA = "0x1D56184")]
	public BossHackerMetralleta()
	{
	}
}
[Token(Token = "0x2000164")]
public class BossIndeciso : BossBase
{
	[Token(Token = "0x200050A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F62C", Offset = "0x87F62C")]
	private sealed class <ReiniciarNumeroDisparosEscudo>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B3")]
		private object <>2__current;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public BossIndeciso <>4__this;

		[Token(Token = "0x1700036A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600233D")]
			[Address(RVA = "0x1D5FEAC", Offset = "0x1D5FEAC", VA = "0x1D5FEAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600233F")]
			[Address(RVA = "0x1D5FF7C", Offset = "0x1D5FF7C", VA = "0x1D5FF7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x1D5A8F8", Offset = "0x1D5A8F8", VA = "0x1D5A8F8")]
		[DebuggerHidden]
		public <ReiniciarNumeroDisparosEscudo>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x1D5FB5C", Offset = "0x1D5FB5C", VA = "0x1D5FB5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x1D5FB70", Offset = "0x1D5FB70", VA = "0x1D5FB70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x1D5FEDC", Offset = "0x1D5FEDC", VA = "0x1D5FEDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F668", Offset = "0x87F668")]
	private sealed class <TiempoPoderGolpear>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B12F4")]
		private int <>1__state;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float tiempo;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossIndeciso <>4__this;

		[Token(Token = "0x1700036C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002343")]
			[Address(RVA = "0x1D60274", Offset = "0x1D60274", VA = "0x1D60274", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002345")]
			[Address(RVA = "0x1D60344", Offset = "0x1D60344", VA = "0x1D60344", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x1D5AF38", Offset = "0x1D5AF38", VA = "0x1D5AF38")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x1D5FFAC", Offset = "0x1D5FFAC", VA = "0x1D5FFAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x1D5FFC0", Offset = "0x1D5FFC0", VA = "0x1D5FFC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x1D602A4", Offset = "0x1D602A4", VA = "0x1D602A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F6A4", Offset = "0x87F6A4")]
	private sealed class <PonerEscudoVertexOffseetInicio>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11BB")]
		private int <>1__state;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1304")]
		public BossIndeciso <>4__this;

		[Token(Token = "0x1700036E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002349")]
			[Address(RVA = "0x1D5FA5C", Offset = "0x1D5FA5C", VA = "0x1D5FA5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600234B")]
			[Address(RVA = "0x1D5FB2C", Offset = "0x1D5FB2C", VA = "0x1D5FB2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x1D5B2A8", Offset = "0x1D5B2A8", VA = "0x1D5B2A8")]
		[DebuggerHidden]
		public <PonerEscudoVertexOffseetInicio>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x1D5F830", Offset = "0x1D5F830", VA = "0x1D5F830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x1D5F844", Offset = "0x1D5F844", VA = "0x1D5F844", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x1D5FA8C", Offset = "0x1D5FA8C", VA = "0x1D5FA8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F6E0", Offset = "0x87F6E0")]
	private sealed class <CorrutinaDestruirEscudo>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossIndeciso <>4__this;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C3")]
		private float <i>5__2;

		[Token(Token = "0x17000370")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600234F")]
			[Address(RVA = "0x1D5F730", Offset = "0x1D5F730", VA = "0x1D5F730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000371")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002351")]
			[Address(RVA = "0x1D5F800", Offset = "0x1D5F800", VA = "0x1D5F800", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x1D5B3AC", Offset = "0x1D5B3AC", VA = "0x1D5B3AC")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x1D5F010", Offset = "0x1D5F010", VA = "0x1D5F010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x1D5F024", Offset = "0x1D5F024", VA = "0x1D5F024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x1D5F760", Offset = "0x1D5F760", VA = "0x1D5F760", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F71C", Offset = "0x87F71C")]
	private sealed class <AnimacionMorir>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1314")]
		private object <>2__current;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossIndeciso <>4__this;

		[Token(Token = "0x17000372")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002355")]
			[Address(RVA = "0x1D5EF10", Offset = "0x1D5EF10", VA = "0x1D5EF10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002357")]
			[Address(RVA = "0x1D5EFE0", Offset = "0x1D5EFE0", VA = "0x1D5EFE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x1D5CB54", Offset = "0x1D5CB54", VA = "0x1D5CB54")]
		[DebuggerHidden]
		public <AnimacionMorir>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x1D5E320", Offset = "0x1D5E320", VA = "0x1D5E320", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x1D5E334", Offset = "0x1D5E334", VA = "0x1D5E334", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x1D5EF40", Offset = "0x1D5EF40", VA = "0x1D5EF40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool escudoActivo;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int vecesEscudoDestruido;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118B")]
	public int golpesPorFase;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B12A4")]
	public Transform bossMesh;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture[] iconosEscudos;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rigidbody rb;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SphereCollider[] colider;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1193")]
	public MeshRenderer mesh;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 posInicio;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B12B4")]
	public Transform puntoSpawn;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator anim;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool invocarEsferas;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool esferasInvocadas;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119B")]
	private bool ponerEscudo;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject bossGolpeado;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B12C4")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool enAnimacion;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A3")]
	private bool yaEstanMuertos;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Coroutine reiniciarNumeroDisparos;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B12D4")]
	private bool poderGolpear;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 nevaEscala;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Texture noiseEscudo;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11AB")]
	private bool esferasFase;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int contadorEsferas;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B12E4")]
	private int animMovimiento;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool risa;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x1D57C94", Offset = "0x1D57C94", VA = "0x1D57C94", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1D58118", Offset = "0x1D58118", VA = "0x1D58118")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x1D592C8", Offset = "0x1D592C8", VA = "0x1D592C8")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x1D59554", Offset = "0x1D59554", VA = "0x1D59554")]
	private void CambiarAInicioGancho()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1D59640", Offset = "0x1D59640", VA = "0x1D59640")]
	private void CambiarFaseAInvulnerable()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x1D59708", Offset = "0x1D59708", VA = "0x1D59708")]
	private void DesactivarAnimator()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x1D59760", Offset = "0x1D59760", VA = "0x1D59760")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x1D59878", Offset = "0x1D59878", VA = "0x1D59878")]
	private void CambiarFaseAInvocar()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x1D59A94", Offset = "0x1D59A94", VA = "0x1D59A94")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x1D59B28", Offset = "0x1D59B28", VA = "0x1D59B28", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x1D59C38", Offset = "0x1D59C38", VA = "0x1D59C38")]
	public Texture[] GetIconosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x1D59F3C", Offset = "0x1D59F3C", VA = "0x1D59F3C")]
	public int GetEstadoEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x1D59F6C", Offset = "0x1D59F6C", VA = "0x1D59F6C")]
	public void GolpeoEscudo(int numGolpes = 1)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x1D5A780", Offset = "0x1D5A780", VA = "0x1D5A780")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A3CFC", Offset = "0x8A3CFC")]
	private IEnumerator ReiniciarNumeroDisparosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x1D5A940", Offset = "0x1D5A940", VA = "0x1D5A940", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x1D5A69C", Offset = "0x1D5A69C", VA = "0x1D5A69C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A3DAC", Offset = "0x8A3DAC")]
	private IEnumerator TiempoPoderGolpear(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x1D5AF80", Offset = "0x1D5AF80", VA = "0x1D5AF80")]
	private void FinalAnimacion(float scala)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x1D598E8", Offset = "0x1D598E8", VA = "0x1D598E8")]
	private void LlamarAInvocarEsfera()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x1D5B124", Offset = "0x1D5B124", VA = "0x1D5B124")]
	private void FinalizarInvocarEsferas()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x1D5B1D0", Offset = "0x1D5B1D0", VA = "0x1D5B1D0")]
	private void PonerTiempoParado()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x1D5B270", Offset = "0x1D5B270", VA = "0x1D5B270", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x1D5A83C", Offset = "0x1D5A83C", VA = "0x1D5A83C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A3E5C", Offset = "0x8A3E5C")]
	private IEnumerator PonerEscudoVertexOffseetInicio()
	{
		return null;
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x1D5A604", Offset = "0x1D5A604", VA = "0x1D5A604")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x1D5B2F0", Offset = "0x1D5B2F0", VA = "0x1D5B2F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A3F0C", Offset = "0x8A3F0C")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x1D5B3F4", Offset = "0x1D5B3F4", VA = "0x1D5B3F4", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x1D5B8F8", Offset = "0x1D5B8F8", VA = "0x1D5B8F8")]
	private void CambiarTipoEscudo()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x1D5B9C8", Offset = "0x1D5B9C8", VA = "0x1D5B9C8", Slot = "12")]
	public override void PonerEscudo()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x1D5C090", Offset = "0x1D5C090", VA = "0x1D5C090", Slot = "13")]
	public override void QuitarEscudo()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x1D5C240", Offset = "0x1D5C240", VA = "0x1D5C240", Slot = "14")]
	public override int TieneEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x1D5BEE4", Offset = "0x1D5BEE4", VA = "0x1D5BEE4")]
	private Texture ponerIconoDependiendoDelEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x1D5C270", Offset = "0x1D5C270", VA = "0x1D5C270")]
	private void marcarEsfera()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x1D5C5B0", Offset = "0x1D5C5B0", VA = "0x1D5C5B0")]
	private void InvocarEsfera(int nivel)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1D5CA98", Offset = "0x1D5CA98", VA = "0x1D5CA98", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A3FBC", Offset = "0x8A3FBC")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1D5938C", Offset = "0x1D5938C", VA = "0x1D5938C")]
	private void SeleccionarMovimientoBoss()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x1D5CB9C", Offset = "0x1D5CB9C", VA = "0x1D5CB9C", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1D5CE2C", Offset = "0x1D5CE2C", VA = "0x1D5CE2C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1D5D8A4", Offset = "0x1D5D8A4", VA = "0x1D5D8A4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1D5DE00", Offset = "0x1D5DE00", VA = "0x1D5DE00", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x1D5E2C4", Offset = "0x1D5E2C4", VA = "0x1D5E2C4")]
	public BossIndeciso()
	{
	}
}
[Token(Token = "0x2000165")]
public class BossLaser : BossBase
{
	[Token(Token = "0x200050F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F758", Offset = "0x87F758")]
	private sealed class <PonerEscudoVertexOffseetInicio>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1384")]
		private int <>1__state;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossLaser <>4__this;

		[Token(Token = "0x17000374")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600235B")]
			[Address(RVA = "0x1D688F0", Offset = "0x1D688F0", VA = "0x1D688F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600235D")]
			[Address(RVA = "0x1D689C0", Offset = "0x1D689C0", VA = "0x1D689C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x1D63200", Offset = "0x1D63200", VA = "0x1D63200")]
		[DebuggerHidden]
		public <PonerEscudoVertexOffseetInicio>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x1D686C4", Offset = "0x1D686C4", VA = "0x1D686C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x1D686D8", Offset = "0x1D686D8", VA = "0x1D686D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x1D68920", Offset = "0x1D68920", VA = "0x1D68920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F794", Offset = "0x87F794")]
	private sealed class <ReiniciarNumeroDisparosEscudo>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1203")]
		private object <>2__current;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public BossLaser <>4__this;

		[Token(Token = "0x17000376")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002361")]
			[Address(RVA = "0x1D68D60", Offset = "0x1D68D60", VA = "0x1D68D60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002363")]
			[Address(RVA = "0x1D68E30", Offset = "0x1D68E30", VA = "0x1D68E30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x1D63248", Offset = "0x1D63248", VA = "0x1D63248")]
		[DebuggerHidden]
		public <ReiniciarNumeroDisparosEscudo>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x1D689F0", Offset = "0x1D689F0", VA = "0x1D689F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x1D68A04", Offset = "0x1D68A04", VA = "0x1D68A04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x1D68D90", Offset = "0x1D68D90", VA = "0x1D68D90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000511")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F7D0", Offset = "0x87F7D0")]
	private sealed class <TiempoPoderGolpear>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1394")]
		private int <>1__state;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossLaser <>4__this;

		[Token(Token = "0x17000378")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002367")]
			[Address(RVA = "0x1D690B8", Offset = "0x1D690B8", VA = "0x1D690B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002369")]
			[Address(RVA = "0x1D69188", Offset = "0x1D69188", VA = "0x1D69188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x1D63888", Offset = "0x1D63888", VA = "0x1D63888")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x1D68E60", Offset = "0x1D68E60", VA = "0x1D68E60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x1D68E74", Offset = "0x1D68E74", VA = "0x1D68E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x1D690E8", Offset = "0x1D690E8", VA = "0x1D690E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F80C", Offset = "0x87F80C")]
	private sealed class <CorrutinaDestruirEscudo>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120B")]
		private object <>2__current;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public BossLaser <>4__this;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B13A4")]
		private float <i>5__2;

		[Token(Token = "0x1700037A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600236D")]
			[Address(RVA = "0x1D685C4", Offset = "0x1D685C4", VA = "0x1D685C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600236F")]
			[Address(RVA = "0x1D68694", Offset = "0x1D68694", VA = "0x1D68694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x1D6398C", Offset = "0x1D6398C", VA = "0x1D6398C")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x1D67F20", Offset = "0x1D67F20", VA = "0x1D67F20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x1D67F34", Offset = "0x1D67F34", VA = "0x1D67F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x1D685F4", Offset = "0x1D685F4", VA = "0x1D685F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000513")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F848", Offset = "0x87F848")]
	private sealed class <AnimacionMorir>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossLaser <>4__this;

		[Token(Token = "0x1700037C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002373")]
			[Address(RVA = "0x1D67E20", Offset = "0x1D67E20", VA = "0x1D67E20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002375")]
			[Address(RVA = "0x1D67EF0", Offset = "0x1D67EF0", VA = "0x1D67EF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x1D63F2C", Offset = "0x1D63F2C", VA = "0x1D63F2C")]
		[DebuggerHidden]
		public <AnimacionMorir>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x1D67140", Offset = "0x1D67140", VA = "0x1D67140", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x1D67154", Offset = "0x1D67154", VA = "0x1D67154", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x1D67E50", Offset = "0x1D67E50", VA = "0x1D67E50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 velocidadSinTrucar;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 newScale;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11CB")]
	public float vel;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float velBoss;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1324")]
	public float porcentaje;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 dir;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool escudoActivo;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int VecesGolpeado;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D3")]
	public int golpesEnFase;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject esferaSpawn;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1334")]
	public Transform bossMesh;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rigidbody rb;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SphereCollider[] colider;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer mesh;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11DB")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject bossGolpeado;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1344")]
	private Animator anim;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform puntoSpawn;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int animMovimiento;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture[] iconosEscudos;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E3")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1354")]
	private bool risa;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarLasTorretas;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool modoLaser;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11EB")]
	public GameObject ojoAsesino;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool yaEstanMuertos;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1364")]
	private Vector3 ultimoTamaño;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool poderGolpear;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine reiniciarNumeroDisparos;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Texture noiseEscudo;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11F3")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private List<EsferaScript> poolEsferasNegras;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1374")]
	private int contadorEsferas;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool esferasRondaInvocadas;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool poderGirarOjo;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool giradoDeOjoLaser;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11FB")]
	private Vector3 posicionEnMomentoDeActivar;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x1D60374", Offset = "0x1D60374", VA = "0x1D60374", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x1D608D4", Offset = "0x1D608D4", VA = "0x1D608D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x1D61F74", Offset = "0x1D61F74", VA = "0x1D61F74")]
	public void CambiarTamañoEnd()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x1D61FEC", Offset = "0x1D61FEC", VA = "0x1D61FEC")]
	public void CambiarTamañoStart()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x1D61E20", Offset = "0x1D61E20", VA = "0x1D61E20")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x1D61E78", Offset = "0x1D61E78", VA = "0x1D61E78")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x1D62330", Offset = "0x1D62330", VA = "0x1D62330")]
	private void CambiarFaseAInvulnerable()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x1D623D4", Offset = "0x1D623D4", VA = "0x1D623D4")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x1D62168", Offset = "0x1D62168", VA = "0x1D62168")]
	private void SeleccionarMovimientoBoss()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x1D6246C", Offset = "0x1D6246C", VA = "0x1D6246C", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x1D625D0", Offset = "0x1D625D0", VA = "0x1D625D0")]
	public Texture[] GetIconosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x1D627C4", Offset = "0x1D627C4", VA = "0x1D627C4", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x1D62BF8", Offset = "0x1D62BF8", VA = "0x1D62BF8")]
	public int GetEstadoEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x1D62C28", Offset = "0x1D62C28", VA = "0x1D62C28")]
	public void GolpeoEscudo(int numGolpes = 1)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x1D63144", Offset = "0x1D63144", VA = "0x1D63144")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A406C", Offset = "0x8A406C")]
	private IEnumerator PonerEscudoVertexOffseetInicio()
	{
		return null;
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x1D62FF0", Offset = "0x1D62FF0", VA = "0x1D62FF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A411C", Offset = "0x8A411C")]
	private IEnumerator ReiniciarNumeroDisparosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x1D63290", Offset = "0x1D63290", VA = "0x1D63290", Slot = "12")]
	public override void PonerEscudo()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x1D636A8", Offset = "0x1D636A8", VA = "0x1D636A8", Slot = "13")]
	public override void QuitarEscudo()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x1D63858", Offset = "0x1D63858", VA = "0x1D63858", Slot = "14")]
	public override int TieneEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x1D62B3C", Offset = "0x1D62B3C", VA = "0x1D62B3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A41CC", Offset = "0x8A41CC")]
	private IEnumerator TiempoPoderGolpear()
	{
		return null;
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x1D630AC", Offset = "0x1D630AC", VA = "0x1D630AC")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x1D638D0", Offset = "0x1D638D0", VA = "0x1D638D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A427C", Offset = "0x8A427C")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x1D639D4", Offset = "0x1D639D4", VA = "0x1D639D4", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x1D63E70", Offset = "0x1D63E70", VA = "0x1D63E70", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A432C", Offset = "0x8A432C")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x1D63F74", Offset = "0x1D63F74", VA = "0x1D63F74")]
	private void InvocarEsfera(int nivel)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x1D64498", Offset = "0x1D64498", VA = "0x1D64498")]
	private void ActivarRotacionOjo()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x1D644E0", Offset = "0x1D644E0", VA = "0x1D644E0")]
	private void DesactivarRotacionOjo()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x1D65004", Offset = "0x1D65004", VA = "0x1D65004")]
	private void DesactivarRotacionOjoLaser()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x1D65064", Offset = "0x1D65064", VA = "0x1D65064")]
	private void PonerModoMovimiento()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x1D650D8", Offset = "0x1D650D8", VA = "0x1D650D8")]
	private void MArcarEsferasRondasInvocadas()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x1D65408", Offset = "0x1D65408", VA = "0x1D65408", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x1D65698", Offset = "0x1D65698", VA = "0x1D65698")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x1D6632C", Offset = "0x1D6632C", VA = "0x1D6632C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x1D66984", Offset = "0x1D66984", VA = "0x1D66984", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1D66E48", Offset = "0x1D66E48", VA = "0x1D66E48", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x1D66EF0", Offset = "0x1D66EF0", VA = "0x1D66EF0")]
	private void QuitarInvunerable()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x1D66F20", Offset = "0x1D66F20", VA = "0x1D66F20")]
	public void EnableLaserOnline(bool enabled)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x1D66F8C", Offset = "0x1D66F8C", VA = "0x1D66F8C")]
	public BossLaser()
	{
	}
}
[Token(Token = "0x2000166")]
public class BossMina : BossBase
{
	[Token(Token = "0x2000514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F884", Offset = "0x87F884")]
	private sealed class <TiempoPoderGolpear>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float tiempo;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1243")]
		public BossMina <>4__this;

		[Token(Token = "0x1700037E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002379")]
			[Address(RVA = "0x14AA748", Offset = "0x14AA748", VA = "0x14AA748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600237B")]
			[Address(RVA = "0x14AA818", Offset = "0x14AA818", VA = "0x14AA818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x14AA438", Offset = "0x14AA438", VA = "0x14AA438")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x14AA480", Offset = "0x14AA480", VA = "0x14AA480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x14AA494", Offset = "0x14AA494", VA = "0x14AA494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x14AA778", Offset = "0x14AA778", VA = "0x14AA778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000515")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F8C0", Offset = "0x87F8C0")]
	private sealed class <PonerEscudoVertexOffseetInicio>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1414")]
		private object <>2__current;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossMina <>4__this;

		[Token(Token = "0x17000380")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600237F")]
			[Address(RVA = "0x14AA338", Offset = "0x14AA338", VA = "0x14AA338", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000381")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002381")]
			[Address(RVA = "0x14AA408", Offset = "0x14AA408", VA = "0x14AA408", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x14AA0C4", Offset = "0x14AA0C4", VA = "0x14AA0C4")]
		[DebuggerHidden]
		public <PonerEscudoVertexOffseetInicio>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x14AA10C", Offset = "0x14AA10C", VA = "0x14AA10C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x14AA120", Offset = "0x14AA120", VA = "0x14AA120", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x14AA368", Offset = "0x14AA368", VA = "0x14AA368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F8FC", Offset = "0x87F8FC")]
	private sealed class <CorrutinaDestruirEscudo>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124B")]
		public BossMina <>4__this;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private float <i>5__2;

		[Token(Token = "0x17000382")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002385")]
			[Address(RVA = "0x14A9FC4", Offset = "0x14A9FC4", VA = "0x14A9FC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002387")]
			[Address(RVA = "0x14AA094", Offset = "0x14AA094", VA = "0x14AA094", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x14A985C", Offset = "0x14A985C", VA = "0x14A985C")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x14A98A4", Offset = "0x14A98A4", VA = "0x14A98A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x14A98B8", Offset = "0x14A98B8", VA = "0x14A98B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x14A9FF4", Offset = "0x14A9FF4", VA = "0x14A9FF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F938", Offset = "0x87F938")]
	private sealed class <AnimacionMorir>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1424")]
		private int <>1__state;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossMina <>4__this;

		[Token(Token = "0x17000384")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600238B")]
			[Address(RVA = "0x1D706FC", Offset = "0x1D706FC", VA = "0x1D706FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0x1D707CC", Offset = "0x1D707CC", VA = "0x1D707CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x1D6E35C", Offset = "0x1D6E35C", VA = "0x1D6E35C")]
		[DebuggerHidden]
		public <AnimacionMorir>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x1D6FB0C", Offset = "0x1D6FB0C", VA = "0x1D6FB0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x1D6FB20", Offset = "0x1D6FB20", VA = "0x1D6FB20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x1D7072C", Offset = "0x1D7072C", VA = "0x1D7072C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1213")]
	private bool escudoActivo;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int vecesEscudoDestruido;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B13B4")]
	public int golpesPorFase;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject esferaSpawn;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform bossMesh;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121B")]
	[HideInInspector]
	public Texture iconosEscudos;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Rigidbody rb;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B13C4")]
	public SphereCollider[] colider;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer mesh;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posInicio;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform puntoSpawn;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1223")]
	private Animator anim;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool invocarEsferas;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B13D4")]
	private bool esferasInvocadas;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool ponerEscudo;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject bossGolpeado;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x122B")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool enAnimacion;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B13E4")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool yaEstanMuertos;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine reiniciarNumeroDisparos;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool poderGolpear;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1233")]
	private Vector3 nevaEscala;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B13F4")]
	private Texture noiseEscudo;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int nivelMina;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int contadorEsferas;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool esferasRondaInvocadas;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x123B")]
	private int animMovimiento;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool risa;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1404")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x1D691B8", Offset = "0x1D691B8", VA = "0x1D691B8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x1D69688", Offset = "0x1D69688", VA = "0x1D69688")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x1D6B620", Offset = "0x1D6B620", VA = "0x1D6B620")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x1D6B6D8", Offset = "0x1D6B6D8", VA = "0x1D6B6D8")]
	private void CambiarFaseAInvulnerable()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x1D6B7A0", Offset = "0x1D6B7A0", VA = "0x1D6B7A0")]
	private void DesactivarAnimator()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x1D6B7F8", Offset = "0x1D6B7F8", VA = "0x1D6B7F8")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x1D6B910", Offset = "0x1D6B910", VA = "0x1D6B910")]
	private void CambiarFaseAInvocar()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x1D6BB2C", Offset = "0x1D6BB2C", VA = "0x1D6BB2C")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x1D6BBC0", Offset = "0x1D6BBC0", VA = "0x1D6BBC0", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x1D6BCAC", Offset = "0x1D6BCAC", VA = "0x1D6BCAC")]
	public Texture GetIconosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x1D6BD40", Offset = "0x1D6BD40", VA = "0x1D6BD40")]
	public int GetEstadoEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x1D6BD70", Offset = "0x1D6BD70", VA = "0x1D6BD70")]
	public void GolpeoEscudo(int numGolpes = 1)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x1D6BF70", Offset = "0x1D6BF70", VA = "0x1D6BF70", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x1D6C5A4", Offset = "0x1D6C5A4", VA = "0x1D6C5A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A43DC", Offset = "0x8A43DC")]
	private IEnumerator TiempoPoderGolpear(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x1D6C688", Offset = "0x1D6C688", VA = "0x1D6C688")]
	private void FinalAnimacion(float scala)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x1D6B980", Offset = "0x1D6B980", VA = "0x1D6B980")]
	private void LlamarAInvocarEsfera()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x1D6C82C", Offset = "0x1D6C82C", VA = "0x1D6C82C")]
	private void FinalizarInvocarEsferas()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x1D6C8D8", Offset = "0x1D6C8D8", VA = "0x1D6C8D8")]
	private void PonerTiempoParado()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x1D6C978", Offset = "0x1D6C978", VA = "0x1D6C978", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x1D6C9B0", Offset = "0x1D6C9B0", VA = "0x1D6C9B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A448C", Offset = "0x8A448C")]
	private IEnumerator PonerEscudoVertexOffseetInicio()
	{
		return null;
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x1D6BED8", Offset = "0x1D6BED8", VA = "0x1D6BED8")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x1D6CA6C", Offset = "0x1D6CA6C", VA = "0x1D6CA6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A453C", Offset = "0x8A453C")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x1D6CB28", Offset = "0x1D6CB28", VA = "0x1D6CB28", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x1D6CFC4", Offset = "0x1D6CFC4", VA = "0x1D6CFC4", Slot = "12")]
	public override void PonerEscudo()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x1D6D484", Offset = "0x1D6D484", VA = "0x1D6D484", Slot = "13")]
	public override void QuitarEscudo()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x1D6D634", Offset = "0x1D6D634", VA = "0x1D6D634", Slot = "14")]
	public override int TieneEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x1D6D664", Offset = "0x1D6D664", VA = "0x1D6D664")]
	private void InvocarEsfera(int nivel)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x1D6DF70", Offset = "0x1D6DF70", VA = "0x1D6DF70")]
	private void MArcarEsferasRondasInvocadas()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x1D6E2A0", Offset = "0x1D6E2A0", VA = "0x1D6E2A0", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A45EC", Offset = "0x8A45EC")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x1D6E3A4", Offset = "0x1D6E3A4", VA = "0x1D6E3A4")]
	private void SeleccionarMovimientoBoss()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x1D6E56C", Offset = "0x1D6E56C", VA = "0x1D6E56C", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x1D6E7FC", Offset = "0x1D6E7FC", VA = "0x1D6E7FC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x1D6F050", Offset = "0x1D6F050", VA = "0x1D6F050")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x1D6F648", Offset = "0x1D6F648", VA = "0x1D6F648", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x1D6FAB0", Offset = "0x1D6FAB0", VA = "0x1D6FAB0")]
	public BossMina()
	{
	}
}
[Token(Token = "0x2000167")]
public class BossOjoDebil : BossBase
{
	[Token(Token = "0x2000518")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F974", Offset = "0x87F974")]
	private sealed class <PonerEscudoVertexOffseetInicio>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1283")]
		private int <>1__state;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1494")]
		public BossOjoDebil <>4__this;

		[Token(Token = "0x17000386")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0x14B1580", Offset = "0x14B1580", VA = "0x14B1580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0x14B1650", Offset = "0x14B1650", VA = "0x14B1650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x14AD534", Offset = "0x14AD534", VA = "0x14AD534")]
		[DebuggerHidden]
		public <PonerEscudoVertexOffseetInicio>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x14B1354", Offset = "0x14B1354", VA = "0x14B1354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x14B1368", Offset = "0x14B1368", VA = "0x14B1368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x14B15B0", Offset = "0x14B15B0", VA = "0x14B15B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000519")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F9B0", Offset = "0x87F9B0")]
	private sealed class <TiempoPoderGolpear>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossOjoDebil <>4__this;

		[Token(Token = "0x17000388")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002397")]
			[Address(RVA = "0x14B18D8", Offset = "0x14B18D8", VA = "0x14B18D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000389")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002399")]
			[Address(RVA = "0x14B19A8", Offset = "0x14B19A8", VA = "0x14B19A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x14AD57C", Offset = "0x14AD57C", VA = "0x14AD57C")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x14B1680", Offset = "0x14B1680", VA = "0x14B1680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x14B1694", Offset = "0x14B1694", VA = "0x14B1694", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x14B1908", Offset = "0x14B1908", VA = "0x14B1908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F9EC", Offset = "0x87F9EC")]
	private sealed class <CorrutinaDestruirEscudo>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128B")]
		private int <>1__state;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B14A4")]
		public BossOjoDebil <>4__this;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <i>5__2;

		[Token(Token = "0x1700038A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600239D")]
			[Address(RVA = "0x14B1254", Offset = "0x14B1254", VA = "0x14B1254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600239F")]
			[Address(RVA = "0x14B1324", Offset = "0x14B1324", VA = "0x14B1324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x14AD718", Offset = "0x14AD718", VA = "0x14AD718")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x14B0BB0", Offset = "0x14B0BB0", VA = "0x14B0BB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x14B0BC4", Offset = "0x14B0BC4", VA = "0x14B0BC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x14B1284", Offset = "0x14B1284", VA = "0x14B1284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FA28", Offset = "0x87FA28")]
	private sealed class <AnimacionMorir>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1293")]
		public BossOjoDebil <>4__this;

		[Token(Token = "0x1700038C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x14B0AB0", Offset = "0x14B0AB0", VA = "0x14B0AB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x14B0B80", Offset = "0x14B0B80", VA = "0x14B0B80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x14ADCB8", Offset = "0x14ADCB8", VA = "0x14ADCB8")]
		[DebuggerHidden]
		public <AnimacionMorir>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x14AFD94", Offset = "0x14AFD94", VA = "0x14AFD94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x14AFDA8", Offset = "0x14AFDA8", VA = "0x14AFDA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x14B0AE0", Offset = "0x14B0AE0", VA = "0x14B0AE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 velocidadSinTrucar;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1253")]
	public Vector3 newScale;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float vel;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1434")]
	public float velBoss;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float porcentaje;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 dir;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool escudoActivo;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x125B")]
	public int VecesGolpeado;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int golpesEnFase;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1444")]
	public GameObject esferaSpawn;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform bossMesh;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rigidbody rb;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SphereCollider[] colider;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1263")]
	public MeshRenderer mesh;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1454")]
	public GameObject bossGolpeado;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator anim;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform puntoSpawn;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int animMovimiento;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x126B")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private SphereCollider[] colidersBoss;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1464")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool risa;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarLasTorretas;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1273")]
	private bool modoLaser;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool yaEstanMuertos;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1474")]
	private Vector3 ultimoTamaño;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool poderGolpear;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Texture noiseEscudo;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x127B")]
	private List<EsferaScript> poolEsferasNegras;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool esferasRondaInvocadas;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1484")]
	private bool poderGirarOjo;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool giradoDeOjoLaser;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posicionEnMomentoDeActivar;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x14AA848", Offset = "0x14AA848", VA = "0x14AA848", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x14AADD0", Offset = "0x14AADD0", VA = "0x14AADD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x14AC6F0", Offset = "0x14AC6F0", VA = "0x14AC6F0")]
	public void CambiarTamañoEnd()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x14AC768", Offset = "0x14AC768", VA = "0x14AC768")]
	public void CambiarTamañoStart()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x14AC8E4", Offset = "0x14AC8E4", VA = "0x14AC8E4")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x14AC53C", Offset = "0x14AC53C", VA = "0x14AC53C")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x14ACB44", Offset = "0x14ACB44", VA = "0x14ACB44")]
	private void CambiarMaterial(int estado)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x14ACC34", Offset = "0x14ACC34", VA = "0x14ACC34")]
	private void CambiarFaseAInvulnerable()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x14ACDC4", Offset = "0x14ACDC4", VA = "0x14ACDC4")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x14AC97C", Offset = "0x14AC97C", VA = "0x14AC97C")]
	private void SeleccionarMovimientoBoss()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x14ACF7C", Offset = "0x14ACF7C", VA = "0x14ACF7C", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x14ACFAC", Offset = "0x14ACFAC", VA = "0x14ACFAC")]
	public void CambiarMaterialOnline(bool enabled)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x14AD060", Offset = "0x14AD060", VA = "0x14AD060", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x14AD478", Offset = "0x14AD478", VA = "0x14AD478")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A469C", Offset = "0x8A469C")]
	private IEnumerator PonerEscudoVertexOffseetInicio()
	{
		return null;
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x14AD3BC", Offset = "0x14AD3BC", VA = "0x14AD3BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A474C", Offset = "0x8A474C")]
	private IEnumerator TiempoPoderGolpear()
	{
		return null;
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x14AD5C4", Offset = "0x14AD5C4", VA = "0x14AD5C4")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x14AD65C", Offset = "0x14AD65C", VA = "0x14AD65C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A47FC", Offset = "0x8A47FC")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x14AD760", Offset = "0x14AD760", VA = "0x14AD760", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x14ADBFC", Offset = "0x14ADBFC", VA = "0x14ADBFC", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A48AC", Offset = "0x8A48AC")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x14ADD00", Offset = "0x14ADD00", VA = "0x14ADD00")]
	private void InvocarEsfera(int nivel)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x14AE210", Offset = "0x14AE210", VA = "0x14AE210")]
	private void ActivarRotacionOjo()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x14AE240", Offset = "0x14AE240", VA = "0x14AE240")]
	private void DesactivarRotacionOjo()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x14AE348", Offset = "0x14AE348", VA = "0x14AE348")]
	private void DesactivarRotacionOjoLaser()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x14AE390", Offset = "0x14AE390", VA = "0x14AE390")]
	private void PonerModoMovimiento()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x14AE404", Offset = "0x14AE404", VA = "0x14AE404")]
	private void MArcarEsferasRondasInvocadas()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x14AE434", Offset = "0x14AE434", VA = "0x14AE434", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x14AE6C4", Offset = "0x14AE6C4", VA = "0x14AE6C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x14AF1C0", Offset = "0x14AF1C0", VA = "0x14AF1C0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x14AF3E0", Offset = "0x14AF3E0", VA = "0x14AF3E0", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x14AF8A4", Offset = "0x14AF8A4", VA = "0x14AF8A4", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x14AF94C", Offset = "0x14AF94C", VA = "0x14AF94C")]
	private void QuitarInvunerable()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x14AF97C", Offset = "0x14AF97C", VA = "0x14AF97C", Slot = "12")]
	public override void PonerEscudo()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x14AFA00", Offset = "0x14AFA00", VA = "0x14AFA00", Slot = "13")]
	public override void QuitarEscudo()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x14AFBB0", Offset = "0x14AFBB0", VA = "0x14AFBB0", Slot = "14")]
	public override int TieneEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x14AFBE0", Offset = "0x14AFBE0", VA = "0x14AFBE0")]
	public BossOjoDebil()
	{
	}
}
[Token(Token = "0x2000168")]
public class BossSatelites : BossBase
{
	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FA64", Offset = "0x87FA64")]
	private sealed class <PonerEscudoVertexOffseetInicio>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12CB")]
		public BossSatelites <>4__this;

		[Token(Token = "0x1700038E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x14B8DF0", Offset = "0x14B8DF0", VA = "0x14B8DF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x14B8EC0", Offset = "0x14B8EC0", VA = "0x14B8EC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x14B4D90", Offset = "0x14B4D90", VA = "0x14B4D90")]
		[DebuggerHidden]
		public <PonerEscudoVertexOffseetInicio>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x14B8BC4", Offset = "0x14B8BC4", VA = "0x14B8BC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x14B8BD8", Offset = "0x14B8BD8", VA = "0x14B8BD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x14B8E20", Offset = "0x14B8E20", VA = "0x14B8E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FAA0", Offset = "0x87FAA0")]
	private sealed class <TiempoPoderGolpear>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1524")]
		private object <>2__current;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossSatelites <>4__this;

		[Token(Token = "0x17000390")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023AF")]
			[Address(RVA = "0x14B9148", Offset = "0x14B9148", VA = "0x14B9148", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023B1")]
			[Address(RVA = "0x14B9218", Offset = "0x14B9218", VA = "0x14B9218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x14B4DD8", Offset = "0x14B4DD8", VA = "0x14B4DD8")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x14B8EF0", Offset = "0x14B8EF0", VA = "0x14B8EF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x14B8F04", Offset = "0x14B8F04", VA = "0x14B8F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x14B9178", Offset = "0x14B9178", VA = "0x14B9178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FADC", Offset = "0x87FADC")]
	private sealed class <CorrutinaDestruirEscudo>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D3")]
		public BossSatelites <>4__this;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private float <i>5__2;

		[Token(Token = "0x17000392")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023B5")]
			[Address(RVA = "0x14B8AC4", Offset = "0x14B8AC4", VA = "0x14B8AC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0x14B8B94", Offset = "0x14B8B94", VA = "0x14B8B94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x14B4F74", Offset = "0x14B4F74", VA = "0x14B4F74")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x14B8420", Offset = "0x14B8420", VA = "0x14B8420", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x14B8434", Offset = "0x14B8434", VA = "0x14B8434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x14B8AF4", Offset = "0x14B8AF4", VA = "0x14B8AF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FB18", Offset = "0x87FB18")]
	private sealed class <AnimacionMorir>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1534")]
		private int <>1__state;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossSatelites <>4__this;

		[Token(Token = "0x17000394")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023BB")]
			[Address(RVA = "0x14B8320", Offset = "0x14B8320", VA = "0x14B8320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x14B83F0", Offset = "0x14B83F0", VA = "0x14B83F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x14B5514", Offset = "0x14B5514", VA = "0x14B5514")]
		[DebuggerHidden]
		public <AnimacionMorir>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x14B7604", Offset = "0x14B7604", VA = "0x14B7604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x14B7618", Offset = "0x14B7618", VA = "0x14B7618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x14B8350", Offset = "0x14B8350", VA = "0x14B8350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 velocidadSinTrucar;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B14B4")]
	public Vector3 newScale;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float vel;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float velBoss;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float porcentaje;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129B")]
	public Vector3 dir;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool escudoActivo;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B14C4")]
	public int VecesGolpeado;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int golpesEnFase;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject esferaSpawn;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform bossMesh;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A3")]
	private Rigidbody rb;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public SphereCollider[] colider;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B14D4")]
	public MeshRenderer mesh;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject bossGolpeado;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator anim;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12AB")]
	public Transform puntoSpawn;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int animMovimiento;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B14E4")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SphereCollider[] colidersBoss;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] referenciaEsferasTorretas;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] esferasTorretas;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12B3")]
	public List<esferaTorreta> esferasTorreta;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B14F4")]
	private bool risa;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarLasTorretas;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool modoLaser;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12BB")]
	private bool yaEstanMuertos;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool poderGolpear;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1504")]
	private Texture noiseEscudo;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<EsferaScript> poolEsferasNegras;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool esferasRondaInvocadas;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C3")]
	private bool poderGirarOjo;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool giradoDeOjoLaser;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1514")]
	private Vector3 posicionEnMomentoDeActivar;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x14B19D8", Offset = "0x14B19D8", VA = "0x14B19D8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x14B2988", Offset = "0x14B2988", VA = "0x14B2988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x14B3D58", Offset = "0x14B3D58", VA = "0x14B3D58")]
	public void DispararTorretasActivas()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x14B3EA8", Offset = "0x14B3EA8", VA = "0x14B3EA8")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x14B3EEC", Offset = "0x14B3EEC", VA = "0x14B3EEC")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x14B405C", Offset = "0x14B405C", VA = "0x14B405C")]
	private void CambiarFaseAInvulnerable()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x14B41B0", Offset = "0x14B41B0", VA = "0x14B41B0")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x14B4324", Offset = "0x14B4324", VA = "0x14B4324", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x14B1F74", Offset = "0x14B1F74", VA = "0x14B1F74")]
	public void prepararEsferasTorretaFaseBoss(int fase)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x14B4354", Offset = "0x14B4354", VA = "0x14B4354")]
	public void EliminarEsfera(esferaTorreta esfera)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x14B4450", Offset = "0x14B4450", VA = "0x14B4450")]
	public void DispararTorretas(int torreta)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x14B46A4", Offset = "0x14B46A4", VA = "0x14B46A4")]
	public void EncenderTorretas()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x14B48A0", Offset = "0x14B48A0", VA = "0x14B48A0", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x14B4CD4", Offset = "0x14B4CD4", VA = "0x14B4CD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A495C", Offset = "0x8A495C")]
	private IEnumerator PonerEscudoVertexOffseetInicio()
	{
		return null;
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x14B4C18", Offset = "0x14B4C18", VA = "0x14B4C18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A4A0C", Offset = "0x8A4A0C")]
	private IEnumerator TiempoPoderGolpear()
	{
		return null;
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x14B4E20", Offset = "0x14B4E20", VA = "0x14B4E20")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x14B4EB8", Offset = "0x14B4EB8", VA = "0x14B4EB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A4ABC", Offset = "0x8A4ABC")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x14B4FBC", Offset = "0x14B4FBC", VA = "0x14B4FBC", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x14B5458", Offset = "0x14B5458", VA = "0x14B5458", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A4B6C", Offset = "0x8A4B6C")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x14B555C", Offset = "0x14B555C", VA = "0x14B555C")]
	private void InvocarEsfera(int nivel)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x14B5A6C", Offset = "0x14B5A6C", VA = "0x14B5A6C")]
	private void ActivarRotacionOjo()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x14B5A9C", Offset = "0x14B5A9C", VA = "0x14B5A9C")]
	private void DesactivarRotacionOjo()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x14B5BA4", Offset = "0x14B5BA4", VA = "0x14B5BA4")]
	private void DesactivarRotacionOjoLaser()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x14B5BEC", Offset = "0x14B5BEC", VA = "0x14B5BEC")]
	private void PonerModoMovimiento()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x14B5C60", Offset = "0x14B5C60", VA = "0x14B5C60")]
	private void MArcarEsferasRondasInvocadas()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x14B5C90", Offset = "0x14B5C90", VA = "0x14B5C90", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x14B5F20", Offset = "0x14B5F20", VA = "0x14B5F20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x14B6928", Offset = "0x14B6928", VA = "0x14B6928")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x14B6AC8", Offset = "0x14B6AC8", VA = "0x14B6AC8", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x14B6F8C", Offset = "0x14B6F8C", VA = "0x14B6F8C", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x14B7034", Offset = "0x14B7034", VA = "0x14B7034")]
	private void QuitarInvunerable()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x14B7064", Offset = "0x14B7064", VA = "0x14B7064", Slot = "12")]
	public override void PonerEscudo()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x14B7094", Offset = "0x14B7094", VA = "0x14B7094", Slot = "13")]
	public override void QuitarEscudo()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x14B7244", Offset = "0x14B7244", VA = "0x14B7244", Slot = "14")]
	public override int TieneEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x14B7274", Offset = "0x14B7274", VA = "0x14B7274")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x14B7488", Offset = "0x14B7488", VA = "0x14B7488")]
	public BossSatelites()
	{
	}
}
[Token(Token = "0x2000169")]
public class BossTeleport : BossBase
{
	[Token(Token = "0x2000520")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FB54", Offset = "0x87FB54")]
	private sealed class <PonerEscudoVertexOffseetInicio>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B15A4")]
		private int <>1__state;

		[Token(Token = "0x40027E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossTeleport <>4__this;

		[Token(Token = "0x17000396")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023C1")]
			[Address(RVA = "0x14C08A0", Offset = "0x14C08A0", VA = "0x14C08A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023C3")]
			[Address(RVA = "0x14C0970", Offset = "0x14C0970", VA = "0x14C0970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x14BC150", Offset = "0x14BC150", VA = "0x14BC150")]
		[DebuggerHidden]
		public <PonerEscudoVertexOffseetInicio>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x14C0674", Offset = "0x14C0674", VA = "0x14C0674", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x14C0688", Offset = "0x14C0688", VA = "0x14C0688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x14C08D0", Offset = "0x14C08D0", VA = "0x14C08D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000521")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FB90", Offset = "0x87FB90")]
	private sealed class <ReiniciarNumeroDisparosEscudo>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1313")]
		private object <>2__current;

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public BossTeleport <>4__this;

		[Token(Token = "0x17000398")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x14C0D10", Offset = "0x14C0D10", VA = "0x14C0D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x14C0DE0", Offset = "0x14C0DE0", VA = "0x14C0DE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x14BC198", Offset = "0x14BC198", VA = "0x14BC198")]
		[DebuggerHidden]
		public <ReiniciarNumeroDisparosEscudo>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x14C09A0", Offset = "0x14C09A0", VA = "0x14C09A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x14C09B4", Offset = "0x14C09B4", VA = "0x14C09B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x14C0D40", Offset = "0x14C0D40", VA = "0x14C0D40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000522")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FBCC", Offset = "0x87FBCC")]
	private sealed class <TiempoPoderGolpear>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B15B4")]
		private int <>1__state;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossTeleport <>4__this;

		[Token(Token = "0x1700039A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x14C1068", Offset = "0x14C1068", VA = "0x14C1068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x14C1138", Offset = "0x14C1138", VA = "0x14C1138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x14BC7E0", Offset = "0x14BC7E0", VA = "0x14BC7E0")]
		[DebuggerHidden]
		public <TiempoPoderGolpear>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x14C0E10", Offset = "0x14C0E10", VA = "0x14C0E10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x14C0E24", Offset = "0x14C0E24", VA = "0x14C0E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x14C1098", Offset = "0x14C1098", VA = "0x14C1098", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000523")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FC08", Offset = "0x87FC08")]
	private sealed class <CorrutinaDestruirEscudo>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131B")]
		private object <>2__current;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public BossTeleport <>4__this;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B15C4")]
		private float <i>5__2;

		[Token(Token = "0x1700039C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x14C0574", Offset = "0x14C0574", VA = "0x14C0574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023D5")]
			[Address(RVA = "0x14C0644", Offset = "0x14C0644", VA = "0x14C0644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x14BC8E4", Offset = "0x14BC8E4", VA = "0x14BC8E4")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x14BFED0", Offset = "0x14BFED0", VA = "0x14BFED0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x14BFEE4", Offset = "0x14BFEE4", VA = "0x14BFEE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x14C05A4", Offset = "0x14C05A4", VA = "0x14C05A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000524")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FC44", Offset = "0x87FC44")]
	private sealed class <AnimacionMorir>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BossTeleport <>4__this;

		[Token(Token = "0x1700039E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x14BFDD0", Offset = "0x14BFDD0", VA = "0x14BFDD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x14BFEA0", Offset = "0x14BFEA0", VA = "0x14BFEA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x14BCE90", Offset = "0x14BCE90", VA = "0x14BCE90")]
		[DebuggerHidden]
		public <AnimacionMorir>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x14BEEE4", Offset = "0x14BEEE4", VA = "0x14BEEE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x14BEEF8", Offset = "0x14BEEF8", VA = "0x14BEEF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x14BFE00", Offset = "0x14BFE00", VA = "0x14BFE00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 velocidadSinTrucar;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12DB")]
	public Vector3 newScale;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 dir;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1544")]
	private bool escudoActivo;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int VecesGolpeado;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int golpesEnFase;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject esferaSpawn;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12E3")]
	public Transform bossMesh;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Rigidbody rb;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1554")]
	public SphereCollider[] colider;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer mesh;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject bossGolpeado;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12EB")]
	private Animator anim;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform puntoSpawn;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1564")]
	private int animMovimiento;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture[] iconosEscudos;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool vengoDeZonaOscura;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12F3")]
	private bool risa;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool bossMejorado;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1574")]
	public float velocidadAnimaciones;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarLasTorretas;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaActivarEscudo;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool modoLaser;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12FB")]
	private bool yaEstanMuertos;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 ultimoTamaño;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1584")]
	private int rand;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool poderGolpear;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine reiniciarNumeroDisparos;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Texture noiseEscudo;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1303")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool escudoNegro;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1594")]
	private List<EsferaScript> poolEsferasNegras;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool esferasRondaInvocadas;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool poderGirarOjo;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool giradoDeOjoLaser;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130B")]
	private Vector3 posicionEnMomentoDeActivar;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x14B9248", Offset = "0x14B9248", VA = "0x14B9248", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x14B9900", Offset = "0x14B9900", VA = "0x14B9900")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x14BAC54", Offset = "0x14BAC54", VA = "0x14BAC54")]
	public void CambiarTamañoEnd()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x14BACCC", Offset = "0x14BACCC", VA = "0x14BACCC")]
	public void CambiarTamañoStart()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x14BAE48", Offset = "0x14BAE48", VA = "0x14BAE48")]
	private void CambiarFaseEIniciarBoss()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x14BAB40", Offset = "0x14BAB40", VA = "0x14BAB40")]
	private void CambiarFaseAVulnerable()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x14BB068", Offset = "0x14BB068", VA = "0x14BB068")]
	private void CambiarFaseAInvulnerable()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x14BB10C", Offset = "0x14BB10C", VA = "0x14BB10C")]
	private void CambiarFaseAMuerte()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x14BAEA0", Offset = "0x14BAEA0", VA = "0x14BAEA0")]
	private void SeleccionarMovimientoBoss()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x14BB1A4", Offset = "0x14BB1A4", VA = "0x14BB1A4")]
	private void SeleccionarPosisicionSpawn()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x14BB2D0", Offset = "0x14BB2D0", VA = "0x14BB2D0")]
	private void PonerPosicionACero()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x14BB378", Offset = "0x14BB378", VA = "0x14BB378")]
	private void CambiarAMovimentoSiTenemosEscudo()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x14BB3D0", Offset = "0x14BB3D0", VA = "0x14BB3D0", Slot = "5")]
	protected override void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x14BB534", Offset = "0x14BB534", VA = "0x14BB534")]
	public Texture[] GetIconosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x14BB728", Offset = "0x14BB728", VA = "0x14BB728", Slot = "7")]
	public override void GolpearBoss(int num)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x14BBB60", Offset = "0x14BBB60", VA = "0x14BBB60")]
	public int GetEstadoEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x14BBB90", Offset = "0x14BBB90", VA = "0x14BBB90")]
	public void GolpeoEscudo(int numGolpes = 1)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x14BC094", Offset = "0x14BC094", VA = "0x14BC094")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A4C1C", Offset = "0x8A4C1C")]
	private IEnumerator PonerEscudoVertexOffseetInicio()
	{
		return null;
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x14BBF28", Offset = "0x14BBF28", VA = "0x14BBF28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A4CCC", Offset = "0x8A4CCC")]
	private IEnumerator ReiniciarNumeroDisparosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x14BC1E0", Offset = "0x14BC1E0", VA = "0x14BC1E0", Slot = "12")]
	public override void PonerEscudo()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x14BC600", Offset = "0x14BC600", VA = "0x14BC600", Slot = "13")]
	public override void QuitarEscudo()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x14BC7B0", Offset = "0x14BC7B0", VA = "0x14BC7B0", Slot = "14")]
	public override int TieneEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x14BBAA4", Offset = "0x14BBAA4", VA = "0x14BBAA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A4D7C", Offset = "0x8A4D7C")]
	private IEnumerator TiempoPoderGolpear()
	{
		return null;
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x14BBFE4", Offset = "0x14BBFE4", VA = "0x14BBFE4")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x14BC828", Offset = "0x14BC828", VA = "0x14BC828")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A4E2C", Offset = "0x8A4E2C")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x14BC92C", Offset = "0x14BC92C", VA = "0x14BC92C", Slot = "11")]
	public override void PonerEscudoNegro()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x14BCDD4", Offset = "0x14BCDD4", VA = "0x14BCDD4", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A4EDC", Offset = "0x8A4EDC")]
	protected override IEnumerator AnimacionMorir()
	{
		return null;
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x14BCED8", Offset = "0x14BCED8", VA = "0x14BCED8")]
	private void InvocarEsfera(int nivel)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x14BD198", Offset = "0x14BD198", VA = "0x14BD198")]
	private void ActivarRotacionOjo()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x14BD1C8", Offset = "0x14BD1C8", VA = "0x14BD1C8")]
	private void DesactivarRotacionOjo()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x14BD2D0", Offset = "0x14BD2D0", VA = "0x14BD2D0")]
	private void DesactivarRotacionOjoLaser()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x14BD318", Offset = "0x14BD318", VA = "0x14BD318")]
	private void PonerModoMovimiento()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x14BD38C", Offset = "0x14BD38C", VA = "0x14BD38C")]
	private void MArcarEsferasRondasInvocadas()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x14BD3BC", Offset = "0x14BD3BC", VA = "0x14BD3BC", Slot = "6")]
	public override void Morir()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x14BD64C", Offset = "0x14BD64C", VA = "0x14BD64C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x14BE3D4", Offset = "0x14BE3D4", VA = "0x14BE3D4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x14BE788", Offset = "0x14BE788", VA = "0x14BE788", Slot = "10")]
	protected override void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x14BEC4C", Offset = "0x14BEC4C", VA = "0x14BEC4C", Slot = "8")]
	public override void InvocarEsferas(int numEsferas, int nivelEsferas)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x14BECF4", Offset = "0x14BECF4", VA = "0x14BECF4")]
	private void QuitarInvunerable()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x14BED24", Offset = "0x14BED24", VA = "0x14BED24")]
	public BossTeleport()
	{
	}
}
[Token(Token = "0x200016A")]
public class Boton : MonoBehaviour
{
	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1323")]
	public Ascensor ascensor;

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x14C1168", Offset = "0x14C1168", VA = "0x14C1168")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x14C1238", Offset = "0x14C1238", VA = "0x14C1238")]
	private void ActivarBoton()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x14C139C", Offset = "0x14C139C", VA = "0x14C139C")]
	public void DesactivarBoton()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x14C14A4", Offset = "0x14C14A4", VA = "0x14C14A4")]
	public Boton()
	{
	}
}
[Token(Token = "0x200016B")]
public class BotonInGame : BotonMenu
{
	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FC80", Offset = "0x87FC80")]
	private sealed class <Accion>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132B")]
		public BotonInGame <>4__this;

		[Token(Token = "0x170003A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023DF")]
			[Address(RVA = "0x14C1BFC", Offset = "0x14C1BFC", VA = "0x14C1BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023E1")]
			[Address(RVA = "0x14C1CCC", Offset = "0x14C1CCC", VA = "0x14C1CCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x14C15EC", Offset = "0x14C15EC", VA = "0x14C15EC")]
		[DebuggerHidden]
		public <Accion>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x14C19C8", Offset = "0x14C19C8", VA = "0x14C19C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x14C19DC", Offset = "0x14C19DC", VA = "0x14C19DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x14C1C2C", Offset = "0x14C1C2C", VA = "0x14C1C2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool botonesMute;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B15D4")]
	private Coroutine anim;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float antimonkey;

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x14C14D4", Offset = "0x14C14D4", VA = "0x14C14D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x14C14E8", Offset = "0x14C14E8", VA = "0x14C14E8", Slot = "5")]
	public override void AccionBoton()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x14C1530", Offset = "0x14C1530", VA = "0x14C1530")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A4F8C", Offset = "0x8A4F8C")]
	private IEnumerator Accion()
	{
		return null;
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x14C1634", Offset = "0x14C1634", VA = "0x14C1634")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x14C17E0", Offset = "0x14C17E0", VA = "0x14C17E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x14C1968", Offset = "0x14C1968", VA = "0x14C1968")]
	public BotonInGame()
	{
	}
}
[Token(Token = "0x200016C")]
public class BotonMenu : MonoBehaviour
{
	[Token(Token = "0x2000526")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FCBC", Offset = "0x87FCBC")]
	private sealed class <AnimacionSeleccion>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x133B")]
		public BotonMenu <>4__this;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private float <i>5__2;

		[Token(Token = "0x170003A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x14C2EFC", Offset = "0x14C2EFC", VA = "0x14C2EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023E7")]
			[Address(RVA = "0x14C2FCC", Offset = "0x14C2FCC", VA = "0x14C2FCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x14C2008", Offset = "0x14C2008", VA = "0x14C2008")]
		[DebuggerHidden]
		public <AnimacionSeleccion>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x14C2184", Offset = "0x14C2184", VA = "0x14C2184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x14C2198", Offset = "0x14C2198", VA = "0x14C2198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x14C2F2C", Offset = "0x14C2F2C", VA = "0x14C2F2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public UnityEvent accionBoton;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B15E4")]
	public AudioClip sonido;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected ControladorMenu m_controladorMenu;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool bloqueado;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject sinFoco;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1333")]
	public GameObject conFoco;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject bloqueo;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B15F4")]
	private Coroutine anim;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonDeCerrar;

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x14C1CFC", Offset = "0x14C1CFC", VA = "0x14C1CFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x14C1DB8", Offset = "0x14C1DB8", VA = "0x14C1DB8", Slot = "4")]
	public virtual void EjecutarAccion()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x14C1818", Offset = "0x14C1818", VA = "0x14C1818")]
	public void SetFoco(bool foco)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x14C1E00", Offset = "0x14C1E00", VA = "0x14C1E00", Slot = "5")]
	public virtual void AccionBoton()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x14C1F4C", Offset = "0x14C1F4C", VA = "0x14C1F4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A503C", Offset = "0x8A503C")]
	private IEnumerator AnimacionSeleccion()
	{
		return null;
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x14C2050", Offset = "0x14C2050", VA = "0x14C2050")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x14C20BC", Offset = "0x14C20BC", VA = "0x14C20BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x14C1998", Offset = "0x14C1998", VA = "0x14C1998")]
	public BotonMenu()
	{
	}
}
[Token(Token = "0x200016D")]
public class BotonNivel : BotonMenu
{
	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1604")]
	public AudioClip sonidoBlock;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int nivel;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine anim;

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x14C2FFC", Offset = "0x14C2FFC", VA = "0x14C2FFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x14C302C", Offset = "0x14C302C", VA = "0x14C302C")]
	private void VerSiEstaBloqueado()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x14C3394", Offset = "0x14C3394", VA = "0x14C3394", Slot = "5")]
	public override void AccionBoton()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x14C34A8", Offset = "0x14C34A8", VA = "0x14C34A8")]
	public BotonNivel()
	{
	}
}
[Token(Token = "0x200016E")]
public class BotonPais : BotonMenu
{
	[Token(Token = "0x2000527")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FCF8", Offset = "0x87FCF8")]
	private sealed class <AnimacionDesbloqueo>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134B")]
		private object <>2__current;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public BotonPais <>4__this;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1624")]
		private Image <candado>5__2;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Image <esfera>5__3;

		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Image <cuadrado>5__4;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color <colorCandado>5__5;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1353")]
		private Color <colorEsfera>5__6;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private Color <colorCuadrado>5__7;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1634")]
		private RectTransform <recTransformCandado>5__8;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__9;

		[Token(Token = "0x170003A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023EB")]
			[Address(RVA = "0x14C5010", Offset = "0x14C5010", VA = "0x14C5010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023ED")]
			[Address(RVA = "0x14C50E0", Offset = "0x14C50E0", VA = "0x14C50E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x14C435C", Offset = "0x14C435C", VA = "0x14C435C")]
		[DebuggerHidden]
		public <AnimacionDesbloqueo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x14C44E8", Offset = "0x14C44E8", VA = "0x14C44E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x14C44FC", Offset = "0x14C44FC", VA = "0x14C44FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x14C5040", Offset = "0x14C5040", VA = "0x14C5040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioClip sonidoBlock;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1343")]
	public AudioClip sonidoDesblock;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int pais;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1614")]
	public bool final;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject botonLeaderBoard;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine anim;

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x14C34D8", Offset = "0x14C34D8", VA = "0x14C34D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x14C3A60", Offset = "0x14C3A60", VA = "0x14C3A60")]
	private void VerSiEstaBloqueado()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x14C42A0", Offset = "0x14C42A0", VA = "0x14C42A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A50EC", Offset = "0x8A50EC")]
	private IEnumerator AnimacionDesbloqueo()
	{
		return null;
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x14C43A4", Offset = "0x14C43A4", VA = "0x14C43A4", Slot = "5")]
	public override void AccionBoton()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x14C44B8", Offset = "0x14C44B8", VA = "0x14C44B8")]
	public BotonPais()
	{
	}
}
[Token(Token = "0x200016F")]
public class CabezaRoomSccale : MonoBehaviour
{
	[Token(Token = "0x2000528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FD34", Offset = "0x87FD34")]
	private sealed class <EsperarAPlayer>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1654")]
		private int <>1__state;

		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CabezaRoomSccale <>4__this;

		[Token(Token = "0x170003A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023F1")]
			[Address(RVA = "0x14D3720", Offset = "0x14D3720", VA = "0x14D3720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023F3")]
			[Address(RVA = "0x14D37F0", Offset = "0x14D37F0", VA = "0x14D37F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x14D1D5C", Offset = "0x14D1D5C", VA = "0x14D1D5C")]
		[DebuggerHidden]
		public <EsperarAPlayer>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x14D3480", Offset = "0x14D3480", VA = "0x14D3480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x14D3494", Offset = "0x14D3494", VA = "0x14D3494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x14D3750", Offset = "0x14D3750", VA = "0x14D3750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000529")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FD70", Offset = "0x87FD70")]
	private sealed class <DesactivarEnXseg>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x136B")]
		private object <>2__current;

		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public CabezaRoomSccale <>4__this;

		[Token(Token = "0x170003A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023F7")]
			[Address(RVA = "0x14D3380", Offset = "0x14D3380", VA = "0x14D3380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023F9")]
			[Address(RVA = "0x14D3450", Offset = "0x14D3450", VA = "0x14D3450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x14D2DA4", Offset = "0x14D2DA4", VA = "0x14D2DA4")]
		[DebuggerHidden]
		public <DesactivarEnXseg>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x14D31A8", Offset = "0x14D31A8", VA = "0x14D31A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x14D31BC", Offset = "0x14D31BC", VA = "0x14D31BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x14D33B0", Offset = "0x14D33B0", VA = "0x14D33B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<Collider> estaDentroDeLosLimites;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool estaFuera;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x135B")]
	private Camera[] cams;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public LayerMask layerNormal;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1644")]
	public LayerMask layerLimites;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject cuboGrandeLimites;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject flecha;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pistolasFake;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1363")]
	private float ticksSinDesactivar;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject ColliderHabitacion;

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x14D1934", Offset = "0x14D1934", VA = "0x14D1934")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x14D1BC8", Offset = "0x14D1BC8", VA = "0x14D1BC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x14D1B0C", Offset = "0x14D1B0C", VA = "0x14D1B0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A519C", Offset = "0x8A519C")]
	private IEnumerator EsperarAPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x14D1DA4", Offset = "0x14D1DA4", VA = "0x14D1DA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x14D1E48", Offset = "0x14D1E48", VA = "0x14D1E48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x14D258C", Offset = "0x14D258C", VA = "0x14D258C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x14D2B94", Offset = "0x14D2B94", VA = "0x14D2B94")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x14D2C88", Offset = "0x14D2C88", VA = "0x14D2C88")]
	public void DesactivarLimite()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x14D2CE8", Offset = "0x14D2CE8", VA = "0x14D2CE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A524C", Offset = "0x8A524C")]
	private IEnumerator DesactivarEnXseg()
	{
		return null;
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x14D1F8C", Offset = "0x14D1F8C", VA = "0x14D1F8C")]
	private void ActivarFueraDeLimites()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x14D27B4", Offset = "0x14D27B4", VA = "0x14D27B4")]
	public void DesactivarFueraDeLimites()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x14D2DEC", Offset = "0x14D2DEC", VA = "0x14D2DEC")]
	public void DesactivarActivarColliderHabitacion(bool accion)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x14D3014", Offset = "0x14D3014", VA = "0x14D3014")]
	public void ComprobarSiEstaDentro()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x14D30F0", Offset = "0x14D30F0", VA = "0x14D30F0")]
	public CabezaRoomSccale()
	{
	}
}
[Token(Token = "0x2000170")]
public class CalidadManager : MonoBehaviour
{
	[Token(Token = "0x200052A")]
	public enum Calidad
	{
		[Token(Token = "0x400280C")]
		Baja,
		[Token(Token = "0x400280D")]
		Normal,
		[Token(Token = "0x400280E")]
		Alta
	}

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1664")]
	public Calidad calidadActual;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CalidadManager instance;

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x14D3820", Offset = "0x14D3820", VA = "0x14D3820")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x14D390C", Offset = "0x14D390C", VA = "0x14D390C")]
	public Calidad GetCalidadRecomendada()
	{
		return default(Calidad);
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x14D397C", Offset = "0x14D397C", VA = "0x14D397C")]
	public Calidad GetCalidad()
	{
		return default(Calidad);
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x14D3928", Offset = "0x14D3928", VA = "0x14D3928")]
	public void SetCalidad(Calidad calidad)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x14D39AC", Offset = "0x14D39AC", VA = "0x14D39AC")]
	public void AplicarCalidad()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x14D3B70", Offset = "0x14D3B70", VA = "0x14D3B70")]
	public CalidadManager()
	{
	}
}
[Token(Token = "0x2000171")]
public class CamaraBlancoNegro : MonoBehaviour
{
	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1674")]
	private Material m_mat;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture m_overlay;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Shader m_shader;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Camera cam;

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x14D4C6C", Offset = "0x14D4C6C", VA = "0x14D4C6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x14D4D48", Offset = "0x14D4D48", VA = "0x14D4D48")]
	private void OnRenderImage(RenderTexture _src, RenderTexture _dest)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x14D4F88", Offset = "0x14D4F88", VA = "0x14D4F88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x14D5158", Offset = "0x14D5158", VA = "0x14D5158")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x14D4FB8", Offset = "0x14D4FB8", VA = "0x14D4FB8")]
	private void DestroyMaterial()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x14D5190", Offset = "0x14D5190", VA = "0x14D5190")]
	public void SetActivation(bool _enable)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x14D51E4", Offset = "0x14D51E4", VA = "0x14D51E4")]
	public CamaraBlancoNegro()
	{
	}
}
[Token(Token = "0x2000172")]
public class CambiarMaterial : MonoBehaviour
{
	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x14D5214", Offset = "0x14D5214", VA = "0x14D5214")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x14D5318", Offset = "0x14D5318", VA = "0x14D5318")]
	public CambiarMaterial()
	{
	}
}
[Token(Token = "0x2000173")]
public class CambiarMateriales : MonoBehaviour
{
	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x137B")]
	public Material low_mat;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public MeshRenderer renderer;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1684")]
	public CalidadManager.Calidad calidadMinima;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool cambiado;

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x14D5348", Offset = "0x14D5348", VA = "0x14D5348")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x14D5550", Offset = "0x14D5550", VA = "0x14D5550")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x14D5758", Offset = "0x14D5758", VA = "0x14D5758")]
	public CambiarMateriales()
	{
	}
}
[Token(Token = "0x2000174")]
public class Config : MonoBehaviour
{
	[Token(Token = "0x200052B")]
	public enum ModosDeJuego
	{
		[Token(Token = "0x4002810")]
		Offline,
		[Token(Token = "0x4002811")]
		Online,
		[Token(Token = "0x4002812")]
		menu
	}

	[Token(Token = "0x200052C")]
	public enum ModoDePartida
	{
		[Token(Token = "0x4002814")]
		Solo,
		[Token(Token = "0x4002815")]
		Cooperativo,
		[Token(Token = "0x4002816")]
		Competitivo
	}

	[Token(Token = "0x200052D")]
	public enum TipoControl
	{
		[Token(Token = "0x4002818")]
		UnaMano,
		[Token(Token = "0x4002819")]
		DosManos
	}

	[Token(Token = "0x200052E")]
	public enum PlataformaJuego
	{
		[Token(Token = "0x400281B")]
		SteamVR,
		[Token(Token = "0x400281C")]
		PS4,
		[Token(Token = "0x400281D")]
		Oculus,
		[Token(Token = "0x400281E")]
		Pico,
		[Token(Token = "0x400281F")]
		Nolo,
		[Token(Token = "0x4002820")]
		ninguna
	}

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlataformaJuego plataforma;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool versionConSteamCompletamenteAnulado;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1383")]
	public static bool verisionConOnlineCompletamenteAnulado;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static bool cooperativoAnuladoForzosamente;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1694")]
	public static bool arenaAnuladoForzosamente;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool modoDemo;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool esQuest;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool esGO;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138B")]
	public static string mundo;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static int numJugadoresOnline;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B16A4")]
	public static ModosDeJuego modoDeJuego;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ModoDePartida modoDePartida;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TipoControl tipoDeControl;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool tiene2Sensores;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1393")]
	public static bool zurdo;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static bool hayTracker;

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x1455C18", Offset = "0x1455C18", VA = "0x1455C18")]
	public static bool ModoCooperativo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x1455DFC", Offset = "0x1455DFC", VA = "0x1455DFC")]
	public Config()
	{
	}
}
[Token(Token = "0x2000175")]
public class ControlInfoServidor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200052F")]
	public struct InfoServidor
	{
		[Token(Token = "0x200079C")]
		public enum EstatusOnlineServer
		{
			[Token(Token = "0x4002DA4")]
			NoInicializado,
			[Token(Token = "0x4002DA5")]
			Offline,
			[Token(Token = "0x4002DA6")]
			Online
		}

		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EstatusOnlineServer estatusOnlineServer;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string infoStatusOnline;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int versionActual;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B3")]
		public int versionActualObligatoria;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public int versionQueHaPasadoRevision;
	}

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B16E4")]
	[HideInInspector]
	public UnityEvent onInfoConseguida;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEvent onInfoJugadoresOnlineConseguida;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEvent onImagenCargada;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEvent onPromocodeComprobado;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13B3")]
	private string[] serverData;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private string[] datosTorneoRaw;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B16F4")]
	private string[] datosNoticiaRaw;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string datosStatusOnlineRaw;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string[] datosVersionRaw;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool datosObtenidosOk;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13BB")]
	public InfoServidor infoServidor;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public string[] datosJugadoresOnline;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1704")]
	private float tiempoEntrePedidas;

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x1456034", Offset = "0x1456034", VA = "0x1456034")]
	private void CargarInfoDeArchivo()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x145622C", Offset = "0x145622C", VA = "0x145622C")]
	private void GuardarInfoEnArchivo()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x14563D0", Offset = "0x14563D0", VA = "0x14563D0")]
	private void DameStatusOnline()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x1456698", Offset = "0x1456698", VA = "0x1456698")]
	private void DameVersiones()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x1456880", Offset = "0x1456880", VA = "0x1456880")]
	public ControladorMenu.EstadoOnline DameEstadoOnline()
	{
		return default(ControladorMenu.EstadoOnline);
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x1456928", Offset = "0x1456928", VA = "0x1456928")]
	public ControlInfoServidor()
	{
	}
}
[Token(Token = "0x2000176")]
public class ControladorMano : MonoBehaviour
{
	[Token(Token = "0x2000530")]
	public enum ClipsAudioMano
	{
		[Token(Token = "0x4002827")]
		Lanzar,
		[Token(Token = "0x4002828")]
		Atraer,
		[Token(Token = "0x4002829")]
		Coger,
		[Token(Token = "0x400282A")]
		TransformarAGancho,
		[Token(Token = "0x400282B")]
		PowerUp,
		[Token(Token = "0x400282C")]
		TransformarAPistola,
		[Token(Token = "0x400282D")]
		Cont
	}

	[Token(Token = "0x2000531")]
	public enum EstadoDeLaMano
	{
		[Token(Token = "0x400282F")]
		EstadoInicialSinArma,
		[Token(Token = "0x4002830")]
		PistolaEnMano,
		[Token(Token = "0x4002831")]
		GanchoEnMano,
		[Token(Token = "0x4002832")]
		GanchoLanzandose,
		[Token(Token = "0x4002833")]
		GanchoPuedeRetornar,
		[Token(Token = "0x4002834")]
		GanchoVolviendo
	}

	[Token(Token = "0x2000532")]
	public enum Mano
	{
		[Token(Token = "0x4002836")]
		Derecha,
		[Token(Token = "0x4002837")]
		Izquierda
	}

	[Token(Token = "0x2000533")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FDAC", Offset = "0x87FDAC")]
	private sealed class <EsperarParaIniciarNivel>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControladorMano <>4__this;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1443")]
		private int <numJugadores>5__2;

		[Token(Token = "0x170003AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023FD")]
			[Address(RVA = "0x146CA54", Offset = "0x146CA54", VA = "0x146CA54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023FF")]
			[Address(RVA = "0x146CB24", Offset = "0x146CB24", VA = "0x146CB24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x14697EC", Offset = "0x14697EC", VA = "0x14697EC")]
		[DebuggerHidden]
		public <EsperarParaIniciarNivel>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x146C010", Offset = "0x146C010", VA = "0x146C010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x146C024", Offset = "0x146C024", VA = "0x146C024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x146CA84", Offset = "0x146CA84", VA = "0x146CA84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000534")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FDE8", Offset = "0x87FDE8")]
	private sealed class <BuscarEsferaMasCercana>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1814")]
		private object <>2__current;

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControladorMano <>4__this;

		[Token(Token = "0x170003AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002403")]
			[Address(RVA = "0x146BF10", Offset = "0x146BF10", VA = "0x146BF10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002405")]
			[Address(RVA = "0x146BFE0", Offset = "0x146BFE0", VA = "0x146BFE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x1469B94", Offset = "0x1469B94", VA = "0x1469B94")]
		[DebuggerHidden]
		public <BuscarEsferaMasCercana>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x146A9D0", Offset = "0x146A9D0", VA = "0x146A9D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x146A9E4", Offset = "0x146A9E4", VA = "0x146A9E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x146BF40", Offset = "0x146BF40", VA = "0x146BF40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000535")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FE24", Offset = "0x87FE24")]
	private sealed class <EsperarSegundosPrimerSonido>d__90 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144B")]
		public ControladorMano <>4__this;

		[Token(Token = "0x170003AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002409")]
			[Address(RVA = "0x146CD88", Offset = "0x146CD88", VA = "0x146CD88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600240B")]
			[Address(RVA = "0x146CE58", Offset = "0x146CE58", VA = "0x146CE58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x146A7A0", Offset = "0x146A7A0", VA = "0x146A7A0")]
		[DebuggerHidden]
		public <EsperarSegundosPrimerSonido>d__90(int <>1__state)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x146CB54", Offset = "0x146CB54", VA = "0x146CB54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x146CB68", Offset = "0x146CB68", VA = "0x146CB68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x146CDB8", Offset = "0x146CDB8", VA = "0x146CDB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13CB")]
	[HideInInspector]
	public InputsController inputs;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject arma;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1724")]
	public GameObject rifle;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject puntoPosicion;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject mano3D;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject handModel;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D3")]
	public GameObject laserModel;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private AudioClip[] audioClipsMano;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1734")]
	private AudioSource[] audioSources;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Arma armaScript;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool afectandoTiempo;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public ControladorMano otherHand;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13DB")]
	public float fuerzaAlLanzar;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Rigidbody weaponRb;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1744")]
	private Vector3[] posVector;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int pos;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimManos animManos;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimTransformPistola animWeapon;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13E3")]
	private float miValorTrigger;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float miValorGrip;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1754")]
	private float miValorVelocidadValido;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool bTriggerEstaAhoraPulsado;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool bTriggerDown;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool bTriggerUp;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13EB")]
	public bool bGripEstaAhoraPulsado;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool bGripDown;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1764")]
	public bool bGripUp;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool tirandoPorVelocidad;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 armaImpulsandose;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform flecha;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13F3")]
	private GameObject panelTutorial;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public LineRenderer laser;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1774")]
	public Transform laserDedo;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EstadoDeLaMano estadoDeLaMano;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Mano mano;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ManosRoomScale manoRoomScale;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13FB")]
	public Transform puntoDedo;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ControladorManoSecundariaRifle controladorManoSecundariaRifle;

	[Token(Token = "0x4000B17")]
	private const float VELOCIDAD_LANZAMIENTO = 2.5f;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private InputsController.TipoSensores tipoSensorEnStart;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private EstadoDeLaMano antiguoEstadoMano;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool disparar;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1403")]
	private bool dispararGancho;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float timeGancho;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1794")]
	private float timePistola;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool primerTriggerSoltado;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool acaboDeCambiarDeGanchoAPistola;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool forzarLanzar;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140B")]
	[HideInInspector]
	public bool cogidaConElGrip;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 velocidadMano;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B17A4")]
	private Vector3 posOldOld;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posOld;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool heHechoCAmbioDeArma;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float cooldownTiempoCambioConGripUnaMano;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1413")]
	private Vector3 primeraRotacionModelo3DMano;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 primeraPosicionModelo3DMano;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B17B4")]
	private float sumadorRotacionExtraGancho;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float sumadorPosicionExtraGancho;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tDeltaCambiarAGancho;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float ticksDesdeQueCojoArma;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141B")]
	private bool scalaModificada;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Coroutine buscarEsferaMasCercanaDerecha;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B17C4")]
	private Coroutine buscarEsferaMasCercanaIzquierda;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform esferaMasCercana;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshPro distancia;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool inmortal_DEBUG;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1423")]
	private bool mostrandoMensaje;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float tiempoEspera;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B17D4")]
	[HideInInspector]
	public ControladorSonidosMensajes audioSourcePanelChica;

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x145BA10", Offset = "0x145BA10", VA = "0x145BA10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x145D448", Offset = "0x145D448", VA = "0x145D448")]
	public float GetValorTrigger()
	{
		return default(float);
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x145D4FC", Offset = "0x145D4FC", VA = "0x145D4FC")]
	public float GetValorGrip()
	{
		return default(float);
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x145D5B0", Offset = "0x145D5B0", VA = "0x145D5B0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x145CDAC", Offset = "0x145CDAC", VA = "0x145CDAC")]
	public void CambiarEstadoMano(EstadoDeLaMano estadoNuevo)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x145DEE0", Offset = "0x145DEE0", VA = "0x145DEE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x14692F4", Offset = "0x14692F4", VA = "0x14692F4")]
	public void AtraerDesdeAire()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x146810C", Offset = "0x146810C", VA = "0x146810C")]
	public void Grab(GameObject objeto, bool inicio = false)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x1469730", Offset = "0x1469730", VA = "0x1469730")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A52FC", Offset = "0x8A52FC")]
	private IEnumerator EsperarParaIniciarNivel()
	{
		return null;
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x14679A8", Offset = "0x14679A8", VA = "0x14679A8")]
	public void Atraer(bool escudo = false)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x1465EE4", Offset = "0x1465EE4", VA = "0x1465EE4")]
	private void Throw(Vector3 velocidad)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1466ED0", Offset = "0x1466ED0", VA = "0x1466ED0")]
	private void ThrowByTrigger()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1469834", Offset = "0x1469834", VA = "0x1469834")]
	public void IniciarBusquedaEsferas()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x1469AD8", Offset = "0x1469AD8", VA = "0x1469AD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A53AC", Offset = "0x8A53AC")]
	private IEnumerator BuscarEsferaMasCercana()
	{
		return null;
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x1469BDC", Offset = "0x1469BDC", VA = "0x1469BDC")]
	public void PonerPistolaEnMano()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1465918", Offset = "0x1465918", VA = "0x1465918")]
	private void DEBUG()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x145D0B0", Offset = "0x145D0B0", VA = "0x145D0B0")]
	private void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x14674C0", Offset = "0x14674C0", VA = "0x14674C0")]
	public void PonerAudioEnAudioSource(ClipsAudioMano clipAudio)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x1469EE0", Offset = "0x1469EE0", VA = "0x1469EE0")]
	public void MostrarOcultarMensajeTrynity(bool estado, string mensaje, bool gatillo = true, bool mensajeIntermedio = false)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x146A6E4", Offset = "0x146A6E4", VA = "0x146A6E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A545C", Offset = "0x8A545C")]
	private IEnumerator EsperarSegundosPrimerSonido()
	{
		return null;
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x145D34C", Offset = "0x145D34C", VA = "0x145D34C")]
	private void CargarReferenciasPanelChica()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x146A7E8", Offset = "0x146A7E8", VA = "0x146A7E8")]
	public ControladorMano()
	{
	}
}
[Token(Token = "0x2000177")]
public class ControladorManoSecundariaRifle : MonoBehaviour
{
	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ControladorMano.Mano mano;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1824")]
	public bool anclada;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform empuñadura;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Rifle rifle;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform mano3dOtro;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1453")]
	public Transform mano3dMia;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform otraMano;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1834")]
	private Vector3 posRifleInicial;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 rotRifleInicial;

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x146CE88", Offset = "0x146CE88", VA = "0x146CE88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x146D14C", Offset = "0x146D14C", VA = "0x146D14C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x146D9F4", Offset = "0x146D9F4", VA = "0x146D9F4")]
	public void Anclar(bool valor)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x146E570", Offset = "0x146E570", VA = "0x146E570")]
	public ControladorManoSecundariaRifle()
	{
	}
}
[Token(Token = "0x2000178")]
public class ControladorMenu : MonoBehaviour
{
	[Token(Token = "0x2000536")]
	public enum PosicionEnMenu
	{
		[Token(Token = "0x4002843")]
		Inicio,
		[Token(Token = "0x4002844")]
		Opciones,
		[Token(Token = "0x4002845")]
		LeaderBoard,
		[Token(Token = "0x4002846")]
		Pais,
		[Token(Token = "0x4002847")]
		Nivel,
		[Token(Token = "0x4002848")]
		Historia,
		[Token(Token = "0x4002849")]
		Final,
		[Token(Token = "0x400284A")]
		Online,
		[Token(Token = "0x400284B")]
		InicioEleccionManos
	}

	[Token(Token = "0x2000537")]
	public enum PosicionEnMenuInicio
	{
		[Token(Token = "0x400284D")]
		Inicio,
		[Token(Token = "0x400284E")]
		Single,
		[Token(Token = "0x400284F")]
		Arena
	}

	[Token(Token = "0x2000538")]
	public enum EstadoOnline
	{
		[Token(Token = "0x4002851")]
		Activo,
		[Token(Token = "0x4002852")]
		ActualizacionNecesaria,
		[Token(Token = "0x4002853")]
		ServerOff
	}

	[Token(Token = "0x2000539")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FE60", Offset = "0x87FE60")]
	private sealed class <DesconectarPhotonCor>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149B")]
		private int <>1__state;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x170003B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600240F")]
			[Address(RVA = "0x1478C40", Offset = "0x1478C40", VA = "0x1478C40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002411")]
			[Address(RVA = "0x1478D10", Offset = "0x1478D10", VA = "0x1478D10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x1472878", Offset = "0x1472878", VA = "0x1472878")]
		[DebuggerHidden]
		public <DesconectarPhotonCor>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x14789A8", Offset = "0x14789A8", VA = "0x14789A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x14789BC", Offset = "0x14789BC", VA = "0x14789BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x1478C70", Offset = "0x1478C70", VA = "0x1478C70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FE9C", Offset = "0x87FE9C")]
	private sealed class <DesactivarCamaraOscura>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B18C4")]
		private int <>1__state;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x170003B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002415")]
			[Address(RVA = "0x14788A8", Offset = "0x14788A8", VA = "0x14788A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002417")]
			[Address(RVA = "0x1478978", Offset = "0x1478978", VA = "0x1478978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x14728C0", Offset = "0x14728C0", VA = "0x14728C0")]
		[DebuggerHidden]
		public <DesactivarCamaraOscura>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x1478504", Offset = "0x1478504", VA = "0x1478504", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x1478518", Offset = "0x1478518", VA = "0x1478518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x14788D8", Offset = "0x14788D8", VA = "0x14788D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FED8", Offset = "0x87FED8")]
	private sealed class <PonerNuestroMensajeDeNoPsPlus>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A3")]
		public ControladorMenu <>4__this;

		[Token(Token = "0x170003B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600241B")]
			[Address(RVA = "0x1478F20", Offset = "0x1478F20", VA = "0x1478F20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600241D")]
			[Address(RVA = "0x1478FF0", Offset = "0x1478FF0", VA = "0x1478FF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x1476F9C", Offset = "0x1476F9C", VA = "0x1476F9C")]
		[DebuggerHidden]
		public <PonerNuestroMensajeDeNoPsPlus>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x1478D40", Offset = "0x1478D40", VA = "0x1478D40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x1478D54", Offset = "0x1478D54", VA = "0x1478D54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x1478F50", Offset = "0x1478F50", VA = "0x1478F50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PosicionEnMenu posicionActual;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PosicionEnMenuInicio posicionInicio;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145B")]
	public GameObject[] partesMenu;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject[] posicionesInicio;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1844")]
	public GameObject[] partesPaises;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pantallaDemo;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Config.ModoDePartida modoQueQuieroJugar;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioSource audioSourceMenu;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1463")]
	public TextMeshProUGUI tituloPais;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TextMeshProUGUI tituloPosicionInicio;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1854")]
	public EstadoOnline estadoOnline;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer pantallaTv;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public GestorVinetas gestorViñetas;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ControladorOpciones m_controladorOpciones;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x146B")]
	private ControlInfoServidor m_infoServidor;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private ControladorTablaLeaderboards m_TablaLeaderboards;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1864")]
	public UnityEvent AccionCerrarActual;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine corDesconectarPhoton;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool pausado;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool story;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1473")]
	private int posicionAnteriorOpciones;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool idiomaInicialEspecial;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1874")]
	private bool estaCargandoLaTienda;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool numerosPuestosManualmente;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string numeroPun;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI tituloUnirseCrearOnline;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x147B")]
	public TextMeshProUGUI textoIdDeLaSala;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TextMeshProUGUI textoIdDelAmigo;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1884")]
	public TextMeshProUGUI textoMensajeOnline;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool unirseLlamado;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool desactivadoPorSoloUnSensor;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int numVecesGolpeArribaIzquierdaOpciones;

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x146E68C", Offset = "0x146E68C", VA = "0x146E68C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x146F5D0", Offset = "0x146F5D0", VA = "0x146F5D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x1472768", Offset = "0x1472768", VA = "0x1472768")]
	public void PararDesconectarPhoton()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x147263C", Offset = "0x147263C", VA = "0x147263C")]
	private void DesconectarPhoton()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x14727D8", Offset = "0x14727D8", VA = "0x14727D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A550C", Offset = "0x8A550C")]
	private IEnumerator DesconectarPhotonCor()
	{
		return null;
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x147259C", Offset = "0x147259C", VA = "0x147259C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A55BC", Offset = "0x8A55BC")]
	private IEnumerator DesactivarCamaraOscura()
	{
		return null;
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x1472908", Offset = "0x1472908", VA = "0x1472908")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x146FE6C", Offset = "0x146FE6C", VA = "0x146FE6C")]
	public void CambiarEstadoMenu(int posicion, bool inicio = false)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x1473614", Offset = "0x1473614", VA = "0x1473614")]
	public void CargarNivel(int num)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x14737D8", Offset = "0x14737D8", VA = "0x14737D8")]
	public void MoverteMenuInicio(int num)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x1474454", Offset = "0x1474454", VA = "0x1474454")]
	public void AccionStoryMode(int num)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x1474674", Offset = "0x1474674", VA = "0x1474674")]
	public void AccionEntrarEnArena()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x14748B8", Offset = "0x14748B8", VA = "0x14748B8")]
	public void AccionArenaMode(int num)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x1474D98", Offset = "0x1474D98", VA = "0x1474D98")]
	private void PonerPantallaDemo()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x1474EBC", Offset = "0x1474EBC", VA = "0x1474EBC")]
	public void CerrarPantallaDemo()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x1474FE0", Offset = "0x1474FE0", VA = "0x1474FE0")]
	public void ComprarJuego()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x1471884", Offset = "0x1471884", VA = "0x1471884")]
	public void SeleccionarPais(int pais)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x146EBD0", Offset = "0x146EBD0", VA = "0x146EBD0")]
	public void SeleccionarNivel(int nivel)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x1473274", Offset = "0x1473274", VA = "0x1473274")]
	public void MostrarHistoria()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1471FA0", Offset = "0x1471FA0", VA = "0x1471FA0")]
	public void MostrarFinal()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x1475388", Offset = "0x1475388", VA = "0x1475388")]
	public void Cerrar(int direccion)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x1475644", Offset = "0x1475644", VA = "0x1475644")]
	public void SeleccionarNumManos(int numero)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1475758", Offset = "0x1475758", VA = "0x1475758")]
	public void AbrirOpciones()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x1476448", Offset = "0x1476448", VA = "0x1476448")]
	public void CerrarOpciones()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x1471E1C", Offset = "0x1471E1C", VA = "0x1471E1C")]
	public void AbrirLeaderBoard(int pais)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x1476E98", Offset = "0x1476E98", VA = "0x1476E98")]
	private void PonerTiendaPlus()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x1476EE0", Offset = "0x1476EE0", VA = "0x1476EE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A566C", Offset = "0x8A566C")]
	private IEnumerator PonerNuestroMensajeDeNoPsPlus()
	{
		return null;
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x14732B4", Offset = "0x14732B4", VA = "0x14732B4")]
	public void AccionIntroducirElId(string num)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x146F244", Offset = "0x146F244", VA = "0x146F244")]
	public void UnirsePartidaOnline()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x1477360", Offset = "0x1477360", VA = "0x1477360")]
	public void CrearPartidaOnline()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x14779DC", Offset = "0x14779DC", VA = "0x14779DC")]
	public void MostrarMensajeOnline(int numeroMensaje)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x1476FE4", Offset = "0x1476FE4", VA = "0x1476FE4")]
	public void MostrarMensajeNoActivo()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x1477704", Offset = "0x1477704", VA = "0x1477704")]
	public void MostrarMensajeDemoArena()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x1477CB0", Offset = "0x1477CB0", VA = "0x1477CB0")]
	public void CerrarMensajeDemoArena()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x1472FD0", Offset = "0x1472FD0", VA = "0x1472FD0")]
	private void SaltarEleccionNumManos()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x1473110", Offset = "0x1473110", VA = "0x1473110")]
	private void volverAPonerSeleccionNumManos()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x1477F88", Offset = "0x1477F88", VA = "0x1477F88")]
	public void AbrirTodo()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x1478468", Offset = "0x1478468", VA = "0x1478468")]
	public ControladorMenu()
	{
	}
}
[Token(Token = "0x2000179")]
public class ControladorOpciones : MonoBehaviour
{
	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public RectTransform sliderMusica;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B18D4")]
	public RectTransform sliderFx;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI textoIdioma;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI textoVoz;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI textoVibracion;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14AB")]
	public GameObject PanelBotones;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject PanelPreguntaProgreso;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B18E4")]
	public MeshRenderer pantallaTv;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixer audioMixer;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float nivelMusica;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float nivelFx;

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x147D20C", Offset = "0x147D20C", VA = "0x147D20C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x147D23C", Offset = "0x147D23C", VA = "0x147D23C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x14758A8", Offset = "0x14758A8", VA = "0x14758A8")]
	public void CargarValoresOpciones()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x1476ABC", Offset = "0x1476ABC", VA = "0x1476ABC")]
	public void GuardarAjustes()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x147D4B8", Offset = "0x147D4B8", VA = "0x147D4B8")]
	public void AccionBotonIdioma()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x147D658", Offset = "0x147D658", VA = "0x147D658")]
	public void AccionRestaurarProgreso()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x147D6E0", Offset = "0x147D6E0", VA = "0x147D6E0")]
	public void AccionAceptarReiniciarProgreso()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x147D8E8", Offset = "0x147D8E8", VA = "0x147D8E8")]
	public void AccionCancelarReiniciarProgreso()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x147D970", Offset = "0x147D970", VA = "0x147D970")]
	public void AccionBotonSubirValorSlider(int indexSlider)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x147DB6C", Offset = "0x147DB6C", VA = "0x147DB6C")]
	public void AccionBotonBajarValorSlider(int indexSlider)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x147D9B8", Offset = "0x147D9B8", VA = "0x147D9B8")]
	private void BajarSubirValorSlider(int indexSlider, bool subir)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x147D250", Offset = "0x147D250", VA = "0x147D250")]
	private void SetValorSlider(int indexSlider, float valor)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x147DBB4", Offset = "0x147DBB4", VA = "0x147DBB4")]
	private void ActualizarAudioMixer(string grupo, float valor)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x147DEF0", Offset = "0x147DEF0", VA = "0x147DEF0")]
	public void AccionBotonVoz()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x147E210", Offset = "0x147E210", VA = "0x147E210")]
	public void AccionBotonVibracion()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x147E530", Offset = "0x147E530", VA = "0x147E530")]
	public ControladorOpciones()
	{
	}
}
[Token(Token = "0x200017A")]
public class ControladorTVs : MonoBehaviour
{
	[Token(Token = "0x200053C")]
	public enum PosicionEnMenu
	{
		[Token(Token = "0x400285C")]
		Inicio,
		[Token(Token = "0x400285D")]
		Info,
		[Token(Token = "0x400285E")]
		PowerUp,
		[Token(Token = "0x400285F")]
		LevelClear,
		[Token(Token = "0x4002860")]
		GameOver,
		[Token(Token = "0x4002861")]
		OnlinePlayersMuertos,
		[Token(Token = "0x4002862")]
		GanadorCompetitivo,
		[Token(Token = "0x4002863")]
		EsperandoJugadores,
		[Token(Token = "0x4002864")]
		Apagar
	}

	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF14", Offset = "0x87FF14")]
	private sealed class <MostrarNumeroPorPantalla>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14F3")]
		private int <>1__state;

		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1974")]
		public ControladorTVs <>4__this;

		[Token(Token = "0x170003B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002421")]
			[Address(RVA = "0x133EEAC", Offset = "0x133EEAC", VA = "0x133EEAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002423")]
			[Address(RVA = "0x133EF7C", Offset = "0x133EF7C", VA = "0x133EF7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x133BEB0", Offset = "0x133BEB0", VA = "0x133BEB0")]
		[DebuggerHidden]
		public <MostrarNumeroPorPantalla>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x133EC54", Offset = "0x133EC54", VA = "0x133EC54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x133EC68", Offset = "0x133EC68", VA = "0x133EC68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x133EEDC", Offset = "0x133EEDC", VA = "0x133EEDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF50", Offset = "0x87FF50")]
	private sealed class <CargarTextoPorLetras>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400286A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string st;

		[Token(Token = "0x400286B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14FB")]
		public TextMeshProUGUI text;

		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <cont>5__2;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1984")]
		private string <textoPintado>5__3;

		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string[] <lineas>5__4;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <lineaActual>5__5;

		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <countLineas>5__6;

		[Token(Token = "0x170003B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002427")]
			[Address(RVA = "0x133D81C", Offset = "0x133D81C", VA = "0x133D81C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002429")]
			[Address(RVA = "0x133D8EC", Offset = "0x133D8EC", VA = "0x133D8EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x133C61C", Offset = "0x133C61C", VA = "0x133C61C")]
		[DebuggerHidden]
		public <CargarTextoPorLetras>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x133CD84", Offset = "0x133CD84", VA = "0x133CD84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x133CD98", Offset = "0x133CD98", VA = "0x133CD98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x133D84C", Offset = "0x133D84C", VA = "0x133D84C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FF8C", Offset = "0x87FF8C")]
	private sealed class <EfectoTV>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1503")]
		private int <>1__state;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1994")]
		public ControladorTVs <>4__this;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170003BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600242D")]
			[Address(RVA = "0x133DCAC", Offset = "0x133DCAC", VA = "0x133DCAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600242F")]
			[Address(RVA = "0x133DD7C", Offset = "0x133DD7C", VA = "0x133DD7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x133C664", Offset = "0x133C664", VA = "0x133C664")]
		[DebuggerHidden]
		public <EfectoTV>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x133D91C", Offset = "0x133D91C", VA = "0x133D91C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x133D930", Offset = "0x133D930", VA = "0x133D930", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x133DCDC", Offset = "0x133DCDC", VA = "0x133DCDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87FFC8", Offset = "0x87FFC8")]
	private sealed class <FinalEntradaBoss>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150B")]
		public ControladorTVs <>4__this;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private float <i>5__2;

		[Token(Token = "0x170003BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002433")]
			[Address(RVA = "0x133EB54", Offset = "0x133EB54", VA = "0x133EB54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002435")]
			[Address(RVA = "0x133EC24", Offset = "0x133EC24", VA = "0x133EC24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x133CB8C", Offset = "0x133CB8C", VA = "0x133CB8C")]
		[DebuggerHidden]
		public <FinalEntradaBoss>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x133DDAC", Offset = "0x133DDAC", VA = "0x133DDAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x133DDC0", Offset = "0x133DDC0", VA = "0x133DDC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x133EB84", Offset = "0x133EB84", VA = "0x133EB84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14B3")]
	public PosicionEnMenu posicionActual;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject panelLevelClear;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B18F4")]
	public GameObject panelInicio;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject panelInfo;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject panelGameOver;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject panelEsperandoJugadores;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14BB")]
	public GameObject panelOnlinePlayersMuertos;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private TextMeshProUGUI textoNivel;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1904")]
	public Camera camara;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Camera camaraChica;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI textoOnlinePlayers;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI textoEquipoGanador;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C3")]
	public TextMeshProUGUI textoJugadoresGanadores;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TextMeshProUGUI textoEsperandoJugadores;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1914")]
	private bool activarCamara;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI puntosRacha;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI totalPuntos;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI totalRacha;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14CB")]
	public GameObject infoEstandar;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject mensajeBinarity;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1924")]
	public OLDTVScreen efectoTele;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject EntradaBoss;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI nombreBoss;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI paisBoss;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D3")]
	public TextMeshProUGUI fraseBoss;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TextMeshProUGUI newRecord;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1934")]
	public TextMeshProUGUI puntosTotalesFinalNivel;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool enAnimacionBoss;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject[] chicas;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] apagarObjetosGanadorOnline;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14DB")]
	public TextMeshProUGUI textoPuntuacion;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Coroutine mostrandoPuntos;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1944")]
	private string textoRachaBase;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int chicaActual;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int chicaActualFinal;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource audioSourceEntradaBoss;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14E3")]
	private AudioSource audioSourceEntradaBoss2;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private AudioClip[] audioFrasesBoss;

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x1337ED8", Offset = "0x1337ED8", VA = "0x1337ED8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x133913C", Offset = "0x133913C", VA = "0x133913C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x1339344", Offset = "0x1339344", VA = "0x1339344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x1339A70", Offset = "0x1339A70", VA = "0x1339A70")]
	public void CambiarTV(PosicionEnMenu estado, int param1 = 0)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x1339E50", Offset = "0x1339E50", VA = "0x1339E50")]
	public void NivelCompletado()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x1339C64", Offset = "0x1339C64", VA = "0x1339C64")]
	public void InicioNivel()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x1339D40", Offset = "0x1339D40", VA = "0x1339D40")]
	public void NivelIniciado()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x133A294", Offset = "0x133A294", VA = "0x133A294")]
	public void GameOver()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x133BBA8", Offset = "0x133BBA8", VA = "0x133BBA8")]
	public void EsperandoJugadores()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x133A364", Offset = "0x133A364", VA = "0x133A364")]
	public void PlayersMuertos()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x133A5B4", Offset = "0x133A5B4", VA = "0x133A5B4")]
	private void GanadorOnline(int equipoGanador)
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x1338150", Offset = "0x1338150", VA = "0x1338150")]
	private void ApagarPaneles()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x133BDC4", Offset = "0x133BDC4", VA = "0x133BDC4")]
	private void ActivarDesactivarCamara()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x1338298", Offset = "0x1338298", VA = "0x1338298")]
	private void CambiarTextos()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x13398B4", Offset = "0x13398B4", VA = "0x13398B4")]
	public void MostrarPuntosActuales(int numeroPuntos)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x133BDF4", Offset = "0x133BDF4", VA = "0x133BDF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A571C", Offset = "0x8A571C")]
	private IEnumerator MostrarNumeroPorPantalla()
	{
		return null;
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x13395DC", Offset = "0x13395DC", VA = "0x13395DC")]
	public void ModificarPuntosTotales(int numeroTotal)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x1339690", Offset = "0x1339690", VA = "0x1339690")]
	public void ModificarRacha(int numeroRacha)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x133BEF8", Offset = "0x133BEF8", VA = "0x133BEF8")]
	public void MostrarOcultarMensajeTrynity(bool estado, string mensaje, bool gatillo = true, int chica = -1)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x133C52C", Offset = "0x133C52C", VA = "0x133C52C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A57CC", Offset = "0x8A57CC")]
	private IEnumerator CargarTextoPorLetras(TextMeshProUGUI text, string st)
	{
		return null;
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x1339080", Offset = "0x1339080", VA = "0x1339080")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A587C", Offset = "0x8A587C")]
	private IEnumerator EfectoTV()
	{
		return null;
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x133C6AC", Offset = "0x133C6AC", VA = "0x133C6AC")]
	public void PonerEntradaBoss(AudioSource aS, AudioSource aS2)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x133CA88", Offset = "0x133CA88", VA = "0x133CA88")]
	public void CorutinaFinalEntradaBoss()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x133CAD0", Offset = "0x133CAD0", VA = "0x133CAD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A592C", Offset = "0x8A592C")]
	private IEnumerator FinalEntradaBoss()
	{
		return null;
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x133CBD4", Offset = "0x133CBD4", VA = "0x133CBD4")]
	private int CalcularSonidoFraseBoss()
	{
		return default(int);
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x133CCC0", Offset = "0x133CCC0", VA = "0x133CCC0")]
	public void MostrarMensajeNuevoRecord()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x133CD40", Offset = "0x133CD40", VA = "0x133CD40")]
	public ControladorTVs()
	{
	}
}
[Token(Token = "0x200017B")]
public class ControlPirateoOculus : MonoBehaviour
{
	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880004", Offset = "0x880004")]
	private sealed class <QuitarAvisoInternetEnUnRato>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1513")]
		private object <>2__current;

		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public ControlPirateoOculus <>4__this;

		[Token(Token = "0x170003BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002439")]
			[Address(RVA = "0x1457DEC", Offset = "0x1457DEC", VA = "0x1457DEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600243B")]
			[Address(RVA = "0x1457EBC", Offset = "0x1457EBC", VA = "0x1457EBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x145712C", Offset = "0x145712C", VA = "0x145712C")]
		[DebuggerHidden]
		public <QuitarAvisoInternetEnUnRato>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x1457BF8", Offset = "0x1457BF8", VA = "0x1457BF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x1457C0C", Offset = "0x1457C0C", VA = "0x1457C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x1457E1C", Offset = "0x1457E1C", VA = "0x1457E1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000542")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880040", Offset = "0x880040")]
	private sealed class <SalDelJuegoEnUnRato>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B19B4")]
		private int <>1__state;

		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x170003C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600243F")]
			[Address(RVA = "0x145808C", Offset = "0x145808C", VA = "0x145808C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002441")]
			[Address(RVA = "0x145815C", Offset = "0x145815C", VA = "0x145815C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x14575A4", Offset = "0x14575A4", VA = "0x14575A4")]
		[DebuggerHidden]
		public <SalDelJuegoEnUnRato>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1457EEC", Offset = "0x1457EEC", VA = "0x1457EEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1457F00", Offset = "0x1457F00", VA = "0x1457F00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x14580BC", Offset = "0x14580BC", VA = "0x14580BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B19A4")]
	public GameObject canvasParaPirata;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject canvasNoInternet;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string appID;

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x1456958", Offset = "0x1456958", VA = "0x1456958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x1457070", Offset = "0x1457070", VA = "0x1457070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A59DC", Offset = "0x8A59DC")]
	private IEnumerator QuitarAvisoInternetEnUnRato()
	{
		return null;
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x1457174", Offset = "0x1457174", VA = "0x1457174")]
	private void CheckAppID()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x14574F0", Offset = "0x14574F0", VA = "0x14574F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x1457504", Offset = "0x1457504", VA = "0x1457504")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A5A8C", Offset = "0x8A5A8C")]
	private IEnumerator SalDelJuegoEnUnRato()
	{
		return null;
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x14575EC", Offset = "0x14575EC", VA = "0x14575EC")]
	private void ResultadoEntitlements(Message msg)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x1456EE8", Offset = "0x1456EE8", VA = "0x1456EE8")]
	private void Pirata()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x1457918", Offset = "0x1457918", VA = "0x1457918")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x1457B68", Offset = "0x1457B68", VA = "0x1457B68")]
	public ControlPirateoOculus()
	{
	}
}
[Token(Token = "0x200017C")]
public class ControladorLluvia : MonoBehaviour
{
	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem particulasRayo;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Light luzEscena;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151B")]
	private float intensidadInicialLuz;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float intensidadMaximaLuz;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B19C4")]
	public Material materialSkybox;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float exposureInicialSkybox;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float exposureMaximoSkybox;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioClip[] clipsLuvia;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1523")]
	public float probabilidadDeRayoEnCadaTick;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float tiempoDelUltimoRayo;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B19D4")]
	private float tiempoRandomEntreRayos;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool haciendoRayo;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool rayoIda;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tFadeRayo;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152B")]
	private float intensidadAcutalLuz;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float exposureActualSkybox;

	[Token(Token = "0x4000BA3")]
	private const string exposure = "_Exposure";

	[Token(Token = "0x4000BA4")]
	private const string truenoSonido = "TruenoSonido";

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x145AA88", Offset = "0x145AA88", VA = "0x145AA88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x145AED0", Offset = "0x145AED0", VA = "0x145AED0")]
	private void ReproduceTruenoRandom()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x145AF0C", Offset = "0x145AF0C", VA = "0x145AF0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x145B61C", Offset = "0x145B61C", VA = "0x145B61C")]
	private void PonerRayoEnPosicionAleatoria()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x145B840", Offset = "0x145B840", VA = "0x145B840")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x145B9CC", Offset = "0x145B9CC", VA = "0x145B9CC")]
	public ControladorLluvia()
	{
	}
}
[Token(Token = "0x200017D")]
public class ControladorRudder : ILocomotion
{
	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 movimientoRudder;

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x13370AC", Offset = "0x13370AC", VA = "0x13370AC", Slot = "4")]
	public override void UpdateAxes(Controller3dRudder controller3dRudder, Vector4 axesWithFactor)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x13371F4", Offset = "0x13371F4", VA = "0x13371F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x13373BC", Offset = "0x13373BC", VA = "0x13373BC")]
	public ControladorRudder()
	{
	}
}
[Token(Token = "0x200017E")]
public class ControladorSonidosMensajes : MonoBehaviour
{
	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioSource[] adioSourcesMensajes;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1533")]
	public AudioClip clipsDuality;

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x13373EC", Offset = "0x13373EC", VA = "0x13373EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x1337400", Offset = "0x1337400", VA = "0x1337400")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1337414", Offset = "0x1337414", VA = "0x1337414")]
	public void PonerClipParteParrafo()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1337780", Offset = "0x1337780", VA = "0x1337780")]
	public void CargarClipMensajeNivel(int msg, int parafo)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x1337D20", Offset = "0x1337D20", VA = "0x1337D20")]
	public void CargarClipMensajeNoPower()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x1337DBC", Offset = "0x1337DBC", VA = "0x1337DBC")]
	public void CargarClipMensajeEstandar(int msg)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x1337C34", Offset = "0x1337C34", VA = "0x1337C34")]
	public void CargarClipMensajeProTip(int msg)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x1337EA8", Offset = "0x1337EA8", VA = "0x1337EA8")]
	public ControladorSonidosMensajes()
	{
	}
}
[Token(Token = "0x200017F")]
public class ControladorTablaLeaderboards : MonoBehaviour
{
	[Token(Token = "0x2000543")]
	public class JugadorEnTabla
	{
		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TextMeshProUGUI txt_Posicion;

		[Token(Token = "0x400287F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TextMeshProUGUI txt_NombreJugador;

		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154B")]
		private TextMeshProUGUI txt_Tiempo;

		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Transform transform;

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x1342570", Offset = "0x1342570", VA = "0x1342570")]
		public JugadorEnTabla()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x13425A0", Offset = "0x13425A0", VA = "0x13425A0")]
		public JugadorEnTabla(Transform transform)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x1341A00", Offset = "0x1341A00", VA = "0x1341A00")]
		public void SetInfoJugador(LogrosRecords.Resultado info, ref Sprite[] logosEquipos)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x134274C", Offset = "0x134274C", VA = "0x134274C")]
		public void SetInfoJugadorTorneo(int posicion, string nombre, int puntos, int rango, string bandera, int coche, ref Sprite[] logosEquipos, ControladorMenu m_ControladorMenu)
		{
		}
	}

	[Token(Token = "0x2000544")]
	public class TablaLeaderboard
	{
		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1A24")]
		public JugadorEnTabla[] jugadores9primeros;

		[Token(Token = "0x4002883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public JugadorEnTabla[] jugadoresTorneo;

		[Token(Token = "0x4002884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public JugadorEnTabla[] jugadoresNo9primeros;

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x13429B8", Offset = "0x13429B8", VA = "0x13429B8")]
		public void BuscarReferencias(Transform padre)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x133F230", Offset = "0x133F230", VA = "0x133F230")]
		public TablaLeaderboard(Transform padre)
		{
		}
	}

	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88007C", Offset = "0x88007C")]
	private sealed class <EsperaParaVerSiHayServicios>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1553")]
		private object <>2__current;

		[Token(Token = "0x4002887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public string nombreMundo;

		[Token(Token = "0x4002888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1A34")]
		public bool esEvento;

		[Token(Token = "0x4002889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControladorTablaLeaderboards <>4__this;

		[Token(Token = "0x400288A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool despuesDeCarrera;

		[Token(Token = "0x170003C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600244B")]
			[Address(RVA = "0x1341FFC", Offset = "0x1341FFC", VA = "0x1341FFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600244D")]
			[Address(RVA = "0x13420CC", Offset = "0x13420CC", VA = "0x13420CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x133FD94", Offset = "0x133FD94", VA = "0x133FD94")]
		[DebuggerHidden]
		public <EsperaParaVerSiHayServicios>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x1341BC4", Offset = "0x1341BC4", VA = "0x1341BC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1341BD8", Offset = "0x1341BD8", VA = "0x1341BD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x134202C", Offset = "0x134202C", VA = "0x134202C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8800B8", Offset = "0x8800B8")]
	private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400288B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400288C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x155B")]
		private object <>2__current;

		[Token(Token = "0x400288D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public ControladorTablaLeaderboards <>4__this;

		[Token(Token = "0x170003C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002451")]
			[Address(RVA = "0x1342470", Offset = "0x1342470", VA = "0x1342470", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002453")]
			[Address(RVA = "0x1342540", Offset = "0x1342540", VA = "0x1342540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x1340258", Offset = "0x1340258", VA = "0x1340258")]
		[DebuggerHidden]
		public <Start>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x13420FC", Offset = "0x13420FC", VA = "0x13420FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x1342110", Offset = "0x1342110", VA = "0x1342110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x13424A0", Offset = "0x13424A0", VA = "0x13424A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject loading;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B19F4")]
	public GameObject tablas;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject fondoTablaNo9;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject errorConexion;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject imagenTabla9;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x153B")]
	public UnityEvent accionBotonCerrar;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform seleccion;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1A04")]
	public TextMeshProUGUI textoNombreCircuito;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TablaLeaderboard leaderboardMenu;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private Sprite[] logosEquipos;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine pedirLeaderboardPS4;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1543")]
	private bool b_OnResultadosObtenidos;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool OnResultadosObtenidosCreado;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1A14")]
	private bool tablaCargada;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject fondoComun;

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x133EFAC", Offset = "0x133EFAC", VA = "0x133EFAC")]
	public void AbrirTabla(string mundo, string nombrePais, bool esEvento, bool despuesDeCarrera = false)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x133F608", Offset = "0x133F608", VA = "0x133F608")]
	public void PonerTablaCargando()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x133F988", Offset = "0x133F988", VA = "0x133F988")]
	public void PonerTablaConectionError()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x133F6B8", Offset = "0x133F6B8", VA = "0x133F6B8")]
	public void CargarTabla(string nombreMundo, bool esEvento, bool despuesDeCarrera)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x133FBF0", Offset = "0x133FBF0", VA = "0x133FBF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A5B3C", Offset = "0x8A5B3C")]
	private IEnumerator EsperaParaVerSiHayServicios(string nombreMundo, bool esEvento, bool despuesDeCarrera)
	{
		return null;
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x133FDDC", Offset = "0x133FDDC", VA = "0x133FDDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x133FFD8", Offset = "0x133FFD8", VA = "0x133FFD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x134019C", Offset = "0x134019C", VA = "0x134019C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A5BEC", Offset = "0x8A5BEC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x13402A0", Offset = "0x13402A0", VA = "0x13402A0")]
	private void OnRecordSubido(object sender, int miScoreRecibido, string tabla)
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x1340380", Offset = "0x1340380", VA = "0x1340380")]
	private bool ValidarListaResultados(List<LogrosRecords.Resultado> resultados)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x13407EC", Offset = "0x13407EC", VA = "0x13407EC")]
	private void OnResultadosObtenidos(object sender, List<LogrosRecords.Resultado> resultados, bool dosListas, string tabla)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x133FD4C", Offset = "0x133FD4C", VA = "0x133FD4C")]
	public void BotonCerrar()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x1341B94", Offset = "0x1341B94", VA = "0x1341B94")]
	public ControladorTablaLeaderboards()
	{
	}
}
[Token(Token = "0x2000180")]
public class Debugs : MonoBehaviour
{
	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1A44")]
	public static bool debugs;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool logs;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool logsAlex;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool logsAitor;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1563")]
	public static bool logsIvan;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static bool logsPhoton;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1A54")]
	public static bool dividirBolasConLaLetraO;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool PuedoHacermeInmortal;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int SimularPlayer;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool sinMatarEnCompetitivo;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x156B")]
	public static int tiempoBalasCompartidas;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static bool poderPararTiempoSiempre;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1A64")]
	public static bool contadorFPS;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool nivelesDesbloqueados;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool OmitirPirateoOculus;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x135A08C", Offset = "0x135A08C", VA = "0x135A08C")]
	public static void Log(string message, int tipo = -1)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x135A50C", Offset = "0x135A50C", VA = "0x135A50C")]
	public Debugs()
	{
	}
}
[Token(Token = "0x2000181")]
public class PantallaDebug : MonoBehaviour
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string[] Mundos;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1573")]
	private string[] TiposPartida;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Dropdown dropMundos;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1A74")]
	private int valorInicialMundos;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Dropdown dropNiveles;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int valorInicialNiveles;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Dropdown dropCantJugOnline;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x157B")]
	private int valorInicialJugOnline;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Dropdown dropTipoPartida;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1A84")]
	private int valorInicialTipoPartida;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Dropdown dropCalidad;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int valorInicialCalidad;

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x140527C", Offset = "0x140527C", VA = "0x140527C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x1406010", Offset = "0x1406010", VA = "0x1406010")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x1406424", Offset = "0x1406424", VA = "0x1406424")]
	public void ElegirMundo()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x1406624", Offset = "0x1406624", VA = "0x1406624")]
	public void ElegirNivel()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x140679C", Offset = "0x140679C", VA = "0x140679C")]
	public void ElegirTipoPartida()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x1406968", Offset = "0x1406968", VA = "0x1406968")]
	public void ElegirCantidadDeJugOnline()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x1406CAC", Offset = "0x1406CAC", VA = "0x1406CAC")]
	public void ElegirCalidad()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x140606C", Offset = "0x140606C", VA = "0x140606C")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x1406E28", Offset = "0x1406E28", VA = "0x1406E28")]
	public PantallaDebug()
	{
	}
}
[Token(Token = "0x2000182")]
public class DeteccionDispositivos : MonoBehaviour
{
	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float ticks;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1583")]
	[HideInInspector]
	public bool yaNoBuscar;

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x135CA6C", Offset = "0x135CA6C", VA = "0x135CA6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x135CA80", Offset = "0x135CA80", VA = "0x135CA80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x13483F4", Offset = "0x13483F4", VA = "0x13483F4")]
	public static void CambiarSensorOculusGO(bool oculusGoDer)
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x135D360", Offset = "0x135D360", VA = "0x135D360")]
	private void DetectarDispositivos()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x135F55C", Offset = "0x135F55C", VA = "0x135F55C")]
	public DeteccionDispositivos()
	{
	}
}
[Token(Token = "0x2000183")]
public class DisparoEscopeta : MonoBehaviour
{
	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Rigidbody[] balas;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1A94")]
	public Transform inicio;

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x135F5A0", Offset = "0x135F5A0", VA = "0x135F5A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x135F8A0", Offset = "0x135F8A0", VA = "0x135F8A0")]
	public DisparoEscopeta()
	{
	}
}
[Token(Token = "0x2000184")]
public class ControladorPS : MonoBehaviour
{
	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem pSystem;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int ticksVagos;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool tiempoNormalCuandoPasemosNivelOMuramos;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158B")]
	public bool forzarcuandoNivelNoEstaInicializado;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool tambienAjustarAudioSourcse;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1AA4")]
	private AudioSource miAudioSource;

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x1336518", Offset = "0x1336518", VA = "0x1336518")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x13365FC", Offset = "0x13365FC", VA = "0x13365FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x133707C", Offset = "0x133707C", VA = "0x133707C")]
	public ControladorPS()
	{
	}
}
[Token(Token = "0x2000185")]
public class EfectoParpadear : MonoBehaviour
{
	[Token(Token = "0x2000547")]
	public enum Objeto
	{
		[Token(Token = "0x400288F")]
		texto,
		[Token(Token = "0x4002890")]
		imagen
	}

	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8800F4", Offset = "0x8800F4")]
	private sealed class <AnimacionParpadeoTexto>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1AC4")]
		private object <>2__current;

		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EfectoParpadear <>4__this;

		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170003C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002457")]
			[Address(RVA = "0x12D77F8", Offset = "0x12D77F8", VA = "0x12D77F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002459")]
			[Address(RVA = "0x12D78C8", Offset = "0x12D78C8", VA = "0x12D78C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x12D7278", Offset = "0x12D7278", VA = "0x12D7278")]
		[DebuggerHidden]
		public <AnimacionParpadeoTexto>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x12D72F0", Offset = "0x12D72F0", VA = "0x12D72F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x12D7304", Offset = "0x12D7304", VA = "0x12D7304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x12D7828", Offset = "0x12D7828", VA = "0x12D7828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Objeto objetoSeleccion;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tiempoEntreEfectos;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float velocidadParpadeo;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1593")]
	public int numeroParpadeos;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TextMeshProUGUI textoReferencia;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1AB4")]
	public Image imagenReferencia;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine parpadeo;

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x12D7048", Offset = "0x12D7048", VA = "0x12D7048")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x12D7120", Offset = "0x12D7120", VA = "0x12D7120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x12D7234", Offset = "0x12D7234", VA = "0x12D7234")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x12D7178", Offset = "0x12D7178", VA = "0x12D7178")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A5C9C", Offset = "0x8A5C9C")]
	private IEnumerator AnimacionParpadeoTexto()
	{
		return null;
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x12D72C0", Offset = "0x12D72C0", VA = "0x12D72C0")]
	public EfectoParpadear()
	{
	}
}
[Token(Token = "0x2000186")]
public class ExplosionEsfera : MonoBehaviour
{
	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880130", Offset = "0x880130")]
	private sealed class <Explosion>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ExplosionEsfera <>4__this;

		[Token(Token = "0x170003C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600245D")]
			[Address(RVA = "0x12F590C", Offset = "0x12F590C", VA = "0x12F590C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600245F")]
			[Address(RVA = "0x12F59DC", Offset = "0x12F59DC", VA = "0x12F59DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x12F5250", Offset = "0x12F5250", VA = "0x12F5250")]
		[DebuggerHidden]
		public <Explosion>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x12F52C8", Offset = "0x12F52C8", VA = "0x12F52C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x12F52DC", Offset = "0x12F52DC", VA = "0x12F52DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x12F593C", Offset = "0x12F593C", VA = "0x12F593C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Rigidbody[] rbTrozos;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A3")]
	public Transform explosion;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 pos;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1AD4")]
	private float tiempo;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource sonidoExplosion;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3[] posicionesTrozos;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Quaternion[] rotacionesTrozos;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15AB")]
	private GameObject modelo;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int contador;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1AE4")]
	private bool creado;

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x12F5024", Offset = "0x12F5024", VA = "0x12F5024")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x12F5194", Offset = "0x12F5194", VA = "0x12F5194")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A5D4C", Offset = "0x8A5D4C")]
	private IEnumerator Explosion()
	{
		return null;
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x12F50CC", Offset = "0x12F50CC", VA = "0x12F50CC")]
	private void ActivarTrozos()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x12F5298", Offset = "0x12F5298", VA = "0x12F5298")]
	public ExplosionEsfera()
	{
	}
}
[Token(Token = "0x2000187")]
public class TrozosEsfera : MonoBehaviour
{
	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15B3")]
	private int ticksDeVidaMaximo;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int ticksDeVida;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1AF4")]
	private EfectoDesaparecer miEfecto;

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x1395B70", Offset = "0x1395B70", VA = "0x1395B70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x1395C3C", Offset = "0x1395C3C", VA = "0x1395C3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x1395D1C", Offset = "0x1395D1C", VA = "0x1395D1C")]
	public TrozosEsfera()
	{
	}
}
[Token(Token = "0x2000188")]
public class efectoMaterialFantasmaBoss : MonoBehaviour
{
	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material miMaterial;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int ticksSinModificar;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float intensidadDestino;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15BB")]
	private float intensidadActual;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float rimPowerDestino;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1B04")]
	private float rimPowerActual;

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x14EDAB4", Offset = "0x14EDAB4", VA = "0x14EDAB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x14EDB78", Offset = "0x14EDB78", VA = "0x14EDB78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x14EDF0C", Offset = "0x14EDF0C", VA = "0x14EDF0C")]
	public efectoMaterialFantasmaBoss()
	{
	}
}
[Token(Token = "0x2000189")]
public class Bala : MonoBehaviour
{
	[Token(Token = "0x200054A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88016C", Offset = "0x88016C")]
	private sealed class <CorrutinaDesaparecer>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1B34")]
		private int <>1__state;

		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Bala <>4__this;

		[Token(Token = "0x170003CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002463")]
			[Address(RVA = "0x150E240", Offset = "0x150E240", VA = "0x150E240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002465")]
			[Address(RVA = "0x150E310", Offset = "0x150E310", VA = "0x150E310", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x150CB30", Offset = "0x150CB30", VA = "0x150CB30")]
		[DebuggerHidden]
		public <CorrutinaDesaparecer>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x150DD50", Offset = "0x150DD50", VA = "0x150DD50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x150DD64", Offset = "0x150DD64", VA = "0x150DD64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x150E270", Offset = "0x150E270", VA = "0x150E270", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rigidbody rb;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 velocidadSinTrucar;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform mano;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C3")]
	public int vel;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int equipo;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1B14")]
	private SyncBala balaSync;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TrailRenderer trail;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem particulas;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool haTocadoObjetoDeBonus;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15CB")]
	public bool deEscopeta;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1B24")]
	private bool sonidoMetalico;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine efectoDesaparecer;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Color colorInicial_P;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Color colorFinal_P;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15D3")]
	private float tiempo_P;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool balaRebotada;

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x150ADA0", Offset = "0x150ADA0", VA = "0x150ADA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x150B078", Offset = "0x150B078", VA = "0x150B078")]
	public Rigidbody GetRigidBody()
	{
		return null;
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x150B0A8", Offset = "0x150B0A8", VA = "0x150B0A8")]
	public void TocaObjetoBonus()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x150B0D8", Offset = "0x150B0D8", VA = "0x150B0D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x150B454", Offset = "0x150B454", VA = "0x150B454")]
	public void ChangeTrail(bool laser)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x150B508", Offset = "0x150B508", VA = "0x150B508")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x150B8F8", Offset = "0x150B8F8", VA = "0x150B8F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x150CA30", Offset = "0x150CA30", VA = "0x150CA30")]
	public int GetNumUsosRestantes()
	{
		return default(int);
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x150B714", Offset = "0x150B714", VA = "0x150B714")]
	public void EfectoDesaparecer(int usosQuePierde)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x150CA74", Offset = "0x150CA74", VA = "0x150CA74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A5DFC", Offset = "0x8A5DFC")]
	private IEnumerator CorrutinaDesaparecer()
	{
		return null;
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x150CB78", Offset = "0x150CB78", VA = "0x150CB78")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x150CEB4", Offset = "0x150CEB4", VA = "0x150CEB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x150CF2C", Offset = "0x150CF2C", VA = "0x150CF2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x150D638", Offset = "0x150D638", VA = "0x150D638")]
	public void RebotarPlayer()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x150DC60", Offset = "0x150DC60", VA = "0x150DC60")]
	public Bala()
	{
	}
}
[Token(Token = "0x200018A")]
public class BloqueRompible : MonoBehaviour
{
	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8801A8", Offset = "0x8801A8")]
	private sealed class <TiempoAfectandoFisicas>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1B74")]
		private int <>1__state;

		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BloqueRompible <>4__this;

		[Token(Token = "0x170003CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002469")]
			[Address(RVA = "0x1515BF0", Offset = "0x1515BF0", VA = "0x1515BF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600246B")]
			[Address(RVA = "0x1515CC0", Offset = "0x1515CC0", VA = "0x1515CC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x15154D8", Offset = "0x15154D8", VA = "0x15154D8")]
		[DebuggerHidden]
		public <TiempoAfectandoFisicas>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x1515914", Offset = "0x1515914", VA = "0x1515914", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x1515928", Offset = "0x1515928", VA = "0x1515928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x1515C20", Offset = "0x1515C20", VA = "0x1515C20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Weapon arma;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15DB")]
	private GanchoRifle gancho;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Rigidbody rb;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1B44")]
	private BoxCollider boxCollider;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool pistolaAnclada;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject bloque;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15E3")]
	public GameObject bloqueRompiendose;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 posInicial;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1B54")]
	public float Fuerza;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Drops[] drops;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource audioSource;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isEscudo;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15EB")]
	public bool isBoss;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Bola bolaPadre;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1B64")]
	public Vector3[] posTrozos;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool creado;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int contador;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoEnganchado;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15F3")]
	public MeshRenderer escudo;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool rompiendose;

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x1512338", Offset = "0x1512338", VA = "0x1512338")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x15124D8", Offset = "0x15124D8", VA = "0x15124D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x15129C8", Offset = "0x15129C8", VA = "0x15129C8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x1513490", Offset = "0x1513490", VA = "0x1513490")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x151360C", Offset = "0x151360C", VA = "0x151360C")]
	public void HacerHijo(GameObject padre)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x1513888", Offset = "0x1513888", VA = "0x1513888")]
	public void SepararHijo()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x151389C", Offset = "0x151389C", VA = "0x151389C")]
	public void HacerPadre(GameObject padre)
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x1513C24", Offset = "0x1513C24", VA = "0x1513C24")]
	public void SepararPadre()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x1513DB4", Offset = "0x1513DB4", VA = "0x1513DB4")]
	public void SepararGancho()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x1513EB8", Offset = "0x1513EB8", VA = "0x1513EB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x150C074", Offset = "0x150C074", VA = "0x150C074")]
	public void Romper(float x = 1000f, float y = 1000f, float z = 1000f, bool ordenPorRed = false, bool porTiempo = false)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x1513DFC", Offset = "0x1513DFC", VA = "0x1513DFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A5EAC", Offset = "0x8A5EAC")]
	private IEnumerator TiempoAfectandoFisicas()
	{
		return null;
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x15143C4", Offset = "0x15143C4", VA = "0x15143C4")]
	public void Explosion(Vector3 posicion)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x1515520", Offset = "0x1515520", VA = "0x1515520")]
	private GameObject SeleccionarDrop()
	{
		return null;
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x15158E4", Offset = "0x15158E4", VA = "0x15158E4")]
	public BloqueRompible()
	{
	}
}
[Token(Token = "0x200018B")]
public class Esera : MonoBehaviour
{
	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float vel;

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x12D84E0", Offset = "0x12D84E0", VA = "0x12D84E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x12D84F4", Offset = "0x12D84F4", VA = "0x12D84F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x12D868C", Offset = "0x12D868C", VA = "0x12D868C")]
	public Esera()
	{
	}
}
[Token(Token = "0x200018C")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8801E4", Offset = "0x8801E4")]
	private sealed class <Felicitar>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x166B")]
		public GameManager <>4__this;

		[Token(Token = "0x170003CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600246F")]
			[Address(RVA = "0x11B6034", Offset = "0x11B6034", VA = "0x11B6034", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002471")]
			[Address(RVA = "0x11B6104", Offset = "0x11B6104", VA = "0x11B6104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x11B5ACC", Offset = "0x11B5ACC", VA = "0x11B5ACC")]
		[DebuggerHidden]
		public <Felicitar>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x11B5B14", Offset = "0x11B5B14", VA = "0x11B5B14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x11B5B28", Offset = "0x11B5B28", VA = "0x11B5B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x11B6064", Offset = "0x11B6064", VA = "0x11B6064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880220", Offset = "0x880220")]
	private sealed class <EsperarAResetearTrasVisctoria>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1C64")]
		private object <>2__current;

		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameManager <>4__this;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int equipoGanador;

		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int idPhotonObjetoMuerte;

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1673")]
		public bool porEliminacionDeBolas;

		[Token(Token = "0x170003D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002475")]
			[Address(RVA = "0x11B59CC", Offset = "0x11B59CC", VA = "0x11B59CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002477")]
			[Address(RVA = "0x11B5A9C", Offset = "0x11B5A9C", VA = "0x11B5A9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x11B49C0", Offset = "0x11B49C0", VA = "0x11B49C0")]
		[DebuggerHidden]
		public <EsperarAResetearTrasVisctoria>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x11B4A08", Offset = "0x11B4A08", VA = "0x11B4A08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x11B4A1C", Offset = "0x11B4A1C", VA = "0x11B4A1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x11B59FC", Offset = "0x11B59FC", VA = "0x11B59FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88025C", Offset = "0x88025C")]
	private sealed class <EncenderDeNuevoLasBolas>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1C74")]
		private object <>2__current;

		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameManager <>4__this;

		[Token(Token = "0x170003D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600247B")]
			[Address(RVA = "0x11B48C0", Offset = "0x11B48C0", VA = "0x11B48C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600247D")]
			[Address(RVA = "0x11B4990", Offset = "0x11B4990", VA = "0x11B4990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x11B3FC8", Offset = "0x11B3FC8", VA = "0x11B3FC8")]
		[DebuggerHidden]
		public <EncenderDeNuevoLasBolas>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x11B4010", Offset = "0x11B4010", VA = "0x11B4010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x11B4024", Offset = "0x11B4024", VA = "0x11B4024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x11B48F0", Offset = "0x11B48F0", VA = "0x11B48F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880298", Offset = "0x880298")]
	private sealed class <LerpActivarPanico>d__91 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x167B")]
		public GameManager <>4__this;

		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public AudioSource aS;

		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1C84")]
		private Color <colorInicial>5__2;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color <colorFinal>5__3;

		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <count>5__4;

		[Token(Token = "0x170003D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002481")]
			[Address(RVA = "0x11B7264", Offset = "0x11B7264", VA = "0x11B7264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002483")]
			[Address(RVA = "0x11B7334", Offset = "0x11B7334", VA = "0x11B7334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x11B6980", Offset = "0x11B6980", VA = "0x11B6980")]
		[DebuggerHidden]
		public <LerpActivarPanico>d__91(int <>1__state)
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x11B69C8", Offset = "0x11B69C8", VA = "0x11B69C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x11B69DC", Offset = "0x11B69DC", VA = "0x11B69DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x11B7294", Offset = "0x11B7294", VA = "0x11B7294", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000550")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8802D4", Offset = "0x8802D4")]
	private sealed class <LerpActivarPanicBoss>d__95 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40028B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1683")]
		private object <>2__current;

		[Token(Token = "0x40028B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public GameManager <>4__this;

		[Token(Token = "0x40028B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1C94")]
		private Color <colorInicial>5__2;

		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color <colorFinal>5__3;

		[Token(Token = "0x40028B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <ciclos>5__4;

		[Token(Token = "0x40028B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__5;

		[Token(Token = "0x170003D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002487")]
			[Address(RVA = "0x11B6880", Offset = "0x11B6880", VA = "0x11B6880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002489")]
			[Address(RVA = "0x11B6950", Offset = "0x11B6950", VA = "0x11B6950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x11B6134", Offset = "0x11B6134", VA = "0x11B6134")]
		[DebuggerHidden]
		public <LerpActivarPanicBoss>d__95(int <>1__state)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x11B617C", Offset = "0x11B617C", VA = "0x11B617C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x11B6190", Offset = "0x11B6190", VA = "0x11B6190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x11B68B0", Offset = "0x11B68B0", VA = "0x11B68B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000551")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880310", Offset = "0x880310")]
	private sealed class <CorroutinaMostrarMensaje>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168B")]
		private int <>1__state;

		[Token(Token = "0x40028B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40028BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1CA4")]
		public GameManager <>4__this;

		[Token(Token = "0x40028BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool estado;

		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float tiempoMensaje;

		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mensaje;

		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1693")]
		public int chica;

		[Token(Token = "0x40028BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public int numMensaje;

		[Token(Token = "0x40028C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1CB4")]
		private string[] <aux>5__2;

		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__3;

		[Token(Token = "0x170003D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600248D")]
			[Address(RVA = "0x11B3EC8", Offset = "0x11B3EC8", VA = "0x11B3EC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600248F")]
			[Address(RVA = "0x11B3F98", Offset = "0x11B3F98", VA = "0x11B3F98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x11B26B8", Offset = "0x11B26B8", VA = "0x11B26B8")]
		[DebuggerHidden]
		public <CorroutinaMostrarMensaje>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x11B2700", Offset = "0x11B2700", VA = "0x11B2700", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x11B2714", Offset = "0x11B2714", VA = "0x11B2714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x11B3EF8", Offset = "0x11B3EF8", VA = "0x11B3EF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000552")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88034C", Offset = "0x88034C")]
	private sealed class <ApagarMensajeBinarityXSegundos>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40028C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40028C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169B")]
		public float segundos;

		[Token(Token = "0x40028C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public GameManager <>4__this;

		[Token(Token = "0x170003DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002493")]
			[Address(RVA = "0x11B25B8", Offset = "0x11B25B8", VA = "0x11B25B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002495")]
			[Address(RVA = "0x11B2688", Offset = "0x11B2688", VA = "0x11B2688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x11B2368", Offset = "0x11B2368", VA = "0x11B2368")]
		[DebuggerHidden]
		public <ApagarMensajeBinarityXSegundos>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x11B23B0", Offset = "0x11B23B0", VA = "0x11B23B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x11B23C4", Offset = "0x11B23C4", VA = "0x11B23C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x11B25E8", Offset = "0x11B25E8", VA = "0x11B25E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15FB")]
	public static GameManager instance;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public string tagBala;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1B84")]
	[HideInInspector]
	public string tagPistola;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string tagPistolaGanchoOnline;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string tagEsfera;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string tagMano;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1603")]
	[HideInInspector]
	public string tagPared;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public string tagParedPistola;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1B94")]
	[HideInInspector]
	public string tagRompible;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string tagParedMovible;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string tagDestructorDeCubos;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public string tagBalaEsfera;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160B")]
	[HideInInspector]
	public string tagCadenaOriginal;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public string tagCadena;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1BA4")]
	[HideInInspector]
	public string tagBoss;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int layerPistolaTrigger;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int layerMina;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int layerBala;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1613")]
	[HideInInspector]
	public int layerCadenas;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public int layerBalasEsfera;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1BB4")]
	[HideInInspector]
	public int layerEsfera;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int layerArma;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Player player;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public SalasManager m_salaManager;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161B")]
	[HideInInspector]
	public Musica m_musica;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public int paisActual;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1BC4")]
	[HideInInspector]
	public int nivelesJugadosSinProTip;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int nivelActual;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool comenzarPartidaOnline;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool hayEquipoGanador;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1623")]
	[HideInInspector]
	public bool bloquearBotones;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public ParedMovible paredMovible;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1BD4")]
	[HideInInspector]
	public bool estoyMuertoYMeEstanEnseñandoQueMeHaMatado;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public List<EsferaScript> esferasActivas;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public BossBase bossNivel;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool vengoDeBoss;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162B")]
	[HideInInspector]
	public bool nuevoPaisDesloqueado;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public List<GameObject> torretasEncendidas;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1BE4")]
	[HideInInspector]
	public List<GameObject> minasEncendidas;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public List<GameObject> bloquesEncendidos;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool vengoDeMuerto;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Vector3 ultimaRotacionCabeza;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1633")]
	[HideInInspector]
	public Vector3 ultimaPosicionRelativaCabeza;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public InputsController.TipoSensores tipoDeSensores;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1BF4")]
	[HideInInspector]
	public InputsController.JoyInput teclado;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public InputsController.JoyInput senDer;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public InputsController.JoyInput senIzq;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public InputsController.JoyInput mando;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163B")]
	[HideInInspector]
	public InputsController.JoyInput rudder;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public InputsController.JoyInput tracker;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1C04")]
	[HideInInspector]
	public SkinnedMeshRenderer neoGigante;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public LIV.SDK.Unity.LIV liv;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string logFPS;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool vozHabilitada;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1643")]
	[HideInInspector]
	public bool vibracionHabilitada;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public int PartidasAcabadasSinCambiarEntreGanchoBala;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1C14")]
	[HideInInspector]
	public bool nivelInicioMenu;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool infoServidorObtenida;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool esperandoCojerPowerUp;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool UltimoModoHaSidoOnline;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164B")]
	[HideInInspector]
	public bool seAcabanDePasarElBoss;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public bool acaboDeSerMaster;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1C24")]
	[HideInInspector]
	public bool verisionConOnlineCompletamenteAnulado;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool pasarTexto;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool mensajeInGame;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool antiMonkeyActivado;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1653")]
	private float tiempoMensajeActivado;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int mensajeEstandar;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1C34")]
	[HideInInspector]
	public bool powerUpTiempoActivo;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int numEsferasMientrasPWTiempo;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool jugadoresMuteados;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool cascoQuitado;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165B")]
	[HideInInspector]
	public bool dashOpened;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool ponerMenuPaisActual;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1C44")]
	private Coroutine corLerpColorLuz;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine corLerpColorLuzBoss;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine mostrarMensaje;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine quitarMensajeEnXSeg;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1663")]
	public bool powerUpShotgunActivo;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int numEsferasMientrasPWShotgun;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1C54")]
	public bool powerUpLaserActivo;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int numEsferasMientrasPWLaser;

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x12F6EB0", Offset = "0x12F6EB0", VA = "0x12F6EB0")]
	public void Resetear()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x12F7070", Offset = "0x12F7070", VA = "0x12F7070")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x12F767C", Offset = "0x12F767C", VA = "0x12F767C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x12F7818", Offset = "0x12F7818", VA = "0x12F7818")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x12F8D70", Offset = "0x12F8D70", VA = "0x12F8D70")]
	public void CargarMenu()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x12F8EB4", Offset = "0x12F8EB4", VA = "0x12F8EB4")]
	public void FelicitarCompetitivoYVolverAMenu()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x12F8EFC", Offset = "0x12F8EFC", VA = "0x12F8EFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A5F5C", Offset = "0x8A5F5C")]
	private IEnumerator Felicitar()
	{
		return null;
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x12F8FB8", Offset = "0x12F8FB8", VA = "0x12F8FB8")]
	public string NombrePais(int numero, [Optional] TextMeshProUGUI texto)
	{
		return null;
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x12F9E38", Offset = "0x12F9E38", VA = "0x12F9E38")]
	public void EquipoGana(int equipoGanador, int idPhotonObjetoMuerte, bool porEliminacionDeBolas = false)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x12FA0CC", Offset = "0x12FA0CC", VA = "0x12FA0CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A600C", Offset = "0x8A600C")]
	private IEnumerator EsperarAResetearTrasVisctoria(int equipoGanador, int idPhotonObjetoMuerte, bool porEliminacionDeBolas = false)
	{
		return null;
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x12FA214", Offset = "0x12FA214", VA = "0x12FA214")]
	public void EliminarObjetos(GameObject objetoMuerte, bool porVictoria = false)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x12FA750", Offset = "0x12FA750", VA = "0x12FA750")]
	public void ApagarMeshesDeLasBolasMenosLaQueMeHaMatadoPorUnRato(GameObject bolaQueMeHaMatado)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x12FB1A4", Offset = "0x12FB1A4", VA = "0x12FB1A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A60BC", Offset = "0x8A60BC")]
	private IEnumerator EncenderDeNuevoLasBolas()
	{
		return null;
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x12FB260", Offset = "0x12FB260", VA = "0x12FB260")]
	public float GetTiempoSalidaPared()
	{
		return default(float);
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x12FB354", Offset = "0x12FB354", VA = "0x12FB354")]
	public void ActivarPanico(AudioSource aS)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x12FB4E8", Offset = "0x12FB4E8", VA = "0x12FB4E8")]
	public void DesactivarPanico()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x12FB404", Offset = "0x12FB404", VA = "0x12FB404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A616C", Offset = "0x8A616C")]
	private IEnumerator LerpActivarPanico(AudioSource aS)
	{
		return null;
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x12FB5E0", Offset = "0x12FB5E0", VA = "0x12FB5E0")]
	public void ActivarPanicoBoss()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x12FB73C", Offset = "0x12FB73C", VA = "0x12FB73C")]
	public void DesactivarPanicoBoss()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x12FB680", Offset = "0x12FB680", VA = "0x12FB680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A621C", Offset = "0x8A621C")]
	private IEnumerator LerpActivarPanicBoss()
	{
		return null;
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x12F893C", Offset = "0x12F893C", VA = "0x12F893C")]
	public void MostrarOcultarMensajeBinarity(bool estado, int numeroMensaje, float tiempoMensaje = 999f, int chica = -1)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x12FC830", Offset = "0x12FC830", VA = "0x12FC830")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A62CC", Offset = "0x8A62CC")]
	private IEnumerator CorroutinaMostrarMensaje(bool estado, string mensaje, int numMensaje, float tiempoMensaje, int chica)
	{
		return null;
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x12FC9D4", Offset = "0x12FC9D4", VA = "0x12FC9D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A637C", Offset = "0x8A637C")]
	private IEnumerator ApagarMensajeBinarityXSegundos(float segundos)
	{
		return null;
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x12FB834", Offset = "0x12FB834", VA = "0x12FB834")]
	public string MensajeBinarity(int num)
	{
		return null;
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x12FCAB8", Offset = "0x12FCAB8", VA = "0x12FCAB8")]
	private string MostrarMensajeEstandar()
	{
		return null;
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x12FCDF8", Offset = "0x12FCDF8", VA = "0x12FCDF8")]
	public string DameMensajeBoss()
	{
		return null;
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x12FCF70", Offset = "0x12FCF70", VA = "0x12FCF70")]
	public string DameNombreBossDelMundo(int mundo)
	{
		return null;
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x12FD318", Offset = "0x12FD318", VA = "0x12FD318")]
	public void PararJuegoEsperandoCojerPowerUp()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x12FD57C", Offset = "0x12FD57C", VA = "0x12FD57C")]
	public void SubirRecord(string mundo, int valor)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x12FD8E4", Offset = "0x12FD8E4", VA = "0x12FD8E4")]
	public void SetLogro(LogrosRecords.Logros logro)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x12FDA84", Offset = "0x12FDA84", VA = "0x12FDA84")]
	public void ComprobarLogroPlatino()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x12FDBD8", Offset = "0x12FDBD8", VA = "0x12FDBD8")]
	public string GetNombreDelJugador()
	{
		return null;
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x12FDC4C", Offset = "0x12FDC4C", VA = "0x12FDC4C")]
	public void SetNombreDelJugador(string nombre)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x12FDC64", Offset = "0x12FDC64", VA = "0x12FDC64")]
	public void SumarEsferaDestruidaDurantePowerUpTiempo()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x12E7510", Offset = "0x12E7510", VA = "0x12E7510")]
	public void SumarEsferaDestruidaDurantePowerUpShotgun()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x12E75F4", Offset = "0x12E75F4", VA = "0x12E75F4")]
	public void SumarEsferaDestruidaDurantePowerUpLaser()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x12FDD48", Offset = "0x12FDD48", VA = "0x12FDD48")]
	public void SumarPuntosMundoYEnviarRecord(int puntuacion)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x12FE128", Offset = "0x12FE128", VA = "0x12FE128")]
	public GameManager()
	{
	}
}
[Token(Token = "0x200018D")]
public class GestorVinetas : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000553")]
	public struct TextosViñeta
	{
		[Token(Token = "0x40028C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI textosViñetas;

		[Token(Token = "0x40028C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] contTextosViñetas;

		[Token(Token = "0x40028C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A3")]
		public AudioClip[] sonidosViñetas;

		[Token(Token = "0x40028C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public AudioClip musica;
	}

	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880388", Offset = "0x880388")]
	private sealed class <CargarTextoPorLetras>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1CF4")]
		private int <>1__state;

		[Token(Token = "0x40028CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40028CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string st;

		[Token(Token = "0x40028CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI textMesh;

		[Token(Token = "0x40028CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16BB")]
		public GestorVinetas <>4__this;

		[Token(Token = "0x40028CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <cont>5__2;

		[Token(Token = "0x40028D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1D04")]
		private string <textoPintado>5__3;

		[Token(Token = "0x40028D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string[] <lineas>5__4;

		[Token(Token = "0x40028D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <lineaActual>5__5;

		[Token(Token = "0x40028D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <countLineas>5__6;

		[Token(Token = "0x170003DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002499")]
			[Address(RVA = "0x11C4AAC", Offset = "0x11C4AAC", VA = "0x11C4AAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600249B")]
			[Address(RVA = "0x11C4B7C", Offset = "0x11C4B7C", VA = "0x11C4B7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x11C29BC", Offset = "0x11C29BC", VA = "0x11C29BC")]
		[DebuggerHidden]
		public <CargarTextoPorLetras>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x11C3EA4", Offset = "0x11C3EA4", VA = "0x11C3EA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x11C3EB8", Offset = "0x11C3EB8", VA = "0x11C3EB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x11C4ADC", Offset = "0x11C4ADC", VA = "0x11C4ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8803C4", Offset = "0x8803C4")]
	private sealed class <EsperarDesactivarCerrar>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C3")]
		private int <>1__state;

		[Token(Token = "0x40028D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40028D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1D14")]
		public GestorVinetas <>4__this;

		[Token(Token = "0x170003DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600249F")]
			[Address(RVA = "0x11C531C", Offset = "0x11C531C", VA = "0x11C531C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0x11C53EC", Offset = "0x11C53EC", VA = "0x11C53EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x11C3E2C", Offset = "0x11C3E2C", VA = "0x11C3E2C")]
		[DebuggerHidden]
		public <EsperarDesactivarCerrar>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x11C4BAC", Offset = "0x11C4BAC", VA = "0x11C4BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x11C4BC0", Offset = "0x11C4BC0", VA = "0x11C4BC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x11C534C", Offset = "0x11C534C", VA = "0x11C534C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1CC4")]
	public bool final;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Animator animacion;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] viñetas;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextosViñeta[] textos;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A3")]
	private ControladorMenu m_controldorMenu;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public AudioSource audioSourceMusica;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1CD4")]
	public ControladorMenu m_controladorMenu;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int viñetaActual;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int textoViñetaActual;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int sonidoViñetaActual;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16AB")]
	public GameObject botonCerrar;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool estabaReproduciendose;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1CE4")]
	private bool pausado;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool cerrarMostrada;

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x11C05A8", Offset = "0x11C05A8", VA = "0x11C05A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x11C15AC", Offset = "0x11C15AC", VA = "0x11C15AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x11C1E40", Offset = "0x11C1E40", VA = "0x11C1E40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x11C2668", Offset = "0x11C2668", VA = "0x11C2668")]
	private void GestorTexto(int texto)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x11C2870", Offset = "0x11C2870", VA = "0x11C2870")]
	private void GestorSonido(int sonido, int loop)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x11C2764", Offset = "0x11C2764", VA = "0x11C2764")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A642C", Offset = "0x8A642C")]
	private IEnumerator CargarTextoPorLetras(TextMeshProUGUI textMesh, string st)
	{
		return null;
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x11C2A04", Offset = "0x11C2A04", VA = "0x11C2A04")]
	private void CargarSiguienteTexto()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x11C2A88", Offset = "0x11C2A88", VA = "0x11C2A88")]
	private void CargarSiguienteSonido(int loop)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x11C0710", Offset = "0x11C0710", VA = "0x11C0710")]
	private void CargarTextos()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x11C2FCC", Offset = "0x11C2FCC", VA = "0x11C2FCC")]
	private void PonerMusica()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x11C3074", Offset = "0x11C3074", VA = "0x11C3074")]
	public void PausarSonido(bool pausar)
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x11C3274", Offset = "0x11C3274", VA = "0x11C3274")]
	private void CargarVineta(int num)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x11C33E0", Offset = "0x11C33E0", VA = "0x11C33E0")]
	public void CargarNivel1()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x11C357C", Offset = "0x11C357C", VA = "0x11C357C")]
	public void VolverAlInicio()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x11C16F4", Offset = "0x11C16F4", VA = "0x11C16F4")]
	public void MostrarCerrar()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x11C3D70", Offset = "0x11C3D70", VA = "0x11C3D70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A64DC", Offset = "0x8A64DC")]
	private IEnumerator EsperarDesactivarCerrar()
	{
		return null;
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x11C3E74", Offset = "0x11C3E74", VA = "0x11C3E74")]
	public GestorVinetas()
	{
	}
}
[Token(Token = "0x200018E")]
public class AnimacionEnFuncionDelTiempo : MonoBehaviour
{
	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator anim;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int ticks;

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x1507BC4", Offset = "0x1507BC4", VA = "0x1507BC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x1507C68", Offset = "0x1507C68", VA = "0x1507C68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x1507DEC", Offset = "0x1507DEC", VA = "0x1507DEC")]
	public AnimacionEnFuncionDelTiempo()
	{
	}
}
[Token(Token = "0x200018F")]
public class MoverOffset : MonoBehaviour
{
	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool conTiempoParado;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16CB")]
	public float velocidad;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float incremento;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1D28")]
	private MeshRenderer material;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool enX;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool enY;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int ticks;

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x131CDFC", Offset = "0x131CDFC", VA = "0x131CDFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x131CEB8", Offset = "0x131CEB8", VA = "0x131CEB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x131D398", Offset = "0x131D398", VA = "0x131D398")]
	public MoverOffset()
	{
	}
}
[Token(Token = "0x2000190")]
public class RotarObjeto : MonoBehaviour
{
	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D3")]
	public bool conTiempoParado;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 eje;

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x11F883C", Offset = "0x11F883C", VA = "0x11F883C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x11F8BC4", Offset = "0x11F8BC4", VA = "0x11F8BC4")]
	public RotarObjeto()
	{
	}
}
[Token(Token = "0x2000191")]
[ExecuteInEditMode]
public class InverseKinematics : MonoBehaviour
{
	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1D38")]
	public Transform upperArm;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform forearm;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform hand;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform elbow;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16DB")]
	public Transform target;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x88E634", Offset = "0x88E634")]
	public Vector3 uppperArm_OffsetRotation;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1D48")]
	public Vector3 forearm_OffsetRotation;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 hand_OffsetRotation;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x88E678", Offset = "0x88E678")]
	public bool handMatchesTargetRotation;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x88E6BC", Offset = "0x88E6BC")]
	public bool debug;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E3")]
	private float angle;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float upperArm_Length;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1D5C")]
	private float forearm_Length;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float arm_Length;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float targetDistance;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float adyacent;

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x11D86F8", Offset = "0x11D86F8", VA = "0x11D86F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x11D870C", Offset = "0x11D870C", VA = "0x11D870C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x11D985C", Offset = "0x11D985C", VA = "0x11D985C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x11D9E78", Offset = "0x11D9E78", VA = "0x11D9E78")]
	public InverseKinematics()
	{
	}
}
[Token(Token = "0x2000192")]
public abstract class LogrosRecords : MonoBehaviour
{
	[Token(Token = "0x2000556")]
	public struct Resultado
	{
		[Token(Token = "0x40028D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E3")]
		public string usuario;

		[Token(Token = "0x40028D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public int record;

		[Token(Token = "0x40028D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1D6C")]
		public int posicion;

		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong id;
	}

	[Token(Token = "0x2000557")]
	public enum OrdenTabla
	{
		[Token(Token = "0x40028DC")]
		ascendente,
		[Token(Token = "0x40028DD")]
		descendente,
		[Token(Token = "0x40028DE")]
		ninguno
	}

	[Token(Token = "0x2000558")]
	public struct InfoTabla
	{
		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1D7C")]
		public string nombre;

		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OrdenTabla orden;
	}

	[Token(Token = "0x2000559")]
	public enum Logros
	{
		[Token(Token = "0x40028E2")]
		Streak5,
		[Token(Token = "0x40028E3")]
		Streak10,
		[Token(Token = "0x40028E4")]
		Streak15,
		[Token(Token = "0x40028E5")]
		Streak20,
		[Token(Token = "0x40028E6")]
		TimePW5,
		[Token(Token = "0x40028E7")]
		TimePW10,
		[Token(Token = "0x40028E8")]
		ShotgunPW5,
		[Token(Token = "0x40028E9")]
		ShotgunPW10,
		[Token(Token = "0x40028EA")]
		LaserPW5,
		[Token(Token = "0x40028EB")]
		LaserPW10,
		[Token(Token = "0x40028EC")]
		BossJapan,
		[Token(Token = "0x40028ED")]
		BossEgypt,
		[Token(Token = "0x40028EE")]
		BossMexico,
		[Token(Token = "0x40028EF")]
		BossSingapore,
		[Token(Token = "0x40028F0")]
		BossRussia,
		[Token(Token = "0x40028F1")]
		BossThailand,
		[Token(Token = "0x40028F2")]
		BossChina,
		[Token(Token = "0x40028F3")]
		BossKorea,
		[Token(Token = "0x40028F4")]
		BossAustralia,
		[Token(Token = "0x40028F5")]
		BossBelgium,
		[Token(Token = "0x40028F6")]
		BossUS,
		[Token(Token = "0x40028F7")]
		BossSpain,
		[Token(Token = "0x40028F8")]
		BossBrazil,
		[Token(Token = "0x40028F9")]
		BossCanada,
		[Token(Token = "0x40028FA")]
		Platino
	}

	[Token(Token = "0x200055A")]
	public delegate void IGSMTablaEncontradaEventHandler(object sender, string tabla);

	[Token(Token = "0x200055B")]
	public delegate void IGSMResultadosEventHandler(object sender, List<Resultado> resultados, bool dosListados, string tabla);

	[Token(Token = "0x200055C")]
	public delegate void IGSMResultadoSubidoEventHandler(object sender, int miMejorResultado, string tabla);

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16EB")]
	public static LogrosRecords instance;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Config.PlataformaJuego m_Plataforma;

	[Token(Token = "0x4000C9A")]
	public const int NUM_LOGROS = 25;

	[Token(Token = "0x14000032")]
	public event IGSMResultadosEventHandler ResultadosObtenidos
	{
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x17478A8", Offset = "0x17478A8", VA = "0x17478A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A658C", Offset = "0x8A658C")]
		add
		{
		}
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x17479F4", Offset = "0x17479F4", VA = "0x17479F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A65C8", Offset = "0x8A65C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public event IGSMTablaEncontradaEventHandler TablaEncontrada
	{
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x1747B40", Offset = "0x1747B40", VA = "0x1747B40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A6604", Offset = "0x8A6604")]
		add
		{
		}
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1747C8C", Offset = "0x1747C8C", VA = "0x1747C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A6640", Offset = "0x8A6640")]
		remove
		{
		}
	}

	[Token(Token = "0x14000034")]
	public event IGSMResultadoSubidoEventHandler RecordSubido
	{
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1747DD8", Offset = "0x1747DD8", VA = "0x1747DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A667C", Offset = "0x8A667C")]
		add
		{
		}
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1747F24", Offset = "0x1747F24", VA = "0x1747F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A66B8", Offset = "0x8A66B8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x1747074", Offset = "0x1747074", VA = "0x1747074")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x1748070", Offset = "0x1748070", VA = "0x1748070", Slot = "4")]
	protected virtual void OnResultadosObtenidos(object sender, List<Resultado> resultados, bool dosListados, string tabla)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x1748664", Offset = "0x1748664", VA = "0x1748664", Slot = "5")]
	protected virtual void OnTablaEncontrada(object sender, string tabla)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x1748B60", Offset = "0x1748B60", VA = "0x1748B60", Slot = "6")]
	protected virtual void OnRecordSubido(object sender, int miMejorResultado, string tabla)
	{
	}

	[Token(Token = "0x6000CBC")]
	public abstract void GuardarLogros();

	[Token(Token = "0x6000CBD")]
	public abstract void InicializarLogros();

	[Token(Token = "0x6000CBE")]
	public abstract void InicializarTablas(string[] tablas);

	[Token(Token = "0x6000CBF")]
	public abstract void InicializarTablas(List<InfoTabla> tablas);

	[Token(Token = "0x6000CC0")]
	public abstract void ObtenerResultadosAlrededorMioConTop(string tabla, int resultadosQueQuiero, bool esEvento, long record = -1L);

	[Token(Token = "0x6000CC1")]
	public abstract void SubirRecord(string tabla, int record);

	[Token(Token = "0x6000CC2")]
	public abstract void MarcarLogroCompletado(string idLogro);

	[Token(Token = "0x6000CC3")]
	public abstract string DameMiNombre();

	[Token(Token = "0x6000CC4")]
	public abstract void MostrarTienda();

	[Token(Token = "0x6000CC5")]
	public abstract void ComprobarYDarLogroPlatino();

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x17490AC", Offset = "0x17490AC", VA = "0x17490AC")]
	public string DameNombreAchivement(Logros logro)
	{
		return null;
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x17496D8", Offset = "0x17496D8", VA = "0x17496D8")]
	protected LogrosRecords()
	{
	}
}
[Token(Token = "0x2000193")]
public class LookAtTarget : MonoBehaviour
{
	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1723")]
	public Transform target;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform target2;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1DDC")]
	public bool enEjeY;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool puntoSpawn;

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x1749F50", Offset = "0x1749F50", VA = "0x1749F50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x1749F64", Offset = "0x1749F64", VA = "0x1749F64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x174A44C", Offset = "0x174A44C", VA = "0x174A44C")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x2000194")]
public class LuzInicio : MonoBehaviour
{
	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x174A47C", Offset = "0x174A47C", VA = "0x174A47C")]
	public LuzInicio()
	{
	}
}
[Token(Token = "0x2000195")]
public class ManoLaser : MonoBehaviour
{
	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880400", Offset = "0x880400")]
	private sealed class <CorutinaFocusUI>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1E2C")]
		private object <>2__current;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ManoLaser <>4__this;

		[Token(Token = "0x170003E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x13104F0", Offset = "0x13104F0", VA = "0x13104F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x13105C0", Offset = "0x13105C0", VA = "0x13105C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x130FD94", Offset = "0x130FD94", VA = "0x130FD94")]
		[DebuggerHidden]
		public <CorutinaFocusUI>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x13101E0", Offset = "0x13101E0", VA = "0x13101E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x13101F4", Offset = "0x13101F4", VA = "0x13101F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x1310520", Offset = "0x1310520", VA = "0x1310520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88043C", Offset = "0x88043C")]
	private sealed class <CorrutinaAccion>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1753")]
		public BotonMenu boton;

		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public ManoLaser <>4__this;

		[Token(Token = "0x170003E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x13100E0", Offset = "0x13100E0", VA = "0x13100E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x13101B0", Offset = "0x13101B0", VA = "0x13101B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x130FDDC", Offset = "0x130FDDC", VA = "0x130FDDC")]
		[DebuggerHidden]
		public <CorrutinaAccion>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x130FF0C", Offset = "0x130FF0C", VA = "0x130FF0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x130FF20", Offset = "0x130FF20", VA = "0x130FF20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x1310110", Offset = "0x1310110", VA = "0x1310110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int layerMaskUI;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform laser;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172B")]
	private bool botonApretado;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool sinVR;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1DEC")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine focusCorr;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float distanciaRayo;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool inGame;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1733")]
	public bool noApagar;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool clickEnUIUpPendiente;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1DFC")]
	private Vector3 auxEscalaLaser;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Ray rayo;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private RaycastHit hit;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform pantalla;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x173B")]
	public Camera camaraAbajo;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool heClicado;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1E0C")]
	private bool distanciaTocando;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float trigger;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerSoltado;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private BotonMenu boton;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1743")]
	private BotonMenu ultimoBoton;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool manoDerecha;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1E1C")]
	private WaitForSecondsRealtime esperaRayoIA;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string tagBoton;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BotonMenu botonSeleccionado;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine esperaBoton;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174B")]
	private float tiempoEspera;

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x130DF98", Offset = "0x130DF98", VA = "0x130DF98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x130E0F8", Offset = "0x130E0F8", VA = "0x130E0F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x130E10C", Offset = "0x130E10C", VA = "0x130E10C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x130E684", Offset = "0x130E684", VA = "0x130E684")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x130FBF4", Offset = "0x130FBF4", VA = "0x130FBF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A66F4", Offset = "0x8A66F4")]
	private IEnumerator CorutinaFocusUI()
	{
		return null;
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x130FCB0", Offset = "0x130FCB0", VA = "0x130FCB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A67A4", Offset = "0x8A67A4")]
	private IEnumerator CorrutinaAccion(BotonMenu boton)
	{
		return null;
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x130FE24", Offset = "0x130FE24", VA = "0x130FE24")]
	public ManoLaser()
	{
	}
}
[Token(Token = "0x2000196")]
public class ManosRoomScale : MonoBehaviour
{
	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880478", Offset = "0x880478")]
	private sealed class <EsperarAEncender>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175B")]
		private object <>2__current;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public ManosRoomScale <>4__this;

		[Token(Token = "0x170003E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x1312100", Offset = "0x1312100", VA = "0x1312100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024BF")]
			[Address(RVA = "0x13121D0", Offset = "0x13121D0", VA = "0x13121D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1310770", Offset = "0x1310770", VA = "0x1310770")]
		[DebuggerHidden]
		public <EsperarAEncender>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1311C1C", Offset = "0x1311C1C", VA = "0x1311C1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x1311C30", Offset = "0x1311C30", VA = "0x1311C30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x1312130", Offset = "0x1312130", VA = "0x1312130", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1E3C")]
	public ControladorMano controladorManoHomonima;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AnimManos animManoRS;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject manoModel;

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x13105F0", Offset = "0x13105F0", VA = "0x13105F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x13106B4", Offset = "0x13106B4", VA = "0x13106B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A6854", Offset = "0x8A6854")]
	private IEnumerator EsperarAEncender()
	{
		return null;
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x13107B8", Offset = "0x13107B8", VA = "0x13107B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x1310A8C", Offset = "0x1310A8C", VA = "0x1310A8C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x1311BEC", Offset = "0x1311BEC", VA = "0x1311BEC")]
	public ManosRoomScale()
	{
	}
}
[Token(Token = "0x2000197")]
public class Mina : MonoBehaviour
{
	[Token(Token = "0x2000560")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8804B4", Offset = "0x8804B4")]
	private sealed class <Destruir>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mina <>4__this;

		[Token(Token = "0x170003E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x131A92C", Offset = "0x131A92C", VA = "0x131A92C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x131A9FC", Offset = "0x131A9FC", VA = "0x131A9FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x131A620", Offset = "0x131A620", VA = "0x131A620")]
		[DebuggerHidden]
		public <Destruir>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x131A6D0", Offset = "0x131A6D0", VA = "0x131A6D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x131A6E4", Offset = "0x131A6E4", VA = "0x131A6E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x131A95C", Offset = "0x131A95C", VA = "0x131A95C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1E4C")]
	public int nivel;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float radius;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float fuerza;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioSource audioS;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1763")]
	public Rigidbody rb;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private AudioClip audioExplosion;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1E5C")]
	public GameObject particulasDestruccion;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public CambiarMateriales cambiarMateriales;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool generadaPorBoss;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float posStartY;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x176B")]
	private float cont;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float tiempoEntreColGanchos;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1E6C")]
	private bool explotando;

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x13157D0", Offset = "0x13157D0", VA = "0x13157D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x1316258", Offset = "0x1316258", VA = "0x1316258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x1315990", Offset = "0x1315990", VA = "0x1315990")]
	public Vector3 GetEscala()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x13160F0", Offset = "0x13160F0", VA = "0x13160F0")]
	public float GetRadius()
	{
		return default(float);
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x131638C", Offset = "0x131638C", VA = "0x131638C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x13168A8", Offset = "0x13168A8", VA = "0x13168A8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x13171E0", Offset = "0x13171E0", VA = "0x13171E0")]
	public void Colision(Transform tCollision, float fuerza)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x1317468", Offset = "0x1317468", VA = "0x1317468")]
	public void Colision(float x, float y, float z, float fuerza)
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x1317710", Offset = "0x1317710", VA = "0x1317710")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x13192BC", Offset = "0x13192BC", VA = "0x13192BC")]
	public void Explosion()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x131A4A8", Offset = "0x131A4A8", VA = "0x131A4A8")]
	public void ExplosionFake()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x131A3EC", Offset = "0x131A3EC", VA = "0x131A3EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A6904", Offset = "0x8A6904")]
	private IEnumerator Destruir()
	{
		return null;
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x131A668", Offset = "0x131A668", VA = "0x131A668")]
	public Mina()
	{
	}
}
[Token(Token = "0x2000198")]
public class ControladorMono : MonoBehaviour
{
	[Token(Token = "0x2000561")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8804F0", Offset = "0x8804F0")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B1E9C")]
		private object <>2__current;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControladorMono <>4__this;

		[Token(Token = "0x170003E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024C9")]
			[Address(RVA = "0x147A824", Offset = "0x147A824", VA = "0x147A824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024CB")]
			[Address(RVA = "0x147A8F4", Offset = "0x147A8F4", VA = "0x147A8F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x14790DC", Offset = "0x14790DC", VA = "0x14790DC")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x1479E28", Offset = "0x1479E28", VA = "0x1479E28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x1479E3C", Offset = "0x1479E3C", VA = "0x1479E3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x147A854", Offset = "0x147A854", VA = "0x147A854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1773")]
	public Transform manoDerecha;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform manoIzquierda;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1E7C")]
	public Transform cabeza;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform controladorManoDerecha;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform controladorManoIzquierda;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform controladorCabeza;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x177B")]
	private Quaternion rotacionManoDInicial;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Quaternion rotacionManoIInicial;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1E8C")]
	private Vector3 posicionManoDInicial;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posicionManoIInicial;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject copiaCabeza;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject copiaManoD;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1783")]
	private GameObject copiaManoI;

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x1479020", Offset = "0x1479020", VA = "0x1479020")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A69B4", Offset = "0x8A69B4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x1479124", Offset = "0x1479124", VA = "0x1479124")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x1479DF8", Offset = "0x1479DF8", VA = "0x1479DF8")]
	public ControladorMono()
	{
	}
}
[Token(Token = "0x2000199")]
public class ObjetosDelNivel : MonoBehaviour
{
	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private BolaDummy[] esferasSolo;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private BolaDummy[] esferasOnline;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178B")]
	public GameObject esferas1Player;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject esferas2Player;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1EAC")]
	public GameObject torretasGo;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TorretaDummy[] torretas;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject bloquesRompiblesGo;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private BloqueRompibleDummy[] bloquesRompibles;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1793")]
	public GameObject powerupsGo;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private PowerupDummy[] powerups;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1EBC")]
	private BossDummy[] boss;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tiempoDeSalidaDePared;

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x191360C", Offset = "0x191360C", VA = "0x191360C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x1913D8C", Offset = "0x1913D8C", VA = "0x1913D8C")]
	public BolaDummy[] GetEsferasNivel()
	{
		return null;
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x1914010", Offset = "0x1914010", VA = "0x1914010")]
	public TorretaDummy[] GetTorretasNivel()
	{
		return null;
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x19141D8", Offset = "0x19141D8", VA = "0x19141D8")]
	public BloqueRompibleDummy[] GetBloqueRompiblesNivel()
	{
		return null;
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x19143A0", Offset = "0x19143A0", VA = "0x19143A0")]
	public PowerupDummy[] GetPowerupsNivel()
	{
		return null;
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x1914568", Offset = "0x1914568", VA = "0x1914568")]
	public BossDummy[] GetBossNivel()
	{
		return null;
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x19147EC", Offset = "0x19147EC", VA = "0x19147EC")]
	public void Destruirme()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x1914B84", Offset = "0x1914B84", VA = "0x1914B84")]
	public ObjetosDelNivel()
	{
	}
}
[Token(Token = "0x200019A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B8C8", Offset = "0x87B8C8")]
public class SyncBala : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x2000562")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88052C", Offset = "0x88052C")]
	private sealed class <VolverAPonerClip>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SyncBala <>4__this;

		[Token(Token = "0x170003EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0x136F4C4", Offset = "0x136F4C4", VA = "0x136F4C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0x136F594", Offset = "0x136F594", VA = "0x136F594", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x136E308", Offset = "0x136E308", VA = "0x136E308")]
		[DebuggerHidden]
		public <VolverAPonerClip>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x136F278", Offset = "0x136F278", VA = "0x136F278", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x136F28C", Offset = "0x136F28C", VA = "0x136F28C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x136F4F4", Offset = "0x136F4F4", VA = "0x136F4F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MonoBehaviour[] localScripts;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] localObjectDes;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179B")]
	public GameObject[] localObjectAct;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Component[] componentsToDestroy;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1ECC")]
	private Vector3 latestPos;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion latestRot;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int equipo;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TrailRenderer trail;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A3")]
	private GameObject meshObj;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float tiempoSinRespuesta;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1EDC")]
	private Bala bala;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private BalaEsfera balaEsfera;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int seActiva;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int idObjPhotonPlayer;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17AB")]
	private Collider collider;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 posicionDeinstanciamiento;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1EEC")]
	private AudioSource audioSourceBala;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioClip audioClipBala;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioClip audioClipBalaReboteMetalico;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int numUsos;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17B3")]
	private float mult;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Coroutine corVolverAPonerSonido;

	[Token(Token = "0x4000CFC")]
	private const string RPC_TocoObjetoBonus = "TocoObjetoBonusPUN";

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x136C38C", Offset = "0x136C38C", VA = "0x136C38C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x136CFF8", Offset = "0x136CFF8", VA = "0x136CFF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x136DEA4", Offset = "0x136DEA4", VA = "0x136DEA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x136DF30", Offset = "0x136DF30", VA = "0x136DF30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x136DF60", Offset = "0x136DF60", VA = "0x136DF60")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x136DFDC", Offset = "0x136DFDC", VA = "0x136DFDC")]
	public void ChangeTrail(bool laser)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x136E15C", Offset = "0x136E15C", VA = "0x136E15C")]
	public void PonerAudioRebote()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x136E24C", Offset = "0x136E24C", VA = "0x136E24C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A6A64", Offset = "0x8A6A64")]
	private IEnumerator VolverAPonerClip()
	{
		return null;
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x136E350", Offset = "0x136E350", VA = "0x136E350", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x136E994", Offset = "0x136E994", VA = "0x136E994")]
	public void TocoObjetoBonus()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x136F0F8", Offset = "0x136F0F8", VA = "0x136F0F8")]
	[PunRPC]
	private void TocoObjetoBonusPUN(int accion)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x136F170", Offset = "0x136F170", VA = "0x136F170")]
	public SyncBala()
	{
	}
}
[Token(Token = "0x200019B")]
public class SyncBloqueRompible : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17BB")]
	public CambiarMateriales cambiarMateriales;

	[Token(Token = "0x4000CFE")]
	private const string RPC_RomperElBloque = "RomperElBloquePUN";

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x136F5C4", Offset = "0x136F5C4", VA = "0x136F5C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x136F704", Offset = "0x136F704", VA = "0x136F704")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x136F7D8", Offset = "0x136F7D8", VA = "0x136F7D8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x136F7F0", Offset = "0x136F7F0", VA = "0x136F7F0")]
	public void RomperElBloque()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x136FA28", Offset = "0x136FA28", VA = "0x136FA28")]
	[PunRPC]
	private void RomperElBloquePUN()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x136FBBC", Offset = "0x136FBBC", VA = "0x136FBBC")]
	public SyncBloqueRompible()
	{
	}
}
[Token(Token = "0x200019C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B978", Offset = "0x87B978")]
public class SyncBoss : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1F0C")]
	private BossBase boss;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int escudoAntiguo;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int tipoEscudo;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int oldNumeroBalasEscudo;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C3")]
	public Transform parpado;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform bbos;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1F1C")]
	private BossEscudoBala bossEscudoBala;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private BossLaser bossLaser;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private BossOjoDebil bossOjoDebil;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private BossDragonDebil bossDragonDebil;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17CB")]
	private PhotonView pv;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int auxiliar;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1F2C")]
	private int oldAuxiliar;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 rotacionDeseadaBoss;

	[Token(Token = "0x4000D0D")]
	private const string RPC_MasterGolpeoABoss = "MasterGolpeoABossPUN";

	[Token(Token = "0x4000D0E")]
	private const string RPC_SateliteDestruido = "SateliteDestruidoPUN";

	[Token(Token = "0x4000D0F")]
	private const string RPC_BossDerrotado = "BossDerrotadoPUN";

	[Token(Token = "0x4000D10")]
	private const string RPC_MasterGanchoEnganchado = "MasterGanchoEnganchadoPUN";

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x136FBEC", Offset = "0x136FBEC", VA = "0x136FBEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x136FE84", Offset = "0x136FE84", VA = "0x136FE84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x1370868", Offset = "0x1370868", VA = "0x1370868")]
	private void QuitarGanchos()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x1370F40", Offset = "0x1370F40", VA = "0x1370F40")]
	private void QuitarGancho(Weapon arma, GanchoRifle gancho)
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x1371470", Offset = "0x1371470", VA = "0x1371470", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x137201C", Offset = "0x137201C", VA = "0x137201C")]
	public void MasterGolpeoABoss(int arma)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x13722D4", Offset = "0x13722D4", VA = "0x13722D4")]
	[PunRPC]
	private void MasterGolpeoABossPUN(int arma)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x1372384", Offset = "0x1372384", VA = "0x1372384")]
	public void SateliteDestruido(int photonviewSatelite)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x1372634", Offset = "0x1372634", VA = "0x1372634")]
	[PunRPC]
	private void SateliteDestruidoPUN(int photonviewSatelite)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x13727CC", Offset = "0x13727CC", VA = "0x13727CC")]
	public void BossDerrotado()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x1372A04", Offset = "0x1372A04", VA = "0x1372A04")]
	[PunRPC]
	private void BossDerrotadoPUN()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x1372AA4", Offset = "0x1372AA4", VA = "0x1372AA4")]
	public void MasterGanchoEnganchado(bool enganchado)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x1372D74", Offset = "0x1372D74", VA = "0x1372D74")]
	[PunRPC]
	private void MasterGanchoEnganchadoPUN(bool enganchado)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x1372E34", Offset = "0x1372E34", VA = "0x1372E34")]
	public SyncBoss()
	{
	}
}
[Token(Token = "0x200019D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87BA28", Offset = "0x87BA28")]
public class SyncEsferaMetralleta : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1F3C")]
	private Vector3 pos;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 rot;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform objeto;

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x1372F5C", Offset = "0x1372F5C", VA = "0x1372F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x13733D4", Offset = "0x13733D4", VA = "0x13733D4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x1373634", Offset = "0x1373634", VA = "0x1373634")]
	public SyncEsferaMetralleta()
	{
	}
}
[Token(Token = "0x200019E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87BAD8", Offset = "0x87BAD8")]
public class SyncJugadores : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool zurdo;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17DB")]
	private bool dosManos;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool dosSensores;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1F4C")]
	public MonoBehaviour[] localScripts;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] localObjectDes;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject[] localObjectAct;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform cabeza;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17E3")]
	public Transform manoD;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform manoI;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1F5C")]
	public Transform cabezaJugOnline;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform manoDJugOnline;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform manoIJugOnline;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 latestPosCuerpo;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17EB")]
	private Vector3 latestPosCabeza;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 latestPosManoD;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1F6C")]
	private Vector3 latestPosManoI;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 latestPosGanchoD;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 latestPosGanchoI;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posIniGanchoD;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17F3")]
	private Vector3 posIniGanchoI;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 rotIniGanchoD;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1F7C")]
	private Vector3 rotIniGanchoI;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posIniGanchoRifleD;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posIniGanchoRifleI;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 rotIniGanchoRifleD;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17FB")]
	private Vector3 rotIniGanchoRifleI;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Quaternion latestRotCuerpo;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1F8C")]
	private Quaternion latestRotCabeza;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion latestRotManoD;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion latestRotManoI;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion latestRotGanchoD;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1803")]
	private Quaternion latestRotGanchoI;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int miIdJuego;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1F9C")]
	private int miIdPhoton;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ControladorMano.EstadoDeLaMano estadoManoOnlineDerecha;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ControladorMano.EstadoDeLaMano estadoManoOnlineIzquierda;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ControladorMano.EstadoDeLaMano anteriorEstadoManoOnlineDerecha;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180B")]
	private ControladorMano.EstadoDeLaMano anteriorEstadoManoOnlineIzquierda;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Rifle.EstadoArmaOnline estadoRifleOnline;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1FAC")]
	private Rifle.EstadoArmaOnline anteriorEstadoRifleOnline;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform pistolaComplejaD;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform pistolaComplejaI;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform ganchoRifleD;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1813")]
	public Transform ganchoRifleI;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject pistolaOnlineSimpleD;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1FBC")]
	public GameObject pistolaOnlineSimpleI;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pistolaOnlineComplejaD;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pistolaOnlineComplejaI;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pistolaOnlineRifleD;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181B")]
	public GameObject pistolaOnlineRifleI;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject pistolaOnlineComplejaGanchoD;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1FCC")]
	public GameObject pistolaOnlineComplejaGanchoI;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ControladorCadenaOnline controladorCadenaOnline;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SkinnedMeshRenderer meshManoD;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SkinnedMeshRenderer meshManoI;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1823")]
	public SkinnedMeshRenderer meshManoJugOnlineD;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public SkinnedMeshRenderer meshManoJugOnlineI;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1FDC")]
	public Material fantasmalMat;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material materialMano;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material materialCabeza;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material materialPistola;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x182B")]
	private Material materialRifle;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int equipo;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1FEC")]
	private int Activado;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform padre;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshProUGUI nombreTxt;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Image imgSpeaker;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1833")]
	public Image micButton;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Image speakerButton;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B1FFC")]
	public Sprite micOn;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Sprite micOff;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Sprite speakerOn;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Sprite speakerOff;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x183B")]
	private MeshRenderer meshPistolaOnlineSimpleD;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private MeshRenderer meshPistolaOnlineSimpleI;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B200C")]
	private MeshRenderer meshRifleOnlineI;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MeshRenderer meshRifleOnlineD;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MeshRenderer[] meshesPistolaOnlineComplejaD;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MeshRenderer[] meshesPistolaOnlineComplejaI;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1843")]
	private MeshRenderer[] meshesRifleOnlineComplejaD;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private MeshRenderer[] meshesRifleOnlineComplejaI;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B201C")]
	[HideInInspector]
	public bool empezar;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int idPhotonVoiceView;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool nombreColocado;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool yoMuteado;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184B")]
	private float velocidadLerpGancho;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool ganchoDActivo;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B202C")]
	private bool ganchoIActivo;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource asVozSpeaker;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool estoyFantasmal;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material neoMat;

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x13737C0", Offset = "0x13737C0", VA = "0x13737C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x1375114", Offset = "0x1375114", VA = "0x1375114")]
	private void Activar()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x1375208", Offset = "0x1375208", VA = "0x1375208")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x1379880", Offset = "0x1379880", VA = "0x1379880")]
	private void CambiarEstadoPistola(ControladorMano.EstadoDeLaMano estado, bool manoDerecha)
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x1379E88", Offset = "0x1379E88", VA = "0x1379E88")]
	private void MoverGancho(bool manoDerecha, Vector3 pos, Quaternion rot, bool fueraDelPadre, bool primeraVez)
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x137AD18", Offset = "0x137AD18", VA = "0x137AD18")]
	private void CambiarEstadoRifle(Rifle.EstadoArmaOnline estado)
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x137C380", Offset = "0x137C380", VA = "0x137C380")]
	private void MoverGanchoRifle(bool derecha, Vector3 pos, Quaternion rot, bool fueraDelPadre)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x137D1CC", Offset = "0x137D1CC", VA = "0x137D1CC")]
	public ControladorMano.EstadoDeLaMano GanchoPuedeDestruirEsfera(Transform pistola)
	{
		return default(ControladorMano.EstadoDeLaMano);
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x137D3F0", Offset = "0x137D3F0", VA = "0x137D3F0")]
	public bool EsArmaDerecha(Transform pistola)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x137D7F8", Offset = "0x137D7F8", VA = "0x137D7F8")]
	public void PonermeFantasma()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x137DF78", Offset = "0x137DF78", VA = "0x137DF78")]
	public void PonermeResucitado()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x1374D18", Offset = "0x1374D18", VA = "0x1374D18")]
	public void MutearMe()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x137E730", Offset = "0x137E730", VA = "0x137E730")]
	public void MutearJugadores()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x137EA24", Offset = "0x137EA24", VA = "0x137EA24", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x1380BE8", Offset = "0x1380BE8", VA = "0x1380BE8")]
	public SyncJugadores()
	{
	}
}
[Token(Token = "0x200019F")]
public class SyncMina : MonoBehaviourPun
{
	[Token(Token = "0x4000D6F")]
	private const string RPC_Exploto = "ExplotoPUN";

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x1380C74", Offset = "0x1380C74", VA = "0x1380C74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x1380D48", Offset = "0x1380D48", VA = "0x1380D48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x1380E1C", Offset = "0x1380E1C", VA = "0x1380E1C")]
	public void Exploto()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x1381054", Offset = "0x1381054", VA = "0x1381054")]
	[PunRPC]
	private void ExplotoPUN()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x13810F0", Offset = "0x13810F0", VA = "0x13810F0")]
	public SyncMina()
	{
	}
}
[Token(Token = "0x20001A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87BB88", Offset = "0x87BB88")]
public class SyncPelota : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x2000563")]
	public enum AccionesBolaOnline
	{
		[Token(Token = "0x400290F")]
		Destruirse,
		[Token(Token = "0x4002910")]
		Apagar,
		[Token(Token = "0x4002911")]
		Encender
	}

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1853")]
	private Bola bola;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public Bola.TipoEsfera tipoActual;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B203C")]
	private Vector3 latestPos;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Quaternion latestRot;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 latestScale;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool activadaSegunRed;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185B")]
	private int estaActivada;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public int auxiliar;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B204C")]
	private MeshRenderer mesh;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject particulaElectricidadGo;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject particulasTrailGo;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material matActivado;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1863")]
	private Material matDesactivado;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public Bola.TipoEsfera tipoEsferaSegunRed;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B205C")]
	[HideInInspector]
	public EsferaOnline esferaOnline;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float sensibilidadLerp;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int estaFantasmal;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x186B")]
	private bool flag;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public bool tengoEscudo;

	[Token(Token = "0x4000D84")]
	private const string RPC_EnviarAccion = "EnviarAccionPUN";

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x1381120", Offset = "0x1381120", VA = "0x1381120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x13817E8", Offset = "0x13817E8", VA = "0x13817E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x1381A54", Offset = "0x1381A54", VA = "0x1381A54")]
	public void ApagarEncenderMesh(bool activar)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1381AC0", Offset = "0x1381AC0", VA = "0x1381AC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x138214C", Offset = "0x138214C", VA = "0x138214C")]
	public void SetEstaActivada(int value)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x1382184", Offset = "0x1382184", VA = "0x1382184")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x13827E4", Offset = "0x13827E4", VA = "0x13827E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x13837E8", Offset = "0x13837E8", VA = "0x13837E8")]
	public void ActivarDesactivar(bool activar, float px = 2000f, float py = 2000f, float pz = 2000f, float sx = 2000f, float sy = 2000f, float sz = 2000f)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x1384554", Offset = "0x1384554", VA = "0x1384554", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x13814CC", Offset = "0x13814CC", VA = "0x13814CC")]
	public void EnviarAccion(AccionesBolaOnline accion, Vector3 pos, Vector3 escala)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x1385B50", Offset = "0x1385B50", VA = "0x1385B50")]
	[PunRPC]
	private void EnviarAccionPUN(int accion, Vector3 pos, Vector3 escala)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x1385D84", Offset = "0x1385D84", VA = "0x1385D84")]
	public SyncPelota()
	{
	}
}
[Token(Token = "0x20001A1")]
public class SyncTorreta : MonoBehaviourPun
{
	[Token(Token = "0x4000D85")]
	private const string RPC_HeActivadoUnaTorreta = "HeActivadoUnaTorretaPUN";

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x1385ED8", Offset = "0x1385ED8", VA = "0x1385ED8")]
	public void HeActivadoUnaTorreta(bool activar, int idPhotonPlayerTarget)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x1386C98", Offset = "0x1386C98", VA = "0x1386C98")]
	[PunRPC]
	private void HeActivadoUnaTorretaPUN(bool activar, int idPhotonPlayerTarget, int nivelTorreta)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x13872C8", Offset = "0x13872C8", VA = "0x13872C8")]
	public SyncTorreta()
	{
	}
}
[Token(Token = "0x20001A2")]
public abstract class Arma : MonoBehaviour
{
	[Token(Token = "0x2000564")]
	public enum ClipsAudioWeapon
	{
		[Token(Token = "0x4002913")]
		Disparar,
		[Token(Token = "0x4002914")]
		Golpear,
		[Token(Token = "0x4002915")]
		InicioPowerup,
		[Token(Token = "0x4002916")]
		FinPowerup,
		[Token(Token = "0x4002917")]
		DisparoEscopeta,
		[Token(Token = "0x4002918")]
		DisparoLaser,
		[Token(Token = "0x4002919")]
		GolpearErrorEscudo,
		[Token(Token = "0x400291A")]
		Atraer,
		[Token(Token = "0x400291B")]
		DispararGancho,
		[Token(Token = "0x400291C")]
		Recargar,
		[Token(Token = "0x400291D")]
		Cont
	}

	[Token(Token = "0x2000565")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880568", Offset = "0x880568")]
	private sealed class <RecargarCor>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400291F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Arma <>4__this;

		[Token(Token = "0x170003EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x1509B48", Offset = "0x1509B48", VA = "0x1509B48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024D7")]
			[Address(RVA = "0x1509C18", Offset = "0x1509C18", VA = "0x1509C18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x1509368", Offset = "0x1509368", VA = "0x1509368")]
		[DebuggerHidden]
		public <RecargarCor>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x1509638", Offset = "0x1509638", VA = "0x1509638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x150964C", Offset = "0x150964C", VA = "0x150964C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x1509B78", Offset = "0x1509B78", VA = "0x1509B78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ControladorMano miMano;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B207C")]
	protected AudioClip[] audioClipsWeapon;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool puedeDisparar;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool armaEstaEnBloque;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool armaAncladaABloque;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x187B")]
	[HideInInspector]
	public bool nivelIniciado;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public bool heDestruidoEsferaAlSerLanzado;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B208C")]
	[HideInInspector]
	public bool rifle;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int municion;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer pantalla;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject PunteroFixParaCorregirDisparo;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1883")]
	[HideInInspector]
	public GameObject coliderPistola;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public GameObject triggerPistola;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B209C")]
	protected float cadenciaNormal;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected float cadenciaEscopeta;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected float cadenciaLaser;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected float anguloDispersion;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188B")]
	protected float velocidadBalaEscopeta;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float fuerzaSalto;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B20AC")]
	protected ParticleSystem particulasDisparo;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected ParticleSystem particulasDisparo2;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected int ticksDesdeUltimoDisparo;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected AudioSource[] audioSources;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1893")]
	[HideInInspector]
	public Weapon weaponScript;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public Rifle rifleScript;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B20C4")]
	[HideInInspector]
	public bool armaEstaEnPared;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool ChocadoPelota;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int municionMaxNormal;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int municionMaxEscopeta;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189B")]
	[HideInInspector]
	public int municionMaxLaser;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public int municionMaxActual;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B20D4")]
	[HideInInspector]
	public Vector3 transformInicial;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Quaternion rotacionInicial;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Transform padreInicio;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer meshArma;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18A3")]
	[HideInInspector]
	public bool armaEnFantasmal;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Material[] materiales;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B20E4")]
	public TextMeshPro textoTiempoArma;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Coroutine devolverALaNormalidadCor;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tiempoRecarga;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool recargando;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18AB")]
	private Coroutine corRecargar;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public Animator animPistola;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B20F4")]
	public GameObject laser;

	[Token(Token = "0x6000D36")]
	public abstract void Disparo();

	[Token(Token = "0x6000D37")]
	public abstract void PonerPosicionInicial();

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x15090A4", Offset = "0x15090A4", VA = "0x15090A4")]
	public void Recargar()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x15092AC", Offset = "0x15092AC", VA = "0x15092AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A6D30", Offset = "0x8A6D30")]
	private IEnumerator RecargarCor()
	{
		return null;
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x15093B0", Offset = "0x15093B0", VA = "0x15093B0")]
	public void SetPosIniWeapon()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x15094B0", Offset = "0x15094B0", VA = "0x15094B0")]
	protected Arma()
	{
	}
}
[Token(Token = "0x20001A3")]
public class BalaEsfera : MonoBehaviour
{
	[Token(Token = "0x2000566")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8805A4", Offset = "0x8805A4")]
	private sealed class <PonerSonidoRebote>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18DB")]
		public BalaEsfera <>4__this;

		[Token(Token = "0x170003EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x1510170", Offset = "0x1510170", VA = "0x1510170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024DD")]
			[Address(RVA = "0x1510240", Offset = "0x1510240", VA = "0x1510240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x150F800", Offset = "0x150F800", VA = "0x150F800")]
		[DebuggerHidden]
		public <PonerSonidoRebote>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x150FF04", Offset = "0x150FF04", VA = "0x150FF04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x150FF18", Offset = "0x150FF18", VA = "0x150FF18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x15101A0", Offset = "0x15101A0", VA = "0x15101A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C3")]
	public Transform target;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 dir;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2124")]
	public Vector3 destino;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 velocidadSinTrucar;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float ranPosX;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float ranPosY;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18CB")]
	private float ranPosZ;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Rigidbody rb;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2134")]
	public float vel;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool rebotado;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool puedoDestruirBala;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoBalaPuedeDestruirse;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18D3")]
	public int equipo;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private SphereCollider colider;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2144")]
	private SyncBala balaSync;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine SonidoRebote;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x150E340", Offset = "0x150E340", VA = "0x150E340")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x150E9EC", Offset = "0x150E9EC", VA = "0x150E9EC")]
	public void CambiarTarget(Transform t)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x150EE14", Offset = "0x150EE14", VA = "0x150EE14")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x150F744", Offset = "0x150F744", VA = "0x150F744")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A6DE0", Offset = "0x8A6DE0")]
	private IEnumerator PonerSonidoRebote()
	{
		return null;
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x150F848", Offset = "0x150F848", VA = "0x150F848")]
	public void Rebotar(Vector3 normal)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x150FAF8", Offset = "0x150FAF8", VA = "0x150FAF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x150FDA4", Offset = "0x150FDA4", VA = "0x150FDA4")]
	public BalaEsfera()
	{
	}
}
[Token(Token = "0x20001A4")]
public class BloqueRompibleDummy : MonoBehaviour
{
	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x1515CF0", Offset = "0x1515CF0", VA = "0x1515CF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x1515D04", Offset = "0x1515D04", VA = "0x1515D04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x1515D18", Offset = "0x1515D18", VA = "0x1515D18")]
	public BloqueRompibleDummy()
	{
	}
}
[Token(Token = "0x20001A5")]
public abstract class Bola : MonoBehaviour
{
	[Token(Token = "0x2000567")]
	[HideInInspector]
	public enum TipoEsfera
	{
		[Token(Token = "0x4002925")]
		roja,
		[Token(Token = "0x4002926")]
		azul,
		[Token(Token = "0x4002927")]
		rojaFantasmal,
		[Token(Token = "0x4002928")]
		azulFantasmal,
		[Token(Token = "0x4002929")]
		negra,
		[Token(Token = "0x400292A")]
		multiEquipo,
		[Token(Token = "0x400292B")]
		multiequipoFantasmal,
		[Token(Token = "0x400292C")]
		Mina,
		[Token(Token = "0x400292D")]
		desconocido
	}

	[Token(Token = "0x2000568")]
	public enum TipoEscudo
	{
		[Token(Token = "0x400292F")]
		nunguno,
		[Token(Token = "0x4002930")]
		gancho,
		[Token(Token = "0x4002931")]
		balas,
		[Token(Token = "0x4002932")]
		laser,
		[Token(Token = "0x4002933")]
		negro,
		[Token(Token = "0x4002934")]
		mina,
		[Token(Token = "0x4002935")]
		cont
	}

	[Token(Token = "0x2000569")]
	public enum ClipsAudioEsfera
	{
		[Token(Token = "0x4002937")]
		GolpeEscudoCorrecto,
		[Token(Token = "0x4002938")]
		GolpeEscudoIncorrecto,
		[Token(Token = "0x4002939")]
		EscudoRoto,
		[Token(Token = "0x400293A")]
		Cont
	}

	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88061C", Offset = "0x88061C")]
	private sealed class <CorrutinaDestruirEscudo>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400293B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B21E4")]
		private object <>2__current;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Bola <>4__this;

		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <i>5__2;

		[Token(Token = "0x170003F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x151AA64", Offset = "0x151AA64", VA = "0x151AA64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024E3")]
			[Address(RVA = "0x151AB34", Offset = "0x151AB34", VA = "0x151AB34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x15188E0", Offset = "0x15188E0", VA = "0x15188E0")]
		[DebuggerHidden]
		public <CorrutinaDestruirEscudo>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x151A104", Offset = "0x151A104", VA = "0x151A104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x151A118", Offset = "0x151A118", VA = "0x151A118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x151AA94", Offset = "0x151AA94", VA = "0x151AA94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int NivelDeBolaInicial;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2154")]
	[HideInInspector]
	public int NivelDeBolaFinal;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Texture[] iconosEscudos;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TipoEsfera tipoEsfera;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TipoEscudo tipoEscudo;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18E3")]
	[HideInInspector]
	public TipoEscudo tipoEscudoInicio;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public bool escudoDestruido;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2164")]
	[HideInInspector]
	public bool destruyendoEscudo;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool ganchoEnganchado;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int escudoHeredable;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool fantasmal;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18EB")]
	[HideInInspector]
	public int equipo;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public AudioSource audioSourceBola;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2174")]
	public MeshRenderer escudoEsfera;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tiempoVida;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem particleTrailEsfera;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer mesh;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18F3")]
	public Material activado;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Material activadoLow;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2184")]
	public Material desactivado;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoParaQuitarFantasmal;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool efectoAparecerEnOnEnable;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected AudioClip[] audioClipsBoss;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18FB")]
	protected AudioSource[] audioSources;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public List<GanchoRifle> ganchosRifleEnganchados;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2194")]
	[HideInInspector]
	public List<Weapon> ganchosWeaponEnganchados;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine efectoDestruccionEscudo;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 oldPuntoTrail;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3[] puntos;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1903")]
	protected float vertexOffsetInicial;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected float opacityInicial;

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x1515D48", Offset = "0x1515D48", VA = "0x1515D48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x151613C", Offset = "0x151613C", VA = "0x151613C")]
	public float GetTiempoParaQuitarFantasmal()
	{
		return default(float);
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x151616C", Offset = "0x151616C", VA = "0x151616C")]
	public void setTiempoParaQuitarFantasmal(float valor)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x15161A4", Offset = "0x15161A4", VA = "0x15161A4")]
	public void Resetear()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x1516B90", Offset = "0x1516B90", VA = "0x1516B90")]
	public void CambiarDuracionTrail(float escala)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x15170DC", Offset = "0x15170DC", VA = "0x15170DC")]
	public bool EsDeMiEquipo(int equipoJug = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x1515E54", Offset = "0x1515E54", VA = "0x1515E54")]
	public int GetEquipo()
	{
		return default(int);
	}

	[Token(Token = "0x6000D4D")]
	public abstract void CalcularColor();

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x1517250", Offset = "0x1517250", VA = "0x1517250")]
	public void SetEquipo(int valor)
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x1517414", Offset = "0x1517414", VA = "0x1517414")]
	public TipoEsfera GetTipoEsfera()
	{
		return default(TipoEsfera);
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x1517444", Offset = "0x1517444", VA = "0x1517444")]
	public void SetTipoEsfera(TipoEsfera tipo)
	{
	}

	[Token(Token = "0x6000D51")]
	public abstract void Destruirse();

	[Token(Token = "0x6000D52")]
	public abstract int GetEstadoEscudo();

	[Token(Token = "0x6000D53")]
	public abstract void GolpeoEscudo(int numGolpes = 1);

	[Token(Token = "0x6000D54")]
	public abstract void ponerComoInicio();

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x1517E08", Offset = "0x1517E08", VA = "0x1517E08")]
	public TipoEscudo GetTipoEscudo()
	{
		return default(TipoEscudo);
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x1517E38", Offset = "0x1517E38", VA = "0x1517E38")]
	public void SetTipoEscudo(TipoEscudo tipo)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x1516330", Offset = "0x1516330", VA = "0x1516330")]
	public void PonerEscudo()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x1518488", Offset = "0x1518488", VA = "0x1518488")]
	public Texture[] GetIconosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x151878C", Offset = "0x151878C", VA = "0x151878C")]
	public void DestruirEscudo()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x1518824", Offset = "0x1518824", VA = "0x1518824")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A6E90", Offset = "0x8A6E90")]
	private IEnumerator CorrutinaDestruirEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x1518928", Offset = "0x1518928", VA = "0x1518928")]
	private void PonerInmune(float tiempo = 0.5f, bool sinCambiarMaterial = false)
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x15176C0", Offset = "0x15176C0", VA = "0x15176C0")]
	public void PonerColorAParticulasTrailEsfera()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x1517E84", Offset = "0x1517E84", VA = "0x1517E84")]
	public Color GetBaseColorShield()
	{
		return default(Color);
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x1518188", Offset = "0x1518188", VA = "0x1518188")]
	public Color GetFresnelColorShield()
	{
		return default(Color);
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x1518A70", Offset = "0x1518A70", VA = "0x1518A70")]
	public Vector3 GetEscala()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x1516DB0", Offset = "0x1516DB0", VA = "0x1516DB0")]
	public float GetTrailTiempoDeVida(float escala)
	{
		return default(float);
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x15191D0", Offset = "0x15191D0", VA = "0x15191D0")]
	public void CambiarDeEquipo(int equipo)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x1519444", Offset = "0x1519444", VA = "0x1519444")]
	public void PonerAudioEnAudioSource(ClipsAudioEsfera clipAudio)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x151996C", Offset = "0x151996C", VA = "0x151996C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x1519BF8", Offset = "0x1519BF8", VA = "0x1519BF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x1519C28", Offset = "0x1519C28", VA = "0x1519C28")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x1519F34", Offset = "0x1519F34", VA = "0x1519F34")]
	protected Bola()
	{
	}
}
[Token(Token = "0x20001A6")]
[ExecuteInEditMode]
public class BolaDummy : Bola
{
	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject minaGo;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x192B")]
	public GameObject pelotaGo;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Material materialShield;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B21F4")]
	private TipoEsfera tipo;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TipoEscudo tipoE;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 direccion;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material miMat;

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x151AB64", Offset = "0x151AB64", VA = "0x151AB64", Slot = "5")]
	public override void Destruirse()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x151AC04", Offset = "0x151AC04", VA = "0x151AC04", Slot = "4")]
	public override void CalcularColor()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x151B264", Offset = "0x151B264", VA = "0x151B264", Slot = "7")]
	public override void GolpeoEscudo(int numGolpes = 1)
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x151B308", Offset = "0x151B308", VA = "0x151B308", Slot = "8")]
	public override void ponerComoInicio()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x151B3A8", Offset = "0x151B3A8", VA = "0x151B3A8", Slot = "6")]
	public override int GetEstadoEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x151B448", Offset = "0x151B448", VA = "0x151B448")]
	public BolaDummy()
	{
	}
}
[Token(Token = "0x20001A7")]
public class BossDummy : MonoBehaviour
{
	[Token(Token = "0x200056B")]
	public enum TipoDeBoss
	{
		[Token(Token = "0x4002940")]
		Mundo1_EscudoBala,
		[Token(Token = "0x4002941")]
		Mundo2_HackerMetralleta,
		[Token(Token = "0x4002942")]
		Mundo3_Mina,
		[Token(Token = "0x4002943")]
		Mundo4_Laser,
		[Token(Token = "0x4002944")]
		Mundo5_EscudoCadena,
		[Token(Token = "0x4002945")]
		Mundo6_Dragon,
		[Token(Token = "0x4002946")]
		Mundo7_OjoDebil,
		[Token(Token = "0x4002947")]
		Mundo8_Teleport,
		[Token(Token = "0x4002948")]
		Mundo9_Satelites,
		[Token(Token = "0x4002949")]
		Mundo10_Indeciso,
		[Token(Token = "0x400294A")]
		Mundo11_DragonDebil,
		[Token(Token = "0x400294B")]
		Mundo12_HackerMetralleta,
		[Token(Token = "0x400294C")]
		Mundo13_EscudoCadena,
		[Token(Token = "0x400294D")]
		Mundo14_Teleport
	}

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1933")]
	public TipoDeBoss tipo;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 direccion;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2204")]
	public bool bossMejorado;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x1D410D4", Offset = "0x1D410D4", VA = "0x1D410D4")]
	public BossDummy()
	{
	}
}
[Token(Token = "0x20001A8")]
public class EsferaOnline : Bola
{
	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880658", Offset = "0x880658")]
	private sealed class <Explota>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1953")]
		private int <>1__state;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2244")]
		public EsferaOnline <>4__this;

		[Token(Token = "0x170003F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x12DB1F8", Offset = "0x12DB1F8", VA = "0x12DB1F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024E9")]
			[Address(RVA = "0x12DB2C8", Offset = "0x12DB2C8", VA = "0x12DB2C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x12D9950", Offset = "0x12D9950", VA = "0x12D9950")]
		[DebuggerHidden]
		public <Explota>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x12DADC0", Offset = "0x12DADC0", VA = "0x12DADC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x12DADD4", Offset = "0x12DADD4", VA = "0x12DADD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x12DB228", Offset = "0x12DB228", VA = "0x12DB228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194B")]
	public GameObject explosion;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private EfectoDesaparecer efectoDesaparecer;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2234")]
	[HideInInspector]
	public int numBalasEscudo;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TrailRenderer trailEsfera;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoEnganchado;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject ultimaBala;

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x12D86BC", Offset = "0x12D86BC", VA = "0x12D86BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x12D88A4", Offset = "0x12D88A4", VA = "0x12D88A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x12D89A0", Offset = "0x12D89A0", VA = "0x12D89A0")]
	private void QuitarGanchosAlDestruirEscudo()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x12D9170", Offset = "0x12D9170", VA = "0x12D9170")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x12D91E4", Offset = "0x12D91E4", VA = "0x12D91E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x12D9270", Offset = "0x12D9270", VA = "0x12D9270")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x12D981C", Offset = "0x12D981C", VA = "0x12D981C", Slot = "4")]
	public override void CalcularColor()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x12D984C", Offset = "0x12D984C", VA = "0x12D984C", Slot = "5")]
	public override void Destruirse()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x12D9894", Offset = "0x12D9894", VA = "0x12D9894")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A6F40", Offset = "0x8A6F40")]
	private IEnumerator Explota()
	{
		return null;
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x12D9998", Offset = "0x12D9998", VA = "0x12D9998", Slot = "7")]
	public override void GolpeoEscudo(int numGolpes = 1)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x12D9A3C", Offset = "0x12D9A3C", VA = "0x12D9A3C", Slot = "8")]
	public override void ponerComoInicio()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x12D9ADC", Offset = "0x12D9ADC", VA = "0x12D9ADC", Slot = "6")]
	public override int GetEstadoEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x12D9B7C", Offset = "0x12D9B7C", VA = "0x12D9B7C")]
	public void PonerEscudoOnline(int numbalas)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x12D9C7C", Offset = "0x12D9C7C", VA = "0x12D9C7C")]
	public void QuitarEscudo()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x12D9CAC", Offset = "0x12D9CAC", VA = "0x12D9CAC")]
	public void CambiarNumBalasEscudo(int numbalas)
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x12D9E30", Offset = "0x12D9E30", VA = "0x12D9E30")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x12DAD90", Offset = "0x12DAD90", VA = "0x12DAD90")]
	public EsferaOnline()
	{
	}
}
[Token(Token = "0x20001A9")]
public class EsferaScript : Bola
{
	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880694", Offset = "0x880694")]
	private sealed class <TiempoDispario>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EsferaScript <>4__this;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1983")]
		private GameObject <instancia>5__2;

		[Token(Token = "0x170003F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x12E9A44", Offset = "0x12E9A44", VA = "0x12E9A44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x12E9B14", Offset = "0x12E9B14", VA = "0x12E9B14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x12E746C", Offset = "0x12E746C", VA = "0x12E746C")]
		[DebuggerHidden]
		public <TiempoDispario>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x12E96CC", Offset = "0x12E96CC", VA = "0x12E96CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x12E96E0", Offset = "0x12E96E0", VA = "0x12E96E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x12E9A74", Offset = "0x12E9A74", VA = "0x12E9A74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8806D0", Offset = "0x8806D0")]
	private sealed class <Explota>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B22A4")]
		private object <>2__current;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EsferaScript <>4__this;

		[Token(Token = "0x170003F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024F3")]
			[Address(RVA = "0x12E8E80", Offset = "0x12E8E80", VA = "0x12E8E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024F5")]
			[Address(RVA = "0x12E8F50", Offset = "0x12E8F50", VA = "0x12E8F50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x12E7B40", Offset = "0x12E7B40", VA = "0x12E7B40")]
		[DebuggerHidden]
		public <Explota>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x12E8988", Offset = "0x12E8988", VA = "0x12E8988", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x12E899C", Offset = "0x12E899C", VA = "0x12E899C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x12E8EB0", Offset = "0x12E8EB0", VA = "0x12E8EB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88070C", Offset = "0x88070C")]
	private sealed class <ReiniciarNumeroDisparosEscudo>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198B")]
		public EsferaScript <>4__this;

		[Token(Token = "0x170003F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x12E95CC", Offset = "0x12E95CC", VA = "0x12E95CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x12E969C", Offset = "0x12E969C", VA = "0x12E969C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x12E8418", Offset = "0x12E8418", VA = "0x12E8418")]
		[DebuggerHidden]
		public <ReiniciarNumeroDisparosEscudo>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x12E927C", Offset = "0x12E927C", VA = "0x12E927C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x12E9290", Offset = "0x12E9290", VA = "0x12E9290", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x12E95FC", Offset = "0x12E95FC", VA = "0x12E95FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000570")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880748", Offset = "0x880748")]
	private sealed class <ForzarMovimientoConTiempo>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B22B4")]
		private object <>2__current;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EsferaScript <>4__this;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float tiempo;

		[Token(Token = "0x170003FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x12E917C", Offset = "0x12E917C", VA = "0x12E917C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002501")]
			[Address(RVA = "0x12E924C", Offset = "0x12E924C", VA = "0x12E924C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x12E86DC", Offset = "0x12E86DC", VA = "0x12E86DC")]
		[DebuggerHidden]
		public <ForzarMovimientoConTiempo>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x12E8F80", Offset = "0x12E8F80", VA = "0x12E8F80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x12E8F94", Offset = "0x12E8F94", VA = "0x12E8F94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x12E91AC", Offset = "0x12E91AC", VA = "0x12E91AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 velocidadSinTrucar;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool heColisionadoAlgunaVez;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 posicionAnterior;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x195B")]
	public Vector3 iteracionesConMovimientoNulo;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float vel;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2254")]
	public float porcentaje;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 dir;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 dirInicial;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject bala;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1963")]
	public GameObject explosion;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject puntoReferencia;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2264")]
	private AudioClip[] efectosDeExplosion;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool forzarTiempoNormal;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 prevDir;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rigidbody rb;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x196B")]
	private EfectoDesaparecer efectoDesaparecer;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool dividiendo;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2274")]
	private Vector3 nuevaDireccionDesvioPorDisparoABola;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int ticksVagos;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 velocidadSinTrucarIdeal;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float velInicial;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1973")]
	private float tiempoEnganchado;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float tiempoDesdeUltimaParedMovible;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2284")]
	private GameObject balaAcabaDeEntrar;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool muerta;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine reiniciarNumeroDisparos;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int numeroBalasEscudo;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x197B")]
	private Coroutine corForzarTiempo;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool esferaDragon;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2294")]
	private BossDragon bossDragon;

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x12DB2F8", Offset = "0x12DB2F8", VA = "0x12DB2F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x12DB594", Offset = "0x12DB594", VA = "0x12DB594")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x12DC35C", Offset = "0x12DC35C", VA = "0x12DC35C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x12DC38C", Offset = "0x12DC38C", VA = "0x12DC38C")]
	public void DisableEsfera()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x12DC7B0", Offset = "0x12DC7B0", VA = "0x12DC7B0", Slot = "4")]
	public override void CalcularColor()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x12DCC3C", Offset = "0x12DCC3C", VA = "0x12DCC3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x12DD1F4", Offset = "0x12DD1F4", VA = "0x12DD1F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x12E0938", Offset = "0x12E0938", VA = "0x12E0938", Slot = "8")]
	public override void ponerComoInicio()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x12E0A30", Offset = "0x12E0A30", VA = "0x12E0A30")]
	public void CambiarDireccion(Vector3 newDir, float distance = -1f)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x12E1034", Offset = "0x12E1034", VA = "0x12E1034")]
	private void DireccionEsferaAlJugador(Collision collision)
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x12E12E4", Offset = "0x12E12E4", VA = "0x12E12E4")]
	public void DireccionEsferaNormal(Vector3 other)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x12E1884", Offset = "0x12E1884", VA = "0x12E1884")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x12E2564", Offset = "0x12E2564", VA = "0x12E2564")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x12E73B0", Offset = "0x12E73B0", VA = "0x12E73B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A6FF0", Offset = "0x8A6FF0")]
	private IEnumerator TiempoDispario()
	{
		return null;
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x12DE940", Offset = "0x12DE940", VA = "0x12DE940")]
	public bool Divide(GameObject other, int puntos, bool porBala = false, float xVelocityBalaOnline = -1000f, float yVelocityBalaOnline = -1000f, float zVelocityBalaOnline = -1000f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x12E76D8", Offset = "0x12E76D8", VA = "0x12E76D8", Slot = "5")]
	public override void Destruirse()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x12E7A84", Offset = "0x12E7A84", VA = "0x12E7A84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A70A0", Offset = "0x8A70A0")]
	private IEnumerator Explota()
	{
		return null;
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x12E7B88", Offset = "0x12E7B88", VA = "0x12E7B88")]
	private void Disparar()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x12E7D20", Offset = "0x12E7D20", VA = "0x12E7D20", Slot = "6")]
	public override int GetEstadoEscudo()
	{
		return default(int);
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x12E7DB8", Offset = "0x12E7DB8", VA = "0x12E7DB8", Slot = "7")]
	public override void GolpeoEscudo(int numGolpes = 1)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x12E835C", Offset = "0x12E835C", VA = "0x12E835C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7150", Offset = "0x8A7150")]
	private IEnumerator ReiniciarNumeroDisparosEscudo()
	{
		return null;
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x12DD074", Offset = "0x12DD074", VA = "0x12DD074")]
	protected void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x12E8460", Offset = "0x12E8460", VA = "0x12E8460")]
	public void ResetearEsfera()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x12E71DC", Offset = "0x12E71DC", VA = "0x12E71DC")]
	public void ForzarMovimientoConTiempo1(float tiempo)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x12E85F8", Offset = "0x12E85F8", VA = "0x12E85F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7200", Offset = "0x8A7200")]
	private IEnumerator ForzarMovimientoConTiempo(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x12E8724", Offset = "0x12E8724", VA = "0x12E8724")]
	public void ModificarTipoEsferaIngame(TipoEsfera tipo, BossDragon boss)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x12E74B4", Offset = "0x12E74B4", VA = "0x12E74B4")]
	public void PonerEsferaDeInicio()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x12E87D8", Offset = "0x12E87D8", VA = "0x12E87D8")]
	public EsferaScript()
	{
	}
}
[Token(Token = "0x20001AA")]
public class GanchoRifle : MonoBehaviour
{
	[Token(Token = "0x2000571")]
	public enum EstadoDelGancho
	{
		[Token(Token = "0x4002960")]
		Deasactivado,
		[Token(Token = "0x4002961")]
		EnRifle,
		[Token(Token = "0x4002962")]
		Lanzandose,
		[Token(Token = "0x4002963")]
		PuedeRetornar,
		[Token(Token = "0x4002964")]
		Retornando
	}

	[Token(Token = "0x2000572")]
	public enum ClipsAudioGancho
	{
		[Token(Token = "0x4002966")]
		Golpear,
		[Token(Token = "0x4002967")]
		GolpearErrorEscudo,
		[Token(Token = "0x4002968")]
		TransformarAGancho,
		[Token(Token = "0x4002969")]
		TransformarAPistola,
		[Token(Token = "0x400296A")]
		Cont
	}

	[Token(Token = "0x2000573")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880784", Offset = "0x880784")]
	private sealed class <EliminarPelotaDeLista>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400296B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400296C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400296D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19DB")]
		public GanchoRifle <>4__this;

		[Token(Token = "0x400296E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public GameObject pelota;

		[Token(Token = "0x170003FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002505")]
			[Address(RVA = "0x11BF648", Offset = "0x11BF648", VA = "0x11BF648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002507")]
			[Address(RVA = "0x11BF718", Offset = "0x11BF718", VA = "0x11BF718", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x11BDB74", Offset = "0x11BDB74", VA = "0x11BDB74")]
		[DebuggerHidden]
		public <EliminarPelotaDeLista>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x11BF43C", Offset = "0x11BF43C", VA = "0x11BF43C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x11BF450", Offset = "0x11BF450", VA = "0x11BF450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x11BF678", Offset = "0x11BF678", VA = "0x11BF678", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8807C0", Offset = "0x8807C0")]
	private sealed class <ApagarEnUnosSegundos>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400296F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2354")]
		private int <>1__state;

		[Token(Token = "0x4002970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GanchoRifle <>4__this;

		[Token(Token = "0x170003FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600250B")]
			[Address(RVA = "0x11BF33C", Offset = "0x11BF33C", VA = "0x11BF33C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600250D")]
			[Address(RVA = "0x11BF40C", Offset = "0x11BF40C", VA = "0x11BF40C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x11BEE54", Offset = "0x11BEE54", VA = "0x11BEE54")]
		[DebuggerHidden]
		public <ApagarEnUnosSegundos>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x11BEFB4", Offset = "0x11BEFB4", VA = "0x11BEFB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x11BEFC8", Offset = "0x11BEFC8", VA = "0x11BEFC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x11BF36C", Offset = "0x11BF36C", VA = "0x11BF36C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Rifle rifle;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1993")]
	public bool derecha;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public EstadoDelGancho estadoDelGancho;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B22C4")]
	public EstadoDelGancho estadoAntiguoDelGancho;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Animator animWeapon;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 direccionLanzamiento;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float radioSpherecastCadena_SoloValeEnArmaDerecha;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199B")]
	[HideInInspector]
	public bool heDestruidoEsferaAlSerLanzado;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private AudioClip[] audioClipsWeapon;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B22D4")]
	[HideInInspector]
	public bool armaEstaEnBloque;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool armaAncladaABloque;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject cadenaEntreArmas;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public BloqueRompible bloque;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A3")]
	public LineRenderer lineRendererEntreArmas;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private AudioSource audioSource;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B22E4")]
	private Vector3 dir;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float inclinacionParaAnimacionGanchoQueVaDe0A1;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GanchoRifle otroGancho;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool armaEstaEnPared;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19AB")]
	public bool ChocadoPelota;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public GameObject player;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B22F4")]
	public float fuerzaSalto;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Rigidbody rb;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float distanciaInicial;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Animator animPistola;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19B3")]
	public ControladorCadena controladorCadena;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform puntoCadena;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2304")]
	private int layerMask;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 transformInicial;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Quaternion rotacionInicial;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform padreInicio;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19BB")]
	public GameObject coliderGancho;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Collider col1;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2314")]
	public Collider col2;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem particulasDisparo;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ParticleSystem particulasDisparo2;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool armaEnFantasmal;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C3")]
	private List<GameObject> pelotasEliminadas;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool cochandoConEsfera;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2324")]
	private Vector3 inicio;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 final;

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x11B7364", Offset = "0x11B7364", VA = "0x11B7364")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x11B7410", Offset = "0x11B7410", VA = "0x11B7410")]
	public void SetPosIniWeapon()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x11B7510", Offset = "0x11B7510", VA = "0x11B7510")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x11B7D88", Offset = "0x11B7D88", VA = "0x11B7D88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x11B9840", Offset = "0x11B9840", VA = "0x11B9840")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x11BAB70", Offset = "0x11BAB70", VA = "0x11BAB70")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x11BB6C4", Offset = "0x11BB6C4", VA = "0x11BB6C4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x11BD390", Offset = "0x11BD390", VA = "0x11BD390")]
	public void JumpTo(GameObject objetivo, float fuerza)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x11BD310", Offset = "0x11BD310", VA = "0x11BD310")]
	public void SaltarAPlayer()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x11BDA34", Offset = "0x11BDA34", VA = "0x11BDA34")]
	public void RebotarGancho()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x11BDAC4", Offset = "0x11BDAC4", VA = "0x11BDAC4")]
	public void DesactivarCadenas()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x11BDB1C", Offset = "0x11BDB1C", VA = "0x11BDB1C")]
	public void ActivarCadenas()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x11B7BAC", Offset = "0x11B7BAC", VA = "0x11B7BAC")]
	private void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x11BCE9C", Offset = "0x11BCE9C", VA = "0x11BCE9C")]
	public void PonerAudioEnAudioSource(ClipsAudioGancho clipAudio)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x11B975C", Offset = "0x11B975C", VA = "0x11B975C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A72B0", Offset = "0x8A72B0")]
	private IEnumerator EliminarPelotaDeLista(GameObject pelota)
	{
		return null;
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x11BDBBC", Offset = "0x11BDBBC", VA = "0x11BDBBC")]
	public void Apagar()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x11BDDA4", Offset = "0x11BDDA4", VA = "0x11BDDA4")]
	public void Encender()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x11BE104", Offset = "0x11BE104", VA = "0x11BE104")]
	public void LanzarGancho()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x11BE388", Offset = "0x11BE388", VA = "0x11BE388")]
	public void RecogerGancho()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x11BE6D8", Offset = "0x11BE6D8", VA = "0x11BE6D8")]
	public void Atraer(bool escudo = false)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x11BED98", Offset = "0x11BED98", VA = "0x11BED98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7360", Offset = "0x8A7360")]
	private IEnumerator ApagarEnUnosSegundos()
	{
		return null;
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x11BEBD8", Offset = "0x11BEBD8", VA = "0x11BEBD8")]
	public void TransformHookToPistol()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x11BDF44", Offset = "0x11BDF44", VA = "0x11BDF44")]
	public void TransformPistolToHook()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x11BA64C", Offset = "0x11BA64C", VA = "0x11BA64C")]
	public void CambiarEstadoGancho(EstadoDelGancho estadoNuevo)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x11BEE9C", Offset = "0x11BEE9C", VA = "0x11BEE9C")]
	public GanchoRifle()
	{
	}
}
[Token(Token = "0x20001AB")]
public class ParedPistola : MonoBehaviour
{
	[Token(Token = "0x2000575")]
	public enum ClipsAudioTorreta
	{
		[Token(Token = "0x4002973")]
		Disparo,
		[Token(Token = "0x4002974")]
		TransformarOn,
		[Token(Token = "0x4002975")]
		TransformarOff,
		[Token(Token = "0x4002976")]
		Cont
	}

	[Token(Token = "0x2000576")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8807FC", Offset = "0x8807FC")]
	private sealed class <Desactivando>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1B")]
		private object <>2__current;

		[Token(Token = "0x4002979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public ParedPistola <>4__this;

		[Token(Token = "0x17000400")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002511")]
			[Address(RVA = "0x1177224", Offset = "0x1177224", VA = "0x1177224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000401")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002513")]
			[Address(RVA = "0x11772F4", Offset = "0x11772F4", VA = "0x11772F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x1176890", Offset = "0x1176890", VA = "0x1176890")]
		[DebuggerHidden]
		public <Desactivando>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x11768D8", Offset = "0x11768D8", VA = "0x11768D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x11768EC", Offset = "0x11768EC", VA = "0x11768EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1177254", Offset = "0x1177254", VA = "0x1177254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880838", Offset = "0x880838")]
	private sealed class <Disparar>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400297A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B23D4")]
		private int <>1__state;

		[Token(Token = "0x400297B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x400297C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ParedPistola <>4__this;

		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <anguloGiro>5__2;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A23")]
		private int <anguloGiroTotal>5__3;

		[Token(Token = "0x17000402")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002517")]
			[Address(RVA = "0x1177F60", Offset = "0x1177F60", VA = "0x1177F60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000403")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002519")]
			[Address(RVA = "0x1178030", Offset = "0x1178030", VA = "0x1178030", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x1177324", Offset = "0x1177324", VA = "0x1177324")]
		[DebuggerHidden]
		public <Disparar>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x117736C", Offset = "0x117736C", VA = "0x117736C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x1177380", Offset = "0x1177380", VA = "0x1177380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x1177F90", Offset = "0x1177F90", VA = "0x1177F90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int nivelTorreta;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19E3")]
	public GameObject[] torretasAnimacion;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject[] torretasDisparo;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2364")]
	public Animator[] animTorretas;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform[] baseTorreta;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform[] canonTorreta;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform[] cannonShot;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19EB")]
	public Material luzEstandar;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Material luzDespliege;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2374")]
	public MeshRenderer meshLuz;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool activado;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pistola;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pared;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19F3")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool disparo;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2384")]
	private Transform player;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform[] disparoSpawn;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform[] disparoSpawn1;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform[] disparoSpawn2;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19FB")]
	public Transform[] disparoSpawn3;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private int vecesDisparado;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2394")]
	private float tiempoEnEjecucionParaDisparo;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posInicio;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioClip[] audioClipsTorreta;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioSource audioSoruceTorreta;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A03")]
	private bool animacionAparecerFinalizada;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public MeshRenderer[] meshesMatStage;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B23A4")]
	private bool puedoDisparar;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool desactivadaPorMuerte;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float esperaEntreDisparos;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform ultimoTarget;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0B")]
	private int equipoUltimoTarget;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool activadoAntesDeInicio;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B23B4")]
	private Coroutine desactivar;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine disparando;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool enRotacionDeCanon;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool desactivandoTorreta;

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x140ACD0", Offset = "0x140ACD0", VA = "0x140ACD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x140B4F4", Offset = "0x140B4F4", VA = "0x140B4F4")]
	public void Resetear()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x140B64C", Offset = "0x140B64C", VA = "0x140B64C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x140CCE4", Offset = "0x140CCE4", VA = "0x140CCE4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x140CE98", Offset = "0x140CE98", VA = "0x140CE98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x140C168", Offset = "0x140C168", VA = "0x140C168")]
	public void Activar(int idPhotonTarget)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x140F358", Offset = "0x140F358", VA = "0x140F358")]
	public void ActivarTorretaEnOnline(bool activar, Transform target, int nivelTorretaOnline)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x140B560", Offset = "0x140B560", VA = "0x140B560")]
	public void Desactivar()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x140F8DC", Offset = "0x140F8DC", VA = "0x140F8DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7410", Offset = "0x8A7410")]
	private IEnumerator Desactivando()
	{
		return null;
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x140EF14", Offset = "0x140EF14", VA = "0x140EF14")]
	private void Disparo()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x140F998", Offset = "0x140F998", VA = "0x140F998")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A74C0", Offset = "0x8A74C0")]
	private IEnumerator Disparar()
	{
		return null;
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x140B374", Offset = "0x140B374", VA = "0x140B374")]
	private void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x140EFAC", Offset = "0x140EFAC", VA = "0x140EFAC")]
	public void PonerAudioEnAudioSource(ClipsAudioTorreta clipAudio)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x140FA54", Offset = "0x140FA54", VA = "0x140FA54")]
	public void AnimacionFinalizada()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x140FD44", Offset = "0x140FD44", VA = "0x140FD44")]
	public ParedPistola()
	{
	}
}
[Token(Token = "0x20001AC")]
public class Rifle : Arma
{
	[Token(Token = "0x2000578")]
	public enum EstadoPantalla
	{
		[Token(Token = "0x4002980")]
		Disparos4,
		[Token(Token = "0x4002981")]
		Disparos3,
		[Token(Token = "0x4002982")]
		Disparos2,
		[Token(Token = "0x4002983")]
		Disparos1,
		[Token(Token = "0x4002984")]
		Ganchos2,
		[Token(Token = "0x4002985")]
		Ganchos1,
		[Token(Token = "0x4002986")]
		Ganchos0,
		[Token(Token = "0x4002987")]
		Escopeta,
		[Token(Token = "0x4002988")]
		Laser,
		[Token(Token = "0x4002989")]
		Tiempo,
		[Token(Token = "0x400298A")]
		Inmunidad
	}

	[Token(Token = "0x2000579")]
	public enum EstadoArma
	{
		[Token(Token = "0x400298C")]
		SinArma,
		[Token(Token = "0x400298D")]
		Disparos,
		[Token(Token = "0x400298E")]
		GanchoD,
		[Token(Token = "0x400298F")]
		GanchoI,
		[Token(Token = "0x4002990")]
		Escopeta,
		[Token(Token = "0x4002991")]
		Laser,
		[Token(Token = "0x4002992")]
		RecogerGanchos
	}

	[Token(Token = "0x200057A")]
	public enum EstadoArmaOnline
	{
		[Token(Token = "0x4002994")]
		SinArma,
		[Token(Token = "0x4002995")]
		Disparos,
		[Token(Token = "0x4002996")]
		GanchoD,
		[Token(Token = "0x4002997")]
		GanchoI,
		[Token(Token = "0x4002998")]
		Escopeta,
		[Token(Token = "0x4002999")]
		Laser,
		[Token(Token = "0x400299A")]
		RecogerGanchos,
		[Token(Token = "0x400299B")]
		RecogiendoGanchos
	}

	[Token(Token = "0x200057B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880874", Offset = "0x880874")]
	private sealed class <DevolverALaNormalidad>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2454")]
		private object <>2__current;

		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float tiempo;

		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Rifle <>4__this;

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <cont>5__2;

		[Token(Token = "0x17000404")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600251D")]
			[Address(RVA = "0x11F2D20", Offset = "0x11F2D20", VA = "0x11F2D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000405")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600251F")]
			[Address(RVA = "0x11F2DF0", Offset = "0x11F2DF0", VA = "0x11F2DF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x11F25A4", Offset = "0x11F25A4", VA = "0x11F25A4")]
		[DebuggerHidden]
		public <DevolverALaNormalidad>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x11F28BC", Offset = "0x11F28BC", VA = "0x11F28BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x11F28D0", Offset = "0x11F28D0", VA = "0x11F28D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x11F2D50", Offset = "0x11F2D50", VA = "0x11F2D50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform sensorDebug;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B23E4")]
	public GanchoRifle ganchoD;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GanchoRifle ganchoI;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private EstadoArma estadoArma;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EstadoArmaOnline estadoArmaOnline;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A2B")]
	private GameObject bala;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform puntoManoSecundaria;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B23F4")]
	public GameObject meshPadre;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform padreGanchos;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer[] rendersRifle;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer[] rendersGanchoD;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A33")]
	public MeshRenderer[] rendersGanchoI;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public ControladorManoSecundariaRifle controladorManoSecundariaRifle;

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x11EC880", Offset = "0x11EC880", VA = "0x11EC880")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x11EC8C0", Offset = "0x11EC8C0", VA = "0x11EC8C0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x11ED1C4", Offset = "0x11ED1C4", VA = "0x11ED1C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x11ED30C", Offset = "0x11ED30C", VA = "0x11ED30C")]
	private void LanzarRaycastPistolaParaSaberSiDaraAlPowerUp()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x11ED7BC", Offset = "0x11ED7BC", VA = "0x11ED7BC", Slot = "4")]
	public override void Disparo()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x11F19E0", Offset = "0x11F19E0", VA = "0x11F19E0", Slot = "5")]
	public override void PonerPosicionInicial()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x11ECC80", Offset = "0x11ECC80", VA = "0x11ECC80")]
	private void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x11F14B8", Offset = "0x11F14B8", VA = "0x11F14B8")]
	public void PonerAudioEnAudioSource(ClipsAudioWeapon clipAudio)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x11F1C18", Offset = "0x11F1C18", VA = "0x11F1C18")]
	public void EncenderGancho(bool derecho)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x11F1E3C", Offset = "0x11F1E3C", VA = "0x11F1E3C")]
	public void ApagarGancho()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x11F1E84", Offset = "0x11F1E84", VA = "0x11F1E84")]
	public void EncenderRifle()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x11F20F4", Offset = "0x11F20F4", VA = "0x11F20F4")]
	public void ApagarRifle(bool desvanecer = true)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x11F2350", Offset = "0x11F2350", VA = "0x11F2350")]
	public void MostrarRifle()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x11F2380", Offset = "0x11F2380", VA = "0x11F2380")]
	public EstadoArma GetEstadoArma()
	{
		return default(EstadoArma);
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x11F0AE0", Offset = "0x11F0AE0", VA = "0x11F0AE0")]
	public void CambiarEstadoArma(EstadoArma nuevoEstado)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x11F24C0", Offset = "0x11F24C0", VA = "0x11F24C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7570", Offset = "0x8A7570")]
	private IEnumerator DevolverALaNormalidad(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x11F23B0", Offset = "0x11F23B0", VA = "0x11F23B0")]
	public void RecogerGanchos()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x11ECFD4", Offset = "0x11ECFD4", VA = "0x11ECFD4")]
	public void PonerQuitarFantasmal(bool activar)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x11F25EC", Offset = "0x11F25EC", VA = "0x11F25EC")]
	public void PonerQuitarFantasmalGancho(bool activar, bool ganchoDerecho)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x11F06C4", Offset = "0x11F06C4", VA = "0x11F06C4")]
	public void SetTexturepantalla(EstadoPantalla estado, bool enable)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x11F288C", Offset = "0x11F288C", VA = "0x11F288C")]
	public Rifle()
	{
	}
}
[Token(Token = "0x20001AD")]
public class TorretaDummy : MonoBehaviour
{
	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A63")]
	public int nivelTorreta;

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x1393BDC", Offset = "0x1393BDC", VA = "0x1393BDC")]
	public TorretaDummy()
	{
	}
}
[Token(Token = "0x20001AE")]
public class TriggerFinalAnimacionTorreta : MonoBehaviour
{
	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public ParedPistola torreta;

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x1395904", Offset = "0x1395904", VA = "0x1395904")]
	public void AnimacionFinalizada()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x139594C", Offset = "0x139594C", VA = "0x139594C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x1395A6C", Offset = "0x1395A6C", VA = "0x1395A6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x1395B40", Offset = "0x1395B40", VA = "0x1395B40")]
	public TriggerFinalAnimacionTorreta()
	{
	}
}
[Token(Token = "0x20001AF")]
public class Weapon : Arma
{
	[Token(Token = "0x200057C")]
	public enum TipoDeArma
	{
		[Token(Token = "0x40029A2")]
		Normal,
		[Token(Token = "0x40029A3")]
		Escopeta,
		[Token(Token = "0x40029A4")]
		Laser
	}

	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8808B0", Offset = "0x8808B0")]
	private sealed class <EliminarPelotaDeLista>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40029A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40029A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9B")]
		public Weapon <>4__this;

		[Token(Token = "0x40029A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public GameObject pelota;

		[Token(Token = "0x17000406")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002523")]
			[Address(RVA = "0x14EB960", Offset = "0x14EB960", VA = "0x14EB960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002525")]
			[Address(RVA = "0x14EBA30", Offset = "0x14EBA30", VA = "0x14EBA30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x14E2768", Offset = "0x14E2768", VA = "0x14E2768")]
		[DebuggerHidden]
		public <EliminarPelotaDeLista>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x14EB754", Offset = "0x14EB754", VA = "0x14EB754", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x14EB768", Offset = "0x14EB768", VA = "0x14EB768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x14EB990", Offset = "0x14EB990", VA = "0x14EB990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200057E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8808EC", Offset = "0x8808EC")]
	private sealed class <disparoTiempo>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B24D4")]
		private int <>1__state;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float tiempo;

		[Token(Token = "0x40029AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Weapon <>4__this;

		[Token(Token = "0x17000408")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002529")]
			[Address(RVA = "0x14EBF40", Offset = "0x14EBF40", VA = "0x14EBF40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000409")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600252B")]
			[Address(RVA = "0x14EC010", Offset = "0x14EC010", VA = "0x14EC010", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x14E9E00", Offset = "0x14E9E00", VA = "0x14E9E00")]
		[DebuggerHidden]
		public <disparoTiempo>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x14EBD5C", Offset = "0x14EBD5C", VA = "0x14EBD5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x14EBD70", Offset = "0x14EBD70", VA = "0x14EBD70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x14EBF70", Offset = "0x14EBF70", VA = "0x14EBF70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200057F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880928", Offset = "0x880928")]
	private sealed class <TiempoRecarga>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA3")]
		private int <>1__state;

		[Token(Token = "0x40029AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B24E4")]
		public float tiempo;

		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Weapon <>4__this;

		[Token(Token = "0x1700040A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600252F")]
			[Address(RVA = "0x14EBC5C", Offset = "0x14EBC5C", VA = "0x14EBC5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002531")]
			[Address(RVA = "0x14EBD2C", Offset = "0x14EBD2C", VA = "0x14EBD2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x14EA5D8", Offset = "0x14EA5D8", VA = "0x14EA5D8")]
		[DebuggerHidden]
		public <TiempoRecarga>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x14EBA60", Offset = "0x14EBA60", VA = "0x14EBA60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x14EBA74", Offset = "0x14EBA74", VA = "0x14EBA74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x14EBC8C", Offset = "0x14EBC8C", VA = "0x14EBC8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880964", Offset = "0x880964")]
	private sealed class <DevolverALaNormalidad>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AAB")]
		public float tiempo;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Weapon <>4__this;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B24F4")]
		private int <cont>5__2;

		[Token(Token = "0x1700040C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002535")]
			[Address(RVA = "0x14EB654", Offset = "0x14EB654", VA = "0x14EB654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002537")]
			[Address(RVA = "0x14EB724", Offset = "0x14EB724", VA = "0x14EB724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x14EADD4", Offset = "0x14EADD4", VA = "0x14EADD4")]
		[DebuggerHidden]
		public <DevolverALaNormalidad>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x14EB1E8", Offset = "0x14EB1E8", VA = "0x14EB1E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x14EB1FC", Offset = "0x14EB1FC", VA = "0x14EB1FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x14EB684", Offset = "0x14EB684", VA = "0x14EB684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2464")]
	public float tiempoDispario;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material materialPantalla;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float radioSpherecastCadena_SoloValeEnArmaDerecha;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TipoDeArma tipoDeArma;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A6B")]
	[HideInInspector]
	public bool disparo;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject bala;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2474")]
	public GameObject balaEscopeta;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject puntero;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject gancho;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pistolaMesh;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A73")]
	public GameObject balaDorada;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public BloqueRompible bloque;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2484")]
	private Vector3 dir;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float inclinacionParaAnimacionGanchoQueVaDe0A1;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Weapon otraPistola;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public GameObject player;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A7B")]
	public Rigidbody rb;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float distanciaInicial;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2494")]
	private AnimManos animManos;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AnimDoorsUp animDoors;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AnimDoorsDown animDoors2;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ControladorCadena controladorCadena;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A83")]
	private GameObject llavePuerta;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject puntoFinalFix;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B24A4")]
	public Transform puntoUnionCadena;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int layerMask;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject coliderGancho;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pandreColiders;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8B")]
	public Collider col1;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Collider col2;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B24B4")]
	private List<GameObject> pelotasEliminadas;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool cochandoConEsfera;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 inicio;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 final;

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x14DF064", Offset = "0x14DF064", VA = "0x14DF064")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x14DF11C", Offset = "0x14DF11C", VA = "0x14DF11C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x14E083C", Offset = "0x14E083C", VA = "0x14E083C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x14E1D68", Offset = "0x14E1D68", VA = "0x14E1D68")]
	private void LanzarRaycastPistolaParaSaberSiDaraAlPowerUp()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x14E23B8", Offset = "0x14E23B8", VA = "0x14E23B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7620", Offset = "0x8A7620")]
	private IEnumerator EliminarPelotaDeLista(GameObject pelota)
	{
		return null;
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x14E27B0", Offset = "0x14E27B0", VA = "0x14E27B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x14E3128", Offset = "0x14E3128", VA = "0x14E3128")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x14E41D4", Offset = "0x14E41D4", VA = "0x14E41D4")]
	public void SaltarAPlayer()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x14E4674", Offset = "0x14E4674", VA = "0x14E4674")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x14E7008", Offset = "0x14E7008", VA = "0x14E7008", Slot = "4")]
	public override void Disparo()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x14E99AC", Offset = "0x14E99AC", VA = "0x14E99AC")]
	public void PonerGancho(AnimManos animMano)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x14E4268", Offset = "0x14E4268", VA = "0x14E4268")]
	public void JumpTo(GameObject objetivo, float fuerza)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x14E9D1C", Offset = "0x14E9D1C", VA = "0x14E9D1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A76D0", Offset = "0x8A76D0")]
	private IEnumerator disparoTiempo(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x14E9E48", Offset = "0x14E9E48", VA = "0x14E9E48")]
	public void DesactivarCadenas()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x14E9EB4", Offset = "0x14E9EB4", VA = "0x14E9EB4")]
	public void ActivarCadenas()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x14E9F20", Offset = "0x14E9F20", VA = "0x14E9F20")]
	public void Recarga()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x14EA384", Offset = "0x14EA384", VA = "0x14EA384")]
	public void ApagarPantallaPorTextura()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x14EA4F4", Offset = "0x14EA4F4", VA = "0x14EA4F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7780", Offset = "0x8A7780")]
	public IEnumerator TiempoRecarga(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x14EA620", Offset = "0x14EA620", VA = "0x14EA620")]
	public void MostrarPistola()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x14EAA4C", Offset = "0x14EAA4C", VA = "0x14EAA4C", Slot = "5")]
	public override void PonerPosicionInicial()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x14E048C", Offset = "0x14E048C", VA = "0x14E048C")]
	private void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x14E6AE0", Offset = "0x14E6AE0", VA = "0x14E6AE0")]
	public void PonerAudioEnAudioSource(ClipsAudioWeapon clipAudio)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x14EACC0", Offset = "0x14EACC0", VA = "0x14EACC0")]
	public TipoDeArma GetTipoDeArma()
	{
		return default(TipoDeArma);
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x14DFA6C", Offset = "0x14DFA6C", VA = "0x14DFA6C")]
	public void CambiarTipoDeArma(TipoDeArma nuevoTipo, bool sinMunicion = false)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x14EACF0", Offset = "0x14EACF0", VA = "0x14EACF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7830", Offset = "0x8A7830")]
	private IEnumerator DevolverALaNormalidad(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x14EAE1C", Offset = "0x14EAE1C", VA = "0x14EAE1C")]
	public void RebotarGancho()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x14EAEC0", Offset = "0x14EAEC0", VA = "0x14EAEC0")]
	public void Apagar()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x14EAFEC", Offset = "0x14EAFEC", VA = "0x14EAFEC")]
	public void Encender()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x14EB104", Offset = "0x14EB104", VA = "0x14EB104")]
	public Weapon()
	{
	}
}
[Token(Token = "0x20001B0")]
public class activarElectricidadSiEstaCerca : MonoBehaviour
{
	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource miAudioSource;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int tickSinHacerNada;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject player;

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x14ECE14", Offset = "0x14ECE14", VA = "0x14ECE14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x14ECF44", Offset = "0x14ECF44", VA = "0x14ECF44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x14ED160", Offset = "0x14ED160", VA = "0x14ED160")]
	public activarElectricidadSiEstaCerca()
	{
	}
}
[Token(Token = "0x20001B1")]
public class esferaTorreta : MonoBehaviour
{
	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AB3")]
	public AudioSource explosion;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public AudioSource disparo;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2504")]
	public Transform posSpawnBala;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Animator anim;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EfectoDesaparecer efectoDesaparecer;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BossSatelites boss;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1ABB")]
	public GameObject particulasExplosion;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private PhotonView pv;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2514")]
	private Transform ultimoTarget;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int equipoUltimoTarget;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posInicial;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject mesh;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC3")]
	private bool encendido;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Transform t;

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x14EDF84", Offset = "0x14EDF84", VA = "0x14EDF84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x14EE118", Offset = "0x14EE118", VA = "0x14EE118")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x14EE6D8", Offset = "0x14EE6D8", VA = "0x14EE6D8")]
	public void Disparar()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x14E249C", Offset = "0x14E249C", VA = "0x14E249C")]
	public void Destruir(bool inmediatamente = false)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x14EEC90", Offset = "0x14EEC90", VA = "0x14EEC90")]
	public void Encender()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x14EED38", Offset = "0x14EED38", VA = "0x14EED38")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x14EF0F4", Offset = "0x14EF0F4", VA = "0x14EF0F4")]
	public esferaTorreta()
	{
	}
}
[Token(Token = "0x20001B2")]
public class grabadorIntro : MonoBehaviour
{
	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2524")]
	private int tiempoPasado;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Camera camaraRender;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Camera camaraQueTengoQueApagar;

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x14EF1E4", Offset = "0x14EF1E4", VA = "0x14EF1E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x14EF214", Offset = "0x14EF214", VA = "0x14EF214")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x14EF304", Offset = "0x14EF304", VA = "0x14EF304")]
	public grabadorIntro()
	{
	}
}
[Token(Token = "0x20001B3")]
public class ParedMovible : MonoBehaviour
{
	[Token(Token = "0x2000581")]
	private struct BolasDentro
	{
		[Token(Token = "0x40029B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EsferaScript bola;

		[Token(Token = "0x40029B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1ACB")]
		public float tiempoDentro;

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xA250D0", Offset = "0xA250D0", VA = "0xA250D0")]
		public BolasDentro(EsferaScript b, float t)
		{
		}
	}

	[Token(Token = "0x2000582")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8809A0", Offset = "0x8809A0")]
	private sealed class <Activar>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2554")]
		private object <>2__current;

		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float tiempo;

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ParedMovible <>4__this;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <tiempoSalida>5__2;

		[Token(Token = "0x1700040E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600253C")]
			[Address(RVA = "0x140A57C", Offset = "0x140A57C", VA = "0x140A57C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600253E")]
			[Address(RVA = "0x140A64C", Offset = "0x140A64C", VA = "0x140A64C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x1407B08", Offset = "0x1407B08", VA = "0x1407B08")]
		[DebuggerHidden]
		public <Activar>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x140A27C", Offset = "0x140A27C", VA = "0x140A27C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x140A290", Offset = "0x140A290", VA = "0x140A290", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x140A5AC", Offset = "0x140A5AC", VA = "0x140A5AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000583")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8809DC", Offset = "0x8809DC")]
	private sealed class <MostrarMensajePared>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AE3")]
		private int <>1__state;

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x17000410")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002542")]
			[Address(RVA = "0x140ABD0", Offset = "0x140ABD0", VA = "0x140ABD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000411")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002544")]
			[Address(RVA = "0x140ACA0", Offset = "0x140ACA0", VA = "0x140ACA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x1407E2C", Offset = "0x1407E2C", VA = "0x1407E2C")]
		[DebuggerHidden]
		public <MostrarMensajePared>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x140A954", Offset = "0x140A954", VA = "0x140A954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x140A968", Offset = "0x140A968", VA = "0x140A968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x140AC00", Offset = "0x140AC00", VA = "0x140AC00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880A18", Offset = "0x880A18")]
	private sealed class <ApagarPared>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2564")]
		private int <>1__state;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ParedMovible <>4__this;

		[Token(Token = "0x17000412")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0x140A854", Offset = "0x140A854", VA = "0x140A854", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000413")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600254A")]
			[Address(RVA = "0x140A924", Offset = "0x140A924", VA = "0x140A924", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x140836C", Offset = "0x140836C", VA = "0x140836C")]
		[DebuggerHidden]
		public <ApagarPared>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x140A67C", Offset = "0x140A67C", VA = "0x140A67C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x140A690", Offset = "0x140A690", VA = "0x140A690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x140A884", Offset = "0x140A884", VA = "0x140A884", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoASalir;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1ACB")]
	private bool salir;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float velocidad;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2534")]
	private Vector3 posIni;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject particulas;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject destructorMuros;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ParticleSystem particleS;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AD3")]
	public BoxCollider collider;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private List<BolasDentro> bolasDentro;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2544")]
	public AudioSource audio;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine corrEmpezar;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine apagarCor;

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x14073C8", Offset = "0x14073C8", VA = "0x14073C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x14074E8", Offset = "0x14074E8", VA = "0x14074E8")]
	public void Inicializar()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x14078F0", Offset = "0x14078F0", VA = "0x14078F0")]
	public void EmpiezaNivel()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x1407A24", Offset = "0x1407A24", VA = "0x1407A24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A78E0", Offset = "0x8A78E0")]
	private IEnumerator Activar(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x1407B50", Offset = "0x1407B50", VA = "0x1407B50")]
	public void Activa()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x1407D8C", Offset = "0x1407D8C", VA = "0x1407D8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7990", Offset = "0x8A7990")]
	private IEnumerator MostrarMensajePared()
	{
		return null;
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x1407E74", Offset = "0x1407E74", VA = "0x1407E74")]
	public void Apagar()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x14082B0", Offset = "0x14082B0", VA = "0x14082B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7A40", Offset = "0x8A7A40")]
	private IEnumerator ApagarPared()
	{
		return null;
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x14083B4", Offset = "0x14083B4", VA = "0x14083B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x1409480", Offset = "0x1409480", VA = "0x1409480")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x1409B90", Offset = "0x1409B90", VA = "0x1409B90")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x140A194", Offset = "0x140A194", VA = "0x140A194")]
	public ParedMovible()
	{
	}
}
[Token(Token = "0x20001B4")]
public class PersistentDataManager
{
	[Token(Token = "0x2000585")]
	public class DataSerializada
	{
		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<string, string> stringData;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<string, int> intData;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<string, float> floatData;

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x1195E0C", Offset = "0x1195E0C", VA = "0x1195E0C")]
		public DataSerializada(Dictionary<string, string> stringData, Dictionary<string, int> intData, Dictionary<string, float> floatData)
		{
		}
	}

	[Token(Token = "0x4000EAE")]
	private const string encryptPass = "pleX:_wRPT756(FGkWtso";

	[Token(Token = "0x4000EAF")]
	private const string FILENAME = "Pang_saveData.sav";

	[Token(Token = "0x4000EB0")]
	private const string FILENAMEBCKUP = "BckUp_Pang_saveData.sav";

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2574")]
	private static Dictionary<string, string> stringData;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, int> intData;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, float> floatData;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool guardadoPendiente;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AF3")]
	private static bool nuevaKeyAgregada;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static bool guardando;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2584")]
	private static bool infoCargada;

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x118F3EC", Offset = "0x118F3EC", VA = "0x118F3EC")]
	public static void SaveData(bool forzarGuardado = false)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x11906B4", Offset = "0x11906B4", VA = "0x11906B4")]
	public static void GuardarArchivoDeBackup()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x1190BA0", Offset = "0x1190BA0", VA = "0x1190BA0")]
	private static bool ComprobarArchivoDeGuardado()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x11912B4", Offset = "0x11912B4", VA = "0x11912B4")]
	private static bool HashValidation(string hashCode, string fileString)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x1191590", Offset = "0x1191590", VA = "0x1191590")]
	public static void LoadData()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x119328C", Offset = "0x119328C", VA = "0x119328C")]
	public static void EnviarMailProblemaDeGuardado(int archivo)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x11939FC", Offset = "0x11939FC", VA = "0x11939FC")]
	public static void SetString(string key, string value)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x1193DE8", Offset = "0x1193DE8", VA = "0x1193DE8")]
	public static string GetString(string key, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x11942A4", Offset = "0x11942A4", VA = "0x11942A4")]
	public static void SetInt(string key, int value)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x119467C", Offset = "0x119467C", VA = "0x119467C")]
	public static int GetInt(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x1194B08", Offset = "0x1194B08", VA = "0x1194B08")]
	public static void SetFloat(string key, float value)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x1194EE8", Offset = "0x1194EE8", VA = "0x1194EE8")]
	public static float GetFloat(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x119537C", Offset = "0x119537C", VA = "0x119537C")]
	public static bool HasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x11959A4", Offset = "0x11959A4", VA = "0x11959A4")]
	public static void DeleteAll()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x1195C28", Offset = "0x1195C28", VA = "0x1195C28")]
	public PersistentDataManager()
	{
	}
}
[Token(Token = "0x20001B5")]
public static class Encrypt
{
	[Token(Token = "0x4000EB8")]
	private const string initVector = "pemgail9uzpgzl88";

	[Token(Token = "0x4000EB9")]
	private const int keysize = 256;

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x12D7A70", Offset = "0x12D7A70", VA = "0x12D7A70")]
	public static string EncryptString(string plainText, string passPhrase)
	{
		return null;
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x12D7E74", Offset = "0x12D7E74", VA = "0x12D7E74")]
	public static string DecryptString(string cipherText, string passPhrase)
	{
		return null;
	}
}
[Token(Token = "0x20001B6")]
public class Player : MonoBehaviourPun
{
	[Token(Token = "0x2000586")]
	public enum ClipsAudioJugador
	{
		[Token(Token = "0x40029C6")]
		Muerte,
		[Token(Token = "0x40029C7")]
		Victoria,
		[Token(Token = "0x40029C8")]
		Inicio,
		[Token(Token = "0x40029C9")]
		AparecerGlobalRS,
		[Token(Token = "0x40029CA")]
		DesaparecerGlobalRS,
		[Token(Token = "0x40029CB")]
		Cool,
		[Token(Token = "0x40029CC")]
		Cont
	}

	[Token(Token = "0x2000587")]
	public enum EstadoZonaNegra
	{
		[Token(Token = "0x40029CE")]
		Desactivado,
		[Token(Token = "0x40029CF")]
		FueraLimites,
		[Token(Token = "0x40029D0")]
		Pausa
	}

	[Token(Token = "0x2000588")]
	public enum TipoVibracion
	{
		[Token(Token = "0x40029D2")]
		ninguno,
		[Token(Token = "0x40029D3")]
		disparar,
		[Token(Token = "0x40029D4")]
		cogerPistolas,
		[Token(Token = "0x40029D5")]
		lanzarGancho,
		[Token(Token = "0x40029D6")]
		rebotarBala,
		[Token(Token = "0x40029D7")]
		morir,
		[Token(Token = "0x40029D8")]
		pasarseLivel
	}

	[Token(Token = "0x2000589")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880A54", Offset = "0x880A54")]
	private sealed class <RecolocarStartMenu>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BBB")]
		private int <>1__state;

		[Token(Token = "0x40029DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x17000414")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600254F")]
			[Address(RVA = "0x141AE5C", Offset = "0x141AE5C", VA = "0x141AE5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000415")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002551")]
			[Address(RVA = "0x141AF2C", Offset = "0x141AF2C", VA = "0x141AF2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x141AC30", Offset = "0x141AC30", VA = "0x141AC30")]
		[DebuggerHidden]
		public <RecolocarStartMenu>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x141AC78", Offset = "0x141AC78", VA = "0x141AC78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x141AC8C", Offset = "0x141AC8C", VA = "0x141AC8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x141AE8C", Offset = "0x141AE8C", VA = "0x141AE8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200058A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880A90", Offset = "0x880A90")]
	private sealed class <ColocarPuntosTrailBala>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2714")]
		private int <>1__state;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TrailRenderer tr;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3[] extraPositions;

		[Token(Token = "0x17000416")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002555")]
			[Address(RVA = "0x1411FBC", Offset = "0x1411FBC", VA = "0x1411FBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002557")]
			[Address(RVA = "0x141208C", Offset = "0x141208C", VA = "0x141208C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x1411E1C", Offset = "0x1411E1C", VA = "0x1411E1C")]
		[DebuggerHidden]
		public <ColocarPuntosTrailBala>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x1411E64", Offset = "0x1411E64", VA = "0x1411E64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x1411E78", Offset = "0x1411E78", VA = "0x1411E78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x1411FEC", Offset = "0x1411FEC", VA = "0x1411FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200058B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880ACC", Offset = "0x880ACC")]
	private sealed class <EsperarEnElLimbo>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC3")]
		private int <>1__state;

		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2724")]
		public Player <>4__this;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool mano;

		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool porCabeza;

		[Token(Token = "0x17000418")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600255B")]
			[Address(RVA = "0x1416CD4", Offset = "0x1416CD4", VA = "0x1416CD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000419")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600255D")]
			[Address(RVA = "0x1416DA4", Offset = "0x1416DA4", VA = "0x1416DA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x1416638", Offset = "0x1416638", VA = "0x1416638")]
		[DebuggerHidden]
		public <EsperarEnElLimbo>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x1416680", Offset = "0x1416680", VA = "0x1416680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x1416694", Offset = "0x1416694", VA = "0x1416694", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x1416D04", Offset = "0x1416D04", VA = "0x1416D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200058C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880B08", Offset = "0x880B08")]
	private sealed class <EfectoMuerte>d__91 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BCB")]
		private object <>2__current;

		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Player <>4__this;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2734")]
		public bool morirFinCompetitivo;

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool mano;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool porCabeza;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ObjetosDelNivel <antiguosObjetosNivel>5__2;

		[Token(Token = "0x1700041A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002561")]
			[Address(RVA = "0x1414A1C", Offset = "0x1414A1C", VA = "0x1414A1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002563")]
			[Address(RVA = "0x1414AEC", Offset = "0x1414AEC", VA = "0x1414AEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x14120BC", Offset = "0x14120BC", VA = "0x14120BC")]
		[DebuggerHidden]
		public <EfectoMuerte>d__91(int <>1__state)
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x1412104", Offset = "0x1412104", VA = "0x1412104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x1412118", Offset = "0x1412118", VA = "0x1412118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x1414A4C", Offset = "0x1414A4C", VA = "0x1414A4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200058D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880B44", Offset = "0x880B44")]
	private sealed class <PosicionarPlayer>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BD3")]
		private int <>1__state;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2744")]
		public Player <>4__this;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform <puntoSpawn>5__2;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <t>5__3;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 <posIni>5__4;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BDB")]
		private Vector3 <posIniplayer>5__5;

		[Token(Token = "0x1700041C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002567")]
			[Address(RVA = "0x1419600", Offset = "0x1419600", VA = "0x1419600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002569")]
			[Address(RVA = "0x14196D0", Offset = "0x14196D0", VA = "0x14196D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x1418B88", Offset = "0x1418B88", VA = "0x1418B88")]
		[DebuggerHidden]
		public <PosicionarPlayer>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x1418BD0", Offset = "0x1418BD0", VA = "0x1418BD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x1418BE4", Offset = "0x1418BE4", VA = "0x1418BE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x1419630", Offset = "0x1419630", VA = "0x1419630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200058E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880B80", Offset = "0x880B80")]
	private sealed class <LaserFlechas>d__95 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2754")]
		private object <>2__current;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Player <>4__this;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <tiempo>5__2;

		[Token(Token = "0x1700041E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600256D")]
			[Address(RVA = "0x1418490", Offset = "0x1418490", VA = "0x1418490", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600256F")]
			[Address(RVA = "0x1418560", Offset = "0x1418560", VA = "0x1418560", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x1417204", Offset = "0x1417204", VA = "0x1417204")]
		[DebuggerHidden]
		public <LaserFlechas>d__95(int <>1__state)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x141724C", Offset = "0x141724C", VA = "0x141724C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x1417260", Offset = "0x1417260", VA = "0x1417260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x14184C0", Offset = "0x14184C0", VA = "0x14184C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200058F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880BBC", Offset = "0x880BBC")]
	private sealed class <EsperarAMostrarPistolas>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BE3")]
		private object <>2__current;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Player <>4__this;

		[Token(Token = "0x17000420")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002573")]
			[Address(RVA = "0x1416538", Offset = "0x1416538", VA = "0x1416538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000421")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002575")]
			[Address(RVA = "0x1416608", Offset = "0x1416608", VA = "0x1416608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x1414B1C", Offset = "0x1414B1C", VA = "0x1414B1C")]
		[DebuggerHidden]
		public <EsperarAMostrarPistolas>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x1414B64", Offset = "0x1414B64", VA = "0x1414B64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x1414B78", Offset = "0x1414B78", VA = "0x1414B78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x1416568", Offset = "0x1416568", VA = "0x1416568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000590")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880BF8", Offset = "0x880BF8")]
	private sealed class <LerrpResetRotacionPadre>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2764")]
		private int <>1__state;

		[Token(Token = "0x40029FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40029FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Player <>4__this;

		[Token(Token = "0x40029FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion <rotFin>5__2;

		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BEB")]
		private Quaternion <rotIni>5__3;

		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private float <cont>5__4;

		[Token(Token = "0x17000422")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002579")]
			[Address(RVA = "0x1418A88", Offset = "0x1418A88", VA = "0x1418A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000423")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600257B")]
			[Address(RVA = "0x1418B58", Offset = "0x1418B58", VA = "0x1418B58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x1418590", Offset = "0x1418590", VA = "0x1418590")]
		[DebuggerHidden]
		public <LerrpResetRotacionPadre>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x14185D8", Offset = "0x14185D8", VA = "0x14185D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x14185EC", Offset = "0x14185EC", VA = "0x14185EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x1418AB8", Offset = "0x1418AB8", VA = "0x1418AB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C34", Offset = "0x880C34")]
	private sealed class <ActivarLaserZonaOscura>d__127 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2774")]
		private int <>1__state;

		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Player <>4__this;

		[Token(Token = "0x17000424")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600257F")]
			[Address(RVA = "0x1411D1C", Offset = "0x1411D1C", VA = "0x1411D1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000425")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002581")]
			[Address(RVA = "0x1411DEC", Offset = "0x1411DEC", VA = "0x1411DEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x1411448", Offset = "0x1411448", VA = "0x1411448")]
		[DebuggerHidden]
		public <ActivarLaserZonaOscura>d__127(int <>1__state)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x1411490", Offset = "0x1411490", VA = "0x1411490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x14114A4", Offset = "0x14114A4", VA = "0x14114A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x1411D4C", Offset = "0x1411D4C", VA = "0x1411D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000592")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C70", Offset = "0x880C70")]
	private sealed class <IndicarSala>d__129 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BF3")]
		private object <>2__current;

		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Player <>4__this;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2784")]
		private Transform <flecha>5__2;

		[Token(Token = "0x17000426")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002585")]
			[Address(RVA = "0x1417104", Offset = "0x1417104", VA = "0x1417104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000427")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002587")]
			[Address(RVA = "0x14171D4", Offset = "0x14171D4", VA = "0x14171D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x1416DD4", Offset = "0x1416DD4", VA = "0x1416DD4")]
		[DebuggerHidden]
		public <IndicarSala>d__129(int <>1__state)
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x1416E1C", Offset = "0x1416E1C", VA = "0x1416E1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x1416E30", Offset = "0x1416E30", VA = "0x1416E30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x1417134", Offset = "0x1417134", VA = "0x1417134", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000593")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880CAC", Offset = "0x880CAC")]
	private sealed class <QuitarInmortalidad>d__134 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float segundos;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BFB")]
		public Player <>4__this;

		[Token(Token = "0x17000428")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600258B")]
			[Address(RVA = "0x1419A3C", Offset = "0x1419A3C", VA = "0x1419A3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000429")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600258D")]
			[Address(RVA = "0x1419B0C", Offset = "0x1419B0C", VA = "0x1419B0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x1419700", Offset = "0x1419700", VA = "0x1419700")]
		[DebuggerHidden]
		public <QuitarInmortalidad>d__134(int <>1__state)
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x1419748", Offset = "0x1419748", VA = "0x1419748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x141975C", Offset = "0x141975C", VA = "0x141975C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x1419A6C", Offset = "0x1419A6C", VA = "0x1419A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880CE8", Offset = "0x880CE8")]
	private sealed class <Reinicio>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B27BC")]
		private object <>2__current;

		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Player <>4__this;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ObjetosDelNivel <antiguosObjetosNivel>5__2;

		[Token(Token = "0x1700042A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002591")]
			[Address(RVA = "0x141C0A4", Offset = "0x141C0A4", VA = "0x141C0A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002593")]
			[Address(RVA = "0x141C174", Offset = "0x141C174", VA = "0x141C174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x141AF5C", Offset = "0x141AF5C", VA = "0x141AF5C")]
		[DebuggerHidden]
		public <Reinicio>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x141AFA4", Offset = "0x141AFA4", VA = "0x141AFA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x141AFB8", Offset = "0x141AFB8", VA = "0x141AFB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x141C0D4", Offset = "0x141C0D4", VA = "0x141C0D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880D24", Offset = "0x880D24")]
	private sealed class <Recolocar>d__163 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C03")]
		private object <>2__current;

		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Player <>4__this;

		[Token(Token = "0x1700042C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002597")]
			[Address(RVA = "0x141AB30", Offset = "0x141AB30", VA = "0x141AB30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002599")]
			[Address(RVA = "0x141AC00", Offset = "0x141AC00", VA = "0x141AC00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x1419B3C", Offset = "0x1419B3C", VA = "0x1419B3C")]
		[DebuggerHidden]
		public <Recolocar>d__163(int <>1__state)
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x1419B84", Offset = "0x1419B84", VA = "0x1419B84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x1419B98", Offset = "0x1419B98", VA = "0x1419B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x141AB60", Offset = "0x141AB60", VA = "0x141AB60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880D60", Offset = "0x880D60")]
	private sealed class <Vibracion>d__188 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B27CC")]
		private int <>1__state;

		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Player <>4__this;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool dosMandos;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0B")]
		public ushort potencia;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public bool lado;

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B27DC")]
		public float duracion;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <t>5__2;

		[Token(Token = "0x1700042E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600259D")]
			[Address(RVA = "0x141CD78", Offset = "0x141CD78", VA = "0x141CD78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600259F")]
			[Address(RVA = "0x141CE48", Offset = "0x141CE48", VA = "0x141CE48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x141C1A4", Offset = "0x141C1A4", VA = "0x141C1A4")]
		[DebuggerHidden]
		public <Vibracion>d__188(int <>1__state)
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x141C1EC", Offset = "0x141C1EC", VA = "0x141C1EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x141C200", Offset = "0x141C200", VA = "0x141C200", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x141CDA8", Offset = "0x141CDA8", VA = "0x141CDA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AFB")]
	private bool soyInmortal;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public EstadoZonaNegra estadoZonaNegra;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2594")]
	public Transform pistolasPadre;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform pistolasPadreRoomScale;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Transform tJugador;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public ControladorMano controladorManoDerecha;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B03")]
	[HideInInspector]
	public ControladorMano controladorManoIzquierda;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public GameObject cabeza;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B25A4")]
	[HideInInspector]
	public AudioSource audioSourcePlayer;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioClip[] audioClipsPlayer;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int puntos;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public float velCabeza;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0B")]
	[HideInInspector]
	public float velManoDerecha;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public float velManoIzquierda;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B25B4")]
	private Vector3 posAnteriorCabeza;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posAnteriorManoDerecha;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posAnteriorManoIzquierda;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Weapon weaponDer;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B13")]
	public Weapon weaponIzq;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Rifle rifle;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B25C4")]
	[HideInInspector]
	public bool fueraDeLimites;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int miEquipo;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool menu;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SyncJugadores miSyncJugadores;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1B")]
	public Transform playerRoomScale;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject cabezaMuñecoAbajo;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B25D4")]
	public Transform posInicialPlayerRoomScale;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform posInicialCabezaPlayerRoomScale;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform cabezaPlayerRoomScale;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform cabezaPlayerRoomScalePico;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B23")]
	public Transform cabezaPlayerRoomScaleNolo;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform audioSourcesRoomScale;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B25E4")]
	private AudioSource audioSourceRoomScaleAparecer;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource audioSourceRoomScaleDesaparecer;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool roomScale;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Speaker speaker;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B2B")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject zonaOscura;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B25F4")]
	public GameObject cajaNegra;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform tutorialDerecho;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform tutorialIzquierdo;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform padreOriginalTutorialDerecho;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B33")]
	public Transform padreOriginalTutorialIzquierdo;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform padreFakeTutorialDerecho;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2604")]
	public Transform padreFakeTutorialIzquuierdo;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pistolaRoomScaleFakeD;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pistolaRoomScaleFakeI;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject rifleRommScaleFakeD;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B3B")]
	public GameObject rifleRommScaleFakeI;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject hologramaRoomScaleD;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2614")]
	public GameObject hologramaRoomScaleI;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject huellas;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshPro textoIdOnline;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private CamaraBlancoNegro camaraBlancoNegro;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B43")]
	public Recorder vozPun;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public int idPhotonVoiceView;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2624")]
	[HideInInspector]
	public float segReinicio;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int oldNumPlayers;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int oldPuntuacionE1;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int oldPuntuacionE2;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4B")]
	private float esperaArenaInfo;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Coroutine enElLimboCor;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2634")]
	[HideInInspector]
	public bool enElLimbo;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool muerto;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool noPoderMoverse;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool pararTiempo;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B53")]
	public bool inmune;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Coroutine muerte;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2644")]
	private Coroutine laser;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject objetoMuerte;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public CabezaRoomSccale cabezaRoomScaleScript;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public List<Pvr_UnitySDKEye> eyesPico;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B5B")]
	private Coroutine corPosicionarPlayer;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 pistolasPadresInicio;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2654")]
	private Transform padreInicial;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine mostrarPistolasCor;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool zonaOscuraActivada;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform collidersLimitesRoomScale;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B63")]
	private Vector3 posPlayerAlActivar;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 posIniPantallaDerecha;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2664")]
	private Vector3 escalaIniPantallaDerecha;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject botonesPausa;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject botonesSalir;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshPro textJugQueHaPuestoPausa;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B6B")]
	public GameObject[] botonesPausaArray;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject laserManoDRoomScale;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2674")]
	public GameObject laserManoIRoomScale;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject arenaGo;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshPro puntuacionArenaE1;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TextMeshPro puntuacionArenaE2;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B73")]
	public TextMeshPro miembrosEquipo1;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public TextMeshPro miembrosquipo2;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2684")]
	private int idJugadorQueHaPuestoPausa;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine ponerLaser;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine indicarSala;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine corInmortalidad;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B7B")]
	private bool pD;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool pI;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2694")]
	private bool rD;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool rI;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool enConfirmacionDeSalir;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 posIniTutoDerecho;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B83")]
	private Vector3 posIniTutoIzquierdo;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 escalaTutoD;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B26A4")]
	private Vector3 escalaTutoI;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float tiempoDesdeQueHeSubidoHastaQuePuedoBajar;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform audioSorucesDerecha;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform audioSorucesIzquierda;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8B")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool meHeRecolocadoPorPrimeraVez;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B26B4")]
	private bool haDeRecolocarse;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TipoVibracion tipoVibracionActual;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool pararVibracion;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool vibracionIniciada;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B93")]
	public float fuerzaVibracion;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool vibracionPermitida;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B26C4")]
	private ControladorVRSteam controladorSteam;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ControladorVROculus controladorOculus;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ControladorVRPico controladorPico;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ControladorVRNolo controladorNolo;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9B")]
	public AnimationCurve Out;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public AnimationCurve Constant;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B26D4")]
	public AnimationCurve In;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine vibracion;

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x11A0654", Offset = "0x11A0654", VA = "0x11A0654")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x11A23A4", Offset = "0x11A23A4", VA = "0x11A23A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7AF0", Offset = "0x8A7AF0")]
	private IEnumerator RecolocarStartMenu()
	{
		return null;
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x11A2444", Offset = "0x11A2444", VA = "0x11A2444")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x11A4774", Offset = "0x11A4774", VA = "0x11A4774")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x11A14F8", Offset = "0x11A14F8", VA = "0x11A14F8")]
	private void BuscarReferencias()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x11A1D58", Offset = "0x11A1D58", VA = "0x11A1D58")]
	private void CargarClipsAudio()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x11A4900", Offset = "0x11A4900", VA = "0x11A4900")]
	public bool GetInmortalidad()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x11A4944", Offset = "0x11A4944", VA = "0x11A4944")]
	public void SetInmortalidad(bool valor)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x11A49FC", Offset = "0x11A49FC", VA = "0x11A49FC")]
	public int GetPuntos()
	{
		return default(int);
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x11A4A2C", Offset = "0x11A4A2C", VA = "0x11A4A2C")]
	public void SetPuntos(int nuevosPuntos)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x11A4A64", Offset = "0x11A4A64", VA = "0x11A4A64")]
	public void AddPuntos(int puntosGanados)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x11A359C", Offset = "0x11A359C", VA = "0x11A359C")]
	private void CalcularVelocidadesDeLosSensores()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x11A4ACC", Offset = "0x11A4ACC", VA = "0x11A4ACC")]
	public void PonerAudioEnAudioSource(ClipsAudioJugador clipAudio)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x117DC70", Offset = "0x117DC70", VA = "0x117DC70")]
	public void Morir([Optional] GameObject objeto, bool forzarMuerte = false, bool porCabeza = true, bool mano = true, bool morirFinCompetitivo = false)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x11A5084", Offset = "0x11A5084", VA = "0x11A5084")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7BA0", Offset = "0x8A7BA0")]
	private IEnumerator ColocarPuntosTrailBala(TrailRenderer tr, Vector3[] extraPositions)
	{
		return null;
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x11A5174", Offset = "0x11A5174", VA = "0x11A5174")]
	private void MuerteComun(bool forzarMuerte)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x11A57AC", Offset = "0x11A57AC", VA = "0x11A57AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7C50", Offset = "0x8A7C50")]
	private IEnumerator EsperarEnElLimbo(bool mano, bool porCabeza)
	{
		return null;
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x11A563C", Offset = "0x11A563C", VA = "0x11A563C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7D00", Offset = "0x8A7D00")]
	private IEnumerator EfectoMuerte(bool porCabeza = true, bool mano = true, bool morirFinCompetitivo = false)
	{
		return null;
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x11A599C", Offset = "0x11A599C", VA = "0x11A599C")]
	public void PosicionarAlPlayerEnSuSitio()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x11A5B60", Offset = "0x11A5B60", VA = "0x11A5B60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7DB0", Offset = "0x8A7DB0")]
	private IEnumerator PosicionarPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x11A58E0", Offset = "0x11A58E0", VA = "0x11A58E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7E60", Offset = "0x8A7E60")]
	private IEnumerator LaserFlechas()
	{
		return null;
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x11A5C1C", Offset = "0x11A5C1C", VA = "0x11A5C1C")]
	public void MostrarPistolas()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x11A5CBC", Offset = "0x11A5CBC", VA = "0x11A5CBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7F10", Offset = "0x8A7F10")]
	private IEnumerator EsperarAMostrarPistolas()
	{
		return null;
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x1183B78", Offset = "0x1183B78", VA = "0x1183B78")]
	public void QuitarTutoPowerup()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x11A5D78", Offset = "0x11A5D78", VA = "0x11A5D78")]
	public GameObject GetObjetoMuerte()
	{
		return null;
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x11A5DA8", Offset = "0x11A5DA8", VA = "0x11A5DA8")]
	public void SetObjetoMuerte(GameObject valor)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x11A5DE0", Offset = "0x11A5DE0", VA = "0x11A5DE0")]
	public void ResetRotacionPlayer()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x11A5E28", Offset = "0x11A5E28", VA = "0x11A5E28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A7FC0", Offset = "0x8A7FC0")]
	private IEnumerator LerrpResetRotacionPadre()
	{
		return null;
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x11A5EE4", Offset = "0x11A5EE4", VA = "0x11A5EE4")]
	public void VolverAPosicionarPistolasEnSuSitio()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x11850F0", Offset = "0x11850F0", VA = "0x11850F0")]
	public void ActivarDesactiarZonaOscura(bool activar, EstadoZonaNegra nuevoEstado = EstadoZonaNegra.Desactivado, bool desdeSalir = false, int porRedIdJugador = -1)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x11AC800", Offset = "0x11AC800", VA = "0x11AC800")]
	public void Empezar()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x11ACD8C", Offset = "0x11ACD8C", VA = "0x11ACD8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8070", Offset = "0x8A8070")]
	private IEnumerator ActivarLaserZonaOscura()
	{
		return null;
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x11ACE48", Offset = "0x11ACE48", VA = "0x11ACE48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8120", Offset = "0x8A8120")]
	private IEnumerator IndicarSala()
	{
		return null;
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x11ACF04", Offset = "0x11ACF04", VA = "0x11ACF04")]
	public void SerInmortalPorXSegundos(float segundos)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x11AD18C", Offset = "0x11AD18C", VA = "0x11AD18C")]
	public void QuitarInmortalidad()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x11AD2C4", Offset = "0x11AD2C4", VA = "0x11AD2C4")]
	public void QuitarInmortalidadConCoroutina(float tiempo)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x11AD0A8", Offset = "0x11AD0A8", VA = "0x11AD0A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A81D0", Offset = "0x8A81D0")]
	private IEnumerator QuitarInmortalidad(float segundos)
	{
		return null;
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x11AD31C", Offset = "0x11AD31C", VA = "0x11AD31C")]
	public void Continuar()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x11AD364", Offset = "0x11AD364", VA = "0x11AD364")]
	public void Reiniciar()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x11ADEEC", Offset = "0x11ADEEC", VA = "0x11ADEEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8280", Offset = "0x8A8280")]
	private IEnumerator Reinicio()
	{
		return null;
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x11A62EC", Offset = "0x11A62EC", VA = "0x11A62EC")]
	public void Salir()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x11A404C", Offset = "0x11A404C", VA = "0x11A404C")]
	private void EncenderInfoArena()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x11ADFA8", Offset = "0x11ADFA8", VA = "0x11ADFA8")]
	private void ApagarInfoArena()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x11AE018", Offset = "0x11AE018", VA = "0x11AE018")]
	public void SalirDefinitivamente()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x11AE0B4", Offset = "0x11AE0B4", VA = "0x11AE0B4")]
	public void NoSalir()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x11AE6F8", Offset = "0x11AE6F8", VA = "0x11AE6F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x11AE798", Offset = "0x11AE798", VA = "0x11AE798")]
	public void ReproducirAudioSourceRoomScale(ClipsAudioJugador clipAudio)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x11A6678", Offset = "0x11A6678", VA = "0x11A6678")]
	public void PonerQuitarModoRoomScale(bool activar, bool porInicioDeNivel = false)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x11AEC6C", Offset = "0x11AEC6C", VA = "0x11AEC6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x11AE828", Offset = "0x11AE828", VA = "0x11AE828")]
	public void RecolocarCabezaRoomScale()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x11AECD4", Offset = "0x11AECD4", VA = "0x11AECD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8330", Offset = "0x8A8330")]
	private IEnumerator Recolocar()
	{
		return null;
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x11AED90", Offset = "0x11AED90", VA = "0x11AED90")]
	public ControladorVRPico GetControladorVRPico()
	{
		return null;
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x11AEDC0", Offset = "0x11AEDC0", VA = "0x11AEDC0")]
	public ControladorVRNolo GetControladorVRNolo()
	{
		return null;
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x11A1F34", Offset = "0x11A1F34", VA = "0x11A1F34")]
	private void InicioVariablesVibracion()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x11AEDF0", Offset = "0x11AEDF0", VA = "0x11AEDF0")]
	public void Vibra(TipoVibracion tipoVibracion, bool mano = true, bool doble = false)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x11AF108", Offset = "0x11AF108", VA = "0x11AF108")]
	public void Disparar(float duration, bool lado, bool doble)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x11AF490", Offset = "0x11AF490", VA = "0x11AF490")]
	public void LanzarGancho(float duration, bool lado, bool doble)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x11AF818", Offset = "0x11AF818", VA = "0x11AF818")]
	public void CogerPistolas(float duration, bool lado)
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x11AFAB4", Offset = "0x11AFAB4", VA = "0x11AFAB4")]
	public void Muerte(float duration, bool lado, bool doble)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x11AFE3C", Offset = "0x11AFE3C", VA = "0x11AFE3C")]
	public void PasarNivel(float duration, bool lado)
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x11AF0F4", Offset = "0x11AF0F4", VA = "0x11AF0F4")]
	public void PararVibracion()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x11B00A8", Offset = "0x11B00A8", VA = "0x11B00A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A83E0", Offset = "0x8A83E0")]
	private IEnumerator Vibracion(float duracion, bool lado, ushort potencia = 1000, bool dosMandos = false)
	{
		return null;
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x11B0230", Offset = "0x11B0230", VA = "0x11B0230")]
	public Player()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B7")]
public class Drops
{
	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject drop;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int probabilidad;

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x135F8D0", Offset = "0x135F8D0", VA = "0x135F8D0")]
	public Drops()
	{
	}
}
[Token(Token = "0x20001B8")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x1749B30", Offset = "0x1749B30", VA = "0x1749B30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x1749F20", Offset = "0x1749F20", VA = "0x1749F20")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x20001B9")]
public class PowerUpEscopeta : Powerup
{
	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x14210DC", Offset = "0x14210DC", VA = "0x14210DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x142110C", Offset = "0x142110C", VA = "0x142110C", Slot = "6")]
	public override void ActivarPowerUp()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x1421A44", Offset = "0x1421A44", VA = "0x1421A44")]
	public PowerUpEscopeta()
	{
	}
}
[Token(Token = "0x20001BA")]
public class PowerUpInmortal : Powerup
{
	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C13")]
	private ColisionesJugador vidaJugador;

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x1421AB8", Offset = "0x1421AB8", VA = "0x1421AB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x1421AE8", Offset = "0x1421AE8", VA = "0x1421AE8", Slot = "6")]
	public override void ActivarPowerUp()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x1421D18", Offset = "0x1421D18", VA = "0x1421D18")]
	public PowerUpInmortal()
	{
	}
}
[Token(Token = "0x20001BB")]
public class PowerUpLaser : Powerup
{
	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x1421D48", Offset = "0x1421D48", VA = "0x1421D48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x1421D78", Offset = "0x1421D78", VA = "0x1421D78", Slot = "6")]
	public override void ActivarPowerUp()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x1422514", Offset = "0x1422514", VA = "0x1422514")]
	public PowerUpLaser()
	{
	}
}
[Token(Token = "0x20001BC")]
public class PowerUpTiempo : Powerup
{
	[Token(Token = "0x2000597")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880D9C", Offset = "0x880D9C")]
	private sealed class <EsperarXEnMostrarMensage>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1B")]
		private object <>2__current;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public PowerUpTiempo <>4__this;

		[Token(Token = "0x17000430")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025A3")]
			[Address(RVA = "0x1424D80", Offset = "0x1424D80", VA = "0x1424D80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000431")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025A5")]
			[Address(RVA = "0x1424E50", Offset = "0x1424E50", VA = "0x1424E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x1422A20", Offset = "0x1422A20", VA = "0x1422A20")]
		[DebuggerHidden]
		public <EsperarXEnMostrarMensage>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x1424A30", Offset = "0x1424A30", VA = "0x1424A30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x1424A44", Offset = "0x1424A44", VA = "0x1424A44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x1424DB0", Offset = "0x1424DB0", VA = "0x1424DB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880DD8", Offset = "0x880DD8")]
	private sealed class <ActivarPowerUpDespuesDeTutorial>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B27FC")]
		private int <>1__state;

		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float tiempo;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PowerUpTiempo <>4__this;

		[Token(Token = "0x17000432")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025A9")]
			[Address(RVA = "0x14245F0", Offset = "0x14245F0", VA = "0x14245F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000433")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025AB")]
			[Address(RVA = "0x14246C0", Offset = "0x14246C0", VA = "0x14246C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x1422B4C", Offset = "0x1422B4C", VA = "0x1422B4C")]
		[DebuggerHidden]
		public <ActivarPowerUpDespuesDeTutorial>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x14243A8", Offset = "0x14243A8", VA = "0x14243A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x14243BC", Offset = "0x14243BC", VA = "0x14243BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x1424620", Offset = "0x1424620", VA = "0x1424620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000599")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E14", Offset = "0x880E14")]
	private sealed class <EsperarSegundosPonerTutoTiempoMuerto>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C23")]
		private int <>1__state;

		[Token(Token = "0x4002A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B280C")]
		public PowerUpTiempo <>4__this;

		[Token(Token = "0x17000434")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025AF")]
			[Address(RVA = "0x1424930", Offset = "0x1424930", VA = "0x1424930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000435")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B1")]
			[Address(RVA = "0x1424A00", Offset = "0x1424A00", VA = "0x1424A00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x1422C50", Offset = "0x1422C50", VA = "0x1422C50")]
		[DebuggerHidden]
		public <EsperarSegundosPonerTutoTiempoMuerto>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x14246F0", Offset = "0x14246F0", VA = "0x14246F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x1424704", Offset = "0x1424704", VA = "0x1424704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x1424960", Offset = "0x1424960", VA = "0x1424960", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool tutorial;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B27EC")]
	private bool activadoMensaje;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine corrutinaActivarXTiempoDespues;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool tutorialMostrado;

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x1422544", Offset = "0x1422544", VA = "0x1422544")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x142264C", Offset = "0x142264C", VA = "0x142264C", Slot = "6")]
	public override void ActivarPowerUp()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x1422964", Offset = "0x1422964", VA = "0x1422964")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8490", Offset = "0x8A8490")]
	private IEnumerator EsperarXEnMostrarMensage()
	{
		return null;
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x1422A68", Offset = "0x1422A68", VA = "0x1422A68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8540", Offset = "0x8A8540")]
	private IEnumerator ActivarPowerUpDespuesDeTutorial(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x1422B94", Offset = "0x1422B94", VA = "0x1422B94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A85F0", Offset = "0x8A85F0")]
	private IEnumerator EsperarSegundosPonerTutoTiempoMuerto()
	{
		return null;
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x1422C98", Offset = "0x1422C98", VA = "0x1422C98", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x1423468", Offset = "0x1423468", VA = "0x1423468", Slot = "5")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x1424378", Offset = "0x1424378", VA = "0x1424378")]
	public PowerUpTiempo()
	{
	}
}
[Token(Token = "0x20001BD")]
public abstract class Powerup : MonoBehaviour
{
	[Token(Token = "0x200059A")]
	public enum TipoPowerup
	{
		[Token(Token = "0x4002A24")]
		Tiempo,
		[Token(Token = "0x4002A25")]
		Escopeta,
		[Token(Token = "0x4002A26")]
		Inmortal,
		[Token(Token = "0x4002A27")]
		Laser,
		[Token(Token = "0x4002A28")]
		Desconocido
	}

	[Token(Token = "0x200059B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E50", Offset = "0x880E50")]
	private sealed class <TiempoVida>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C3B")]
		public Powerup <>4__this;

		[Token(Token = "0x17000436")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025B5")]
			[Address(RVA = "0x142656C", Offset = "0x142656C", VA = "0x142656C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000437")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B7")]
			[Address(RVA = "0x142663C", Offset = "0x142663C", VA = "0x142663C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x1425EDC", Offset = "0x1425EDC", VA = "0x1425EDC")]
		[DebuggerHidden]
		public <TiempoVida>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x1426384", Offset = "0x1426384", VA = "0x1426384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x1426398", Offset = "0x1426398", VA = "0x1426398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x142659C", Offset = "0x142659C", VA = "0x142659C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880E8C", Offset = "0x880E8C")]
	private sealed class <DestruyemeEnUnRato>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B28B4")]
		private object <>2__current;

		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Powerup <>4__this;

		[Token(Token = "0x17000438")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025BB")]
			[Address(RVA = "0x1426284", Offset = "0x1426284", VA = "0x1426284", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000439")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025BD")]
			[Address(RVA = "0x1426354", Offset = "0x1426354", VA = "0x1426354", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x1425FE0", Offset = "0x1425FE0", VA = "0x1425FE0")]
		[DebuggerHidden]
		public <DestruyemeEnUnRato>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x1426028", Offset = "0x1426028", VA = "0x1426028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x142603C", Offset = "0x142603C", VA = "0x142603C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x14262B4", Offset = "0x14262B4", VA = "0x14262B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TipoPowerup tipo;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int contadorLevitacion;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int tickSinHacerCosasEsteticas;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C2B")]
	protected AudioSource miSonido;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	protected EfectoDesaparecer miEfectoDesaparicion;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B281C")]
	protected SpriteRenderer miSprite;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool vivo;

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x1424E80", Offset = "0x1424E80", VA = "0x1424E80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x1422F38", Offset = "0x1422F38", VA = "0x1422F38", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x1425070", Offset = "0x1425070", VA = "0x1425070", Slot = "5")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x1424FB4", Offset = "0x1424FB4", VA = "0x1424FB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A86A0", Offset = "0x8A86A0")]
	private IEnumerator TiempoVida()
	{
		return null;
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x1425F24", Offset = "0x1425F24", VA = "0x1425F24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8750", Offset = "0x8A8750")]
	private IEnumerator DestruyemeEnUnRato()
	{
		return null;
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x14218A8", Offset = "0x14218A8", VA = "0x14218A8")]
	public void Desactivar()
	{
	}

	[Token(Token = "0x6000E7E")]
	public abstract void ActivarPowerUp();

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x1421A74", Offset = "0x1421A74", VA = "0x1421A74")]
	protected Powerup()
	{
	}
}
[Token(Token = "0x20001BE")]
[ExecuteInEditMode]
public class PowerupDummy : Powerup
{
	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TipoPowerup oldTipo;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Sprite[] sprites;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C43")]
	public SpriteRenderer sRenderer;

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x142666C", Offset = "0x142666C", VA = "0x142666C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x1426680", Offset = "0x1426680", VA = "0x1426680")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x1426758", Offset = "0x1426758", VA = "0x1426758", Slot = "6")]
	public override void ActivarPowerUp()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x14267F8", Offset = "0x14267F8", VA = "0x14267F8")]
	public PowerupDummy()
	{
	}
}
[Token(Token = "0x20001BF")]
public class SaltarAJugador : MonoBehaviour
{
	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880EC8", Offset = "0x880EC8")]
	private sealed class <TiempoEsperaSalto>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SaltarAJugador <>4__this;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4B")]
		public float tiempo;

		[Token(Token = "0x1700043A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025C1")]
			[Address(RVA = "0x1204AC0", Offset = "0x1204AC0", VA = "0x1204AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x1204B90", Offset = "0x1204B90", VA = "0x1204B90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x120466C", Offset = "0x120466C", VA = "0x120466C")]
		[DebuggerHidden]
		public <TiempoEsperaSalto>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x12046E4", Offset = "0x12046E4", VA = "0x12046E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x12046F8", Offset = "0x12046F8", VA = "0x12046F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x1204AF0", Offset = "0x1204AF0", VA = "0x1204AF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Rigidbody rb;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B28C4")]
	public float strength;

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x12041E0", Offset = "0x12041E0", VA = "0x12041E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x1204318", Offset = "0x1204318", VA = "0x1204318")]
	public void JumpTo(GameObject objetivo, float fuerza)
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x1204234", Offset = "0x1204234", VA = "0x1204234")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8800", Offset = "0x8A8800")]
	private IEnumerator TiempoEsperaSalto(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x12046B4", Offset = "0x12046B4", VA = "0x12046B4")]
	public SaltarAJugador()
	{
	}
}
[Token(Token = "0x20001C0")]
public class Radar : MonoBehaviour
{
	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Bola bola;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B28D4")]
	private float ticksSinDetectar;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject ultimoObjetoGancho;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Weapon ultimoWeapon;

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x11EA5BC", Offset = "0x11EA5BC", VA = "0x11EA5BC")]
	public Radar()
	{
	}
}
[Token(Token = "0x20001C1")]
public class Sala : MonoBehaviour
{
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int numeroSala;

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x11F8EA8", Offset = "0x11F8EA8", VA = "0x11F8EA8")]
	public Sala()
	{
	}
}
[Token(Token = "0x20001C2")]
public class SalasManager : MonoBehaviour
{
	[Token(Token = "0x200059E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F04", Offset = "0x880F04")]
	private sealed class <InstanciarPlayerCor>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2924")]
		private int <>1__state;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SalasManager <>4__this;

		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject <go>5__2;

		[Token(Token = "0x4002A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C7B")]
		private bool <inicializadoOnline>5__3;

		[Token(Token = "0x1700043C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025C7")]
			[Address(RVA = "0x1202C8C", Offset = "0x1202C8C", VA = "0x1202C8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025C9")]
			[Address(RVA = "0x1202D5C", Offset = "0x1202D5C", VA = "0x1202D5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x11FA1A4", Offset = "0x11FA1A4", VA = "0x11FA1A4")]
		[DebuggerHidden]
		public <InstanciarPlayerCor>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x1201844", Offset = "0x1201844", VA = "0x1201844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x1201858", Offset = "0x1201858", VA = "0x1201858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x1202CBC", Offset = "0x1202CBC", VA = "0x1202CBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200059F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F40", Offset = "0x880F40")]
	private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2934")]
		private object <>2__current;

		[Token(Token = "0x4002A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SalasManager <>4__this;

		[Token(Token = "0x1700043E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025CD")]
			[Address(RVA = "0x12040E0", Offset = "0x12040E0", VA = "0x12040E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025CF")]
			[Address(RVA = "0x12041B0", Offset = "0x12041B0", VA = "0x12041B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x11FA2A8", Offset = "0x11FA2A8", VA = "0x11FA2A8")]
		[DebuggerHidden]
		public <Start>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x12036D4", Offset = "0x12036D4", VA = "0x12036D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x12036E8", Offset = "0x12036E8", VA = "0x12036E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x1204110", Offset = "0x1204110", VA = "0x1204110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880F7C", Offset = "0x880F7C")]
	private sealed class <PonerPistolasArriba>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x17000440")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025D3")]
			[Address(RVA = "0x12035D4", Offset = "0x12035D4", VA = "0x12035D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000441")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025D5")]
			[Address(RVA = "0x12036A4", Offset = "0x12036A4", VA = "0x12036A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x11FFDA4", Offset = "0x11FFDA4", VA = "0x11FFDA4")]
		[DebuggerHidden]
		public <PonerPistolasArriba>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x1203424", Offset = "0x1203424", VA = "0x1203424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x1203438", Offset = "0x1203438", VA = "0x1203438", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x1203604", Offset = "0x1203604", VA = "0x1203604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880FB8", Offset = "0x880FB8")]
	private sealed class <MostrarMensaje>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C83")]
		private int <>1__state;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2944")]
		public int num;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int chica;

		[Token(Token = "0x17000442")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025D9")]
			[Address(RVA = "0x1202FA0", Offset = "0x1202FA0", VA = "0x1202FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000443")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x1203070", Offset = "0x1203070", VA = "0x1203070", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x1200C58", Offset = "0x1200C58", VA = "0x1200C58")]
		[DebuggerHidden]
		public <MostrarMensaje>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x1202D8C", Offset = "0x1202D8C", VA = "0x1202D8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x1202DA0", Offset = "0x1202DA0", VA = "0x1202DA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x1202FD0", Offset = "0x1202FD0", VA = "0x1202FD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880FF4", Offset = "0x880FF4")]
	private sealed class <MostrarTorretas>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8B")]
		public SalasManager <>4__this;

		[Token(Token = "0x17000444")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025DF")]
			[Address(RVA = "0x1203324", Offset = "0x1203324", VA = "0x1203324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000445")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025E1")]
			[Address(RVA = "0x12033F4", Offset = "0x12033F4", VA = "0x12033F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x1200F64", Offset = "0x1200F64", VA = "0x1200F64")]
		[DebuggerHidden]
		public <MostrarTorretas>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x12030A0", Offset = "0x12030A0", VA = "0x12030A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x12030B4", Offset = "0x12030B4", VA = "0x12030B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x1203354", Offset = "0x1203354", VA = "0x1203354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C53")]
	public GameObject[] niveles;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform[] puntosSpawn;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B28E4")]
	public GameObject posicionPlayer;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ControladorTVs controladorTVs;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ObjetosDelNivel objetosNivelActual;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject estructuras;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C5B")]
	public Transform frentePantallaIzquierda;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform PantallaDerecha;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B28F4")]
	public Transform puntoLuzSala;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool nivelIniciado;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MeshRenderer lucesSala;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Color luzSalaNormalColor;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C63")]
	[HideInInspector]
	public Color luzSalaAlarmaColor;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public int puntosTotales;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2904")]
	[HideInInspector]
	public int puntosTotalesNivelAnterior;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MonedaMultiplicador rachaObj;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int racha;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private AudioSource audioSource1;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C6B")]
	private AudioSource audioSource2;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject FlechaPowerUp;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2914")]
	public Material matNivel;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject confeti;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool playerCargado;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool salaCargada;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C73")]
	private List<Powerup> powerupsInstanciados;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private ParedPistola[] torretas;

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x11F8ED8", Offset = "0x11F8ED8", VA = "0x11F8ED8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x11FA0E8", Offset = "0x11FA0E8", VA = "0x11FA0E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A88B0", Offset = "0x8A88B0")]
	private IEnumerator InstanciarPlayerCor()
	{
		return null;
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x11FA1EC", Offset = "0x11FA1EC", VA = "0x11FA1EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8960", Offset = "0x8A8960")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x11FA2F0", Offset = "0x11FA2F0", VA = "0x11FA2F0")]
	public void CargarSalaNivel(int nivel, bool muerte = false)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x11FFC48", Offset = "0x11FFC48", VA = "0x11FFC48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8A10", Offset = "0x8A8A10")]
	private IEnumerator PonerPistolasArriba()
	{
		return null;
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x11FFDEC", Offset = "0x11FFDEC", VA = "0x11FFDEC")]
	private void PonerLimitesSala()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x120005C", Offset = "0x120005C", VA = "0x120005C")]
	public void SumarRacha(Vector3 pos)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x1200844", Offset = "0x1200844", VA = "0x1200844")]
	public void ResetearRacha()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x12008AC", Offset = "0x12008AC", VA = "0x12008AC")]
	public int GetRacha()
	{
		return default(int);
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x1200524", Offset = "0x1200524", VA = "0x1200524")]
	private void MostrarRacha(Vector3 pos, int puntos)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x12008DC", Offset = "0x12008DC", VA = "0x12008DC")]
	public void SumarPuntosTotales(int nuevosPuntos)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x1200A88", Offset = "0x1200A88", VA = "0x1200A88")]
	public void ResetPuntosTotales()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x11FFBE0", Offset = "0x11FFBE0", VA = "0x11FFBE0")]
	private void MostrarElMensaje(int num, int chica = -1)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x1200B68", Offset = "0x1200B68", VA = "0x1200B68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8AC0", Offset = "0x8A8AC0")]
	private IEnumerator MostrarMensaje(int num, int chica = -1)
	{
		return null;
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x1200CA0", Offset = "0x1200CA0", VA = "0x1200CA0")]
	public void ActivarTorretas()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x1200E80", Offset = "0x1200E80", VA = "0x1200E80")]
	public void DesactivarTorretas()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x11FFCE8", Offset = "0x11FFCE8", VA = "0x11FFCE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8B70", Offset = "0x8A8B70")]
	private IEnumerator MostrarTorretas()
	{
		return null;
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x1200FAC", Offset = "0x1200FAC", VA = "0x1200FAC")]
	public void SubirPuntuacionARecords()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x12015A8", Offset = "0x12015A8", VA = "0x12015A8")]
	public SalasManager()
	{
	}
}
[Token(Token = "0x20001C3")]
public class SetQuestGo : MonoBehaviour
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject der;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2954")]
	public GameObject izq;

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x12051D0", Offset = "0x12051D0", VA = "0x12051D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x120551C", Offset = "0x120551C", VA = "0x120551C")]
	public SetQuestGo()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ChangeSkybox : MonoBehaviour
{
	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Material[] skyboxes;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private InputsController iCtr;

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x14D67D4", Offset = "0x14D67D4", VA = "0x14D67D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x14D6860", Offset = "0x14D6860", VA = "0x14D6860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x14D6874", Offset = "0x14D6874", VA = "0x14D6874")]
	public void ChangeMySkybox()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x14D6948", Offset = "0x14D6948", VA = "0x14D6948")]
	public ChangeSkybox()
	{
	}
}
[Token(Token = "0x20001C5")]
public class ColisionesJugador : MonoBehaviour
{
	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool muerte;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C93")]
	public bool inmortal;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Texture2D texturaFundido;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2964")]
	private Material muerteMaterial;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rect area;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float alpha;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private CapsuleCollider capsuleColliderCuerpoPlayer;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C9B")]
	private AudioSource sonidoMuerte;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 origenPlayer;

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x1452768", Offset = "0x1452768", VA = "0x1452768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x1452884", Offset = "0x1452884", VA = "0x1452884")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x14540F8", Offset = "0x14540F8", VA = "0x14540F8")]
	public void ActivarDesactivarCapsulaPlayer(bool estado)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x1454248", Offset = "0x1454248", VA = "0x1454248")]
	public ColisionesJugador()
	{
	}
}
[Token(Token = "0x20001C6")]
public class ControladorCadena : MonoBehaviour
{
	[Token(Token = "0x20005A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881030", Offset = "0x881030")]
	private sealed class <EncenderTrasUnTiempo>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B29A4")]
		private object <>2__current;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControladorCadena <>4__this;

		[Token(Token = "0x17000446")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025E5")]
			[Address(RVA = "0x145968C", Offset = "0x145968C", VA = "0x145968C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025E7")]
			[Address(RVA = "0x145975C", Offset = "0x145975C", VA = "0x145975C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x145921C", Offset = "0x145921C", VA = "0x145921C")]
		[DebuggerHidden]
		public <EncenderTrasUnTiempo>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x145944C", Offset = "0x145944C", VA = "0x145944C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x1459460", Offset = "0x1459460", VA = "0x1459460", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x14596BC", Offset = "0x14596BC", VA = "0x14596BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88106C", Offset = "0x88106C")]
	private sealed class <Fade>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CBB")]
		public bool aparecer;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public ControladorCadena <>4__this;

		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B29B4")]
		private int <mult>5__2;

		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <t>5__3;

		[Token(Token = "0x17000448")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025EB")]
			[Address(RVA = "0x1459BB8", Offset = "0x1459BB8", VA = "0x1459BB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000449")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025ED")]
			[Address(RVA = "0x1459C88", Offset = "0x1459C88", VA = "0x1459C88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x1459370", Offset = "0x1459370", VA = "0x1459370")]
		[DebuggerHidden]
		public <Fade>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x145978C", Offset = "0x145978C", VA = "0x145978C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x14597A0", Offset = "0x14597A0", VA = "0x14597A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x1459BE8", Offset = "0x1459BE8", VA = "0x1459BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2974")]
	public LineRenderer m_line;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform puntoFinal;

	[Token(Token = "0x4000F77")]
	public const int CantPuntos = 101;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	public Vector3[] posicionesPuntos;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CA3")]
	[SerializeField]
	private float frecuencia;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	public float amplitud;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2984")]
	[SerializeField]
	private float velocidad;

	[Token(Token = "0x4000F7C")]
	private const float frecuenciaGravedad = 3.2f;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float amplitudGravedad;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float frecuencia2;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CAB")]
	[SerializeField]
	private float amplitud2;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private bool deformacionExtra;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2994")]
	public Vector3 vectorAlDestino;

	[Token(Token = "0x4000F82")]
	private const float pi = (float)Math.PI;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int cont;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine corFade;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CB3")]
	private Coroutine corEncender;

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x145818C", Offset = "0x145818C", VA = "0x145818C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x1458250", Offset = "0x1458250", VA = "0x1458250")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x1458280", Offset = "0x1458280", VA = "0x1458280")]
	private void UpdateLinea()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x1458F9C", Offset = "0x1458F9C", VA = "0x1458F9C")]
	public void Aparecer()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x1459160", Offset = "0x1459160", VA = "0x1459160")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8C20", Offset = "0x8A8C20")]
	private IEnumerator EncenderTrasUnTiempo()
	{
		return null;
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x1459264", Offset = "0x1459264", VA = "0x1459264")]
	public void Desaparecer()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x1459278", Offset = "0x1459278", VA = "0x1459278")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8CD0", Offset = "0x8A8CD0")]
	private IEnumerator Fade(bool aparecer)
	{
		return null;
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x14593B8", Offset = "0x14593B8", VA = "0x14593B8")]
	public ControladorCadena()
	{
	}
}
[Token(Token = "0x20001C7")]
public class ControladorCadenaOnline : MonoBehaviour
{
	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private LineRenderer m_line;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform puntoFinal;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC3")]
	private Transform puntoInicial;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform puntoFinalPistola;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B29C4")]
	public Transform puntoFinalGancho;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform puntoInicialPistola;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform puntoInicialGancho;

	[Token(Token = "0x4000F8D")]
	public const int CantPuntos = 101;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CCB")]
	[SerializeField]
	public Vector3[] posicionesPuntos;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private float frecuencia;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B29D4")]
	[SerializeField]
	public float amplitud;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private float velocidad;

	[Token(Token = "0x4000F92")]
	private const float frecuenciaGravedad = 3.2f;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float amplitudGravedad;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CD3")]
	[SerializeField]
	private float frecuencia2;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	private float amplitud2;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B29E4")]
	public Vector3 vectorAlDestino;

	[Token(Token = "0x4000F97")]
	private const float pi = (float)Math.PI;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x1459CB8", Offset = "0x1459CB8", VA = "0x1459CB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x1459D7C", Offset = "0x1459D7C", VA = "0x1459D7C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x1459DAC", Offset = "0x1459DAC", VA = "0x1459DAC")]
	private void UpdateLinea()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x145A868", Offset = "0x145A868", VA = "0x145A868")]
	public void CambiarPuntoAnclaje(bool derecha, bool pistola, bool sinGancho = false)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x145A9F4", Offset = "0x145A9F4", VA = "0x145A9F4")]
	public ControladorCadenaOnline()
	{
	}
}
[Token(Token = "0x20001C8")]
public class InputsController : MonoBehaviour
{
	[Token(Token = "0x20005A5")]
	public enum DispositivosPosibles
	{
		[Token(Token = "0x4002A4E")]
		SensorDerecho,
		[Token(Token = "0x4002A4F")]
		SensorIzquierdo,
		[Token(Token = "0x4002A50")]
		mando,
		[Token(Token = "0x4002A51")]
		rudder,
		[Token(Token = "0x4002A52")]
		teclado,
		[Token(Token = "0x4002A53")]
		tracker
	}

	[Token(Token = "0x20005A6")]
	public enum TipoSensores
	{
		[Token(Token = "0x4002A55")]
		vive,
		[Token(Token = "0x4002A56")]
		oculus,
		[Token(Token = "0x4002A57")]
		index,
		[Token(Token = "0x4002A58")]
		cosmos,
		[Token(Token = "0x4002A59")]
		wmr,
		[Token(Token = "0x4002A5A")]
		ninguno,
		[Token(Token = "0x4002A5B")]
		mandoXbox,
		[Token(Token = "0x4002A5C")]
		mandoSwitch,
		[Token(Token = "0x4002A5D")]
		mandoSteam,
		[Token(Token = "0x4002A5E")]
		tracker,
		[Token(Token = "0x4002A5F")]
		pico,
		[Token(Token = "0x4002A60")]
		nolo
	}

	[Token(Token = "0x20005A7")]
	public struct JoyInput
	{
		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool existe;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4B")]
		public string name;

		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public int joyNumber;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2AE4")]
		public DispositivosPosibles soyTipo;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TipoSensores tipoSensor;

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x9BFA5C", Offset = "0x9BFA5C", VA = "0x9BFA5C")]
		public JoyInput(bool _existe, string nombre, int num, DispositivosPosibles tipo, TipoSensores tipoDeSensor)
		{
		}
	}

	[Token(Token = "0x20005A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8810A8", Offset = "0x8810A8")]
	private sealed class <EsperaRecolocar>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D63")]
		public bool recolocar;

		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public InputsController <>4__this;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2B04")]
		public bool recolocarPorRotacionJoystick;

		[Token(Token = "0x1700044A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025F2")]
			[Address(RVA = "0x11D84A4", Offset = "0x11D84A4", VA = "0x11D84A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025F4")]
			[Address(RVA = "0x11D8574", Offset = "0x11D8574", VA = "0x11D8574", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x11D6BD0", Offset = "0x11D6BD0", VA = "0x11D6BD0")]
		[DebuggerHidden]
		public <EsperaRecolocar>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x11D6E6C", Offset = "0x11D6E6C", VA = "0x11D6E6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x11D6E80", Offset = "0x11D6E80", VA = "0x11D6E80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x11D84D4", Offset = "0x11D84D4", VA = "0x11D84D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool menu;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool escenaLoadingOnline;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CDB")]
	public static InputsController instance;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform head;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B29F4")]
	public Transform rightHand;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform leftHand;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ControladorVR controladorVR;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public ControladorVRNolo controladorVRNolo;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CE3")]
	private ControladorRudder controladorRudder;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool rudderConectado;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2A04")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x88FC18", Offset = "0x88FC18")]
	public Transform posicionDeseadaPlayer;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform posicionDeseadaCabeza;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float trigger;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float rightHandVelocity;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CEB")]
	private Vector3 posAnteriorManoDerecha;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float leftHandVelocity;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2A14")]
	private Vector3 posAnteriorManoIzquierda;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 leftHandVelocityVector;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 rightHandVelocityVector;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAtras;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CF3")]
	public bool botonPausa;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool botonPausaUp;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2A24")]
	public bool botonPausaDown;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonRecolocar;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonRecolocarUp;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonRecolocarDown;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CFB")]
	public bool botonCambiarPistolaGanchoDer;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool botonCambiarPistolaGanchoDerUp;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2A34")]
	public bool botonCambiarPistolaGanchoDerDown;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonCambiarPistolaGanchoIzq;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonCambiarPistolaGanchoIzqUp;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonCambiarPistolaGanchoIzqDown;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D03")]
	public float triggerDerecho;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float triggerIzquierdo;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2A44")]
	public bool triggerDerechoUp;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerDerechoDown;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerIzquierdoUp;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerIzquierdoDown;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0B")]
	private float anteriorGripD;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float anteriorGripI;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2A54")]
	public float gripDerecho;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool gripDerechoDown;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool gripDerechoUp;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float gripIzquierdo;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D13")]
	public bool gripIzquierdoDown;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool gripIzquierdoUp;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2A64")]
	public Vector2 stickIzquierdo;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 stickDerecho;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 rudder;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform playerInstance;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1B")]
	public float playerMovementSpeed;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector3 posicionSensorR;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2A74")]
	public Vector3 posicionSensorL;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 rotacionSensorR;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 rotacionSensorL;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float maxRoomCapacityMovementForward;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D23")]
	public float maxRoomCapacityMovementBackwards;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float maxRoomCapacityMovementToRight;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2A84")]
	public float maxRoomCapacityMovementToLeft;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float oldMouseX;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool oldBotonPausa;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool oldBotonRecolocar;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D2B")]
	private bool oldBotonCambiarPistolaGanchoDer;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool oldBotonCambiarPistolaGanchoIzq;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2A94")]
	private Vector3 currentRotation;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 currentRotationInicial;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool primeraVez;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float sensitivity;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D33")]
	private Vector3 oldRotation;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[HideInInspector]
	public float rotacionConJoystick;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2AA4")]
	private Vector3 poscabezaAlRotar;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool stickRotacionACero;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 rotacionExtraDesdeUltimaRecolocacion;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float ticksFuera;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D3B")]
	[HideInInspector]
	public bool estaFueraDeLimites;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private float tiempo;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2AB4")]
	[HideInInspector]
	public Vector3 ultimaPosicionPlayer;

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x11CDA0C", Offset = "0x11CDA0C", VA = "0x11CDA0C")]
	public static InputsController GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x11CDA8C", Offset = "0x11CDA8C", VA = "0x11CDA8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x11CDED4", Offset = "0x11CDED4", VA = "0x11CDED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x11CE4D8", Offset = "0x11CE4D8", VA = "0x11CE4D8")]
	public void EstablecerLimitesSala()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x11CF374", Offset = "0x11CF374", VA = "0x11CF374")]
	private Vector3 QuitarY(Vector3 miVector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x11CF414", Offset = "0x11CF414", VA = "0x11CF414")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x11D4D68", Offset = "0x11D4D68", VA = "0x11D4D68")]
	public bool GetBotonCambiarPistolaGanchoUp(bool derecho)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x11D4E0C", Offset = "0x11D4E0C", VA = "0x11D4E0C")]
	public void SetBotonCambiarPistolaGanchoUp(bool derecho, bool value)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x11CFABC", Offset = "0x11CFABC", VA = "0x11CFABC")]
	private void GetInputsNOVR()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x11D04F0", Offset = "0x11D04F0", VA = "0x11D04F0")]
	private void GetInputs()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x11D4EA4", Offset = "0x11D4EA4", VA = "0x11D4EA4")]
	public void ResetLastPosHand(bool derecha)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x11D4FD0", Offset = "0x11D4FD0", VA = "0x11D4FD0")]
	public Vector3 DesrotarPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x11D5048", Offset = "0x11D5048", VA = "0x11D5048")]
	private void MovimientoDebugRoomScale()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x11D1F50", Offset = "0x11D1F50", VA = "0x11D1F50")]
	private void Moverse()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x11D64E4", Offset = "0x11D64E4", VA = "0x11D64E4")]
	private Vector3 MovimientoPermitido(Vector3 oldPos, Vector3 newPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x11D37C0", Offset = "0x11D37C0", VA = "0x11D37C0")]
	private void CalcularLimites()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x11D6A5C", Offset = "0x11D6A5C", VA = "0x11D6A5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x11CED00", Offset = "0x11CED00", VA = "0x11CED00")]
	public void RecolocarCabeza(bool recolocar = true, bool recolocarPorRotacionJoystick = false)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x11D6A9C", Offset = "0x11D6A9C", VA = "0x11D6A9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8D80", Offset = "0x8A8D80")]
	private IEnumerator EsperaRecolocar(bool recolocar, bool recolocarPorRotacionJoystick = false)
	{
		return null;
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x11CA130", Offset = "0x11CA130", VA = "0x11CA130")]
	public void CambiarPlayer()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x11D1E44", Offset = "0x11D1E44", VA = "0x11D1E44")]
	private void UpdateRudder()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x11D6C18", Offset = "0x11D6C18", VA = "0x11D6C18")]
	public InputsController()
	{
	}
}
[Token(Token = "0x20001C9")]
public class JointSystem : MonoBehaviour
{
	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform conexion1;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform conexion2;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private LineRenderer lr;

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x11D9EBC", Offset = "0x11D9EBC", VA = "0x11D9EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x11D9F48", Offset = "0x11D9F48", VA = "0x11D9F48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x11D9F78", Offset = "0x11D9F78", VA = "0x11D9F78")]
	private void Conectar()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x11DA078", Offset = "0x11DA078", VA = "0x11DA078")]
	public JointSystem()
	{
	}
}
[Token(Token = "0x20001CA")]
public class PhysicsControl : MonoBehaviour
{
	[Token(Token = "0x20005A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8810E4", Offset = "0x8810E4")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2B14")]
		private int <>1__state;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PhysicsControl <>4__this;

		[Token(Token = "0x1700044C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025F8")]
			[Address(RVA = "0x119F8AC", Offset = "0x119F8AC", VA = "0x119F8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025FA")]
			[Address(RVA = "0x119F97C", Offset = "0x119F97C", VA = "0x119F97C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x119E944", Offset = "0x119E944", VA = "0x119E944")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x119F5F8", Offset = "0x119F5F8", VA = "0x119F5F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x119F60C", Offset = "0x119F60C", VA = "0x119F60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x119F8DC", Offset = "0x119F8DC", VA = "0x119F8DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D6B")]
	public static PhysicsControl instance;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Transform player;

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x119E788", Offset = "0x119E788", VA = "0x119E788")]
	public static PhysicsControl GetInsatance()
	{
		return null;
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x119E808", Offset = "0x119E808", VA = "0x119E808")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x119E888", Offset = "0x119E888", VA = "0x119E888")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8E30", Offset = "0x8A8E30")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x119E98C", Offset = "0x119E98C", VA = "0x119E98C")]
	public Vector3 FuerzaInicial(Rigidbody rb, Vector3 dir, float fuerza)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x119EAD0", Offset = "0x119EAD0", VA = "0x119EAD0")]
	public Vector3 Bounce(Vector3 collisionNormal, Vector3 lastFrameVel, Rigidbody rb, float vel, out Vector3 velocidadSinTrucar)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x119EE7C", Offset = "0x119EE7C", VA = "0x119EE7C")]
	public Vector3 BounceToPlayer(Vector3 collisionNormal, Vector3 lastFrameVel, Rigidbody rb, float vel, float porcentaje, out Vector3 velocidadSinTrucar)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x119F5C8", Offset = "0x119F5C8", VA = "0x119F5C8")]
	public PhysicsControl()
	{
	}
}
[Token(Token = "0x20001CB")]
public class SetCorrectCameraHeight : MonoBehaviour
{
	[Token(Token = "0x20005AA")]
	private enum TrackingSpace
	{
		[Token(Token = "0x4002A6F")]
		Stationary,
		[Token(Token = "0x4002A70")]
		RoomScale
	}

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88FD10", Offset = "0x88FD10")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88FD10", Offset = "0x88FD10")]
	private TrackingSpace m_TrackingSpace;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D73")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88FDD8", Offset = "0x88FDD8")]
	private float m_StationaryCameraYOffset;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88FE60", Offset = "0x88FE60")]
	private GameObject m_CameraFloorOffsetObject;

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x1204BC0", Offset = "0x1204BC0", VA = "0x1204BC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x1204D7C", Offset = "0x1204D7C", VA = "0x1204D7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x1204DAC", Offset = "0x1204DAC", VA = "0x1204DAC")]
	private void SetCameraHeight()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x1205188", Offset = "0x1205188", VA = "0x1205188")]
	public SetCorrectCameraHeight()
	{
	}
}
[Token(Token = "0x20001CC")]
public class Musica : MonoBehaviour
{
	[Token(Token = "0x20005AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881120", Offset = "0x881120")]
	private sealed class <CambiarMusica>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D83")]
		private int <>1__state;

		[Token(Token = "0x4002A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2B44")]
		public AudioSource aOn;

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool sinFadeOut;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioSource aOff;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float vel;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8B")]
		private float <cont>5__2;

		[Token(Token = "0x1700044E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025FE")]
			[Address(RVA = "0x1325650", Offset = "0x1325650", VA = "0x1325650", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002600")]
			[Address(RVA = "0x1325720", Offset = "0x1325720", VA = "0x1325720", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x1324D44", Offset = "0x1324D44", VA = "0x1324D44")]
		[DebuggerHidden]
		public <CambiarMusica>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x13251D0", Offset = "0x13251D0", VA = "0x13251D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x13251E4", Offset = "0x13251E4", VA = "0x13251E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x1325680", Offset = "0x1325680", VA = "0x1325680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioSource[] sonidos;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D7B")]
	public AudioMixer mixer;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public AudioSource[] audioSourcesMusica;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2B34")]
	public AudioClip musicaBoss;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioSource musicaMenu;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public int musicaNormal;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine cambiandoMusicaCor;

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x1324218", Offset = "0x1324218", VA = "0x1324218")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x13242C0", Offset = "0x13242C0", VA = "0x13242C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x13243E8", Offset = "0x13243E8", VA = "0x13243E8")]
	public void ActivarMusica(bool activar)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x1324568", Offset = "0x1324568", VA = "0x1324568")]
	public void CambiarMusicaATiempoParado(bool sinFadeOut = false)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x1324AB4", Offset = "0x1324AB4", VA = "0x1324AB4")]
	public void CambiarMusicaATiempoNormal(bool sinFadeOut = false)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x1324960", Offset = "0x1324960", VA = "0x1324960")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8EE0", Offset = "0x8A8EE0")]
	private IEnumerator CambiarMusica(AudioSource aOn, AudioSource aOff, float vel = 0.9f, bool sinFadeOut = false)
	{
		return null;
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x1324D8C", Offset = "0x1324D8C", VA = "0x1324D8C")]
	public void ResetearMusica()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x1324E3C", Offset = "0x1324E3C", VA = "0x1324E3C")]
	public void PonerMusicaBoss()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x1325058", Offset = "0x1325058", VA = "0x1325058")]
	public void MusicaInmortal(bool activar)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x132518C", Offset = "0x132518C", VA = "0x132518C")]
	public Musica()
	{
	}
}
[Token(Token = "0x20001CD")]
public class InicioNivel : MonoBehaviour
{
	[Token(Token = "0x20005AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88115C", Offset = "0x88115C")]
	private sealed class <Start>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9B")]
		private object <>2__current;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public InicioNivel <>4__this;

		[Token(Token = "0x17000450")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002604")]
			[Address(RVA = "0x11CB7E8", Offset = "0x11CB7E8", VA = "0x11CB7E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002606")]
			[Address(RVA = "0x11CB8B8", Offset = "0x11CB8B8", VA = "0x11CB8B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x11C91A0", Offset = "0x11C91A0", VA = "0x11C91A0")]
		[DebuggerHidden]
		public <Start>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x11CB4E4", Offset = "0x11CB4E4", VA = "0x11CB4E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x11CB4F8", Offset = "0x11CB4F8", VA = "0x11CB4F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x11CB818", Offset = "0x11CB818", VA = "0x11CB818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881198", Offset = "0x881198")]
	private sealed class <Esperar1SegMostrarMensaje>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2B74")]
		private int <>1__state;

		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x17000452")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600260A")]
			[Address(RVA = "0x11CB0B0", Offset = "0x11CB0B0", VA = "0x11CB0B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600260C")]
			[Address(RVA = "0x11CB180", Offset = "0x11CB180", VA = "0x11CB180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x11CA32C", Offset = "0x11CA32C", VA = "0x11CA32C")]
		[DebuggerHidden]
		public <Esperar1SegMostrarMensaje>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x11CAE18", Offset = "0x11CAE18", VA = "0x11CAE18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x11CAE2C", Offset = "0x11CAE2C", VA = "0x11CAE2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x11CB0E0", Offset = "0x11CB0E0", VA = "0x11CB0E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8811D4", Offset = "0x8811D4")]
	private sealed class <Esperar1SegMostrarMensajeCambioGancho>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x17000454")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002610")]
			[Address(RVA = "0x11CB3E4", Offset = "0x11CB3E4", VA = "0x11CB3E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002612")]
			[Address(RVA = "0x11CB4B4", Offset = "0x11CB4B4", VA = "0x11CB4B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x11CA414", Offset = "0x11CA414", VA = "0x11CA414")]
		[DebuggerHidden]
		public <Esperar1SegMostrarMensajeCambioGancho>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x11CB1B0", Offset = "0x11CB1B0", VA = "0x11CB1B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x11CB1C4", Offset = "0x11CB1C4", VA = "0x11CB1C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x11CB414", Offset = "0x11CB414", VA = "0x11CB414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private SalasManager m_SalasManager;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2B54")]
	private GameObject luzTemporal;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool textoReconocido;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject textPickUpGuns;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject pickUpGunsTexto;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D93")]
	public GameObject waitingForPlayersTexto;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public GameObject idRoomTexto;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2B64")]
	public TextMeshProUGUI textoNivel;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool inicializado;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InicioNivel instancia;

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x11C7F88", Offset = "0x11C7F88", VA = "0x11C7F88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x11C8008", Offset = "0x11C8008", VA = "0x11C8008")]
	public static InicioNivel GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x11C8088", Offset = "0x11C8088", VA = "0x11C8088")]
	public GameObject GetTextPickUpGuns()
	{
		return null;
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x11C850C", Offset = "0x11C850C", VA = "0x11C850C")]
	public void SetTextWaitingForPlayers()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x11C8BE8", Offset = "0x11C8BE8", VA = "0x11C8BE8")]
	public void SetTextPickUpGuns()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x11C90E4", Offset = "0x11C90E4", VA = "0x11C90E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A8F90", Offset = "0x8A8F90")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x11C91E8", Offset = "0x11C91E8", VA = "0x11C91E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x11C96E8", Offset = "0x11C96E8", VA = "0x11C96E8")]
	public void IniciarNivel()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x11CA28C", Offset = "0x11CA28C", VA = "0x11CA28C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A9040", Offset = "0x8A9040")]
	private IEnumerator Esperar1SegMostrarMensaje()
	{
		return null;
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x11CA374", Offset = "0x11CA374", VA = "0x11CA374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A90F0", Offset = "0x8A90F0")]
	private IEnumerator Esperar1SegMostrarMensajeCambioGancho()
	{
		return null;
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x11CA45C", Offset = "0x11CA45C", VA = "0x11CA45C")]
	public void ReconocerTextoArmas()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x11CADE8", Offset = "0x11CADE8", VA = "0x11CADE8")]
	public InicioNivel()
	{
	}
}
[Token(Token = "0x20001CE")]
public class NivelCompletado : MonoBehaviour
{
	[Token(Token = "0x20005AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881210", Offset = "0x881210")]
	private sealed class <restar>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private int <>1__state;

		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2B94")]
		private object <>2__current;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NivelCompletado <>4__this;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform esfera;

		[Token(Token = "0x17000456")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002616")]
			[Address(RVA = "0x155881C", Offset = "0x155881C", VA = "0x155881C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000457")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002618")]
			[Address(RVA = "0x15588EC", Offset = "0x15588EC", VA = "0x15588EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x1553954", Offset = "0x1553954", VA = "0x1553954")]
		[DebuggerHidden]
		public <restar>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x1557DAC", Offset = "0x1557DAC", VA = "0x1557DAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x1557DC0", Offset = "0x1557DC0", VA = "0x1557DC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x155884C", Offset = "0x155884C", VA = "0x155884C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88124C", Offset = "0x88124C")]
	private sealed class <TransferirBolasAlOtro>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DB3")]
		private object <>2__current;

		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public float tiempo;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2BA4")]
		public NivelCompletado <>4__this;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool porMuerte;

		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int equipoAAyudar;

		[Token(Token = "0x17000458")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600261C")]
			[Address(RVA = "0x1557CAC", Offset = "0x1557CAC", VA = "0x1557CAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600261E")]
			[Address(RVA = "0x1557D7C", Offset = "0x1557D7C", VA = "0x1557D7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x1553BC4", Offset = "0x1553BC4", VA = "0x1553BC4")]
		[DebuggerHidden]
		public <TransferirBolasAlOtro>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x1557180", Offset = "0x1557180", VA = "0x1557180", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x1557194", Offset = "0x1557194", VA = "0x1557194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x1557CDC", Offset = "0x1557CDC", VA = "0x1557CDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881288", Offset = "0x881288")]
	private sealed class <CorrutinaPasarDeNivel>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DBB")]
		private object <>2__current;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public NivelCompletado <>4__this;

		[Token(Token = "0x1700045A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002622")]
			[Address(RVA = "0x1557080", Offset = "0x1557080", VA = "0x1557080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002624")]
			[Address(RVA = "0x1557150", Offset = "0x1557150", VA = "0x1557150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x155450C", Offset = "0x155450C", VA = "0x155450C")]
		[DebuggerHidden]
		public <CorrutinaPasarDeNivel>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x1554638", Offset = "0x1554638", VA = "0x1554638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x155464C", Offset = "0x155464C", VA = "0x155464C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x15570B0", Offset = "0x15570B0", VA = "0x15570B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA3")]
	public static NivelCompletado instance;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public List<Transform> listaEsferasEquipo1;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2B84")]
	public List<Transform> listaEsferasEquipo2;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool bossVivo;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool yaLasHemosCambiado;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Coroutine pasarNivel;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DAB")]
	[HideInInspector]
	public bool pasandoDeNivel;

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x15532B0", Offset = "0x15532B0", VA = "0x15532B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x15533D0", Offset = "0x15533D0", VA = "0x15533D0")]
	public static NivelCompletado GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x1553450", Offset = "0x1553450", VA = "0x1553450")]
	public void SumarEsfera(Transform esfera, int equipo)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x1553668", Offset = "0x1553668", VA = "0x1553668")]
	public void RestarEsfera(Transform esfera)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x1553870", Offset = "0x1553870", VA = "0x1553870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A91A0", Offset = "0x8A91A0")]
	private IEnumerator restar(Transform esfera)
	{
		return null;
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x155399C", Offset = "0x155399C", VA = "0x155399C")]
	public void PoderAcabarConLasEsferasDelOtroPlayer(int equipoAAyudar, bool porMuerte, float tiempo = 0f)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x1553A7C", Offset = "0x1553A7C", VA = "0x1553A7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A9250", Offset = "0x8A9250")]
	private IEnumerator TransferirBolasAlOtro(int equipoAAyudar, bool porMuerte, float tiempo = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x1553C0C", Offset = "0x1553C0C", VA = "0x1553C0C")]
	public void Desbloquear()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x1553EC4", Offset = "0x1553EC4", VA = "0x1553EC4")]
	public void PasarDeNivel()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x1554450", Offset = "0x1554450", VA = "0x1554450")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A9300", Offset = "0x8A9300")]
	private IEnumerator CorrutinaPasarDeNivel()
	{
		return null;
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x1554554", Offset = "0x1554554", VA = "0x1554554")]
	public NivelCompletado()
	{
	}
}
[Token(Token = "0x20001CF")]
public class PoolObjetos : MonoBehaviour
{
	[Token(Token = "0x20005B2")]
	public enum TipoObjeto
	{
		[Token(Token = "0x4002A8D")]
		Esfera,
		[Token(Token = "0x4002A8E")]
		BalaTorreta,
		[Token(Token = "0x4002A8F")]
		Bala
	}

	[Token(Token = "0x20005B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8812C4", Offset = "0x8812C4")]
	private sealed class <SetParentConRetraso>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DD3")]
		private object <>2__current;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public GameObject objeto;

		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2BE4")]
		public PoolObjetos <>4__this;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int mult;

		[Token(Token = "0x1700045C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002628")]
			[Address(RVA = "0x1420B58", Offset = "0x1420B58", VA = "0x1420B58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600262A")]
			[Address(RVA = "0x1420C28", Offset = "0x1420C28", VA = "0x1420C28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x141F9B8", Offset = "0x141F9B8", VA = "0x141F9B8")]
		[DebuggerHidden]
		public <SetParentConRetraso>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0x142076C", Offset = "0x142076C", VA = "0x142076C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x1420780", Offset = "0x1420780", VA = "0x1420780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x1420B88", Offset = "0x1420B88", VA = "0x1420B88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2BB4")]
	public static PoolObjetos instance;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string[] pathObjetos;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<GameObject> objetosInstanciados;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int cantidad;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC3")]
	private Vector3 posInstancia;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private List<GameObject> balasTorretas;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2BC4")]
	private List<GameObject> balas;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<GameObject> esferas;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int contActualBalaTorreta;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int contActualBala;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DCB")]
	private int contActualEsfera;

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x141DAE4", Offset = "0x141DAE4", VA = "0x141DAE4")]
	public static PoolObjetos GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x141DB64", Offset = "0x141DB64", VA = "0x141DB64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x141DBE4", Offset = "0x141DBE4", VA = "0x141DBE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x141E330", Offset = "0x141E330", VA = "0x141E330")]
	public GameObject Instanciar(TipoObjeto objeto, Vector3 posicion, Quaternion rotacion, Transform parent, int equipo, Bola.TipoEsfera tipoesfera = Bola.TipoEsfera.desconocido, Bola.TipoEscudo tipoEscudo = Bola.TipoEscudo.cont)
	{
		return null;
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x141EC90", Offset = "0x141EC90", VA = "0x141EC90")]
	private void EliminarInmediatamente(GameObject obj, TipoObjeto tipo)
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x141F07C", Offset = "0x141F07C", VA = "0x141F07C")]
	public void Eliminar(GameObject objeto, bool HacerEfectoDesaparecer = false)
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x141F8AC", Offset = "0x141F8AC", VA = "0x141F8AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A93B0", Offset = "0x8A93B0")]
	private IEnumerator SetParentConRetraso(GameObject objeto, int mult)
	{
		return null;
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x141FA00", Offset = "0x141FA00", VA = "0x141FA00")]
	public void EliminarTodosLosObjetos([Optional] GameObject excluir, bool porVictoria = false)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x1420624", Offset = "0x1420624", VA = "0x1420624")]
	public PoolObjetos()
	{
	}
}
[Token(Token = "0x20001D0")]
public class TimeManager : MonoBehaviour
{
	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float TIEMPO_MINIMO;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float tiempoEquipo1;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DDB")]
	private float tiempoEquipo2;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float miTiempo;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2BF4")]
	public float deltaTime;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float fixedDelta;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float timeScale;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float timeDeseado;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DE3")]
	public float velocidadCabeza;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float velocidadManoDerecha;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2C04")]
	public float velocidadManoIzquierda;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float timeDeseadoAnterior;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TimeManager instance;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x88FF9C", Offset = "0x88FF9C")]
	public bool testTiempoNormal;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DEB")]
	public bool testInicioDesactivado;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool jugadorInmortal;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2C14")]
	public bool tiempoRapido;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool timeNormal;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool tiempoMenu;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool tiempoMuerto;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DF3")]
	private float tiempoParado;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int ticksConTiempoNormalForzado;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2C24")]
	private float tiempoParadoInicial;

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x1390E70", Offset = "0x1390E70", VA = "0x1390E70")]
	public static TimeManager GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x1390EF0", Offset = "0x1390EF0", VA = "0x1390EF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x1390FD0", Offset = "0x1390FD0", VA = "0x1390FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x13911B0", Offset = "0x13911B0", VA = "0x13911B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x1393768", Offset = "0x1393768", VA = "0x1393768")]
	public float GetTiempoParado()
	{
		return default(float);
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x1393798", Offset = "0x1393798", VA = "0x1393798")]
	public float GetTiempoMedioGlobal()
	{
		return default(float);
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x1393940", Offset = "0x1393940", VA = "0x1393940")]
	public float GetTiempoDeEquipo(int numeroEquipo)
	{
		return default(float);
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x139113C", Offset = "0x139113C", VA = "0x139113C")]
	public void SetTiempoDeEquipo(float valor, int numeroEquipo)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x1393A68", Offset = "0x1393A68", VA = "0x1393A68")]
	public void PonerTiempoLentoPorXSegundos(float duracion)
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x1393AA0", Offset = "0x1393AA0", VA = "0x1393AA0")]
	public void MakeTimeNormal(bool condicion)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x1393B0C", Offset = "0x1393B0C", VA = "0x1393B0C")]
	public void ActivarDesactivarTiempoMuerto(bool estado)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x1393B58", Offset = "0x1393B58", VA = "0x1393B58")]
	public TimeManager()
	{
	}
}
[Token(Token = "0x20001D1")]
public class ControladorVR : MonoBehaviour
{
	[Token(Token = "0x20005B4")]
	public enum TipoControl
	{
		[Token(Token = "0x4002A96")]
		ControlDerecha,
		[Token(Token = "0x4002A97")]
		ControlIzquierda,
		[Token(Token = "0x4002A98")]
		Cabeza,
		[Token(Token = "0x4002A99")]
		Tracker
	}

	[Token(Token = "0x20005B5")]
	public enum TipoBoton
	{
		[Token(Token = "0x4002A9B")]
		Pausa,
		[Token(Token = "0x4002A9C")]
		Recolocar,
		[Token(Token = "0x4002A9D")]
		CambiarBalaGancho,
		[Token(Token = "0x4002A9E")]
		Atras
	}

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 localPositionControlDerecha;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 localPositionControlIzquierda;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 localPositionCabeza;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DFB")]
	private Vector3 localRotationControlDerecha;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 localRotationControlIzquierda;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2C34")]
	private Vector3 localRotationCabeza;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float triggerDerecho;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float triggerIzquierdo;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float GripDerecho;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E03")]
	private float GripIzquierdo;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool botonPausa;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2C44")]
	private bool botonRecolocar;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool botonCambiarPistolaGanchoDer;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool botonCambiarPistolaGanchoIzq;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool botonMenuDer;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0B")]
	private bool botonMenuIzq;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool botonAtras;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2C54")]
	private Vector2 stickDerecho;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector2 stickIzquierdo;

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x1342D84", Offset = "0x1342D84", VA = "0x1342D84")]
	public Vector3 GetLocalPosition(TipoControl tipo)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x1342EE4", Offset = "0x1342EE4", VA = "0x1342EE4")]
	public Vector3 GetLocalRotation(TipoControl tipo)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x1343044", Offset = "0x1343044", VA = "0x1343044")]
	public float GetTrigger(TipoControl tipo)
	{
		return default(float);
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x13430B0", Offset = "0x13430B0", VA = "0x13430B0")]
	public float GetGrip(TipoControl tipo)
	{
		return default(float);
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x134311C", Offset = "0x134311C", VA = "0x134311C")]
	public bool GetBoton(TipoBoton tipo, bool derecha = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x13432CC", Offset = "0x13432CC", VA = "0x13432CC")]
	public Vector2 GetStick(TipoControl tipo)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x1343338", Offset = "0x1343338", VA = "0x1343338")]
	protected void SetLocalPosition(TipoControl tipo, Vector3 value)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x1343464", Offset = "0x1343464", VA = "0x1343464")]
	protected void SetLocalRotation(TipoControl tipo, Vector3 value)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x1343590", Offset = "0x1343590", VA = "0x1343590")]
	protected void SetTrigger(TipoControl tipo, float value)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x13435FC", Offset = "0x13435FC", VA = "0x13435FC")]
	protected void SetGrip(TipoControl tipo, float value)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x1343668", Offset = "0x1343668", VA = "0x1343668")]
	protected void SetBoton(TipoBoton tipo, bool value, bool derecha = true)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x13437E8", Offset = "0x13437E8", VA = "0x13437E8")]
	protected void SetStick(TipoControl tipo, Vector2 value)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x1343950", Offset = "0x1343950", VA = "0x1343950")]
	public ControladorVR()
	{
	}
}
[Token(Token = "0x20001D2")]
public class ControladorVRNolo : ControladorVR
{
	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2C74")]
	private int indexDerecha;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int indexIzquierda;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool mandoDerechoCargado;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool mandoIzquierdoCargado;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E23")]
	private MandoNolo mandoDerecho;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private MandoNolo mandoIzquierdo;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2C84")]
	public bool invertirMandos;

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x1343BF4", Offset = "0x1343BF4", VA = "0x1343BF4")]
	public void Vibracion(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x1343C14", Offset = "0x1343C14", VA = "0x1343C14")]
	public ControladorVRNolo()
	{
	}
}
[Token(Token = "0x20001D3")]
public class MandoNolo
{
	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 localPosition;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Quaternion localrotation;

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x1308FA4", Offset = "0x1308FA4", VA = "0x1308FA4")]
	public void LeerBotones()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x1308FB8", Offset = "0x1308FB8", VA = "0x1308FB8")]
	public void Vibra(int fuerza)
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x1308FD0", Offset = "0x1308FD0", VA = "0x1308FD0")]
	public MandoNolo()
	{
	}
}
[Token(Token = "0x20001D4")]
public class ControladorVROculus : ControladorVR
{
	[Token(Token = "0x20005B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881300", Offset = "0x881300")]
	private sealed class <WaitEnable>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControladorVROculus <>4__this;

		[Token(Token = "0x1700045E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600262E")]
			[Address(RVA = "0x134AF7C", Offset = "0x134AF7C", VA = "0x134AF7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002630")]
			[Address(RVA = "0x134B04C", Offset = "0x134B04C", VA = "0x134B04C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x1343D48", Offset = "0x1343D48", VA = "0x1343D48")]
		[DebuggerHidden]
		public <WaitEnable>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x134A9BC", Offset = "0x134A9BC", VA = "0x134A9BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x134A9D0", Offset = "0x134A9D0", VA = "0x134A9D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x134AFAC", Offset = "0x134AFAC", VA = "0x134AFAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88133C", Offset = "0x88133C")]
	private sealed class <CorutineEsperaParaRecolocar>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E3B")]
		private int <>1__state;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2CB4")]
		public bool dosFrames;

		[Token(Token = "0x17000460")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002634")]
			[Address(RVA = "0x134A8BC", Offset = "0x134A8BC", VA = "0x134A8BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000461")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002636")]
			[Address(RVA = "0x134A98C", Offset = "0x134A98C", VA = "0x134A98C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x134A434", Offset = "0x134A434", VA = "0x134A434")]
		[DebuggerHidden]
		public <CorutineEsperaParaRecolocar>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x134A680", Offset = "0x134A680", VA = "0x134A680", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x134A694", Offset = "0x134A694", VA = "0x134A694", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x134A8EC", Offset = "0x134A8EC", VA = "0x134A8EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool mandoDerechoCargado;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E2B")]
	private bool mandoIzquierdoCargado;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private MandoOculus mandoDerecho;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2C94")]
	private MandoOculus mandoIzquierdo;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MandoOculus tracker;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isHandleHMDUnmounted;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool isDashOpen;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E33")]
	private Transform oculusOffsetDer;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Transform oculusOffsetIzq;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2CA4")]
	private int mano;

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x1343C44", Offset = "0x1343C44", VA = "0x1343C44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x1343C8C", Offset = "0x1343C8C", VA = "0x1343C8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A9460", Offset = "0x8A9460")]
	private IEnumerator WaitEnable()
	{
		return null;
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x1343D90", Offset = "0x1343D90", VA = "0x1343D90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x134415C", Offset = "0x134415C", VA = "0x134415C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x13441F8", Offset = "0x13441F8", VA = "0x13441F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x1344724", Offset = "0x1344724", VA = "0x1344724")]
	public void ComprarRift()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x13447FC", Offset = "0x13447FC", VA = "0x13447FC")]
	public void ComprarQuest()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x13448D4", Offset = "0x13448D4", VA = "0x13448D4")]
	private bool CheckDashOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x1344A0C", Offset = "0x1344A0C", VA = "0x1344A0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x134751C", Offset = "0x134751C", VA = "0x134751C")]
	private void HandleHMDUnmounted()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x1347360", Offset = "0x1347360", VA = "0x1347360")]
	private void HandleHMDMounted()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x13479F4", Offset = "0x13479F4", VA = "0x13479F4")]
	private void DashOpened()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x1347F20", Offset = "0x1347F20", VA = "0x1347F20")]
	private void DashClosed()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x1348B34", Offset = "0x1348B34", VA = "0x1348B34")]
	private void ApagarManos()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x13496E0", Offset = "0x13496E0", VA = "0x13496E0")]
	private void EncenderManos()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x134A2D4", Offset = "0x134A2D4", VA = "0x134A2D4")]
	private void EsperaParaRecolocar()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x134A358", Offset = "0x134A358", VA = "0x134A358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A9510", Offset = "0x8A9510")]
	private IEnumerator CorutineEsperaParaRecolocar(bool dosFrames)
	{
		return null;
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x134A47C", Offset = "0x134A47C", VA = "0x134A47C")]
	public void Vibracion(float f, float p, bool mano)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x13480D8", Offset = "0x13480D8", VA = "0x13480D8")]
	public bool ManoCambiada()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x13482B8", Offset = "0x13482B8", VA = "0x13482B8")]
	public bool IsRightie()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x13489F8", Offset = "0x13489F8", VA = "0x13489F8")]
	public bool IsLeftie()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x134A63C", Offset = "0x134A63C", VA = "0x134A63C")]
	public ControladorVROculus()
	{
	}
}
[Token(Token = "0x20001D5")]
public class MandoOculus
{
	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private XRNode index;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float trigger;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerPress;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E43")]
	public bool triggerUp;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool triggerDown;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2CC4")]
	public float grip;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool gripPress;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool gripPressDown;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool gripPressUp;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4B")]
	public bool botonAplicationPress;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool botonAplicationPressDown;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2CD4")]
	public bool botonAplicationPressUp;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool touchPress;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool touchPressUp;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool touchPressDown;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E53")]
	public Vector2 stick;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool botonAXOculusPress;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2CE4")]
	public bool botonAXOculusPressUp;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAXOculusPressDown;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonBYOculusPress;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonBYOculusPressUp;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E5B")]
	public bool botonBYOculusPressDown;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool botonMenu;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2CF4")]
	public bool atras;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 velocidadMando;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject mando_Go;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool algunBotonTocado;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E63")]
	private bool pulsandoTrigger;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool pulsandoGrip;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2D04")]
	private bool pulsandoAX;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool pulsandoBY;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool pulsandoMenu;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 localPosition;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E6B")]
	public Vector3 localrotation;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Vector3 oldLocalPosition;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2D14")]
	private Vector3 oldLocalrotation;

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x1309138", Offset = "0x1309138", VA = "0x1309138")]
	public XRNode GetIndex()
	{
		return default(XRNode);
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x1309168", Offset = "0x1309168", VA = "0x1309168")]
	public void SetIndex(XRNode newIndex)
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x13091A0", Offset = "0x13091A0", VA = "0x13091A0")]
	public MandoOculus(XRNode newIndex, GameObject mando_Go)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x1309360", Offset = "0x1309360", VA = "0x1309360")]
	public MandoOculus(XRNode newIndex)
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x1309528", Offset = "0x1309528", VA = "0x1309528")]
	public void LeerBotones()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x130B0E4", Offset = "0x130B0E4", VA = "0x130B0E4")]
	public void SinBotones()
	{
	}
}
[Token(Token = "0x20001D6")]
public class ControladorVRPS4 : MonoBehaviour
{
	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x134B07C", Offset = "0x134B07C", VA = "0x134B07C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x134B090", Offset = "0x134B090", VA = "0x134B090")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x134B0A4", Offset = "0x134B0A4", VA = "0x134B0A4")]
	public ControladorVRPS4()
	{
	}
}
[Token(Token = "0x20001D7")]
public class ControladorVRPico : ControladorVR
{
	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int indexDerecha;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int indexIzquierda;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool mandoDerechoCargado;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E73")]
	private bool mandoIzquierdoCargado;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private MandoPico mandoDerecho;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2D24")]
	private MandoPico mandoIzquierdo;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Pvr_UnitySDKManager unitySDKManagerPico;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Pvr_UnitySDKHeadTrack unitySDKHeadTrack;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Pvr_UnitySDKEyeManager unitySDKEyeManager;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E7B")]
	private GameObject fps_Go;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GameObject leftEye_Go;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2D34")]
	private GameObject rightEye_Go;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject bothEyes_Go;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject event_Go;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject controllerManager_Go;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E83")]
	public bool invertirMandos;

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x134B0D4", Offset = "0x134B0D4", VA = "0x134B0D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x134C000", Offset = "0x134C000", VA = "0x134C000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x134C014", Offset = "0x134C014", VA = "0x134C014")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x134CC88", Offset = "0x134CC88", VA = "0x134CC88")]
	public void Vibracion(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x134CCE4", Offset = "0x134CCE4", VA = "0x134CCE4")]
	public ControladorVRPico()
	{
	}
}
[Token(Token = "0x20001D8")]
public class MandoPico
{
	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public int index;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2D44")]
	public float trigger;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerPress;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerUp;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerDown;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8B")]
	public float grip;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool gripPress;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2D54")]
	public bool gripPressDown;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool gripPressUp;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAplicationPress;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAplicationPressDown;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E93")]
	public bool botonAplicationPressUp;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool touchPress;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2D64")]
	public bool touchPressUp;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool touchPressDown;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 stick;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAXOculusPress;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9B")]
	public bool botonAXOculusPressUp;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool botonAXOculusPressDown;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2D74")]
	public bool botonBYOculusPress;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonBYOculusPressUp;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonBYOculusPressDown;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonMenu;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EA3")]
	public Vector3 velocidadMando;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool algunBotonTocado;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2D84")]
	public Transform mando;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool pulsandoTrigger;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool pulsandoGrip;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool pulsandoAX;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EAB")]
	private bool pulsandoBY;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool pulsandoMenu;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2D94")]
	public Vector3 localPosition;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Quaternion localrotation;

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x130B8E8", Offset = "0x130B8E8", VA = "0x130B8E8")]
	public MandoPico(Transform mando, int index)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x130BA80", Offset = "0x130BA80", VA = "0x130BA80")]
	public void LeerBotones()
	{
	}
}
[Token(Token = "0x20001D9")]
public class ControladorVRSteam : ControladorVR
{
	[Token(Token = "0x20005B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881378", Offset = "0x881378")]
	private sealed class <EsperarMandos>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2DD4")]
		private int <>1__state;

		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControladorVRSteam <>4__this;

		[Token(Token = "0x17000462")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600263A")]
			[Address(RVA = "0x1350E3C", Offset = "0x1350E3C", VA = "0x1350E3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000463")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600263C")]
			[Address(RVA = "0x1350F0C", Offset = "0x1350F0C", VA = "0x1350F0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x134FF3C", Offset = "0x134FF3C", VA = "0x134FF3C")]
		[DebuggerHidden]
		public <EsperarMandos>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0x135002C", Offset = "0x135002C", VA = "0x135002C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x1350040", Offset = "0x1350040", VA = "0x1350040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x1350E6C", Offset = "0x1350E6C", VA = "0x1350E6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MandoVive mandoDerecho;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private MandoVive mandoIzquierdo;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EB3")]
	private MandoVive tracker;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool mandoTrackerCargado;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2DA4")]
	private bool mandoDerechoCargado;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool mandoIzquierdoCargado;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool hayTracker;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private GameObject controladorDerecho_GO;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EBB")]
	private GameObject controladorIzquierdo_GO;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private GameObject controladorTracker_GO;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2DB4")]
	private SteamVR_TrackedObject camera_TrackedObject;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SteamVR_TrackedObject controladorDerecho_TrackedObject;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SteamVR_TrackedObject controladorIzquierdo_TrackedObject;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SteamVR_TrackedObject controladorTracker_TrackedObject;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC3")]
	public SteamVR_TrackedController controladorDerecho_TrackedController;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public SteamVR_TrackedController controladorIzquierdo_TrackedController;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2DC4")]
	public SteamVR_TrackedController controladorTracker_TrackedController;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SteamVR_ControllerManager controllerManager;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int indexDerecha;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int indexIzquierda;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1ECB")]
	private int indexTracker;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Coroutine EsperarMandosCor;

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x134CD14", Offset = "0x134CD14", VA = "0x134CD14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x134D50C", Offset = "0x134D50C", VA = "0x134D50C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x134FDB0", Offset = "0x134FDB0", VA = "0x134FDB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x134FEC0", Offset = "0x134FEC0", VA = "0x134FEC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x134D450", Offset = "0x134D450", VA = "0x134D450")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A95C0", Offset = "0x8A95C0")]
	private IEnumerator EsperarMandos()
	{
		return null;
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x134FF84", Offset = "0x134FF84", VA = "0x134FF84")]
	public void Vibracion(int index, ushort potencia)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x134FFFC", Offset = "0x134FFFC", VA = "0x134FFFC")]
	public ControladorVRSteam()
	{
	}
}
[Token(Token = "0x20001DA")]
public class MandoVive
{
	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int index;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1ED3")]
	public ControladorVR.TipoControl tipo;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float trigger;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2DE4")]
	public bool triggerPress;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerUp;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool triggerDown;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool gripPress;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EDB")]
	public bool gripPressDown;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool gripPressUp;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2DF4")]
	public bool botonAppPress;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAppPressDown;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonAppPressUp;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool touchPress;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EE3")]
	public bool touchPressUp;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool touchPressDown;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2E04")]
	public Vector2 posicionTouchTocado;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 stick;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonDownAXPress;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonDownAXPressUp;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EEB")]
	public bool botonDownAXPressDown;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool botonUpBYPress;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2E14")]
	public bool botonUpBYPressUp;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool botonUpBYPressDown;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 velocidadMando;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool algunBotonTocado;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EF3")]
	private string inputHorDerStr;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private string inputHorIzqStr;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2E24")]
	private string inputVerDer;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string inputVerIzq;

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x130C6E4", Offset = "0x130C6E4", VA = "0x130C6E4")]
	public MandoVive(ControladorVR.TipoControl tipo, int index)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x130C7F8", Offset = "0x130C7F8", VA = "0x130C7F8")]
	public void LeerBotones(bool derecho)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x130CA28", Offset = "0x130CA28", VA = "0x130CA28")]
	public void LeerBotonesComunes(bool derecho)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x130D8C0", Offset = "0x130D8C0", VA = "0x130D8C0")]
	public void LeerBotonesWMR(bool derecho)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x130D2C4", Offset = "0x130D2C4", VA = "0x130D2C4")]
	public void LeerBotonesIndex(bool derecho)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x130DC2C", Offset = "0x130DC2C", VA = "0x130DC2C")]
	public void LeerBotonesOculus(bool derecho)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x130CF58", Offset = "0x130CF58", VA = "0x130CF58")]
	public void LeerBotonesCosmos(bool derecho)
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x130D554", Offset = "0x130D554", VA = "0x130D554")]
	public void LeerBotonesVive(bool derecho)
	{
	}
}
[Token(Token = "0x20001DB")]
public class limpiarCamaraSegunCalidad : MonoBehaviour
{
	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x14EF334", Offset = "0x14EF334", VA = "0x14EF334")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x14EF7F4", Offset = "0x14EF7F4", VA = "0x14EF7F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x14EF808", Offset = "0x14EF808", VA = "0x14EF808")]
	public limpiarCamaraSegunCalidad()
	{
	}
}
[Token(Token = "0x20001DC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87BCB0", Offset = "0x87BCB0")]
public class EnableCameraDepthInForward : MonoBehaviour
{
	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x12D78F8", Offset = "0x12D78F8", VA = "0x12D78F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x12D7928", Offset = "0x12D7928", VA = "0x12D7928")]
	private void Set()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x12D7A10", Offset = "0x12D7A10", VA = "0x12D7A10")]
	public EnableCameraDepthInForward()
	{
	}
}
[Token(Token = "0x20001DD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87BD60", Offset = "0x87BD60")]
public class SoftNormalsToVertexColor : MonoBehaviour
{
	[Token(Token = "0x20005B9")]
	public enum Method
	{
		[Token(Token = "0x4002AA9")]
		Simple,
		[Token(Token = "0x4002AAA")]
		AngularDeviation
	}

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Method method;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool generateOnAwake;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EFB")]
	public bool generateNow;

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x120BE94", Offset = "0x120BE94", VA = "0x120BE94")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x120C300", Offset = "0x120C300", VA = "0x120C300")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x120BEF8", Offset = "0x120BEF8", VA = "0x120BEF8")]
	private void TryGenerate()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x120C354", Offset = "0x120C354", VA = "0x120C354")]
	private void Generate(Mesh m)
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x120D6F0", Offset = "0x120D6F0", VA = "0x120D6F0")]
	public SoftNormalsToVertexColor()
	{
	}
}
[Token(Token = "0x20001DE")]
public class CargarLeaderboardsSteam : MonoBehaviour
{
	[Token(Token = "0x20005BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8813B4", Offset = "0x8813B4")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F03")]
		private object <>2__current;

		[Token(Token = "0x4002AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public CargarLeaderboardsSteam <>4__this;

		[Token(Token = "0x17000464")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002640")]
			[Address(RVA = "0x14D6244", Offset = "0x14D6244", VA = "0x14D6244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000465")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002642")]
			[Address(RVA = "0x14D6314", Offset = "0x14D6314", VA = "0x14D6314", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x14D58CC", Offset = "0x14D58CC", VA = "0x14D58CC")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x14D5DBC", Offset = "0x14D5DBC", VA = "0x14D5DBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x14D5DD0", Offset = "0x14D5DD0", VA = "0x14D5DD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x14D6274", Offset = "0x14D6274", VA = "0x14D6274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string[] mundos;

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x14D5810", Offset = "0x14D5810", VA = "0x14D5810")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8A9670", Offset = "0x8A9670")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x14D5914", Offset = "0x14D5914", VA = "0x14D5914")]
	public CargarLeaderboardsSteam()
	{
	}
}
[Token(Token = "0x20001DF")]
public class IGSteamManager : LogrosRecords
{
	[Token(Token = "0x20005BB")]
	private struct Operacion
	{
		[Token(Token = "0x4002AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TipoOperacion tipoOperacion;

		[Token(Token = "0x4002AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TipoDatos tipoDatos;

		[Token(Token = "0x4002AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OrdenTabla orden;

		[Token(Token = "0x4002AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EFB")]
		public int record;

		[Token(Token = "0x4002AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public string tabla;

		[Token(Token = "0x4002AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2E44")]
		public int numeroResultadosQueQuiero;
	}

	[Token(Token = "0x20005BC")]
	private enum TipoOperacion
	{
		[Token(Token = "0x4002AB5")]
		buscarTabla,
		[Token(Token = "0x4002AB6")]
		buscarCrearTabla,
		[Token(Token = "0x4002AB7")]
		obtenerResultados,
		[Token(Token = "0x4002AB8")]
		subirRecord,
		[Token(Token = "0x4002AB9")]
		obtenerUserStats,
		[Token(Token = "0x4002ABA")]
		GrabarUserStats
	}

	[Token(Token = "0x20005BD")]
	public struct ResultadoSteam
	{
		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string usuario;

		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int record;

		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0B")]
		public int posicion;
	}

	[Token(Token = "0x20005BE")]
	public enum TipoAvatar
	{
		[Token(Token = "0x4002ABF")]
		peque,
		[Token(Token = "0x4002AC0")]
		medio,
		[Token(Token = "0x4002AC1")]
		grande
	}

	[Token(Token = "0x20005BF")]
	public enum TipoDatos
	{
		[Token(Token = "0x4002AC3")]
		top,
		[Token(Token = "0x4002AC4")]
		alrededorMio
	}

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2E44")]
	private List<Operacion> operacionesPendientes;

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x11C7BA8", Offset = "0x11C7BA8", VA = "0x11C7BA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x11C7D38", Offset = "0x11C7D38", VA = "0x11C7D38", Slot = "7")]
	public override void GuardarLogros()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x11C7D4C", Offset = "0x11C7D4C", VA = "0x11C7D4C", Slot = "8")]
	public override void InicializarLogros()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x11C7D60", Offset = "0x11C7D60", VA = "0x11C7D60", Slot = "9")]
	public override void InicializarTablas(string[] tablas)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x11C7D78", Offset = "0x11C7D78", VA = "0x11C7D78", Slot = "10")]
	public override void InicializarTablas(List<InfoTabla> tablas)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x11C7D90", Offset = "0x11C7D90", VA = "0x11C7D90", Slot = "11")]
	public override void ObtenerResultadosAlrededorMioConTop(string tabla, int resultadosQueQuiero, bool esEvento, long record = -1L)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x11C7DBC", Offset = "0x11C7DBC", VA = "0x11C7DBC", Slot = "12")]
	public override void SubirRecord(string tabla, int record)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x11C7DD8", Offset = "0x11C7DD8", VA = "0x11C7DD8", Slot = "13")]
	public override void MarcarLogroCompletado(string idLogro)
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x11C7DF0", Offset = "0x11C7DF0", VA = "0x11C7DF0", Slot = "16")]
	public override void ComprobarYDarLogroPlatino()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x11C7E04", Offset = "0x11C7E04", VA = "0x11C7E04", Slot = "15")]
	public override void MostrarTienda()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x11C7E18", Offset = "0x11C7E18", VA = "0x11C7E18", Slot = "14")]
	public override string DameMiNombre()
	{
		return null;
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x11C7E8C", Offset = "0x11C7E8C", VA = "0x11C7E8C")]
	public IGSteamManager()
	{
	}
}
[Token(Token = "0x20001E0")]
public struct ClickedEventArgs
{
	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2E74")]
	public uint controllerIndex;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint flags;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float padX;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float padY;
}
[Token(Token = "0x20001E1")]
public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);
[Token(Token = "0x20001E2")]
public class SteamVR_TrackedController : MonoBehaviour
{
	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F2B")]
	public uint controllerIndex;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public VRControllerState_t controllerState;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2E94")]
	public bool triggerPressed;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool steamPressed;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool menuPressed;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool padPressed;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F33")]
	public bool padTouched;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool gripped;

	[Token(Token = "0x14000035")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x17E5190", Offset = "0x17E5190", VA = "0x17E5190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9720", Offset = "0x8A9720")]
		add
		{
		}
		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x17E52DC", Offset = "0x17E52DC", VA = "0x17E52DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A975C", Offset = "0x8A975C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000036")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x17E5428", Offset = "0x17E5428", VA = "0x17E5428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9798", Offset = "0x8A9798")]
		add
		{
		}
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x17E5574", Offset = "0x17E5574", VA = "0x17E5574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A97D4", Offset = "0x8A97D4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000037")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x17E56C0", Offset = "0x17E56C0", VA = "0x17E56C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9810", Offset = "0x8A9810")]
		add
		{
		}
		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x17E580C", Offset = "0x17E580C", VA = "0x17E580C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A984C", Offset = "0x8A984C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000038")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x17E5958", Offset = "0x17E5958", VA = "0x17E5958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9888", Offset = "0x8A9888")]
		add
		{
		}
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x17E5AA4", Offset = "0x17E5AA4", VA = "0x17E5AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A98C4", Offset = "0x8A98C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000039")]
	public event ClickedEventHandler SteamClicked
	{
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x17E5BF0", Offset = "0x17E5BF0", VA = "0x17E5BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9900", Offset = "0x8A9900")]
		add
		{
		}
		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x17E5D3C", Offset = "0x17E5D3C", VA = "0x17E5D3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A993C", Offset = "0x8A993C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003A")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x17E5E88", Offset = "0x17E5E88", VA = "0x17E5E88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9978", Offset = "0x8A9978")]
		add
		{
		}
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x17E5FD4", Offset = "0x17E5FD4", VA = "0x17E5FD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A99B4", Offset = "0x8A99B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003B")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x17E6120", Offset = "0x17E6120", VA = "0x17E6120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A99F0", Offset = "0x8A99F0")]
		add
		{
		}
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x17E626C", Offset = "0x17E626C", VA = "0x17E626C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9A2C", Offset = "0x8A9A2C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003C")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x17E63B8", Offset = "0x17E63B8", VA = "0x17E63B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9A68", Offset = "0x8A9A68")]
		add
		{
		}
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x17E6504", Offset = "0x17E6504", VA = "0x17E6504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9AA4", Offset = "0x8A9AA4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003D")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x17E6650", Offset = "0x17E6650", VA = "0x17E6650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9AE0", Offset = "0x8A9AE0")]
		add
		{
		}
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x17E679C", Offset = "0x17E679C", VA = "0x17E679C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9B1C", Offset = "0x8A9B1C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003E")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x17E68E8", Offset = "0x17E68E8", VA = "0x17E68E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9B58", Offset = "0x8A9B58")]
		add
		{
		}
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x17E6A34", Offset = "0x17E6A34", VA = "0x17E6A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9B94", Offset = "0x8A9B94")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003F")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x17E6B80", Offset = "0x17E6B80", VA = "0x17E6B80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9BD0", Offset = "0x8A9BD0")]
		add
		{
		}
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x17E6CCC", Offset = "0x17E6CCC", VA = "0x17E6CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9C0C", Offset = "0x8A9C0C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x17E6E18", Offset = "0x17E6E18", VA = "0x17E6E18", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x17E70E0", Offset = "0x17E70E0", VA = "0x17E70E0")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x17E7118", Offset = "0x17E7118", VA = "0x17E7118", Slot = "5")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x17E7204", Offset = "0x17E7204", VA = "0x17E7204", Slot = "6")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x17E72F0", Offset = "0x17E72F0", VA = "0x17E72F0", Slot = "7")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x17E73DC", Offset = "0x17E73DC", VA = "0x17E73DC", Slot = "8")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x17E74C8", Offset = "0x17E74C8", VA = "0x17E74C8", Slot = "9")]
	public virtual void OnSteamClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x17E75B4", Offset = "0x17E75B4", VA = "0x17E75B4", Slot = "10")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x17E76A0", Offset = "0x17E76A0", VA = "0x17E76A0", Slot = "11")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x17E778C", Offset = "0x17E778C", VA = "0x17E778C", Slot = "12")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x17E7878", Offset = "0x17E7878", VA = "0x17E7878", Slot = "13")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x17E7964", Offset = "0x17E7964", VA = "0x17E7964", Slot = "14")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x17E7A50", Offset = "0x17E7A50", VA = "0x17E7A50", Slot = "15")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x17E7B3C", Offset = "0x17E7B3C", VA = "0x17E7B3C", Slot = "16")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x17E911C", Offset = "0x17E911C", VA = "0x17E911C")]
	public SteamVR_TrackedController()
	{
	}
}
[Token(Token = "0x20001E3")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static bool _enabled;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2EC4")]
	private static SteamVR _instance;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890274", Offset = "0x890274")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8902B0", Offset = "0x8902B0")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8902EC", Offset = "0x8902EC")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890328", Offset = "0x890328")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890364", Offset = "0x890364")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2ED4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8903A0", Offset = "0x8903A0")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool[] connected;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8903DC", Offset = "0x8903DC")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890418", Offset = "0x890418")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F53")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890454", Offset = "0x890454")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890490", Offset = "0x890490")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2EE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8904CC", Offset = "0x8904CC")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890508", Offset = "0x890508")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890544", Offset = "0x890544")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ETextureType textureType;

	[Token(Token = "0x17000095")]
	public static bool active
	{
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x120E1B8", Offset = "0x120E1B8", VA = "0x120E1B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000096")]
	public static bool enabled
	{
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x120E2F8", Offset = "0x120E2F8", VA = "0x120E2F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x120E498", Offset = "0x120E498", VA = "0x120E498")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public static SteamVR instance
	{
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x120E7DC", Offset = "0x120E7DC", VA = "0x120E7DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x120F1F4", Offset = "0x120F1F4", VA = "0x120F1F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000099")]
	public CVRSystem hmd
	{
		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x12107A0", Offset = "0x12107A0", VA = "0x12107A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9C48", Offset = "0x8A9C48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x12107D0", Offset = "0x12107D0", VA = "0x12107D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9C84", Offset = "0x8A9C84")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x1210808", Offset = "0x1210808", VA = "0x1210808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9CC0", Offset = "0x8A9CC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x1210838", Offset = "0x1210838", VA = "0x1210838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9CFC", Offset = "0x8A9CFC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public CVROverlay overlay
	{
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x1210870", Offset = "0x1210870", VA = "0x1210870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9D38", Offset = "0x8A9D38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x12108A0", Offset = "0x12108A0", VA = "0x12108A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9D74", Offset = "0x8A9D74")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public static bool initializing
	{
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x12108D8", Offset = "0x12108D8", VA = "0x12108D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9DB0", Offset = "0x8A9DB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x12109D4", Offset = "0x12109D4", VA = "0x12109D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9DEC", Offset = "0x8A9DEC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public static bool calibrating
	{
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x1210AD8", Offset = "0x1210AD8", VA = "0x1210AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9E28", Offset = "0x8A9E28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1210BD4", Offset = "0x1210BD4", VA = "0x1210BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9E64", Offset = "0x8A9E64")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public static bool outOfRange
	{
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x1210CD8", Offset = "0x1210CD8", VA = "0x1210CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9EA0", Offset = "0x8A9EA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x1210DD4", Offset = "0x1210DD4", VA = "0x1210DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9EDC", Offset = "0x8A9EDC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public float sceneWidth
	{
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x1210ED8", Offset = "0x1210ED8", VA = "0x1210ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F18", Offset = "0x8A9F18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1210F08", Offset = "0x1210F08", VA = "0x1210F08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F54", Offset = "0x8A9F54")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public float sceneHeight
	{
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1210F40", Offset = "0x1210F40", VA = "0x1210F40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9F90", Offset = "0x8A9F90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1210F70", Offset = "0x1210F70", VA = "0x1210F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8A9FCC", Offset = "0x8A9FCC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public float aspect
	{
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1210FA8", Offset = "0x1210FA8", VA = "0x1210FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA008", Offset = "0x8AA008")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1210FD8", Offset = "0x1210FD8", VA = "0x1210FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA044", Offset = "0x8AA044")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public float fieldOfView
	{
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1211010", Offset = "0x1211010", VA = "0x1211010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA080", Offset = "0x8AA080")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1211040", Offset = "0x1211040", VA = "0x1211040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA0BC", Offset = "0x8AA0BC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1211078", Offset = "0x1211078", VA = "0x1211078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA0F8", Offset = "0x8AA0F8")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x12110B0", Offset = "0x12110B0", VA = "0x12110B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA134", Offset = "0x8AA134")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1211180", Offset = "0x1211180", VA = "0x1211180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA170", Offset = "0x8AA170")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x12111B0", Offset = "0x12111B0", VA = "0x12111B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA1AC", Offset = "0x8AA1AC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x12111E8", Offset = "0x12111E8", VA = "0x12111E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA1E8", Offset = "0x8AA1E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1211218", Offset = "0x1211218", VA = "0x1211218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA224", Offset = "0x8AA224")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1211250", Offset = "0x1211250", VA = "0x1211250")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A7")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1211520", Offset = "0x1211520", VA = "0x1211520")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A8")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1211564", Offset = "0x1211564", VA = "0x1211564")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A9")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x12115A8", Offset = "0x12115A8", VA = "0x12115A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AA")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1211674", Offset = "0x1211674", VA = "0x1211674")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x120EB4C", Offset = "0x120EB4C", VA = "0x120EB4C")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x120F30C", Offset = "0x120F30C", VA = "0x120F30C")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x12116B8", Offset = "0x12116B8", VA = "0x12116B8")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x1211294", Offset = "0x1211294", VA = "0x1211294")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x12115EC", Offset = "0x12115EC", VA = "0x12115EC")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x12118B0", Offset = "0x12118B0", VA = "0x12118B0")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x12119B8", Offset = "0x12119B8", VA = "0x12119B8")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x1211AC0", Offset = "0x1211AC0", VA = "0x1211AC0")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x1211BC8", Offset = "0x1211BC8", VA = "0x1211BC8")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x1211CFC", Offset = "0x1211CFC", VA = "0x1211CFC")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x120F6BC", Offset = "0x120F6BC", VA = "0x120F6BC")]
	private SteamVR()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x1212844", Offset = "0x1212844", VA = "0x1212844", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x1212D8C", Offset = "0x1212D8C", VA = "0x1212D8C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x1212990", Offset = "0x1212990", VA = "0x1212990")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x120E640", Offset = "0x120E640", VA = "0x120E640")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x20001E4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87BE10", Offset = "0x87BE10")]
public class SteamVR_Camera : MonoBehaviour
{
	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F5B")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8905BC", Offset = "0x8905BC")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2EF4")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool wireframe;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Collections.Hashtable values;

	[Token(Token = "0x4001107")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x4001108")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x4001109")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x400110A")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x170000AB")]
	public Transform head
	{
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1212F4C", Offset = "0x1212F4C", VA = "0x1212F4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AC")]
	public Transform offset
	{
		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1212F7C", Offset = "0x1212F7C", VA = "0x1212F7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AD")]
	public Transform origin
	{
		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1212FAC", Offset = "0x1212FAC", VA = "0x1212FAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AE")]
	public Camera camera
	{
		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1212FFC", Offset = "0x1212FFC", VA = "0x1212FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA260", Offset = "0x8AA260")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x121302C", Offset = "0x121302C", VA = "0x121302C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA29C", Offset = "0x8AA29C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public Transform ears
	{
		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1213064", Offset = "0x1213064", VA = "0x1213064")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B0")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x121316C", Offset = "0x121316C", VA = "0x121316C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x121319C", Offset = "0x121319C", VA = "0x121319C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public string baseName
	{
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1215460", Offset = "0x1215460", VA = "0x1215460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x1213094", Offset = "0x1213094", VA = "0x1213094")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x12131D4", Offset = "0x12131D4", VA = "0x12131D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x1213204", Offset = "0x1213204", VA = "0x1213204")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x1214834", Offset = "0x1214834", VA = "0x1214834")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x12148D8", Offset = "0x12148D8", VA = "0x12148D8")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x12139C8", Offset = "0x12139C8", VA = "0x12139C8")]
	public void Expand()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x12155E8", Offset = "0x12155E8", VA = "0x12155E8")]
	public void Collapse()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x1215E80", Offset = "0x1215E80", VA = "0x1215E80")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x20001E5")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : MonoBehaviour
{
	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x1215EB0", Offset = "0x1215EB0", VA = "0x1215EB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x1216028", Offset = "0x1216028", VA = "0x1216028")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x20001E6")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : MonoBehaviour
{
	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x1216058", Offset = "0x1216058", VA = "0x1216058")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x12161D0", Offset = "0x12161D0", VA = "0x12161D0")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x20001E7")]
public class SteamVR_Controller
{
	[Token(Token = "0x20005C0")]
	public class ButtonMask
	{
		[Token(Token = "0x4002AC5")]
		public const ulong System = 1uL;

		[Token(Token = "0x4002AC6")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x4002AC7")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x4002AC8")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x4002AC9")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x4002ACA")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x4002ACB")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x4002ACC")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x4002ACD")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4002ACE")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x1217270", Offset = "0x1217270", VA = "0x1217270")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x20005C1")]
	public class Device
	{
		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D52C", Offset = "0x89D52C")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D568", Offset = "0x89D568")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F6B")]
		private VRControllerState_t state;

		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2F14")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevFrameCount;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float hairTriggerDelta;

		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float hairTriggerLimit;

		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F73")]
		private bool hairTriggerState;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x17000466")]
		public uint index
		{
			[Token(Token = "0x6002645")]
			[Address(RVA = "0x12172A0", Offset = "0x12172A0", VA = "0x12172A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC34C", Offset = "0x8BC34C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002646")]
			[Address(RVA = "0x12172D0", Offset = "0x12172D0", VA = "0x12172D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC388", Offset = "0x8BC388")]
			private set
			{
			}
		}

		[Token(Token = "0x17000467")]
		public bool valid
		{
			[Token(Token = "0x6002647")]
			[Address(RVA = "0x1217308", Offset = "0x1217308", VA = "0x1217308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC3C4", Offset = "0x8BC3C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002648")]
			[Address(RVA = "0x121734C", Offset = "0x121734C", VA = "0x121734C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC400", Offset = "0x8BC400")]
			private set
			{
			}
		}

		[Token(Token = "0x17000468")]
		public bool connected
		{
			[Token(Token = "0x6002649")]
			[Address(RVA = "0x12171E0", Offset = "0x12171E0", VA = "0x12171E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000469")]
		public bool hasTracking
		{
			[Token(Token = "0x600264A")]
			[Address(RVA = "0x1217398", Offset = "0x1217398", VA = "0x1217398")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046A")]
		public bool outOfRange
		{
			[Token(Token = "0x600264B")]
			[Address(RVA = "0x12173F8", Offset = "0x12173F8", VA = "0x12173F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046B")]
		public bool calibrating
		{
			[Token(Token = "0x600264C")]
			[Address(RVA = "0x12174EC", Offset = "0x12174EC", VA = "0x12174EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046C")]
		public bool uninitialized
		{
			[Token(Token = "0x600264D")]
			[Address(RVA = "0x12175E0", Offset = "0x12175E0", VA = "0x12175E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046D")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x600264E")]
			[Address(RVA = "0x1217134", Offset = "0x1217134", VA = "0x1217134")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x1700046E")]
		public Vector3 velocity
		{
			[Token(Token = "0x600264F")]
			[Address(RVA = "0x1217668", Offset = "0x1217668", VA = "0x1217668")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700046F")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6002650")]
			[Address(RVA = "0x1217764", Offset = "0x1217764", VA = "0x1217764")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x1216428", Offset = "0x1216428", VA = "0x1216428")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x121786C", Offset = "0x121786C", VA = "0x121786C")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x12178AC", Offset = "0x12178AC", VA = "0x12178AC")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x12178EC", Offset = "0x12178EC", VA = "0x12178EC")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x1216550", Offset = "0x1216550", VA = "0x1216550")]
		public void Update()
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x1217D14", Offset = "0x1217D14", VA = "0x1217D14")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x1217DCC", Offset = "0x1217DCC", VA = "0x1217DCC")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x1217ECC", Offset = "0x1217ECC", VA = "0x1217ECC")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x1217FE0", Offset = "0x1217FE0", VA = "0x1217FE0")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x1218054", Offset = "0x1218054", VA = "0x1218054")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x12180C8", Offset = "0x12180C8", VA = "0x12180C8")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x121813C", Offset = "0x121813C", VA = "0x121813C")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x12181F4", Offset = "0x12181F4", VA = "0x12181F4")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x12182F4", Offset = "0x12182F4", VA = "0x12182F4")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x1218408", Offset = "0x1218408", VA = "0x1218408")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x121847C", Offset = "0x121847C", VA = "0x121847C")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x12184F0", Offset = "0x12184F0", VA = "0x12184F0")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x1218564", Offset = "0x1218564", VA = "0x1218564")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x121891C", Offset = "0x121891C", VA = "0x121891C")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x121792C", Offset = "0x121792C", VA = "0x121792C")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0x1218AAC", Offset = "0x1218AAC", VA = "0x1218AAC")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0x1218B00", Offset = "0x1218B00", VA = "0x1218B00")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x1218BD0", Offset = "0x1218BD0", VA = "0x1218BD0")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005C2")]
	public enum DeviceRelation
	{
		[Token(Token = "0x4002ADA")]
		First,
		[Token(Token = "0x4002ADB")]
		Leftmost,
		[Token(Token = "0x4002ADC")]
		Rightmost,
		[Token(Token = "0x4002ADD")]
		FarthestLeft,
		[Token(Token = "0x4002ADE")]
		FarthestRight
	}

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x1216200", Offset = "0x1216200", VA = "0x1216200")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x12164A4", Offset = "0x12164A4", VA = "0x12164A4")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x1216934", Offset = "0x1216934", VA = "0x1216934")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x1217240", Offset = "0x1217240", VA = "0x1217240")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x20001E8")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2F34")]
	public GameObject left;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject right;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x890634", Offset = "0x890634")]
	public GameObject[] objects;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x890698", Offset = "0x890698")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F83")]
	private uint[] indices;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private bool[] connected;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2F44")]
	private uint leftIndex;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private uint rightIndex;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool targetsUpdated;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8B")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2F54")]
	private static string hiddenPrefix;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPostfix;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] labels;

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x1218C6C", Offset = "0x1218C6C", VA = "0x1218C6C")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x1218E58", Offset = "0x1218E58", VA = "0x1218E58")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x12191D4", Offset = "0x12191D4", VA = "0x12191D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x121920C", Offset = "0x121920C", VA = "0x121920C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x121923C", Offset = "0x121923C", VA = "0x121923C")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x1219870", Offset = "0x1219870", VA = "0x1219870")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x121AA50", Offset = "0x121AA50", VA = "0x121AA50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x121AAF8", Offset = "0x121AAF8", VA = "0x121AAF8")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x121B458", Offset = "0x121B458", VA = "0x121B458")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x121B264", Offset = "0x121B264", VA = "0x121B264")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x121B764", Offset = "0x121B764", VA = "0x121B764")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x121BCC4", Offset = "0x121BCC4", VA = "0x121BCC4")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x121A6CC", Offset = "0x121A6CC", VA = "0x121A6CC")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x1219D50", Offset = "0x1219D50", VA = "0x1219D50")]
	public void Refresh()
	{
	}
}
[Token(Token = "0x20001E9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87BF38", Offset = "0x87BF38")]
public class SteamVR_Ears : MonoBehaviour
{
	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F93")]
	private bool usingSpeakers;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Quaternion offset;

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x121BE70", Offset = "0x121BE70", VA = "0x121BE70")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x121C138", Offset = "0x121C138", VA = "0x121C138")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x121C448", Offset = "0x121C448", VA = "0x121C448")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x121C5B0", Offset = "0x121C5B0", VA = "0x121C5B0")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x20001EA")]
public static class SteamVR_Events
{
	[Token(Token = "0x20005C3")]
	public abstract class Action
	{
		[Token(Token = "0x17000470")]
		public bool enabled
		{
			[Token(Token = "0x6002668")]
			[Address(RVA = "0x17B9148", Offset = "0x17B9148", VA = "0x17B9148")]
			set
			{
			}
		}

		[Token(Token = "0x6002667")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x17B919C", Offset = "0x17B919C", VA = "0x17B919C")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C4")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event _event;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FAB")]
		private UnityAction action;

		[Token(Token = "0x600266A")]
		[Address(RVA = "0x17B91CC", Offset = "0x17B91CC", VA = "0x17B91CC")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x17B922C", Offset = "0x17B922C", VA = "0x17B922C", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C5")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x600266C")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x600266D")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C6")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x600266E")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x600266F")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C7")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x6002670")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6002671")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x20005C8")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x6002672")]
		[Address(RVA = "0x17B92E0", Offset = "0x17B92E0", VA = "0x17B92E0")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x17B9320", Offset = "0x17B9320", VA = "0x17B9320")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x17B9360", Offset = "0x17B9360", VA = "0x17B9360")]
		public void Send()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x17B9390", Offset = "0x17B9390", VA = "0x17B9390")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20005C9")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x6002676")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6002677")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6002678")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x6002679")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20005CA")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x600267A")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x600267B")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x600267C")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x600267D")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20005CB")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x600267E")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x600267F")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6002680")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6002681")]
		public Event()
		{
		}
	}

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2F64")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event FadeReady;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F9B")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static Event<bool> Initializing;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2F74")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Loading;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FA3")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static Event NewPosesApplied;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2F84")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x121C5E0", Offset = "0x121C5E0", VA = "0x121C5E0")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x12195F8", Offset = "0x12195F8", VA = "0x12195F8")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x121C714", Offset = "0x121C714", VA = "0x121C714")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x121C848", Offset = "0x121C848", VA = "0x121C848")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x121C974", Offset = "0x121C974", VA = "0x121C974")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x121CAA8", Offset = "0x121CAA8", VA = "0x121CAA8")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x12194C4", Offset = "0x12194C4", VA = "0x12194C4")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x121CBDC", Offset = "0x121CBDC", VA = "0x121CBDC")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x121CD10", Offset = "0x121CD10", VA = "0x121CD10")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x121CE44", Offset = "0x121CE44", VA = "0x121CE44")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x121CF78", Offset = "0x121CF78", VA = "0x121CF78")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x121D0AC", Offset = "0x121D0AC", VA = "0x121D0AC")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x121D1D8", Offset = "0x121D1D8", VA = "0x121D1D8")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x121D30C", Offset = "0x121D30C", VA = "0x121D30C")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x121D440", Offset = "0x121D440", VA = "0x121D440")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x121972C", Offset = "0x121972C", VA = "0x121972C")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x20001EB")]
public class SteamVR_ExternalCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005CC")]
	public struct Config
	{
		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float x;

		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2FA4")]
		public float y;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float z;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rx;

		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ry;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FB3")]
		public float rz;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float fov;

		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2FB4")]
		public float near;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float far;

		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sceneResolutionScale;

		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float frameSkip;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FBB")]
		public float nearOffset;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float farOffset;

		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B2FC4")]
		public float hmdOffset;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float g;

		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float b;

		[Token(Token = "0x4002AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC3")]
		public float a;

		[Token(Token = "0x4002AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Config config;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2F94")]
	public string configPath;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Camera cam;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Transform target;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FB3")]
	private GameObject clipQuad;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private Material clipMaterial;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2FA4")]
	private Material colorMat;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Material alphaMat;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Camera[] cameras;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Rect[] cameraRects;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FBB")]
	private float sceneResolutionScale;

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x17B93C0", Offset = "0x17B93C0", VA = "0x17B93C0")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x17BABF8", Offset = "0x17BABF8", VA = "0x17BABF8")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x17BAC30", Offset = "0x17BAC30", VA = "0x17BAC30")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x17BB8A8", Offset = "0x17BB8A8", VA = "0x17BB8A8")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x17BBE60", Offset = "0x17BBE60", VA = "0x17BBE60")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x17BCE38", Offset = "0x17BCE38", VA = "0x17BCE38")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x17BD120", Offset = "0x17BD120", VA = "0x17BD120")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x17BD134", Offset = "0x17BD134", VA = "0x17BD134")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x17BD680", Offset = "0x17BD680", VA = "0x17BD680")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x17BD914", Offset = "0x17BD914", VA = "0x17BD914")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x20001EC")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2FE4")]
	private Color currentColor;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Color targetColor;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Color deltaColor;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool fadeOverlay;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FDB")]
	private static Material fadeMaterial;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x17BD944", Offset = "0x17BD944", VA = "0x17BD944")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x17BDB90", Offset = "0x17BDB90", VA = "0x17BDB90")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x17BDE00", Offset = "0x17BDE00", VA = "0x17BDE00")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x17BDF90", Offset = "0x17BDF90", VA = "0x17BDF90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x17BE348", Offset = "0x17BE348", VA = "0x17BE348")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x17BE4A8", Offset = "0x17BE4A8", VA = "0x17BE4A8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x17BEB88", Offset = "0x17BEB88", VA = "0x17BEB88")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x20001ED")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87BFE8", Offset = "0x87BFE8")]
public class SteamVR_Frustum : MonoBehaviour
{
	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B2FF4")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float fovLeft;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float fovRight;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float fovTop;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FE3")]
	public float fovBottom;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float nearZ;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3004")]
	public float farZ;

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x17BEEC0", Offset = "0x17BEEC0", VA = "0x17BEEC0")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x17C02F4", Offset = "0x17C02F4", VA = "0x17C02F4")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x17C07F4", Offset = "0x17C07F4", VA = "0x17C07F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x17C099C", Offset = "0x17C099C", VA = "0x17C099C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x17C0B44", Offset = "0x17C0B44", VA = "0x17C0B44")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x20001EE")]
[ExecuteInEditMode]
public class SteamVR_GameView : MonoBehaviour
{
	[Token(Token = "0x6001020")]
	[Address(RVA = "0x17C0BE0", Offset = "0x17C0BE0", VA = "0x17C0BE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x17C0D58", Offset = "0x17C0D58", VA = "0x17C0D58")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x20001EF")]
public class SteamVR_IK : MonoBehaviour
{
	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform target;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform start;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform joint;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FEB")]
	public Transform end;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform poleVector;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3014")]
	public Transform upVector;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float blendPct;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FF3")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x17C0D88", Offset = "0x17C0D88", VA = "0x17C0D88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x17C242C", Offset = "0x17C242C", VA = "0x17C242C")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x17C324C", Offset = "0x17C324C", VA = "0x17C324C")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x20001F0")]
public class SteamVR_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8813F0", Offset = "0x8813F0")]
	private sealed class <LoadLevel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2023")]
		private object <>2__current;

		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3084")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SteamVR_Controller.Device <hmd>5__5;

		[Token(Token = "0x17000471")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002685")]
			[Address(RVA = "0x17C9280", Offset = "0x17C9280", VA = "0x17C9280", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000472")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002687")]
			[Address(RVA = "0x17C9350", Offset = "0x17C9350", VA = "0x17C9350", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x17C5584", Offset = "0x17C5584", VA = "0x17C5584")]
		[DebuggerHidden]
		public <LoadLevel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x17C62F0", Offset = "0x17C62F0", VA = "0x17C62F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x17C6304", Offset = "0x17C6304", VA = "0x17C6304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x17C92B0", Offset = "0x17C92B0", VA = "0x17C92B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3024")]
	public string levelName;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string internalProcessPath;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string internalProcessArgs;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool loadAdditive;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FFB")]
	public bool loadAsync;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Texture loadingScreen;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3034")]
	public Texture progressBarEmpty;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture progressBarFull;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2003")]
	public float loadingScreenDistance;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3044")]
	public Transform progressBarTransform;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture front;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture back;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture left;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200B")]
	public Texture right;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Texture top;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3054")]
	public Texture bottom;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color backgroundColor;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool showGrid;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float fadeOutTime;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2013")]
	public float fadeInTime;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public float postLoadSettleTime;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3064")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float fadeRate;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float alpha;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201B")]
	private AsyncOperation async;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private RenderTexture renderTexture;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3074")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x170000B2")]
	public static bool loading
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x17C3290", Offset = "0x17C3290", VA = "0x17C3290")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B3")]
	public static float progress
	{
		[Token(Token = "0x6001026")]
		[Address(RVA = "0x17C3424", Offset = "0x17C3424", VA = "0x17C3424")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B4")]
	public static Texture progressTexture
	{
		[Token(Token = "0x6001027")]
		[Address(RVA = "0x17C3728", Offset = "0x17C3728", VA = "0x17C3728")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x17C396C", Offset = "0x17C396C", VA = "0x17C396C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x17C39C0", Offset = "0x17C39C0", VA = "0x17C39C0")]
	public void Trigger()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x17C3BD0", Offset = "0x17C3BD0", VA = "0x17C3BD0")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x17C3E58", Offset = "0x17C3E58", VA = "0x17C3E58")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x17C51B4", Offset = "0x17C51B4", VA = "0x17C51B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x17C3B14", Offset = "0x17C3B14", VA = "0x17C3B14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AA2D8", Offset = "0x8AA2D8")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x17C48CC", Offset = "0x17C48CC", VA = "0x17C48CC")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x17C6210", Offset = "0x17C6210", VA = "0x17C6210")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x20001F1")]
public class SteamVR_Menu : MonoBehaviour
{
	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x202B")]
	public Texture cursor;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Texture background;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3094")]
	public Texture logo;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float logoHeight;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float menuOffset;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 scaleLimits;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2033")]
	public float scaleRate;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B30A4")]
	private Camera overlayCam;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector4 uvOffset;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float distance;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8907B0", Offset = "0x8907B0")]
	private float <scale>k__BackingField;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x203B")]
	private string scaleLimitX;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private string scaleLimitY;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B30B4")]
	private string scaleRateText;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool savedCursorVisible;

	[Token(Token = "0x170000B5")]
	public RenderTexture texture
	{
		[Token(Token = "0x6001031")]
		[Address(RVA = "0x17C9380", Offset = "0x17C9380", VA = "0x17C9380")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B6")]
	public float scale
	{
		[Token(Token = "0x6001032")]
		[Address(RVA = "0x17C94E8", Offset = "0x17C94E8", VA = "0x17C94E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA388", Offset = "0x8AA388")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001033")]
		[Address(RVA = "0x17C9518", Offset = "0x17C9518", VA = "0x17C9518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA3C4", Offset = "0x8AA3C4")]
		private set
		{
		}
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x17C9550", Offset = "0x17C9550", VA = "0x17C9550")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x17C9804", Offset = "0x17C9804", VA = "0x17C9804")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x17CB8D8", Offset = "0x17CB8D8", VA = "0x17CB8D8")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x17CB6BC", Offset = "0x17CB6BC", VA = "0x17CB6BC")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x17CC0AC", Offset = "0x17CC0AC", VA = "0x17CC0AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x17CB514", Offset = "0x17CB514", VA = "0x17CB514")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x17CBFE4", Offset = "0x17CBFE4", VA = "0x17CBFE4")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x17CC048", Offset = "0x17CC048", VA = "0x17CC048")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x17CC4EC", Offset = "0x17CC4EC", VA = "0x17CC4EC")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x20001F2")]
public class SteamVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x20005CE")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2043")]
		public Vector3 point;

		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public Vector3 normal;

		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B30D4")]
		public Vector2 UVs;

		[Token(Token = "0x4002B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;
	}

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture texture;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2043")]
	public bool curved;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool antialias;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B30C4")]
	public bool highquality;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8907EC", Offset = "0x8907EC")]
	public float scale;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x890850", Offset = "0x890850")]
	public float distance;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8908B4", Offset = "0x8908B4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8908B4", Offset = "0x8908B4")]
	public float alpha;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204B")]
	public Vector4 uvOffset;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Vector2 mouseScale;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B30D4")]
	public Vector2 curvedRange;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890950", Offset = "0x890950")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private ulong handle;

	[Token(Token = "0x170000B7")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x600103D")]
		[Address(RVA = "0x17CC5E8", Offset = "0x17CC5E8", VA = "0x17CC5E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA400", Offset = "0x8AA400")]
		get
		{
			return null;
		}
		[Token(Token = "0x600103E")]
		[Address(RVA = "0x17CC668", Offset = "0x17CC668", VA = "0x17CC668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA43C", Offset = "0x8AA43C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public static string key
	{
		[Token(Token = "0x600103F")]
		[Address(RVA = "0x17C55CC", Offset = "0x17C55CC", VA = "0x17C55CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x17CC6F0", Offset = "0x17CC6F0", VA = "0x17CC6F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x17CC974", Offset = "0x17CC974", VA = "0x17CC974")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x17CCAF8", Offset = "0x17CCAF8", VA = "0x17CCAF8")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x17CD7DC", Offset = "0x17CD7DC", VA = "0x17CD7DC")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x17CDAD4", Offset = "0x17CDAD4", VA = "0x17CDAD4")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x17CE1BC", Offset = "0x17CE1BC", VA = "0x17CE1BC")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x20001F3")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87C114", Offset = "0x87C114")]
public class SteamVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x20005CF")]
	public enum Size
	{
		[Token(Token = "0x4002B06")]
		Calibrated,
		[Token(Token = "0x4002B07")]
		_400x300,
		[Token(Token = "0x4002B08")]
		_300x225,
		[Token(Token = "0x4002B09")]
		_200x150
	}

	[Token(Token = "0x20005D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88142C", Offset = "0x88142C")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x206B")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x4002B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x17000473")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600268B")]
			[Address(RVA = "0x17D10CC", Offset = "0x17D10CC", VA = "0x17D10CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000474")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600268D")]
			[Address(RVA = "0x17D119C", Offset = "0x17D119C", VA = "0x17D119C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0x17D0CF0", Offset = "0x17D0CF0", VA = "0x17D0CF0")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x17D0DC8", Offset = "0x17D0DC8", VA = "0x17D0DC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x17D0DDC", Offset = "0x17D0DDC", VA = "0x17D0DDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x17D10FC", Offset = "0x17D10FC", VA = "0x17D10FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float borderThickness;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float wireframeHeight;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x205B")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public bool drawInGame;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B30F4")]
	public Size size;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color color;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x17CE478", Offset = "0x17CE478", VA = "0x17CE478")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x17CF02C", Offset = "0x17CF02C", VA = "0x17CF02C")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x17D0464", Offset = "0x17D0464", VA = "0x17D0464")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x17D0A90", Offset = "0x17D0A90", VA = "0x17D0A90")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x17D04BC", Offset = "0x17D04BC", VA = "0x17D04BC")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x17D0AE4", Offset = "0x17D0AE4", VA = "0x17D0AE4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x17D0C34", Offset = "0x17D0C34", VA = "0x17D0C34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AA478", Offset = "0x8AA478")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x17D0D38", Offset = "0x17D0D38", VA = "0x17D0D38")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x20001F4")]
public class SteamVR_Render : MonoBehaviour
{
	[Token(Token = "0x20005D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881468", Offset = "0x881468")]
	private sealed class <RenderLoop>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2083")]
		private object <>2__current;

		[Token(Token = "0x4002B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x17000475")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002691")]
			[Address(RVA = "0x17D740C", Offset = "0x17D740C", VA = "0x17D740C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000476")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002693")]
			[Address(RVA = "0x17D74DC", Offset = "0x17D74DC", VA = "0x17D74DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x17D20EC", Offset = "0x17D20EC", VA = "0x17D20EC")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x17D6FC8", Offset = "0x17D6FC8", VA = "0x17D6FC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x17D6FDC", Offset = "0x17D6FDC", VA = "0x17D6FDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x17D743C", Offset = "0x17D743C", VA = "0x17D743C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3114")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string externalCameraConfigPath;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2073")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8909C8", Offset = "0x8909C8")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3124")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isQuitting;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x207B")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static bool _pauseRendering;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3134")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float sceneResolutionScale;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float timeScale;

	[Token(Token = "0x170000B9")]
	public static EVREye eye
	{
		[Token(Token = "0x600104E")]
		[Address(RVA = "0x17D11CC", Offset = "0x17D11CC", VA = "0x17D11CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA528", Offset = "0x8AA528")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x600104F")]
		[Address(RVA = "0x17D124C", Offset = "0x17D124C", VA = "0x17D124C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA564", Offset = "0x8AA564")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x6001050")]
		[Address(RVA = "0x17C5EC4", Offset = "0x17C5EC4", VA = "0x17C5EC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6001059")]
		[Address(RVA = "0x17D1F9C", Offset = "0x17D1F9C", VA = "0x17D1F9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600105A")]
		[Address(RVA = "0x17C8FB8", Offset = "0x17C8FB8", VA = "0x17C8FB8")]
		set
		{
		}
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x17D12D4", Offset = "0x17D12D4", VA = "0x17D12D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x17D135C", Offset = "0x17D135C", VA = "0x17D135C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x17D146C", Offset = "0x17D146C", VA = "0x17D146C")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x17D1930", Offset = "0x17D1930", VA = "0x17D1930")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x17C5688", Offset = "0x17C5688", VA = "0x17C5688")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x17D1538", Offset = "0x17D1538", VA = "0x17D1538")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x17D1AB4", Offset = "0x17D1AB4", VA = "0x17D1AB4")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x17D1ED4", Offset = "0x17D1ED4", VA = "0x17D1ED4")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x17D2030", Offset = "0x17D2030", VA = "0x17D2030")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AA5A0", Offset = "0x8AA5A0")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x17D2134", Offset = "0x17D2134", VA = "0x17D2134")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x17D2434", Offset = "0x17D2434", VA = "0x17D2434")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x17D2554", Offset = "0x17D2554", VA = "0x17D2554")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x17D2580", Offset = "0x17D2580", VA = "0x17D2580")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x17D28B0", Offset = "0x17D28B0", VA = "0x17D28B0")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x17D5450", Offset = "0x17D5450", VA = "0x17D5450")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x17D58F8", Offset = "0x17D58F8", VA = "0x17D58F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x17D5BB8", Offset = "0x17D5BB8", VA = "0x17D5BB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x17D5EE8", Offset = "0x17D5EE8", VA = "0x17D5EE8")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x17D6128", Offset = "0x17D6128", VA = "0x17D6128")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x17D6158", Offset = "0x17D6158", VA = "0x17D6158")]
	private void Update()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x17D6E1C", Offset = "0x17D6E1C", VA = "0x17D6E1C")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x20001F5")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x20005D2")]
	public class RenderModel
	{
		[Token(Token = "0x4002B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D5A4", Offset = "0x89D5A4")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4002B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D5E0", Offset = "0x89D5E0")]
		private Material <material>k__BackingField;

		[Token(Token = "0x17000477")]
		public Mesh mesh
		{
			[Token(Token = "0x6002695")]
			[Address(RVA = "0x17DF9CC", Offset = "0x17DF9CC", VA = "0x17DF9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC7C0", Offset = "0x8BC7C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002696")]
			[Address(RVA = "0x17DF9FC", Offset = "0x17DF9FC", VA = "0x17DF9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC7FC", Offset = "0x8BC7FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000478")]
		public Material material
		{
			[Token(Token = "0x6002697")]
			[Address(RVA = "0x17DFA34", Offset = "0x17DFA34", VA = "0x17DFA34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC838", Offset = "0x8BC838")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002698")]
			[Address(RVA = "0x17DFA64", Offset = "0x17DFA64", VA = "0x17DFA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC874", Offset = "0x8BC874")]
			private set
			{
			}
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x17DD0F8", Offset = "0x17DD0F8", VA = "0x17DD0F8")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x20005D3")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x4002B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3174")]
		private bool needsShutdown;

		[Token(Token = "0x4002B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool failedLoadInterface;

		[Token(Token = "0x4002B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CVRRenderModels _instance;

		[Token(Token = "0x17000479")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x6002699")]
			[Address(RVA = "0x17D9EA0", Offset = "0x17D9EA0", VA = "0x17D9EA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x17DFA9C", Offset = "0x17DFA9C", VA = "0x17DFA9C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x17D8D58", Offset = "0x17D8D58", VA = "0x17D8D58")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x20005D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8814A4", Offset = "0x8814A4")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A3")]
		private object <>2__current;

		[Token(Token = "0x4002B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public string renderModelName;

		[Token(Token = "0x4002B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3184")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x4002B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x4002B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x4002B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x1700047A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026A0")]
			[Address(RVA = "0x17DF8CC", Offset = "0x17DF8CC", VA = "0x17DF8CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x17DF99C", Offset = "0x17DF99C", VA = "0x17DF99C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x17D7EC8", Offset = "0x17D7EC8", VA = "0x17D7EC8")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x17DE0D8", Offset = "0x17DE0D8", VA = "0x17DE0D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x17DE348", Offset = "0x17DE348", VA = "0x17DE348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x17DE270", Offset = "0x17DE270", VA = "0x17DE270")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x17DF8FC", Offset = "0x17DF8FC", VA = "0x17DF8FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8814E0", Offset = "0x8814E0")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20AB")]
		private int <>1__state;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private object <>2__current;

		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3194")]
		public IntPtr pRenderModel;

		[Token(Token = "0x1700047C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x17DDFD8", Offset = "0x17DDFD8", VA = "0x17DDFD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026A8")]
			[Address(RVA = "0x17DE0A8", Offset = "0x17DE0A8", VA = "0x17DE0A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x17DD164", Offset = "0x17DD164", VA = "0x17DD164")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x17DDBCC", Offset = "0x17DDBCC", VA = "0x17DDBCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x17DDBE0", Offset = "0x17DDBE0", VA = "0x17DDBE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x17DE008", Offset = "0x17DE008", VA = "0x17DE008", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3144")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x40011A7")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x890A04", Offset = "0x890A04")]
	public string modelOverride;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x890A68", Offset = "0x890A68")]
	public Shader shader;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x890ACC", Offset = "0x890ACC")]
	public bool verbose;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x890B30", Offset = "0x890B30")]
	public bool createComponents;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3154")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x890B94", Offset = "0x890B94")]
	public bool updateDynamically;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x40011AE")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890BF8", Offset = "0x890BF8")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2093")]
	public static System.Collections.Hashtable models;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public static System.Collections.Hashtable materials;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B3164")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x170000BC")]
	public string renderModelName
	{
		[Token(Token = "0x6001068")]
		[Address(RVA = "0x17D750C", Offset = "0x17D750C", VA = "0x17D750C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA650", Offset = "0x8AA650")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001069")]
		[Address(RVA = "0x17D753C", Offset = "0x17D753C", VA = "0x17D753C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA68C", Offset = "0x8AA68C")]
		private set
		{
		}
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x17D7574", Offset = "0x17D7574", VA = "0x17D7574")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x17D7A44", Offset = "0x17D7A44", VA = "0x17D7A44")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x17D7D50", Offset = "0x17D7D50", VA = "0x17D7D50")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x17D7640", Offset = "0x17D7640", VA = "0x17D7640")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x17D7DE4", Offset = "0x17D7DE4", VA = "0x17D7DE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AA6C8", Offset = "0x8AA6C8")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x17D7F10", Offset = "0x17D7F10", VA = "0x17D7F10")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x17DAE70", Offset = "0x17DAE70", VA = "0x17DAE70")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x17DD030", Offset = "0x17DD030", VA = "0x17DD030")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AA778", Offset = "0x8AA778")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x17DD1AC", Offset = "0x17DD1AC", VA = "0x17DD1AC")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x17D8A2C", Offset = "0x17D8A2C", VA = "0x17D8A2C")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x17D8D88", Offset = "0x17D8D88", VA = "0x17D8D88")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x17DD320", Offset = "0x17DD320", VA = "0x17DD320")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x17DD590", Offset = "0x17DD590", VA = "0x17DD590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x17DD864", Offset = "0x17DD864", VA = "0x17DD864")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x17DD90C", Offset = "0x17DD90C", VA = "0x17DD90C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x17DA288", Offset = "0x17DA288", VA = "0x17DA288")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x17DDA24", Offset = "0x17DDA24", VA = "0x17DDA24")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x17DC6D4", Offset = "0x17DC6D4", VA = "0x17DC6D4")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x17DC704", Offset = "0x17DC704", VA = "0x17DC704")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x17DCB94", Offset = "0x17DCB94", VA = "0x17DCB94")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x20001F6")]
public class SteamVR_Skybox : MonoBehaviour
{
	[Token(Token = "0x20005D6")]
	public enum CellSize
	{
		[Token(Token = "0x4002B21")]
		x1024,
		[Token(Token = "0x4002B22")]
		x64,
		[Token(Token = "0x4002B23")]
		x32,
		[Token(Token = "0x4002B24")]
		x16,
		[Token(Token = "0x4002B25")]
		x8
	}

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture front;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture back;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Texture left;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20B3")]
	public Texture right;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public Texture top;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B31A4")]
	public Texture bottom;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public CellSize StereoCellSize;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float StereoIpdMm;

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x17DFBA0", Offset = "0x17DFBA0", VA = "0x17DFBA0")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x17DFD04", Offset = "0x17DFD04", VA = "0x17DFD04")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x17C8714", Offset = "0x17C8714", VA = "0x17C8714")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x17C9148", Offset = "0x17C9148", VA = "0x17C9148")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x17DFE7C", Offset = "0x17DFE7C", VA = "0x17DFE7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x17DFF0C", Offset = "0x17DFF0C", VA = "0x17DFF0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x17DFF38", Offset = "0x17DFF38", VA = "0x17DFF38")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x20001F7")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : MonoBehaviour
{
	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x17DFF94", Offset = "0x17DFF94", VA = "0x17DFF94")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x17E0758", Offset = "0x17E0758", VA = "0x17E0758")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x17E0880", Offset = "0x17E0880", VA = "0x17E0880")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x20001F8")]
[ExecuteInEditMode]
public class SteamVR_Stats : MonoBehaviour
{
	[Token(Token = "0x6001089")]
	[Address(RVA = "0x17E08B0", Offset = "0x17E08B0", VA = "0x17E08B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x17E0A28", Offset = "0x17E0A28", VA = "0x17E0A28")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x20001F9")]
public class SteamVR_TestController : MonoBehaviour
{
	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C3")]
	private List<int> controllerIndices;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B31C4")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform point;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform pointer;

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x17E0A58", Offset = "0x17E0A58", VA = "0x17E0A58")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x17E1548", Offset = "0x17E1548", VA = "0x17E1548")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x17E16A8", Offset = "0x17E16A8", VA = "0x17E16A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x17E0E60", Offset = "0x17E0E60", VA = "0x17E0E60")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x17E1808", Offset = "0x17E1808", VA = "0x17E1808")]
	private void Update()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x17E2CD4", Offset = "0x17E2CD4", VA = "0x17E2CD4")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x20001FA")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x20005D7")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B31D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D61C", Offset = "0x89D61C")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x4002B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D658", Offset = "0x89D658")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x4002B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D _texture;

		[Token(Token = "0x4002B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevFrameCount;

		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20D3")]
		private uint glTextureId;

		[Token(Token = "0x4002B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private VideoStream videostream;

		[Token(Token = "0x4002B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B31E4")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x1700047E")]
		public bool undistorted
		{
			[Token(Token = "0x60026AA")]
			[Address(RVA = "0x17E3C8C", Offset = "0x17E3C8C", VA = "0x17E3C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCB08", Offset = "0x8BCB08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026AB")]
			[Address(RVA = "0x17E3CD0", Offset = "0x17E3CD0", VA = "0x17E3CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCB44", Offset = "0x8BCB44")]
			private set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public uint deviceIndex
		{
			[Token(Token = "0x60026AC")]
			[Address(RVA = "0x17E3D1C", Offset = "0x17E3D1C", VA = "0x17E3D1C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000480")]
		public bool hasCamera
		{
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0x17E3D6C", Offset = "0x17E3D6C", VA = "0x17E3D6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000481")]
		public bool hasTracking
		{
			[Token(Token = "0x60026AE")]
			[Address(RVA = "0x17E3DD0", Offset = "0x17E3DD0", VA = "0x17E3DD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000482")]
		public uint frameId
		{
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0x17E4880", Offset = "0x17E4880", VA = "0x17E4880")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000483")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x60026B0")]
			[Address(RVA = "0x17E48CC", Offset = "0x17E48CC", VA = "0x17E48CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCB80", Offset = "0x8BCB80")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x60026B1")]
			[Address(RVA = "0x17E4914", Offset = "0x17E4914", VA = "0x17E4914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCBBC", Offset = "0x8BCBBC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000484")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x17E4A44", Offset = "0x17E4A44", VA = "0x17E4A44")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x17000485")]
		public Texture2D texture
		{
			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x17E4AA4", Offset = "0x17E4AA4", VA = "0x17E4AA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000486")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x17E4AE4", Offset = "0x17E4AE4", VA = "0x17E4AE4")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000487")]
		public Vector3 velocity
		{
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x17E4B9C", Offset = "0x17E4B9C", VA = "0x17E4B9C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000488")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x60026B6")]
			[Address(RVA = "0x17E4D84", Offset = "0x17E4D84", VA = "0x17E4D84")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x17E30C8", Offset = "0x17E30C8", VA = "0x17E30C8")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x17E4F70", Offset = "0x17E4F70", VA = "0x17E4F70")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x17E4FBC", Offset = "0x17E4FBC", VA = "0x17E4FBC")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x17E500C", Offset = "0x17E500C", VA = "0x17E500C")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x17E3E3C", Offset = "0x17E3E3C", VA = "0x17E3E3C")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x20005D8")]
	private class VideoStream
	{
		[Token(Token = "0x4002B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D694", Offset = "0x89D694")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x4002B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ulong _handle;

		[Token(Token = "0x4002B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _hasCamera;

		[Token(Token = "0x4002B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20DB")]
		private ulong refCount;

		[Token(Token = "0x17000489")]
		public uint deviceIndex
		{
			[Token(Token = "0x60026BC")]
			[Address(RVA = "0x17E37C8", Offset = "0x17E37C8", VA = "0x17E37C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCBF8", Offset = "0x8BCBF8")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0x17E37F8", Offset = "0x17E37F8", VA = "0x17E37F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCC34", Offset = "0x8BCC34")]
			private set
			{
			}
		}

		[Token(Token = "0x1700048A")]
		public ulong handle
		{
			[Token(Token = "0x60026BE")]
			[Address(RVA = "0x17E3830", Offset = "0x17E3830", VA = "0x17E3830")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700048B")]
		public bool hasCamera
		{
			[Token(Token = "0x60026BF")]
			[Address(RVA = "0x17E3860", Offset = "0x17E3860", VA = "0x17E3860")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x17E3618", Offset = "0x17E3618", VA = "0x17E3618")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x17E38A4", Offset = "0x17E38A4", VA = "0x17E38A4")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x17E3A8C", Offset = "0x17E3A8C", VA = "0x17E3A8C")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20CB")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x17E2EB4", Offset = "0x17E2EB4", VA = "0x17E2EB4")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x17E3164", Offset = "0x17E3164", VA = "0x17E3164")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x17E3378", Offset = "0x17E3378", VA = "0x17E3378")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x17E3414", Offset = "0x17E3414", VA = "0x17E3414")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x17E3798", Offset = "0x17E3798", VA = "0x17E3798")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x20001FB")]
public class SteamVR_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x20005D9")]
	public enum EIndex
	{
		[Token(Token = "0x4002B32")]
		None = -1,
		[Token(Token = "0x4002B33")]
		Hmd,
		[Token(Token = "0x4002B34")]
		Device1,
		[Token(Token = "0x4002B35")]
		Device2,
		[Token(Token = "0x4002B36")]
		Device3,
		[Token(Token = "0x4002B37")]
		Device4,
		[Token(Token = "0x4002B38")]
		Device5,
		[Token(Token = "0x4002B39")]
		Device6,
		[Token(Token = "0x4002B3A")]
		Device7,
		[Token(Token = "0x4002B3B")]
		Device8,
		[Token(Token = "0x4002B3C")]
		Device9,
		[Token(Token = "0x4002B3D")]
		Device10,
		[Token(Token = "0x4002B3E")]
		Device11,
		[Token(Token = "0x4002B3F")]
		Device12,
		[Token(Token = "0x4002B40")]
		Device13,
		[Token(Token = "0x4002B41")]
		Device14,
		[Token(Token = "0x4002B42")]
		Device15
	}

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
	public EIndex index;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B31F4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x890C34", Offset = "0x890C34")]
	public Transform origin;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890C98", Offset = "0x890C98")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isTracker;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x170000BD")]
	public bool isValid
	{
		[Token(Token = "0x6001096")]
		[Address(RVA = "0x17E914C", Offset = "0x17E914C", VA = "0x17E914C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA828", Offset = "0x8AA828")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001097")]
		[Address(RVA = "0x17E9190", Offset = "0x17E9190", VA = "0x17E9190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA864", Offset = "0x8AA864")]
		private set
		{
		}
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x17E91DC", Offset = "0x17E91DC", VA = "0x17E91DC")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x17E9744", Offset = "0x17E9744", VA = "0x17E9744")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x17E9898", Offset = "0x17E9898", VA = "0x17E9898")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x17E99F8", Offset = "0x17E99F8", VA = "0x17E99F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x17E9A64", Offset = "0x17E9A64", VA = "0x17E9A64")]
	private void Start()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x17E9E94", Offset = "0x17E9E94", VA = "0x17E9E94")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x17E9A94", Offset = "0x17E9A94", VA = "0x17E9A94")]
	public void CheckIfTracker()
	{
	}
}
[Token(Token = "0x20001FC")]
[ExecuteInEditMode]
public class SteamVR_UpdatePoses : MonoBehaviour
{
	[Token(Token = "0x600109F")]
	[Address(RVA = "0x17EA0A8", Offset = "0x17EA0A8", VA = "0x17EA0A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x17EA220", Offset = "0x17EA220", VA = "0x17EA220")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x20001FD")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x20005DA")]
	public struct RigidTransform
	{
		[Token(Token = "0x4002B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20EB")]
		public Vector3 pos;

		[Token(Token = "0x4002B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public Quaternion rot;

		[Token(Token = "0x1700048C")]
		public static RigidTransform identity
		{
			[Token(Token = "0x60026C2")]
			[Address(RVA = "0x17ECC04", Offset = "0x17ECC04", VA = "0x17ECC04")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x17ECE14", Offset = "0x17ECE14", VA = "0x17ECE14")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xAD38F8", Offset = "0xAD38F8", VA = "0xAD38F8")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xAD398C", Offset = "0xAD398C", VA = "0xAD398C")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xAD39E8", Offset = "0xAD39E8", VA = "0xAD39E8")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xAD3A4C", Offset = "0xAD3A4C", VA = "0xAD3A4C")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0xAD3C44", Offset = "0xAD3C44", VA = "0xAD3C44")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xAD3EBC", Offset = "0xAD3EBC", VA = "0xAD3EBC")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xAD3F10", Offset = "0xAD3F10", VA = "0xAD3F10")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0xAD3F64", Offset = "0xAD3F64", VA = "0xAD3F64", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0xAD3FCC", Offset = "0xAD3FCC", VA = "0xAD3FCC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x17EDD90", Offset = "0x17EDD90", VA = "0x17EDD90")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x17EDFF8", Offset = "0x17EDFF8", VA = "0x17EDFF8")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x17EE260", Offset = "0x17EE260", VA = "0x17EE260")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0xAD4020", Offset = "0xAD4020", VA = "0xAD4020")]
		public void Inverse()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xAD4074", Offset = "0xAD4074", VA = "0xAD4074")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0xAD40C8", Offset = "0xAD40C8", VA = "0xAD40C8")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xAD4164", Offset = "0xAD4164", VA = "0xAD4164")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xAD41E8", Offset = "0xAD41E8", VA = "0xAD41E8")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x17EEF9C", Offset = "0x17EEF9C", VA = "0x17EEF9C")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x17EF010", Offset = "0x17EF010", VA = "0x17EF010")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xAD426C", Offset = "0xAD426C", VA = "0xAD426C")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x20005DB")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x17EA250", Offset = "0x17EA250", VA = "0x17EA250")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x17EABC0", Offset = "0x17EABC0", VA = "0x17EABC0")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x17EAD5C", Offset = "0x17EAD5C", VA = "0x17EAD5C")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x17EADDC", Offset = "0x17EADDC", VA = "0x17EADDC")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x17EAE5C", Offset = "0x17EAE5C", VA = "0x17EAE5C")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x17EB054", Offset = "0x17EB054", VA = "0x17EB054")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x17EB0C8", Offset = "0x17EB0C8", VA = "0x17EB0C8")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x17EB13C", Offset = "0x17EB13C", VA = "0x17EB13C")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x17EB1D4", Offset = "0x17EB1D4", VA = "0x17EB1D4")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x17EB2E0", Offset = "0x17EB2E0", VA = "0x17EB2E0")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x17EB350", Offset = "0x17EB350", VA = "0x17EB350")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x17EB45C", Offset = "0x17EB45C", VA = "0x17EB45C")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x17EB60C", Offset = "0x17EB60C", VA = "0x17EB60C")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x17EBCBC", Offset = "0x17EBCBC", VA = "0x17EBCBC")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x17EBDDC", Offset = "0x17EBDDC", VA = "0x17EBDDC")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x17EC318", Offset = "0x17EC318", VA = "0x17EC318")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x17D2D54", Offset = "0x17D2D54", VA = "0x17D2D54")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
namespace Valve.VR
{
	[Token(Token = "0x20001FE")]
	public struct IVRSystem
	{
		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88151C", Offset = "0x88151C")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88155C", Offset = "0x88155C")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88159C", Offset = "0x88159C")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8815DC", Offset = "0x8815DC")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88161C", Offset = "0x88161C")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88165C", Offset = "0x88165C")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88169C", Offset = "0x88169C")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8816DC", Offset = "0x8816DC")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88171C", Offset = "0x88171C")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88175C", Offset = "0x88175C")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88179C", Offset = "0x88179C")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8817DC", Offset = "0x8817DC")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88181C", Offset = "0x88181C")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88185C", Offset = "0x88185C")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88189C", Offset = "0x88189C")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8818DC", Offset = "0x8818DC")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88191C", Offset = "0x88191C")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88195C", Offset = "0x88195C")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88199C", Offset = "0x88199C")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8819DC", Offset = "0x8819DC")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881A1C", Offset = "0x881A1C")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881A5C", Offset = "0x881A5C")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881A9C", Offset = "0x881A9C")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881ADC", Offset = "0x881ADC")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881B1C", Offset = "0x881B1C")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881B5C", Offset = "0x881B5C")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881B9C", Offset = "0x881B9C")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881BDC", Offset = "0x881BDC")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881C1C", Offset = "0x881C1C")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881C5C", Offset = "0x881C5C")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881C9C", Offset = "0x881C9C")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881CDC", Offset = "0x881CDC")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20005FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881D1C", Offset = "0x881D1C")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x20005FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881D5C", Offset = "0x881D5C")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881D9C", Offset = "0x881D9C")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881DDC", Offset = "0x881DDC")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881E1C", Offset = "0x881E1C")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x2000601")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881E5C", Offset = "0x881E5C")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881E9C", Offset = "0x881E9C")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881EDC", Offset = "0x881EDC")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881F1C", Offset = "0x881F1C")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881F5C", Offset = "0x881F5C")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881F9C", Offset = "0x881F9C")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x881FDC", Offset = "0x881FDC")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88201C", Offset = "0x88201C")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88205C", Offset = "0x88205C")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88209C", Offset = "0x88209C")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3224")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20F3")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3234")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20FB")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3244")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2103")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3254")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210B")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3264")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2113")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3274")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211B")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3284")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2123")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3294")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x212B")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x20001FF")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x200060B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8820DC", Offset = "0x8820DC")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88211C", Offset = "0x88211C")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88215C", Offset = "0x88215C")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B32A4")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x2000200")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88219C", Offset = "0x88219C")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8821DC", Offset = "0x8821DC")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88221C", Offset = "0x88221C")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88225C", Offset = "0x88225C")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88229C", Offset = "0x88229C")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8822DC", Offset = "0x8822DC")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88231C", Offset = "0x88231C")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88235C", Offset = "0x88235C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88239C", Offset = "0x88239C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8823DC", Offset = "0x8823DC")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88241C", Offset = "0x88241C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000619")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88245C", Offset = "0x88245C")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2133")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B32B4")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x213B")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B32C4")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x2000201")]
	public struct IVRApplications
	{
		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88249C", Offset = "0x88249C")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8824DC", Offset = "0x8824DC")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88251C", Offset = "0x88251C")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88255C", Offset = "0x88255C")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88259C", Offset = "0x88259C")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8825DC", Offset = "0x8825DC")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88261C", Offset = "0x88261C")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88265C", Offset = "0x88265C")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88269C", Offset = "0x88269C")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8826DC", Offset = "0x8826DC")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88271C", Offset = "0x88271C")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88275C", Offset = "0x88275C")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88279C", Offset = "0x88279C")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8827DC", Offset = "0x8827DC")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88281C", Offset = "0x88281C")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88285C", Offset = "0x88285C")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88289C", Offset = "0x88289C")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8828DC", Offset = "0x8828DC")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88291C", Offset = "0x88291C")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88295C", Offset = "0x88295C")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88299C", Offset = "0x88299C")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8829DC", Offset = "0x8829DC")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882A1C", Offset = "0x882A1C")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882A5C", Offset = "0x882A5C")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882A9C", Offset = "0x882A9C")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882ADC", Offset = "0x882ADC")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882B1C", Offset = "0x882B1C")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882B5C", Offset = "0x882B5C")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882B9C", Offset = "0x882B9C")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882BDC", Offset = "0x882BDC")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882C1C", Offset = "0x882C1C")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2143")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B32D4")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214B")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B32E4")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2153")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B32F4")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x215B")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3304")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2163")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3314")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x2000202")]
	public struct IVRChaperone
	{
		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882C5C", Offset = "0x882C5C")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882C9C", Offset = "0x882C9C")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882CDC", Offset = "0x882CDC")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882D1C", Offset = "0x882D1C")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882D5C", Offset = "0x882D5C")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882D9C", Offset = "0x882D9C")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882DDC", Offset = "0x882DDC")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882E1C", Offset = "0x882E1C")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x216B")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3324")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2173")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x2000203")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882E5C", Offset = "0x882E5C")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882E9C", Offset = "0x882E9C")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882EDC", Offset = "0x882EDC")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882F1C", Offset = "0x882F1C")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882F5C", Offset = "0x882F5C")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882F9C", Offset = "0x882F9C")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x882FDC", Offset = "0x882FDC")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88301C", Offset = "0x88301C")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88305C", Offset = "0x88305C")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88309C", Offset = "0x88309C")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8830DC", Offset = "0x8830DC")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88311C", Offset = "0x88311C")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88315C", Offset = "0x88315C")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88319C", Offset = "0x88319C")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8831DC", Offset = "0x8831DC")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000650")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88321C", Offset = "0x88321C")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88325C", Offset = "0x88325C")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88329C", Offset = "0x88329C")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8832DC", Offset = "0x8832DC")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88331C", Offset = "0x88331C")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3334")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x217B")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3344")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2183")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3354")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218B")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3364")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x2000204")]
	public struct IVRCompositor
	{
		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88335C", Offset = "0x88335C")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88339C", Offset = "0x88339C")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8833DC", Offset = "0x8833DC")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88341C", Offset = "0x88341C")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88345C", Offset = "0x88345C")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88349C", Offset = "0x88349C")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8834DC", Offset = "0x8834DC")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88351C", Offset = "0x88351C")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88355C", Offset = "0x88355C")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88359C", Offset = "0x88359C")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x200065F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8835DC", Offset = "0x8835DC")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88361C", Offset = "0x88361C")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88365C", Offset = "0x88365C")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88369C", Offset = "0x88369C")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8836DC", Offset = "0x8836DC")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88371C", Offset = "0x88371C")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88375C", Offset = "0x88375C")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88379C", Offset = "0x88379C")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8837DC", Offset = "0x8837DC")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88381C", Offset = "0x88381C")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88385C", Offset = "0x88385C")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88389C", Offset = "0x88389C")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8838DC", Offset = "0x8838DC")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88391C", Offset = "0x88391C")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88395C", Offset = "0x88395C")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x200066E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88399C", Offset = "0x88399C")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8839DC", Offset = "0x8839DC")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883A1C", Offset = "0x883A1C")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883A5C", Offset = "0x883A5C")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x2000672")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883A9C", Offset = "0x883A9C")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x2000673")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883ADC", Offset = "0x883ADC")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883B1C", Offset = "0x883B1C")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883B5C", Offset = "0x883B5C")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883B9C", Offset = "0x883B9C")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883BDC", Offset = "0x883BDC")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883C1C", Offset = "0x883C1C")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883C5C", Offset = "0x883C5C")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883C9C", Offset = "0x883C9C")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883CDC", Offset = "0x883CDC")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883D1C", Offset = "0x883D1C")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200067D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883D5C", Offset = "0x883D5C")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883D9C", Offset = "0x883D9C")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883DDC", Offset = "0x883DDC")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2193")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3374")]
		internal _Submit Submit;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x219B")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3384")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21A3")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3394")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21AB")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B33A4")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21B3")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B33B4")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21BB")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B33C4")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C3")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B33D4")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x2000205")]
	public struct IVROverlay
	{
		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883E1C", Offset = "0x883E1C")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x2000681")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883E5C", Offset = "0x883E5C")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883E9C", Offset = "0x883E9C")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883EDC", Offset = "0x883EDC")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883F1C", Offset = "0x883F1C")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883F5C", Offset = "0x883F5C")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883F9C", Offset = "0x883F9C")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x883FDC", Offset = "0x883FDC")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88401C", Offset = "0x88401C")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88405C", Offset = "0x88405C")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88409C", Offset = "0x88409C")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8840DC", Offset = "0x8840DC")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88411C", Offset = "0x88411C")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88415C", Offset = "0x88415C")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88419C", Offset = "0x88419C")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8841DC", Offset = "0x8841DC")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88421C", Offset = "0x88421C")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x2000691")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88425C", Offset = "0x88425C")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88429C", Offset = "0x88429C")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8842DC", Offset = "0x8842DC")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88431C", Offset = "0x88431C")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88435C", Offset = "0x88435C")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88439C", Offset = "0x88439C")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8843DC", Offset = "0x8843DC")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88441C", Offset = "0x88441C")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88445C", Offset = "0x88445C")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88449C", Offset = "0x88449C")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8844DC", Offset = "0x8844DC")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88451C", Offset = "0x88451C")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88455C", Offset = "0x88455C")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88459C", Offset = "0x88459C")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8845DC", Offset = "0x8845DC")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x20006A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88461C", Offset = "0x88461C")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x20006A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88465C", Offset = "0x88465C")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88469C", Offset = "0x88469C")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20006A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8846DC", Offset = "0x8846DC")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88471C", Offset = "0x88471C")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20006A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88475C", Offset = "0x88475C")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x20006A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88479C", Offset = "0x88479C")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x20006A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8847DC", Offset = "0x8847DC")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20006A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88481C", Offset = "0x88481C")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20006A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88485C", Offset = "0x88485C")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88489C", Offset = "0x88489C")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8848DC", Offset = "0x8848DC")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88491C", Offset = "0x88491C")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88495C", Offset = "0x88495C")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88499C", Offset = "0x88499C")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8849DC", Offset = "0x8849DC")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884A1C", Offset = "0x884A1C")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884A5C", Offset = "0x884A5C")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884A9C", Offset = "0x884A9C")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884ADC", Offset = "0x884ADC")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884B1C", Offset = "0x884B1C")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884B5C", Offset = "0x884B5C")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884B9C", Offset = "0x884B9C")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884BDC", Offset = "0x884BDC")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884C1C", Offset = "0x884C1C")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884C5C", Offset = "0x884C5C")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884C9C", Offset = "0x884C9C")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884CDC", Offset = "0x884CDC")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884D1C", Offset = "0x884D1C")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884D5C", Offset = "0x884D5C")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884D9C", Offset = "0x884D9C")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884DDC", Offset = "0x884DDC")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884E1C", Offset = "0x884E1C")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x20006C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884E5C", Offset = "0x884E5C")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884E9C", Offset = "0x884E9C")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884EDC", Offset = "0x884EDC")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884F1C", Offset = "0x884F1C")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x20006C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884F5C", Offset = "0x884F5C")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x20006C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884F9C", Offset = "0x884F9C")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x20006C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x884FDC", Offset = "0x884FDC")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x20006C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88501C", Offset = "0x88501C")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88505C", Offset = "0x88505C")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88509C", Offset = "0x88509C")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8850DC", Offset = "0x8850DC")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88511C", Offset = "0x88511C")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x20006CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88515C", Offset = "0x88515C")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x20006CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88519C", Offset = "0x88519C")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x20006CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8851DC", Offset = "0x8851DC")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88521C", Offset = "0x88521C")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88525C", Offset = "0x88525C")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21CB")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B33E4")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21D3")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B33F4")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21DB")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3404")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21E3")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3414")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21EB")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3424")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21F3")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3434")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21FB")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3444")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2203")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3454")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220B")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3464")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2213")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3474")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x221B")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3484")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2223")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3494")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x222B")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B34A4")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2233")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x2000206")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88529C", Offset = "0x88529C")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8852DC", Offset = "0x8852DC")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x20006D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88531C", Offset = "0x88531C")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x20006D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88535C", Offset = "0x88535C")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88539C", Offset = "0x88539C")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8853DC", Offset = "0x8853DC")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88541C", Offset = "0x88541C")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88545C", Offset = "0x88545C")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88549C", Offset = "0x88549C")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8854DC", Offset = "0x8854DC")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88551C", Offset = "0x88551C")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x20006DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88555C", Offset = "0x88555C")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88559C", Offset = "0x88559C")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8855DC", Offset = "0x8855DC")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x20006E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88561C", Offset = "0x88561C")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88565C", Offset = "0x88565C")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88569C", Offset = "0x88569C")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8856DC", Offset = "0x8856DC")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B34B4")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x223B")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B34C4")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2243")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B34D4")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224B")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x2000207")]
	public struct IVRNotifications
	{
		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88571C", Offset = "0x88571C")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x20006E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88575C", Offset = "0x88575C")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B34E4")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x2000208")]
	public struct IVRSettings
	{
		[Token(Token = "0x20006E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88579C", Offset = "0x88579C")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8857DC", Offset = "0x8857DC")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88581C", Offset = "0x88581C")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88585C", Offset = "0x88585C")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88589C", Offset = "0x88589C")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8858DC", Offset = "0x8858DC")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88591C", Offset = "0x88591C")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88595C", Offset = "0x88595C")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20006EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x88599C", Offset = "0x88599C")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20006EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8859DC", Offset = "0x8859DC")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x20006F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885A1C", Offset = "0x885A1C")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x20006F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885A5C", Offset = "0x885A5C")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _Sync Sync;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2253")]
		internal _SetBool SetBool;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B34F4")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetString SetString;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetBool GetBool;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x225B")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetString GetString;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3504")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x2000209")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x20006F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885A9C", Offset = "0x885A9C")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20006F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885ADC", Offset = "0x885ADC")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x20006F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885B1C", Offset = "0x885B1C")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x20006F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885B5C", Offset = "0x885B5C")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x20006F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885B9C", Offset = "0x885B9C")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x20006F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885BDC", Offset = "0x885BDC")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20006F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885C1C", Offset = "0x885C1C")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2263")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3514")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x200020A")]
	public struct IVRResources
	{
		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885C5C", Offset = "0x885C5C")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885C9C", Offset = "0x885C9C")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x226B")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x200020B")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x20006FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885CDC", Offset = "0x885CDC")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x20006FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885D1C", Offset = "0x885D1C")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20006FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885D5C", Offset = "0x885D5C")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3524")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x200020C")]
	public class CVRSystem
	{
		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885D9C", Offset = "0x885D9C")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20006FF")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4002B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x4002B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2273")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885DDC", Offset = "0x885DDC")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x2000701")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x4002B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x4002B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30B3534")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885E1C", Offset = "0x885E1C")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x2000703")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x4002B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x4002B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IVRSystem FnTable;

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x1DE07B8", Offset = "0x1DE07B8", VA = "0x1DE07B8")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x1DE09EC", Offset = "0x1DE09EC", VA = "0x1DE09EC")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x1DE0A80", Offset = "0x1DE0A80", VA = "0x1DE0A80")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x1DE0B0C", Offset = "0x1DE0B0C", VA = "0x1DE0B0C")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x1DE0BF4", Offset = "0x1DE0BF4", VA = "0x1DE0BF4")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x1DE0CA0", Offset = "0x1DE0CA0", VA = "0x1DE0CA0")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x1DE0D0C", Offset = "0x1DE0D0C", VA = "0x1DE0D0C")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x1DE0DC0", Offset = "0x1DE0DC0", VA = "0x1DE0DC0")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1DE0E1C", Offset = "0x1DE0E1C", VA = "0x1DE0E1C")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1DE0E90", Offset = "0x1DE0E90", VA = "0x1DE0E90")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x1DE0F24", Offset = "0x1DE0F24", VA = "0x1DE0F24")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x1DE0F94", Offset = "0x1DE0F94", VA = "0x1DE0F94")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1DE1028", Offset = "0x1DE1028", VA = "0x1DE1028")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1DE10CC", Offset = "0x1DE10CC", VA = "0x1DE10CC")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1DE1120", Offset = "0x1DE1120", VA = "0x1DE1120")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x1DE117C", Offset = "0x1DE117C", VA = "0x1DE117C")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1DE11D8", Offset = "0x1DE11D8", VA = "0x1DE11D8")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1DE1280", Offset = "0x1DE1280", VA = "0x1DE1280")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1DE12EC", Offset = "0x1DE12EC", VA = "0x1DE12EC")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1DE1370", Offset = "0x1DE1370", VA = "0x1DE1370")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1DE13DC", Offset = "0x1DE13DC", VA = "0x1DE13DC")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1DE1448", Offset = "0x1DE1448", VA = "0x1DE1448")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1DE14B4", Offset = "0x1DE14B4", VA = "0x1DE14B4")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1DE1530", Offset = "0x1DE1530", VA = "0x1DE1530")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x1DE15CC", Offset = "0x1DE15CC", VA = "0x1DE15CC")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1DE1658", Offset = "0x1DE1658", VA = "0x1DE1658")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x1DE16E4", Offset = "0x1DE16E4", VA = "0x1DE16E4")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1DE1770", Offset = "0x1DE1770", VA = "0x1DE1770")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1DE17FC", Offset = "0x1DE17FC", VA = "0x1DE17FC")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1DE18B8", Offset = "0x1DE18B8", VA = "0x1DE18B8")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x1DE1964", Offset = "0x1DE1964", VA = "0x1DE1964")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x1DE1A94", Offset = "0x1DE1A94", VA = "0x1DE1A94")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x1DE2208", Offset = "0x1DE2208", VA = "0x1DE2208")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x1DE22B4", Offset = "0x1DE22B4", VA = "0x1DE22B4")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1DE23E4", Offset = "0x1DE23E4", VA = "0x1DE23E4")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x1DE2468", Offset = "0x1DE2468", VA = "0x1DE2468")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x1DE2C8C", Offset = "0x1DE2C8C", VA = "0x1DE2C8C")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x1DE3544", Offset = "0x1DE3544", VA = "0x1DE3544")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x1DE35C8", Offset = "0x1DE35C8", VA = "0x1DE35C8")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x1DE36F8", Offset = "0x1DE36F8", VA = "0x1DE36F8")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x1DE3828", Offset = "0x1DE3828", VA = "0x1DE3828")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x1DE3898", Offset = "0x1DE3898", VA = "0x1DE3898")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1DE3908", Offset = "0x1DE3908", VA = "0x1DE3908")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1DE3978", Offset = "0x1DE3978", VA = "0x1DE3978")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1DE39E8", Offset = "0x1DE39E8", VA = "0x1DE39E8")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1DE3A84", Offset = "0x1DE3A84", VA = "0x1DE3A84")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x1DE3AF0", Offset = "0x1DE3AF0", VA = "0x1DE3AF0")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1DE3B44", Offset = "0x1DE3B44", VA = "0x1DE3B44")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1DD9AAC", Offset = "0x1DD9AAC", VA = "0x1DD9AAC")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1DD9CD8", Offset = "0x1DD9CD8", VA = "0x1DD9CD8")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x1DD9DAC", Offset = "0x1DD9DAC", VA = "0x1DD9DAC")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x1DD9E90", Offset = "0x1DD9E90", VA = "0x1DD9E90")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228B")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1DE4164", Offset = "0x1DE4164", VA = "0x1DE4164")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x1DE4398", Offset = "0x1DE4398", VA = "0x1DE4398")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1DE44C8", Offset = "0x1DE44C8", VA = "0x1DE44C8")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1DE4558", Offset = "0x1DE4558", VA = "0x1DE4558")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1DE4634", Offset = "0x1DE4634", VA = "0x1DE4634")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1DE46D0", Offset = "0x1DE46D0", VA = "0x1DE46D0")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1DE477C", Offset = "0x1DE477C", VA = "0x1DE477C")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x1DE4808", Offset = "0x1DE4808", VA = "0x1DE4808")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1DE4874", Offset = "0x1DE4874", VA = "0x1DE4874")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1DE4930", Offset = "0x1DE4930", VA = "0x1DE4930")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1DE49FC", Offset = "0x1DE49FC", VA = "0x1DE49FC")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1DE4AB8", Offset = "0x1DE4AB8", VA = "0x1DE4AB8")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x1DE4B74", Offset = "0x1DE4B74", VA = "0x1DE4B74")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x200020F")]
	public class CVRApplications
	{
		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private IVRApplications FnTable;

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x1DC71DC", Offset = "0x1DC71DC", VA = "0x1DC71DC")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1DC7410", Offset = "0x1DC7410", VA = "0x1DC7410")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x1DC7984", Offset = "0x1DC7984", VA = "0x1DC7984")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x1DC7E0C", Offset = "0x1DC7E0C", VA = "0x1DC7E0C")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1DC8328", Offset = "0x1DC8328", VA = "0x1DC8328")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1DC85E4", Offset = "0x1DC85E4", VA = "0x1DC85E4")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1DC89C8", Offset = "0x1DC89C8", VA = "0x1DC89C8")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x1DC8DAC", Offset = "0x1DC8DAC", VA = "0x1DC8DAC")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x1DC9234", Offset = "0x1DC9234", VA = "0x1DC9234")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1DC9804", Offset = "0x1DC9804", VA = "0x1DC9804")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x1DC9D24", Offset = "0x1DC9D24", VA = "0x1DC9D24")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x1DCA1AC", Offset = "0x1DCA1AC", VA = "0x1DCA1AC")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1DCA6C8", Offset = "0x1DCA6C8", VA = "0x1DCA6C8")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x1DCAA74", Offset = "0x1DCAA74", VA = "0x1DCAA74")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x1DCAEFC", Offset = "0x1DCAEFC", VA = "0x1DCAEFC")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1DCB34C", Offset = "0x1DCB34C", VA = "0x1DCB34C")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x1DCB95C", Offset = "0x1DCB95C", VA = "0x1DCB95C")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x1DCBF64", Offset = "0x1DCBF64", VA = "0x1DCBF64")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1DCC4D4", Offset = "0x1DCC4D4", VA = "0x1DCC4D4")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1DCCA48", Offset = "0x1DCCA48", VA = "0x1DCCA48")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x1DCCF64", Offset = "0x1DCCF64", VA = "0x1DCCF64")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x1DCD484", Offset = "0x1DCD484", VA = "0x1DCD484")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x1DCDA8C", Offset = "0x1DCDA8C", VA = "0x1DCDA8C")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x1DCE094", Offset = "0x1DCE094", VA = "0x1DCE094")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x1DCE604", Offset = "0x1DCE604", VA = "0x1DCE604")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x1DCE9E8", Offset = "0x1DCE9E8", VA = "0x1DCE9E8")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x1DCEF08", Offset = "0x1DCEF08", VA = "0x1DCEF08")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x1DCF1C4", Offset = "0x1DCF1C4", VA = "0x1DCF1C4")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x1DCF64C", Offset = "0x1DCF64C", VA = "0x1DCF64C")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x1DCFA9C", Offset = "0x1DCFA9C", VA = "0x1DCFA9C")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x1DCFDB4", Offset = "0x1DCFDB4", VA = "0x1DCFDB4")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x1DD0324", Offset = "0x1DD0324", VA = "0x1DD0324")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000210")]
	public class CVRChaperone
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3554")]
		private IVRChaperone FnTable;

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x1DD05E0", Offset = "0x1DD05E0", VA = "0x1DD05E0")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x1DD0814", Offset = "0x1DD0814", VA = "0x1DD0814")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x1DD0AD0", Offset = "0x1DD0AD0", VA = "0x1DD0AD0")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x1DD0F0C", Offset = "0x1DD0F0C", VA = "0x1DD0F0C")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x1DD12EC", Offset = "0x1DD12EC", VA = "0x1DD12EC")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x1DD157C", Offset = "0x1DD157C", VA = "0x1DD157C")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1DD1E28", Offset = "0x1DD1E28", VA = "0x1DD1E28")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1DD2210", Offset = "0x1DD2210", VA = "0x1DD2210")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1DD2528", Offset = "0x1DD2528", VA = "0x1DD2528")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1DD28A4", Offset = "0x1DD28A4", VA = "0x1DD28A4")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x1DD2AD8", Offset = "0x1DD2AD8", VA = "0x1DD2AD8")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x1DD2EB4", Offset = "0x1DD2EB4", VA = "0x1DD2EB4")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x1DD3144", Offset = "0x1DD3144", VA = "0x1DD3144")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x1DD3580", Offset = "0x1DD3580", VA = "0x1DD3580")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x1DD3960", Offset = "0x1DD3960", VA = "0x1DD3960")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x1DD3E54", Offset = "0x1DD3E54", VA = "0x1DD3E54")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x1DD4348", Offset = "0x1DD4348", VA = "0x1DD4348")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1DD4728", Offset = "0x1DD4728", VA = "0x1DD4728")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1DD4B08", Offset = "0x1DD4B08", VA = "0x1DD4B08")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x1DD4E80", Offset = "0x1DD4E80", VA = "0x1DD4E80")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x1DD5208", Offset = "0x1DD5208", VA = "0x1DD5208")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1DD5548", Offset = "0x1DD5548", VA = "0x1DD5548")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x1DD5888", Offset = "0x1DD5888", VA = "0x1DD5888")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1DD5BC8", Offset = "0x1DD5BC8", VA = "0x1DD5BC8")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x1DD5FA8", Offset = "0x1DD5FA8", VA = "0x1DD5FA8")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x1DD6330", Offset = "0x1DD6330", VA = "0x1DD6330")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x1DD6824", Offset = "0x1DD6824", VA = "0x1DD6824")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x1DD6C4C", Offset = "0x1DD6C4C", VA = "0x1DD6C4C")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x1DD7140", Offset = "0x1DD7140", VA = "0x1DD7140")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x1DD770C", Offset = "0x1DD770C", VA = "0x1DD770C")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000212")]
	public class CVRCompositor
	{
		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IVRCompositor FnTable;

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1DD7CC4", Offset = "0x1DD7CC4", VA = "0x1DD7CC4")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1DD7EF8", Offset = "0x1DD7EF8", VA = "0x1DD7EF8")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x1DD7F5C", Offset = "0x1DD7F5C", VA = "0x1DD7F5C")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1DD7FB8", Offset = "0x1DD7FB8", VA = "0x1DD7FB8")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x1DD8074", Offset = "0x1DD8074", VA = "0x1DD8074")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1DD8130", Offset = "0x1DD8130", VA = "0x1DD8130")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1DD81BC", Offset = "0x1DD81BC", VA = "0x1DD81BC")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x1DD8258", Offset = "0x1DD8258", VA = "0x1DD8258")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1DD84E8", Offset = "0x1DD84E8", VA = "0x1DD84E8")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x1DD853C", Offset = "0x1DD853C", VA = "0x1DD853C")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x1DD85C8", Offset = "0x1DD85C8", VA = "0x1DD85C8")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x1DD8644", Offset = "0x1DD8644", VA = "0x1DD8644")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x1DD86A0", Offset = "0x1DD86A0", VA = "0x1DD86A0")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x1DD8714", Offset = "0x1DD8714", VA = "0x1DD8714")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x1DD87DC", Offset = "0x1DD87DC", VA = "0x1DD87DC")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x1DD8864", Offset = "0x1DD8864", VA = "0x1DD8864")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x1DD88EC", Offset = "0x1DD88EC", VA = "0x1DD88EC")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x1DD8948", Offset = "0x1DD8948", VA = "0x1DD8948")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x1DD89D4", Offset = "0x1DD89D4", VA = "0x1DD89D4")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x1DD8A28", Offset = "0x1DD8A28", VA = "0x1DD8A28")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x1DD8A7C", Offset = "0x1DD8A7C", VA = "0x1DD8A7C")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1DD8AD0", Offset = "0x1DD8AD0", VA = "0x1DD8AD0")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1DD8B24", Offset = "0x1DD8B24", VA = "0x1DD8B24")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x1DD8B94", Offset = "0x1DD8B94", VA = "0x1DD8B94")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x1DD8BF0", Offset = "0x1DD8BF0", VA = "0x1DD8BF0")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x1DD8C4C", Offset = "0x1DD8C4C", VA = "0x1DD8C4C")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x1DD8F64", Offset = "0x1DD8F64", VA = "0x1DD8F64")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x1DD8FB8", Offset = "0x1DD8FB8", VA = "0x1DD8FB8")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x1DD900C", Offset = "0x1DD900C", VA = "0x1DD900C")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x1DD907C", Offset = "0x1DD907C", VA = "0x1DD907C")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x1DD90D0", Offset = "0x1DD90D0", VA = "0x1DD90D0")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x1DD9140", Offset = "0x1DD9140", VA = "0x1DD9140")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x1DD91B8", Offset = "0x1DD91B8", VA = "0x1DD91B8")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x1DD920C", Offset = "0x1DD920C", VA = "0x1DD920C")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x1DD9284", Offset = "0x1DD9284", VA = "0x1DD9284")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x1DD9310", Offset = "0x1DD9310", VA = "0x1DD9310")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x1DD9374", Offset = "0x1DD9374", VA = "0x1DD9374")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x1DD9410", Offset = "0x1DD9410", VA = "0x1DD9410")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x1DD949C", Offset = "0x1DD949C", VA = "0x1DD949C")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x1DD9500", Offset = "0x1DD9500", VA = "0x1DD9500")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x1DD9564", Offset = "0x1DD9564", VA = "0x1DD9564")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x1DD95E0", Offset = "0x1DD95E0", VA = "0x1DD95E0")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x1DD966C", Offset = "0x1DD966C", VA = "0x1DD966C")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x1DD96D0", Offset = "0x1DD96D0", VA = "0x1DD96D0")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x2000213")]
	public class CVROverlay
	{
		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885E5C", Offset = "0x885E5C")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x2000705")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x4002B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2283")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4002B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IVROverlay FnTable;

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x1DDA2C8", Offset = "0x1DDA2C8", VA = "0x1DDA2C8")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x1DDA4FC", Offset = "0x1DDA4FC", VA = "0x1DDA4FC")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x1DDA588", Offset = "0x1DDA588", VA = "0x1DDA588")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x1DDA624", Offset = "0x1DDA624", VA = "0x1DDA624")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x1DDA690", Offset = "0x1DDA690", VA = "0x1DDA690")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x1DDA6FC", Offset = "0x1DDA6FC", VA = "0x1DDA6FC")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x1DDA758", Offset = "0x1DDA758", VA = "0x1DDA758")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x1DDA7F4", Offset = "0x1DDA7F4", VA = "0x1DDA7F4")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x1DDA890", Offset = "0x1DDA890", VA = "0x1DDA890")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x1DDA90C", Offset = "0x1DDA90C", VA = "0x1DDA90C")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x1DDA9D8", Offset = "0x1DDA9D8", VA = "0x1DDA9D8")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x1DDAB08", Offset = "0x1DDAB08", VA = "0x1DDAB08")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x1DDAB84", Offset = "0x1DDAB84", VA = "0x1DDAB84")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x1DDABF0", Offset = "0x1DDABF0", VA = "0x1DDABF0")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x1DDAC8C", Offset = "0x1DDAC8C", VA = "0x1DDAC8C")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x1DDAD2C", Offset = "0x1DDAD2C", VA = "0x1DDAD2C")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x1DDADC8", Offset = "0x1DDADC8", VA = "0x1DDADC8")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x1DDAE98", Offset = "0x1DDAE98", VA = "0x1DDAE98")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x1DDAF14", Offset = "0x1DDAF14", VA = "0x1DDAF14")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x1DDAFA4", Offset = "0x1DDAFA4", VA = "0x1DDAFA4")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x1DDB020", Offset = "0x1DDB020", VA = "0x1DDB020")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x1DDB0B0", Offset = "0x1DDB0B0", VA = "0x1DDB0B0")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x1DDB12C", Offset = "0x1DDB12C", VA = "0x1DDB12C")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x1DDB1B8", Offset = "0x1DDB1B8", VA = "0x1DDB1B8")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x1DDB234", Offset = "0x1DDB234", VA = "0x1DDB234")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x1DDB2C4", Offset = "0x1DDB2C4", VA = "0x1DDB2C4")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x1DDB350", Offset = "0x1DDB350", VA = "0x1DDB350")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x1DDB400", Offset = "0x1DDB400", VA = "0x1DDB400")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x1DDB47C", Offset = "0x1DDB47C", VA = "0x1DDB47C")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x1DDB4F8", Offset = "0x1DDB4F8", VA = "0x1DDB4F8")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x1DDB574", Offset = "0x1DDB574", VA = "0x1DDB574")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x1DDB5F0", Offset = "0x1DDB5F0", VA = "0x1DDB5F0")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x1DDB69C", Offset = "0x1DDB69C", VA = "0x1DDB69C")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x1DDB728", Offset = "0x1DDB728", VA = "0x1DDB728")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x1DDB7A4", Offset = "0x1DDB7A4", VA = "0x1DDB7A4")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x1DDB830", Offset = "0x1DDB830", VA = "0x1DDB830")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x1DDB8BC", Offset = "0x1DDB8BC", VA = "0x1DDB8BC")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x1DDB948", Offset = "0x1DDB948", VA = "0x1DDB948")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x1DDB9E4", Offset = "0x1DDB9E4", VA = "0x1DDB9E4")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x1DDBA70", Offset = "0x1DDBA70", VA = "0x1DDBA70")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x1DDBB1C", Offset = "0x1DDBB1C", VA = "0x1DDBB1C")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x1DDBBB8", Offset = "0x1DDBBB8", VA = "0x1DDBBB8")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x1DDBC44", Offset = "0x1DDBC44", VA = "0x1DDBC44")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x1DDBCB0", Offset = "0x1DDBCB0", VA = "0x1DDBCB0")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x1DDBD1C", Offset = "0x1DDBD1C", VA = "0x1DDBD1C")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x1DDBD9C", Offset = "0x1DDBD9C", VA = "0x1DDBD9C")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x1DDBEEC", Offset = "0x1DDBEEC", VA = "0x1DDBEEC")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1DDC6B4", Offset = "0x1DDC6B4", VA = "0x1DDC6B4")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1DDC730", Offset = "0x1DDC730", VA = "0x1DDC730")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x1DDC7AC", Offset = "0x1DDC7AC", VA = "0x1DDC7AC")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x1DDC828", Offset = "0x1DDC828", VA = "0x1DDC828")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x1DDC8A4", Offset = "0x1DDC8A4", VA = "0x1DDC8A4")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x1DDC944", Offset = "0x1DDC944", VA = "0x1DDC944")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x1DDC9C4", Offset = "0x1DDC9C4", VA = "0x1DDC9C4")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x1DDCA20", Offset = "0x1DDCA20", VA = "0x1DDCA20")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x1DDCA8C", Offset = "0x1DDCA8C", VA = "0x1DDCA8C")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x1DDCB18", Offset = "0x1DDCB18", VA = "0x1DDCB18")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x1DDCB94", Offset = "0x1DDCB94", VA = "0x1DDCB94")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x1DDCC30", Offset = "0x1DDCC30", VA = "0x1DDCC30")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x1DDCCE0", Offset = "0x1DDCCE0", VA = "0x1DDCCE0")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x1DDCD5C", Offset = "0x1DDCD5C", VA = "0x1DDCD5C")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x1DDCDC8", Offset = "0x1DDCDC8", VA = "0x1DDCDC8")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x1DDCE74", Offset = "0x1DDCE74", VA = "0x1DDCE74")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x1DDCEF0", Offset = "0x1DDCEF0", VA = "0x1DDCEF0")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x1DDD044", Offset = "0x1DDD044", VA = "0x1DDD044")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1DDD0C0", Offset = "0x1DDD0C0", VA = "0x1DDD0C0")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x1DDD16C", Offset = "0x1DDD16C", VA = "0x1DDD16C")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x1DDD228", Offset = "0x1DDD228", VA = "0x1DDD228")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x1DDD298", Offset = "0x1DDD298", VA = "0x1DDD298")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x1DDD318", Offset = "0x1DDD318", VA = "0x1DDD318")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x1DDD394", Offset = "0x1DDD394", VA = "0x1DDD394")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x1DDD420", Offset = "0x1DDD420", VA = "0x1DDD420")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1DDD484", Offset = "0x1DDD484", VA = "0x1DDD484")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x1DDD4E0", Offset = "0x1DDD4E0", VA = "0x1DDD4E0")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x1DDD5C8", Offset = "0x1DDD5C8", VA = "0x1DDD5C8")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x1DDD6D8", Offset = "0x1DDD6D8", VA = "0x1DDD6D8")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x1DDD754", Offset = "0x1DDD754", VA = "0x1DDD754")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x1DDD7A8", Offset = "0x1DDD7A8", VA = "0x1DDD7A8")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x1DDD81C", Offset = "0x1DDD81C", VA = "0x1DDD81C")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x1DDD998", Offset = "0x1DDD998", VA = "0x1DDD998")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x1DDDA34", Offset = "0x1DDDA34", VA = "0x1DDDA34")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1DDDAC0", Offset = "0x1DDDAC0", VA = "0x1DDDAC0")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x1DDDB7C", Offset = "0x1DDDB7C", VA = "0x1DDDB7C")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class CVRRenderModels
	{
		[Token(Token = "0x2000706")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885E9C", Offset = "0x885E9C")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x2000707")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4002B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4002B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3564")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1DDDDB4", Offset = "0x1DDDDB4", VA = "0x1DDDDB4")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1DDDFE8", Offset = "0x1DDDFE8", VA = "0x1DDDFE8")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1DDE064", Offset = "0x1DDE064", VA = "0x1DDE064")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x1DDE0C8", Offset = "0x1DDE0C8", VA = "0x1DDE0C8")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x1DDE144", Offset = "0x1DDE144", VA = "0x1DDE144")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x1DDE1A8", Offset = "0x1DDE1A8", VA = "0x1DDE1A8")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x1DDE234", Offset = "0x1DDE234", VA = "0x1DDE234")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x1DDE2B0", Offset = "0x1DDE2B0", VA = "0x1DDE2B0")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x1DDE314", Offset = "0x1DDE314", VA = "0x1DDE314")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x1DDE3A0", Offset = "0x1DDE3A0", VA = "0x1DDE3A0")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x1DDE3FC", Offset = "0x1DDE3FC", VA = "0x1DDE3FC")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1DDE468", Offset = "0x1DDE468", VA = "0x1DDE468")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x1DDE504", Offset = "0x1DDE504", VA = "0x1DDE504")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1DDE580", Offset = "0x1DDE580", VA = "0x1DDE580")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1DDE61C", Offset = "0x1DDE61C", VA = "0x1DDE61C")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1DDEF34", Offset = "0x1DDEF34", VA = "0x1DDEF34")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1DDEFC4", Offset = "0x1DDEFC4", VA = "0x1DDEFC4")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x1DDF060", Offset = "0x1DDF060", VA = "0x1DDF060")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x1DDF0FC", Offset = "0x1DDF0FC", VA = "0x1DDF0FC")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x2000215")]
	public class CVRNotifications
	{
		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IVRNotifications FnTable;

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x1DD9F24", Offset = "0x1DD9F24", VA = "0x1DD9F24")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x1DDA168", Offset = "0x1DDA168", VA = "0x1DDA168")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1DDA25C", Offset = "0x1DDA25C", VA = "0x1DDA25C")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x2000216")]
	public class CVRSettings
	{
		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x229B")]
		private IVRSettings FnTable;

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1DDFDF8", Offset = "0x1DDFDF8", VA = "0x1DDFDF8")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x1DE002C", Offset = "0x1DE002C", VA = "0x1DE002C")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x1DE015C", Offset = "0x1DE015C", VA = "0x1DE015C")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x1DE0200", Offset = "0x1DE0200", VA = "0x1DE0200")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x1DE02A8", Offset = "0x1DE02A8", VA = "0x1DE02A8")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x1DE033C", Offset = "0x1DE033C", VA = "0x1DE033C")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x1DE03D0", Offset = "0x1DE03D0", VA = "0x1DE03D0")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x1DE0464", Offset = "0x1DE0464", VA = "0x1DE0464")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x1DE0504", Offset = "0x1DE0504", VA = "0x1DE0504")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x1DE0590", Offset = "0x1DE0590", VA = "0x1DE0590")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x1DE061C", Offset = "0x1DE061C", VA = "0x1DE061C")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x1DE06C0", Offset = "0x1DE06C0", VA = "0x1DE06C0")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x1DE0734", Offset = "0x1DE0734", VA = "0x1DE0734")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class CVRScreenshots
	{
		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x1DDF7B0", Offset = "0x1DDF7B0", VA = "0x1DDF7B0")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x1DDF9E4", Offset = "0x1DDF9E4", VA = "0x1DDF9E4")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x1DDFA90", Offset = "0x1DDFA90", VA = "0x1DDFA90")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1DDFB1C", Offset = "0x1DDFB1C", VA = "0x1DDFB1C")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1DDFB98", Offset = "0x1DDFB98", VA = "0x1DDFB98")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x1DDFC44", Offset = "0x1DDFC44", VA = "0x1DDFC44")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1DDFCC0", Offset = "0x1DDFCC0", VA = "0x1DDFCC0")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x1DDFD5C", Offset = "0x1DDFD5C", VA = "0x1DDFD5C")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x2000218")]
	public class CVRResources
	{
		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3574")]
		private IVRResources FnTable;

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x1DDF444", Offset = "0x1DDF444", VA = "0x1DDF444")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x1DDF688", Offset = "0x1DDF688", VA = "0x1DDF688")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x1DDF714", Offset = "0x1DDF714", VA = "0x1DDF714")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000219")]
	public class CVRDriverManager
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x1DD972C", Offset = "0x1DD972C", VA = "0x1DD972C")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x1DD9958", Offset = "0x1DD9958", VA = "0x1DD9958")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x1DD99B4", Offset = "0x1DD99B4", VA = "0x1DD99B4")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x1DD9A40", Offset = "0x1DD9A40", VA = "0x1DD9A40")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x200021A")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x1CC1710", Offset = "0x1CC1710", VA = "0x1CC1710")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x1CC183C", Offset = "0x1CC183C", VA = "0x1CC183C")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x1CC1968", Offset = "0x1CC1968", VA = "0x1CC1968")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x1CC1ABC", Offset = "0x1CC1ABC", VA = "0x1CC1ABC")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x1CC1CD4", Offset = "0x1CC1CD4", VA = "0x1CC1CD4")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x1CC1E20", Offset = "0x1CC1E20", VA = "0x1CC1E20")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x1CC1FA8", Offset = "0x1CC1FA8", VA = "0x1CC1FA8")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x1CC2124", Offset = "0x1CC2124", VA = "0x1CC2124")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x1CC4934", Offset = "0x1CC4934", VA = "0x1CC4934")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public enum EVREye
	{
		[Token(Token = "0x40012FD")]
		Eye_Left,
		[Token(Token = "0x40012FE")]
		Eye_Right
	}
	[Token(Token = "0x200021C")]
	public enum ETextureType
	{
		[Token(Token = "0x4001300")]
		DirectX,
		[Token(Token = "0x4001301")]
		OpenGL,
		[Token(Token = "0x4001302")]
		Vulkan,
		[Token(Token = "0x4001303")]
		IOSurface,
		[Token(Token = "0x4001304")]
		DirectX12,
		[Token(Token = "0x4001305")]
		DXGISharedHandle
	}
	[Token(Token = "0x200021D")]
	public enum EColorSpace
	{
		[Token(Token = "0x4001307")]
		Auto,
		[Token(Token = "0x4001308")]
		Gamma,
		[Token(Token = "0x4001309")]
		Linear
	}
	[Token(Token = "0x200021E")]
	public enum ETrackingResult
	{
		[Token(Token = "0x400130B")]
		Uninitialized = 1,
		[Token(Token = "0x400130C")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x400130D")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x400130E")]
		Running_OK = 200,
		[Token(Token = "0x400130F")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x200021F")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x4001311")]
		Invalid,
		[Token(Token = "0x4001312")]
		HMD,
		[Token(Token = "0x4001313")]
		Controller,
		[Token(Token = "0x4001314")]
		GenericTracker,
		[Token(Token = "0x4001315")]
		TrackingReference,
		[Token(Token = "0x4001316")]
		DisplayRedirect
	}
	[Token(Token = "0x2000220")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4001318")]
		Invalid,
		[Token(Token = "0x4001319")]
		LeftHand,
		[Token(Token = "0x400131A")]
		RightHand,
		[Token(Token = "0x400131B")]
		OptOut
	}
	[Token(Token = "0x2000221")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x400131D")]
		TrackingUniverseSeated,
		[Token(Token = "0x400131E")]
		TrackingUniverseStanding,
		[Token(Token = "0x400131F")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x2000222")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x4001321")]
		Prop_Invalid = 0,
		[Token(Token = "0x4001322")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x4001323")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4001324")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4001325")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4001326")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4001327")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4001328")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4001329")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x400132A")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x400132B")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x400132C")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x400132D")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x400132E")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x400132F")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x4001330")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x4001331")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x4001332")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x4001333")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4001334")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4001335")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4001336")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4001337")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4001338")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4001339")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x400133A")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x400133B")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x400133C")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x400133D")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x400133E")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x400133F")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x4001340")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x4001341")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x4001342")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x4001343")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001344")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4001345")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001346")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001347")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001348")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x4001349")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x400134A")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x400134B")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x400134C")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x400134D")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x400134E")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x400134F")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x4001350")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x4001351")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x4001352")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x4001353")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x4001354")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4001355")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001356")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001357")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001358")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001359")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x400135A")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x400135B")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x400135C")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x400135D")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x400135E")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x400135F")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x4001360")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x4001361")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x4001362")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x4001363")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x4001364")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4001365")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001366")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001367")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001368")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001369")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x400136A")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x400136B")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x400136C")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x400136D")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x400136E")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x400136F")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x4001370")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x4001371")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x4001372")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x4001373")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x4001374")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x4001375")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x4001376")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x4001377")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4001378")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4001379")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x400137A")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x400137B")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x400137C")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x400137D")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x400137E")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x400137F")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x4001380")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x4001381")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x4001382")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x4001383")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x4001384")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x4001385")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x4001386")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4001387")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4001388")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4001389")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x400138A")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x400138B")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x400138C")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x400138D")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x400138E")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x400138F")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x4001390")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x4001391")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x4001392")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x4001393")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4001394")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4001395")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4001396")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4001397")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4001398")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4001399")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x400139A")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x400139B")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x400139C")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x400139D")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x400139E")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x400139F")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x40013A0")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x40013A1")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x40013A2")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x40013A3")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x40013A4")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x40013A5")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x40013A6")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x40013A7")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x40013A8")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x40013A9")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x40013AA")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x40013AB")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x40013AC")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x2000223")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x40013AE")]
		TrackedProp_Success,
		[Token(Token = "0x40013AF")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x40013B0")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x40013B1")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x40013B2")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x40013B3")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x40013B4")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x40013B5")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x40013B6")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x40013B7")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x40013B8")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x40013B9")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x40013BA")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x2000224")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x40013BC")]
		Submit_Default = 0,
		[Token(Token = "0x40013BD")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x40013BE")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x40013BF")]
		Submit_Reserved = 4,
		[Token(Token = "0x40013C0")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x40013C1")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x2000225")]
	public enum EVRState
	{
		[Token(Token = "0x40013C3")]
		Undefined = -1,
		[Token(Token = "0x40013C4")]
		Off,
		[Token(Token = "0x40013C5")]
		Searching,
		[Token(Token = "0x40013C6")]
		Searching_Alert,
		[Token(Token = "0x40013C7")]
		Ready,
		[Token(Token = "0x40013C8")]
		Ready_Alert,
		[Token(Token = "0x40013C9")]
		NotReady,
		[Token(Token = "0x40013CA")]
		Standby,
		[Token(Token = "0x40013CB")]
		Ready_Alert_Low
	}
	[Token(Token = "0x2000226")]
	public enum EVREventType
	{
		[Token(Token = "0x40013CD")]
		VREvent_None = 0,
		[Token(Token = "0x40013CE")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x40013CF")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x40013D0")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x40013D1")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x40013D2")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x40013D3")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x40013D4")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x40013D5")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x40013D6")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x40013D7")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x40013D8")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x40013D9")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x40013DA")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x40013DB")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x40013DC")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x40013DD")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x40013DE")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x40013DF")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x40013E0")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x40013E1")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x40013E2")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x40013E3")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x40013E4")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x40013E5")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x40013E6")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x40013E7")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x40013E8")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x40013E9")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x40013EA")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x40013EB")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x40013EC")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x40013ED")]
		VREvent_Scroll = 305,
		[Token(Token = "0x40013EE")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x40013EF")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x40013F0")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x40013F1")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x40013F2")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x40013F3")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x40013F4")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x40013F5")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x40013F6")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x40013F7")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x40013F8")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x40013F9")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x40013FA")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x40013FB")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x40013FC")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x40013FD")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x40013FE")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x40013FF")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4001400")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4001401")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x4001402")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4001403")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4001404")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4001405")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4001406")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4001407")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4001408")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4001409")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x400140A")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x400140B")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x400140C")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x400140D")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x400140E")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x400140F")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4001410")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4001411")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4001412")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4001413")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4001414")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4001415")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x4001416")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x4001417")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4001418")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4001419")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x400141A")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x400141B")]
		VREvent_Quit = 700,
		[Token(Token = "0x400141C")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x400141D")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x400141E")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x400141F")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4001420")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4001421")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x4001422")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4001423")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4001424")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4001425")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4001426")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4001427")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4001428")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4001429")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x400142A")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x400142B")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x400142C")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x400142D")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x400142E")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x400142F")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4001430")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4001431")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x4001432")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4001433")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x4001434")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x4001435")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x4001436")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4001437")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x4001438")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4001439")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x400143A")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x400143B")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x400143C")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x400143D")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x400143E")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x400143F")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4001440")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4001441")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4001442")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4001443")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4001444")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x4001445")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x4001446")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x4001447")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x4001448")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x4001449")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x400144A")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x400144B")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x400144C")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x400144D")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x400144E")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x400144F")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4001450")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4001451")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4001452")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4001453")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001454")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x4001455")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001456")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x2000227")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x4001458")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x4001459")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x400145A")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x400145B")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x400145C")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x2000228")]
	public enum EVRButtonId
	{
		[Token(Token = "0x400145E")]
		k_EButton_System = 0,
		[Token(Token = "0x400145F")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4001460")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4001461")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4001462")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4001463")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001464")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x4001465")]
		k_EButton_A = 7,
		[Token(Token = "0x4001466")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4001467")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x4001468")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x4001469")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x400146A")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x400146B")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x400146C")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x400146D")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x400146E")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x400146F")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x2000229")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4001471")]
		Left = 1,
		[Token(Token = "0x4001472")]
		Right = 2,
		[Token(Token = "0x4001473")]
		Middle = 4
	}
	[Token(Token = "0x200022A")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x4001475")]
		k_EDualAnalog_Left,
		[Token(Token = "0x4001476")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x200022B")]
	public enum EVRInputError
	{
		[Token(Token = "0x4001478")]
		None,
		[Token(Token = "0x4001479")]
		NameNotFound,
		[Token(Token = "0x400147A")]
		WrongType,
		[Token(Token = "0x400147B")]
		InvalidHandle,
		[Token(Token = "0x400147C")]
		InvalidParam,
		[Token(Token = "0x400147D")]
		NoSteam,
		[Token(Token = "0x400147E")]
		MaxCapacityReached,
		[Token(Token = "0x400147F")]
		IPCError,
		[Token(Token = "0x4001480")]
		NoActiveActionSet,
		[Token(Token = "0x4001481")]
		InvalidDevice
	}
	[Token(Token = "0x200022C")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4001483")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001484")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4001485")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001486")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x200022D")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4001488")]
		k_eControllerAxis_None,
		[Token(Token = "0x4001489")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x400148A")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x400148B")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x200022E")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x400148D")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x400148E")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x200022F")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4001490")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4001491")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4001492")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4001493")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001494")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4001495")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x2000230")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001497")]
		None = 0,
		[Token(Token = "0x4001498")]
		UnknownOverlay = 10,
		[Token(Token = "0x4001499")]
		InvalidHandle = 11,
		[Token(Token = "0x400149A")]
		PermissionDenied = 12,
		[Token(Token = "0x400149B")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x400149C")]
		WrongVisibilityType = 14,
		[Token(Token = "0x400149D")]
		KeyTooLong = 15,
		[Token(Token = "0x400149E")]
		NameTooLong = 16,
		[Token(Token = "0x400149F")]
		KeyInUse = 17,
		[Token(Token = "0x40014A0")]
		WrongTransformType = 18,
		[Token(Token = "0x40014A1")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x40014A2")]
		InvalidParameter = 20,
		[Token(Token = "0x40014A3")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x40014A4")]
		ArrayTooSmall = 22,
		[Token(Token = "0x40014A5")]
		RequestFailed = 23,
		[Token(Token = "0x40014A6")]
		InvalidTexture = 24,
		[Token(Token = "0x40014A7")]
		UnableToLoadFile = 25,
		[Token(Token = "0x40014A8")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x40014A9")]
		NoNeighbor = 27,
		[Token(Token = "0x40014AA")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x40014AB")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x40014AC")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x40014AD")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x40014AE")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x2000231")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x40014B0")]
		VRApplication_Other,
		[Token(Token = "0x40014B1")]
		VRApplication_Scene,
		[Token(Token = "0x40014B2")]
		VRApplication_Overlay,
		[Token(Token = "0x40014B3")]
		VRApplication_Background,
		[Token(Token = "0x40014B4")]
		VRApplication_Utility,
		[Token(Token = "0x40014B5")]
		VRApplication_VRMonitor,
		[Token(Token = "0x40014B6")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x40014B7")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x40014B8")]
		VRApplication_Max
	}
	[Token(Token = "0x2000232")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x40014BA")]
		None,
		[Token(Token = "0x40014BB")]
		Success,
		[Token(Token = "0x40014BC")]
		Fail
	}
	[Token(Token = "0x2000233")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x40014BE")]
		OK = 0,
		[Token(Token = "0x40014BF")]
		InvalidNotificationId = 100,
		[Token(Token = "0x40014C0")]
		NotificationQueueFull = 101,
		[Token(Token = "0x40014C1")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x40014C2")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x2000234")]
	public enum EVRInitError
	{
		[Token(Token = "0x40014C4")]
		None = 0,
		[Token(Token = "0x40014C5")]
		Unknown = 1,
		[Token(Token = "0x40014C6")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x40014C7")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x40014C8")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x40014C9")]
		Init_FileNotFound = 103,
		[Token(Token = "0x40014CA")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x40014CB")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x40014CC")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x40014CD")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x40014CE")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x40014CF")]
		Init_NotInitialized = 109,
		[Token(Token = "0x40014D0")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x40014D1")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x40014D2")]
		Init_NoLogPath = 112,
		[Token(Token = "0x40014D3")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x40014D4")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x40014D5")]
		Init_Retry = 115,
		[Token(Token = "0x40014D6")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x40014D7")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x40014D8")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x40014D9")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x40014DA")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x40014DB")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x40014DC")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x40014DD")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x40014DE")]
		Init_Internal = 124,
		[Token(Token = "0x40014DF")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x40014E0")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x40014E1")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x40014E2")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x40014E3")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x40014E4")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x40014E5")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x40014E6")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x40014E7")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x40014E8")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x40014E9")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x40014EA")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x40014EB")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x40014EC")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x40014ED")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x40014EE")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x40014EF")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x40014F0")]
		Driver_Failed = 200,
		[Token(Token = "0x40014F1")]
		Driver_Unknown = 201,
		[Token(Token = "0x40014F2")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x40014F3")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x40014F4")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x40014F5")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x40014F6")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x40014F7")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x40014F8")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x40014F9")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x40014FA")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x40014FB")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x40014FC")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x40014FD")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x40014FE")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x40014FF")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4001500")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4001501")]
		IPC_Failed = 305,
		[Token(Token = "0x4001502")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4001503")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4001504")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4001505")]
		Compositor_Failed = 400,
		[Token(Token = "0x4001506")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4001507")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4001508")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4001509")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x400150A")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x400150B")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x400150C")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x400150D")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x400150E")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x400150F")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4001510")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4001511")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4001512")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4001513")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4001514")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4001515")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4001516")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4001517")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4001518")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4001519")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x400151A")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x2000235")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x400151C")]
		None,
		[Token(Token = "0x400151D")]
		Mono,
		[Token(Token = "0x400151E")]
		Stereo,
		[Token(Token = "0x400151F")]
		Cubemap,
		[Token(Token = "0x4001520")]
		MonoPanorama,
		[Token(Token = "0x4001521")]
		StereoPanorama
	}
	[Token(Token = "0x2000236")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4001523")]
		Preview,
		[Token(Token = "0x4001524")]
		VR
	}
	[Token(Token = "0x2000237")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4001526")]
		None = 0,
		[Token(Token = "0x4001527")]
		OperationFailed = 100,
		[Token(Token = "0x4001528")]
		InvalidHandle = 101,
		[Token(Token = "0x4001529")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x400152A")]
		OutOfHandles = 103,
		[Token(Token = "0x400152B")]
		IPCFailure = 104,
		[Token(Token = "0x400152C")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x400152D")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x400152E")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x400152F")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4001530")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4001531")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4001532")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4001533")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4001534")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4001535")]
		InvalidArgument = 114,
		[Token(Token = "0x4001536")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x2000238")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4001538")]
		Distorted,
		[Token(Token = "0x4001539")]
		Undistorted,
		[Token(Token = "0x400153A")]
		MaximumUndistorted,
		[Token(Token = "0x400153B")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x2000239")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x400153D")]
		None = 0,
		[Token(Token = "0x400153E")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x400153F")]
		NoManifest = 101,
		[Token(Token = "0x4001540")]
		NoApplication = 102,
		[Token(Token = "0x4001541")]
		InvalidIndex = 103,
		[Token(Token = "0x4001542")]
		UnknownApplication = 104,
		[Token(Token = "0x4001543")]
		IPCFailed = 105,
		[Token(Token = "0x4001544")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001545")]
		InvalidManifest = 107,
		[Token(Token = "0x4001546")]
		InvalidApplication = 108,
		[Token(Token = "0x4001547")]
		LaunchFailed = 109,
		[Token(Token = "0x4001548")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4001549")]
		LaunchInProgress = 111,
		[Token(Token = "0x400154A")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x400154B")]
		TransitionAborted = 113,
		[Token(Token = "0x400154C")]
		IsTemplate = 114,
		[Token(Token = "0x400154D")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x400154E")]
		BufferTooSmall = 200,
		[Token(Token = "0x400154F")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001550")]
		UnknownProperty = 202,
		[Token(Token = "0x4001551")]
		InvalidParameter = 203
	}
	[Token(Token = "0x200023A")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001553")]
		Name_String = 0,
		[Token(Token = "0x4001554")]
		LaunchType_String = 11,
		[Token(Token = "0x4001555")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4001556")]
		BinaryPath_String = 13,
		[Token(Token = "0x4001557")]
		Arguments_String = 14,
		[Token(Token = "0x4001558")]
		URL_String = 15,
		[Token(Token = "0x4001559")]
		Description_String = 50,
		[Token(Token = "0x400155A")]
		NewsURL_String = 51,
		[Token(Token = "0x400155B")]
		ImagePath_String = 52,
		[Token(Token = "0x400155C")]
		Source_String = 53,
		[Token(Token = "0x400155D")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x400155E")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x400155F")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4001560")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4001561")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4001562")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001563")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x200023B")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001565")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4001566")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4001567")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4001568")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x200023C")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x400156A")]
		OK = 1,
		[Token(Token = "0x400156B")]
		Warning = 100,
		[Token(Token = "0x400156C")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x400156D")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x400156E")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x400156F")]
		Error = 200,
		[Token(Token = "0x4001570")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4001571")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4001572")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001573")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x200023D")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001575")]
		Live = 1,
		[Token(Token = "0x4001576")]
		Temp
	}
	[Token(Token = "0x200023E")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4001578")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x200023F")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x400157A")]
		None = 0,
		[Token(Token = "0x400157B")]
		RequestFailed = 1,
		[Token(Token = "0x400157C")]
		IncompatibleVersion = 100,
		[Token(Token = "0x400157D")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x400157E")]
		InvalidTexture = 102,
		[Token(Token = "0x400157F")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4001580")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4001581")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4001582")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4001583")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001584")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001585")]
		InvalidBounds = 109
	}
	[Token(Token = "0x2000240")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4001587")]
		Implicit,
		[Token(Token = "0x4001588")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x4001589")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x2000241")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x400158B")]
		None,
		[Token(Token = "0x400158C")]
		Mouse,
		[Token(Token = "0x400158D")]
		DualAnalog
	}
	[Token(Token = "0x2000242")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x400158F")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4001590")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4001591")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4001592")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x2000243")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4001594")]
		None,
		[Token(Token = "0x4001595")]
		Curved,
		[Token(Token = "0x4001596")]
		RGSS4X,
		[Token(Token = "0x4001597")]
		NoDashboardTab,
		[Token(Token = "0x4001598")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4001599")]
		ShowGamepadFocus,
		[Token(Token = "0x400159A")]
		SendVRScrollEvents,
		[Token(Token = "0x400159B")]
		SendVRTouchpadEvents,
		[Token(Token = "0x400159C")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x400159D")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x400159E")]
		SideBySide_Parallel,
		[Token(Token = "0x400159F")]
		SideBySide_Crossed,
		[Token(Token = "0x40015A0")]
		Panorama,
		[Token(Token = "0x40015A1")]
		StereoPanorama,
		[Token(Token = "0x40015A2")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x40015A3")]
		VisibleInDashboard
	}
	[Token(Token = "0x2000244")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x40015A5")]
		ButtonPress_0,
		[Token(Token = "0x40015A6")]
		ButtonPress_1,
		[Token(Token = "0x40015A7")]
		ButtonPress_2,
		[Token(Token = "0x40015A8")]
		ButtonPress_3,
		[Token(Token = "0x40015A9")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x40015AA")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x40015AB")]
		ApplicationQuit
	}
	[Token(Token = "0x2000245")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x40015AD")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x40015AE")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x40015AF")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x2000246")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x40015B1")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x40015B2")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x2000247")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x40015B4")]
		Up,
		[Token(Token = "0x40015B5")]
		Down,
		[Token(Token = "0x40015B6")]
		Left,
		[Token(Token = "0x40015B7")]
		Right,
		[Token(Token = "0x40015B8")]
		Count
	}
	[Token(Token = "0x2000248")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x40015BA")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x40015BB")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x2000249")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x40015BD")]
		None = 0,
		[Token(Token = "0x40015BE")]
		Loading = 100,
		[Token(Token = "0x40015BF")]
		NotSupported = 200,
		[Token(Token = "0x40015C0")]
		InvalidArg = 300,
		[Token(Token = "0x40015C1")]
		InvalidModel = 301,
		[Token(Token = "0x40015C2")]
		NoShapes = 302,
		[Token(Token = "0x40015C3")]
		MultipleShapes = 303,
		[Token(Token = "0x40015C4")]
		TooManyVertices = 304,
		[Token(Token = "0x40015C5")]
		MultipleTextures = 305,
		[Token(Token = "0x40015C6")]
		BufferTooSmall = 306,
		[Token(Token = "0x40015C7")]
		NotEnoughNormals = 307,
		[Token(Token = "0x40015C8")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x40015C9")]
		InvalidTexture = 400
	}
	[Token(Token = "0x200024A")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x40015CB")]
		IsStatic = 1,
		[Token(Token = "0x40015CC")]
		IsVisible = 2,
		[Token(Token = "0x40015CD")]
		IsTouched = 4,
		[Token(Token = "0x40015CE")]
		IsPressed = 8,
		[Token(Token = "0x40015CF")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x200024B")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x40015D1")]
		Transient,
		[Token(Token = "0x40015D2")]
		Persistent,
		[Token(Token = "0x40015D3")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x200024C")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x40015D5")]
		None = 0,
		[Token(Token = "0x40015D6")]
		Application = 100,
		[Token(Token = "0x40015D7")]
		Contact_Disabled = 200,
		[Token(Token = "0x40015D8")]
		Contact_Enabled = 201,
		[Token(Token = "0x40015D9")]
		Contact_Active = 202
	}
	[Token(Token = "0x200024D")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x40015DB")]
		None,
		[Token(Token = "0x40015DC")]
		IPCFailed,
		[Token(Token = "0x40015DD")]
		WriteFailed,
		[Token(Token = "0x40015DE")]
		ReadFailed,
		[Token(Token = "0x40015DF")]
		JsonParseFailed,
		[Token(Token = "0x40015E0")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x200024E")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x40015E2")]
		None = 0,
		[Token(Token = "0x40015E3")]
		RequestFailed = 1,
		[Token(Token = "0x40015E4")]
		IncompatibleVersion = 100,
		[Token(Token = "0x40015E5")]
		NotFound = 101,
		[Token(Token = "0x40015E6")]
		BufferTooSmall = 102,
		[Token(Token = "0x40015E7")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x200024F")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3D34")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x267B")]
		public VREvent_Process_t process;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3D44")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2683")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3D54")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268B")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3D64")]
		public VREvent_Property_t property;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000250")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2693")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x2000251")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3D74")]
		public float m0;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m1;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m2;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m3;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x269B")]
		public float m4;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float m5;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3D84")]
		public float m6;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m7;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m8;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m9;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26A3")]
		public float m10;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float m11;
	}
	[Token(Token = "0x2000252")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3D94")]
		public float m0;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m1;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m2;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m3;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26AB")]
		public float m4;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float m5;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3DA4")]
		public float m6;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m7;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m8;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m9;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26B3")]
		public float m10;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float m11;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3DB4")]
		public float m12;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m13;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m14;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m15;
	}
	[Token(Token = "0x2000253")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26BB")]
		public float v0;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float v1;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3DC4")]
		public float v2;
	}
	[Token(Token = "0x2000254")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v1;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v2;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C3")]
		public float v3;
	}
	[Token(Token = "0x2000255")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public double v0;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3DD4")]
		public double v1;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v2;
	}
	[Token(Token = "0x2000256")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v1;
	}
	[Token(Token = "0x2000257")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26CB")]
		public double w;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public double x;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3DE4")]
		public double y;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double z;
	}
	[Token(Token = "0x2000258")]
	public struct HmdColor_t
	{
		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float g;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26D3")]
		public float b;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float a;
	}
	[Token(Token = "0x2000259")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3DF4")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x200025A")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26DB")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x200025B")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3E04")]
		public float rfRed0;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed1;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfGreen0;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfGreen1;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26E3")]
		public float rfBlue0;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float rfBlue1;
	}
	[Token(Token = "0x200025C")]
	public struct Texture_t
	{
		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3E14")]
		public IntPtr handle;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ETextureType eType;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x200025D")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26EB")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3E24")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x200025E")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26F3")]
		public float vMin;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float uMax;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3E34")]
		public float vMax;
	}
	[Token(Token = "0x200025F")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x2000260")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26FB")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x2000261")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000262")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3E44")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000263")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2703")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3E54")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nWidth;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nHeight;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFormat;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270B")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x2000264")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public IntPtr m_pResource;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3E64")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x2000265")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x2000266")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2713")]
		public float y;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public uint button;
	}
	[Token(Token = "0x2000267")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3E74")]
		public float xdelta;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ydelta;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint repeatCount;
	}
	[Token(Token = "0x2000268")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x271B")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float fValueXFirst;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3E84")]
		public float fValueYFirst;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fValueXRaw;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fValueYRaw;
	}
	[Token(Token = "0x2000269")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2723")]
		public uint notificationId;
	}
	[Token(Token = "0x200026A")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public uint pid;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3E94")]
		public uint oldPid;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bForced;
	}
	[Token(Token = "0x200026B")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x200026C")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x200026D")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x272B")]
		public byte cNewInput0;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public byte cNewInput1;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3EA4")]
		public byte cNewInput2;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput3;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput4;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput5;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2733")]
		public byte cNewInput6;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public byte cNewInput7;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3EB4")]
		public ulong uUserValue;
	}
	[Token(Token = "0x200026E")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x200026F")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x2000270")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x273B")]
		public ulong reserved0;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public ulong reserved1;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3EC4")]
		public ulong reserved2;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved3;
	}
	[Token(Token = "0x2000271")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000272")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000273")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2743")]
		public uint handle;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public uint type;
	}
	[Token(Token = "0x2000274")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3ED4")]
		public float progress;
	}
	[Token(Token = "0x2000275")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x2000276")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274B")]
		public uint nVisualMode;
	}
	[Token(Token = "0x2000277")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x2000278")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3EE4")]
		public ulong container;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x2000279")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float y;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2753")]
		public float transformedX;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float transformedY;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3EF4")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x200027A")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong componentHandle;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fDurationSeconds;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x275B")]
		public float fFrequency;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float fAmplitude;
	}
	[Token(Token = "0x200027B")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3F04")]
		public uint eventType;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x200027C")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2763")]
		public uint eventType;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3F14")]
		public float eventAgeSeconds;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Data_t data;

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xC08220", Offset = "0xC08220", VA = "0xC08220")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xC0839C", Offset = "0xC0839C", VA = "0xC0839C")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x200027D")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x200027E")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x276B")]
		public float x;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float y;
	}
	[Token(Token = "0x200027F")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3F24")]
		public uint unPacketNum;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulButtonPressed;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulButtonTouched;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2773")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3F34")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x2000280")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulButtonPressed;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x277B")]
		public ulong ulButtonTouched;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3F44")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xC07CDC", Offset = "0xC07CDC", VA = "0xC07CDC")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xC08108", Offset = "0xC08108", VA = "0xC08108")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000281")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2783")]
		public uint size;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public bool curved;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3F54")]
		public bool antialias;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float scale;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float alpha;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278B")]
		public float uOffset;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float vOffset;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3F64")]
		public float uScale;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float vScale;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float gridDivs;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float gridWidth;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2793")]
		public float gridScale;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000282")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3F74")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint nWidth;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint nHeight;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint nBytesPerPixel;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x279B")]
		public uint nFrameSequence;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000283")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3F84")]
		public uint m_nSize;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27A3")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x2000284")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public IntPtr pchKey;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3F94")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x2000285")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFrameIndex;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27AB")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3FA4")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27B3")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3FB4")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27BB")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3FC4")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C3")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3FD4")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x2000286")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27CB")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3FE4")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumLoading;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27D3")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B3FF4")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x2000287")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27DB")]
		public HmdVector3_t vSource;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4004")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x2000288")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27E3")]
		public float fDistance;
	}
	[Token(Token = "0x2000289")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float m_flTopLeftX;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4014")]
		public float m_flTopLeftY;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flWidth;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flHeight;
	}
	[Token(Token = "0x200028A")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27EB")]
		public float m_flCenterY;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public float m_flRadius;
	}
	[Token(Token = "0x200028B")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4024")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x200028C")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27F3")]
		public uint uProperties;
	}
	[Token(Token = "0x200028D")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4034")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfTextureCoord0;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x200028E")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27FB")]
		public char unHeight;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x200028F")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4044")]
		public char unWidth;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unHeight;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xC075CC", Offset = "0xC075CC", VA = "0xC075CC")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xC07658", Offset = "0xC07658", VA = "0xC07658")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000290")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2803")]
		public uint unVertexCount;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4054")]
		public uint unTriangleCount;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000291")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVertexCount;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280B")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public uint unTriangleCount;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4064")]
		public int diffuseTextureId;

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xC0776C", Offset = "0xC0776C", VA = "0xC0776C")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xC078FC", Offset = "0xC078FC", VA = "0xC078FC")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000292")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000293")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_nWidth;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2813")]
		public int m_nHeight;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x2000294")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4074")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x281B")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4084")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2823")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBFFF0")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4094")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x2000295")]
	public class OpenVR
	{
		[Token(Token = "0x2000708")]
		private class COpenVRContext
		{
			[Token(Token = "0x4002B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4002B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x293B")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4002B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4002B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30B42B4")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4002B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4002B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4002B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4002B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2943")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x4002B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4002B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30B42C4")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x4002B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x6002B78")]
			[Address(RVA = "0x1CC2620", Offset = "0x1CC2620", VA = "0x1CC2620")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x6002B79")]
			[Address(RVA = "0x1CC4580", Offset = "0x1CC4580", VA = "0x1CC4580")]
			public void Clear()
			{
			}

			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0x1CC4798", Offset = "0x1CC4798", VA = "0x1CC4798")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0x1CC2760", Offset = "0x1CC2760", VA = "0x1CC2760")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0x1CC29EC", Offset = "0x1CC29EC", VA = "0x1CC29EC")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0x1CC2C78", Offset = "0x1CC2C78", VA = "0x1CC2C78")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0x1CC2F04", Offset = "0x1CC2F04", VA = "0x1CC2F04")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0x1CC3190", Offset = "0x1CC3190", VA = "0x1CC3190")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x6002B80")]
			[Address(RVA = "0x1CC341C", Offset = "0x1CC341C", VA = "0x1CC341C")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x6002B81")]
			[Address(RVA = "0x1CC36A8", Offset = "0x1CC36A8", VA = "0x1CC36A8")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x6002B82")]
			[Address(RVA = "0x1CC3934", Offset = "0x1CC3934", VA = "0x1CC3934")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x6002B83")]
			[Address(RVA = "0x1CC3BC0", Offset = "0x1CC3BC0", VA = "0x1CC3BC0")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x6002B84")]
			[Address(RVA = "0x1CC3E4C", Offset = "0x1CC3E4C", VA = "0x1CC3E4C")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x6002B85")]
			[Address(RVA = "0x1CC40D8", Offset = "0x1CC40D8", VA = "0x1CC40D8")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x400172D")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x400172E")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x400172F")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4001730")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4001731")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4001732")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4001733")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4001734")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4001735")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x4001736")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4001737")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x4001738")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x4001739")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x400173A")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x400173B")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x400173C")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x400173D")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x400173E")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x400173F")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4001740")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4001741")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4001742")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4001743")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4001744")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4001745")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4001746")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4001747")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4001748")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4001749")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x400174A")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x400174B")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x400174C")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x400174D")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x400174E")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x400174F")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4001750")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4001751")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4001752")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4001753")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001754")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001755")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001756")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001757")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001758")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4001759")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x400175A")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x400175B")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x400175C")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x400175D")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x400175E")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x400175F")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4001760")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4001761")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4001762")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4001763")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001764")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001765")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001766")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001767")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001768")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4001769")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x400176A")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x400176B")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x400176C")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x400176D")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x400176E")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x400176F")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4001770")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4001771")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4001772")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4001773")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001774")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001775")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001776")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001777")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4001778")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4001779")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x400177A")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x400177B")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x400177C")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x400177D")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x400177E")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x400177F")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x4001780")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x4001781")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4001782")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4001783")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4001784")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4001785")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4001786")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4001787")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4001788")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4001789")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x400178A")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x400178B")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x400178C")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x400178D")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x400178E")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x400178F")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x4001790")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x4001791")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4001792")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4001793")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x4001794")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4001795")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4001796")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4001797")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4001798")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4001799")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x400179A")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x400179B")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x400179C")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x400179D")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x400179E")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x400179F")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x40017A0")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x40017A1")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x40017A2")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x40017A3")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x40017A4")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x40017A5")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x40017A6")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x40017A7")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x40017A8")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x40017A9")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x40017AA")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x40017AB")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x40017AC")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x40017AD")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x40017AE")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x40017AF")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x40017B0")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x40017B1")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x40017B2")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x40017B3")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x40017B4")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x40017B5")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x40017B6")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x40017B7")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x40017B8")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x40017B9")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x40017BA")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x40017BB")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x40017BC")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x40017BD")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x40017BE")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x40017BF")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x40017C0")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x40017C1")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x40017C2")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x40017C3")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x40017C4")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x40017C5")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x40017C6")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x40017C7")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x40017C8")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x40017C9")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x40017CA")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x40017CB")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x40017CC")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x40017CD")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x40017CE")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x40017CF")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x40017D0")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x40017D1")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x40017D2")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x40017D3")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x40017D4")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x40017D5")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x40017D6")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x40017D7")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x40017D8")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x40017D9")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x40017DA")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x40017DB")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x40017DC")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x40017DD")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x40017DE")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x40017DF")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x40017E0")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x40017E1")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x40017E2")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x40017E3")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x40017E4")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x40017E5")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x40017E6")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x40017E7")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x40017E8")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x40017E9")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x40017EA")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x40017EB")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B42A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890CD4", Offset = "0x890CD4")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x40017ED")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170000BE")]
		private static uint VRToken
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x1CC2214", Offset = "0x1CC2214", VA = "0x1CC2214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA954", Offset = "0x8AA954")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x1CC22FC", Offset = "0x1CC22FC", VA = "0x1CC22FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA990", Offset = "0x8AA990")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0x1CC23EC", Offset = "0x1CC23EC", VA = "0x1CC23EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public static CVRSystem System
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x1CC2660", Offset = "0x1CC2660", VA = "0x1CC2660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x1CC28EC", Offset = "0x1CC28EC", VA = "0x1CC28EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x6001200")]
			[Address(RVA = "0x1CC2B78", Offset = "0x1CC2B78", VA = "0x1CC2B78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0x1CC2E04", Offset = "0x1CC2E04", VA = "0x1CC2E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x6001202")]
			[Address(RVA = "0x1CC3090", Offset = "0x1CC3090", VA = "0x1CC3090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0x1CC331C", Offset = "0x1CC331C", VA = "0x1CC331C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x1CC35A8", Offset = "0x1CC35A8", VA = "0x1CC35A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0x1CC3834", Offset = "0x1CC3834", VA = "0x1CC3834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0x1CC3AC0", Offset = "0x1CC3AC0", VA = "0x1CC3AC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x6001207")]
			[Address(RVA = "0x1CC3D4C", Offset = "0x1CC3D4C", VA = "0x1CC3D4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0x1CC3FD8", Offset = "0x1CC3FD8", VA = "0x1CC3FD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x1CC16C0", Offset = "0x1CC16C0", VA = "0x1CC16C0")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x1CC1814", Offset = "0x1CC1814", VA = "0x1CC1814")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x1CC1924", Offset = "0x1CC1924", VA = "0x1CC1924")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x1CC1A78", Offset = "0x1CC1A78", VA = "0x1CC1A78")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x1CC1BCC", Offset = "0x1CC1BCC", VA = "0x1CC1BCC")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x1CC1DD0", Offset = "0x1CC1DD0", VA = "0x1CC1DD0")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x1CC1F54", Offset = "0x1CC1F54", VA = "0x1CC1F54")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x1CC20F4", Offset = "0x1CC20F4", VA = "0x1CC20F4")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x1CC4264", Offset = "0x1CC4264", VA = "0x1CC4264")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1CC4678", Offset = "0x1CC4678", VA = "0x1CC4678")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1CC4758", Offset = "0x1CC4758", VA = "0x1CC4758")]
		public OpenVR()
		{
		}
	}
}
namespace Progreso
{
	[Token(Token = "0x2000296")]
	public class PlayerProgreso : MonoBehaviour
	{
		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerProgreso instance;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int dificultadActual;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294B")]
		public Vector2 resolucionPantalla;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		[HideInInspector]
		public int rachaVictorias;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B42D4")]
		[HideInInspector]
		public int rachaDerrotas;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool tengoLIVActivado;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LIV.SDK.Unity.LIV liv;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int proTipQueTocaMostrar;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2953")]
		public bool MostrarMensajeNoPoerUpUsado;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public bool PowerUpUsado;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B42E4")]
		public bool MostrarMensajeTipCambiarGancho;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ultimoNivelPasado;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ultimoPaisPasado;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool primeroRequest;

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x142683C", Offset = "0x142683C", VA = "0x142683C")]
		public PlayerProgreso()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1426910", Offset = "0x1426910", VA = "0x1426910")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1426D58", Offset = "0x1426D58", VA = "0x1426D58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1426F04", Offset = "0x1426F04", VA = "0x1426F04")]
		public void ResetearPlayerProgreso()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x1426F18", Offset = "0x1426F18", VA = "0x1426F18")]
		public string ConvertirINTaSTRING10(int num)
		{
			return null;
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x14270C4", Offset = "0x14270C4", VA = "0x14270C4")]
		public int ConvertirSTRINGaINT(string num)
		{
			return default(int);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x1427238", Offset = "0x1427238", VA = "0x1427238")]
		public void SetRachaVictoriasDerrotas(bool victoria)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x1427258", Offset = "0x1427258", VA = "0x1427258")]
		public void GuardarSettings()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x142726C", Offset = "0x142726C", VA = "0x142726C")]
		public void CargarSettings()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x1427280", Offset = "0x1427280", VA = "0x1427280")]
		public void ResetearEstado()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x1426D88", Offset = "0x1426D88", VA = "0x1426D88")]
		public void CargarPaisYNivelPasado()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x14274A8", Offset = "0x14274A8", VA = "0x14274A8")]
		public void GuardarNuevoPaisPasado()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x1427684", Offset = "0x1427684", VA = "0x1427684")]
		public void GuardarNuevoNivelPasado()
		{
		}
	}
}
namespace PA.ParticleField.Samples
{
	[Token(Token = "0x2000297")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x295B")]
		public TextMesh texto;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public float updateInterval;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B42F4")]
		private float accum;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int frames;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float timeleft;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string frameString;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2963")]
		public int avgFrameRate;

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x1402368", Offset = "0x1402368", VA = "0x1402368")]
		private void Start()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x140240C", Offset = "0x140240C", VA = "0x140240C")]
		private void Update()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x1402608", Offset = "0x1402608", VA = "0x1402608")]
		private void UpdateNuevo()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x1402728", Offset = "0x1402728", VA = "0x1402728")]
		public FPSCounter()
		{
		}
	}
}
namespace Performance
{
	[Token(Token = "0x2000298")]
	public class FpsToText : MonoBehaviour
	{
		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x890DC4", Offset = "0x890DC4")]
		public bool GroupSampling;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4304")]
		public int SampleSize;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x890E28", Offset = "0x890E28")]
		public TextMesh TargetText;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int UpdateTextEvery;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int MaxTextLength;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x296B")]
		public bool Smoothed;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public bool ForceIntResult;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4314")]
		public bool ZeroAllocOnly;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x890E8C", Offset = "0x890E8C")]
		public bool UseSystemTick;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x890EF0", Offset = "0x890EF0")]
		public bool UseColors;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color Good;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2973")]
		public Color Okay;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		public Color Bad;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4324")]
		public int OkayBelow;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int BadBelow;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float[] FpsSamples;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int SampleIndex;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x297B")]
		protected int TextUpdateIndex;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		private float _fps;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4334")]
		private int _sysLastSysTick;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _sysLastFrameRate;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _sysFrameRate;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string _localfps;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2983")]
		private static readonly string[] FpsStringMap;

		[Token(Token = "0x170000CB")]
		public float Framerate
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x1188A84", Offset = "0x1188A84", VA = "0x1188A84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x1188AB4", Offset = "0x1188AB4", VA = "0x1188AB4", Slot = "4")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x1188BF0", Offset = "0x1188BF0", VA = "0x1188BF0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x1188F3C", Offset = "0x1188F3C", VA = "0x1188F3C", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x1189764", Offset = "0x1189764", VA = "0x1189764", Slot = "7")]
		protected virtual void SingleFrame()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x11898FC", Offset = "0x11898FC", VA = "0x11898FC", Slot = "8")]
		protected virtual void Group()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1189C78", Offset = "0x1189C78", VA = "0x1189C78", Slot = "9")]
		protected virtual int GetSystemFramerate()
		{
			return default(int);
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x1189D78", Offset = "0x1189D78", VA = "0x1189D78")]
		public FpsToText()
		{
		}
	}
}
namespace MK.Glow
{
	[Token(Token = "0x2000299")]
	internal abstract class CameraData
	{
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0000")]
		internal int width;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30B4344")]
		internal int height;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal bool stereoEnabled;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal float aspect;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Matrix4x4 worldToCameraMatrix;

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x174D9F0", Offset = "0x174D9F0", VA = "0x174D9F0")]
		protected CameraData()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public enum Workflow
	{
		[Token(Token = "0x4001822")]
		Threshold,
		[Token(Token = "0x4001823")]
		Selective,
		[Token(Token = "0x4001824")]
		Natural
	}
	[Token(Token = "0x200029B")]
	public enum Quality
	{
		[Token(Token = "0x4001826")]
		Ultra = 1,
		[Token(Token = "0x4001827")]
		High = 2,
		[Token(Token = "0x4001828")]
		Medium = 4,
		[Token(Token = "0x4001829")]
		Low = 8,
		[Token(Token = "0x400182A")]
		VeryLow = 12
	}
	[Token(Token = "0x200029C")]
	public enum DebugView
	{
		[Token(Token = "0x400182C")]
		None,
		[Token(Token = "0x400182D")]
		RawBloom,
		[Token(Token = "0x400182E")]
		RawLensFlare,
		[Token(Token = "0x400182F")]
		RawGlare,
		[Token(Token = "0x4001830")]
		Bloom,
		[Token(Token = "0x4001831")]
		LensFlare,
		[Token(Token = "0x4001832")]
		Glare,
		[Token(Token = "0x4001833")]
		Composite
	}
	[Token(Token = "0x200029D")]
	public enum RenderPriority
	{
		[Token(Token = "0x4001835")]
		Quality,
		[Token(Token = "0x4001836")]
		Balanced,
		[Token(Token = "0x4001837")]
		Performance
	}
	[Token(Token = "0x200029E")]
	public enum LensFlareStyle
	{
		[Token(Token = "0x4001839")]
		Custom,
		[Token(Token = "0x400183A")]
		Average,
		[Token(Token = "0x400183B")]
		MultiAverage,
		[Token(Token = "0x400183C")]
		Old,
		[Token(Token = "0x400183D")]
		OldFocused,
		[Token(Token = "0x400183E")]
		Distorted
	}
	[Token(Token = "0x200029F")]
	public enum GlareStyle
	{
		[Token(Token = "0x4001840")]
		Custom,
		[Token(Token = "0x4001841")]
		Line,
		[Token(Token = "0x4001842")]
		Tri,
		[Token(Token = "0x4001843")]
		Cross,
		[Token(Token = "0x4001844")]
		DistortedCross,
		[Token(Token = "0x4001845")]
		Star,
		[Token(Token = "0x4001846")]
		Flake
	}
	[Token(Token = "0x20002A0")]
	internal struct RenderDimension : IDimension
	{
		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890F54", Offset = "0x890F54")]
		private int <width>k__BackingField;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x890F90", Offset = "0x890F90")]
		private int <height>k__BackingField;

		[Token(Token = "0x170000CC")]
		public int width
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0x9F311C", Offset = "0x9F311C", VA = "0x9F311C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AA9CC", Offset = "0x8AA9CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600122B")]
			[Address(RVA = "0x9F3190", Offset = "0x9F3190", VA = "0x9F3190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA08", Offset = "0x8AAA08")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public int height
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0x9F3204", Offset = "0x9F3204", VA = "0x9F3204", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA44", Offset = "0x8AAA44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x9F3278", Offset = "0x9F3278", VA = "0x9F3278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAA80", Offset = "0x8AAA80")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public RenderDimension renderDimension
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x9F32D4", Offset = "0x9F32D4", VA = "0x9F32D4", Slot = "6")]
			get
			{
				return default(RenderDimension);
			}
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x9F30A0", Offset = "0x9F30A0", VA = "0x9F30A0")]
		public RenderDimension(int width, int height)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	internal enum RenderPipeline
	{
		[Token(Token = "0x400184A")]
		Legacy,
		[Token(Token = "0x400184B")]
		SRP
	}
	[Token(Token = "0x20002A2")]
	public static class Compatibility
	{
		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly bool _defaultHDRFormatSupported;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA51C")]
		private static readonly bool _11R11G10BFormatSupported;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly bool _2A10R10G10BFormatSupported;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98EF44")]
		public static readonly bool IsSupported;

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x174DA20", Offset = "0x174DA20", VA = "0x174DA20")]
		public static bool CheckGeometryShaderSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x174DD0C", Offset = "0x174DD0C", VA = "0x174DD0C")]
		public static bool CheckComputeShaderSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x174DF44", Offset = "0x174DF44", VA = "0x174DF44")]
		public static bool CheckLensFlareFeatureSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x174E340", Offset = "0x174E340", VA = "0x174E340")]
		public static bool CheckGlareFeatureSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x174E704", Offset = "0x174E704", VA = "0x174E704")]
		internal static RenderTextureFormat CheckSupportedRenderTextureFormat()
		{
			return default(RenderTextureFormat);
		}
	}
	[Token(Token = "0x20002A3")]
	internal sealed class ComputeShaderVariants
	{
		[Token(Token = "0x2000709")]
		internal static class KeywordValues
		{
			[Token(Token = "0x4002B5A")]
			internal const int BLOOM = 1;

			[Token(Token = "0x4002B5B")]
			internal const int LENS_SURFACE = 1;

			[Token(Token = "0x4002B5C")]
			internal const int LENS_FLARE = 1;

			[Token(Token = "0x4002B5D")]
			internal const int GLARE = 4;

			[Token(Token = "0x4002B5E")]
			internal const int MK_NATURAL = 1;

			[Token(Token = "0x4002B5F")]
			internal const int RENDER_PRIORITY = 2;
		}

		[Token(Token = "0x200070A")]
		internal struct KeywordState
		{
			[Token(Token = "0x4002B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int bloom;

			[Token(Token = "0x4002B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int lensSurface;

			[Token(Token = "0x4002B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA514")]
			public int lensFlare;

			[Token(Token = "0x4002B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public int glare;

			[Token(Token = "0x4002B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98EF3C")]
			public int natural;

			[Token(Token = "0x4002B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int renderPriority;

			[Token(Token = "0x6002B86")]
			[Address(RVA = "0xAAFF10", Offset = "0xAAFF10", VA = "0xAAFF10")]
			public KeywordState(int bloom, int lensSurface, int lensFlare, int glare, int natural, int renderPriority)
			{
			}
		}

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<KeywordState, int> variants;

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x174EB48", Offset = "0x174EB48", VA = "0x174EB48")]
		internal void GetVariantNumber(KeywordState features, out int index)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x174EC34", Offset = "0x174EC34", VA = "0x174EC34")]
		public ComputeShaderVariants(int offset)
		{
		}
	}
	[Token(Token = "0x20002A4")]
	internal sealed class Effect
	{
		[Token(Token = "0x200070B")]
		internal enum ShaderRenderPass
		{
			[Token(Token = "0x4002B67")]
			Copy,
			[Token(Token = "0x4002B68")]
			Presample,
			[Token(Token = "0x4002B69")]
			Downsample,
			[Token(Token = "0x4002B6A")]
			Upsample,
			[Token(Token = "0x4002B6B")]
			Composite,
			[Token(Token = "0x4002B6C")]
			Debug
		}

		[Token(Token = "0x200070C")]
		internal enum MaterialKeywords
		{
			[Token(Token = "0x4002B6E")]
			Bloom,
			[Token(Token = "0x4002B6F")]
			LensSurface,
			[Token(Token = "0x4002B70")]
			LensFlare,
			[Token(Token = "0x4002B71")]
			Glare1,
			[Token(Token = "0x4002B72")]
			DebugRawBloom,
			[Token(Token = "0x4002B73")]
			DebugRawLensFlare,
			[Token(Token = "0x4002B74")]
			DebugRawGlare,
			[Token(Token = "0x4002B75")]
			DebugBloom,
			[Token(Token = "0x4002B76")]
			DebugLensFlare,
			[Token(Token = "0x4002B77")]
			DebugGlare,
			[Token(Token = "0x4002B78")]
			DebugComposite,
			[Token(Token = "0x4002B79")]
			LegacyBlit,
			[Token(Token = "0x4002B7A")]
			RenderPriorityQuality,
			[Token(Token = "0x4002B7B")]
			Natural,
			[Token(Token = "0x4002B7C")]
			Glare2,
			[Token(Token = "0x4002B7D")]
			Glare3,
			[Token(Token = "0x4002B7E")]
			Glare4,
			[Token(Token = "0x4002B7F")]
			Null,
			[Token(Token = "0x4002B80")]
			RenderPriorityBalanced
		}

		[Token(Token = "0x200070D")]
		internal struct Keyword
		{
			[Token(Token = "0x4002B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal string name;

			[Token(Token = "0x4002B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal bool enabled;

			[Token(Token = "0x6002B87")]
			[Address(RVA = "0xAB2100", Offset = "0xAB2100", VA = "0xAB2100")]
			internal Keyword(string name, bool enabled)
			{
			}
		}

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Resources _resources;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2 _referenceResolution;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA52C")]
		private static readonly float _referenceAspectRatio;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly Vector2 _selectiveWorkflowThreshold;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98EF54")]
		private static readonly int _cArgBufferSize;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _glareIterationsBase;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RenderDimension _directComputeSize;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float naturalIntensityMult;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA534")]
		private static readonly string _selectiveReplacementTag;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly string _selectiveGlowCameraObjectName;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98EF5C")]
		private GameObject _selectiveGlowCameraObject;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera _selectiveGlowCamera;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ComputeShaderVariants _presampleComputeVariants;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ComputeShaderVariants _downsampleComputeVariants;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA53C")]
		private ComputeShaderVariants _upsampleComputeVariants;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private CommandBuffer _commandBuffer;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98EF64")]
		private RenderTarget _selectiveRenderTarget;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _bloomDownsampleBuffer;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _bloomUpsampleBuffer;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _lensFlareDownsampleBuffer;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA544")]
		private MipBuffer _lensFlareUpsampleBuffer;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MipBuffer _glareDownsampleBuffer0;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98EF6C")]
		private MipBuffer _glareDownsampleBuffer1;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _glareDownsampleBuffer2;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _glareDownsampleBuffer3;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MipBuffer _glareUpsampleBuffer0;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA54C")]
		private MipBuffer _glareUpsampleBuffer1;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MipBuffer _glareUpsampleBuffer2;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x986F7C")]
		private MipBuffer _glareUpsampleBuffer3;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTarget _sourceFrameBuffer;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTarget _destinationFrameBuffer;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Keyword[] _shaderKeywords;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA553")]
		private bool _useGeometryShaders;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _useComputeShaders;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98EF74")]
		private bool _useLensSurface;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _useLensFlare;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _useGlare;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<RenderTarget> _renderTargetsBundle;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA55B")]
		private List<MaterialKeywords> _renderKeywordsBundle;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int _bloomIterations;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98EF7C")]
		private int _lensFlareIterations;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _minIterations;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _glareIterations;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _currentRenderIndex;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA563")]
		private float bloomUpsampleSpread;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _lensFlareUpsampleSpread;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98EF84")]
		private float _glareScatteringMult;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 _resolutionScale;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2[] glareAngles;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTextureFormat _renderTextureFormat;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA56B")]
		private ComputeShaderVariants.KeywordState computeShaderFeatures;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderContext[] _sourceContext;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98EF8C")]
		private RenderContext[] _renderContext;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderContext _selectiveRenderContext;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera _renderingCamera;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CameraData _cameraData;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA573")]
		private RenderPipeline _renderPipeline;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material _renderMaterialNoGeometry;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98EF94")]
		private Material _renderMaterialGeometry;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] _cArgArray;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ComputeBuffer _cArgsComputeBuffer;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderDimension _computeThreadGroups;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA57B")]
		private Settings _settings;

		[Token(Token = "0x170000CF")]
		private RenderTarget sourceFrameBuffer
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0x174FF84", Offset = "0x174FF84", VA = "0x174FF84")]
			get
			{
				return default(RenderTarget);
			}
		}

		[Token(Token = "0x170000D0")]
		internal int currentRenderIndex
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0x1750044", Offset = "0x1750044", VA = "0x1750044")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D1")]
		internal RenderTextureFormat renderTextureFormat
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0x1750074", Offset = "0x1750074", VA = "0x1750074")]
			get
			{
				return default(RenderTextureFormat);
			}
		}

		[Token(Token = "0x170000D2")]
		internal Material renderMaterialNoGeometry
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0x17500A4", Offset = "0x17500A4", VA = "0x17500A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private GameObject selectiveGlowCameraObject
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0x1752310", Offset = "0x1752310", VA = "0x1752310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private Camera selectiveGlowCamera
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x1752550", Offset = "0x1752550", VA = "0x1752550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x174F0A4", Offset = "0x174F0A4", VA = "0x174F0A4")]
		internal Effect()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x17500D4", Offset = "0x17500D4", VA = "0x17500D4")]
		internal void Enable(RenderPipeline renderPipeline, [Optional] Shader shaderOverwrite, [Optional] Shader shaderGeometryOverwrite)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x17510F0", Offset = "0x17510F0", VA = "0x17510F0")]
		internal void Disable()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x17512C0", Offset = "0x17512C0", VA = "0x17512C0")]
		private void PrepareScattering(float Scattering, float scale, ref int iterations, ref float spread)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x1751518", Offset = "0x1751518", VA = "0x1751518")]
		private void UpdateRenderBuffers()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x175271C", Offset = "0x175271C", VA = "0x175271C")]
		private void SetupSelectiveGlowCamera()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1752A9C", Offset = "0x1752A9C", VA = "0x1752A9C")]
		private void CheckFeatureSupport()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x175319C", Offset = "0x175319C", VA = "0x175319C")]
		private void BeginProfileSample(string text)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1753220", Offset = "0x1753220", VA = "0x1753220")]
		private void EndProfileSample(string text)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x17532A4", Offset = "0x17532A4", VA = "0x17532A4")]
		internal void Build(RenderTarget source, RenderTarget destination, Settings settings, CommandBuffer cmd, CameraData cameraData, [Optional] Camera renderingCamera)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1753C5C", Offset = "0x1753C5C", VA = "0x1753C5C")]
		private void UpdateConstantBuffers()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x17606AC", Offset = "0x17606AC", VA = "0x17606AC")]
		private void SetKeyword(MaterialKeywords keyword, bool enable)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1760538", Offset = "0x1760538", VA = "0x1760538")]
		private Vector2 AngleToDirection(float angleDegree)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x175FDD0", Offset = "0x175FDD0", VA = "0x175FDD0")]
		private float ConvertGammaValue(float gammaSpacedValue)
		{
			return default(float);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1760328", Offset = "0x1760328", VA = "0x1760328")]
		private Vector4 ConvertGammaValue(Vector4 gammaSpacedVector)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1760828", Offset = "0x1760828", VA = "0x1760828")]
		private void UpdateComputeShaderThreadGroups(RenderDimension renderDimension)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1760B90", Offset = "0x1760B90", VA = "0x1760B90")]
		private void UpdateRenderIndex(int v)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1760BC8", Offset = "0x1760BC8", VA = "0x1760BC8")]
		private void UpdateRenderIndex(ComputeShaderVariants variants, ComputeShaderVariants.KeywordState features)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1760C68", Offset = "0x1760C68", VA = "0x1760C68")]
		private void AttachCArgBufferToComputeKernel()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x175F6C8", Offset = "0x175F6C8", VA = "0x175F6C8")]
		private void SetFloat(PipelineProperties.ShaderProperties.CBufferProperty property, float value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x175F854", Offset = "0x175F854", VA = "0x175F854")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector4 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x175FF14", Offset = "0x175FF14", VA = "0x175FF14")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector3 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x175F36C", Offset = "0x175F36C", VA = "0x175F36C")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector2 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x1760FE8", Offset = "0x1760FE8", VA = "0x1760FE8")]
		private void SetTexture(PipelineProperties.ShaderProperties.DefaultProperty property, RenderTarget rt, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x17614A8", Offset = "0x17614A8", VA = "0x17614A8")]
		private void SetTexture(PipelineProperties.ShaderProperties.DefaultProperty property, Texture tex, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x17618F8", Offset = "0x17618F8", VA = "0x17618F8")]
		private void PrepareDraw(int variant, RenderDimension renderDimension, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x17620C4", Offset = "0x17620C4", VA = "0x17620C4")]
		private void PrepareDraw(int materialPass, ComputeShaderVariants variants, bool enableBloom, bool enableLensflare, bool enableGlare, RenderDimension renderDimension)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1762900", Offset = "0x1762900", VA = "0x1762900")]
		private void Draw(RenderDimension dimension, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x1762FF8", Offset = "0x1762FF8", VA = "0x1762FF8")]
		private MaterialKeywords GetGlareKeyword(int streaks)
		{
			return default(MaterialKeywords);
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1761F58", Offset = "0x1761F58", VA = "0x1761F58")]
		private void DisableRenderKeywords()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x17630DC", Offset = "0x17630DC", VA = "0x17630DC")]
		private void DisableDebugKeywords()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1761E08", Offset = "0x1761E08", VA = "0x1761E08")]
		private void SetRenderPriority()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1757058", Offset = "0x1757058", VA = "0x1757058")]
		private void PreSample()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x175872C", Offset = "0x175872C", VA = "0x175872C")]
		private void Downsample()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x175A2F8", Offset = "0x175A2F8", VA = "0x175A2F8")]
		private void Upsample()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x175D864", Offset = "0x175D864", VA = "0x175D864")]
		private void Composite()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x17631E8", Offset = "0x17631E8", VA = "0x17631E8")]
		internal void AfterCompositeCleanup()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	internal interface IDimension
	{
		[Token(Token = "0x170000D5")]
		int width
		{
			[Token(Token = "0x6001263")]
			get;
		}

		[Token(Token = "0x170000D6")]
		int height
		{
			[Token(Token = "0x6001264")]
			get;
		}

		[Token(Token = "0x170000D7")]
		RenderDimension renderDimension
		{
			[Token(Token = "0x6001265")]
			get;
		}
	}
	[Token(Token = "0x20002A6")]
	public sealed class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5A3")]
		public float minLimit;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float maxLimit;

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x176ADCC", Offset = "0x176ADCC", VA = "0x176ADCC")]
		public MinMaxRangeAttribute(float minLimit, float maxLimit)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A7")]
	public struct MinMaxRange
	{
		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x986F74")]
		public float minValue;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxValue;

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xAB4608", Offset = "0xAB4608", VA = "0xAB4608")]
		public MinMaxRange(float minValue, float maxValue)
		{
		}
	}
	[Token(Token = "0x20002A8")]
	internal sealed class MipBuffer
	{
		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTarget[] _renderTargets;

		[Token(Token = "0x170000D8")]
		internal RenderTarget[] renderTargets
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x12FEE10", Offset = "0x12FEE10", VA = "0x12FEE10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x12FEE40", Offset = "0x12FEE40", VA = "0x12FEE40")]
		public MipBuffer(string name, RenderPipeline renderPipeline)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x12FF360", Offset = "0x12FF360", VA = "0x12FF360")]
		internal void CreateTemporary(RenderContext[] renderContext, int level, CommandBuffer cmd, RenderTextureFormat format, bool useComputeShaders, RenderPipeline renderPipeline)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x12FF5EC", Offset = "0x12FF5EC", VA = "0x12FF5EC")]
		internal void ClearTemporary(CommandBuffer cmd, int level, RenderPipeline renderPipeline)
		{
		}
	}
	[Token(Token = "0x20002A9")]
	internal static class PipelineExtensions
	{
		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh _screenMesh;

		[Token(Token = "0x170000D9")]
		private static Mesh screenMesh
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x12FF6E8", Offset = "0x12FF6E8", VA = "0x12FF6E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x12FFABC", Offset = "0x12FFABC", VA = "0x12FFABC")]
		internal static void SetKeyword(this CommandBuffer cmd, string keyword, bool enable)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x12FFB64", Offset = "0x12FFB64", VA = "0x12FFB64")]
		internal static void SetKeyword(string keyword, bool enable)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x12FFBE0", Offset = "0x12FFBE0", VA = "0x12FFBE0")]
		internal static void Draw(this CommandBuffer cmd, List<RenderTarget> destinations, Material material, bool useGeometryShader, int pass, Rect viewport)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x1300628", Offset = "0x1300628", VA = "0x1300628")]
		internal static void Draw(List<RenderTarget> destinations, Material material, bool useGeometryShader, int pass)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x1300F48", Offset = "0x1300F48", VA = "0x1300F48")]
		internal static void Draw(this CommandBuffer cmd, List<RenderTarget> destinations, ComputeShader computeShader, int kernelIndex, RenderDimension computeThreadGroups)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x1300FF0", Offset = "0x1300FF0", VA = "0x1300FF0")]
		internal static void Draw(List<RenderTarget> destinations, ComputeShader computeShader, int kernelIndex, RenderDimension computeThreadGroups)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x1301088", Offset = "0x1301088", VA = "0x1301088")]
		private static int SinglePassStereoDownscale(bool cameraIsStereo, int size, int scale)
		{
			return default(int);
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x13012EC", Offset = "0x13012EC", VA = "0x13012EC")]
		internal static void UpdateMipRenderContext(this CameraData cameraData, RenderContext[] renderContexts, RenderDimension rawDimension, int levels, RenderTextureFormat format, int depthBufferBits, bool enableRandomWrite)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x12FF560", Offset = "0x12FF560", VA = "0x12FF560")]
		internal static RenderTexture GetTemporary(RenderContext renderContext, RenderTextureFormat format)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AA")]
	internal static class PipelineProperties
	{
		[Token(Token = "0x200070E")]
		internal static class ShaderProperties
		{
			[Token(Token = "0x200079D")]
			internal class DefaultProperty
			{
				[Token(Token = "0x4002DA7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				protected string _name;

				[Token(Token = "0x4002DA8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				protected int _id;

				[Token(Token = "0x170004C3")]
				internal string name
				{
					[Token(Token = "0x6002CEB")]
					[Address(RVA = "0x130311C", Offset = "0x130311C", VA = "0x130311C")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170004C4")]
				internal int id
				{
					[Token(Token = "0x6002CEC")]
					[Address(RVA = "0x130314C", Offset = "0x130314C", VA = "0x130314C")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002CED")]
				[Address(RVA = "0x130304C", Offset = "0x130304C", VA = "0x130304C")]
				internal DefaultProperty(string name)
				{
				}
			}

			[Token(Token = "0x200079E")]
			internal sealed class CBufferProperty : DefaultProperty
			{
				[Token(Token = "0x4002DA9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA5EA")]
				private int _index;

				[Token(Token = "0x4002DAA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
				private int _size;

				[Token(Token = "0x170004C5")]
				internal int index
				{
					[Token(Token = "0x6002CEE")]
					[Address(RVA = "0x13030BC", Offset = "0x13030BC", VA = "0x13030BC")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x170004C6")]
				internal int size
				{
					[Token(Token = "0x6002CEF")]
					[Address(RVA = "0x13030EC", Offset = "0x13030EC", VA = "0x13030EC")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002CF0")]
				[Address(RVA = "0x1302F58", Offset = "0x1302F58", VA = "0x1302F58")]
				internal CBufferProperty(string name, int index, int size)
				{
				}
			}

			[Token(Token = "0x4002B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly CBufferProperty screenSize;

			[Token(Token = "0x4002B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98EFC4")]
			internal static readonly CBufferProperty singlePassStereoScale;

			[Token(Token = "0x4002B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty viewMatrix;

			[Token(Token = "0x4002B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty cArgBuffer;

			[Token(Token = "0x4002B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty sourceTex;

			[Token(Token = "0x4002B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA5B2")]
			internal static readonly DefaultProperty targetTex;

			[Token(Token = "0x4002B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly DefaultProperty copyTargetTex;

			[Token(Token = "0x4002B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98EFCC")]
			internal static readonly DefaultProperty bloomTex;

			[Token(Token = "0x4002B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty bloomTargetTex;

			[Token(Token = "0x4002B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty bloomSpread;

			[Token(Token = "0x4002B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty bloomThreshold;

			[Token(Token = "0x4002B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA5BA")]
			internal static readonly CBufferProperty lumaScale;

			[Token(Token = "0x4002B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly CBufferProperty bloomIntensity;

			[Token(Token = "0x4002B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98EFD4")]
			internal static readonly CBufferProperty blooming;

			[Token(Token = "0x4002B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty higherMipBloomTex;

			[Token(Token = "0x4002B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty resolutionScale;

			[Token(Token = "0x4002B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty lensSurfaceDirtTex;

			[Token(Token = "0x4002B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA5C2")]
			internal static readonly DefaultProperty lensSurfaceDiffractionTex;

			[Token(Token = "0x4002B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly CBufferProperty lensSurfaceDirtIntensity;

			[Token(Token = "0x4002B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98EFDC")]
			internal static readonly CBufferProperty lensSurfaceDiffractionIntensity;

			[Token(Token = "0x4002B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty lensSurfaceDirtTexST;

			[Token(Token = "0x4002B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty lensFlareThreshold;

			[Token(Token = "0x4002B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty lensFlareGhostParams;

			[Token(Token = "0x4002B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA5CA")]
			internal static readonly CBufferProperty lensFlareHaloParams;

			[Token(Token = "0x4002B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly DefaultProperty lensFlareTex;

			[Token(Token = "0x4002B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98EFE4")]
			internal static readonly DefaultProperty lensFlareTargetTex;

			[Token(Token = "0x4002B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty lensFlareSpread;

			[Token(Token = "0x4002B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty lensFlareChromaticAberration;

			[Token(Token = "0x4002B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty lensFlareColorRamp;

			[Token(Token = "0x4002BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA5D2")]
			internal static readonly CBufferProperty glareThreshold;

			[Token(Token = "0x4002BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly CBufferProperty glareBlend;

			[Token(Token = "0x4002BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98EFEC")]
			internal static readonly CBufferProperty glareGlobalIntensity;

			[Token(Token = "0x4002BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty glareIntensity;

			[Token(Token = "0x4002BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty glareScattering;

			[Token(Token = "0x4002BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty glareDirection01;

			[Token(Token = "0x4002BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA5DA")]
			internal static readonly CBufferProperty glareDirection23;

			[Token(Token = "0x4002BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly CBufferProperty glareOffset;

			[Token(Token = "0x4002BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98EFF4")]
			internal static readonly DefaultProperty glare0Tex;

			[Token(Token = "0x4002BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty glare0TargetTex;

			[Token(Token = "0x4002BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty glare1Tex;

			[Token(Token = "0x4002BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty glare1TargetTex;

			[Token(Token = "0x4002BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA5E2")]
			internal static readonly DefaultProperty glare2Tex;

			[Token(Token = "0x4002BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly DefaultProperty glare2TargetTex;

			[Token(Token = "0x4002BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98EFFC")]
			internal static readonly DefaultProperty glare3Tex;

			[Token(Token = "0x4002BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty glare3TargetTex;
		}

		[Token(Token = "0x200070F")]
		internal static class CommandBufferProperties
		{
			[Token(Token = "0x4002BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F004")]
			internal static readonly string commandBufferName;

			[Token(Token = "0x4002BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string selectiveRenderBuffer;

			[Token(Token = "0x4002BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string bloomDownsampleBuffer;

			[Token(Token = "0x4002BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string bloomUpsampleBuffer;

			[Token(Token = "0x4002BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA5F2")]
			internal static readonly string sourceBuffer;

			[Token(Token = "0x4002BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly string glareDownsampleBuffer0;

			[Token(Token = "0x4002BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F00C")]
			internal static readonly string glareDownsampleBuffer1;

			[Token(Token = "0x4002BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string glareDownsampleBuffer2;

			[Token(Token = "0x4002BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string glareDownsampleBuffer3;

			[Token(Token = "0x4002BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string glareUpsampleBuffer0;

			[Token(Token = "0x4002BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA5FA")]
			internal static readonly string glareUpsampleBuffer1;

			[Token(Token = "0x4002BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly string glareUpsampleBuffer2;

			[Token(Token = "0x4002BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x986F8C")]
			internal static readonly string glareUpsampleBuffer3;

			[Token(Token = "0x4002BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string lensFlareDownsampleBuffer;

			[Token(Token = "0x4002BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string lensFlareUpsampleBuffer;

			[Token(Token = "0x4002BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string sampleDownsample;

			[Token(Token = "0x4002BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA601")]
			internal static readonly string samplePreSample;

			[Token(Token = "0x4002BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly string sampleUpsample;

			[Token(Token = "0x4002BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F014")]
			internal static readonly string sampleComposite;

			[Token(Token = "0x4002BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string sampleCreateBuffers;

			[Token(Token = "0x4002BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string sampleClearBuffers;

			[Token(Token = "0x4002BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string sampleSetup;

			[Token(Token = "0x4002BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA609")]
			internal static readonly string sampleCopySource;

			[Token(Token = "0x4002BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			internal static readonly string sampleReplacement;

			[Token(Token = "0x4002BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F01C")]
			internal static readonly string samplePrepare;
		}

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5AA")]
		internal static readonly int renderBufferSize;

		[Token(Token = "0x170000DA")]
		internal static bool scriptableRenderPipelineActive
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0x1301A24", Offset = "0x1301A24", VA = "0x1301A24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DB")]
		internal static bool xrEnabled
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x1301B3C", Offset = "0x1301B3C", VA = "0x1301B3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DC")]
		internal static bool singlePassStereoDoubleWideEnabled
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x1301238", Offset = "0x1301238", VA = "0x1301238")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DD")]
		internal static bool singlePassStereoInstancedEnabled
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x1301B80", Offset = "0x1301B80", VA = "0x1301B80")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x20002AB")]
	internal sealed class RenderContext : IDimension
	{
		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTextureDescriptor _descriptor;

		[Token(Token = "0x170000DE")]
		public RenderTextureDescriptor descriptor
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x130317C", Offset = "0x130317C", VA = "0x130317C")]
			get
			{
				return default(RenderTextureDescriptor);
			}
		}

		[Token(Token = "0x170000DF")]
		public RenderDimension renderDimension
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x13031A4", Offset = "0x13031A4", VA = "0x13031A4", Slot = "6")]
			get
			{
				return default(RenderDimension);
			}
		}

		[Token(Token = "0x170000E0")]
		public bool enableRandomWrite
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x13032B8", Offset = "0x13032B8", VA = "0x13032B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E1")]
		public int width
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x1303314", Offset = "0x1303314", VA = "0x1303314", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E2")]
		public int height
		{
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x130335C", Offset = "0x130335C", VA = "0x130335C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x13033A4", Offset = "0x13033A4", VA = "0x13033A4")]
		internal RenderContext()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x13035D8", Offset = "0x13035D8", VA = "0x13035D8")]
		internal void SinglePassStereoAdjustWidth(bool stereoEnabled)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x1301644", Offset = "0x1301644", VA = "0x1301644")]
		internal void UpdateRenderContext(bool stereoEnabled, RenderTextureFormat format, int depthBufferBits, bool enableRandomWrite, RenderDimension dimension)
		{
		}
	}
	[Token(Token = "0x20002AC")]
	internal struct RenderTarget
	{
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal RenderTexture renderTexture;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal RenderTargetIdentifier renderTargetIdentifier;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA601")]
		internal int identifier;
	}
	[Token(Token = "0x20002AD")]
	internal static class RenderTargetContext
	{
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int _renderTargetCount;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F024")]
		private static RenderTargetSetup[] _mrtBindingsLegacy;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderTargetBinding[] _mrtBindingsSRP;

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x1300094", Offset = "0x1300094", VA = "0x1300094")]
		internal static void SetRenderTargetContext(this CommandBuffer cmd, List<RenderTarget> renderTargets)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x1300940", Offset = "0x1300940", VA = "0x1300940")]
		internal static void SetRenderTargetContext(List<RenderTarget> renderTargets)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AE")]
	public sealed class Resources : ScriptableObject
	{
		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Texture2D _lensSurfaceDirtTextureDefault;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Texture2D _lensSurfaceDiffractionTextureDefault;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA619")]
		[SerializeField]
		private Texture2D _lensFlareColorRampDefault;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Shader _selectiveRenderShader;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F02C")]
		[SerializeField]
		private Shader _sm20Shader;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader _sm25Shader;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader _sm30Shader;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Shader _sm35Shader;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA621")]
		[SerializeField]
		private Shader _sm40Shader;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Shader _sm40GeometryShader;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F034")]
		[SerializeField]
		private ComputeShader _computeShader;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ComputeShader _computeShaderGles;

		[Token(Token = "0x170000E3")]
		internal Texture2D lensSurfaceDirtTextureDefault
		{
			[Token(Token = "0x6001288")]
			[Address(RVA = "0x1304DC4", Offset = "0x1304DC4", VA = "0x1304DC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		internal Texture2D lensSurfaceDiffractionTextureDefault
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x1304DF4", Offset = "0x1304DF4", VA = "0x1304DF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		internal Texture2D lensFlareColorRampDefault
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x1304E24", Offset = "0x1304E24", VA = "0x1304E24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		internal Shader selectiveRenderShader
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x1304E54", Offset = "0x1304E54", VA = "0x1304E54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		internal Shader sm20Shader
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x1304E84", Offset = "0x1304E84", VA = "0x1304E84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		internal Shader sm25Shader
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0x1304EB4", Offset = "0x1304EB4", VA = "0x1304EB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		internal Shader sm30Shader
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0x1304EE4", Offset = "0x1304EE4", VA = "0x1304EE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		internal Shader sm35Shader
		{
			[Token(Token = "0x600128F")]
			[Address(RVA = "0x1304F14", Offset = "0x1304F14", VA = "0x1304F14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		internal Shader sm40Shader
		{
			[Token(Token = "0x6001290")]
			[Address(RVA = "0x1304F44", Offset = "0x1304F44", VA = "0x1304F44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		internal Shader sm40GeometryShader
		{
			[Token(Token = "0x6001291")]
			[Address(RVA = "0x1304F74", Offset = "0x1304F74", VA = "0x1304F74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		internal ComputeShader computeShader
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0x1304FA4", Offset = "0x1304FA4", VA = "0x1304FA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x1304C40", Offset = "0x1304C40", VA = "0x1304C40")]
		internal static void ResourcesNotAvailableWarning()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x1304D34", Offset = "0x1304D34", VA = "0x1304D34")]
		internal static Resources LoadResourcesAsset()
		{
			return null;
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x1305028", Offset = "0x1305028", VA = "0x1305028")]
		public Resources()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	internal abstract class Settings
	{
		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool _allowGeometryShaders;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool _allowComputeShaders;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA629")]
		protected RenderPriority _renderPriority;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected DebugView _debugView;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F03C")]
		protected Quality _quality;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Workflow _workflow;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected LayerMask _selectiveRenderLayerMask;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _anamorphicRatio;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA631")]
		protected float _lumaScale;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected float _blooming;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F044")]
		protected MinMaxRange _bloomThreshold;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _bloomScattering;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _bloomIntensity;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool _allowLensSurface;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA639")]
		protected Texture2D _lensSurfaceDirtTexture;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected float _lensSurfaceDirtIntensity;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F04C")]
		protected Texture2D _lensSurfaceDirtDistortionTexture;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensSurfaceDirtDistortion;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Texture2D _lensSurfaceDiffractionTexture;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensSurfaceDiffractionIntensity;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA641")]
		protected bool _allowLensFlare;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected LensFlareStyle _lensFlareStyle;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F054")]
		protected float _lensFlareGhostFade;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensFlareGhostIntensity;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected MinMaxRange _lensFlareThreshold;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensFlareScattering;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA649")]
		protected Texture2D _lensFlareColorRamp;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected float _lensFlareChromaticAberration;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F05C")]
		protected int _lensFlareGhostCount;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensFlareGhostDispersal;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensFlareHaloFade;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _lensFlareHaloIntensity;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA651")]
		protected float _lensFlareHaloSize;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected bool _allowGlare;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x986F94")]
		protected float _glareBlend;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareIntensity;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareAngle;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected MinMaxRange _glareThreshold;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA658")]
		protected int _glareStreaks;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected float _glareScattering;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F064")]
		protected GlareStyle _glareStyle;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample0Scattering;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample0Angle;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample0Intensity;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA660")]
		protected float _glareSample0Offset;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected float _glareSample1Scattering;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F06C")]
		protected float _glareSample1Angle;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample1Intensity;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample1Offset;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample2Scattering;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA668")]
		protected float _glareSample2Angle;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected float _glareSample2Intensity;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F074")]
		protected float _glareSample2Offset;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample3Scattering;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample3Angle;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float _glareSample3Intensity;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA670")]
		protected float _glareSample3Offset;

		[Token(Token = "0x170000EE")]
		internal bool allowGeometryShaders
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0x1305058", Offset = "0x1305058", VA = "0x1305058")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001295")]
			[Address(RVA = "0x130509C", Offset = "0x130509C", VA = "0x130509C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		internal bool allowComputeShaders
		{
			[Token(Token = "0x6001296")]
			[Address(RVA = "0x13050E8", Offset = "0x13050E8", VA = "0x13050E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001297")]
			[Address(RVA = "0x130512C", Offset = "0x130512C", VA = "0x130512C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		internal RenderPriority renderPriority
		{
			[Token(Token = "0x6001298")]
			[Address(RVA = "0x1305178", Offset = "0x1305178", VA = "0x1305178")]
			get
			{
				return default(RenderPriority);
			}
			[Token(Token = "0x6001299")]
			[Address(RVA = "0x13051A8", Offset = "0x13051A8", VA = "0x13051A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		internal DebugView debugView
		{
			[Token(Token = "0x600129A")]
			[Address(RVA = "0x13051E0", Offset = "0x13051E0", VA = "0x13051E0")]
			get
			{
				return default(DebugView);
			}
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x1305210", Offset = "0x1305210", VA = "0x1305210")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		internal Quality quality
		{
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x1305248", Offset = "0x1305248", VA = "0x1305248")]
			get
			{
				return default(Quality);
			}
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x1305278", Offset = "0x1305278", VA = "0x1305278")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		internal Workflow workflow
		{
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x13052B0", Offset = "0x13052B0", VA = "0x13052B0")]
			get
			{
				return default(Workflow);
			}
			[Token(Token = "0x600129F")]
			[Address(RVA = "0x13052E0", Offset = "0x13052E0", VA = "0x13052E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		internal LayerMask selectiveRenderLayerMask
		{
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x1305318", Offset = "0x1305318", VA = "0x1305318")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x1305360", Offset = "0x1305360", VA = "0x1305360")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		internal float anamorphicRatio
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x13053E8", Offset = "0x13053E8", VA = "0x13053E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x1305418", Offset = "0x1305418", VA = "0x1305418")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		internal float lumaScale
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x1305538", Offset = "0x1305538", VA = "0x1305538")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x1305568", Offset = "0x1305568", VA = "0x1305568")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		internal float blooming
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x130566C", Offset = "0x130566C", VA = "0x130566C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x130569C", Offset = "0x130569C", VA = "0x130569C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		internal MinMaxRange bloomThreshold
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x13057A0", Offset = "0x13057A0", VA = "0x13057A0")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x13057D8", Offset = "0x13057D8", VA = "0x13057D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		internal float bloomScattering
		{
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x13058A8", Offset = "0x13058A8", VA = "0x13058A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0x13058D8", Offset = "0x13058D8", VA = "0x13058D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		internal float bloomIntensity
		{
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x13059F4", Offset = "0x13059F4", VA = "0x13059F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0x1305A24", Offset = "0x1305A24", VA = "0x1305A24")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		internal bool allowLensSurface
		{
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x1305B2C", Offset = "0x1305B2C", VA = "0x1305B2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x1305B70", Offset = "0x1305B70", VA = "0x1305B70")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		internal Texture2D lensSurfaceDirtTexture
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x1305BBC", Offset = "0x1305BBC", VA = "0x1305BBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x1305BEC", Offset = "0x1305BEC", VA = "0x1305BEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		internal float lensSurfaceDirtIntensity
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x1305C24", Offset = "0x1305C24", VA = "0x1305C24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012B3")]
			[Address(RVA = "0x1305C54", Offset = "0x1305C54", VA = "0x1305C54")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		internal Texture2D lensSurfaceDirtDistortionTexture
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x1305D5C", Offset = "0x1305D5C", VA = "0x1305D5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x1305D8C", Offset = "0x1305D8C", VA = "0x1305D8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		internal float lensSurfaceDirtDistortion
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x1305DC4", Offset = "0x1305DC4", VA = "0x1305DC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x1305DF4", Offset = "0x1305DF4", VA = "0x1305DF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		internal Texture2D lensSurfaceDiffractionTexture
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x1305EFC", Offset = "0x1305EFC", VA = "0x1305EFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x1305F2C", Offset = "0x1305F2C", VA = "0x1305F2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		internal float lensSurfaceDiffractionIntensity
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x1305F64", Offset = "0x1305F64", VA = "0x1305F64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x1305F94", Offset = "0x1305F94", VA = "0x1305F94")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		internal bool allowLensFlare
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x130609C", Offset = "0x130609C", VA = "0x130609C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x13060E0", Offset = "0x13060E0", VA = "0x13060E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		internal LensFlareStyle lensFlareStyle
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x130612C", Offset = "0x130612C", VA = "0x130612C")]
			get
			{
				return default(LensFlareStyle);
			}
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x130615C", Offset = "0x130615C", VA = "0x130615C")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		internal float lensFlareGhostFade
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0x1306194", Offset = "0x1306194", VA = "0x1306194")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x13061C4", Offset = "0x13061C4", VA = "0x13061C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		internal float lensFlareGhostIntensity
		{
			[Token(Token = "0x60012C2")]
			[Address(RVA = "0x13062CC", Offset = "0x13062CC", VA = "0x13062CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012C3")]
			[Address(RVA = "0x13062FC", Offset = "0x13062FC", VA = "0x13062FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		internal MinMaxRange lensFlareThreshold
		{
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0x1306404", Offset = "0x1306404", VA = "0x1306404")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x60012C5")]
			[Address(RVA = "0x130643C", Offset = "0x130643C", VA = "0x130643C")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		internal float lensFlareScattering
		{
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0x130650C", Offset = "0x130650C", VA = "0x130650C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x130653C", Offset = "0x130653C", VA = "0x130653C")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		internal Texture2D lensFlareColorRamp
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x1306658", Offset = "0x1306658", VA = "0x1306658")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x1306688", Offset = "0x1306688", VA = "0x1306688")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		internal float lensFlareChromaticAberration
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x13066C0", Offset = "0x13066C0", VA = "0x13066C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012CB")]
			[Address(RVA = "0x13066F0", Offset = "0x13066F0", VA = "0x13066F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		internal int lensFlareGhostCount
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x1306728", Offset = "0x1306728", VA = "0x1306728")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x1306758", Offset = "0x1306758", VA = "0x1306758")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		internal float lensFlareGhostDispersal
		{
			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x1306864", Offset = "0x1306864", VA = "0x1306864")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x1306894", Offset = "0x1306894", VA = "0x1306894")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		internal float lensFlareHaloFade
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x13069B4", Offset = "0x13069B4", VA = "0x13069B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x13069E4", Offset = "0x13069E4", VA = "0x13069E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		internal float lensFlareHaloIntensity
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0x1306AEC", Offset = "0x1306AEC", VA = "0x1306AEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x1306B1C", Offset = "0x1306B1C", VA = "0x1306B1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		internal float lensFlareHaloSize
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x1306C24", Offset = "0x1306C24", VA = "0x1306C24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x1306C54", Offset = "0x1306C54", VA = "0x1306C54")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		internal bool allowGlare
		{
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0x13070C8", Offset = "0x13070C8", VA = "0x13070C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0x130710C", Offset = "0x130710C", VA = "0x130710C")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		internal float glareBlend
		{
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0x1307158", Offset = "0x1307158", VA = "0x1307158")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x1307188", Offset = "0x1307188", VA = "0x1307188")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		internal float glareIntensity
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x130728C", Offset = "0x130728C", VA = "0x130728C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x13072BC", Offset = "0x13072BC", VA = "0x13072BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		internal float glareAngle
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x13073C4", Offset = "0x13073C4", VA = "0x13073C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x13073F4", Offset = "0x13073F4", VA = "0x13073F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		internal MinMaxRange glareThreshold
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x1307510", Offset = "0x1307510", VA = "0x1307510")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x1307548", Offset = "0x1307548", VA = "0x1307548")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		internal int glareStreaks
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x1307618", Offset = "0x1307618", VA = "0x1307618")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x1307648", Offset = "0x1307648", VA = "0x1307648")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		internal float glareScattering
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x1307754", Offset = "0x1307754", VA = "0x1307754")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x1307784", Offset = "0x1307784", VA = "0x1307784")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		internal GlareStyle glareStyle
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x130788C", Offset = "0x130788C", VA = "0x130788C")]
			get
			{
				return default(GlareStyle);
			}
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0x13078BC", Offset = "0x13078BC", VA = "0x13078BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		internal float glareSample0Scattering
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x13078F4", Offset = "0x13078F4", VA = "0x13078F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0x1307924", Offset = "0x1307924", VA = "0x1307924")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		internal float glareSample0Angle
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x130795C", Offset = "0x130795C", VA = "0x130795C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x130798C", Offset = "0x130798C", VA = "0x130798C")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		internal float glareSample0Intensity
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x13079C4", Offset = "0x13079C4", VA = "0x13079C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0x13079F4", Offset = "0x13079F4", VA = "0x13079F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		internal float glareSample0Offset
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x1307AFC", Offset = "0x1307AFC", VA = "0x1307AFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0x1307B2C", Offset = "0x1307B2C", VA = "0x1307B2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		internal float glareSample1Scattering
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x1307B64", Offset = "0x1307B64", VA = "0x1307B64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0x1307B94", Offset = "0x1307B94", VA = "0x1307B94")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		internal float glareSample1Angle
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x1307BCC", Offset = "0x1307BCC", VA = "0x1307BCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0x1307BFC", Offset = "0x1307BFC", VA = "0x1307BFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		internal float glareSample1Intensity
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0x1307C34", Offset = "0x1307C34", VA = "0x1307C34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x1307C64", Offset = "0x1307C64", VA = "0x1307C64")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		internal float glareSample1Offset
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x1307D6C", Offset = "0x1307D6C", VA = "0x1307D6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x1307D9C", Offset = "0x1307D9C", VA = "0x1307D9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		internal float glareSample2Scattering
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x1307DD4", Offset = "0x1307DD4", VA = "0x1307DD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012F8")]
			[Address(RVA = "0x1307E04", Offset = "0x1307E04", VA = "0x1307E04")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		internal float glareSample2Angle
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x1307E3C", Offset = "0x1307E3C", VA = "0x1307E3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x1307E6C", Offset = "0x1307E6C", VA = "0x1307E6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		internal float glareSample2Intensity
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x1307EA4", Offset = "0x1307EA4", VA = "0x1307EA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x1307ED4", Offset = "0x1307ED4", VA = "0x1307ED4")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		internal float glareSample2Offset
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x1307FDC", Offset = "0x1307FDC", VA = "0x1307FDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x130800C", Offset = "0x130800C", VA = "0x130800C")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		internal float glareSample3Scattering
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x1308044", Offset = "0x1308044", VA = "0x1308044")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x1308074", Offset = "0x1308074", VA = "0x1308074")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		internal float glareSample3Angle
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x13080AC", Offset = "0x13080AC", VA = "0x13080AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x13080DC", Offset = "0x13080DC", VA = "0x13080DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		internal float glareSample3Intensity
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x1308114", Offset = "0x1308114", VA = "0x1308114")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x1308144", Offset = "0x1308144", VA = "0x1308144")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		internal float glareSample3Offset
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x130824C", Offset = "0x130824C", VA = "0x130824C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x130827C", Offset = "0x130827C", VA = "0x130827C")]
			set
			{
			}
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x1306D58", Offset = "0x1306D58", VA = "0x1306D58")]
		internal void SetLensFlarePreset(LensFlareStyle lensFlareStyle)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x13082B4", Offset = "0x13082B4", VA = "0x13082B4")]
		internal void SetGlarePreset(GlareStyle glareStyle)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x130893C", Offset = "0x130893C", VA = "0x130893C")]
		protected Settings()
		{
		}
	}
}
namespace MK.Glow.Example
{
	[Token(Token = "0x20002B0")]
	public class Asteroid : MonoBehaviour
	{
		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Texture2D[] _emissionTextures;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F07C")]
		private readonly MinMaxRange _minMaxVelocity;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MinMaxRange _minMaxScale;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MinMaxRange _emissionColorIntensity;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly MinMaxRange _colorChangeTime;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA678")]
		private readonly MinMaxRange _colorIntensityChangeTime;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _nextColorChangeTime;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F084")]
		private float _nextColorIntensityChangeTime;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _nextColorIndex;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _nextColorIntensity;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color[] _colors;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA680")]
		private Color _currentColor;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _currentColorIntensity;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F08C")]
		[SerializeField]
		private Material _baseMaterial;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _usedMaterial;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Rigidbody _rigidBody;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _emissionColorId;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA688")]
		private int _emissionTextureId;

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x17638D0", Offset = "0x17638D0", VA = "0x17638D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1763E48", Offset = "0x1763E48", VA = "0x1763E48")]
		private void Update()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x17642F0", Offset = "0x17642F0", VA = "0x17642F0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x176454C", Offset = "0x176454C", VA = "0x176454C")]
		public Asteroid()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class AsteroidSpawner : MonoBehaviour
	{
		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly float _spawnTime;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F094")]
		[SerializeField]
		private GameObject _asteroidObject;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _maxObjects;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _spawnedObjects;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _time;

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x17649A0", Offset = "0x17649A0", VA = "0x17649A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x1764C70", Offset = "0x1764C70", VA = "0x1764C70")]
		public AsteroidSpawner()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class ChangeSettingsLegacy : MonoBehaviour
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA690")]
		private MKGlow _mkGlow;

		[Token(Token = "0x17000127")]
		public int debugView
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0x1764DB4", Offset = "0x1764DB4", VA = "0x1764DB4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x1764DF8", Offset = "0x1764DF8", VA = "0x1764DF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public float anamorphicRatio
		{
			[Token(Token = "0x6001313")]
			[Address(RVA = "0x1764E44", Offset = "0x1764E44", VA = "0x1764E44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001314")]
			[Address(RVA = "0x1764E88", Offset = "0x1764E88", VA = "0x1764E88")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public float lumaScale
		{
			[Token(Token = "0x6001315")]
			[Address(RVA = "0x1764ED4", Offset = "0x1764ED4", VA = "0x1764ED4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001316")]
			[Address(RVA = "0x1764F18", Offset = "0x1764F18", VA = "0x1764F18")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public float blooming
		{
			[Token(Token = "0x6001317")]
			[Address(RVA = "0x1764F64", Offset = "0x1764F64", VA = "0x1764F64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001318")]
			[Address(RVA = "0x1764FA8", Offset = "0x1764FA8", VA = "0x1764FA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public float bloomThreshold
		{
			[Token(Token = "0x6001319")]
			[Address(RVA = "0x1764FF4", Offset = "0x1764FF4", VA = "0x1764FF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600131A")]
			[Address(RVA = "0x1765044", Offset = "0x1765044", VA = "0x1765044")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public float bloomClamp
		{
			[Token(Token = "0x600131B")]
			[Address(RVA = "0x176509C", Offset = "0x176509C", VA = "0x176509C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600131C")]
			[Address(RVA = "0x17650EC", Offset = "0x17650EC", VA = "0x17650EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public float bloomScattering
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0x1765144", Offset = "0x1765144", VA = "0x1765144")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600131E")]
			[Address(RVA = "0x1765188", Offset = "0x1765188", VA = "0x1765188")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public float bloomIntensity
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0x17651D4", Offset = "0x17651D4", VA = "0x17651D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001320")]
			[Address(RVA = "0x1765218", Offset = "0x1765218", VA = "0x1765218")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public bool allowLensSurface
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0x1765264", Offset = "0x1765264", VA = "0x1765264")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001322")]
			[Address(RVA = "0x17652BC", Offset = "0x17652BC", VA = "0x17652BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public float lensSurfaceDirtIntensity
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0x176531C", Offset = "0x176531C", VA = "0x176531C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001324")]
			[Address(RVA = "0x1765360", Offset = "0x1765360", VA = "0x1765360")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public float lensSurfaceDiffractionIntensity
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0x17653AC", Offset = "0x17653AC", VA = "0x17653AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001326")]
			[Address(RVA = "0x17653F0", Offset = "0x17653F0", VA = "0x17653F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public bool allowLensFlare
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0x176543C", Offset = "0x176543C", VA = "0x176543C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001328")]
			[Address(RVA = "0x1765494", Offset = "0x1765494", VA = "0x1765494")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public float lensFlareThreshold
		{
			[Token(Token = "0x6001329")]
			[Address(RVA = "0x17654F4", Offset = "0x17654F4", VA = "0x17654F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600132A")]
			[Address(RVA = "0x1765544", Offset = "0x1765544", VA = "0x1765544")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public float lensFlareClamp
		{
			[Token(Token = "0x600132B")]
			[Address(RVA = "0x176559C", Offset = "0x176559C", VA = "0x176559C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600132C")]
			[Address(RVA = "0x17655EC", Offset = "0x17655EC", VA = "0x17655EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public float lensFlareChromaticAberration
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0x1765644", Offset = "0x1765644", VA = "0x1765644")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600132E")]
			[Address(RVA = "0x1765688", Offset = "0x1765688", VA = "0x1765688")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float lensFlareScattering
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x17656D4", Offset = "0x17656D4", VA = "0x17656D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001330")]
			[Address(RVA = "0x1765718", Offset = "0x1765718", VA = "0x1765718")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public float lensFlareGhostFade
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0x1765764", Offset = "0x1765764", VA = "0x1765764")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x17657A8", Offset = "0x17657A8", VA = "0x17657A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public float lensFlareGhostCount
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0x17657F4", Offset = "0x17657F4", VA = "0x17657F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x176583C", Offset = "0x176583C", VA = "0x176583C")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public float lensFlareGhostDispersal
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0x1765890", Offset = "0x1765890", VA = "0x1765890")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001336")]
			[Address(RVA = "0x17658D4", Offset = "0x17658D4", VA = "0x17658D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public float lensFlareGhostIntensity
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0x1765920", Offset = "0x1765920", VA = "0x1765920")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001338")]
			[Address(RVA = "0x1765964", Offset = "0x1765964", VA = "0x1765964")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public float lensFlareHaloFade
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0x17659B0", Offset = "0x17659B0", VA = "0x17659B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x17659F4", Offset = "0x17659F4", VA = "0x17659F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public float lensFlareHaloSize
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0x1765A40", Offset = "0x1765A40", VA = "0x1765A40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600133C")]
			[Address(RVA = "0x1765A84", Offset = "0x1765A84", VA = "0x1765A84")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public float lensFlareHaloIntensity
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0x1765AD0", Offset = "0x1765AD0", VA = "0x1765AD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600133E")]
			[Address(RVA = "0x1765B14", Offset = "0x1765B14", VA = "0x1765B14")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public bool allowGlare
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0x1765B60", Offset = "0x1765B60", VA = "0x1765B60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001340")]
			[Address(RVA = "0x1765BB8", Offset = "0x1765BB8", VA = "0x1765BB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public float glareThreshold
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0x1765C18", Offset = "0x1765C18", VA = "0x1765C18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001342")]
			[Address(RVA = "0x1765C68", Offset = "0x1765C68", VA = "0x1765C68")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public float glareClamp
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0x1765CC0", Offset = "0x1765CC0", VA = "0x1765CC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001344")]
			[Address(RVA = "0x1765D10", Offset = "0x1765D10", VA = "0x1765D10")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public float glareBlend
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0x1765D68", Offset = "0x1765D68", VA = "0x1765D68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001346")]
			[Address(RVA = "0x1765DAC", Offset = "0x1765DAC", VA = "0x1765DAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public float glareSample0Scattering
		{
			[Token(Token = "0x6001347")]
			[Address(RVA = "0x1765DF8", Offset = "0x1765DF8", VA = "0x1765DF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001348")]
			[Address(RVA = "0x1765E3C", Offset = "0x1765E3C", VA = "0x1765E3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public float glareSample0Angle
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0x1765E88", Offset = "0x1765E88", VA = "0x1765E88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600134A")]
			[Address(RVA = "0x1765ECC", Offset = "0x1765ECC", VA = "0x1765ECC")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public float glareSample0Offset
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0x1765F18", Offset = "0x1765F18", VA = "0x1765F18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x1765F5C", Offset = "0x1765F5C", VA = "0x1765F5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public float glareSample0Intensity
		{
			[Token(Token = "0x600134D")]
			[Address(RVA = "0x1765FA8", Offset = "0x1765FA8", VA = "0x1765FA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600134E")]
			[Address(RVA = "0x1765FEC", Offset = "0x1765FEC", VA = "0x1765FEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public float glareSample1Scattering
		{
			[Token(Token = "0x600134F")]
			[Address(RVA = "0x1766038", Offset = "0x1766038", VA = "0x1766038")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001350")]
			[Address(RVA = "0x176607C", Offset = "0x176607C", VA = "0x176607C")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public float glareSample1Angle
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0x17660C8", Offset = "0x17660C8", VA = "0x17660C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x176610C", Offset = "0x176610C", VA = "0x176610C")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public float glareSample1Offset
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0x1766158", Offset = "0x1766158", VA = "0x1766158")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001354")]
			[Address(RVA = "0x176619C", Offset = "0x176619C", VA = "0x176619C")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public float glareSample1Intensity
		{
			[Token(Token = "0x6001355")]
			[Address(RVA = "0x17661E8", Offset = "0x17661E8", VA = "0x17661E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001356")]
			[Address(RVA = "0x176622C", Offset = "0x176622C", VA = "0x176622C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public float glareSample2Scattering
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0x1766278", Offset = "0x1766278", VA = "0x1766278")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x17662BC", Offset = "0x17662BC", VA = "0x17662BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public float glareSample2Angle
		{
			[Token(Token = "0x6001359")]
			[Address(RVA = "0x1766308", Offset = "0x1766308", VA = "0x1766308")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600135A")]
			[Address(RVA = "0x176634C", Offset = "0x176634C", VA = "0x176634C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public float glareSample2Offset
		{
			[Token(Token = "0x600135B")]
			[Address(RVA = "0x1766398", Offset = "0x1766398", VA = "0x1766398")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600135C")]
			[Address(RVA = "0x17663DC", Offset = "0x17663DC", VA = "0x17663DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public float glareSample2Intensity
		{
			[Token(Token = "0x600135D")]
			[Address(RVA = "0x1766428", Offset = "0x1766428", VA = "0x1766428")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600135E")]
			[Address(RVA = "0x176646C", Offset = "0x176646C", VA = "0x176646C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public float glareSample3Scattering
		{
			[Token(Token = "0x600135F")]
			[Address(RVA = "0x17664B8", Offset = "0x17664B8", VA = "0x17664B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001360")]
			[Address(RVA = "0x17664FC", Offset = "0x17664FC", VA = "0x17664FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public float glareSample3Angle
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0x1766548", Offset = "0x1766548", VA = "0x1766548")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001362")]
			[Address(RVA = "0x176658C", Offset = "0x176658C", VA = "0x176658C")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public float glareSample3Offset
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0x17665D8", Offset = "0x17665D8", VA = "0x17665D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x176661C", Offset = "0x176661C", VA = "0x176661C")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public float glareSample3Intensity
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x1766668", Offset = "0x1766668", VA = "0x1766668")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x17666AC", Offset = "0x17666AC", VA = "0x17666AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x1764D28", Offset = "0x1764D28", VA = "0x1764D28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x17666F8", Offset = "0x17666F8", VA = "0x17666F8")]
		public ChangeSettingsLegacy()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class Cube : MonoBehaviour
	{
		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly MinMaxRange _minMaxSpeed;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F09C")]
		[SerializeField]
		private MinMaxRange _emissionColorIntensity;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly MinMaxRange _colorChangeTime;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly MinMaxRange _colorIntensityChangeTime;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MinMaxRange _directionSwitchTime;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA698")]
		private float _nextColorChangeTime;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _nextColorIntensityChangeTime;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0A4")]
		private int _nextColorIndex;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _nextColorIntensity;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _nextDirectionChangeTime;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _currentSpeed;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6A0")]
		[SerializeField]
		private Color[] _colors;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color _currentColor;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0AC")]
		private float _currentColorIntensity;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _baseMaterial;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _usedMaterial;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _emissionColorId;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6A8")]
		private int _colorId;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 _startPos;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x986F9C")]
		[SerializeField]
		private Vector3 _endPos;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _forward;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _forwardDirection;

		[Token(Token = "0x17000152")]
		private Vector3 _targetPosition
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x1766728", Offset = "0x1766728", VA = "0x1766728")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x17667A4", Offset = "0x17667A4", VA = "0x17667A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1766D28", Offset = "0x1766D28", VA = "0x1766D28")]
		private void Update()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1767A68", Offset = "0x1767A68", VA = "0x1767A68")]
		public Cube()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class DestroyOpenMenuText : MonoBehaviour
	{
		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6AF")]
		[SerializeField]
		private Outline _outline;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _blinkSpeed;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0B4")]
		private float _alpha;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color _textColor;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color _outlineColor;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _forward;

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x1767CA0", Offset = "0x1767CA0", VA = "0x1767CA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x1768018", Offset = "0x1768018", VA = "0x1768018")]
		public DestroyOpenMenuText()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class HandleMenu : MonoBehaviour
	{
		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6B7")]
		[SerializeField]
		private GameObject _canvas;

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x17680E8", Offset = "0x17680E8", VA = "0x17680E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x17681E4", Offset = "0x17681E4", VA = "0x17681E4")]
		public HandleMenu()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class MoveCamera : MonoBehaviour
	{
		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0BC")]
		[SerializeField]
		private float _horizontalSpeed;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _verticalSpeed;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Transform _centerTransform;

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x1768214", Offset = "0x1768214", VA = "0x1768214")]
		private void Update()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x1768570", Offset = "0x1768570", VA = "0x1768570")]
		public MoveCamera()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class RotateObject : MonoBehaviour
	{
		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3 _rotation;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6BF")]
		private readonly float _heightMovement;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private readonly float _heightMovementSpeed;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0C4")]
		private Vector3 _startPosition;

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x17685E4", Offset = "0x17685E4", VA = "0x17685E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x176865C", Offset = "0x176865C", VA = "0x176865C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1768948", Offset = "0x1768948", VA = "0x1768948")]
		public RotateObject()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class SpectateObjects : MonoBehaviour
	{
		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject[] _gameObjects;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _currentObject;

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1768A44", Offset = "0x1768A44", VA = "0x1768A44")]
		public void SwitchObject()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x1768BE8", Offset = "0x1768BE8", VA = "0x1768BE8")]
		public SpectateObjects()
		{
		}
	}
}
namespace MK.Glow.Legacy
{
	[Token(Token = "0x20002B9")]
	internal class CameraDataLegacy : CameraData
	{
		[Token(Token = "0x6001377")]
		[Address(RVA = "0x1768C88", Offset = "0x1768C88", VA = "0x1768C88")]
		public static implicit operator CameraDataLegacy(Camera input)
		{
			return null;
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x1768E90", Offset = "0x1768E90", VA = "0x1768E90")]
		public CameraDataLegacy()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	[ExecuteAlways]
	[DisallowMultipleComponent]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87C3A8", Offset = "0x87C3A8")]
	public class MKGlow : MonoBehaviour
	{
		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool allowGeometryShaders;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6C7")]
		public bool allowComputeShaders;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public RenderPriority renderPriority;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0CC")]
		public DebugView debugView;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Quality quality;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Workflow workflow;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask selectiveRenderLayerMask;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6CF")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891710", Offset = "0x891710")]
		public float anamorphicRatio;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89175C", Offset = "0x89175C")]
		public float lumaScale;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8917A4", Offset = "0x8917A4")]
		public float blooming;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x8917EC", Offset = "0x8917EC")]
		public MinMaxRange bloomThreshold;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891834", Offset = "0x891834")]
		public float bloomScattering;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float bloomIntensity;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6D7")]
		public bool allowLensSurface;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Texture2D lensSurfaceDirtTexture;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0DC")]
		public float lensSurfaceDirtIntensity;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D lensSurfaceDiffractionTexture;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lensSurfaceDiffractionIntensity;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool allowLensFlare;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6DF")]
		public LensFlareStyle lensFlareStyle;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891880", Offset = "0x891880")]
		public float lensFlareGhostFade;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0E4")]
		public float lensFlareGhostIntensity;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x8918C8", Offset = "0x8918C8")]
		public MinMaxRange lensFlareThreshold;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891910", Offset = "0x891910")]
		public float lensFlareScattering;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D lensFlareColorRamp;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6E7")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891958", Offset = "0x891958")]
		public float lensFlareChromaticAberration;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8919A4", Offset = "0x8919A4")]
		public int lensFlareGhostCount;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8919F0", Offset = "0x8919F0")]
		public float lensFlareGhostDispersal;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891A3C", Offset = "0x891A3C")]
		public float lensFlareHaloFade;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float lensFlareHaloIntensity;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891A84", Offset = "0x891A84")]
		public float lensFlareHaloSize;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6EF")]
		public bool allowGlare;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891ACC", Offset = "0x891ACC")]
		public float glareBlend;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0F4")]
		public float glareIntensity;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891B14", Offset = "0x891B14")]
		public float glareAngle;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x891B5C", Offset = "0x891B5C")]
		public MinMaxRange glareThreshold;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891BA4", Offset = "0x891BA4")]
		public int glareStreaks;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6F7")]
		public GlareStyle glareStyle;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891BF0", Offset = "0x891BF0")]
		public float glareScattering;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F0FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891C38", Offset = "0x891C38")]
		public float glareSample0Scattering;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891C80", Offset = "0x891C80")]
		public float glareSample0Angle;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float glareSample0Intensity;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891CC8", Offset = "0x891CC8")]
		public float glareSample0Offset;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6FF")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891D14", Offset = "0x891D14")]
		public float glareSample1Scattering;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891D5C", Offset = "0x891D5C")]
		public float glareSample1Angle;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9862B4")]
		public float glareSample1Intensity;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891DA4", Offset = "0x891DA4")]
		public float glareSample1Offset;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891DF0", Offset = "0x891DF0")]
		public float glareSample2Scattering;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891E38", Offset = "0x891E38")]
		public float glareSample2Angle;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA705")]
		public float glareSample2Intensity;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891E80", Offset = "0x891E80")]
		public float glareSample2Offset;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x986FA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891ECC", Offset = "0x891ECC")]
		public float glareSample3Scattering;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891F14", Offset = "0x891F14")]
		public float glareSample3Angle;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float glareSample3Intensity;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x891F5C", Offset = "0x891F5C")]
		public float glareSample3Offset;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA70C")]
		private Effect _effect;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTarget _source;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F104")]
		private RenderTarget _destination;

		[Token(Token = "0x17000153")]
		private Camera renderingCamera
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x1768EC0", Offset = "0x1768EC0", VA = "0x1768EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x1768F44", Offset = "0x1768F44", VA = "0x1768F44")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8AABE8", Offset = "0x8AABE8")]
		private void LoadMobilePreset()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x1768FE4", Offset = "0x1768FE4", VA = "0x1768FE4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8AAC4C", Offset = "0x8AAC4C")]
		private void LoadQualityPreset()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x176908C", Offset = "0x176908C", VA = "0x176908C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x1769208", Offset = "0x1769208", VA = "0x1769208")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x1769250", Offset = "0x1769250", VA = "0x1769250")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x176A8C4", Offset = "0x176A8C4", VA = "0x176A8C4")]
		public MKGlow()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	internal sealed class SettingsLegacy : Settings
	{
		[Token(Token = "0x6001380")]
		[Address(RVA = "0x1769720", Offset = "0x1769720", VA = "0x1769720")]
		public static implicit operator SettingsLegacy(MKGlow input)
		{
			return null;
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x176AD9C", Offset = "0x176AD9C", VA = "0x176AD9C")]
		public SettingsLegacy()
		{
		}
	}
}
namespace VortexStudios.PostProcessing
{
	[Serializable]
	[Token(Token = "0x20002BC")]
	public class ChromaticAberrationProfile : PostProcessingProfile
	{
		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Texture pattern;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float magnetude;

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x14D9DA0", Offset = "0x14D9DA0", VA = "0x14D9DA0", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x14DA250", Offset = "0x14DA250", VA = "0x14DA250", Slot = "8")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x14DAABC", Offset = "0x14DAABC", VA = "0x14DAABC")]
		public ChromaticAberrationProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BD")]
	public class CompositeProfile : PostProcessingProfile
	{
		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Material _materialBleeding;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA714")]
		private bool _polarity;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float[] _polarityPositive;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F10C")]
		private float[] _polarityNegative;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D _bleedingTexture;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public int lineCount;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float distortion;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA71C")]
		[SerializeField]
		public float artifact;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		public float fringing;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F114")]
		[SerializeField]
		public float bleeding;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float t;

		[Token(Token = "0x17000154")]
		public Material materialBleeding
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x14DAC14", Offset = "0x14DAC14", VA = "0x14DAC14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x14DAE4C", Offset = "0x14DAE4C", VA = "0x14DAE4C", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x14DAE60", Offset = "0x14DAE60", VA = "0x14DAE60", Slot = "4")]
		public override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x14DAF80", Offset = "0x14DAF80", VA = "0x14DAF80", Slot = "8")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x14DB908", Offset = "0x14DB908", VA = "0x14DB908")]
		public CompositeProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BE")]
	public class NoiseProfile : PostProcessingProfile
	{
		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Texture pattern;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float magnetude;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA724")]
		[SerializeField]
		public Vector2 scale;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 _offset;

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x14DBB98", Offset = "0x14DBB98", VA = "0x14DBB98", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x14DBCF8", Offset = "0x14DBCF8", VA = "0x14DBCF8", Slot = "4")]
		public override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x14DBD94", Offset = "0x14DBD94", VA = "0x14DBD94", Slot = "8")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x14DC2C0", Offset = "0x14DC2C0", VA = "0x14DC2C0")]
		public NoiseProfile()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class OLDTVPreset : ScriptableObject
	{
		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F11C")]
		[SerializeField]
		private NoiseProfile _noiseFilter;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private CompositeProfile _compositeFilter;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private StaticProfile _staticFilter;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TelevisionProfile _televisionFilter;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA72C")]
		[SerializeField]
		private ChromaticAberrationProfile _chromaticAberrationFilter;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private ScanlineProfile _scanlineFilter;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F124")]
		[SerializeField]
		private TubeProfile _tubeFilter;

		[Token(Token = "0x17000155")]
		public NoiseProfile noiseFilter
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x14DC414", Offset = "0x14DC414", VA = "0x14DC414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		public CompositeProfile compositeFilter
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x14DC444", Offset = "0x14DC444", VA = "0x14DC444")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		public StaticProfile staticFilter
		{
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x14DC474", Offset = "0x14DC474", VA = "0x14DC474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		public TelevisionProfile televisionFilter
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0x14DC4A4", Offset = "0x14DC4A4", VA = "0x14DC4A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		public ChromaticAberrationProfile chromaticAberrationFilter
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x14DC4D4", Offset = "0x14DC4D4", VA = "0x14DC4D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		public ScanlineProfile scanlineFilter
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x14DC504", Offset = "0x14DC504", VA = "0x14DC504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		public TubeProfile tubeFilter
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x14DC534", Offset = "0x14DC534", VA = "0x14DC534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x14DC564", Offset = "0x14DC564", VA = "0x14DC564")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x14DC66C", Offset = "0x14DC66C", VA = "0x14DC66C")]
		public OLDTVPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C0")]
	public class PostProcessingProfile
	{
		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected RenderBuffer _BUFFER;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _CURRENTBUFFER;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderTexture[] _TEMPBUFFER;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA734")]
		[SerializeField]
		private bool _foldout;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F12C")]
		[SerializeField]
		protected bool _enabled;

		[Token(Token = "0x1700015C")]
		public static RenderTexture SOURCEBUFFER
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x14DA674", Offset = "0x14DA674", VA = "0x14DA674")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x14DCE04", Offset = "0x14DCE04", VA = "0x14DCE04")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public static RenderTexture DESTBUFFER
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x14DA7FC", Offset = "0x14DA7FC", VA = "0x14DA7FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x14DCF98", Offset = "0x14DCF98", VA = "0x14DCF98")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public Material material
		{
			[Token(Token = "0x600139C")]
			[Address(RVA = "0x14D9F00", Offset = "0x14D9F00", VA = "0x14D9F00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public bool enabled
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0x14DD19C", Offset = "0x14DD19C", VA = "0x14DD19C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x14DD128", Offset = "0x14DD128", VA = "0x14DD128")]
			set
			{
			}
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x14DA980", Offset = "0x14DA980", VA = "0x14DA980")]
		public static void SWAPBUFFER()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x14DABB8", Offset = "0x14DABB8", VA = "0x14DABB8")]
		public PostProcessingProfile()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x14DD1E0", Offset = "0x14DD1E0", VA = "0x14DD1E0", Slot = "4")]
		public virtual void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x14DD1F4", Offset = "0x14DD1F4", VA = "0x14DD1F4", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x14DD208", Offset = "0x14DD208", VA = "0x14DD208", Slot = "6")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x14DD21C", Offset = "0x14DD21C", VA = "0x14DD21C", Slot = "7")]
		public virtual void OnReset()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x14DA650", Offset = "0x14DA650", VA = "0x14DA650", Slot = "8")]
		public virtual RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20002C1")]
	public class ScanlineProfile : PostProcessingProfile
	{
		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Texture pattern;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public int lineCount;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float magnetude;

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x14DD2F4", Offset = "0x14DD2F4", VA = "0x14DD2F4", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x14DD454", Offset = "0x14DD454", VA = "0x14DD454", Slot = "8")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x14DCBEC", Offset = "0x14DCBEC", VA = "0x14DCBEC")]
		public ScanlineProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C2")]
	public class StaticProfile : PostProcessingProfile
	{
		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA73C")]
		[SerializeField]
		public Texture staticPattern;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		public float staticMagnitude;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F134")]
		[SerializeField]
		public float staticScale;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float staticOffset;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Texture dirtPattern;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float dirtMagnitude;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA744")]
		private Vector2 _offset;

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x14DD968", Offset = "0x14DD968", VA = "0x14DD968", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x14DDBAC", Offset = "0x14DDBAC", VA = "0x14DDBAC", Slot = "4")]
		public override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x14DDC2C", Offset = "0x14DDC2C", VA = "0x14DDC2C", Slot = "8")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x14DC84C", Offset = "0x14DC84C", VA = "0x14DC84C")]
		public StaticProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C3")]
	public class TelevisionProfile : PostProcessingProfile
	{
		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		public int lineCount;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F13C")]
		[SerializeField]
		public Vector2 sync;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 _sync;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float brightness;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float contrast;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA74C")]
		[SerializeField]
		public float saturation;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		public float sharpness;

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x14DE248", Offset = "0x14DE248", VA = "0x14DE248", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x14DE25C", Offset = "0x14DE25C", VA = "0x14DE25C", Slot = "4")]
		public override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x14DE398", Offset = "0x14DE398", VA = "0x14DE398", Slot = "8")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x14DC994", Offset = "0x14DC994", VA = "0x14DC994")]
		public TelevisionProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C4")]
	public class TubeProfile : PostProcessingProfile
	{
		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F144")]
		[SerializeField]
		public Texture maskPattern;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public Texture reflexPattern;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float distortionMagnitude;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float reflexMagnitude;

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x14DE9C8", Offset = "0x14DE9C8", VA = "0x14DE9C8", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x14DEB28", Offset = "0x14DEB28", VA = "0x14DEB28", Slot = "8")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x14DCCF8", Offset = "0x14DCCF8", VA = "0x14DCCF8")]
		public TubeProfile()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x20002C5")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4001990")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x14C5600", Offset = "0x14C5600", VA = "0x14C5600")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x14C56E8", Offset = "0x14C56E8", VA = "0x14C56E8")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x14C57D0", Offset = "0x14C57D0", VA = "0x14C57D0")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x14C5930", Offset = "0x14C5930", VA = "0x14C5930")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x14C5A20", Offset = "0x14C5A20", VA = "0x14C5A20")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x14C5B08", Offset = "0x14C5B08", VA = "0x14C5B08")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x14C5C18", Offset = "0x14C5C18", VA = "0x14C5C18")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x14C5D00", Offset = "0x14C5D00", VA = "0x14C5D00")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x14C5DF4", Offset = "0x14C5DF4", VA = "0x14C5DF4")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x14C5E68", Offset = "0x14C5E68", VA = "0x14C5E68")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x14C5EAC", Offset = "0x14C5EAC", VA = "0x14C5EAC")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x60013BF")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013C0")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20002C6")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x2000710")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885EDC", Offset = "0x885EDC")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x885F1C", Offset = "0x885F1C")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x2000712")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4002BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA744")]
			public int x;

			[Token(Token = "0x4002BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public int y;

			[Token(Token = "0x4002BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F13C")]
			public int z;
		}

		[Token(Token = "0x2000713")]
		public struct GSALine
		{
			[Token(Token = "0x4002BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x4002BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int pointCount;
		}

		[Token(Token = "0x2000714")]
		public struct GSALineCollection
		{
			[Token(Token = "0x4002BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x4002BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA74C")]
			public int lineCount;
		}

		[Token(Token = "0x2000715")]
		public struct GSALegalData
		{
			[Token(Token = "0x4002BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public int overMaxRange;

			[Token(Token = "0x4002BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x986F9C")]
			public int includeBigGrap;

			[Token(Token = "0x4002BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int bigGapNum;

			[Token(Token = "0x4002BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int centerOut;

			[Token(Token = "0x4002BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int removeNarrow;

			[Token(Token = "0x4002BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA753")]
			public int overMaxRange_more;

			[Token(Token = "0x4002BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000716")]
		public struct GSARect
		{
			[Token(Token = "0x4002BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F144")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4002BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x4002BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i rightup;

			[Token(Token = "0x4002BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x4002BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA75B")]
			public GSAPoint3i center;

			[Token(Token = "0x4002BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public uint width;

			[Token(Token = "0x4002BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F14C")]
			public uint height;

			[Token(Token = "0x4002BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int isLegal;

			[Token(Token = "0x4002BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4001991")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x14C6490", Offset = "0x14C6490", VA = "0x14C6490")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x14C6594", Offset = "0x14C6594", VA = "0x14C6594")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x14C6684", Offset = "0x14C6684", VA = "0x14C6684")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x14C67A0", Offset = "0x14C67A0", VA = "0x14C67A0")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x14C68BC", Offset = "0x14C68BC", VA = "0x14C68BC")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x14C69B8", Offset = "0x14C69B8", VA = "0x14C69B8")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x14C6AB4", Offset = "0x14C6AB4", VA = "0x14C6AB4")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x14C6BC4", Offset = "0x14C6BC4", VA = "0x14C6BC4")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x14C6CC0", Offset = "0x14C6CC0", VA = "0x14C6CC0")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x14C6DBC", Offset = "0x14C6DBC", VA = "0x14C6DBC")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x14C6ED0", Offset = "0x14C6ED0", VA = "0x14C6ED0")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x14C6FF4", Offset = "0x14C6FF4", VA = "0x14C6FF4")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x14C7044", Offset = "0x14C7044", VA = "0x14C7044")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x14C7084", Offset = "0x14C7084", VA = "0x14C7084")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x14C70C4", Offset = "0x14C70C4", VA = "0x14C70C4")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x14C7104", Offset = "0x14C7104", VA = "0x14C7104")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x14C7148", Offset = "0x14C7148", VA = "0x14C7148")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x14C7280", Offset = "0x14C7280", VA = "0x14C7280")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x14C72C0", Offset = "0x14C72C0", VA = "0x14C72C0")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x14C7300", Offset = "0x14C7300", VA = "0x14C7300")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x14C7330", Offset = "0x14C7330", VA = "0x14C7330")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x14C7394", Offset = "0x14C7394", VA = "0x14C7394")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20002C7")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4001993")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x4001994")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F164")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x17000160")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x14C5ED4", Offset = "0x14C5ED4", VA = "0x14C5ED4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x14C6044", Offset = "0x14C6044", VA = "0x14C6044")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x14C6070", Offset = "0x14C6070", VA = "0x14C6070")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x14C609C", Offset = "0x14C609C", VA = "0x14C609C")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x14C60C8", Offset = "0x14C60C8", VA = "0x14C60C8")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x14C5FC4", Offset = "0x14C5FC4", VA = "0x14C5FC4")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x2000717")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4002BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA76B")]
			public bool overMaxRange;

			[Token(Token = "0x4002BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public bool includeBigGap;

			[Token(Token = "0x4002BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F15C")]
			public int bigGapNum;

			[Token(Token = "0x4002BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool centerOut;

			[Token(Token = "0x4002BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool removeNarrow;

			[Token(Token = "0x4002BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange_more;

			[Token(Token = "0x4002BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA773")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000718")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4002BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public Vector3 lowerleft;

			[Token(Token = "0x4002BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F164")]
			public Vector3 upperleft;

			[Token(Token = "0x4002BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 upperRight;

			[Token(Token = "0x4002BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerRight;

			[Token(Token = "0x4002BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 center;

			[Token(Token = "0x4002BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA77B")]
			public uint width;

			[Token(Token = "0x4002BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public uint height;

			[Token(Token = "0x4002BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F16C")]
			public bool isLegal;

			[Token(Token = "0x4002BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x2000719")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x200071A")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x17000161")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x14CA430", Offset = "0x14CA430", VA = "0x14CA430")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x14CA550", Offset = "0x14CA550", VA = "0x14CA550")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x14CA588", Offset = "0x14CA588", VA = "0x14CA588")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x14CA5C0", Offset = "0x14CA5C0", VA = "0x14CA5C0")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x14CA890", Offset = "0x14CA890", VA = "0x14CA890")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x14CB144", Offset = "0x14CB144", VA = "0x14CB144")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x14CB290", Offset = "0x14CB290", VA = "0x14CB290")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x14CB3AC", Offset = "0x14CB3AC", VA = "0x14CB3AC")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x14C7D30", Offset = "0x14C7D30", VA = "0x14C7D30")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8AACB0", Offset = "0x8AACB0")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x14C9620", Offset = "0x14C9620", VA = "0x14C9620")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8AAD60", Offset = "0x8AAD60")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x14CA520", Offset = "0x14CA520", VA = "0x14CA520")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x20002C9")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool State;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool PressedDown;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA793")]
		public bool PressedUp;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool LongPressed;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F184")]
		public bool Click;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Touch;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool TouchDown;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool TouchUp;

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x24A4318", Offset = "0x24A4318", VA = "0x24A4318")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class ControllerHand
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA79B")]
		public PvrControllerKey App;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public PvrControllerKey Touch;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F18C")]
		public PvrControllerKey Home;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7A3")]
		public PvrControllerKey X;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public PvrControllerKey Y;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F194")]
		public PvrControllerKey A;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PvrControllerKey B;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PvrControllerKey Left;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PvrControllerKey Right;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7AB")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F19C")]
		public int TriggerNum;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int GripValue;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Quaternion Rotation;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7B3")]
		public int Battery;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public ControllerState ConnectState;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x986FB4")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isShowBoundary;

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x24A3FBC", Offset = "0x24A3FBC", VA = "0x24A3FBC")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public enum ControllerState
	{
		[Token(Token = "0x40019B9")]
		Error = -1,
		[Token(Token = "0x40019BA")]
		DisConnected,
		[Token(Token = "0x40019BB")]
		Connected
	}
	[Token(Token = "0x20002CC")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x40019BD")]
		APP = 1,
		[Token(Token = "0x40019BE")]
		TOUCHPAD,
		[Token(Token = "0x40019BF")]
		HOME,
		[Token(Token = "0x40019C0")]
		VOLUMEUP,
		[Token(Token = "0x40019C1")]
		VOLUMEDOWN,
		[Token(Token = "0x40019C2")]
		TRIGGER,
		[Token(Token = "0x40019C3")]
		A,
		[Token(Token = "0x40019C4")]
		B,
		[Token(Token = "0x40019C5")]
		X,
		[Token(Token = "0x40019C6")]
		Y,
		[Token(Token = "0x40019C7")]
		Left,
		[Token(Token = "0x40019C8")]
		Right,
		[Token(Token = "0x40019C9")]
		Thumbrest
	}
	[Token(Token = "0x20002CD")]
	public enum SwipeDirection
	{
		[Token(Token = "0x40019CB")]
		No,
		[Token(Token = "0x40019CC")]
		SwipeUp,
		[Token(Token = "0x40019CD")]
		SwipeDown,
		[Token(Token = "0x40019CE")]
		SwipeLeft,
		[Token(Token = "0x40019CF")]
		SwipeRight
	}
	[Token(Token = "0x20002CE")]
	public enum TouchPadClick
	{
		[Token(Token = "0x40019D1")]
		No,
		[Token(Token = "0x40019D2")]
		ClickUp,
		[Token(Token = "0x40019D3")]
		ClickDown,
		[Token(Token = "0x40019D4")]
		ClickLeft,
		[Token(Token = "0x40019D5")]
		ClickRight
	}
	[Token(Token = "0x20002CF")]
	public struct Controller
	{
		[Token(Token = "0x40019D6")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x24962F4", Offset = "0x24962F4", VA = "0x24962F4")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x24964D4", Offset = "0x24964D4", VA = "0x24964D4")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x249695C", Offset = "0x249695C", VA = "0x249695C")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x2497060", Offset = "0x2497060", VA = "0x2497060")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x2497370", Offset = "0x2497370", VA = "0x2497370")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x2497574", Offset = "0x2497574", VA = "0x2497574")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x249776C", Offset = "0x249776C", VA = "0x249776C")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x249797C", Offset = "0x249797C", VA = "0x249797C")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x2497B8C", Offset = "0x2497B8C", VA = "0x2497B8C")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x2497D9C", Offset = "0x2497D9C", VA = "0x2497D9C")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x2497FAC", Offset = "0x2497FAC", VA = "0x2497FAC")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x2499398", Offset = "0x2499398", VA = "0x2499398")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x249A784", Offset = "0x249A784", VA = "0x249A784")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x249BB70", Offset = "0x249BB70", VA = "0x249BB70")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x249C740", Offset = "0x249C740", VA = "0x249C740")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x249D310", Offset = "0x249D310", VA = "0x249D310")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x249DEE0", Offset = "0x249DEE0", VA = "0x249DEE0")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x249F2CC", Offset = "0x249F2CC", VA = "0x249F2CC")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x24A06B8", Offset = "0x24A06B8", VA = "0x24A06B8")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x24A0B7C", Offset = "0x24A0B7C", VA = "0x24A0B7C")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x24A0D44", Offset = "0x24A0D44", VA = "0x24A0D44")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x24A0E40", Offset = "0x24A0E40", VA = "0x24A0E40")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x24A1074", Offset = "0x24A1074", VA = "0x24A1074")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x24A1190", Offset = "0x24A1190", VA = "0x24A1190")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x24A128C", Offset = "0x24A128C", VA = "0x24A128C")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x24A1388", Offset = "0x24A1388", VA = "0x24A1388")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x24A1498", Offset = "0x24A1498", VA = "0x24A1498")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x24A15B0", Offset = "0x24A15B0", VA = "0x24A15B0")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x24A16E0", Offset = "0x24A16E0", VA = "0x24A16E0")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x24A17F8", Offset = "0x24A17F8", VA = "0x24A17F8")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x24A18E8", Offset = "0x24A18E8", VA = "0x24A18E8")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x24A19D8", Offset = "0x24A19D8", VA = "0x24A19D8")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x24A1AC8", Offset = "0x24A1AC8", VA = "0x24A1AC8")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x24A1BC8", Offset = "0x24A1BC8", VA = "0x24A1BC8")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x24A1CC8", Offset = "0x24A1CC8", VA = "0x24A1CC8")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x24A1EA4", Offset = "0x24A1EA4", VA = "0x24A1EA4")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x24A1FA4", Offset = "0x24A1FA4", VA = "0x24A1FA4")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x24A20B4", Offset = "0x24A20B4", VA = "0x24A20B4")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x24A21BC", Offset = "0x24A21BC", VA = "0x24A21BC")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x24A22CC", Offset = "0x24A22CC", VA = "0x24A22CC")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x24A23DC", Offset = "0x24A23DC", VA = "0x24A23DC")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x24A24EC", Offset = "0x24A24EC", VA = "0x24A24EC")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x24A25EC", Offset = "0x24A25EC", VA = "0x24A25EC")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x24A26EC", Offset = "0x24A26EC", VA = "0x24A26EC")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x24A280C", Offset = "0x24A280C", VA = "0x24A280C")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x24A291C", Offset = "0x24A291C", VA = "0x24A291C")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x24A2A2C", Offset = "0x24A2A2C", VA = "0x24A2A2C")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x24A2B34", Offset = "0x24A2B34", VA = "0x24A2B34")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x24A2C3C", Offset = "0x24A2C3C", VA = "0x24A2C3C")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x24A2D44", Offset = "0x24A2D44", VA = "0x24A2D44")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x24A2E54", Offset = "0x24A2E54", VA = "0x24A2E54")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xD2BE64", Offset = "0xD2BE64", VA = "0xD2BE64")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xD2BEB8", Offset = "0xD2BEB8", VA = "0xD2BEB8")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xD2BF14", Offset = "0xD2BF14", VA = "0xD2BF14")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x24A3280", Offset = "0x24A3280", VA = "0x24A3280")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x24A340C", Offset = "0x24A340C", VA = "0x24A340C")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x24A35EC", Offset = "0x24A35EC", VA = "0x24A35EC")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x24A3788", Offset = "0x24A3788", VA = "0x24A3788")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x24A3924", Offset = "0x24A3924", VA = "0x24A3924")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x24A3AC0", Offset = "0x24A3AC0", VA = "0x24A3AC0")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x24A3C5C", Offset = "0x24A3C5C", VA = "0x24A3C5C")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x24A3D80", Offset = "0x24A3D80", VA = "0x24A3D80")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x24A3EA4", Offset = "0x24A3EA4", VA = "0x24A3EA4")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001429")]
		[Address(RVA = "0x24A3464", Offset = "0x24A3464", VA = "0x24A3464")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x600142A")]
		[Address(RVA = "0x24A3634", Offset = "0x24A3634", VA = "0x24A3634")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600142B")]
		[Address(RVA = "0x24A37D0", Offset = "0x24A37D0", VA = "0x24A37D0")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600142C")]
		[Address(RVA = "0x24A396C", Offset = "0x24A396C", VA = "0x24A396C")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600142D")]
		[Address(RVA = "0x24A3B08", Offset = "0x24A3B08", VA = "0x24A3B08")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600142E")]
		[Address(RVA = "0x24A32F8", Offset = "0x24A32F8", VA = "0x24A32F8")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x20002D0")]
	public enum ControllerVariety
	{
		[Token(Token = "0x40019D8")]
		Controller0,
		[Token(Token = "0x40019D9")]
		Controller1
	}
	[Token(Token = "0x20002D1")]
	public enum ControllerDevice
	{
		[Token(Token = "0x40019DB")]
		Goblin,
		[Token(Token = "0x40019DC")]
		Neo,
		[Token(Token = "0x40019DD")]
		G2,
		[Token(Token = "0x40019DE")]
		Neo2,
		[Token(Token = "0x40019DF")]
		Neo3,
		[Token(Token = "0x40019E0")]
		NewController
	}
	[Token(Token = "0x20002D2")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x40019E2")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x40019E3")]
		PUI_VERSION,
		[Token(Token = "0x40019E4")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x40019E5")]
		EQUIPMENT_SN,
		[Token(Token = "0x40019E6")]
		CUSTOMER_SN,
		[Token(Token = "0x40019E7")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x40019E8")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x40019E9")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x40019EA")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x40019EB")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x40019EC")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x40019ED")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x40019EE")]
		DEVICE_IP
	}
	[Token(Token = "0x20002D3")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x40019F0")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x40019F1")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x20002D4")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x40019F3")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x40019F4")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x20002D5")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x40019F6")]
		S_ON,
		[Token(Token = "0x40019F7")]
		S_OFF
	}
	[Token(Token = "0x20002D6")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x40019F9")]
		SINGLE_CLICK,
		[Token(Token = "0x40019FA")]
		DOUBLE_CLICK,
		[Token(Token = "0x40019FB")]
		LONG_PRESS
	}
	[Token(Token = "0x20002D7")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x40019FD")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x40019FE")]
		VALUE_HOME_BACK,
		[Token(Token = "0x40019FF")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x4001A00")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x4001A01")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x4001A02")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4001A03")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4001A04")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x20002D8")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4001A06")]
		THREE = 3,
		[Token(Token = "0x4001A07")]
		TEN = 10,
		[Token(Token = "0x4001A08")]
		THIRTY = 30,
		[Token(Token = "0x4001A09")]
		SIXTY = 60,
		[Token(Token = "0x4001A0A")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001A0B")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001A0C")]
		NEVER = -1
	}
	[Token(Token = "0x20002D9")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x4001A0E")]
		FIFTEEN = 15,
		[Token(Token = "0x4001A0F")]
		THIRTY = 30,
		[Token(Token = "0x4001A10")]
		SIXTY = 60,
		[Token(Token = "0x4001A11")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001A12")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001A13")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4001A14")]
		NEVER = -1
	}
	[Token(Token = "0x20002DA")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4001A16")]
		SFS_USB,
		[Token(Token = "0x4001A17")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4001A18")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4001A19")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4001A1A")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4001A1B")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4001A1C")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x4001A1D")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x4001A1E")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4001A1F")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4001A20")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4001A21")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4001A22")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4001A23")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x20002DB")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4001A25")]
		MTP,
		[Token(Token = "0x4001A26")]
		CHARGE
	}
	[Token(Token = "0x20002DC")]
	public struct ToBService
	{
		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F22C")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA851")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x24B87AC", Offset = "0x24B87AC", VA = "0x24B87AC")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x24B8998", Offset = "0x24B8998", VA = "0x24B8998")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x24B8AA8", Offset = "0x24B8AA8", VA = "0x24B8AA8")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x24B8BC0", Offset = "0x24B8BC0", VA = "0x24B8BC0")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x24B8CD8", Offset = "0x24B8CD8", VA = "0x24B8CD8")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x24B8E60", Offset = "0x24B8E60", VA = "0x24B8E60")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x24B9070", Offset = "0x24B9070", VA = "0x24B9070")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x24B9208", Offset = "0x24B9208", VA = "0x24B9208")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x24B9448", Offset = "0x24B9448", VA = "0x24B9448")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x24B9648", Offset = "0x24B9648", VA = "0x24B9648")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x24B9740", Offset = "0x24B9740", VA = "0x24B9740")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x24B9960", Offset = "0x24B9960", VA = "0x24B9960")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x24B9C70", Offset = "0x24B9C70", VA = "0x24B9C70")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x24B9E8C", Offset = "0x24B9E8C", VA = "0x24B9E8C")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x24BA024", Offset = "0x24BA024", VA = "0x24BA024")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x24BA174", Offset = "0x24BA174", VA = "0x24BA174")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x24BA3AC", Offset = "0x24BA3AC", VA = "0x24BA3AC")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x24BA55C", Offset = "0x24BA55C", VA = "0x24BA55C")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x24BA620", Offset = "0x24BA620", VA = "0x24BA620")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x24BA6E4", Offset = "0x24BA6E4", VA = "0x24BA6E4")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x24BA7A8", Offset = "0x24BA7A8", VA = "0x24BA7A8")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x24BA86C", Offset = "0x24BA86C", VA = "0x24BA86C")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x24BA930", Offset = "0x24BA930", VA = "0x24BA930")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x24BA9F4", Offset = "0x24BA9F4", VA = "0x24BA9F4")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x24BAAB8", Offset = "0x24BAAB8", VA = "0x24BAAB8")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x24BAB7C", Offset = "0x24BAB7C", VA = "0x24BAB7C")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x24BAC40", Offset = "0x24BAC40", VA = "0x24BAC40")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x24BAD04", Offset = "0x24BAD04", VA = "0x24BAD04")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x24BAE9C", Offset = "0x24BAE9C", VA = "0x24BAE9C")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4001A2F")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4001A30")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4001A31")]
		SEENSOR_COUNT,
		[Token(Token = "0x4001A32")]
		ABILITY6DOF,
		[Token(Token = "0x4001A33")]
		PLATFORM_TYPE,
		[Token(Token = "0x4001A34")]
		TRACKING_MODE,
		[Token(Token = "0x4001A35")]
		LOG_LEVEL,
		[Token(Token = "0x4001A36")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4001A37")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4001A38")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4001A39")]
		iShowFPS,
		[Token(Token = "0x4001A3A")]
		SensorMode,
		[Token(Token = "0x4001A3B")]
		LOGICFLOW,
		[Token(Token = "0x4001A3C")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4001A3D")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4001A3E")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4001A3F")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4001A40")]
		isEnableBoundary,
		[Token(Token = "0x4001A41")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4001A42")]
		GetDisplay_Orientation,
		[Token(Token = "0x4001A43")]
		GetWaitFrameNum,
		[Token(Token = "0x4001A44")]
		GetResetFrameNum,
		[Token(Token = "0x4001A45")]
		EnableFFRBYSYS,
		[Token(Token = "0x4001A46")]
		RotControllerMode
	}
	[Token(Token = "0x20002DE")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4001A48")]
		IPD,
		[Token(Token = "0x4001A49")]
		VFOV,
		[Token(Token = "0x4001A4A")]
		HFOV,
		[Token(Token = "0x4001A4B")]
		NECK_MODEL_X,
		[Token(Token = "0x4001A4C")]
		NECK_MODEL_Y,
		[Token(Token = "0x4001A4D")]
		NECK_MODEL_Z,
		[Token(Token = "0x4001A4E")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x20002DF")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4001A50")]
		X_1 = 1,
		[Token(Token = "0x4001A51")]
		X_2 = 2,
		[Token(Token = "0x4001A52")]
		X_4 = 4,
		[Token(Token = "0x4001A53")]
		X_8 = 8
	}
	[Token(Token = "0x20002E0")]
	public enum PlatForm
	{
		[Token(Token = "0x4001A55")]
		Android = 1,
		[Token(Token = "0x4001A56")]
		IOS,
		[Token(Token = "0x4001A57")]
		Win,
		[Token(Token = "0x4001A58")]
		Notsupport
	}
	[Token(Token = "0x20002E1")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4001A5A")]
		BD_0 = 0,
		[Token(Token = "0x4001A5B")]
		BD_16 = 16,
		[Token(Token = "0x4001A5C")]
		BD_24 = 24
	}
	[Token(Token = "0x20002E2")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4001A5E")]
		Normal,
		[Token(Token = "0x4001A5F")]
		High
	}
	[Token(Token = "0x20002E3")]
	public enum Sensorindex
	{
		[Token(Token = "0x4001A61")]
		Default,
		[Token(Token = "0x4001A62")]
		FirstSensor,
		[Token(Token = "0x4001A63")]
		SecondSensor
	}
	[Token(Token = "0x20002E4")]
	public enum Eye
	{
		[Token(Token = "0x4001A65")]
		LeftEye,
		[Token(Token = "0x4001A66")]
		RightEye,
		[Token(Token = "0x4001A67")]
		BothEye
	}
	[Token(Token = "0x20002E5")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4001A69")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4001A6A")]
		TYPE_COLOR,
		[Token(Token = "0x4001A6B")]
		TYPE_TEXT,
		[Token(Token = "0x4001A6C")]
		TYPE_FONT,
		[Token(Token = "0x4001A6D")]
		TYPE_VALUE,
		[Token(Token = "0x4001A6E")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4001A6F")]
		TYPE_OBJECT,
		[Token(Token = "0x4001A70")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x20002E6")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4001A72")]
		EyeLevel,
		[Token(Token = "0x4001A73")]
		FloorLevel,
		[Token(Token = "0x4001A74")]
		StageLevel
	}
	[Token(Token = "0x20002E7")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4001A76")]
		Low,
		[Token(Token = "0x4001A77")]
		Med,
		[Token(Token = "0x4001A78")]
		High,
		[Token(Token = "0x4001A79")]
		Top_High
	}
	[Token(Token = "0x20002E8")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x4001A7B")]
		MultiPass,
		[Token(Token = "0x4001A7C")]
		SinglePass
	}
	[Token(Token = "0x20002E9")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4001A7E")]
		kGazePointValid = 1,
		[Token(Token = "0x4001A7F")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4001A80")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4001A81")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4001A82")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20002EA")]
	public enum TrackingMode
	{
		[Token(Token = "0x4001A84")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4001A85")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4001A86")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20002EB")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F28C")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8BF")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F294")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float leftEyeOpenness;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rightEyeOpenness;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8C7")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F29C")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8CF")]
		public byte[] reserved;
	}
	[Token(Token = "0x20002EC")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public Vector3 Direction;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F2A4")]
		public bool IsValid;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Origin;
	}
	[Token(Token = "0x20002ED")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20002EE")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8D7")]
		public float left;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float right;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F2AC")]
		public float top;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float bottom;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float near;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float far;
	}
	[Token(Token = "0x20002EF")]
	public struct EyeSetting
	{
		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8DF")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public Rect eyeRect;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F2B4")]
		public float eyeFov;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float eyeAspect;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20002F0")]
	public struct Sensor
	{
		[Token(Token = "0x4001AAA")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600144C")]
		[Address(RVA = "0x24AA500", Offset = "0x24AA500", VA = "0x24AA500")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x600144D")]
		[Address(RVA = "0x24AA60C", Offset = "0x24AA60C", VA = "0x24AA60C")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x600144E")]
		[Address(RVA = "0x24AA718", Offset = "0x24AA718", VA = "0x24AA718")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x600144F")]
		[Address(RVA = "0x24AA814", Offset = "0x24AA814", VA = "0x24AA814")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001450")]
		[Address(RVA = "0x24AA910", Offset = "0x24AA910", VA = "0x24AA910")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001451")]
		[Address(RVA = "0x24AAA0C", Offset = "0x24AAA0C", VA = "0x24AAA0C")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001452")]
		[Address(RVA = "0x24AAB08", Offset = "0x24AAB08", VA = "0x24AAB08")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6001453")]
		[Address(RVA = "0x24AAC04", Offset = "0x24AAC04", VA = "0x24AAC04")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6001454")]
		[Address(RVA = "0x24AAD3C", Offset = "0x24AAD3C", VA = "0x24AAD3C")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001455")]
		[Address(RVA = "0x24AAE9C", Offset = "0x24AAE9C", VA = "0x24AAE9C")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6001456")]
		[Address(RVA = "0x24AAF8C", Offset = "0x24AAF8C", VA = "0x24AAF8C")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6001457")]
		[Address(RVA = "0x24AB07C", Offset = "0x24AB07C", VA = "0x24AB07C")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001458")]
		[Address(RVA = "0x24AB190", Offset = "0x24AB190", VA = "0x24AB190")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001459")]
		[Address(RVA = "0x24AB2A4", Offset = "0x24AB2A4", VA = "0x24AB2A4")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x600145A")]
		[Address(RVA = "0x24AB394", Offset = "0x24AB394", VA = "0x24AB394")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x600145B")]
		[Address(RVA = "0x24AB4A4", Offset = "0x24AB4A4", VA = "0x24AB4A4")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x600145C")]
		[Address(RVA = "0x24AB5F0", Offset = "0x24AB5F0", VA = "0x24AB5F0")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x24AB70C", Offset = "0x24AB70C", VA = "0x24AB70C")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x24AB750", Offset = "0x24AB750", VA = "0x24AB750")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x24AB790", Offset = "0x24AB790", VA = "0x24AB790")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x24ABC50", Offset = "0x24ABC50", VA = "0x24ABC50")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x24AC188", Offset = "0x24AC188", VA = "0x24AC188")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x24AC1B8", Offset = "0x24AC1B8", VA = "0x24AC1B8")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x24AC5D0", Offset = "0x24AC5D0", VA = "0x24AC5D0")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x24AC610", Offset = "0x24AC610", VA = "0x24AC610")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x24AC650", Offset = "0x24AC650", VA = "0x24AC650")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x24AC77C", Offset = "0x24AC77C", VA = "0x24AC77C")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x24AC7DC", Offset = "0x24AC7DC", VA = "0x24AC7DC")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x24AC894", Offset = "0x24AC894", VA = "0x24AC894")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x24AC988", Offset = "0x24AC988", VA = "0x24AC988")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x24AC9F8", Offset = "0x24AC9F8", VA = "0x24AC9F8")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x24ACA68", Offset = "0x24ACA68", VA = "0x24ACA68")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x24ACA98", Offset = "0x24ACA98", VA = "0x24ACA98")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x24AB7B8", Offset = "0x24AB7B8", VA = "0x24AB7B8")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x24ACFCC", Offset = "0x24ACFCC", VA = "0x24ACFCC")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x24ABD40", Offset = "0x24ABD40", VA = "0x24ABD40")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x24AC1E0", Offset = "0x24AC1E0", VA = "0x24AC1E0")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x24AD578", Offset = "0x24AD578", VA = "0x24AD578")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x24AD5B8", Offset = "0x24AD5B8", VA = "0x24AD5B8")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x24ADC54", Offset = "0x24ADC54", VA = "0x24ADC54")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002F1")]
	public struct Render
	{
		[Token(Token = "0x4001AAB")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001474")]
		[Address(RVA = "0x24A67D8", Offset = "0x24A67D8", VA = "0x24A67D8")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6001475")]
		[Address(RVA = "0x24A6924", Offset = "0x24A6924", VA = "0x24A6924")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6001476")]
		[Address(RVA = "0x24A6A28", Offset = "0x24A6A28", VA = "0x24A6A28")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001477")]
		[Address(RVA = "0x24A6B34", Offset = "0x24A6B34", VA = "0x24A6B34")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6001478")]
		[Address(RVA = "0x24A6C24", Offset = "0x24A6C24", VA = "0x24A6C24")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6001479")]
		[Address(RVA = "0x24A6D48", Offset = "0x24A6D48", VA = "0x24A6D48")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x600147A")]
		[Address(RVA = "0x24A6E4C", Offset = "0x24A6E4C", VA = "0x24A6E4C")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x600147B")]
		[Address(RVA = "0x24A6F50", Offset = "0x24A6F50", VA = "0x24A6F50")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x600147C")]
		[Address(RVA = "0x24A7098", Offset = "0x24A7098", VA = "0x24A7098")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x600147D")]
		[Address(RVA = "0x24A7264", Offset = "0x24A7264", VA = "0x24A7264")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x600147E")]
		[Address(RVA = "0x24A7560", Offset = "0x24A7560", VA = "0x24A7560")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x600147F")]
		[Address(RVA = "0x24A768C", Offset = "0x24A768C", VA = "0x24A768C")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001480")]
		[Address(RVA = "0x24A77B8", Offset = "0x24A77B8", VA = "0x24A77B8")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6001481")]
		[Address(RVA = "0x24A78C4", Offset = "0x24A78C4", VA = "0x24A78C4")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001482")]
		[Address(RVA = "0x24A79D0", Offset = "0x24A79D0", VA = "0x24A79D0")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6001483")]
		[Address(RVA = "0x24A7AC4", Offset = "0x24A7AC4", VA = "0x24A7AC4")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6001484")]
		[Address(RVA = "0x24A7BB4", Offset = "0x24A7BB4", VA = "0x24A7BB4")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001485")]
		[Address(RVA = "0x24A7D08", Offset = "0x24A7D08", VA = "0x24A7D08")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001486")]
		[Address(RVA = "0x24A7DFC", Offset = "0x24A7DFC", VA = "0x24A7DFC")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001487")]
		[Address(RVA = "0x24A7EF0", Offset = "0x24A7EF0", VA = "0x24A7EF0")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001488")]
		[Address(RVA = "0x24A7FF4", Offset = "0x24A7FF4", VA = "0x24A7FF4")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001489")]
		[Address(RVA = "0x24A80F8", Offset = "0x24A80F8", VA = "0x24A80F8")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x600148A")]
		[Address(RVA = "0x24A81FC", Offset = "0x24A81FC", VA = "0x24A81FC")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x24A8310", Offset = "0x24A8310", VA = "0x24A8310")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x24A8398", Offset = "0x24A8398", VA = "0x24A8398")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x24A83E8", Offset = "0x24A83E8", VA = "0x24A83E8")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x24A85E0", Offset = "0x24A85E0", VA = "0x24A85E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8AAE10", Offset = "0x8AAE10")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x24A8688", Offset = "0x24A8688", VA = "0x24A8688")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x24A86F0", Offset = "0x24A86F0", VA = "0x24A86F0")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x24A8A00", Offset = "0x24A8A00", VA = "0x24A8A00")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x24A8A30", Offset = "0x24A8A30", VA = "0x24A8A30")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x24A8DE0", Offset = "0x24A8DE0", VA = "0x24A8DE0")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x24A8E44", Offset = "0x24A8E44", VA = "0x24A8E44")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x24A8E94", Offset = "0x24A8E94", VA = "0x24A8E94")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x24A8EE4", Offset = "0x24A8EE4", VA = "0x24A8EE4")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x24A9054", Offset = "0x24A9054", VA = "0x24A9054")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x24A908C", Offset = "0x24A908C", VA = "0x24A908C")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x24A94E4", Offset = "0x24A94E4", VA = "0x24A94E4")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x24A956C", Offset = "0x24A956C", VA = "0x24A956C")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x24AA3A4", Offset = "0x24AA3A4", VA = "0x24AA3A4")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x24AA3DC", Offset = "0x24AA3DC", VA = "0x24AA3DC")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x24AA414", Offset = "0x24AA414", VA = "0x24AA414")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x24AA464", Offset = "0x24AA464", VA = "0x24AA464")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x24AA4B4", Offset = "0x24AA4B4", VA = "0x24AA4B4")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x24877F4", Offset = "0x24877F4", VA = "0x24877F4")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public struct System
	{
		[Token(Token = "0x4001AAC")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001AAD")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x24ADCA8", Offset = "0x24ADCA8", VA = "0x24ADCA8")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x24ADDA4", Offset = "0x24ADDA4", VA = "0x24ADDA4")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x24ADE94", Offset = "0x24ADE94", VA = "0x24ADE94")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x24ADF84", Offset = "0x24ADF84", VA = "0x24ADF84")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x24AE074", Offset = "0x24AE074", VA = "0x24AE074")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x24AE164", Offset = "0x24AE164", VA = "0x24AE164")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x24AE254", Offset = "0x24AE254", VA = "0x24AE254")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x24AE344", Offset = "0x24AE344", VA = "0x24AE344")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x24AE450", Offset = "0x24AE450", VA = "0x24AE450")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x24AE864", Offset = "0x24AE864", VA = "0x24AE864")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x24AE980", Offset = "0x24AE980", VA = "0x24AE980")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x24AEA70", Offset = "0x24AEA70", VA = "0x24AEA70")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x24AEB60", Offset = "0x24AEB60", VA = "0x24AEB60")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x24AEC54", Offset = "0x24AEC54", VA = "0x24AEC54")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x24AED80", Offset = "0x24AED80", VA = "0x24AED80")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x24AEE74", Offset = "0x24AEE74", VA = "0x24AEE74")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x24AEF5C", Offset = "0x24AEF5C", VA = "0x24AEF5C")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x24AF050", Offset = "0x24AF050", VA = "0x24AF050")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x24AF174", Offset = "0x24AF174", VA = "0x24AF174")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x24AF278", Offset = "0x24AF278", VA = "0x24AF278")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x24AF394", Offset = "0x24AF394", VA = "0x24AF394")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x24AF484", Offset = "0x24AF484", VA = "0x24AF484")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x24AF5B0", Offset = "0x24AF5B0", VA = "0x24AF5B0")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x24AF6C0", Offset = "0x24AF6C0", VA = "0x24AF6C0")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x24A66E8", Offset = "0x24A66E8", VA = "0x24A66E8")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x60014BA")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x24ACAEC", Offset = "0x24ACAEC", VA = "0x24ACAEC")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BC")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x24AF7DC", Offset = "0x24AF7DC", VA = "0x24AF7DC")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x24AFCBC", Offset = "0x24AFCBC", VA = "0x24AFCBC")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x24AFE34", Offset = "0x24AFE34", VA = "0x24AFE34")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x24AFEA4", Offset = "0x24AFEA4", VA = "0x24AFEA4")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x24AFED4", Offset = "0x24AFED4", VA = "0x24AFED4")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x24A49AC", Offset = "0x24A49AC", VA = "0x24A49AC")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x24A51C4", Offset = "0x24A51C4", VA = "0x24A51C4")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x24AFF04", Offset = "0x24AFF04", VA = "0x24AFF04")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x24AFFD0", Offset = "0x24AFFD0", VA = "0x24AFFD0")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x24B010C", Offset = "0x24B010C", VA = "0x24B010C")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x24B0248", Offset = "0x24B0248", VA = "0x24B0248")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x24B0374", Offset = "0x24B0374", VA = "0x24B0374")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x24B0A78", Offset = "0x24B0A78", VA = "0x24B0A78")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x24B10FC", Offset = "0x24B10FC", VA = "0x24B10FC")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x24B1228", Offset = "0x24B1228", VA = "0x24B1228")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x24B1354", Offset = "0x24B1354", VA = "0x24B1354")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x24B1480", Offset = "0x24B1480", VA = "0x24B1480")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x24B1684", Offset = "0x24B1684", VA = "0x24B1684")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x24B17B0", Offset = "0x24B17B0", VA = "0x24B17B0")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x24B1980", Offset = "0x24B1980", VA = "0x24B1980")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x24B1C3C", Offset = "0x24B1C3C", VA = "0x24B1C3C")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x24B1DA4", Offset = "0x24B1DA4", VA = "0x24B1DA4")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x24B1E0C", Offset = "0x24B1E0C", VA = "0x24B1E0C")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x24B1E50", Offset = "0x24B1E50", VA = "0x24B1E50")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x24956DC", Offset = "0x24956DC", VA = "0x24956DC")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x24B1EA4", Offset = "0x24B1EA4", VA = "0x24B1EA4")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x24B1FD4", Offset = "0x24B1FD4", VA = "0x24B1FD4")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x24B21E0", Offset = "0x24B21E0", VA = "0x24B21E0")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x24B2210", Offset = "0x24B2210", VA = "0x24B2210")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x24B2388", Offset = "0x24B2388", VA = "0x24B2388")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x24B2500", Offset = "0x24B2500", VA = "0x24B2500")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x24B2530", Offset = "0x24B2530", VA = "0x24B2530")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x24B2560", Offset = "0x24B2560", VA = "0x24B2560")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x24B25B4", Offset = "0x24B25B4", VA = "0x24B25B4")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x24B25E4", Offset = "0x24B25E4", VA = "0x24B25E4")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x24B2638", Offset = "0x24B2638", VA = "0x24B2638")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x24B32B8", Offset = "0x24B32B8", VA = "0x24B32B8")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x24B3A38", Offset = "0x24B3A38", VA = "0x24B3A38")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x24B42D0", Offset = "0x24B42D0", VA = "0x24B42D0")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x24B4630", Offset = "0x24B4630", VA = "0x24B4630")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x24B47E0", Offset = "0x24B47E0", VA = "0x24B47E0")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x24B49C8", Offset = "0x24B49C8", VA = "0x24B49C8")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x24B504C", Offset = "0x24B504C", VA = "0x24B504C")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x24B50B4", Offset = "0x24B50B4", VA = "0x24B50B4")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x24B50EC", Offset = "0x24B50EC", VA = "0x24B50EC")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x24B5114", Offset = "0x24B5114", VA = "0x24B5114")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x24B514C", Offset = "0x24B514C", VA = "0x24B514C")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x24B51AC", Offset = "0x24B51AC", VA = "0x24B51AC")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x24B51FC", Offset = "0x24B51FC", VA = "0x24B51FC")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x24B56A8", Offset = "0x24B56A8", VA = "0x24B56A8")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x24B5B54", Offset = "0x24B5B54", VA = "0x24B5B54")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x24B6008", Offset = "0x24B6008", VA = "0x24B6008")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x24B64BC", Offset = "0x24B64BC", VA = "0x24B64BC")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x24B6968", Offset = "0x24B6968", VA = "0x24B6968")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x24B6E1C", Offset = "0x24B6E1C", VA = "0x24B6E1C")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x24B7384", Offset = "0x24B7384", VA = "0x24B7384")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x24B78E4", Offset = "0x24B78E4", VA = "0x24B78E4")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x24B7D98", Offset = "0x24B7D98", VA = "0x24B7D98")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x24B8300", Offset = "0x24B8300", VA = "0x24B8300")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002F3")]
	public struct BoundarySystem
	{
		[Token(Token = "0x200071B")]
		public enum BoundaryType
		{
			[Token(Token = "0x4002BF1")]
			OuterBoundary,
			[Token(Token = "0x4002BF2")]
			PlayArea
		}

		[Token(Token = "0x200071C")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4002BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4002BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float ClosestDistance;

			[Token(Token = "0x4002BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x4002BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8EF")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x200071D")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x4002BF8")]
			HandLeft,
			[Token(Token = "0x4002BF9")]
			HandRight,
			[Token(Token = "0x4002BFA")]
			Head
		}

		[Token(Token = "0x200071E")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x4002BFC")]
			PVR_NOREASON,
			[Token(Token = "0x4002BFD")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x4002BFE")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x4002BFF")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x4002C00")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x4002C01")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x4001AAE")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x2492598", Offset = "0x2492598", VA = "0x2492598")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x2492688", Offset = "0x2492688", VA = "0x2492688")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x2492778", Offset = "0x2492778", VA = "0x2492778")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x249287C", Offset = "0x249287C", VA = "0x249287C")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x249296C", Offset = "0x249296C", VA = "0x249296C")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x2492A7C", Offset = "0x2492A7C", VA = "0x2492A7C")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x2492B8C", Offset = "0x2492B8C", VA = "0x2492B8C")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x2492C9C", Offset = "0x2492C9C", VA = "0x2492C9C")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001500")]
		[Address(RVA = "0x2492E94", Offset = "0x2492E94", VA = "0x2492E94")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001501")]
		[Address(RVA = "0x2493090", Offset = "0x2493090", VA = "0x2493090")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001502")]
		[Address(RVA = "0x24931A4", Offset = "0x24931A4", VA = "0x24931A4")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001503")]
		[Address(RVA = "0x24932C8", Offset = "0x24932C8", VA = "0x24932C8")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x6001504")]
		[Address(RVA = "0x24933D8", Offset = "0x24933D8", VA = "0x24933D8")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001505")]
		[Address(RVA = "0x24934DC", Offset = "0x24934DC", VA = "0x24934DC")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x6001506")]
		[Address(RVA = "0x24935EC", Offset = "0x24935EC", VA = "0x24935EC")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001507")]
		[Address(RVA = "0x2493718", Offset = "0x2493718", VA = "0x2493718")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x6001508")]
		[Address(RVA = "0x249383C", Offset = "0x249383C", VA = "0x249383C")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001509")]
		[Address(RVA = "0x2493940", Offset = "0x2493940", VA = "0x2493940")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x600150A")]
		[Address(RVA = "0x2493A3C", Offset = "0x2493A3C", VA = "0x2493A3C")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x600150B")]
		[Address(RVA = "0x2493B40", Offset = "0x2493B40", VA = "0x2493B40")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x2493C30", Offset = "0x2493C30", VA = "0x2493C30")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x2493C60", Offset = "0x2493C60", VA = "0x2493C60")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x2493C90", Offset = "0x2493C90", VA = "0x2493C90")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x2493CDC", Offset = "0x2493CDC", VA = "0x2493CDC")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x2493D0C", Offset = "0x2493D0C", VA = "0x2493D0C")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x2493D50", Offset = "0x2493D50", VA = "0x2493D50")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x2493D94", Offset = "0x2493D94", VA = "0x2493D94")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x2493DD8", Offset = "0x2493DD8", VA = "0x2493DD8")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x2494100", Offset = "0x2494100", VA = "0x2494100")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x2494408", Offset = "0x2494408", VA = "0x2494408")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x2494848", Offset = "0x2494848", VA = "0x2494848")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x2494948", Offset = "0x2494948", VA = "0x2494948")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x249498C", Offset = "0x249498C", VA = "0x249498C")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x24949D8", Offset = "0x24949D8", VA = "0x24949D8")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x2494A1C", Offset = "0x2494A1C", VA = "0x2494A1C")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x2494A84", Offset = "0x2494A84", VA = "0x2494A84")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x2494AE4", Offset = "0x2494AE4", VA = "0x2494AE4")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x2494E28", Offset = "0x2494E28", VA = "0x2494E28")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x249516C", Offset = "0x249516C", VA = "0x249516C")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x2495714", Offset = "0x2495714", VA = "0x2495714")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x2495A00", Offset = "0x2495A00", VA = "0x2495A00")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x2495CF0", Offset = "0x2495CF0", VA = "0x2495CF0")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x2495FE0", Offset = "0x2495FE0", VA = "0x2495FE0")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002F4")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6001523")]
		[Address(RVA = "0x24A43D0", Offset = "0x24A43D0", VA = "0x24A43D0")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x24A4B28", Offset = "0x24A4B28", VA = "0x24A4B28")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x24A52A4", Offset = "0x24A52A4", VA = "0x24A52A4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8AAE74", Offset = "0x8AAE74")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x24A5940", Offset = "0x24A5940", VA = "0x24A5940")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x24A5FFC", Offset = "0x24A5FFC", VA = "0x24A5FFC")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x24A66B8", Offset = "0x24A66B8", VA = "0x24A66B8")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002F5")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4001AB0")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x4001AB1")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20002F6")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4001AB3")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4001AB4")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4001AB5")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4001AB6")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4001AB7")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20002F7")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4001AB8")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA91E")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6001529")]
		[Address(RVA = "0x24BAF94", Offset = "0x24BAF94", VA = "0x24BAF94")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x600152A")]
		[Address(RVA = "0x24BB090", Offset = "0x24BB090", VA = "0x24BB090")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x600152B")]
		[Address(RVA = "0x24BB1A0", Offset = "0x24BB1A0", VA = "0x24BB1A0")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x600152C")]
		[Address(RVA = "0x24BB290", Offset = "0x24BB290", VA = "0x24BB290")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x24BB3AC", Offset = "0x24BB3AC", VA = "0x24BB3AC")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x24BB3F0", Offset = "0x24BB3F0", VA = "0x24BB3F0")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x24BB420", Offset = "0x24BB420", VA = "0x24BB420")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x24BB474", Offset = "0x24BB474", VA = "0x24BB474")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x24BBB14", Offset = "0x24BBB14", VA = "0x24BBB14")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x24BC08C", Offset = "0x24BC08C", VA = "0x24BC08C")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x24BC4D0", Offset = "0x24BC4D0", VA = "0x24BC4D0")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x24BC9E4", Offset = "0x24BC9E4", VA = "0x24BC9E4")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x24BCC7C", Offset = "0x24BCC7C", VA = "0x24BCC7C")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x24BCEB4", Offset = "0x24BCEB4", VA = "0x24BCEB4")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x24BD52C", Offset = "0x24BD52C", VA = "0x24BD52C")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x24BDD90", Offset = "0x24BDD90", VA = "0x24BDD90")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x24BE2F4", Offset = "0x24BE2F4", VA = "0x24BE2F4")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x24BB54C", Offset = "0x24BB54C", VA = "0x24BB54C")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x24BBB98", Offset = "0x24BBB98", VA = "0x24BBB98")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x24BC0BC", Offset = "0x24BC0BC", VA = "0x24BC0BC")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x24BC518", Offset = "0x24BC518", VA = "0x24BC518")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x24BE7FC", Offset = "0x24BE7FC", VA = "0x24BE7FC")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x24BED60", Offset = "0x24BED60", VA = "0x24BED60")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x24BF268", Offset = "0x24BF268", VA = "0x24BF268")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x24BF62C", Offset = "0x24BF62C", VA = "0x24BF62C")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x24BF9F0", Offset = "0x24BF9F0", VA = "0x24BF9F0")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x24BFDC0", Offset = "0x24BFDC0", VA = "0x24BFDC0")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x24C0190", Offset = "0x24C0190", VA = "0x24C0190")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x24C0614", Offset = "0x24C0614", VA = "0x24C0614")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x24C0638", Offset = "0x24C0638", VA = "0x24C0638")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x24BCCBC", Offset = "0x24BCCBC", VA = "0x24BCCBC")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x24BCA48", Offset = "0x24BCA48", VA = "0x24BCA48")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x20002F8")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F2EC")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool LogMessages;

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x2487974", Offset = "0x2487974", VA = "0x2487974")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x2487A70", Offset = "0x2487A70", VA = "0x2487A70")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x2487A80", Offset = "0x2487A80", VA = "0x2487A80")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x2487D6C", Offset = "0x2487D6C", VA = "0x2487D6C")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x2487F80", Offset = "0x2487F80", VA = "0x2487F80")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public static class Achievements
	{
		[Token(Token = "0x600154F")]
		[Address(RVA = "0x2488058", Offset = "0x2488058", VA = "0x2488058")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x2488754", Offset = "0x2488754", VA = "0x2488754")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x2488B90", Offset = "0x2488B90", VA = "0x2488B90")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x2488F9C", Offset = "0x2488F9C", VA = "0x2488F9C")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x24893DC", Offset = "0x24893DC", VA = "0x24893DC")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x2489748", Offset = "0x2489748", VA = "0x2489748")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x2489C20", Offset = "0x2489C20", VA = "0x2489C20")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x248A064", Offset = "0x248A064", VA = "0x248A064")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x248A420", Offset = "0x248A420", VA = "0x248A420")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x248AB08", Offset = "0x248AB08", VA = "0x248AB08")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FA")]
	public enum AchievementType
	{
		[Token(Token = "0x4001AC0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x892908", Offset = "0x892908")]
		Unknown,
		[Token(Token = "0x4001AC1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x89296C", Offset = "0x89296C")]
		Simple,
		[Token(Token = "0x4001AC2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8929D0", Offset = "0x8929D0")]
		Bitfield,
		[Token(Token = "0x4001AC3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x892A34", Offset = "0x892A34")]
		Count
	}
	[Token(Token = "0x20002FB")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA92E")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F2FC")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string openId;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA936")]
		private static string accessToken;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static string appId;

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x248822C", Offset = "0x248822C", VA = "0x248822C")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x2487B60", Offset = "0x2487B60", VA = "0x2487B60")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x2487E4C", Offset = "0x2487E4C", VA = "0x2487E4C")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x248BE30", Offset = "0x248BE30", VA = "0x248BE30")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x248BF74", Offset = "0x248BF74", VA = "0x248BF74")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x248C104", Offset = "0x248C104", VA = "0x248C104")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x248C294", Offset = "0x248C294", VA = "0x248C294")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x2488948", Offset = "0x2488948", VA = "0x2488948")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x2488D84", Offset = "0x2488D84", VA = "0x2488D84")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x2489170", Offset = "0x2489170", VA = "0x2489170")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x24895B0", Offset = "0x24895B0", VA = "0x24895B0")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x24899B0", Offset = "0x24899B0", VA = "0x24899B0")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x2489E88", Offset = "0x2489E88", VA = "0x2489E88")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x248A248", Offset = "0x248A248", VA = "0x248A248")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x248A718", Offset = "0x248A718", VA = "0x248A718")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x248C424", Offset = "0x248C424", VA = "0x248C424")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x248C53C", Offset = "0x248C53C", VA = "0x248C53C")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x248C618", Offset = "0x248C618", VA = "0x248C618")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x248BD68", Offset = "0x248BD68", VA = "0x248BD68")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x248C6E0", Offset = "0x248C6E0", VA = "0x248C6E0")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x248C884", Offset = "0x248C884", VA = "0x248C884")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x248CA14", Offset = "0x248CA14", VA = "0x248CA14")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x248CBA4", Offset = "0x248CBA4", VA = "0x248CBA4")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x248CDA4", Offset = "0x248CDA4", VA = "0x248CDA4")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x248CF34", Offset = "0x248CF34", VA = "0x248CF34")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x248D0C4", Offset = "0x248D0C4", VA = "0x248D0C4")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x248D254", Offset = "0x248D254", VA = "0x248D254")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x248D3F8", Offset = "0x248D3F8", VA = "0x248D3F8")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x248D588", Offset = "0x248D588", VA = "0x248D588")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x248D7A0", Offset = "0x248D7A0", VA = "0x248D7A0")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x248D8B4", Offset = "0x248D8B4", VA = "0x248D8B4")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x248DA44", Offset = "0x248DA44", VA = "0x248DA44")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x248DC44", Offset = "0x248DC44", VA = "0x248DC44")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x248DDD4", Offset = "0x248DDD4", VA = "0x248DDD4")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x248DFC0", Offset = "0x248DFC0", VA = "0x248DFC0")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x248E150", Offset = "0x248E150", VA = "0x248E150")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x248E2E0", Offset = "0x248E2E0", VA = "0x248E2E0")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x248E470", Offset = "0x248E470", VA = "0x248E470")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x248E600", Offset = "0x248E600", VA = "0x248E600")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x248E790", Offset = "0x248E790", VA = "0x248E790")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x248E920", Offset = "0x248E920", VA = "0x248E920")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x248EAC4", Offset = "0x248EAC4", VA = "0x248EAC4")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x248EC54", Offset = "0x248EC54", VA = "0x248EC54")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x248EDE4", Offset = "0x248EDE4", VA = "0x248EDE4")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F304")]
		public readonly AchievementType Type;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly string Name;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int BitfieldLength;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long Target;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA93E")]
		public readonly string Title;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public readonly string Description;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F30C")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly string LockedIcon;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x248F12C", Offset = "0x248F12C", VA = "0x248F12C")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6001587")]
		[Address(RVA = "0x248B02C", Offset = "0x248B02C", VA = "0x248B02C")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA946")]
		public readonly string Bitfield;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public readonly long Count;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F314")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly string Name;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x248F3F4", Offset = "0x248F3F4", VA = "0x248F3F4")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x6001589")]
		[Address(RVA = "0x248B524", Offset = "0x248B524", VA = "0x248B524")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA94E")]
		public readonly string Name;

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x248BA1C", Offset = "0x248BA1C", VA = "0x248BA1C")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x87C4AC", Offset = "0x87C4AC")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x17000162")]
		public int Count
		{
			[Token(Token = "0x600158B")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000163")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x600158C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		public T Item
		{
			[Token(Token = "0x600158E")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600158F")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public bool HasNextPage
		{
			[Token(Token = "0x600159A")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000166")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x600159B")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000167")]
		public string NextUrl
		{
			[Token(Token = "0x600159C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		public string PreviousUrl
		{
			[Token(Token = "0x600159D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158D")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001590")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001591")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001592")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001593")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001594")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001595")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001596")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001597")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001598")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001599")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600159E")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x200071F")]
		private class RequestCallback
		{
			[Token(Token = "0x4002C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0x24905F0", Offset = "0x24905F0", VA = "0x24905F0")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0x2490620", Offset = "0x2490620", VA = "0x2490620")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0x2490668", Offset = "0x2490668", VA = "0x2490668", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x2000720")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4002C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6002B9D")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6002B9E")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F31C")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x248F5DC", Offset = "0x248F5DC", VA = "0x248F5DC")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x248FA68", Offset = "0x248FA68", VA = "0x248FA68")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x2490210", Offset = "0x2490210", VA = "0x2490210")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x24903B0", Offset = "0x24903B0", VA = "0x24903B0")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x248FC94", Offset = "0x248FC94", VA = "0x248FC94")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x2490AC8", Offset = "0x2490AC8", VA = "0x2490AC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x2490D1C", Offset = "0x2490D1C", VA = "0x2490D1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x2490ECC", Offset = "0x2490ECC", VA = "0x2490ECC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x2490FB0", Offset = "0x2490FB0", VA = "0x2490FB0")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x2000721")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000169")]
		public T Data
		{
			[Token(Token = "0x60015AA")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60015A9")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60015AB")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x2000305")]
	public class Pvr_Message
	{
		[Token(Token = "0x2000722")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x2000723")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4002C05")]
			Unknown = 0u,
			[Token(Token = "0x4002C06")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4002C07")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4002C08")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4002C09")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4002C0A")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4002C0B")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4002C0C")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4002C0D")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4002C0E")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4002C0F")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x4002C10")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x2000724")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MessageType type;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA956")]
		private long requestID;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Error error;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892A98", Offset = "0x892A98")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x1700016A")]
		public MessageType Type
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x24914D8", Offset = "0x24914D8", VA = "0x24914D8")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x1700016B")]
		public bool IsError
		{
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x2491508", Offset = "0x2491508", VA = "0x2491508")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016C")]
		public long RequestID
		{
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x2491590", Offset = "0x2491590", VA = "0x2491590")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700016D")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x2491B14", Offset = "0x2491B14", VA = "0x2491B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF14", Offset = "0x8AAF14")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x2491A8C", Offset = "0x2491A8C", VA = "0x2491A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAED8", Offset = "0x8AAED8")]
			set
			{
			}
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x2490FF4", Offset = "0x2490FF4", VA = "0x2490FF4")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x24915C0", Offset = "0x24915C0", VA = "0x24915C0", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x24915F0", Offset = "0x24915F0", VA = "0x24915F0", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x249160C", Offset = "0x249160C", VA = "0x249160C", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x2491628", Offset = "0x2491628", VA = "0x2491628", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x2491644", Offset = "0x2491644", VA = "0x2491644", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x2491660", Offset = "0x2491660", VA = "0x2491660")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x248FB9C", Offset = "0x248FB9C", VA = "0x248FB9C")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000306")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x248AE78", Offset = "0x248AE78", VA = "0x248AE78")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x248AF04", Offset = "0x248AF04", VA = "0x248AF04", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x248AF88", Offset = "0x248AF88", VA = "0x248AF88", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000307")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x248B370", Offset = "0x248B370", VA = "0x248B370")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x248B3FC", Offset = "0x248B3FC", VA = "0x248B3FC", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x248B480", Offset = "0x248B480", VA = "0x248B480", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000308")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x248B868", Offset = "0x248B868", VA = "0x248B868")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x248B8F4", Offset = "0x248B8F4", VA = "0x248B8F4", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x248B978", Offset = "0x248B978", VA = "0x248B978", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000309")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x248BB5C", Offset = "0x248BB5C", VA = "0x248BB5C")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x248BBE8", Offset = "0x248BBE8", VA = "0x248BBE8", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x248BC6C", Offset = "0x248BC6C", VA = "0x248BC6C", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200030A")]
	public class Error
	{
		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int Code;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly int HttpCode;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA96D")]
		public readonly string Message;

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x248AE00", Offset = "0x248AE00", VA = "0x248AE00")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x200030B")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x60015C6")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x60015C7")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60015C8")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class Request
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892AD4", Offset = "0x892AD4")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x1700016E")]
		public long RequestID
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x249230C", Offset = "0x249230C", VA = "0x249230C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF50", Offset = "0x8AAF50")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x249233C", Offset = "0x249233C", VA = "0x249233C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF8C", Offset = "0x8AAF8C")]
			set
			{
			}
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x24922BC", Offset = "0x24922BC", VA = "0x24922BC")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x2492374", Offset = "0x2492374", VA = "0x2492374")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x2492478", Offset = "0x2492478", VA = "0x2492478", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x2490D50", Offset = "0x2490D50", VA = "0x2490D50")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x200030D")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string axisName;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float axisValue;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float responseSpeed;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA975")]
		public float returnToCentreSpeed;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F33C")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x1398814", Offset = "0x1398814", VA = "0x1398814")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1398E24", Offset = "0x1398E24", VA = "0x1398E24")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x1399210", Offset = "0x1399210", VA = "0x1399210")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x1399350", Offset = "0x1399350", VA = "0x1399350", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x139959C", Offset = "0x139959C", VA = "0x139959C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x1399720", Offset = "0x1399720", VA = "0x1399720")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x13997EC", Offset = "0x13997EC", VA = "0x13997EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x1399800", Offset = "0x1399800", VA = "0x1399800")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x1399A08", Offset = "0x1399A08", VA = "0x1399A08")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x1399C10", Offset = "0x1399C10", VA = "0x1399C10")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x1399E18", Offset = "0x1399E18", VA = "0x1399E18")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x139A020", Offset = "0x139A020", VA = "0x139A020")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x139A228", Offset = "0x139A228", VA = "0x139A228")]
		public void Update()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x139A23C", Offset = "0x139A23C", VA = "0x139A23C")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x2000725")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4002C12")]
			Hardware,
			[Token(Token = "0x4002C13")]
			Touch
		}

		[Token(Token = "0x2000726")]
		public class VirtualAxis
		{
			[Token(Token = "0x4002C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D6D0", Offset = "0x89D6D0")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float m_Value;

			[Token(Token = "0x4002C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA985")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D70C", Offset = "0x89D70C")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x1700048D")]
			public string name
			{
				[Token(Token = "0x6002BAB")]
				[Address(RVA = "0x139B688", Offset = "0x139B688", VA = "0x139B688")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCC70", Offset = "0x8BCC70")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002BAC")]
				[Address(RVA = "0x139B6B8", Offset = "0x139B6B8", VA = "0x139B6B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCCAC", Offset = "0x8BCCAC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700048E")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6002BAD")]
				[Address(RVA = "0x139B6F0", Offset = "0x139B6F0", VA = "0x139B6F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCCE8", Offset = "0x8BCCE8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002BAE")]
				[Address(RVA = "0x139B734", Offset = "0x139B734", VA = "0x139B734")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCD24", Offset = "0x8BCD24")]
				private set
				{
				}
			}

			[Token(Token = "0x1700048F")]
			public float GetValue
			{
				[Token(Token = "0x6002BB3")]
				[Address(RVA = "0x139B838", Offset = "0x139B838", VA = "0x139B838")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000490")]
			public float GetValueRaw
			{
				[Token(Token = "0x6002BB4")]
				[Address(RVA = "0x139B868", Offset = "0x139B868", VA = "0x139B868")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0x1398BB4", Offset = "0x1398BB4", VA = "0x1398BB4")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0x139B780", Offset = "0x139B780", VA = "0x139B780")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0x1399258", Offset = "0x1399258", VA = "0x1399258")]
			public void Remove()
			{
			}

			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0x139B800", Offset = "0x139B800", VA = "0x139B800")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x2000727")]
		public class VirtualButton
		{
			[Token(Token = "0x4002C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D748", Offset = "0x89D748")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F34C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D784", Offset = "0x89D784")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x4002C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4002C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4002C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool m_Pressed;

			[Token(Token = "0x17000491")]
			public string name
			{
				[Token(Token = "0x6002BB5")]
				[Address(RVA = "0x139B898", Offset = "0x139B898", VA = "0x139B898")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCD60", Offset = "0x8BCD60")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002BB6")]
				[Address(RVA = "0x139B8C8", Offset = "0x139B8C8", VA = "0x139B8C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCD9C", Offset = "0x8BCD9C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000492")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6002BB7")]
				[Address(RVA = "0x139B900", Offset = "0x139B900", VA = "0x139B900")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCDD8", Offset = "0x8BCDD8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002BB8")]
				[Address(RVA = "0x139B944", Offset = "0x139B944", VA = "0x139B944")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BCE14", Offset = "0x8BCE14")]
				private set
				{
				}
			}

			[Token(Token = "0x17000493")]
			public bool GetButton
			{
				[Token(Token = "0x6002BBE")]
				[Address(RVA = "0x139BC34", Offset = "0x139BC34", VA = "0x139BC34")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000494")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6002BBF")]
				[Address(RVA = "0x139BC78", Offset = "0x139BC78", VA = "0x139BC78")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000495")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6002BC0")]
				[Address(RVA = "0x139BD08", Offset = "0x139BD08", VA = "0x139BD08")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0x139B990", Offset = "0x139B990", VA = "0x139B990")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0x139B9D8", Offset = "0x139B9D8", VA = "0x139B9D8")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0x139BA78", Offset = "0x139BA78", VA = "0x139BA78")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0x139BAEC", Offset = "0x139BAEC", VA = "0x139BAEC")]
			public void Released()
			{
			}

			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0x139BB3C", Offset = "0x139BB3C", VA = "0x139BB3C")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA97D")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x1700016F")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0x139B27C", Offset = "0x139B27C", VA = "0x139B27C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x139A26C", Offset = "0x139A26C", VA = "0x139A26C")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x139A3DC", Offset = "0x139A3DC", VA = "0x139A3DC")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1398A88", Offset = "0x1398A88", VA = "0x1398A88")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x139A5A8", Offset = "0x139A5A8", VA = "0x139A5A8")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x1398BFC", Offset = "0x1398BFC", VA = "0x1398BFC")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x139A6D4", Offset = "0x139A6D4", VA = "0x139A6D4")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x139A7E4", Offset = "0x139A7E4", VA = "0x139A7E4")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x139A978", Offset = "0x139A978", VA = "0x139A978")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x1398D0C", Offset = "0x1398D0C", VA = "0x1398D0C")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x139AA88", Offset = "0x139AA88", VA = "0x139AA88")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x139ACC8", Offset = "0x139ACC8", VA = "0x139ACC8")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x139AB88", Offset = "0x139AB88", VA = "0x139AB88")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x139ADC8", Offset = "0x139ADC8", VA = "0x139ADC8")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x139AEF8", Offset = "0x139AEF8", VA = "0x139AEF8")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x139B028", Offset = "0x139B028", VA = "0x139B028")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x13998F4", Offset = "0x13998F4", VA = "0x13998F4")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x1399AFC", Offset = "0x1399AFC", VA = "0x1399AFC")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x1399D04", Offset = "0x1399D04", VA = "0x1399D04")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x139A114", Offset = "0x139A114", VA = "0x139A114")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x1399F0C", Offset = "0x1399F0C", VA = "0x1399F0C")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x139B158", Offset = "0x139B158", VA = "0x139B158")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x139B358", Offset = "0x139B358", VA = "0x139B358")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x139B468", Offset = "0x139B468", VA = "0x139B468")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x139B578", Offset = "0x139B578", VA = "0x139B578")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA98D")]
		public string axis;

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x139BD9C", Offset = "0x139BD9C", VA = "0x139BD9C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x139BDB0", Offset = "0x139BDB0", VA = "0x139BDB0")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x139BEE0", Offset = "0x139BEE0", VA = "0x139BEE0")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x2000728")]
		public enum AxisOption
		{
			[Token(Token = "0x4002C1D")]
			Both,
			[Token(Token = "0x4002C1E")]
			OnlyHorizontal,
			[Token(Token = "0x4002C1F")]
			OnlyVertical
		}

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int MovementRange;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F354")]
		public AxisOption axesToUse;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string horizontalAxisName;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string verticalAxisName;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA995")]
		private bool m_UseX;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool m_UseY;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F35C")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x139BF10", Offset = "0x139BF10", VA = "0x139BF10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x139C308", Offset = "0x139C308", VA = "0x139C308")]
		private void Start()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x139C380", Offset = "0x139C380", VA = "0x139C380")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x139BF40", Offset = "0x139BF40", VA = "0x139BF40")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x139C660", Offset = "0x139C660", VA = "0x139C660", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x139CB4C", Offset = "0x139CB4C", VA = "0x139CB4C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x139CC04", Offset = "0x139CC04", VA = "0x139CC04", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x139CC1C", Offset = "0x139CC1C", VA = "0x139CC1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x139CCC4", Offset = "0x139CCC4", VA = "0x139CCC4")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x2000312")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6001602")]
		[Address(RVA = "0x139CD7C", Offset = "0x139CD7C", VA = "0x139CD7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x139CDE4", Offset = "0x139CDE4", VA = "0x139CDE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x139CDAC", Offset = "0x139CDAC", VA = "0x139CDAC")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x139CF9C", Offset = "0x139CF9C", VA = "0x139CF9C")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x139D38C", Offset = "0x139D38C", VA = "0x139D38C")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87C54C", Offset = "0x87C54C")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x2000729")]
		public enum AxisOption
		{
			[Token(Token = "0x4002C21")]
			Both,
			[Token(Token = "0x4002C22")]
			OnlyHorizontal,
			[Token(Token = "0x4002C23")]
			OnlyVertical
		}

		[Token(Token = "0x200072A")]
		public enum ControlStyle
		{
			[Token(Token = "0x4002C25")]
			Absolute,
			[Token(Token = "0x4002C26")]
			Relative,
			[Token(Token = "0x4002C27")]
			Swipe
		}

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F364")]
		public AxisOption axesToUse;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControlStyle controlStyle;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string horizontalAxisName;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string verticalAxisName;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9A5")]
		public float Xsensitivity;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float Ysensitivity;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F36C")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_UseX;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9AD")]
		private bool m_UseY;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F374")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_Dragging;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_Id;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9B5")]
		private Vector3 m_Center;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Image m_Image;

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x139EA5C", Offset = "0x139EA5C", VA = "0x139EA5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x139EE54", Offset = "0x139EE54", VA = "0x139EE54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x139EA8C", Offset = "0x139EA8C", VA = "0x139EA8C")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x139EF34", Offset = "0x139EF34", VA = "0x139EF34")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x139F058", Offset = "0x139F058", VA = "0x139F058", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x139F1C8", Offset = "0x139F1C8", VA = "0x139F1C8")]
		private void Update()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x139F620", Offset = "0x139F620", VA = "0x139F620", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x139F718", Offset = "0x139F718", VA = "0x139F718")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x139F9BC", Offset = "0x139F9BC", VA = "0x139F9BC")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x892B10", Offset = "0x892B10")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9C4")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x17000170")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0x1DC574C", Offset = "0x1DC574C", VA = "0x1DC574C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAFC8", Offset = "0x8AAFC8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x1DC578C", Offset = "0x1DC578C", VA = "0x1DC578C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB004", Offset = "0x8AB004")]
			private set
			{
			}
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x1DC57EC", Offset = "0x1DC57EC", VA = "0x1DC57EC")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x1DC58A8", Offset = "0x1DC58A8", VA = "0x1DC58A8")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x1DC5964", Offset = "0x1DC5964", VA = "0x1DC5964")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x1DC5C0C", Offset = "0x1DC5C0C", VA = "0x1DC5C0C")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x1DC5EB4", Offset = "0x1DC5EB4", VA = "0x1DC5EB4")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x1DC5FA8", Offset = "0x1DC5FA8", VA = "0x1DC5FA8")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x1DC609C", Offset = "0x1DC609C", VA = "0x1DC609C")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x1DC61B8", Offset = "0x1DC61B8", VA = "0x1DC61B8")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x1DC6280", Offset = "0x1DC6280", VA = "0x1DC6280")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x1DC6348", Offset = "0x1DC6348", VA = "0x1DC6348")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x600161C")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x600161D")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x600161E")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x600161F")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6001620")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6001621")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6001622")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6001623")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6001624")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6001625")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001626")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x1DC6410", Offset = "0x1DC6410", VA = "0x1DC6410")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x2000315")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6001628")]
		[Address(RVA = "0x139D3BC", Offset = "0x139D3BC", VA = "0x139D3BC")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x139D4DC", Offset = "0x139D4DC", VA = "0x139D4DC")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x139D5FC", Offset = "0x139D5FC", VA = "0x139D5FC", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x139D740", Offset = "0x139D740", VA = "0x139D740", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x139D870", Offset = "0x139D870", VA = "0x139D870", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x139D9A0", Offset = "0x139D9A0", VA = "0x139D9A0", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x139DAE0", Offset = "0x139DAE0", VA = "0x139DAE0", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x139DC20", Offset = "0x139DC20", VA = "0x139DC20", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x139DD5C", Offset = "0x139DD5C", VA = "0x139DD5C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x139DE9C", Offset = "0x139DE9C", VA = "0x139DE9C", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x139E05C", Offset = "0x139E05C", VA = "0x139E05C", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x139E21C", Offset = "0x139E21C", VA = "0x139E21C", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x139E3DC", Offset = "0x139E3DC", VA = "0x139E3DC", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x139A37C", Offset = "0x139A37C", VA = "0x139A37C")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6001636")]
		[Address(RVA = "0x139E420", Offset = "0x139E420", VA = "0x139E420", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x139E4C0", Offset = "0x139E4C0", VA = "0x139E4C0", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x139E518", Offset = "0x139E518", VA = "0x139E518", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x139E570", Offset = "0x139E570", VA = "0x139E570", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x139E5C8", Offset = "0x139E5C8", VA = "0x139E5C8", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x139E680", Offset = "0x139E680", VA = "0x139E680", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x139E738", Offset = "0x139E738", VA = "0x139E738", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x139E7F0", Offset = "0x139E7F0", VA = "0x139E7F0", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x139E8A8", Offset = "0x139E8A8", VA = "0x139E8A8", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x139E960", Offset = "0x139E960", VA = "0x139E960", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x139EA1C", Offset = "0x139EA1C", VA = "0x139EA1C", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x139A3AC", Offset = "0x139A3AC", VA = "0x139A3AC")]
		public StandaloneInput()
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87C5FC", Offset = "0x87C5FC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87C5FC", Offset = "0x87C5FC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87C5FC", Offset = "0x87C5FC")]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F384")]
		public Camera ControllerCamera;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Animator animator;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Transform camTrans;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9CC")]
		private float h;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float v;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F38C")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x12E9B44", Offset = "0x12E9B44", VA = "0x12E9B44", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x12E9DE0", Offset = "0x12E9DE0", VA = "0x12E9DE0", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x12EA014", Offset = "0x12EA014", VA = "0x12EA014", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x12EA198", Offset = "0x12EA198", VA = "0x12EA198", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x12EA288", Offset = "0x12EA288", VA = "0x12EA288", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x12EA340", Offset = "0x12EA340", VA = "0x12EA340", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x12EA53C", Offset = "0x12EA53C", VA = "0x12EA53C", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x12EA698", Offset = "0x12EA698", VA = "0x12EA698", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x12EA9E4", Offset = "0x12EA9E4", VA = "0x12EA9E4", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x12EAB40", Offset = "0x12EAB40", VA = "0x12EAB40", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x600164C")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x12EAC9C", Offset = "0x12EAC9C", VA = "0x12EAC9C")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87C744", Offset = "0x87C744")]
	[DisallowMultipleComponent]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x200072B")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Toggle toggle;

		[Token(Token = "0x14000040")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x600164E")]
			[Address(RVA = "0x12EACE0", Offset = "0x12EACE0", VA = "0x12EACE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB040", Offset = "0x8AB040")]
			add
			{
			}
			[Token(Token = "0x600164F")]
			[Address(RVA = "0x12EAE3C", Offset = "0x12EAE3C", VA = "0x12EAE3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB07C", Offset = "0x8AB07C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x12EAF98", Offset = "0x12EAF98", VA = "0x12EAF98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x12EB0BC", Offset = "0x12EB0BC", VA = "0x12EB0BC")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x12EB578", Offset = "0x12EB578", VA = "0x12EB578")]
		public BetterToggle()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x12EB5A8", Offset = "0x12EB5A8", VA = "0x12EB5A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB0B8", Offset = "0x8AB0B8")]
		private void <Start>b__5_0(bool <p0>)
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x200072C")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9D4")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F394")]
		private OrthographicController orthographicController;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera defaultCamera;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9DC")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F39C")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000041")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x6001654")]
			[Address(RVA = "0x12E9C84", Offset = "0x12E9C84", VA = "0x12E9C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB0F4", Offset = "0x8AB0F4")]
			add
			{
			}
			[Token(Token = "0x6001655")]
			[Address(RVA = "0x12E9EB8", Offset = "0x12E9EB8", VA = "0x12E9EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB130", Offset = "0x8AB130")]
			remove
			{
			}
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x12EB6EC", Offset = "0x12EB6EC", VA = "0x12EB6EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x12EB9E4", Offset = "0x12EB9E4", VA = "0x12EB9E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x12EBC74", Offset = "0x12EBC74", VA = "0x12EBC74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x12EC0D8", Offset = "0x12EC0D8", VA = "0x12EC0D8")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x12EC280", Offset = "0x12EC280", VA = "0x12EC280")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x12EC738", Offset = "0x12EC738", VA = "0x12EC738")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x12EC77C", Offset = "0x12EC77C", VA = "0x12EC77C")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x12EC2C4", Offset = "0x12EC2C4", VA = "0x12EC2C4")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x12EC7C0", Offset = "0x12EC7C0", VA = "0x12EC7C0")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x12ECD2C", Offset = "0x12ECD2C", VA = "0x12ECD2C", Slot = "4")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x12ECD44", Offset = "0x12ECD44", VA = "0x12ECD44", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x12ECD58", Offset = "0x12ECD58", VA = "0x12ECD58", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x12ECD74", Offset = "0x12ECD74", VA = "0x12ECD74", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x12ECD88", Offset = "0x12ECD88", VA = "0x12ECD88", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x12ECDA4", Offset = "0x12ECDA4", VA = "0x12ECDA4", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x12ECDC0", Offset = "0x12ECDC0", VA = "0x12ECDC0", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x12ECFF4", Offset = "0x12ECFF4", VA = "0x12ECFF4")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x200072D")]
		public enum SpawnSequence
		{
			[Token(Token = "0x4002C29")]
			Connection,
			[Token(Token = "0x4002C2A")]
			Random,
			[Token(Token = "0x4002C2B")]
			RoundRobin
		}

		[Token(Token = "0x200072E")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform SpawnPosition;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9E4")]
		public float PositionOffset;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3A4")]
		public List<Transform> SpawnPoints;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool AutoSpawn;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool UseRandomOffset;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SpawnSequence Sequence;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private byte manualInstantiationEventCode;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3AC")]
		protected int lastUsedSpawnPointIndex;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool differentPrefabs;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string localPrefabSuffix;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9F4")]
		[SerializeField]
		private string remotePrefabSuffix;

		[Token(Token = "0x14000042")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x12EB888", Offset = "0x12EB888", VA = "0x12EB888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB16C", Offset = "0x8AB16C")]
			add
			{
			}
			[Token(Token = "0x6001668")]
			[Address(RVA = "0x12EBB18", Offset = "0x12EBB18", VA = "0x12EBB18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB1A8", Offset = "0x8AB1A8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x12ED0C4", Offset = "0x12ED0C4", VA = "0x12ED0C4", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x12ED5D0", Offset = "0x12ED5D0", VA = "0x12ED5D0")]
		private void ManualInstantiation(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x12EE1FC", Offset = "0x12EE1FC", VA = "0x12EE1FC", Slot = "54")]
		public void OnEvent(ExitGames.Client.Photon.EventData photonEvent)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x12EE72C", Offset = "0x12EE72C", VA = "0x12EE72C", Slot = "55")]
		protected virtual void GetSpawnPoint(out Vector3 spawnPos, out Quaternion spawnRot)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x12EEB38", Offset = "0x12EEB38", VA = "0x12EEB38", Slot = "56")]
		protected virtual Transform GetSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x12EEF9C", Offset = "0x12EEF9C", VA = "0x12EEF9C")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9FC")]
		private float oldYRotation;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Quaternion velRotation;

		[Token(Token = "0x17000171")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0x12EF0D4", Offset = "0x12EF0D4", VA = "0x12EF0D4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x12EF12C", Offset = "0x12EF12C", VA = "0x12EF12C", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x12EF1A4", Offset = "0x12EF1A4", VA = "0x12EF1A4", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x12EF470", Offset = "0x12EF470", VA = "0x12EF470")]
		private void Update()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x12EF4A0", Offset = "0x12EF4A0", VA = "0x12EF4A0")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x12EF7AC", Offset = "0x12EF7AC", VA = "0x12EF7AC")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87C810", Offset = "0x87C810")]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3BC")]
		private Canvas canvas;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA04")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool showSpeakerLag;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x12EF854", Offset = "0x12EF854", VA = "0x12EF854")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x12EFB18", Offset = "0x12EFB18", VA = "0x12EFB18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x12EFD74", Offset = "0x12EFD74", VA = "0x12EFD74")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x12EFDC0", Offset = "0x12EFDC0", VA = "0x12EFDC0")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x12EFE18", Offset = "0x12EFE18", VA = "0x12EFE18")]
		private void Awake()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x12F006C", Offset = "0x12F006C", VA = "0x12F006C")]
		private void Update()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x12F0358", Offset = "0x12F0358", VA = "0x12F0358")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x12F05F8", Offset = "0x12F05F8", VA = "0x12F05F8")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3C4")]
		public float smoothing;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 offset;

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x12F0628", Offset = "0x12F0628", VA = "0x12F0628", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x12F0674", Offset = "0x12F0674", VA = "0x12F0674", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x12F07F0", Offset = "0x12F07F0", VA = "0x12F07F0", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x12F0B48", Offset = "0x12F0B48", VA = "0x12F0B48")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x12F0DA0", Offset = "0x12F0DA0", VA = "0x12F0DA0")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x12F0850", Offset = "0x12F0850", VA = "0x12F0850", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x12F0DE4", Offset = "0x12F0DE4", VA = "0x12F0DE4")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x200072F")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA0C")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3CC")]
		private Canvas canvas;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Text punSwitchText;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA14")]
		private Text voiceSwitchText;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x986FEC")]
		private Text calibrateText;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder recorder;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA1B")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3D4")]
		private GameObject debugGO;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool debugMode;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float volumeBeforeMute;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x17000172")]
		public bool DebugMode
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0x12F0E28", Offset = "0x12F0E28", VA = "0x12F0E28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001685")]
			[Address(RVA = "0x12F0E6C", Offset = "0x12F0E6C", VA = "0x12F0E6C")]
			set
			{
			}
		}

		[Token(Token = "0x14000043")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x6001686")]
			[Address(RVA = "0x12EF9BC", Offset = "0x12EF9BC", VA = "0x12EF9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB1E4", Offset = "0x8AB1E4")]
			add
			{
			}
			[Token(Token = "0x6001687")]
			[Address(RVA = "0x12EFC18", Offset = "0x12EFC18", VA = "0x12EFC18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB220", Offset = "0x8AB220")]
			remove
			{
			}
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x12F1498", Offset = "0x12F1498", VA = "0x12F1498")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x12F158C", Offset = "0x12F158C", VA = "0x12F158C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x12F183C", Offset = "0x12F183C", VA = "0x12F183C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x12F1AEC", Offset = "0x12F1AEC", VA = "0x12F1AEC")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x12F1CA8", Offset = "0x12F1CA8", VA = "0x12F1CA8")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x12F271C", Offset = "0x12F271C", VA = "0x12F271C")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x12F3060", Offset = "0x12F3060", VA = "0x12F3060")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x12F30B8", Offset = "0x12F30B8", VA = "0x12F30B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x12F3B00", Offset = "0x12F3B00", VA = "0x12F3B00")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x12F3E08", Offset = "0x12F3E08", VA = "0x12F3E08")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x12F3F2C", Offset = "0x12F3F2C", VA = "0x12F3F2C")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x12F40B0", Offset = "0x12F40B0", VA = "0x12F40B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x12F4364", Offset = "0x12F4364", VA = "0x12F4364")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x12F4E98", Offset = "0x12F4E98", VA = "0x12F4E98")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x12F464C", Offset = "0x12F464C", VA = "0x12F464C")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x12F4EDC", Offset = "0x12F4EDC", VA = "0x12F4EDC")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000320")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3DC")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color m_color;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA2B")]
		private bool m_highlight;

		[Token(Token = "0x17000173")]
		public bool Highlight
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0x13A4464", Offset = "0x13A4464", VA = "0x13A4464")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001699")]
			[Address(RVA = "0x13A44A8", Offset = "0x13A44A8", VA = "0x13A44A8")]
			set
			{
			}
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x13A4508", Offset = "0x13A4508", VA = "0x13A4508")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x13A49F0", Offset = "0x13A49F0", VA = "0x13A49F0", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x13A4A50", Offset = "0x13A4A50", VA = "0x13A4A50", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x13A4AFC", Offset = "0x13A4AFC", VA = "0x13A4AFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x13A471C", Offset = "0x13A471C", VA = "0x13A471C")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x13A4E40", Offset = "0x13A4E40", VA = "0x13A4E40")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public string m_materialColorField;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3E4")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Renderer m_renderer;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA33")]
		private bool m_inRange;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool m_targeted;

		[Token(Token = "0x17000174")]
		public bool InRange
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x13A5FF8", Offset = "0x13A5FF8", VA = "0x13A5FF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016A2")]
			[Address(RVA = "0x13A603C", Offset = "0x13A603C", VA = "0x13A603C")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public bool Targeted
		{
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0x13A6524", Offset = "0x13A6524", VA = "0x13A6524")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x13A6568", Offset = "0x13A6568", VA = "0x13A6568")]
			set
			{
			}
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x13A65C8", Offset = "0x13A65C8", VA = "0x13A65C8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x13A609C", Offset = "0x13A609C", VA = "0x13A609C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x13A6988", Offset = "0x13A6988", VA = "0x13A6988")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87C8C0", Offset = "0x87C8C0")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3EC")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA3B")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3F4")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA43")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F3FC")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000176")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60016A8")]
			[Address(RVA = "0x13A69B8", Offset = "0x13A69B8", VA = "0x13A69B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016A9")]
			[Address(RVA = "0x13A69FC", Offset = "0x13A69FC", VA = "0x13A69FC")]
			set
			{
			}
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x13A6AB0", Offset = "0x13A6AB0", VA = "0x13A6AB0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x13A6EC0", Offset = "0x13A6EC0", VA = "0x13A6EC0", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x13A86FC", Offset = "0x13A86FC", VA = "0x13A86FC", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x13A94C4", Offset = "0x13A94C4", VA = "0x13A94C4", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x13A9CE4", Offset = "0x13A9CE4", VA = "0x13A9CE4")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x13A7338", Offset = "0x13A7338", VA = "0x13A7338")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x13A9EFC", Offset = "0x13A9EFC", VA = "0x13A9EFC")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x13AA9C0", Offset = "0x13AA9C0", VA = "0x13AA9C0", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x13AAA48", Offset = "0x13AAA48", VA = "0x13AAA48", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x13AAA88", Offset = "0x13AAA88", VA = "0x13AAA88")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA4B")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x13AE7AC", Offset = "0x13AE7AC", VA = "0x13AE7AC")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x13AE92C", Offset = "0x13AE92C", VA = "0x13AE92C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x13AEAAC", Offset = "0x13AEAAC", VA = "0x13AEAAC")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000730")]
		public enum CrosshairState
		{
			[Token(Token = "0x4002C2D")]
			Disabled,
			[Token(Token = "0x4002C2E")]
			Enabled,
			[Token(Token = "0x4002C2F")]
			Targeted
		}

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private CrosshairState m_state;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F404")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x13AEADC", Offset = "0x13AEADC", VA = "0x13AEADC")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x13A67D0", Offset = "0x13A67D0", VA = "0x13A67D0")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x13AEB88", Offset = "0x13AEB88", VA = "0x13AEB88")]
		private void Update()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x13AEBFC", Offset = "0x13AEBFC", VA = "0x13AEBFC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x13B94E4", Offset = "0x13B94E4", VA = "0x13B94E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x13B964C", Offset = "0x13B964C", VA = "0x13B964C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x13B967C", Offset = "0x13B967C", VA = "0x13B967C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x13B96B0", Offset = "0x13B96B0", VA = "0x13B96B0")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x13A1434", Offset = "0x13A1434", VA = "0x13A1434")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x13A14C4", Offset = "0x13A14C4", VA = "0x13A14C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x13A1B18", Offset = "0x13A1B18", VA = "0x13A1B18")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x13A1D18", Offset = "0x13A1D18", VA = "0x13A1D18")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x13A14F4", Offset = "0x13A14F4", VA = "0x13A14F4")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x13A1F18", Offset = "0x13A1F18", VA = "0x13A1F18")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000731")]
		public enum ContactTest
		{
			[Token(Token = "0x4002C31")]
			PerpenTest,
			[Token(Token = "0x4002C32")]
			BackwardsPress
		}

		[Token(Token = "0x4001B83")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001B84")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F414")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA63")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F41C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _toolTagsMask;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA6B")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000177")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x13A2014", Offset = "0x13A2014", VA = "0x13A2014", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000178")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x13A2044", Offset = "0x13A2044", VA = "0x13A2044")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x13A2084", Offset = "0x13A2084", VA = "0x13A2084", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x13A2380", Offset = "0x13A2380", VA = "0x13A2380")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x13A271C", Offset = "0x13A271C", VA = "0x13A271C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x13A35FC", Offset = "0x13A35FC", VA = "0x13A35FC")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x13A33A4", Offset = "0x13A33A4", VA = "0x13A33A4")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x13A3B4C", Offset = "0x13A3B4C", VA = "0x13A3B4C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x13A3CEC", Offset = "0x13A3CEC", VA = "0x13A3CEC")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x13A3FA8", Offset = "0x13A3FA8", VA = "0x13A3FA8")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8936C8", Offset = "0x8936C8")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA71")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893704", Offset = "0x893704")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000179")]
		public Collider Collider
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x13A4140", Offset = "0x13A4140", VA = "0x13A4140", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB25C", Offset = "0x8AB25C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x13A4170", Offset = "0x13A4170", VA = "0x13A4170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB298", Offset = "0x8AB298")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x13A41A8", Offset = "0x13A41A8", VA = "0x13A41A8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB2D4", Offset = "0x8AB2D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x13A41D8", Offset = "0x13A41D8", VA = "0x13A41D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB310", Offset = "0x8AB310")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x13A4210", Offset = "0x13A4210", VA = "0x13A4210", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x13A4358", Offset = "0x13A4358", VA = "0x13A4358")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x13A4434", Offset = "0x13A4434", VA = "0x13A4434")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700017C")]
		Collider Collider
		{
			[Token(Token = "0x60016D6")]
			get;
		}

		[Token(Token = "0x1700017D")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60016D7")]
			get;
		}

		[Token(Token = "0x1700017E")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60016D8")]
			get;
		}
	}
	[Token(Token = "0x200032A")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x986FF4")]
		public readonly float FrameTime;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x13A25D4", Offset = "0x13A25D4", VA = "0x13A25D4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200032B")]
	public enum InteractionType
	{
		[Token(Token = "0x4001B98")]
		Enter,
		[Token(Token = "0x4001B99")]
		Stay,
		[Token(Token = "0x4001B9A")]
		Exit
	}
	[Token(Token = "0x200032C")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000732")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002C34")]
			Mesh,
			[Token(Token = "0x4002C35")]
			Skeleton,
			[Token(Token = "0x4002C36")]
			Both
		}

		[Token(Token = "0x2000733")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885F5C", Offset = "0x885F5C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAA98")]
			private object <>2__current;

			[Token(Token = "0x4002C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000496")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BD4")]
				[Address(RVA = "0x13B07B8", Offset = "0x13B07B8", VA = "0x13B07B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000497")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BD6")]
				[Address(RVA = "0x13B0888", Offset = "0x13B0888", VA = "0x13B0888", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0x13AFAAC", Offset = "0x13AFAAC", VA = "0x13AFAAC")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0x13B00DC", Offset = "0x13B00DC", VA = "0x13B00DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0x13B00F0", Offset = "0x13B00F0", VA = "0x13B00F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0x13B07E8", Offset = "0x13B07E8", VA = "0x13B07E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B9B")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA80")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F42C")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA88")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F434")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int HandAlphaId;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8937B8", Offset = "0x8937B8")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700017F")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x13AC6EC", Offset = "0x13AC6EC", VA = "0x13AC6EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x13AEC2C", Offset = "0x13AEC2C", VA = "0x13AEC2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x13AE0B8", Offset = "0x13AE0B8", VA = "0x13AE0B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x13AEC90", Offset = "0x13AEC90", VA = "0x13AEC90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x13AECF4", Offset = "0x13AECF4", VA = "0x13AECF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x13AED54", Offset = "0x13AED54", VA = "0x13AED54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x13AEDB8", Offset = "0x13AEDB8", VA = "0x13AEDB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x13AEE18", Offset = "0x13AEE18", VA = "0x13AEE18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x13AEE7C", Offset = "0x13AEE7C", VA = "0x13AEE7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x13AEEDC", Offset = "0x13AEEDC", VA = "0x13AEEDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x13AC698", Offset = "0x13AC698", VA = "0x13AC698")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x13AEF40", Offset = "0x13AEF40", VA = "0x13AEF40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x13AE064", Offset = "0x13AE064", VA = "0x13AE064")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x13AEFA4", Offset = "0x13AEFA4", VA = "0x13AEFA4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x13AF008", Offset = "0x13AF008", VA = "0x13AF008")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x13AF05C", Offset = "0x13AF05C", VA = "0x13AF05C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x13AF0C0", Offset = "0x13AF0C0", VA = "0x13AF0C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x13AF114", Offset = "0x13AF114", VA = "0x13AF114")]
			private set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x13AF178", Offset = "0x13AF178", VA = "0x13AF178")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x13AF1CC", Offset = "0x13AF1CC", VA = "0x13AF1CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x13AF230", Offset = "0x13AF230", VA = "0x13AF230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB34C", Offset = "0x8AB34C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x13AF2B0", Offset = "0x13AF2B0", VA = "0x13AF2B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB388", Offset = "0x8AB388")]
			private set
			{
			}
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x13AF338", Offset = "0x13AF338", VA = "0x13AF338")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x13AF930", Offset = "0x13AF930", VA = "0x13AF930")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x13AF874", Offset = "0x13AF874", VA = "0x13AF874")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AB3C4", Offset = "0x8AB3C4")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x13A5C1C", Offset = "0x13A5C1C", VA = "0x13A5C1C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x13AFAF4", Offset = "0x13AFAF4", VA = "0x13AFAF4")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x13AE118", Offset = "0x13AE118", VA = "0x13AE118")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x13AC274", Offset = "0x13AC274", VA = "0x13AC274")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x13AFF40", Offset = "0x13AFF40", VA = "0x13AFF40")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000734")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0x13B16A8", Offset = "0x13B16A8", VA = "0x13B16A8")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F444")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F44C")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700018A")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x13B08B8", Offset = "0x13B08B8", VA = "0x13B08B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x13B08E8", Offset = "0x13B08E8", VA = "0x13B08E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0x13B0918", Offset = "0x13B0918", VA = "0x13B0918")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0x13B0948", Offset = "0x13B0948", VA = "0x13B0948", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000044")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x13B0964", Offset = "0x13B0964", VA = "0x13B0964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB474", Offset = "0x8AB474")]
			add
			{
			}
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0x13B0AB0", Offset = "0x13B0AB0", VA = "0x13B0AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB4B0", Offset = "0x8AB4B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x13B0CC8", Offset = "0x13B0CC8", VA = "0x13B0CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB4EC", Offset = "0x8AB4EC")]
			add
			{
			}
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x13B0E14", Offset = "0x13B0E14", VA = "0x13B0E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB528", Offset = "0x8AB528")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0x13B102C", Offset = "0x13B102C", VA = "0x13B102C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB564", Offset = "0x8AB564")]
			add
			{
			}
			[Token(Token = "0x6001703")]
			[Address(RVA = "0x13B1178", Offset = "0x13B1178", VA = "0x13B1178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB5A0", Offset = "0x8AB5A0")]
			remove
			{
			}
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x13B0BFC", Offset = "0x13B0BFC", VA = "0x13B0BFC", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x13B0F60", Offset = "0x13B0F60", VA = "0x13B0F60", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x13B12C4", Offset = "0x13B12C4", VA = "0x13B12C4", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001705")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x13A2298", Offset = "0x13A2298", VA = "0x13A2298", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x13B14A8", Offset = "0x13B14A8", VA = "0x13B14A8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x13A4110", Offset = "0x13A4110", VA = "0x13A4110")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001BB3")]
		None,
		[Token(Token = "0x4001BB4")]
		Proximity,
		[Token(Token = "0x4001BB5")]
		Contact,
		[Token(Token = "0x4001BB6")]
		Action
	}
	[Token(Token = "0x200032F")]
	public enum InteractableState
	{
		[Token(Token = "0x4001BB8")]
		Default,
		[Token(Token = "0x4001BB9")]
		ProximityState,
		[Token(Token = "0x4001BBA")]
		ContactState,
		[Token(Token = "0x4001BBB")]
		ActionState
	}
	[Token(Token = "0x2000330")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F45C")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x13A39EC", Offset = "0x13A39EC", VA = "0x13A39EC")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAAB8")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700018E")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0x13B1724", Offset = "0x13B1724", VA = "0x13B1724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x13B1390", Offset = "0x13B1390", VA = "0x13B1390")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x13B1590", Offset = "0x13B1590", VA = "0x13B1590")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x13B180C", Offset = "0x13B180C", VA = "0x13B180C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885F98", Offset = "0x885F98")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAAC0")]
			public bool isRightHand;

			[Token(Token = "0x4002C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F46C")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4002C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000498")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BDC")]
				[Address(RVA = "0x13B410C", Offset = "0x13B410C", VA = "0x13B410C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000499")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BDE")]
				[Address(RVA = "0x13B41DC", Offset = "0x13B41DC", VA = "0x13B41DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BD8")]
			[Address(RVA = "0x13B32B0", Offset = "0x13B32B0", VA = "0x13B32B0")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002BD9")]
			[Address(RVA = "0x13B3508", Offset = "0x13B3508", VA = "0x13B3508", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0x13B3734", Offset = "0x13B3734", VA = "0x13B3734", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0x13B36A0", Offset = "0x13B36A0", VA = "0x13B36A0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0x13B413C", Offset = "0x13B413C", VA = "0x13B413C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F464")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x13B3050", Offset = "0x13B3050", VA = "0x13B3050")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x13B3190", Offset = "0x13B3190", VA = "0x13B3190")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AB5DC", Offset = "0x8AB5DC")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x13B32F8", Offset = "0x13B32F8", VA = "0x13B32F8")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x13B34D8", Offset = "0x13B34D8", VA = "0x13B34D8")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAAC8")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _leftPinch;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x986FFC")]
		private bool _rightPinch;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAACF")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700018F")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0x13AB5EC", Offset = "0x13AB5EC", VA = "0x13AB5EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x13AB964", Offset = "0x13AB964", VA = "0x13AB964")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x13B420C", Offset = "0x13B420C", VA = "0x13B420C")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x13B4404", Offset = "0x13B4404", VA = "0x13B4404")]
		private void Update()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x13B4978", Offset = "0x13B4978", VA = "0x13B4978")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x13B4A54", Offset = "0x13B4A54", VA = "0x13B4A54")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x13B5244", Offset = "0x13B5244", VA = "0x13B5244")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x13B5648", Offset = "0x13B5648", VA = "0x13B5648")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885FD4", Offset = "0x885FD4")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAADF")]
			private int <>1__state;

			[Token(Token = "0x4002C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F484")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700049A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BE2")]
				[Address(RVA = "0x13AE3A0", Offset = "0x13AE3A0", VA = "0x13AE3A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BE4")]
				[Address(RVA = "0x13AE470", Offset = "0x13AE470", VA = "0x13AE470", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0x13ABC18", Offset = "0x13ABC18", VA = "0x13ABC18")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0x13AD720", Offset = "0x13AD720", VA = "0x13AD720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0x13AD734", Offset = "0x13AD734", VA = "0x13AD734", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0x13AE3D0", Offset = "0x13AE3D0", VA = "0x13AE3D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BCB")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F474")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAAD7")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 _position;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F47C")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _lastScale;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isInitialized;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000190")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x13AB364", Offset = "0x13AB364", VA = "0x13AB364", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000191")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0x13AB380", Offset = "0x13AB380", VA = "0x13AB380", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000192")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x13AB39C", Offset = "0x13AB39C", VA = "0x13AB39C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000193")]
		public override bool EnableState
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0x13AB3C0", Offset = "0x13AB3C0", VA = "0x13AB3C0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600171F")]
			[Address(RVA = "0x13AB43C", Offset = "0x13AB43C", VA = "0x13AB43C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x13AB4C0", Offset = "0x13AB4C0", VA = "0x13AB4C0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x13ABB5C", Offset = "0x13ABB5C", VA = "0x13ABB5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AB68C", Offset = "0x8AB68C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x13ABC60", Offset = "0x13ABC60", VA = "0x13ABC60")]
		private void Update()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x13AC74C", Offset = "0x13AC74C", VA = "0x13AC74C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x13ACD54", Offset = "0x13ACD54", VA = "0x13ACD54")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x13ACFD0", Offset = "0x13ACFD0", VA = "0x13ACFD0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x13AD4D0", Offset = "0x13AD4D0", VA = "0x13AD4D0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x13AD4EC", Offset = "0x13AD4EC", VA = "0x13AD4EC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x13AD500", Offset = "0x13AD500", VA = "0x13AD500")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8939D4", Offset = "0x8939D4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893A10", Offset = "0x893A10")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAAE7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893A4C", Offset = "0x893A4C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000194")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001729")]
			[Address(RVA = "0x13AE4A0", Offset = "0x13AE4A0", VA = "0x13AE4A0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB73C", Offset = "0x8AB73C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600172A")]
			[Address(RVA = "0x13AE4D0", Offset = "0x13AE4D0", VA = "0x13AE4D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB778", Offset = "0x8AB778")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public bool EnableState
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0x13AE508", Offset = "0x13AE508", VA = "0x13AE508", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600172C")]
			[Address(RVA = "0x13AE56C", Offset = "0x13AE56C", VA = "0x13AE56C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x13AE5D8", Offset = "0x13AE5D8", VA = "0x13AE5D8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB7B4", Offset = "0x8AB7B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600172E")]
			[Address(RVA = "0x13AE61C", Offset = "0x13AE61C", VA = "0x13AE61C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB7F0", Offset = "0x8AB7F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public float SphereRadius
		{
			[Token(Token = "0x600172F")]
			[Address(RVA = "0x13AE668", Offset = "0x13AE668", VA = "0x13AE668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB82C", Offset = "0x8AB82C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001730")]
			[Address(RVA = "0x13AE698", Offset = "0x13AE698", VA = "0x13AE698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB868", Offset = "0x8AB868")]
			private set
			{
			}
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x13AE6D0", Offset = "0x13AE6D0", VA = "0x13AE6D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x13AE764", Offset = "0x13AE764", VA = "0x13AE764", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x13AE77C", Offset = "0x13AE77C", VA = "0x13AE77C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000336")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001BDB")]
		None = 0,
		[Token(Token = "0x4001BDC")]
		Ray = 1,
		[Token(Token = "0x4001BDD")]
		Poke = 4,
		[Token(Token = "0x4001BDE")]
		All = -1
	}
	[Token(Token = "0x2000337")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001BE0")]
		Inactive,
		[Token(Token = "0x4001BE1")]
		PrimaryInputDown,
		[Token(Token = "0x4001BE2")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001BE3")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000338")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAAF7")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x13AD458", Offset = "0x13AD458", VA = "0x13AD458")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000339")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F49C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893A88", Offset = "0x893A88")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893AC4", Offset = "0x893AC4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893B00", Offset = "0x893B00")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAAFF")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F4A4")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000198")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001735")]
			[Address(RVA = "0x13A3F70", Offset = "0x13A3F70", VA = "0x13A3F70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0x13B18F0", Offset = "0x13B18F0", VA = "0x13B18F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB8A4", Offset = "0x8AB8A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001737")]
			[Address(RVA = "0x13B1934", Offset = "0x13B1934", VA = "0x13B1934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB8E0", Offset = "0x8AB8E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001738")]
			get;
		}

		[Token(Token = "0x1700019B")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001739")]
			get;
		}

		[Token(Token = "0x1700019C")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600173A")]
			get;
		}

		[Token(Token = "0x1700019D")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600173B")]
			[Address(RVA = "0x13B1980", Offset = "0x13B1980", VA = "0x13B1980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB91C", Offset = "0x8AB91C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x13B19C0", Offset = "0x13B19C0", VA = "0x13B19C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB958", Offset = "0x8AB958")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x13B1A20", Offset = "0x13B1A20", VA = "0x13B1A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB994", Offset = "0x8AB994")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x13B1A60", Offset = "0x13B1A60", VA = "0x13B1A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB9D0", Offset = "0x8AB9D0")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001743")]
			get;
			[Token(Token = "0x6001744")]
			set;
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x13B1AC0", Offset = "0x13B1AC0", VA = "0x13B1AC0")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001740")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001741")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001742")]
		public abstract void DeFocus();

		[Token(Token = "0x6001745")]
		public abstract void Initialize();

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x13B1AF0", Offset = "0x13B1AF0", VA = "0x13B1AF0")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x13B1B88", Offset = "0x13B1B88", VA = "0x13B1B88")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x13B1C18", Offset = "0x13B1C18", VA = "0x13B1C18", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x13B2150", Offset = "0x13B2150", VA = "0x13B2150", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x13AD55C", Offset = "0x13AD55C", VA = "0x13AD55C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170001A0")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x600174B")]
			get;
		}

		[Token(Token = "0x170001A1")]
		bool EnableState
		{
			[Token(Token = "0x600174D")]
			get;
			[Token(Token = "0x600174E")]
			set;
		}

		[Token(Token = "0x170001A2")]
		bool ToolActivateState
		{
			[Token(Token = "0x600174F")]
			get;
			[Token(Token = "0x6001750")]
			set;
		}

		[Token(Token = "0x600174C")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200033B")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000737")]
		private enum PinchState
		{
			[Token(Token = "0x4002C47")]
			None,
			[Token(Token = "0x4002C48")]
			PinchDown,
			[Token(Token = "0x4002C49")]
			PinchStay,
			[Token(Token = "0x4002C4A")]
			PinchUp
		}

		[Token(Token = "0x4001BF0")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB07")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170001A3")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001751")]
			[Address(RVA = "0x13B96E0", Offset = "0x13B96E0", VA = "0x13B96E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0x13B984C", Offset = "0x13B984C", VA = "0x13B984C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001753")]
			[Address(RVA = "0x13B99B8", Offset = "0x13B99B8", VA = "0x13B99B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x13B9B24", Offset = "0x13B9B24", VA = "0x13B9B24")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x13B9B7C", Offset = "0x13B9B7C", VA = "0x13B9B7C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001BF3")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001BF4")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001BF5")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001BF6")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001BF7")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB17")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x893B78", Offset = "0x893B78")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F4BC")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB1F")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987004")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _initialized;

		[Token(Token = "0x170001A6")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0x13BA21C", Offset = "0x13BA21C", VA = "0x13BA21C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001A7")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001757")]
			[Address(RVA = "0x13BA238", Offset = "0x13BA238", VA = "0x13BA238", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001A8")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0x13BA334", Offset = "0x13BA334", VA = "0x13BA334", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A9")]
		public override bool EnableState
		{
			[Token(Token = "0x6001759")]
			[Address(RVA = "0x13BA358", Offset = "0x13BA358", VA = "0x13BA358", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600175A")]
			[Address(RVA = "0x13BA420", Offset = "0x13BA420", VA = "0x13BA420", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x13BA548", Offset = "0x13BA548", VA = "0x13BA548", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x13BA608", Offset = "0x13BA608", VA = "0x13BA608")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x13BA744", Offset = "0x13BA744", VA = "0x13BA744")]
		private void Update()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x13BAED8", Offset = "0x13BAED8", VA = "0x13BAED8")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x13BB070", Offset = "0x13BB070", VA = "0x13BB070", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x13BB6D8", Offset = "0x13BB6D8", VA = "0x13BB6D8")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x13BBA28", Offset = "0x13BBA28", VA = "0x13BBA28")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x13BBC84", Offset = "0x13BBC84", VA = "0x13BBC84")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x13BC1F8", Offset = "0x13BC1F8", VA = "0x13BC1F8")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x13BCA80", Offset = "0x13BCA80", VA = "0x13BCA80", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x13BCC4C", Offset = "0x13BCC4C", VA = "0x13BCC4C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x13BCCAC", Offset = "0x13BCCAC", VA = "0x13BCCAC")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001C03")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001C04")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F4C4")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _toolActivateState;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB2E")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F4CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893C94", Offset = "0x893C94")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170001AA")]
		public bool EnableState
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0x13BA3BC", Offset = "0x13BA3BC", VA = "0x13BA3BC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001768")]
			[Address(RVA = "0x13BA48C", Offset = "0x13BA48C", VA = "0x13BA48C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0x13BCE10", Offset = "0x13BCE10", VA = "0x13BCE10", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x13BADDC", Offset = "0x13BADDC", VA = "0x13BADDC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x13BD394", Offset = "0x13BD394", VA = "0x13BD394", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ABA0C", Offset = "0x8ABA0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176D")]
			[Address(RVA = "0x13BD3C4", Offset = "0x13BD3C4", VA = "0x13BD3C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ABA48", Offset = "0x8ABA48")]
			set
			{
			}
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x13BCE54", Offset = "0x13BCE54", VA = "0x13BCE54")]
		private void Awake()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x13BCAF0", Offset = "0x13BCAF0", VA = "0x13BCAF0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x13BD3FC", Offset = "0x13BD3FC", VA = "0x13BD3FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x13BDC5C", Offset = "0x13BDC5C", VA = "0x13BDC5C")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x13BE094", Offset = "0x13BE094", VA = "0x13BE094")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool useSpherecast;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170001AD")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001772")]
			[Address(RVA = "0x13AAB00", Offset = "0x13AAB00", VA = "0x13AAB00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001773")]
			[Address(RVA = "0x13AAB44", Offset = "0x13AAB44", VA = "0x13AAB44")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001774")]
			[Address(RVA = "0x13AAC70", Offset = "0x13AAC70", VA = "0x13AAC70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001775")]
			[Address(RVA = "0x13AACB4", Offset = "0x13AACB4", VA = "0x13AACB4")]
			set
			{
			}
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x13AAE04", Offset = "0x13AAE04", VA = "0x13AAE04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x13AB214", Offset = "0x13AB214", VA = "0x13AB214")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x13AB2A4", Offset = "0x13AB2A4", VA = "0x13AB2A4")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x13AB334", Offset = "0x13AB334", VA = "0x13AB334")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB36")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x13A50DC", Offset = "0x13A50DC", VA = "0x13A50DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x13A50F0", Offset = "0x13A50F0", VA = "0x13A50F0")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x13A5254", Offset = "0x13A5254", VA = "0x13A5254")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x13A5498", Offset = "0x13A5498", VA = "0x13A5498")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x13A56DC", Offset = "0x13A56DC", VA = "0x13A56DC")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x13A5874", Offset = "0x13A5874", VA = "0x13A5874")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x13A5A90", Offset = "0x13A5A90", VA = "0x13A5A90")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x13A5B94", Offset = "0x13A5B94", VA = "0x13A5B94")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x13A5E20", Offset = "0x13A5E20", VA = "0x13A5E20")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x13A5F10", Offset = "0x13A5F10", VA = "0x13A5F10")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F4D4")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x13A5F40", Offset = "0x13A5F40", VA = "0x13A5F40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x13A5F54", Offset = "0x13A5F54", VA = "0x13A5F54")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x13A5EA8", Offset = "0x13A5EA8", VA = "0x13A5EA8")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x13A5FC8", Offset = "0x13A5FC8", VA = "0x13A5FC8")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886010", Offset = "0x886010")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F4E4")]
			private int <>1__state;

			[Token(Token = "0x4002C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4002C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4002C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAB4E")]
			private float <startTime>5__3;

			[Token(Token = "0x4002C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private float <endTime>5__4;

			[Token(Token = "0x1700049C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BE8")]
				[Address(RVA = "0x13B93E4", Offset = "0x13B93E4", VA = "0x13B93E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BEA")]
				[Address(RVA = "0x13B94B4", Offset = "0x13B94B4", VA = "0x13B94B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BE5")]
			[Address(RVA = "0x13B8D88", Offset = "0x13B8D88", VA = "0x13B8D88")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0x13B8F54", Offset = "0x13B8F54", VA = "0x13B8F54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0x13B8F68", Offset = "0x13B8F68", VA = "0x13B8F68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0x13B9414", Offset = "0x13B9414", VA = "0x13B9414", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C14")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001C15")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB3E")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F4DC")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB46")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x13B8570", Offset = "0x13B8570", VA = "0x13B8570")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x13B8684", Offset = "0x13B8684", VA = "0x13B8684")]
		private void Update()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x13B8C30", Offset = "0x13B8C30", VA = "0x13B8C30")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x13B8B74", Offset = "0x13B8B74", VA = "0x13B8B74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ABA84", Offset = "0x8ABA84")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x13B8DD0", Offset = "0x13B8DD0", VA = "0x13B8DD0")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000739")]
		public enum SelectionState
		{
			[Token(Token = "0x4002C52")]
			Off,
			[Token(Token = "0x4002C53")]
			Selected,
			[Token(Token = "0x4002C54")]
			Highlighted
		}

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F4EC")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB56")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170001AF")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x13BE134", Offset = "0x13BE134", VA = "0x13BE134")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x13BE164", Offset = "0x13BE164", VA = "0x13BE164")]
			set
			{
			}
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x13BE500", Offset = "0x13BE500", VA = "0x13BE500")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x13BE878", Offset = "0x13BE878", VA = "0x13BE878")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x13BE314", Offset = "0x13BE314", VA = "0x13BE314")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x13BEAF4", Offset = "0x13BEAF4", VA = "0x13BEAF4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200073A")]
		public enum SegmentType
		{
			[Token(Token = "0x4002C56")]
			Straight,
			[Token(Token = "0x4002C57")]
			LeftTurn,
			[Token(Token = "0x4002C58")]
			RightTurn,
			[Token(Token = "0x4002C59")]
			Switch
		}

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB5E")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F4FC")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _gridSize;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _subDivCount;

		[Token(Token = "0x4001C2A")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001C2B")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F504")]
		private GameObject _mesh;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x893FDC", Offset = "0x893FDC")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pose _p1;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pose _p2;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB6E")]
		private Pose _endPose;

		[Token(Token = "0x170001B0")]
		public float StartDistance
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0x13BEBC8", Offset = "0x13BEBC8", VA = "0x13BEBC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ABB34", Offset = "0x8ABB34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001795")]
			[Address(RVA = "0x13BEBF8", Offset = "0x13BEBF8", VA = "0x13BEBF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ABB70", Offset = "0x8ABB70")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public float GridSize
		{
			[Token(Token = "0x6001796")]
			[Address(RVA = "0x13BEC30", Offset = "0x13BEC30", VA = "0x13BEC30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x13BEC60", Offset = "0x13BEC60", VA = "0x13BEC60")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public int SubDivCount
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0x13BEC98", Offset = "0x13BEC98", VA = "0x13BEC98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001799")]
			[Address(RVA = "0x13BECC8", Offset = "0x13BECC8", VA = "0x13BECC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public SegmentType Type
		{
			[Token(Token = "0x600179A")]
			[Address(RVA = "0x13BED00", Offset = "0x13BED00", VA = "0x13BED00")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170001B4")]
		public Pose EndPose
		{
			[Token(Token = "0x600179B")]
			[Address(RVA = "0x13BED30", Offset = "0x13BED30", VA = "0x13BED30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public float Radius
		{
			[Token(Token = "0x600179C")]
			[Address(RVA = "0x13BF904", Offset = "0x13BF904", VA = "0x13BF904")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B6")]
		public float SegmentLength
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0x13BED98", Offset = "0x13BED98", VA = "0x13BED98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x13BF950", Offset = "0x13BF950", VA = "0x13BF950")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x13BF9C0", Offset = "0x13BF9C0", VA = "0x13BF9C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x13BEE84", Offset = "0x13BEE84", VA = "0x13BEE84")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x13BF9D4", Offset = "0x13BF9D4", VA = "0x13BF9D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x13BF9E8", Offset = "0x13BF9E8", VA = "0x13BF9E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x13BFADC", Offset = "0x13BFADC", VA = "0x13BFADC")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x13C1074", Offset = "0x13C1074", VA = "0x13C1074")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x13C17A4", Offset = "0x13C17A4", VA = "0x13C17A4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88604C", Offset = "0x88604C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAB8D")]
			private object <>2__current;

			[Token(Token = "0x4002C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4002C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F524")]
			private float <startTime>5__2;

			[Token(Token = "0x4002C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <endTime>5__3;

			[Token(Token = "0x1700049E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BEE")]
				[Address(RVA = "0x13C31D8", Offset = "0x13C31D8", VA = "0x13C31D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF0")]
				[Address(RVA = "0x13C32A8", Offset = "0x13C32A8", VA = "0x13C32A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BEB")]
			[Address(RVA = "0x13C2B64", Offset = "0x13C2B64", VA = "0x13C2B64")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0x13C2E00", Offset = "0x13C2E00", VA = "0x13C2E00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BED")]
			[Address(RVA = "0x13C2E14", Offset = "0x13C2E14", VA = "0x13C2E14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0x13C3208", Offset = "0x13C3208", VA = "0x13C3208", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C31")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001C32")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98700C")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB7D")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F514")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB85")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int _materialColorId;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F51C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x13C18C4", Offset = "0x13C18C4", VA = "0x13C18C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x13C1A24", Offset = "0x13C1A24", VA = "0x13C1A24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x13C1BBC", Offset = "0x13C1BBC", VA = "0x13C1BBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x13C1D98", Offset = "0x13C1D98", VA = "0x13C1D98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x13C200C", Offset = "0x13C200C", VA = "0x13C200C")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x13C2430", Offset = "0x13C2430", VA = "0x13C2430")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x13C2A04", Offset = "0x13C2A04", VA = "0x13C2A04")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x13C2768", Offset = "0x13C2768", VA = "0x13C2768")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x13C27D8", Offset = "0x13C27D8", VA = "0x13C27D8")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x13C2AA8", Offset = "0x13C2AA8", VA = "0x13C2AA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ABBAC", Offset = "0x8ABBAC")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x13C2BAC", Offset = "0x13C2BAC", VA = "0x13C2BAC")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170001B7")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0x13C32D8", Offset = "0x13C32D8", VA = "0x13C32D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x13C331C", Offset = "0x13C331C", VA = "0x13C331C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x13C3360", Offset = "0x13C3360", VA = "0x13C3360", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x13C3D60", Offset = "0x13C3D60", VA = "0x13C3D60")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB95")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001C45")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001C46")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB9D")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89439C", Offset = "0x89439C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F534")]
		protected float scale;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pose _frontPose;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pose _rearPose;

		[Token(Token = "0x170001B8")]
		public float Distance
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x13C3F3C", Offset = "0x13C3F3C", VA = "0x13C3F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ABC5C", Offset = "0x8ABC5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0x13C3F6C", Offset = "0x13C3F6C", VA = "0x13C3F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ABC98", Offset = "0x8ABC98")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public float Scale
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x13C3FA4", Offset = "0x13C3FA4", VA = "0x13C3FA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x13C3FD4", Offset = "0x13C3FD4", VA = "0x13C3FD4")]
			set
			{
			}
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x13C334C", Offset = "0x13C334C", VA = "0x13C334C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x13C400C", Offset = "0x13C400C", VA = "0x13C400C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x13C33F4", Offset = "0x13C33F4", VA = "0x13C33F4")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x13C3AF8", Offset = "0x13C3AF8", VA = "0x13C3AF8")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60017BD")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x13C3E5C", Offset = "0x13C3E5C", VA = "0x13C3E5C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886088", Offset = "0x886088")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4002C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xABB5")]
			public float animationLength;

			[Token(Token = "0x4002C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4002C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F54C")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4002C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4002C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4002C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xABBD")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private Color <onColor>5__8;

			[Token(Token = "0x4002C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F554")]
			private Color <offColor>5__9;

			[Token(Token = "0x170004A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BF4")]
				[Address(RVA = "0x13C591C", Offset = "0x13C591C", VA = "0x13C591C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF6")]
				[Address(RVA = "0x13C59EC", Offset = "0x13C59EC", VA = "0x13C59EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0x13C4F20", Offset = "0x13C4F20", VA = "0x13C4F20")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0x13C5300", Offset = "0x13C5300", VA = "0x13C5300", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0x13C5314", Offset = "0x13C5314", VA = "0x13C5314", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0x13C594C", Offset = "0x13C594C", VA = "0x13C594C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xABA5")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F53C")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xABAD")]
		private int _colorId;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F544")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x13C4540", Offset = "0x13C4540", VA = "0x13C4540")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x13C45C8", Offset = "0x13C45C8", VA = "0x13C45C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x13C487C", Offset = "0x13C487C", VA = "0x13C487C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x13C4BC4", Offset = "0x13C4BC4", VA = "0x13C4BC4")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x13C49CC", Offset = "0x13C49CC", VA = "0x13C49CC")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x13C4E3C", Offset = "0x13C4E3C", VA = "0x13C4E3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ABCD4", Offset = "0x8ABCD4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x13C4F68", Offset = "0x13C4F68", VA = "0x13C4F68")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x13C518C", Offset = "0x13C518C", VA = "0x13C518C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x13C5260", Offset = "0x13C5260", VA = "0x13C5260")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200073D")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002C6C")]
			Start,
			[Token(Token = "0x4002C6D")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002C6E")]
			Stop
		}

		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8860C4", Offset = "0x8860C4")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xABEC")]
			private int <>1__state;

			[Token(Token = "0x4002C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F57C")]
			public bool startTrain;

			[Token(Token = "0x4002C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4002C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4002C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4002C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xABF4")]
			private float <startTime>5__4;

			[Token(Token = "0x4002C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private float <endTime>5__5;

			[Token(Token = "0x4002C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F584")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170004A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BFA")]
				[Address(RVA = "0x13C7218", Offset = "0x13C7218", VA = "0x13C7218", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BFC")]
				[Address(RVA = "0x13C72E8", Offset = "0x13C72E8", VA = "0x13C72E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0x13C60BC", Offset = "0x13C60BC", VA = "0x13C60BC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0x13C6A50", Offset = "0x13C6A50", VA = "0x13C6A50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0x13C6A64", Offset = "0x13C6A64", VA = "0x13C6A64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0x13C7248", Offset = "0x13C7248", VA = "0x13C7248", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C59")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001C5A")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001C5B")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001C5C")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x894504", Offset = "0x894504")]
		protected float _initialSpeed;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F55C")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xABCD")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987014")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xABD4")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F564")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xABDC")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _isMoving;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F56C")]
		private bool _reverse;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _currentSpeed;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _speedDiv;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xABE4")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x13C5A1C", Offset = "0x13C5A1C", VA = "0x13C5A1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x13C5D18", Offset = "0x13C5D18", VA = "0x13C5D18")]
		private void Update()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x13C5D48", Offset = "0x13C5D48", VA = "0x13C5D48", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x13A5178", Offset = "0x13A5178", VA = "0x13A5178")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x13C5C20", Offset = "0x13C5C20", VA = "0x13C5C20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ABD84", Offset = "0x8ABD84")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x13C6104", Offset = "0x13C6104", VA = "0x13C6104")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x13C5F90", Offset = "0x13C5F90", VA = "0x13C5F90")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x13A52DC", Offset = "0x13A52DC", VA = "0x13A52DC")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x13A5520", Offset = "0x13A5520", VA = "0x13A5520")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x13C65B8", Offset = "0x13C65B8", VA = "0x13C65B8")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x13C6804", Offset = "0x13C6804", VA = "0x13C6804")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x13A5764", Offset = "0x13A5764", VA = "0x13A5764")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x13A58FC", Offset = "0x13A58FC", VA = "0x13A58FC")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x13A5B18", Offset = "0x13A5B18", VA = "0x13A5B18")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x13C6958", Offset = "0x13C6958", VA = "0x13C6958")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xABFC")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F58C")]
		private float _trainLength;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170001BA")]
		public float TrackLength
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0x13C7318", Offset = "0x13C7318", VA = "0x13C7318")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x13C7348", Offset = "0x13C7348", VA = "0x13C7348")]
			private set
			{
			}
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x13C7380", Offset = "0x13C7380", VA = "0x13C7380")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x13C4208", Offset = "0x13C4208", VA = "0x13C4208")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x13C73B0", Offset = "0x13C73B0", VA = "0x13C73B0")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x13C7838", Offset = "0x13C7838", VA = "0x13C7838")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x13C7A50", Offset = "0x13C7A50", VA = "0x13C7A50")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class Pose
	{
		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Quaternion Rotation;

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x13BA014", Offset = "0x13BA014", VA = "0x13BA014")]
		public Pose()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x13BA178", Offset = "0x13BA178", VA = "0x13BA178")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886100", Offset = "0x886100")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC14")]
			private object <>2__current;

			[Token(Token = "0x4002C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F5A4")]
			public float goalSpeed;

			[Token(Token = "0x4002C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <totalTime>5__2;

			[Token(Token = "0x4002C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170004A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C00")]
				[Address(RVA = "0x13C8904", Offset = "0x13C8904", VA = "0x13C8904", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C02")]
				[Address(RVA = "0x13C89D4", Offset = "0x13C89D4", VA = "0x13C89D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0x13C800C", Offset = "0x13C800C", VA = "0x13C800C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0x13C82E8", Offset = "0x13C82E8", VA = "0x13C82E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0x13C82FC", Offset = "0x13C82FC", VA = "0x13C82FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C01")]
			[Address(RVA = "0x13C8934", Offset = "0x13C8934", VA = "0x13C8934", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88613C", Offset = "0x88613C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC1C")]
			private object <>2__current;

			[Token(Token = "0x4002C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F5AC")]
			public AudioClip initial;

			[Token(Token = "0x4002C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4002C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioClip clip;

			[Token(Token = "0x170004A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C06")]
				[Address(RVA = "0x13C8C38", Offset = "0x13C8C38", VA = "0x13C8C38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C08")]
				[Address(RVA = "0x13C8D08", Offset = "0x13C8D08", VA = "0x13C8D08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C03")]
			[Address(RVA = "0x13C8188", Offset = "0x13C8188", VA = "0x13C8188")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002C04")]
			[Address(RVA = "0x13C8A04", Offset = "0x13C8A04", VA = "0x13C8A04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C05")]
			[Address(RVA = "0x13C8A18", Offset = "0x13C8A18", VA = "0x13C8A18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C07")]
			[Address(RVA = "0x13C8C68", Offset = "0x13C8C68", VA = "0x13C8C68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C7F")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F594")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x894BA0", Offset = "0x894BA0")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC0C")]
		private float _currentSpeed;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F59C")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _rotAngle;

		[Token(Token = "0x170001BB")]
		public bool IsMoving
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x13C7AC0", Offset = "0x13C7AC0", VA = "0x13C7AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ABE34", Offset = "0x8ABE34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x13C7B04", Offset = "0x13C7B04", VA = "0x13C7B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ABE70", Offset = "0x8ABE70")]
			private set
			{
			}
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x13C7B50", Offset = "0x13C7B50", VA = "0x13C7B50")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x13C7BC8", Offset = "0x13C7BC8", VA = "0x13C7BC8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x13C7E48", Offset = "0x13C7E48", VA = "0x13C7E48")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x13C7F28", Offset = "0x13C7F28", VA = "0x13C7F28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ABEAC", Offset = "0x8ABEAC")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x13C8054", Offset = "0x13C8054", VA = "0x13C8054")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ABF5C", Offset = "0x8ABF5C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x13C81D0", Offset = "0x13C81D0", VA = "0x13C81D0")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x13C82B8", Offset = "0x13C82B8", VA = "0x13C82B8")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC24")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98701C")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x13C8D38", Offset = "0x13C8D38", VA = "0x13C8D38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x13C8E0C", Offset = "0x13C8E0C", VA = "0x13C8E0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x13C8F2C", Offset = "0x13C8F2C", VA = "0x13C8F2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x13C9104", Offset = "0x13C9104", VA = "0x13C9104")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x13C9300", Offset = "0x13C9300", VA = "0x13C9300")]
		private void Update()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x13C9578", Offset = "0x13C9578", VA = "0x13C9578")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001C90")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001C91")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001C92")]
		EUDT_None,
		[Token(Token = "0x4001C93")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200034E")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886178", Offset = "0x886178")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170004A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C0C")]
				[Address(RVA = "0x13B8470", Offset = "0x13B8470", VA = "0x13B8470", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C0E")]
				[Address(RVA = "0x13B8540", Offset = "0x13B8540", VA = "0x13B8540", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C09")]
			[Address(RVA = "0x13B6FE4", Offset = "0x13B6FE4", VA = "0x13B6FE4")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0x13B7F20", Offset = "0x13B7F20", VA = "0x13B7F20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0x13B7F34", Offset = "0x13B7F34", VA = "0x13B7F34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0x13B84A0", Offset = "0x13B84A0", VA = "0x13B84A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool inMenu;

		[Token(Token = "0x4001C95")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001C96")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001C97")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F5BC")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x894C90", Offset = "0x894C90")]
		public GameObject mainCamera;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject uiCamera;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC3B")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F5C4")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x894CF4", Offset = "0x894CF4")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC43")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F5CC")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float heightBetweenItems;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC4B")]
		public int numLevels;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F5D4")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x13B5784", Offset = "0x13B5784", VA = "0x13B5784")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x13B6624", Offset = "0x13B6624", VA = "0x13B6624")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x13B6910", Offset = "0x13B6910", VA = "0x13B6910")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x13B6B38", Offset = "0x13B6B38", VA = "0x13B6B38")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x13B6D60", Offset = "0x13B6D60", VA = "0x13B6D60")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x13B68C8", Offset = "0x13B68C8", VA = "0x13B68C8")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x13B6F28", Offset = "0x13B6F28", VA = "0x13B6F28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AC00C", Offset = "0x8AC00C")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x13B702C", Offset = "0x13B702C", VA = "0x13B702C")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x13B5D5C", Offset = "0x13B5D5C", VA = "0x13B5D5C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x13B72EC", Offset = "0x13B72EC", VA = "0x13B72EC")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x13B7090", Offset = "0x13B7090", VA = "0x13B7090")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x13B7B00", Offset = "0x13B7B00", VA = "0x13B7B00")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x13B7C54", Offset = "0x13B7C54", VA = "0x13B7C54")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x13B7D1C", Offset = "0x13B7D1C", VA = "0x13B7D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC0BC", Offset = "0x8AC0BC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x13B7DC8", Offset = "0x13B7DC8", VA = "0x13B7DC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC0F8", Offset = "0x8AC0F8")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x13B7E74", Offset = "0x13B7E74", VA = "0x13B7E74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC134", Offset = "0x8AC134")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87C9AC", Offset = "0x87C9AC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8861B4", Offset = "0x8861B4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6002C10")]
			[Address(RVA = "0x190C7F4", Offset = "0x190C7F4", VA = "0x190C7F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C11")]
			[Address(RVA = "0x190C824", Offset = "0x190C824", VA = "0x190C824")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001CAC")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001CAD")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001CAE")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001CAF")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001CB0")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001CB1")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001CB2")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001CB3")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001CB4")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001CB5")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001CB6")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC63")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F5EC")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC6B")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F5F4")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_isPointing;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC73")]
		private float m_pointBlend;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F5FC")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x190A5B0", Offset = "0x190A5B0", VA = "0x190A5B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x190A63C", Offset = "0x190A63C", VA = "0x190A63C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x190AED4", Offset = "0x190AED4", VA = "0x190AED4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x190B03C", Offset = "0x190B03C", VA = "0x190B03C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x190B364", Offset = "0x190B364", VA = "0x190B364")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x190BE90", Offset = "0x190BE90", VA = "0x190BE90")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x190C190", Offset = "0x190C190", VA = "0x190C190")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x190C45C", Offset = "0x190C45C", VA = "0x190C45C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x190B510", Offset = "0x190B510", VA = "0x190B510")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x190B6D0", Offset = "0x190B6D0", VA = "0x190B6D0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x190AB7C", Offset = "0x190AB7C", VA = "0x190AB7C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x190C6D8", Offset = "0x190C6D8", VA = "0x190C6D8")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001CC9")]
		Default,
		[Token(Token = "0x4001CCA")]
		Generic,
		[Token(Token = "0x4001CCB")]
		PingPongBall,
		[Token(Token = "0x4001CCC")]
		Controller
	}
	[Token(Token = "0x2000351")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC82")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170001BC")]
		public bool AllowPointing
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x190C8C0", Offset = "0x190C8C0", VA = "0x190C8C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BD")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x190C904", Offset = "0x190C904", VA = "0x190C904")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BE")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x190C948", Offset = "0x190C948", VA = "0x190C948")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x190C978", Offset = "0x190C978", VA = "0x190C978")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F604")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x190C9A8", Offset = "0x190C9A8", VA = "0x190C9A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x190CEEC", Offset = "0x190CEEC", VA = "0x190CEEC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x190CF9C", Offset = "0x190CF9C", VA = "0x190CF9C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x190D030", Offset = "0x190D030", VA = "0x190D030")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000353")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001CD4")]
		TRIANGLES,
		[Token(Token = "0x4001CD5")]
		QUADS
	}
	[Token(Token = "0x2000354")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001CD7")]
		ABSORPTION,
		[Token(Token = "0x4001CD8")]
		TRANSMISSION,
		[Token(Token = "0x4001CD9")]
		SCATTERING
	}
	[Token(Token = "0x2000355")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC82")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F604")]
		public FaceType faceType;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000356")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001CDE")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001CDF")]
		public const string Tab = "    ";

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1914BC8", Offset = "0x1914BC8", VA = "0x1914BC8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8AC170", Offset = "0x8AC170")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8AC170", Offset = "0x8AC170")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1914CDC", Offset = "0x1914CDC", VA = "0x1914CDC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8AC21C", Offset = "0x8AC21C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8AC21C", Offset = "0x8AC21C")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1914E00", Offset = "0x1914E00", VA = "0x1914E00")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8AC2C8", Offset = "0x8AC2C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8AC2C8", Offset = "0x8AC2C8")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1914F14", Offset = "0x1914F14", VA = "0x1914F14")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8AC374", Offset = "0x8AC374")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8AC374", Offset = "0x8AC374")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x1915028", Offset = "0x1915028", VA = "0x1915028")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8AC420", Offset = "0x8AC420")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8AC420", Offset = "0x8AC420")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class CAPI
	{
		[Token(Token = "0x2000743")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000744")]
		public enum Result
		{
			[Token(Token = "0x4002C8A")]
			Success = 0,
			[Token(Token = "0x4002C8B")]
			Failure = -1000,
			[Token(Token = "0x4002C8C")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4002C8D")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4002C8E")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4002C8F")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4002C90")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4002C91")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4002C92")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000745")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4002C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xACB2")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6002C16")]
			[Address(RVA = "0x1925D9C", Offset = "0x1925D9C", VA = "0x1925D9C")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001CE0")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC9A")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F61C")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001CE8")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001819")]
		[Address(RVA = "0x191523C", Offset = "0x191523C", VA = "0x191523C")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x1915360", Offset = "0x1915360", VA = "0x1915360")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x19157B0", Offset = "0x19157B0", VA = "0x19157B0")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1915998", Offset = "0x1915998", VA = "0x1915998")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600181D")]
		[Address(RVA = "0x1915A80", Offset = "0x1915A80", VA = "0x1915A80")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1915B70", Offset = "0x1915B70", VA = "0x1915B70")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1915C6C", Offset = "0x1915C6C", VA = "0x1915C6C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1915F00", Offset = "0x1915F00", VA = "0x1915F00")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1915FFC", Offset = "0x1915FFC", VA = "0x1915FFC")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1916290", Offset = "0x1916290", VA = "0x1916290")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001823")]
		[Address(RVA = "0x191638C", Offset = "0x191638C", VA = "0x191638C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1916480", Offset = "0x1916480", VA = "0x1916480")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001825")]
		[Address(RVA = "0x191657C", Offset = "0x191657C", VA = "0x191657C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1916670", Offset = "0x1916670", VA = "0x1916670")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001827")]
		[Address(RVA = "0x191677C", Offset = "0x191677C", VA = "0x191677C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1916878", Offset = "0x1916878", VA = "0x1916878")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001829")]
		[Address(RVA = "0x1916974", Offset = "0x1916974", VA = "0x1916974")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1916A68", Offset = "0x1916A68", VA = "0x1916A68")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600182B")]
		[Address(RVA = "0x1916B5C", Offset = "0x1916B5C", VA = "0x1916B5C")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600182C")]
		[Address(RVA = "0x1916C58", Offset = "0x1916C58", VA = "0x1916C58")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600182D")]
		[Address(RVA = "0x1916D64", Offset = "0x1916D64", VA = "0x1916D64")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x600182E")]
		[Address(RVA = "0x1916E68", Offset = "0x1916E68", VA = "0x1916E68")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1916F5C", Offset = "0x1916F5C", VA = "0x1916F5C")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x1917080", Offset = "0x1917080", VA = "0x1917080")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001831")]
		[Address(RVA = "0x19171A0", Offset = "0x19171A0", VA = "0x19171A0")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001832")]
		[Address(RVA = "0x19172D0", Offset = "0x19172D0", VA = "0x19172D0")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001833")]
		[Address(RVA = "0x1917430", Offset = "0x1917430", VA = "0x1917430")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001834")]
		[Address(RVA = "0x1917598", Offset = "0x1917598", VA = "0x1917598")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001835")]
		[Address(RVA = "0x1917694", Offset = "0x1917694", VA = "0x1917694")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001836")]
		[Address(RVA = "0x19177A0", Offset = "0x19177A0", VA = "0x19177A0")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001837")]
		[Address(RVA = "0x19178AC", Offset = "0x19178AC", VA = "0x19178AC")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001838")]
		[Address(RVA = "0x19179B8", Offset = "0x19179B8", VA = "0x19179B8")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1917AC4", Offset = "0x1917AC4", VA = "0x1917AC4")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1917BC0", Offset = "0x1917BC0", VA = "0x1917BC0")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1917E08", Offset = "0x1917E08", VA = "0x1917E08")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1917D04", Offset = "0x1917D04", VA = "0x1917D04")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1918324", Offset = "0x1918324", VA = "0x1918324")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600183E")]
		[Address(RVA = "0x19186A8", Offset = "0x19186A8", VA = "0x19186A8")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600183F")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x19187A4", Offset = "0x19187A4", VA = "0x19187A4")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001841")]
		[Address(RVA = "0x1918DC8", Offset = "0x1918DC8", VA = "0x1918DC8")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x1918EC4", Offset = "0x1918EC4", VA = "0x1918EC4")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001843")]
		[Address(RVA = "0x1919248", Offset = "0x1919248", VA = "0x1919248")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x1919344", Offset = "0x1919344", VA = "0x1919344")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001845")]
		[Address(RVA = "0x19196C8", Offset = "0x19196C8", VA = "0x19196C8")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x19197C4", Offset = "0x19197C4", VA = "0x19197C4")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1919B48", Offset = "0x1919B48", VA = "0x1919B48")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x1919C44", Offset = "0x1919C44", VA = "0x1919C44")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1919FC8", Offset = "0x1919FC8", VA = "0x1919FC8")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600184A")]
		[Address(RVA = "0x191A0C4", Offset = "0x191A0C4", VA = "0x191A0C4")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x600184B")]
		[Address(RVA = "0x191A1B8", Offset = "0x191A1B8", VA = "0x191A1B8")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600184C")]
		[Address(RVA = "0x191A2DC", Offset = "0x191A2DC", VA = "0x191A2DC")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x191A3D8", Offset = "0x191A3D8", VA = "0x191A3D8")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x191A758", Offset = "0x191A758", VA = "0x191A758")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x600184F")]
		[Address(RVA = "0x191A9DC", Offset = "0x191A9DC", VA = "0x191A9DC")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001850")]
		[Address(RVA = "0x191A65C", Offset = "0x191A65C", VA = "0x191A65C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001851")]
		[Address(RVA = "0x191AAD8", Offset = "0x191AAD8", VA = "0x191AAD8")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001852")]
		[Address(RVA = "0x191ABD4", Offset = "0x191ABD4", VA = "0x191ABD4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001853")]
		[Address(RVA = "0x191ACD8", Offset = "0x191ACD8", VA = "0x191ACD8")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001854")]
		[Address(RVA = "0x191ADD4", Offset = "0x191ADD4", VA = "0x191ADD4")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001855")]
		[Address(RVA = "0x191AED8", Offset = "0x191AED8", VA = "0x191AED8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001856")]
		[Address(RVA = "0x191AFD4", Offset = "0x191AFD4", VA = "0x191AFD4")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x191B0D0", Offset = "0x191B0D0", VA = "0x191B0D0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001858")]
		[Address(RVA = "0x191B6B0", Offset = "0x191B6B0", VA = "0x191B6B0")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x191B7B4", Offset = "0x191B7B4", VA = "0x191B7B4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600185A")]
		[Address(RVA = "0x191BC58", Offset = "0x191BC58", VA = "0x191BC58")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x191BD64", Offset = "0x191BD64", VA = "0x191BD64")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x600185C")]
		[Address(RVA = "0x191BFE8", Offset = "0x191BFE8", VA = "0x191BFE8")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600185D")]
		[Address(RVA = "0x191C0E4", Offset = "0x191C0E4", VA = "0x191C0E4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x191C1E0", Offset = "0x191C1E0", VA = "0x191C1E0")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600185F")]
		[Address(RVA = "0x191C464", Offset = "0x191C464", VA = "0x191C464")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x191C560", Offset = "0x191C560", VA = "0x191C560")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001861")]
		[Address(RVA = "0x191C7E4", Offset = "0x191C7E4", VA = "0x191C7E4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001862")]
		[Address(RVA = "0x191C8E0", Offset = "0x191C8E0", VA = "0x191C8E0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001863")]
		[Address(RVA = "0x191C9DC", Offset = "0x191C9DC", VA = "0x191C9DC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001864")]
		[Address(RVA = "0x191CAD8", Offset = "0x191CAD8", VA = "0x191CAD8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001865")]
		[Address(RVA = "0x191CBD4", Offset = "0x191CBD4", VA = "0x191CBD4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001866")]
		[Address(RVA = "0x191CCD0", Offset = "0x191CCD0", VA = "0x191CCD0")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001867")]
		[Address(RVA = "0x191CDEC", Offset = "0x191CDEC", VA = "0x191CDEC")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001868")]
		[Address(RVA = "0x191CF08", Offset = "0x191CF08", VA = "0x191CF08")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001869")]
		[Address(RVA = "0x191D004", Offset = "0x191D004", VA = "0x191D004")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600186A")]
		[Address(RVA = "0x191D100", Offset = "0x191D100", VA = "0x191D100")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600186B")]
		[Address(RVA = "0x191D240", Offset = "0x191D240", VA = "0x191D240")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600186C")]
		[Address(RVA = "0x191D33C", Offset = "0x191D33C", VA = "0x191D33C")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600186D")]
		[Address(RVA = "0x191D438", Offset = "0x191D438", VA = "0x191D438")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600186E")]
		[Address(RVA = "0x191D534", Offset = "0x191D534", VA = "0x191D534")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600186F")]
		[Address(RVA = "0x191D630", Offset = "0x191D630", VA = "0x191D630")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001870")]
		[Address(RVA = "0x191D72C", Offset = "0x191D72C", VA = "0x191D72C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001871")]
		[Address(RVA = "0x191D830", Offset = "0x191D830", VA = "0x191D830")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001872")]
		[Address(RVA = "0x191D92C", Offset = "0x191D92C", VA = "0x191D92C")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001873")]
		[Address(RVA = "0x191DA28", Offset = "0x191DA28", VA = "0x191DA28")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001874")]
		[Address(RVA = "0x191DB24", Offset = "0x191DB24", VA = "0x191DB24")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001875")]
		[Address(RVA = "0x191DC28", Offset = "0x191DC28", VA = "0x191DC28")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001876")]
		[Address(RVA = "0x191DD2C", Offset = "0x191DD2C", VA = "0x191DD2C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001877")]
		[Address(RVA = "0x191DE28", Offset = "0x191DE28", VA = "0x191DE28")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x191DF24", Offset = "0x191DF24", VA = "0x191DF24")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001879")]
		[Address(RVA = "0x191E1A8", Offset = "0x191E1A8", VA = "0x191E1A8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x191E2A4", Offset = "0x191E2A4", VA = "0x191E2A4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600187B")]
		[Address(RVA = "0x191E528", Offset = "0x191E528", VA = "0x191E528")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x191E624", Offset = "0x191E624", VA = "0x191E624")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600187D")]
		[Address(RVA = "0x191E91C", Offset = "0x191E91C", VA = "0x191E91C")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x191EA18", Offset = "0x191EA18", VA = "0x191EA18")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x191ED98", Offset = "0x191ED98", VA = "0x191ED98")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001880")]
		[Address(RVA = "0x191F430", Offset = "0x191F430", VA = "0x191F430")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001881")]
		[Address(RVA = "0x191EC9C", Offset = "0x191EC9C", VA = "0x191EC9C")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001882")]
		[Address(RVA = "0x191F534", Offset = "0x191F534", VA = "0x191F534")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001883")]
		[Address(RVA = "0x191F630", Offset = "0x191F630", VA = "0x191F630")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001884")]
		[Address(RVA = "0x191F734", Offset = "0x191F734", VA = "0x191F734")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001885")]
		[Address(RVA = "0x191F830", Offset = "0x191F830", VA = "0x191F830")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001886")]
		[Address(RVA = "0x191F92C", Offset = "0x191F92C", VA = "0x191F92C")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001887")]
		[Address(RVA = "0x191FA5C", Offset = "0x191FA5C", VA = "0x191FA5C")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001888")]
		[Address(RVA = "0x191FB8C", Offset = "0x191FB8C", VA = "0x191FB8C")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001889")]
		[Address(RVA = "0x191FC90", Offset = "0x191FC90", VA = "0x191FC90")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600188A")]
		[Address(RVA = "0x191FD84", Offset = "0x191FD84", VA = "0x191FD84")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600188B")]
		[Address(RVA = "0x191FE80", Offset = "0x191FE80", VA = "0x191FE80")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600188C")]
		[Address(RVA = "0x191FF7C", Offset = "0x191FF7C", VA = "0x191FF7C")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600188D")]
		[Address(RVA = "0x1920078", Offset = "0x1920078", VA = "0x1920078")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600188E")]
		[Address(RVA = "0x192016C", Offset = "0x192016C", VA = "0x192016C")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600188F")]
		[Address(RVA = "0x192038C", Offset = "0x192038C", VA = "0x192038C")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001890")]
		[Address(RVA = "0x19204BC", Offset = "0x19204BC", VA = "0x19204BC")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x19205C0", Offset = "0x19205C0", VA = "0x19205C0")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x19206C4", Offset = "0x19206C4", VA = "0x19206C4")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001893")]
		[Address(RVA = "0x19209E4", Offset = "0x19209E4", VA = "0x19209E4")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x1920AE0", Offset = "0x1920AE0", VA = "0x1920AE0")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001895")]
		[Address(RVA = "0x1920E48", Offset = "0x1920E48", VA = "0x1920E48")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001896")]
		[Address(RVA = "0x1920F44", Offset = "0x1920F44", VA = "0x1920F44")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x1921068", Offset = "0x1921068", VA = "0x1921068")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001898")]
		[Address(RVA = "0x1921A74", Offset = "0x1921A74", VA = "0x1921A74")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001899")]
		[Address(RVA = "0x1921B68", Offset = "0x1921B68", VA = "0x1921B68")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x1921C90", Offset = "0x1921C90", VA = "0x1921C90")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600189B")]
		[Address(RVA = "0x19230F4", Offset = "0x19230F4", VA = "0x19230F4")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x600189C")]
		[Address(RVA = "0x19231E8", Offset = "0x19231E8", VA = "0x19231E8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x191514C", Offset = "0x191514C", VA = "0x191514C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8AC4CC", Offset = "0x8AC4CC")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600189E")]
		[Address(RVA = "0x1923310", Offset = "0x1923310", VA = "0x1923310")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600189F")]
		[Address(RVA = "0x1923424", Offset = "0x1923424", VA = "0x1923424")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x1923518", Offset = "0x1923518", VA = "0x1923518")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x1923614", Offset = "0x1923614", VA = "0x1923614")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x1923710", Offset = "0x1923710", VA = "0x1923710")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x1925120", Offset = "0x1925120", VA = "0x1925120")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x1925214", Offset = "0x1925214", VA = "0x1925214")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x1925F20", Offset = "0x1925F20", VA = "0x1925F20")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x1925C30", Offset = "0x1925C30", VA = "0x1925C30")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1926010", Offset = "0x1926010", VA = "0x1926010")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000358")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x894F38", Offset = "0x894F38")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F634")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x18F4D08", Offset = "0x18F4D08", VA = "0x18F4D08")]
		private void Start()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x18F4D1C", Offset = "0x18F4D1C", VA = "0x18F4D1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x18F4EA0", Offset = "0x18F4EA0", VA = "0x18F4EA0")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool autoActivate;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x894FBC", Offset = "0x894FBC")]
		public bool autoRetrigger;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xACBA")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x895020", Offset = "0x895020")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895080", Offset = "0x895080")]
		public Transform[] playPositions;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F63C")]
		private bool activated;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int playingIdx;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float nextPlayTime;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float fadeTime;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xACC2")]
		private int lastPosIdx;

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x2774DA8", Offset = "0x2774DA8", VA = "0x2774DA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x2775104", Offset = "0x2775104", VA = "0x2775104")]
		private void Update()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x27755E4", Offset = "0x27755E4", VA = "0x27755E4")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x2775214", Offset = "0x2775214", VA = "0x2775214")]
		public void Play()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x27757BC", Offset = "0x27757BC", VA = "0x27757BC")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x2775AA0", Offset = "0x2775AA0", VA = "0x2775AA0")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001CF7")]
		Default,
		[Token(Token = "0x4001CF8")]
		Preload,
		[Token(Token = "0x4001CF9")]
		ManualPreload
	}
	[Token(Token = "0x200035B")]
	public enum Fade
	{
		[Token(Token = "0x4001CFB")]
		In,
		[Token(Token = "0x4001CFC")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200035C")]
	public class SoundGroup
	{
		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F64C")]
		public string name;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8950E4", Offset = "0x8950E4")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xACD2")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float volumeOverride;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98702C")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x18F4840", Offset = "0x18F4840", VA = "0x18F4840")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x18F4944", Offset = "0x18F4944", VA = "0x18F4944")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x18F4A68", Offset = "0x18F4A68", VA = "0x18F4A68")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x18F4BB8", Offset = "0x18F4BB8", VA = "0x18F4BB8")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x18F3180", Offset = "0x18F3180", VA = "0x18F3180")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200035D")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000746")]
		public enum Fade
		{
			[Token(Token = "0x4002C95")]
			In,
			[Token(Token = "0x4002C96")]
			Out
		}

		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8861F0", Offset = "0x8861F0")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4002C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public SoundPriority priority;

			[Token(Token = "0x6002C18")]
			[Address(RVA = "0x277F3AC", Offset = "0x277F3AC", VA = "0x277F3AC")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6002C19")]
			[Address(RVA = "0x27845FC", Offset = "0x27845FC", VA = "0x27845FC")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88622C", Offset = "0x88622C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F67C")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0x2784424", Offset = "0x2784424", VA = "0x2784424")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0x2784454", Offset = "0x2784454", VA = "0x2784454")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895168", Offset = "0x895168")]
		public bool makePersistent;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8951CC", Offset = "0x8951CC")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895230", Offset = "0x895230")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xACD9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895294", Offset = "0x895294")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8952F8", Offset = "0x8952F8")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F654")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89535C", Offset = "0x89535C")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8953C0", Offset = "0x8953C0")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895424", Offset = "0x895424")]
		public bool verboseLogging;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895488", Offset = "0x895488")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xACE1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8954EC", Offset = "0x8954EC")]
		public float volumeSoundFX;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895550", Offset = "0x895550")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F65C")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xACE9")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static FastList<string> names;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F664")]
		private static string[] defaultSound;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool hideWarnings;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xACF1")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F66C")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xACF9")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F674")]
		private static bool soundEnabled;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170001BF")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x2775C8C", Offset = "0x2775C8C", VA = "0x2775C8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C0")]
		public static AudioManager Instance
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0x2775EEC", Offset = "0x2775EEC", VA = "0x2775EEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public static float NearFallOff
		{
			[Token(Token = "0x60018B9")]
			[Address(RVA = "0x2775FD4", Offset = "0x2775FD4", VA = "0x2775FD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C2")]
		public static float FarFallOff
		{
			[Token(Token = "0x60018BA")]
			[Address(RVA = "0x27760D0", Offset = "0x27760D0", VA = "0x27760D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C3")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x27761CC", Offset = "0x27761CC", VA = "0x27761CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x27762C8", Offset = "0x27762C8", VA = "0x27762C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x27763C4", Offset = "0x27763C4", VA = "0x27763C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x277A8E4", Offset = "0x277A8E4", VA = "0x277A8E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x27764C0", Offset = "0x27764C0", VA = "0x27764C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x2776A10", Offset = "0x2776A10", VA = "0x2776A10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x27764F0", Offset = "0x27764F0", VA = "0x27764F0")]
		private void Init()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x27783C8", Offset = "0x27783C8", VA = "0x27783C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x2776DA0", Offset = "0x2776DA0", VA = "0x2776DA0")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x27791F8", Offset = "0x27791F8", VA = "0x27791F8")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x277960C", Offset = "0x277960C", VA = "0x277960C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x2779A44", Offset = "0x2779A44", VA = "0x2779A44")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x2779D14", Offset = "0x2779D14", VA = "0x2779D14")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x2779E68", Offset = "0x2779E68", VA = "0x2779E68")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x277A9E0", Offset = "0x277A9E0", VA = "0x277A9E0")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x277AAEC", Offset = "0x277AAEC", VA = "0x277AAEC")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x277779C", Offset = "0x277779C", VA = "0x277779C")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x27783F8", Offset = "0x27783F8", VA = "0x27783F8")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x277B178", Offset = "0x277B178", VA = "0x277B178")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x277B3E8", Offset = "0x277B3E8", VA = "0x277B3E8")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x277B65C", Offset = "0x277B65C", VA = "0x277B65C")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x277AED0", Offset = "0x277AED0", VA = "0x277AED0")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x277B980", Offset = "0x277B980", VA = "0x277B980")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x277BBE0", Offset = "0x277BBE0", VA = "0x277BBE0")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x277BFC4", Offset = "0x277BFC4", VA = "0x277BFC4")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x2775664", Offset = "0x2775664", VA = "0x2775664")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x2775948", Offset = "0x2775948", VA = "0x2775948")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x277C2B4", Offset = "0x277C2B4", VA = "0x277C2B4")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x277C4DC", Offset = "0x277C4DC", VA = "0x277C4DC")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x277C628", Offset = "0x277C628", VA = "0x277C628")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x277C7F0", Offset = "0x277C7F0", VA = "0x277C7F0")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x277C934", Offset = "0x277C934", VA = "0x277C934")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x277CB08", Offset = "0x277CB08", VA = "0x277CB08")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x277E1C0", Offset = "0x277E1C0", VA = "0x277E1C0")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x277F3DC", Offset = "0x277F3DC", VA = "0x277F3DC")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x277F760", Offset = "0x277F760", VA = "0x277F760")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x27814CC", Offset = "0x27814CC", VA = "0x27814CC")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x277CEBC", Offset = "0x277CEBC", VA = "0x277CEBC")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x27816E0", Offset = "0x27816E0", VA = "0x27816E0")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x27818CC", Offset = "0x27818CC", VA = "0x27818CC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x2781B18", Offset = "0x2781B18", VA = "0x2781B18")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x2782288", Offset = "0x2782288", VA = "0x2782288")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x27826E0", Offset = "0x27826E0", VA = "0x27826E0")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x27829D8", Offset = "0x27829D8", VA = "0x27829D8")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x2782DBC", Offset = "0x2782DBC", VA = "0x2782DBC")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x2783000", Offset = "0x2783000", VA = "0x2783000")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x278335C", Offset = "0x278335C", VA = "0x278335C")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x2783E08", Offset = "0x2783E08", VA = "0x2783E08")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001D24")]
		None = -1,
		[Token(Token = "0x4001D25")]
		Reserved,
		[Token(Token = "0x4001D26")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200035F")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F684")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float transitionTime;

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x2784868", Offset = "0x2784868", VA = "0x2784868")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minDefaultVal;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxDefaultVal;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD11")]
		public float min;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float max;

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x27847A4", Offset = "0x27847A4", VA = "0x27847A4")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000749")]
		public enum FadeState
		{
			[Token(Token = "0x4002C9B")]
			Null,
			[Token(Token = "0x4002C9C")]
			FadingIn,
			[Token(Token = "0x4002C9D")]
			FadingOut,
			[Token(Token = "0x4002C9E")]
			Ducking
		}

		[Token(Token = "0x200074A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886268", Offset = "0x886268")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAD30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public SoundEmitter other;

			[Token(Token = "0x4002CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F6A4")]
			public float fadeTime;

			[Token(Token = "0x4002CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float toVolume;

			[Token(Token = "0x170004AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C20")]
				[Address(RVA = "0x18F12C8", Offset = "0x18F12C8", VA = "0x18F12C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C22")]
				[Address(RVA = "0x18F1398", Offset = "0x18F1398", VA = "0x18F1398", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0x18F1010", Offset = "0x18F1010", VA = "0x18F1010")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0x18F1058", Offset = "0x18F1058", VA = "0x18F1058", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0x18F106C", Offset = "0x18F106C", VA = "0x18F106C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C21")]
			[Address(RVA = "0x18F12F8", Offset = "0x18F12F8", VA = "0x18F12F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200074B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8862A4", Offset = "0x8862A4")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAD38")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float toVolume;

			[Token(Token = "0x4002CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F6AC")]
			public float fadeTime;

			[Token(Token = "0x4002CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <start>5__2;

			[Token(Token = "0x4002CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <end>5__3;

			[Token(Token = "0x4002CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <startTime>5__4;

			[Token(Token = "0x4002CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAD40")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170004AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C26")]
				[Address(RVA = "0x18F2090", Offset = "0x18F2090", VA = "0x18F2090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C28")]
				[Address(RVA = "0x18F2160", Offset = "0x18F2160", VA = "0x18F2160", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C23")]
			[Address(RVA = "0x18F1C68", Offset = "0x18F1C68", VA = "0x18F1C68")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6002C24")]
			[Address(RVA = "0x18F1CB0", Offset = "0x18F1CB0", VA = "0x18F1CB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C25")]
			[Address(RVA = "0x18F1CC4", Offset = "0x18F1CC4", VA = "0x18F1CC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C27")]
			[Address(RVA = "0x18F20C0", Offset = "0x18F20C0", VA = "0x18F20C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200074C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8862E0", Offset = "0x8862E0")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F6B4")]
			private object <>2__current;

			[Token(Token = "0x4002CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float delaySecs;

			[Token(Token = "0x4002CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Fade fadeType;

			[Token(Token = "0x4002CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float defaultVolume;

			[Token(Token = "0x4002CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAD48")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public float fadeTime;

			[Token(Token = "0x4002CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F6BC")]
			private float <start>5__2;

			[Token(Token = "0x4002CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <end>5__3;

			[Token(Token = "0x4002CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4002CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <startTime>5__5;

			[Token(Token = "0x4002CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAD50")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170004AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C2C")]
				[Address(RVA = "0x18F1B68", Offset = "0x18F1B68", VA = "0x18F1B68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C2E")]
				[Address(RVA = "0x18F1C38", Offset = "0x18F1C38", VA = "0x18F1C38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C29")]
			[Address(RVA = "0x18F13C8", Offset = "0x18F13C8", VA = "0x18F13C8")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0x18F1410", Offset = "0x18F1410", VA = "0x18F1410", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0x18F1424", Offset = "0x18F1424", VA = "0x18F1424", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0x18F1B98", Offset = "0x18F1B98", VA = "0x18F1B98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F68C")]
		public EmitterChannel channel;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool disableSpatialization;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD19")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F694")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD21")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F69C")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170001C7")]
		public float volume
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x278147C", Offset = "0x278147C", VA = "0x278147C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x2784A78", Offset = "0x2784A78", VA = "0x2784A78")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public float pitch
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x2784AD0", Offset = "0x2784AD0", VA = "0x2784AD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x2784B20", Offset = "0x2784B20", VA = "0x2784B20")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public AudioClip clip
		{
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x2784B78", Offset = "0x2784B78", VA = "0x2784B78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x2784BC8", Offset = "0x2784BC8", VA = "0x2784BC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public float time
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x2784C20", Offset = "0x2784C20", VA = "0x2784C20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x277CAB0", Offset = "0x277CAB0", VA = "0x277CAB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public float length
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x2784C70", Offset = "0x2784C70", VA = "0x2784C70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CC")]
		public bool loop
		{
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x2784DF8", Offset = "0x2784DF8", VA = "0x2784DF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x2784E5C", Offset = "0x2784E5C", VA = "0x2784E5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public bool mute
		{
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x2784EC8", Offset = "0x2784EC8", VA = "0x2784EC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x2784F2C", Offset = "0x2784F2C", VA = "0x2784F2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x2784F98", Offset = "0x2784F98", VA = "0x2784F98")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x2784FE8", Offset = "0x2784FE8", VA = "0x2784FE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public bool isPlaying
		{
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x2785040", Offset = "0x2785040", VA = "0x2785040")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x27850A4", Offset = "0x27850A4", VA = "0x27850A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x27813F8", Offset = "0x27813F8", VA = "0x27813F8")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x2785440", Offset = "0x2785440", VA = "0x2785440")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x2781AC8", Offset = "0x2781AC8", VA = "0x2781AC8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x2785478", Offset = "0x2785478", VA = "0x2785478")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x27854B0", Offset = "0x27854B0", VA = "0x27854B0")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x2782C74", Offset = "0x2782C74", VA = "0x2782C74")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x277B06C", Offset = "0x277B06C", VA = "0x277B06C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x27854E8", Offset = "0x27854E8", VA = "0x27854E8")]
		public void Play()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x2785584", Offset = "0x2785584", VA = "0x2785584")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x277AC68", Offset = "0x277AC68", VA = "0x277AC68")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x27855E8", Offset = "0x27855E8", VA = "0x27855E8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x2782074", Offset = "0x2782074", VA = "0x2782074")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x2782548", Offset = "0x2782548", VA = "0x2782548")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x277B910", Offset = "0x277B910", VA = "0x277B910")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x278567C", Offset = "0x278567C", VA = "0x278567C")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x27856F4", Offset = "0x27856F4", VA = "0x27856F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AC57C", Offset = "0x8AC57C")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x2785828", Offset = "0x2785828", VA = "0x2785828")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x277C12C", Offset = "0x277C12C", VA = "0x277C12C")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x277C1F0", Offset = "0x277C1F0", VA = "0x277C1F0")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x277BED0", Offset = "0x277BED0", VA = "0x277BED0")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x277BAE8", Offset = "0x277BAE8", VA = "0x277BAE8")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x27858D8", Offset = "0x27858D8", VA = "0x27858D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AC62C", Offset = "0x8AC62C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x27859E4", Offset = "0x27859E4", VA = "0x27859E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AC6DC", Offset = "0x8AC6DC")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x2785B40", Offset = "0x2785B40", VA = "0x2785B40")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4001D3D")]
		Random,
		[Token(Token = "0x4001D3E")]
		Sequential
	}
	[Token(Token = "0x2000363")]
	public enum FreqHint
	{
		[Token(Token = "0x4001D40")]
		None,
		[Token(Token = "0x4001D41")]
		Wide,
		[Token(Token = "0x4001D42")]
		Narrow
	}
	[Token(Token = "0x2000364")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001D44")]
		VeryLow = -2,
		[Token(Token = "0x4001D45")]
		Low,
		[Token(Token = "0x4001D46")]
		Default,
		[Token(Token = "0x4001D47")]
		High,
		[Token(Token = "0x4001D48")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000365")]
	public class OSPProps
	{
		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F6D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895848", Offset = "0x895848")]
		public bool enableSpatialization;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8958AC", Offset = "0x8958AC")]
		public bool useFastOverride;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895910", Offset = "0x895910")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x895910", Offset = "0x895910")]
		public float gain;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8959AC", Offset = "0x8959AC")]
		public bool enableInvSquare;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895A10", Offset = "0x895A10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x895A10", Offset = "0x895A10")]
		public float volumetric;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895AAC", Offset = "0x895AAC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x895AAC", Offset = "0x895AAC")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x27848AC", Offset = "0x27848AC", VA = "0x27848AC")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000366")]
	public class SoundFX
	{
		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F6DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895B68", Offset = "0x895B68")]
		public string name;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895BCC", Offset = "0x895BCC")]
		public SoundFXNext playback;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895C30", Offset = "0x895C30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x895C30", Offset = "0x895C30")]
		public float volume;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895CCC", Offset = "0x895CCC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x895CCC", Offset = "0x895CCC")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895D7C", Offset = "0x895D7C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x895D7C", Offset = "0x895D7C")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895E38", Offset = "0x895E38")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F6E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895E9C", Offset = "0x895E9C")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895F00", Offset = "0x895F00")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x895F64", Offset = "0x895F64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x895F64", Offset = "0x895F64")]
		public float spread;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x896000", Offset = "0x896000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x896000", Offset = "0x896000")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89609C", Offset = "0x89609C")]
		public SoundPriority priority;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x896100", Offset = "0x896100")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x896100", Offset = "0x896100")]
		public Vector2 delay;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F6EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8961A4", Offset = "0x8961A4")]
		public bool looping;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OSPProps ospProps;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x896208", Offset = "0x896208")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD80")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int lastIdx;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98703C")]
		private int playingIdx;

		[Token(Token = "0x170001D0")]
		public int Length
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0x18F28D4", Offset = "0x18F28D4", VA = "0x18F28D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D1")]
		public bool IsValid
		{
			[Token(Token = "0x600191A")]
			[Address(RVA = "0x18F2918", Offset = "0x18F2918", VA = "0x18F2918")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D2")]
		public SoundGroup Group
		{
			[Token(Token = "0x600191B")]
			[Address(RVA = "0x18F2AA0", Offset = "0x18F2AA0", VA = "0x18F2AA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191C")]
			[Address(RVA = "0x18F2AD0", Offset = "0x18F2AD0", VA = "0x18F2AD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0x18F2B08", Offset = "0x18F2B08", VA = "0x18F2B08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D4")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0x18F2B64", Offset = "0x18F2B64", VA = "0x18F2B64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x18F2190", Offset = "0x18F2190", VA = "0x18F2190")]
		public SoundFX()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x18F2BF0", Offset = "0x18F2BF0", VA = "0x18F2BF0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x18F2EE0", Offset = "0x18F2EE0", VA = "0x18F2EE0")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x18F3094", Offset = "0x18F3094", VA = "0x18F3094")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x18F3238", Offset = "0x18F3238", VA = "0x18F3238")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x18F3478", Offset = "0x18F3478", VA = "0x18F3478")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x18F34E8", Offset = "0x18F34E8", VA = "0x18F34E8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x18F3754", Offset = "0x18F3754", VA = "0x18F3754")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x18F39F4", Offset = "0x18F39F4", VA = "0x18F39F4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x18F3B28", Offset = "0x18F3B28", VA = "0x18F3B28")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x18F3C6C", Offset = "0x18F3C6C", VA = "0x18F3C6C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x18F3E04", Offset = "0x18F3E04", VA = "0x18F3E04")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x18F3F38", Offset = "0x18F3F38", VA = "0x18F3F38")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000367")]
	public class SoundFXRef
	{
		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string soundFXName;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool initialized;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170001D5")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x18F405C", Offset = "0x18F405C", VA = "0x18F405C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public string name
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x18F42BC", Offset = "0x18F42BC", VA = "0x18F42BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x18F42EC", Offset = "0x18F42EC", VA = "0x18F42EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public int Length
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0x18F4338", Offset = "0x18F4338", VA = "0x18F4338")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D8")]
		public bool IsValid
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x18F438C", Offset = "0x18F438C", VA = "0x18F438C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x18F40C4", Offset = "0x18F40C4", VA = "0x18F40C4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x18F43F4", Offset = "0x18F43F4", VA = "0x18F43F4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x18F4448", Offset = "0x18F4448", VA = "0x18F4448")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x18F44AC", Offset = "0x18F44AC", VA = "0x18F44AC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x18F4510", Offset = "0x18F4510", VA = "0x18F4510")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x18F45C8", Offset = "0x18F45C8", VA = "0x18F45C8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x18F4624", Offset = "0x18F4624", VA = "0x18F4624")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x18F4690", Offset = "0x18F4690", VA = "0x18F4690")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x18F46F8", Offset = "0x18F46F8", VA = "0x18F46F8")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x18F4754", Offset = "0x18F4754", VA = "0x18F4754")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x18F47A0", Offset = "0x18F47A0", VA = "0x18F47A0")]
		public SoundFXRef()
		{
		}
	}
}
namespace NOLO
{
	[Token(Token = "0x2000368")]
	public struct Nolo_Pose
	{
		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD77")]
		public NVector3 pos;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public NQuaternion rot;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F6E4")]
		public NVector3 vecVelocity;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NVector3 vecAngularVelocity;
	}
	[Token(Token = "0x2000369")]
	public class NOLOClient_V2_API
	{
		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int preFrame;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NoloData noloData;

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x13259E8", Offset = "0x13259E8", VA = "0x13259E8")]
		public static Nolo_Transform GetPoseByDeviceType(int deviceIndex)
		{
			return default(Nolo_Transform);
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x1326230", Offset = "0x1326230", VA = "0x1326230")]
		public static Nolo_ControllerStates GetControllerStatesByDeviceType(int deviceIndex)
		{
			return default(Nolo_ControllerStates);
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x132669C", Offset = "0x132669C", VA = "0x132669C")]
		public static int GetElectricityByDeviceType(int deviceIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x1326950", Offset = "0x1326950", VA = "0x1326950")]
		public static int GetElectricityNumberByDeviceType(int deviceIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x1326C90", Offset = "0x1326C90", VA = "0x1326C90")]
		public static bool GetNoloConnectStatus(int deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x1326DDC", Offset = "0x1326DDC", VA = "0x1326DDC")]
		public static void TriggerHapticPulse(ENoloDeviceType deviceType, int intensity)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x1326038", Offset = "0x1326038", VA = "0x1326038")]
		public static void Update()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x1326E24", Offset = "0x1326E24", VA = "0x1326E24")]
		public NOLOClient_V2_API()
		{
		}
	}
}
namespace NoloClientCSharp
{
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x87CA5C", Offset = "0x87CA5C")]
	public delegate void pfnKeyEvent(EControlerButtonType type);
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x87CA9C", Offset = "0x87CA9C")]
	public delegate void pfnVoidCallBack();
	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x87CADC", Offset = "0x87CADC")]
	public delegate void pfnDataCallBack(NoloData noloData);
	[Token(Token = "0x200036D")]
	public enum ECallBackTypes
	{
		[Token(Token = "0x4001D6C")]
		eOnZMQConnected,
		[Token(Token = "0x4001D6D")]
		eOnZMQDisConnected,
		[Token(Token = "0x4001D6E")]
		eOnButtonDoubleClicked,
		[Token(Token = "0x4001D6F")]
		eOnNewData,
		[Token(Token = "0x4001D70")]
		eCallBackCount
	}
	[Token(Token = "0x200036E")]
	public class NoloClientLib
	{
		[PreserveSig]
		[Token(Token = "0x6001950")]
		[Address(RVA = "0x15593CC", Offset = "0x15593CC", VA = "0x15593CC")]
		public static extern bool StartNoloServer(string strName);

		[PreserveSig]
		[Token(Token = "0x6001951")]
		[Address(RVA = "0x1559514", Offset = "0x1559514", VA = "0x1559514")]
		public static extern void RegisterCallBack(ECallBackTypes callBackType, IntPtr pCallBackFun);

		[PreserveSig]
		[Token(Token = "0x6001952")]
		[Address(RVA = "0x1559610", Offset = "0x1559610", VA = "0x1559610")]
		public static extern void SetHmdCenter(NVector3 hmdCenter);

		[PreserveSig]
		[Token(Token = "0x6001953")]
		[Address(RVA = "0x15596DC", Offset = "0x15596DC", VA = "0x15596DC")]
		public static extern bool OpenNoloZeroMQ();

		[PreserveSig]
		[Token(Token = "0x6001954")]
		[Address(RVA = "0x15597EC", Offset = "0x15597EC", VA = "0x15597EC")]
		public static extern void CloseNoloZeroMQ();

		[PreserveSig]
		[Token(Token = "0x6001955")]
		[Address(RVA = "0x15598D4", Offset = "0x15598D4", VA = "0x15598D4")]
		public static extern void TriggerHapticPulse(ENoloDeviceType deviceType, int intensity);

		[PreserveSig]
		[Token(Token = "0x6001956")]
		[Address(RVA = "0x15599D0", Offset = "0x15599D0", VA = "0x15599D0")]
		public static extern NoloData GetNoloData();

		[PreserveSig]
		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1559B04", Offset = "0x1559B04", VA = "0x1559B04")]
		public static extern Controller GetLeftControllerData();

		[PreserveSig]
		[Token(Token = "0x6001958")]
		[Address(RVA = "0x1559BF4", Offset = "0x1559BF4", VA = "0x1559BF4")]
		public static extern Controller GetRightControllerData();

		[PreserveSig]
		[Token(Token = "0x6001959")]
		[Address(RVA = "0x1559CE4", Offset = "0x1559CE4", VA = "0x1559CE4")]
		public static extern HMD GetHMDData();

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x1559DD4", Offset = "0x1559DD4", VA = "0x1559DD4")]
		public NoloClientLib()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public struct Nolo_Vector2
	{
		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD87")]
		public float x;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float y;
	}
	[Token(Token = "0x2000370")]
	public struct Nolo_Vector3
	{
		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F6F4")]
		public float x;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float y;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float z;
	}
	[Token(Token = "0x2000371")]
	public struct Nolo_Quaternion
	{
		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD8F")]
		public float y;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float z;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F6FC")]
		public float w;
	}
	[Token(Token = "0x2000372")]
	public struct Nolo_Pose
	{
		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Nolo_Vector3 pos;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Nolo_Quaternion rot;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Nolo_Vector3 vecVelocity;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD97")]
		public Nolo_Vector3 vecAngularVelocity;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public int status;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F704")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x2000373")]
	public struct Nolo_ControllerStates
	{
		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint buttons;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint touches;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Nolo_Vector2 touchpadAxis;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD9F")]
		public Nolo_Vector2 rAxis1;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public Nolo_Vector2 rAxis2;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F70C")]
		public Nolo_Vector2 rAxis3;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Nolo_Vector2 rAxis4;
	}
	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x87CB1C", Offset = "0x87CB1C")]
	public delegate void DisConnectedCallBack();
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x87CB5C", Offset = "0x87CB5C")]
	public delegate void ConnectedCallBack();
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x87CB9C", Offset = "0x87CB9C")]
	public delegate void ConnectedStatusCallBackFunc(int status);
	[Token(Token = "0x2000377")]
	public class NoloClientSo
	{
		[Token(Token = "0x4001D87")]
		public const string dllName = "libNoloVR";

		[PreserveSig]
		[Token(Token = "0x6001967")]
		[Address(RVA = "0x1559E04", Offset = "0x1559E04", VA = "0x1559E04")]
		public static extern int GetElectricityByDeviceType(int type);

		[PreserveSig]
		[Token(Token = "0x6001968")]
		[Address(RVA = "0x1559F00", Offset = "0x1559F00", VA = "0x1559F00")]
		public static extern Nolo_Pose GetPoseByDeviceType(int type);

		[PreserveSig]
		[Token(Token = "0x6001969")]
		[Address(RVA = "0x155A03C", Offset = "0x155A03C", VA = "0x155A03C")]
		public static extern Nolo_ControllerStates GetControllerStatesByDeviceType(int type);

		[PreserveSig]
		[Token(Token = "0x600196A")]
		[Address(RVA = "0x155A138", Offset = "0x155A138", VA = "0x155A138")]
		public static extern bool Nolovr_TriggerHapticPulse(int type, int intensity);

		[PreserveSig]
		[Token(Token = "0x600196B")]
		[Address(RVA = "0x155A25C", Offset = "0x155A25C", VA = "0x155A25C")]
		public static extern int SetConnectedStatus(ConnectedStatusCallBackFunc nfun);

		[PreserveSig]
		[Token(Token = "0x600196C")]
		[Address(RVA = "0x155A378", Offset = "0x155A378", VA = "0x155A378")]
		public static extern int GetElectricityNumberByDeviceType(int type);

		[PreserveSig]
		[Token(Token = "0x600196D")]
		[Address(RVA = "0x155A474", Offset = "0x155A474", VA = "0x155A474")]
		public static extern int SetPredictionTime(int predictionTime);

		[PreserveSig]
		[Token(Token = "0x600196E")]
		[Address(RVA = "0x155A570", Offset = "0x155A570", VA = "0x155A570")]
		public static extern int GetNoloHardwareVersionByDeviceType(int type);

		[PreserveSig]
		[Token(Token = "0x600196F")]
		[Address(RVA = "0x155A66C", Offset = "0x155A66C", VA = "0x155A66C")]
		public static extern float GetNoloSoftwareVersionByDeviceType(int type);

		[PreserveSig]
		[Token(Token = "0x6001970")]
		[Address(RVA = "0x155A768", Offset = "0x155A768", VA = "0x155A768")]
		public static extern int GetNoloSoVersion();

		[PreserveSig]
		[Token(Token = "0x6001971")]
		[Address(RVA = "0x155A858", Offset = "0x155A858", VA = "0x155A858")]
		public static extern int GetNoloTrackModel();

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x155A948", Offset = "0x155A948", VA = "0x155A948")]
		public NoloClientSo()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public enum ENoloDeviceType
	{
		[Token(Token = "0x4001D89")]
		eHmd,
		[Token(Token = "0x4001D8A")]
		eLeftController,
		[Token(Token = "0x4001D8B")]
		eRightController,
		[Token(Token = "0x4001D8C")]
		eBaseStation
	}
	[Token(Token = "0x2000379")]
	public struct NVector2
	{
		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float y;
	}
	[Token(Token = "0x200037A")]
	public struct NVector3
	{
		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xADAF")]
		public float y;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float z;
	}
	[Token(Token = "0x200037B")]
	public struct NQuaternion
	{
		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F71C")]
		public float x;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float y;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float z;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float w;
	}
	[Token(Token = "0x200037C")]
	public enum EControlerButtonType
	{
		[Token(Token = "0x4001D97")]
		ePadBtn = 1,
		[Token(Token = "0x4001D98")]
		eTriggerBtn = 2,
		[Token(Token = "0x4001D99")]
		eMenuBtn = 4,
		[Token(Token = "0x4001D9A")]
		eSystemBtn = 8,
		[Token(Token = "0x4001D9B")]
		eGripBtn = 0x10,
		[Token(Token = "0x4001D9C")]
		ePadTouch = 0x20
	}
	[Token(Token = "0x200037D")]
	public struct NoloData
	{
		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public Controller leftData;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F72C")]
		public Controller rightData;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HMD hmdData;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BaseStation bsData;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte[] expandData;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xADC7")]
		public NoloSensorData NoloSensorData;
	}
	[Token(Token = "0x200037E")]
	public struct Controller
	{
		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public int VersionID;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9862B4")]
		public NVector3 Position;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NQuaternion Rotation;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint Buttons;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint Touched;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xADCD")]
		public NVector2 TouchAxis;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public int Battery;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987034")]
		public int State;
	}
	[Token(Token = "0x200037F")]
	public struct HMD
	{
		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int HMDVersionID;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NVector3 HMDPosition;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NVector3 HMDInitPostion;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xADD4")]
		public uint HMDTwoPointDriftAngle;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public NQuaternion HMDRotation;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F734")]
		public int HMDState;
	}
	[Token(Token = "0x2000380")]
	public struct BaseStation
	{
		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int BaseStationVersionID;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int BaseStationPower;
	}
	[Token(Token = "0x2000381")]
	public struct NoloSensorData
	{
		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NVector3 vecLVelocity;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xADDC")]
		public NVector3 vecLAngularVelocity;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public NVector3 vecRVelocity;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F73C")]
		public NVector3 vecRAngularVelocity;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NVector3 vecHVelocity;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NVector3 vecHAngularVelocity;
	}
}
namespace NibiruAxis
{
	[Token(Token = "0x2000382")]
	public class NoloControllerEvent : MonoBehaviour
	{
		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMesh textMesh;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xADF4")]
		private int[] lastState;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int[] curState;

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x13294F4", Offset = "0x13294F4", VA = "0x13294F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x1329508", Offset = "0x1329508", VA = "0x1329508")]
		private void Update()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x132A548", Offset = "0x132A548", VA = "0x132A548")]
		private void processControllerKeyEvent(CDevice.NOLO_TYPE type, int[] state)
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x132B784", Offset = "0x132B784", VA = "0x132B784")]
		public NoloControllerEvent()
		{
		}
	}
}
namespace XR
{
	[Token(Token = "0x2000383")]
	public class CKeyEvent
	{
		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F754")]
		public static int ACTION_DOWN;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int ACTION_UP;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int ACTION_MOVE;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_DPAD_UP;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xADFC")]
		public static int KEYCODE_DPAD_DOWN;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_DPAD_LEFT;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F75C")]
		public static int KEYCODE_DPAD_RIGHT;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_DPAD_CENTER;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_VOLUME_UP;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_VOLUME_DOWN;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE04")]
		public static int KEYCODE_BUTTON_Y;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_BUTTON_B;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F764")]
		public static int KEYCODE_BUTTON_A;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_X;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_L1;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_R1;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE0C")]
		public static int KEYCODE_BUTTON_L2;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_BUTTON_R2;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F76C")]
		public static int KEYCODE_BUTTON_THUMBL;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_THUMBR;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_START;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_SELECT;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE14")]
		public static int KEYCODE_BUTTON_NIBIRU;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_BUTTON_HOME;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F774")]
		public static int KEYCODE_BUTTON_APP;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BACK;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_NF_1;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_NF_2;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE1C")]
		public static int KEYCODE_CONTROLLER_TOUCHPAD_TOUCH;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_CONTROLLER_TRIGGER;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F77C")]
		public static int KEYCODE_CONTROLLER_MENU;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_CONTROLLER_TOUCHPAD;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_CONTROLLER_VOLUMN_DOWN;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_CONTROLLER_VOLUMN_UP;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE24")]
		public static int KEYCODE_3DOF_CONTROLLER_TRIGGER;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int NONE;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F784")]
		public static int NOLO_LEFT;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int NOLO_RIGHT;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int[] KeyCodeIds;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_RELAX;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE2C")]
		public static int GESTURE_GIST;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int GESTURE_SPREAD_FINGERS;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F78C")]
		public static int GESTURE_WAVE_TOWARD_PALM;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_WAVE_BACKWARD_PALM;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_TUCK_FINGERS;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SHOOT;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE34")]
		public static int GESTURE_MAX;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int GESTURE_UNKNOWN;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98704C")]
		public static int GESTURE_SLIP_UP;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SLIP_DOWN;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SLIP_LEFT;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SLIP_RIGHT;

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x14EC040", Offset = "0x14EC040", VA = "0x14EC040")]
		public static bool IsTriggerKeyCode(int keycode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x14EC238", Offset = "0x14EC238", VA = "0x14EC238")]
		public CKeyEvent()
		{
		}
	}
}
namespace NibiruTask
{
	[Token(Token = "0x2000384")]
	public class CBikeEvent
	{
		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE3B")]
		private int deviceId;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private long eventTime;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F794")]
		private int angle;

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x132B87C", Offset = "0x132B87C", VA = "0x132B87C")]
		public CBikeEvent(int deviceId, int angle, long eventTime)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x132B8F4", Offset = "0x132B8F4", VA = "0x132B8F4")]
		public int getDeviceId()
		{
			return default(int);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x132B924", Offset = "0x132B924", VA = "0x132B924")]
		public void setDeviceId(int deviceId)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x132B95C", Offset = "0x132B95C", VA = "0x132B95C")]
		public long getEventTime()
		{
			return default(long);
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x132B98C", Offset = "0x132B98C", VA = "0x132B98C")]
		public void setEventTime(long eventTime)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x132B9C4", Offset = "0x132B9C4", VA = "0x132B9C4")]
		public int getAngle()
		{
			return default(int);
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x132B9F4", Offset = "0x132B9F4", VA = "0x132B9F4")]
		public void setAngle(int angle)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x132BA2C", Offset = "0x132BA2C", VA = "0x132BA2C")]
		public string toString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000385")]
	public class CDevice
	{
		[Token(Token = "0x200074D")]
		public enum HAND_MODE
		{
			[Token(Token = "0x4002CBB")]
			LEFT = 1,
			[Token(Token = "0x4002CBC")]
			RIGHT = 0
		}

		[Token(Token = "0x200074E")]
		public enum NOLO_TYPE
		{
			[Token(Token = "0x4002CBE")]
			NONE,
			[Token(Token = "0x4002CBF")]
			LEFT,
			[Token(Token = "0x4002CC0")]
			RIGHT,
			[Token(Token = "0x4002CC1")]
			HEAD
		}

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_CUBAND;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_GFORCE;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_XIAOG;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE43")]
		public static int DEVICE_XIMMERSE;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int DEVICE_FIVED_TECH;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F79C")]
		public static int DEVICE_NINE_WIVI;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_NINE_YUNSHU;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_BIKE;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_DAYDREAM;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE4B")]
		public static int DEVICE_XWG;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int DEVICE_EMDOOR_X1;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F7A4")]
		public static int DEVICE_CLEER;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_REALMAX;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_QIYI;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_PICO;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE53")]
		public static int DEVICE_NINE_GUN;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int DEVICE_NINE_GAMEPAD;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F7AC")]
		public static int DEVICE_NINE_GAMEPAD_NEW;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_EX_SENSOR;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_NINE_YOUJIAN;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DEVICE_NINE_GAMEPAD3;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE5B")]
		public static int DEVICE_NINE_EMDOORX1;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int DEVICE_NOLO_SIXDOF;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F7B4")]
		public static int MODE_CONTROLLER;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MODE_GESTURE;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MODE_BRAND;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MODE_BIKE;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE63")]
		public static int MODE_GUN;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private AndroidJavaObject bluetoothdevice;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F7BC")]
		private AndroidJavaObject usbdevice;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isQuat;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int type;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string name;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE6B")]
		private int mode;

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x132BD38", Offset = "0x132BD38", VA = "0x132BD38")]
		public int getMode()
		{
			return default(int);
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x132BD68", Offset = "0x132BD68", VA = "0x132BD68")]
		public void setMode(int mode)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x132BDA0", Offset = "0x132BDA0", VA = "0x132BDA0")]
		public string getName()
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x132BFB0", Offset = "0x132BFB0", VA = "0x132BFB0")]
		public void setName(string name)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x132BFE8", Offset = "0x132BFE8", VA = "0x132BFE8")]
		public int getType()
		{
			return default(int);
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x132C018", Offset = "0x132C018", VA = "0x132C018")]
		public void setType(int type)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x132C050", Offset = "0x132C050", VA = "0x132C050")]
		public bool getisQuat()
		{
			return default(bool);
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x132C094", Offset = "0x132C094", VA = "0x132C094")]
		public void setQuat(bool isQuat)
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x132C0E0", Offset = "0x132C0E0", VA = "0x132C0E0")]
		public void setBdevice(AndroidJavaObject bdevice)
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x132C118", Offset = "0x132C118", VA = "0x132C118")]
		public void setUdevice(AndroidJavaObject udevice)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x132C150", Offset = "0x132C150", VA = "0x132C150")]
		public CDevice(AndroidJavaObject device, bool isQuat, int type, int mode)
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x132C1F4", Offset = "0x132C1F4", VA = "0x132C1F4")]
		public CDevice(AndroidJavaObject device, bool isQuat, int type)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x132C280", Offset = "0x132C280", VA = "0x132C280")]
		public CDevice(string name, bool isQuat, int type, int mode)
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x132C324", Offset = "0x132C324", VA = "0x132C324")]
		public AndroidJavaObject getBdevice()
		{
			return null;
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x132C354", Offset = "0x132C354", VA = "0x132C354")]
		public AndroidJavaObject getUdevice()
		{
			return null;
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x132C384", Offset = "0x132C384", VA = "0x132C384")]
		public string toString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000386")]
	public class CGestureEvent
	{
		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_RELAX;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_GIST;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SPREAD_FINGERS;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE7B")]
		public static int GESTURE_WAVE_TOWARD_PALM;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int GESTURE_WAVE_BACKWARD_PALM;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F7D4")]
		public static int GESTURE_TUCK_FINGERS;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SHOOT;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_MAX;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_UNKNOWN;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE83")]
		public static int GESTURE_STATUS_UPDATE;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int GESTURE_SLIP_UP;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F7DC")]
		public static int GESTURE_SLIP_DOWN;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SLIP_LEFT;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SLIP_RIGHT;

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x132CAA0", Offset = "0x132CAA0", VA = "0x132CAA0")]
		public CGestureEvent()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class CMotionType
	{
		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int REPORT_MOTION;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE8B")]
		public static int REPORT_KEY;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int REPORT_TOUCH;

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x132CCD0", Offset = "0x132CCD0", VA = "0x132CCD0")]
		public CMotionType()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class CSensorEvent
	{
		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987054")]
		public static int TYPE_ACCELEROMETER;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int TYPE_GYROSCOPE;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int TYPE_MAGNETIC;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int type;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE92")]
		private int deviceId;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private long eventTime;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F7E4")]
		private float[] values;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int AXIS_X;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int AXIS_Y;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int AXIS_Z;

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x132CDBC", Offset = "0x132CDBC", VA = "0x132CDBC")]
		public CSensorEvent(int type, int deviceId, long eventTime, float[] values)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x132CE4C", Offset = "0x132CE4C", VA = "0x132CE4C")]
		public int getDeviceId()
		{
			return default(int);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x132CE7C", Offset = "0x132CE7C", VA = "0x132CE7C")]
		public void setDeviceId(int deviceId)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x132CEB4", Offset = "0x132CEB4", VA = "0x132CEB4")]
		public long getEventTime()
		{
			return default(long);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x132CEE4", Offset = "0x132CEE4", VA = "0x132CEE4")]
		public void setEventTime(long eventTime)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x132CF1C", Offset = "0x132CF1C", VA = "0x132CF1C")]
		public float[] getValues()
		{
			return null;
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x132CF4C", Offset = "0x132CF4C", VA = "0x132CF4C")]
		public void setValues(float[] values)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x132CF84", Offset = "0x132CF84", VA = "0x132CF84")]
		public float getAxis(int axis)
		{
			return default(float);
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x132D0E0", Offset = "0x132D0E0", VA = "0x132D0E0")]
		public int getType()
		{
			return default(int);
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x132D110", Offset = "0x132D110", VA = "0x132D110")]
		public void setType(int type)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x132D148", Offset = "0x132D148", VA = "0x132D148")]
		public string toString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000389")]
	public class ConnectState
	{
		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE9A")]
		public static int CONNECTED;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int DISCONNECTED;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F7EC")]
		public static int CONNECTING;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DISCONNECTING;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int ERROR;

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x132D54C", Offset = "0x132D54C", VA = "0x132D54C")]
		public ConnectState()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class ControllerAndroid
	{
		[Token(Token = "0x200074F")]
		private static class GetAndroid
		{
			[Token(Token = "0x4002CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static AndroidJavaClass usbClass;

			[Token(Token = "0x4002CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F804")]
			public static AndroidJavaObject usbContext;

			[Token(Token = "0x6002C2F")]
			[Address(RVA = "0x1532640", Offset = "0x1532640", VA = "0x1532640")]
			static GetAndroid()
			{
			}
		}

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isPause;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAEA2")]
		private static int[] keyAction;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int framecount;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F7F4")]
		private static TimeSpan ts1;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TimeSpan ts2;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isquated;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isQuat;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAEAA")]
		private static int checkQuatConnSeconds;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int disconnectQuatCount;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F7FC")]
		private static int[] deviceConnCall;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] isDeviceConnTmp;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TimeSpan powerRefreshTime;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cachePower;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAEB2")]
		private static int[] noloCachePower;

		[Token(Token = "0x170001D9")]
		protected static AndroidJavaClass GetAndroidClass
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x132D670", Offset = "0x132D670", VA = "0x132D670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		protected static AndroidJavaObject GetAndroidContext
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x132D758", Offset = "0x132D758", VA = "0x132D758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x132D840", Offset = "0x132D840", VA = "0x132D840")]
		public static void onStart()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x132DA4C", Offset = "0x132DA4C", VA = "0x132DA4C")]
		public static void onResume()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x132DC0C", Offset = "0x132DC0C", VA = "0x132DC0C")]
		public static void onPause()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x132DFA4", Offset = "0x132DFA4", VA = "0x132DFA4")]
		public static void onStop()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x132E164", Offset = "0x132E164", VA = "0x132E164")]
		public static int[] getQuatKeyAction(int deviceId)
		{
			return null;
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x132E324", Offset = "0x132E324", VA = "0x132E324")]
		public static int[] getKeyAction(int deviceId)
		{
			return null;
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x132A254", Offset = "0x132A254", VA = "0x132A254")]
		public static int[] getKeyState(int type, int deviceId)
		{
			return null;
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x132F0A8", Offset = "0x132F0A8", VA = "0x132F0A8")]
		public static float[] getMotion(int deviceId)
		{
			return null;
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x132F330", Offset = "0x132F330", VA = "0x132F330")]
		public static float[] getQuat(int deviceId)
		{
			return null;
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x132F5B8", Offset = "0x132F5B8", VA = "0x132F5B8")]
		public static int getGesture(int deviceId)
		{
			return default(int);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x132F820", Offset = "0x132F820", VA = "0x132F820")]
		public static int getBlink(int deviceId)
		{
			return default(int);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x132FA88", Offset = "0x132FA88", VA = "0x132FA88")]
		public static int[] getBrain(int deviceId)
		{
			return null;
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x132FCF0", Offset = "0x132FCF0", VA = "0x132FCF0")]
		public static void setFocus(bool focus)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x132FF44", Offset = "0x132FF44", VA = "0x132FF44")]
		public static bool isQuatConn()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x1330EC4", Offset = "0x1330EC4", VA = "0x1330EC4")]
		public static void enableDebug(bool debug)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x1331118", Offset = "0x1331118", VA = "0x1331118")]
		public static int[] getDeviceIds()
		{
			return null;
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x1331324", Offset = "0x1331324", VA = "0x1331324")]
		public static int getDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x133150C", Offset = "0x133150C", VA = "0x133150C")]
		public static float[,] getCFiveDTechEvent(int deviceId = 1)
		{
			return null;
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x13317C0", Offset = "0x13317C0", VA = "0x13317C0")]
		public static float[] getTouch(int deviceId = 1)
		{
			return null;
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x1331A48", Offset = "0x1331A48", VA = "0x1331A48")]
		public static float[] getTouchEvent(int type, int deviceId = 1)
		{
			return null;
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x1331D3C", Offset = "0x1331D3C", VA = "0x1331D3C")]
		public static void setMotionType(int motionType)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x1331F78", Offset = "0x1331F78", VA = "0x1331F78")]
		public static float[] getCSensorEventValue(int type, int deviceId)
		{
			return null;
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x133226C", Offset = "0x133226C", VA = "0x133226C")]
		public static int getCBike(int deviceId)
		{
			return default(int);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x13324D0", Offset = "0x13324D0", VA = "0x13324D0")]
		public static float[] getCPoseEvent(int type, int deviceId)
		{
			return null;
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x13327C4", Offset = "0x13327C4", VA = "0x13327C4")]
		public static bool IsNoloConn()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x1332978", Offset = "0x1332978", VA = "0x1332978")]
		private static int NoloTypeToHandType(int noloType)
		{
			return default(int);
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x13297F8", Offset = "0x13297F8", VA = "0x13297F8")]
		public static bool isDeviceConn(int noloType)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x13329C4", Offset = "0x13329C4", VA = "0x13329C4")]
		public static AndroidJavaObject getCSupportDevices()
		{
			return null;
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x1332BB0", Offset = "0x1332BB0", VA = "0x1332BB0")]
		public static AndroidJavaObject getCBikeEvent(int deviceId)
		{
			return null;
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x1332E18", Offset = "0x1332E18", VA = "0x1332E18")]
		public static AndroidJavaObject getCSensorEvent(int type, int deviceId)
		{
			return null;
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x13330E4", Offset = "0x13330E4", VA = "0x13330E4")]
		public static AndroidJavaObject getCDevices()
		{
			return null;
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x13332D0", Offset = "0x13332D0", VA = "0x13332D0")]
		public static int getHandMode()
		{
			return default(int);
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x13334B8", Offset = "0x13334B8", VA = "0x13334B8")]
		public static void connect(AndroidJavaObject bluetoothDevice)
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x13336C4", Offset = "0x13336C4", VA = "0x13336C4")]
		public static void disconnect(AndroidJavaObject bluetoothDevice)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x13338D0", Offset = "0x13338D0", VA = "0x13338D0")]
		public static void setOnDeviceListener(OnDeviceListener listener)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x1333ADC", Offset = "0x1333ADC", VA = "0x1333ADC")]
		public static int getControllerPower()
		{
			return default(int);
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x13347F8", Offset = "0x13347F8", VA = "0x13347F8")]
		public static int getNoloControllerPower(CDevice.NOLO_TYPE type)
		{
			return default(int);
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x13355C8", Offset = "0x13355C8", VA = "0x13355C8")]
		public static bool IsStickUp(float leftStickY)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x1335624", Offset = "0x1335624", VA = "0x1335624")]
		public static bool IsStickDown(float leftStickY)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x1335680", Offset = "0x1335680", VA = "0x1335680")]
		public static bool IsStickLeft(float leftStickY)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x13356DC", Offset = "0x13356DC", VA = "0x13356DC")]
		public static bool IsStickRight(float leftStickX)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x1335738", Offset = "0x1335738", VA = "0x1335738")]
		public ControllerAndroid()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class InteractionManager
	{
		[Token(Token = "0x2000750")]
		public struct ControllerConfig
		{
			[Token(Token = "0x4002CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F80C")]
			public string modelPath;

			[Token(Token = "0x4002CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] modelPosition;

			[Token(Token = "0x4002CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] modelRotation;

			[Token(Token = "0x4002CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] modelScale;

			[Token(Token = "0x4002CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAEC2")]
			public float[] batteryPosition;

			[Token(Token = "0x4002CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public float[] batteryRotation;

			[Token(Token = "0x4002CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F814")]
			public float[] batteryScale;

			[Token(Token = "0x4002CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] rayStartPosition;

			[Token(Token = "0x4002CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] rayEndPosition;

			[Token(Token = "0x4002CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string sourceString;

			[Token(Token = "0x4002CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAECA")]
			public string objPath;

			[Token(Token = "0x4002CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public string mtlPath;

			[Token(Token = "0x4002CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F81C")]
			public string pngPath;
		}

		[Token(Token = "0x2000751")]
		public enum NACTION_CONNECT_STATE
		{
			[Token(Token = "0x4002CD2")]
			DISCONNECT,
			[Token(Token = "0x4002CD3")]
			CONNECT,
			[Token(Token = "0x4002CD4")]
			CONNECTING,
			[Token(Token = "0x4002CD5")]
			DISCONNECTING
		}

		[Token(Token = "0x2000752")]
		public enum NACTION_CONTROLLER_ACTION
		{
			[Token(Token = "0x4002CD7")]
			DOWN,
			[Token(Token = "0x4002CD8")]
			UP,
			[Token(Token = "0x4002CD9")]
			MOVE
		}

		[Token(Token = "0x2000753")]
		public enum NACTION_HAND_TYPE
		{
			[Token(Token = "0x4002CDB")]
			HAND_LEFT,
			[Token(Token = "0x4002CDC")]
			HAND_RIGHT,
			[Token(Token = "0x4002CDD")]
			HEAD,
			[Token(Token = "0x4002CDE")]
			NONE
		}

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaObject managerContext;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ControllerConfig mControllerConfig;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cacheEnabled;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAEBA")]
		private static int connectLeftHand;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int connectRightHand;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F80C")]
		private static int currentHandMode;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int HAND_MODE_RIGHT;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int HAND_MODE_LEFT;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89626C", Offset = "0x89626C")]
		private static bool <IsNoloDevice>k__BackingField;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAEC2")]
		private static int[] keystate;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int[] keystateLeft;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F814")]
		private static int[] keystateRight;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8962A8", Offset = "0x8962A8")]
		private static Vector2 <TouchPadPosition>k__BackingField;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8962E4", Offset = "0x8962E4")]
		private static Vector2 <TouchPadPositionLeft>k__BackingField;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896320", Offset = "0x896320")]
		private static Vector2 <TouchPadPositionRight>k__BackingField;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAECA")]
		private static int[] powerCallCount;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int[] powerCacheValue;

		[Token(Token = "0x170001DB")]
		public static bool IsNoloDevice
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0x1537FC0", Offset = "0x1537FC0", VA = "0x1537FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC7C8", Offset = "0x8AC7C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x1537EBC", Offset = "0x1537EBC", VA = "0x1537EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC78C", Offset = "0x8AC78C")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public static Vector2 TouchPadPosition
		{
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0x1538E58", Offset = "0x1538E58", VA = "0x1538E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC804", Offset = "0x8AC804")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0x1538F14", Offset = "0x1538F14", VA = "0x1538F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC840", Offset = "0x8AC840")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public static Vector2 TouchPadPositionLeft
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x153909C", Offset = "0x153909C", VA = "0x153909C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC87C", Offset = "0x8AC87C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x1539158", Offset = "0x1539158", VA = "0x1539158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC8B8", Offset = "0x8AC8B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public static Vector2 TouchPadPositionRight
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x15392E0", Offset = "0x15392E0", VA = "0x15392E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC8F4", Offset = "0x8AC8F4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x153939C", Offset = "0x153939C", VA = "0x153939C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC930", Offset = "0x8AC930")]
			set
			{
			}
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x1534440", Offset = "0x1534440", VA = "0x1534440")]
		private static void InitManagerContext()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x1534794", Offset = "0x1534794", VA = "0x1534794")]
		public static bool IsInteractionSDKEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1534BAC", Offset = "0x1534BAC", VA = "0x1534BAC")]
		public static int GetControllerDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x1534DB4", Offset = "0x1534DB4", VA = "0x1534DB4")]
		public static bool IsSupportControllerModel()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x15350D4", Offset = "0x15350D4", VA = "0x15350D4")]
		public static ControllerConfig GetControllerConfig()
		{
			return default(ControllerConfig);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1536808", Offset = "0x1536808", VA = "0x1536808")]
		public static bool IsLeftHandMode()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x1536BA8", Offset = "0x1536BA8", VA = "0x1536BA8")]
		public static bool IsRightHandMode()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x1536F48", Offset = "0x1536F48", VA = "0x1536F48")]
		public static NACTION_HAND_TYPE GetHandTypeByHandMode()
		{
			return default(NACTION_HAND_TYPE);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x15370CC", Offset = "0x15370CC", VA = "0x15370CC")]
		public static float[] GetControllerPose(NACTION_HAND_TYPE handType = NACTION_HAND_TYPE.HAND_RIGHT)
		{
			return null;
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x1537590", Offset = "0x1537590", VA = "0x1537590")]
		public static bool IsControllerConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x15377D8", Offset = "0x15377D8", VA = "0x15377D8")]
		public static bool Is3DofControllerConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x15369D0", Offset = "0x15369D0", VA = "0x15369D0")]
		public static bool IsLeftControllerConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x1536D70", Offset = "0x1536D70", VA = "0x1536D70")]
		public static bool IsRightControllerConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x1537C30", Offset = "0x1537C30", VA = "0x1537C30")]
		public static bool IsNoloControllerConnected(int handType)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x15380BC", Offset = "0x15380BC", VA = "0x15380BC")]
		public static void OnDeviceConnectState(string connectInfo)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x1539524", Offset = "0x1539524", VA = "0x1539524")]
		public static void Reset()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x1539854", Offset = "0x1539854", VA = "0x1539854")]
		public static int[] GetKeyAction()
		{
			return null;
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x15399C8", Offset = "0x15399C8", VA = "0x15399C8")]
		public static int[] GetKeyAction(int handType)
		{
			return null;
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x1539C38", Offset = "0x1539C38", VA = "0x1539C38")]
		public static void OnCKeyEvent(string keyCodeInfo)
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x153A140", Offset = "0x153A140", VA = "0x153A140")]
		public static void OnCTouchEvent(string touchInfo)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x153AFBC", Offset = "0x153AFBC", VA = "0x153AFBC")]
		public static int GetControllerPower(NACTION_HAND_TYPE handType = NACTION_HAND_TYPE.HAND_RIGHT)
		{
			return default(int);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x1538C50", Offset = "0x1538C50", VA = "0x1538C50")]
		public static int GetControllerHandMode()
		{
			return default(int);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x153B64C", Offset = "0x153B64C", VA = "0x153B64C")]
		public InteractionManager()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class NibiruControllerPower : MonoBehaviour
	{
		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Material power1;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAEF1")]
		[SerializeField]
		private Material power1Red;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Material power2;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F83C")]
		[SerializeField]
		private Material power3;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Material power4;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Material power5;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MeshRenderer powerRenderMat;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAEF9")]
		private int powerValue;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public CDevice.NOLO_TYPE noloType;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F844")]
		private Transform m_transform;

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x153C020", Offset = "0x153C020", VA = "0x153C020")]
		private void Start()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x153C638", Offset = "0x153C638", VA = "0x153C638")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x153C668", Offset = "0x153C668", VA = "0x153C668")]
		private void RefreshPower()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x153CE90", Offset = "0x153CE90", VA = "0x153CE90")]
		public NibiruControllerPower()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class NibiruTaskApi
	{
		[Token(Token = "0x2000754")]
		public delegate void onSysSleepApiReady(bool isReady);

		[Token(Token = "0x2000755")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88631C", Offset = "0x88631C")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4002CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public AndroidJavaObject task;

			[Token(Token = "0x6002C34")]
			[Address(RVA = "0x1542660", Offset = "0x1542660", VA = "0x1542660")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6002C35")]
			[Address(RVA = "0x1548C80", Offset = "0x1548C80", VA = "0x1548C80")]
			internal void <StartNibiruTask>b__0()
			{
			}
		}

		[Token(Token = "0x2000756")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886358", Offset = "0x886358")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x4002CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F85C")]
			public DISPLAY_MODE displayMode;

			[Token(Token = "0x6002C36")]
			[Address(RVA = "0x1545328", Offset = "0x1545328", VA = "0x1545328")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x6002C37")]
			[Address(RVA = "0x1548E0C", Offset = "0x1548E0C", VA = "0x1548E0C")]
			internal void <SetDisplayMode>b__0()
			{
			}
		}

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string version;

		[Token(Token = "0x4001E5F")]
		private const string NibiruSDKClassName = "com.nibiru.lib.vr.NibiruVR";

		[Token(Token = "0x4001E60")]
		private const string ServiceClassName = "com.nibiru.service.NibiruService";

		[Token(Token = "0x4001E61")]
		private const int DeviceID = 1;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected static AndroidJavaObject androidActivity;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F84C")]
		protected static AndroidJavaClass nibiruSDKClass;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject nibiruOsServiceObject;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NvrOverrideSettings.onSelectionResult selectionCallback;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NvrOverrideSettings.onPowerChange powerChangeListener;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF09")]
		public static NibiruPowerListener nibiruPowerListener;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static NvrOverrideSettings.onServerApiReady serverApiReady;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F854")]
		public static IServerApiReadyListener serverApiReadyListener;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NvrOverrideSettings.onDeviceInfoCallback mOnDeviceInfoCallback;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static onSysSleepApiReady sysSleepApiReady;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ISysSleepApiReadyListener sysSleepApiReadyListener;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF11")]
		public static NvrOverrideSettings.onDeviceConnectState deviceConnectState;

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x153D57C", Offset = "0x153D57C", VA = "0x153D57C")]
		public static void setSelectionCallback(NvrOverrideSettings.onSelectionResult callback)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x153D66C", Offset = "0x153D66C", VA = "0x153D66C")]
		public static void addOnPowerChangeListener(NvrOverrideSettings.onPowerChange listener)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x153D974", Offset = "0x153D974", VA = "0x153D974")]
		public static void removeOnPowerChangeListener(NvrOverrideSettings.onPowerChange listener)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x153DC4C", Offset = "0x153DC4C", VA = "0x153DC4C")]
		public static void addOnServerApiReadyCallback(NvrOverrideSettings.onServerApiReady callback)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x153DD80", Offset = "0x153DD80", VA = "0x153DD80")]
		public static void removeOnServerApiReadyCallback(NvrOverrideSettings.onServerApiReady callback)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x153DE70", Offset = "0x153DE70", VA = "0x153DE70")]
		public static void addOnDeviceInfoCallback(NvrOverrideSettings.onDeviceInfoCallback callback)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x153DFC0", Offset = "0x153DFC0", VA = "0x153DFC0")]
		public static void removeOnDeviceInfoCallback(NvrOverrideSettings.onDeviceInfoCallback callback)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x153E110", Offset = "0x153E110", VA = "0x153E110")]
		public static void addOnSysSleepApiReadyCallback(onSysSleepApiReady callback)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x153E200", Offset = "0x153E200", VA = "0x153E200")]
		public static void removeOnSysSleepApiReadyCallback(onSysSleepApiReady callback)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x153E2F0", Offset = "0x153E2F0", VA = "0x153E2F0")]
		public static void setOnDeviceListener(NvrOverrideSettings.onDeviceConnectState listener)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x153E58C", Offset = "0x153E58C", VA = "0x153E58C")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x153F474", Offset = "0x153F474", VA = "0x153F474")]
		public static bool LaunchAppByPkgName(string pkgName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x153F7E8", Offset = "0x153F7E8", VA = "0x153F7E8")]
		public static string GetDeviceId()
		{
			return null;
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x153FAFC", Offset = "0x153FAFC", VA = "0x153FAFC")]
		public static string GetMacAddress()
		{
			return null;
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x153FE10", Offset = "0x153FE10", VA = "0x153FE10")]
		public static int GetBluetoothStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x1540110", Offset = "0x1540110", VA = "0x1540110")]
		public static int GetNetworkStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x1540410", Offset = "0x1540410", VA = "0x1540410")]
		public static void Destroy()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x15404F0", Offset = "0x15404F0", VA = "0x15404F0")]
		public static void OpenDeviceDriver()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x1540A68", Offset = "0x1540A68", VA = "0x1540A68")]
		public static void OpenVideoPlayer(string path, int loop = 1, int decode = 0, int mode = 0, int type = 0)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x1540FC0", Offset = "0x1540FC0", VA = "0x1540FC0")]
		public static void PauseVideoPlayer()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x15410F0", Offset = "0x15410F0", VA = "0x15410F0")]
		public static void ResumeVideoPlayer()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x1541220", Offset = "0x1541220", VA = "0x1541220")]
		public static void CloseVideoPlayer()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x1541350", Offset = "0x1541350", VA = "0x1541350")]
		public static void VideoPlayerSeekto(long time)
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x1541658", Offset = "0x1541658", VA = "0x1541658")]
		public static void VideoPlayerShowORHideController(string state)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x15417C0", Offset = "0x15417C0", VA = "0x15417C0")]
		public static void OpenFileExplorer(string path)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x15418EC", Offset = "0x15418EC", VA = "0x15418EC")]
		public static void OpenFileExplorer(int type)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x1541A18", Offset = "0x1541A18", VA = "0x1541A18")]
		public static void OpenImageGallery(string path, int type = 0)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x1541B7C", Offset = "0x1541B7C", VA = "0x1541B7C")]
		public static void OpenSettingsWifi()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x1541CAC", Offset = "0x1541CAC", VA = "0x1541CAC")]
		public static void OpenSettingsBluetooth()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x1541DDC", Offset = "0x1541DDC", VA = "0x1541DDC")]
		public static void OpenSettingsSystem()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x1541F0C", Offset = "0x1541F0C", VA = "0x1541F0C")]
		public static void OpenSettingsGeneral()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x154203C", Offset = "0x154203C", VA = "0x154203C")]
		public static void OpenSettingsMain()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x154216C", Offset = "0x154216C", VA = "0x154216C")]
		public static void OpenBrowerExplorer(string url, string actionBarState = "false")
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x15422D0", Offset = "0x15422D0", VA = "0x15422D0")]
		public static void GetFilePath(string basePath)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x1540778", Offset = "0x1540778", VA = "0x1540778")]
		public static void StartNibiruTask(AndroidJavaObject task)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x15405E4", Offset = "0x15405E4", VA = "0x15405E4")]
		public static AndroidJavaObject GetNibiruTask(TASK_ACTION action)
		{
			return null;
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x15423FC", Offset = "0x15423FC", VA = "0x15423FC")]
		public static AndroidJavaObject GetNibiruSelectionTask(SELECTION_TASK_ACTION action)
		{
			return null;
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x1540CB0", Offset = "0x1540CB0", VA = "0x1540CB0")]
		public static void AddNibiruTaskParameter(AndroidJavaObject task, string key, string value)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x1540E20", Offset = "0x1540E20", VA = "0x1540E20")]
		public static void AddNibiruTaskParameter(AndroidJavaObject task, string key, int value)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x15414B8", Offset = "0x15414B8", VA = "0x15414B8")]
		public static void AddNibiruTaskParameter(AndroidJavaObject task, string key, long value)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x1542C50", Offset = "0x1542C50", VA = "0x1542C50")]
		public static string GetResultValueFromSelectionTask(AndroidJavaObject selectionTask)
		{
			return null;
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x1542EC0", Offset = "0x1542EC0", VA = "0x1542EC0")]
		public static int GetResultCodeFromSelectionTask(AndroidJavaObject selectionTask)
		{
			return default(int);
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x1542D48", Offset = "0x1542D48", VA = "0x1542D48")]
		public static string GetResultPathFromSelectionTask(AndroidJavaObject selectionTask)
		{
			return null;
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x1542FD8", Offset = "0x1542FD8", VA = "0x1542FD8")]
		public static string GetChannelCode()
		{
			return null;
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x1543394", Offset = "0x1543394", VA = "0x1543394")]
		public static string GetModel()
		{
			return null;
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x1543750", Offset = "0x1543750", VA = "0x1543750")]
		public static string GetOSVersion()
		{
			return null;
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x1543B0C", Offset = "0x1543B0C", VA = "0x1543B0C")]
		public static int GetOSVersionCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x1543EB4", Offset = "0x1543EB4", VA = "0x1543EB4")]
		public static string GetServiceVersionCode()
		{
			return null;
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x1544270", Offset = "0x1544270", VA = "0x1544270")]
		public static string GetVendorSWVersion()
		{
			return null;
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x154462C", Offset = "0x154462C", VA = "0x154462C")]
		public static int GetBrightnessValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x15449CC", Offset = "0x15449CC", VA = "0x15449CC")]
		public static void SetBrightnessValue(int value)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x1544C8C", Offset = "0x1544C8C", VA = "0x1544C8C")]
		public static DISPLAY_MODE GetDisplayMode()
		{
			return default(DISPLAY_MODE);
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x1544FE0", Offset = "0x1544FE0", VA = "0x1544FE0")]
		public static void SetDisplayMode(DISPLAY_MODE displayMode)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x1545358", Offset = "0x1545358", VA = "0x1545358")]
		public static int GetSysSleepTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x154565C", Offset = "0x154565C", VA = "0x154565C")]
		public static ThemeApiData GetCurrentTheme()
		{
			return null;
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x1545AB4", Offset = "0x1545AB4", VA = "0x1545AB4")]
		public static List<ThemeApiData> GetThemeList()
		{
			return null;
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x1532CC8", Offset = "0x1532CC8", VA = "0x1532CC8")]
		public static string GetCurrentTimezone()
		{
			return null;
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x15332F8", Offset = "0x15332F8", VA = "0x15332F8")]
		public static List<string> GetLanguageList()
		{
			return null;
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x1532FE0", Offset = "0x1532FE0", VA = "0x1532FE0")]
		public static string GetCurrentLanguage()
		{
			return null;
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x1533798", Offset = "0x1533798", VA = "0x1533798")]
		public static string GetVRVersion()
		{
			return null;
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x1533AB0", Offset = "0x1533AB0", VA = "0x1533AB0")]
		public static string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x1546088", Offset = "0x1546088", VA = "0x1546088")]
		public static void OpenWps()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x15462CC", Offset = "0x15462CC", VA = "0x15462CC")]
		public static int[] GetKeyAction(int deviceId = 1)
		{
			return null;
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x15463C4", Offset = "0x15463C4", VA = "0x15463C4")]
		public static List<string> getCSupportDevices()
		{
			return null;
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x1546704", Offset = "0x1546704", VA = "0x1546704")]
		public static CBikeEvent GetCBikeEvent(int deviceId = 1)
		{
			return null;
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x1546990", Offset = "0x1546990", VA = "0x1546990")]
		public static CSensorEvent GetCSensorEvent(int type, int deviceId = 1)
		{
			return null;
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x1546C88", Offset = "0x1546C88", VA = "0x1546C88")]
		public static void Connect(AndroidJavaObject bluetoothDevice)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x1546D78", Offset = "0x1546D78", VA = "0x1546D78")]
		public static void Disconnect(AndroidJavaObject bluetoothDevice)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x1546E68", Offset = "0x1546E68", VA = "0x1546E68")]
		public static List<CDevice> GetCDevices()
		{
			return null;
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x1547678", Offset = "0x1547678", VA = "0x1547678")]
		public static int GetHandMode()
		{
			return default(int);
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x1547760", Offset = "0x1547760", VA = "0x1547760")]
		public static float[] GetMotion(int deviceId = 1)
		{
			return null;
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x1547858", Offset = "0x1547858", VA = "0x1547858")]
		public static float[] GetQuat(int deviceId = 1)
		{
			return null;
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x1547950", Offset = "0x1547950", VA = "0x1547950")]
		public static int[] GetBrain(int deviceId = 1)
		{
			return null;
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x1547A48", Offset = "0x1547A48", VA = "0x1547A48")]
		public static int GetBlink(int deviceId = 1)
		{
			return default(int);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x1547B40", Offset = "0x1547B40", VA = "0x1547B40")]
		public static int GetGesture(int deviceId = 1)
		{
			return default(int);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x1547C38", Offset = "0x1547C38", VA = "0x1547C38")]
		public static float[] GetTouch(int deviceId = 1)
		{
			return null;
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x1547D30", Offset = "0x1547D30", VA = "0x1547D30")]
		public static int[] GetDeviceIds()
		{
			return null;
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x1547E18", Offset = "0x1547E18", VA = "0x1547E18")]
		public static bool IsQuatConn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x1547F14", Offset = "0x1547F14", VA = "0x1547F14")]
		public static int GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x1547FFC", Offset = "0x1547FFC", VA = "0x1547FFC")]
		public static void SetMotionType(int motionType)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x153E950", Offset = "0x153E950", VA = "0x153E950")]
		protected static void ConnectToActivity()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x153EFD4", Offset = "0x153EFD4", VA = "0x153EFD4")]
		public static AndroidJavaClass GetClass(string className)
		{
			return null;
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x1542790", Offset = "0x1542790", VA = "0x1542790")]
		public static AndroidJavaObject Create(string className, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x15480EC", Offset = "0x15480EC", VA = "0x15480EC")]
		public static bool CallStaticMethod(AndroidJavaObject jo, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x1548604", Offset = "0x1548604", VA = "0x1548604")]
		public static bool CallObjectMethod(AndroidJavaObject jo, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4B")]
		public static bool CallStaticMethod<T>(ref T result, AndroidJavaObject jo, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x1542690", Offset = "0x1542690", VA = "0x1542690")]
		public static void RunOnUIThread(AndroidJavaObject activityObj, AndroidJavaRunnable r)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x1548B1C", Offset = "0x1548B1C", VA = "0x1548B1C")]
		public NibiruTaskApi()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class NibiruSelectionCallback : AndroidJavaProxy
	{
		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x153D240", Offset = "0x153D240", VA = "0x153D240")]
		public NibiruSelectionCallback()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x153D33C", Offset = "0x153D33C", VA = "0x153D33C")]
		public void onSelectionResult(AndroidJavaObject task)
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class NibiruPowerListener : AndroidJavaProxy
	{
		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x153CEC0", Offset = "0x153CEC0", VA = "0x153CEC0")]
		public NibiruPowerListener()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x153CFBC", Offset = "0x153CFBC", VA = "0x153CFBC")]
		public void onPowerChanged(double power)
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class IServerApiReadyListener : AndroidJavaProxy
	{
		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x15327E0", Offset = "0x15327E0", VA = "0x15327E0")]
		public IServerApiReadyListener()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x15328DC", Offset = "0x15328DC", VA = "0x15328DC")]
		public void onServerApiReady(bool isReady)
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class ISysSleepApiReadyListener : AndroidJavaProxy
	{
		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x1533DC8", Offset = "0x1533DC8", VA = "0x1533DC8")]
		public ISysSleepApiReadyListener()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x1533EC4", Offset = "0x1533EC4", VA = "0x1533EC4")]
		public void onSysSleepApiReady(bool isReady)
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class OnDeviceListener : AndroidJavaProxy
	{
		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x153E490", Offset = "0x153E490", VA = "0x153E490")]
		public OnDeviceListener()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x154E034", Offset = "0x154E034", VA = "0x154E034")]
		public void onDeviceConnectState(int state, AndroidJavaObject device)
		{
		}
	}
	[Token(Token = "0x2000393")]
	public enum TASK_ACTION
	{
		[Token(Token = "0x4001E6F")]
		VIDEO_PLAY = 101,
		[Token(Token = "0x4001E70")]
		OPEN_FILE,
		[Token(Token = "0x4001E71")]
		SHOW_IMAGE,
		[Token(Token = "0x4001E72")]
		SETTINGS,
		[Token(Token = "0x4001E73")]
		EXPLORER,
		[Token(Token = "0x4001E74")]
		DEVICE_DRIVER
	}
	[Token(Token = "0x2000394")]
	public enum SELECTION_TASK_ACTION
	{
		[Token(Token = "0x4001E76")]
		FILE = 1001
	}
	[Token(Token = "0x2000395")]
	public enum START_METHOD
	{
		[Token(Token = "0x4001E78")]
		UNKNOWN,
		[Token(Token = "0x4001E79")]
		ACTIVITY,
		[Token(Token = "0x4001E7A")]
		ACTIVITY_RESULT,
		[Token(Token = "0x4001E7B")]
		BROADCAST
	}
	[Token(Token = "0x2000396")]
	public enum SELECTION_RESULT
	{
		[Token(Token = "0x4001E7D")]
		UNKNOWN,
		[Token(Token = "0x4001E7E")]
		OK,
		[Token(Token = "0x4001E7F")]
		CANCEL,
		[Token(Token = "0x4001E80")]
		ERROR
	}
	[Token(Token = "0x2000397")]
	public class Video
	{
		[Token(Token = "0x4001E81")]
		public const string VIDEO_KEY_CONTROL = "video_play_control";

		[Token(Token = "0x4001E82")]
		public const string VIDEO_CONTROL_START = "com.nibiru.videostart";

		[Token(Token = "0x4001E83")]
		public const string VIDEO_CONTROL_PAUSE = "com.nibiru.video.pause";

		[Token(Token = "0x4001E84")]
		public const string VIDEO_CONTROL_RESUME = "com.nibiru.video.resume";

		[Token(Token = "0x4001E85")]
		public const string VIDEO_CONTROL_CLOSE = "com.nibiru.videofinish";

		[Token(Token = "0x4001E86")]
		public const string VIDEO_CONTROL_SEEKTO = "com.nibiru.video.seekto";

		[Token(Token = "0x4001E87")]
		public const string VIDEO_CONTROL_HIDE_CONTROLLER = "com.nibiru.video.hidecontroller";

		[Token(Token = "0x4001E88")]
		public const string VIDEO_KEY_PARAMETERS_TYPE = "TYPE_2DOR3D";

		[Token(Token = "0x4001E89")]
		public const int VIDEO_PARAMETERS_TYPE_2D = 0;

		[Token(Token = "0x4001E8A")]
		public const int VIDEO_PARAMETERS_TYPE_3D = 1;

		[Token(Token = "0x4001E8B")]
		public const string VIDEO_KEY_PARAMETERS_MODE = "TYPE_MODEL";

		[Token(Token = "0x4001E8C")]
		public const int VIDEO_PARAMETERS_MODE_NORMAL = 0;

		[Token(Token = "0x4001E8D")]
		public const int VIDEO_PARAMETERS_MODE_360 = 1;

		[Token(Token = "0x4001E8E")]
		public const int VIDEO_PARAMETERS_MODE_180 = 2;

		[Token(Token = "0x4001E8F")]
		public const int VIDEO_PARAMETERS_MODE_FULLDOME = 3;

		[Token(Token = "0x4001E90")]
		public const string VIDEO_KEY_PARAMETERS_DECODE = "TYPE_DECODE";

		[Token(Token = "0x4001E91")]
		public const int VIDEO_PARAMETERS_DECODE_HARDWARE = 0;

		[Token(Token = "0x4001E92")]
		public const int VIDEO_PARAMETERS_DECODE_SOFTWARE = 1;

		[Token(Token = "0x4001E93")]
		public const string VIDEO_KEY_PATH = "PATH";

		[Token(Token = "0x4001E94")]
		public const string VIDEO_KEY_LOOP = "LOOP";

		[Token(Token = "0x4001E95")]
		public const int VIDEO_KEY_LOOP_OFF = 0;

		[Token(Token = "0x4001E96")]
		public const int VIDEO_KEY_LOOP_ON = 1;

		[Token(Token = "0x4001E97")]
		public const string VIDEO_KEY_SEEKTO_TIME = "time";

		[Token(Token = "0x4001E98")]
		public const string VIDEO_KEY_CONTROLLER = "hideController";

		[Token(Token = "0x4001E99")]
		public const string VIDEO_KEY_CONTROLLER_HIDE = "true";

		[Token(Token = "0x4001E9A")]
		public const string VIDEO_KEY_CONTROLLER_SHOW = "false";

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x1553280", Offset = "0x1553280", VA = "0x1553280")]
		public Video()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class File
	{
		[Token(Token = "0x4001E9B")]
		public const string OPEN_FILE_ACTION_NAME = "com.nibiru.vrfilemanager.action.VEFILEMANAGER";

		[Token(Token = "0x4001E9C")]
		public const string OPEN_FILE_KEY_PATH = "path";

		[Token(Token = "0x4001E9D")]
		public const string OPEN_FILE_KEY_TYPE = "fileType";

		[Token(Token = "0x4001E9E")]
		public const int FILE_TYPE_VIDEO = 0;

		[Token(Token = "0x4001E9F")]
		public const int FILE_TYPE_IMAGE = 1;

		[Token(Token = "0x4001EA0")]
		public const int FILE_TYPE_APK = 2;

		[Token(Token = "0x4001EA1")]
		public const string FILE_KEY_SELECTION_RESULT = "Path";

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x1532780", Offset = "0x1532780", VA = "0x1532780")]
		public File()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class Gallery
	{
		[Token(Token = "0x4001EA2")]
		public const string SHOW_IMAGE_ACTION_NAME = "com.nibiru.action.IMAGE_SHOW";

		[Token(Token = "0x4001EA3")]
		public const string SHOW_IMAGE_KEY_PATH = "path";

		[Token(Token = "0x4001EA4")]
		public const string SHOW_IMAGE_KEY_TYPE = "type";

		[Token(Token = "0x4001EA5")]
		public const int SHOW_IMAGE_KEY_2D = 0;

		[Token(Token = "0x4001EA6")]
		public const int SHOW_IMAGE_KEY_3D = 1;

		[Token(Token = "0x4001EA7")]
		public const int SHOW_IMAGE_KEY_360 = 2;

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x15327B0", Offset = "0x15327B0", VA = "0x15327B0")]
		public Gallery()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class Setting
	{
		[Token(Token = "0x4001EA8")]
		public const string SETTINGS_KEY_TYPE = "settings_type";

		[Token(Token = "0x4001EA9")]
		public const string SETTINGS_TYPE_MAIN = "android.settings.LANGUAGE_SETTINGS";

		[Token(Token = "0x4001EAA")]
		public const string SETTINGS_TYPE_WIFI = "android.nibiru.settings.WIFI_SETTINGS";

		[Token(Token = "0x4001EAB")]
		public const string SETTINGS_TYPE_BLUETOOTH = "android.nibiru.settings.BLUE_SETTINGS";

		[Token(Token = "0x4001EAC")]
		public const string SETTINGS_TYPE_SYSTEM = "android.nibiru.settings.SYSTEM_SETTINGS";

		[Token(Token = "0x4001EAD")]
		public const string SETTINGS_TYPE_GENERAL = "android.nibiru.settings.NORMAL_SETTINGS";

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x1553118", Offset = "0x1553118", VA = "0x1553118")]
		public Setting()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class Brower
	{
		[Token(Token = "0x4001EAE")]
		public const string EXPLORER_KEY_URL = "url";

		[Token(Token = "0x4001EAF")]
		public const string EXPLORER_KEY_ACTIONBAR = "hideActionBar";

		[Token(Token = "0x4001EB0")]
		public const string EXPLORER_KEY_ACTIONBAR_HIDE = "true";

		[Token(Token = "0x4001EB1")]
		public const string EXPLORER_KEY_ACTIONBAR_SHOW = "false";

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x132B84C", Offset = "0x132B84C", VA = "0x132B84C")]
		public Brower()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class NibiruTaskInit : MonoBehaviour
	{
		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x154912C", Offset = "0x154912C", VA = "0x154912C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x15492D4", Offset = "0x15492D4", VA = "0x15492D4")]
		public void onSelectionResult(AndroidJavaObject task)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x15493C8", Offset = "0x15493C8", VA = "0x15493C8")]
		public void onServerApiReady(bool isReady)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x1549BA0", Offset = "0x1549BA0", VA = "0x1549BA0")]
		public void onSysSleepApiReady(bool isReady)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x1549D68", Offset = "0x1549D68", VA = "0x1549D68")]
		public void onDeviceConnectState(int state, CDevice device)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x1549ED0", Offset = "0x1549ED0", VA = "0x1549ED0")]
		public NibiruTaskInit()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class NibiruControllerManager
	{
		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_UP;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_DOWN;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF31")]
		public static int KEYCODE_LEFT;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_RIGHT;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F87C")]
		public static int KEYCODE_UP_LEFT;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_UP_RIGHT;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_DOWN_LEFT;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_DOWN_RIGHT;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF39")]
		public static int KEYCODE_BUTTON_Y;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_BUTTON_B;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987064")]
		public static int KEYCODE_BUTTON_X;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_A;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_L1;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_R1;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF40")]
		public static int KEYCODE_BUTTON_L2;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_BUTTON_R2;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F884")]
		public static int KEYCODE_BUTTON_THUMBL;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_THUMBR;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_START;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_SELECT;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF48")]
		public static int KEYCODE_BUTTON_HOME;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_BUTTON_VOL_DOWN;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F88C")]
		public static int KEYCODE_BUTTON_VOL_UP;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_ENTER;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_BACK;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_MEDIA_NEXT;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF50")]
		public static int KEYCODE_BUTTON_MEDIA_PREVIOUS;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_BUTTON_MEDIA_PLAY_PAUSE;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F894")]
		public static int KEYCODE_BUTTON_NIBIRU;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_CURSOR;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_SHOW_CURSOR;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_TOUCH_TOGGLE;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF58")]
		public static int KEYCODE_TOUCH_DOWNUP;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_BUTTON_1;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F89C")]
		public static int KEYCODE_BUTTON_2;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_3;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_4;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_5;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF60")]
		public static int KEYCODE_BUTTON_6;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int KEYCODE_BUTTON_7;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F8A4")]
		public static int KEYCODE_BUTTON_8;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_9;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int KEYCODE_BUTTON_10;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_RELAX;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF68")]
		public static int GESTURE_GIST;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int GESTURE_SPREAD_FINGERS;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F8AC")]
		public static int GESTURE_WAVE_TOWARD_PALM;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_WAVE_BACKWARD_PALM;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_TUCK_FINGERS;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SHOOT;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF70")]
		public static int GESTURE_MAX;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int GESTURE_UNKNOWN;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F8B4")]
		public static int GESTURE_SLIP_UP;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SLIP_DOWN;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SLIP_LEFT;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int GESTURE_SLIP_RIGHT;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF78")]
		public static int[] keystate;

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x153B92C", Offset = "0x153B92C", VA = "0x153B92C")]
		public NibiruControllerManager()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class PlayerCtrl : MonoBehaviour
	{
		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static PlayerCtrl m_instance;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F8BC")]
		private bool isCreateControllerHandler;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool debugInEditor;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool gamepadEnabled;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool controllerModelDisplay;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896500", Offset = "0x896500")]
		private Vector3 <HeadPosition>k__BackingField;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private NvrArmModel nxrArmModel;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F8C4")]
		public Transform mTransform;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quaternion controllerQuat;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NvrTrackedDevice.Nibiru_ControllerStates _prevStates;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NvrTrackedDevice.Nibiru_ControllerStates _currentStates;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF88")]
		private string Controller_Name_DEFAULT;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private string Controller_Name_XIMMERSE;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F8CC")]
		private string Controller_Name_CLEER;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NvrTrackedDevice trackedDevice;

		[Token(Token = "0x170001DF")]
		public bool GamepadEnabled
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x154EAEC", Offset = "0x154EAEC", VA = "0x154EAEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x154EB30", Offset = "0x154EB30", VA = "0x154EB30")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public static PlayerCtrl Instance
		{
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x154EB7C", Offset = "0x154EB7C", VA = "0x154EB7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public Vector3 HeadPosition
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x154EC64", Offset = "0x154EC64", VA = "0x154EC64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC96C", Offset = "0x8AC96C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x154ECA4", Offset = "0x154ECA4", VA = "0x154ECA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC9A8", Offset = "0x8AC9A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x154ED04", Offset = "0x154ED04", VA = "0x154ED04")]
		public void OnDeviceConnectState(int state, CDevice device)
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x154F06C", Offset = "0x154F06C", VA = "0x154F06C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x154F178", Offset = "0x154F178", VA = "0x154F178")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x154AB0C", Offset = "0x154AB0C", VA = "0x154AB0C")]
		public bool IsQuatConn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x154F560", Offset = "0x154F560", VA = "0x154F560")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x1550938", Offset = "0x1550938", VA = "0x1550938")]
		private bool GetButtonDown(NvrTrackedDevice.ButtonID btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x1550A7C", Offset = "0x1550A7C", VA = "0x1550A7C")]
		private bool GetButtonUp(NvrTrackedDevice.ButtonID btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x1550BD4", Offset = "0x1550BD4", VA = "0x1550BD4")]
		private void OnApplicationPause()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x1550CB8", Offset = "0x1550CB8", VA = "0x1550CB8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x1550794", Offset = "0x1550794", VA = "0x1550794")]
		public void DestroyChild(Transform _trsParent)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x1550D9C", Offset = "0x1550D9C", VA = "0x1550D9C")]
		private string GetControllerName()
		{
			return null;
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x155002C", Offset = "0x155002C", VA = "0x155002C")]
		public void CreateControllerHandler()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x1552934", Offset = "0x1552934", VA = "0x1552934")]
		public NvrLaserPointer GetControllerLaser()
		{
			return null;
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x1552C18", Offset = "0x1552C18", VA = "0x1552C18")]
		public GameObject GetControllerLaserDot()
		{
			return null;
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x1552F14", Offset = "0x1552F14", VA = "0x1552F14")]
		public void ChangeControllerDisplay(bool show)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x155101C", Offset = "0x155101C", VA = "0x155101C")]
		public void CreateControllerModel(string objName, InteractionManager.ControllerConfig mControllerConfig)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x1552F60", Offset = "0x1552F60", VA = "0x1552F60")]
		public PlayerCtrl()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class NvrArmModel : NvrBaseArmModel
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform head;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 elbowRestPosition;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF90")]
		public Vector3 wristRestPosition;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector3 controllerRestPosition;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98706C")]
		public Vector3 armExtensionOffset;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89653C", Offset = "0x89653C")]
		public float elbowBendRatio;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x896584", Offset = "0x896584")]
		public float fadeControllerOffset;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8965D0", Offset = "0x8965D0")]
		public float fadeDistanceFromHeadForward;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF97")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89661C", Offset = "0x89661C")]
		public float fadeDistanceFromHeadSide;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x896668", Offset = "0x896668")]
		public float tooltipMinDistanceFromFace;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F8D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8966BC", Offset = "0x8966BC")]
		public int tooltipMaxAngleFromCamera;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isLockedToNeck;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Vector3 neckPosition;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Vector3 elbowPosition;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF9F")]
		protected Quaternion elbowRotation;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected Vector3 wristPosition;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F8DC")]
		protected Quaternion wristRotation;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Vector3 controllerPosition;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Quaternion controllerRotation;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float preferredAlpha;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAFA7")]
		protected float tooltipAlphaValue;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected Vector3 handedMultiplier;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F8E4")]
		protected Vector3 torsoDirection;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Quaternion torsoRotation;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 DEFAULT_ELBOW_REST_POSITION;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 DEFAULT_WRIST_REST_POSITION;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAFAF")]
		public static readonly Vector3 DEFAULT_CONTROLLER_REST_POSITION;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly Vector3 DEFAULT_ARM_EXTENSION_OFFSET;

		[Token(Token = "0x4001F16")]
		public const float DEFAULT_ELBOW_BEND_RATIO = 0.6f;

		[Token(Token = "0x4001F17")]
		protected const float EXTENSION_WEIGHT = 0.4f;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly Vector3 SHOULDER_POSITION;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly Vector3 NECK_OFFSET;

		[Token(Token = "0x4001F1A")]
		protected const float DELTA_ALPHA = 4f;

		[Token(Token = "0x4001F1B")]
		protected const float MIN_EXTENSION_ANGLE = 7f;

		[Token(Token = "0x4001F1C")]
		protected const float MAX_EXTENSION_ANGLE = 60f;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NvrTrackedDevice nvrTrackedDevice;

		[Token(Token = "0x170001E2")]
		public override Vector3 ControllerPositionFromHead
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x1549F00", Offset = "0x1549F00", VA = "0x1549F00", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E3")]
		public override Quaternion ControllerRotationFromHead
		{
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x1549F40", Offset = "0x1549F40", VA = "0x1549F40", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001E4")]
		public override float PreferredAlpha
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x1549F88", Offset = "0x1549F88", VA = "0x1549F88", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E5")]
		public override float TooltipAlphaValue
		{
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x1549FB8", Offset = "0x1549FB8", VA = "0x1549FB8", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E6")]
		public Vector3 NeckPosition
		{
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x1549FE8", Offset = "0x1549FE8", VA = "0x1549FE8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E7")]
		public Vector3 ShoulderPosition
		{
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0x154A028", Offset = "0x154A028", VA = "0x154A028")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E8")]
		public Quaternion ShoulderRotation
		{
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x154A2BC", Offset = "0x154A2BC", VA = "0x154A2BC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001E9")]
		public Vector3 ElbowPosition
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x154A304", Offset = "0x154A304", VA = "0x154A304")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001EA")]
		public Quaternion ElbowRotation
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x154A344", Offset = "0x154A344", VA = "0x154A344")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001EB")]
		public Vector3 WristPosition
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x154A38C", Offset = "0x154A38C", VA = "0x154A38C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001EC")]
		public Quaternion WristRotation
		{
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0x154A3CC", Offset = "0x154A3CC", VA = "0x154A3CC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x154A414", Offset = "0x154A414", VA = "0x154A414", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x154A76C", Offset = "0x154A76C", VA = "0x154A76C", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x154A780", Offset = "0x154A780", VA = "0x154A780", Slot = "10")]
		public virtual void OnControllerInputUpdated()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x154A810", Offset = "0x154A810", VA = "0x154A810", Slot = "11")]
		protected virtual void UpdateHandedness()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x154AC84", Offset = "0x154AC84", VA = "0x154AC84", Slot = "12")]
		protected virtual void UpdateTorsoDirection(bool forceImmediate)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x154B330", Offset = "0x154B330", VA = "0x154B330", Slot = "13")]
		protected virtual void UpdateNeckPosition()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x154B4EC", Offset = "0x154B4EC", VA = "0x154B4EC", Slot = "14")]
		protected virtual void ApplyArmModel()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x154BCE0", Offset = "0x154BCE0", VA = "0x154BCE0", Slot = "15")]
		public virtual void SetUntransformedJointPositions()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x154BF54", Offset = "0x154BF54", VA = "0x154BF54", Slot = "16")]
		protected virtual float CalculateExtensionRatio(float xAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x154C094", Offset = "0x154C094", VA = "0x154C094", Slot = "17")]
		protected virtual void ApplyExtensionOffset(float extensionRatio)
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x154C2A8", Offset = "0x154C2A8", VA = "0x154C2A8", Slot = "18")]
		protected virtual Quaternion CalculateLerpRotation(Quaternion xyRotation, float extensionRatio)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x154C57C", Offset = "0x154C57C", VA = "0x154C57C", Slot = "19")]
		protected virtual void CalculateFinalJointRotations(Quaternion controllerOrientation, Quaternion xyRotation, Quaternion lerpRotation)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x154C87C", Offset = "0x154C87C", VA = "0x154C87C", Slot = "20")]
		protected virtual void ApplyRotationToJoints()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x154CC60", Offset = "0x154CC60", VA = "0x154CC60", Slot = "21")]
		protected virtual Vector3 ApplyInverseNeckModel(Vector3 headPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x154CFB4", Offset = "0x154CFB4", VA = "0x154CFB4", Slot = "22")]
		protected virtual void UpdateTransparency()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x154B680", Offset = "0x154B680", VA = "0x154B680")]
		protected void GetControllerRotation(out Quaternion rotation, out Quaternion xyRotation, out float xAngle)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x154DB7C", Offset = "0x154DB7C", VA = "0x154DB7C")]
		public NvrArmModel()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public abstract class NvrBaseArmModel : MonoBehaviour
	{
		[Token(Token = "0x170001ED")]
		public abstract Vector3 ControllerPositionFromHead
		{
			[Token(Token = "0x6001A9A")]
			get;
		}

		[Token(Token = "0x170001EE")]
		public abstract Quaternion ControllerRotationFromHead
		{
			[Token(Token = "0x6001A9B")]
			get;
		}

		[Token(Token = "0x170001EF")]
		public abstract float PreferredAlpha
		{
			[Token(Token = "0x6001A9C")]
			get;
		}

		[Token(Token = "0x170001F0")]
		public abstract float TooltipAlphaValue
		{
			[Token(Token = "0x6001A9D")]
			get;
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x154DD78", Offset = "0x154DD78", VA = "0x154DD78")]
		protected NvrBaseArmModel()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class ThemeApiData
	{
		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string themeName;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string themeSign;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAFBF")]
		private string themeIcon;

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x1545A2C", Offset = "0x1545A2C", VA = "0x1545A2C")]
		public ThemeApiData(string themeName, string themeSign, string themeIcon)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x1553148", Offset = "0x1553148", VA = "0x1553148")]
		public string getThemeName()
		{
			return null;
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x1553178", Offset = "0x1553178", VA = "0x1553178")]
		public void setThemeName(string themeName)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x15531B0", Offset = "0x15531B0", VA = "0x15531B0")]
		public string getThemeSign()
		{
			return null;
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x15531E0", Offset = "0x15531E0", VA = "0x15531E0")]
		public void setThemeSign(string themeSign)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x1553218", Offset = "0x1553218", VA = "0x1553218")]
		public string getThemeIcon()
		{
			return null;
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x1553248", Offset = "0x1553248", VA = "0x1553248")]
		public void setThemeIcon(string themeIcon)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x1549918", Offset = "0x1549918", VA = "0x1549918")]
		public string toString()
		{
			return null;
		}
	}
}
namespace Oahc
{
	[Token(Token = "0x20003A2")]
	public class ObjMaterial : MonoBehaviour
	{
		[Token(Token = "0x2000757")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886394", Offset = "0x886394")]
		private sealed class <LoadTexture>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAFC7")]
			private int <>1__state;

			[Token(Token = "0x4002CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F904")]
			public string fileName;

			[Token(Token = "0x4002CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjMaterial <>4__this;

			[Token(Token = "0x4002CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material mat;

			[Token(Token = "0x4002CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private WWW <www>5__2;

			[Token(Token = "0x170004B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C3B")]
				[Address(RVA = "0x190F648", Offset = "0x190F648", VA = "0x190F648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C3D")]
				[Address(RVA = "0x190F718", Offset = "0x190F718", VA = "0x190F718", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C38")]
			[Address(RVA = "0x190F2B0", Offset = "0x190F2B0", VA = "0x190F2B0")]
			[DebuggerHidden]
			public <LoadTexture>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002C39")]
			[Address(RVA = "0x190F328", Offset = "0x190F328", VA = "0x190F328", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0x190F33C", Offset = "0x190F33C", VA = "0x190F33C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0x190F678", Offset = "0x190F678", VA = "0x190F678", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Texture2D globalTexture;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F8FC")]
		private ArrayList materialNames;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Vector3> diffuseColors;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ArrayList diffuseTextures;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjMaterial instance;

		[Token(Token = "0x170001F1")]
		public static ObjMaterial Instance
		{
			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0x190DC98", Offset = "0x190DC98", VA = "0x190DC98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x190DF8C", Offset = "0x190DF8C", VA = "0x190DF8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x190E094", Offset = "0x190E094", VA = "0x190E094")]
		public Material[] LoadFormMtl(string mtlText, string texturePath, byte[] textureContent)
		{
			return null;
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x190F024", Offset = "0x190F024", VA = "0x190F024")]
		private float ConvertToFloat(string s)
		{
			return default(float);
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x190F1A4", Offset = "0x190F1A4", VA = "0x190F1A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AC9E4", Offset = "0x8AC9E4")]
		private IEnumerator LoadTexture(Material mat, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x190F2F8", Offset = "0x190F2F8", VA = "0x190F2F8")]
		public ObjMaterial()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class ObjMesh
	{
		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAFCF")]
		private List<Vector3> uvArrayList;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<Vector3> normalArrayList;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F90C")]
		private List<Vector3> vertexArrayList;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Vector3> faceVertexNormalUV;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2[] UVArray;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3[] NormalArray;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAFD7")]
		public Vector3[] VertexArray;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int[] TriangleArray;

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x190F748", Offset = "0x190F748", VA = "0x190F748")]
		public ObjMesh()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x190F884", Offset = "0x190F884", VA = "0x190F884")]
		public ObjMesh LoadFromObj(string objText)
		{
			return null;
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x19109E8", Offset = "0x19109E8", VA = "0x19109E8")]
		private void Combine()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x1910104", Offset = "0x1910104", VA = "0x1910104")]
		private void GetTriangleList(string[] chars)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x190FF80", Offset = "0x190FF80", VA = "0x190FF80")]
		private float ConvertToFloat(string s)
		{
			return default(float);
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x1911BD0", Offset = "0x1911BD0", VA = "0x1911BD0")]
		private int ConvertToInt(string s)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003A4")]
	public class ObjModelLoader : MonoBehaviour
	{
		[Token(Token = "0x2000758")]
		public enum FileType
		{
			[Token(Token = "0x4002CE8")]
			OBJ,
			[Token(Token = "0x4002CE9")]
			MTL,
			[Token(Token = "0x4002CEA")]
			PNG
		}

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F914")]
		private Vector3 modelScaleSize;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform parentTransform;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<FileType, byte[]> FileDict;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool loaded;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAFDF")]
		private GameObject ObjModel;

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x1911D50", Offset = "0x1911D50", VA = "0x1911D50")]
		public void LoadObjFile(string objPath, Transform parent)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x1911E4C", Offset = "0x1911E4C", VA = "0x1911E4C")]
		public void LoadObjFile(string objPath, Vector3 scaleSize, Transform parent)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x1911F74", Offset = "0x1911F74", VA = "0x1911F74")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x19128FC", Offset = "0x19128FC", VA = "0x19128FC")]
		public GameObject GetObjModel()
		{
			return null;
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x191292C", Offset = "0x191292C", VA = "0x191292C")]
		private void ReadFiles(object objPath)
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x1912ADC", Offset = "0x1912ADC", VA = "0x1912ADC")]
		private void ReadFileCore(FileType fileType, string filePath)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x1912098", Offset = "0x1912098", VA = "0x1912098")]
		private void CreateModelObject(string filePath, string objName)
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x1912E44", Offset = "0x1912E44", VA = "0x1912E44")]
		public void LoadFormFile(string objName, string modelFilePath, string texturePath)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x19134F4", Offset = "0x19134F4", VA = "0x19134F4")]
		public ObjModelLoader()
		{
		}
	}
}
namespace Nvr.Internal
{
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87CBDC", Offset = "0x87CBDC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87CBDC", Offset = "0x87CBDC")]
	public class NvrStereoController : MonoBehaviour
	{
		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8863D0", Offset = "0x8863D0")]
		private sealed class <EndOfFrame>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAFEE")]
			private int <>1__state;

			[Token(Token = "0x4002CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F924")]
			public NvrStereoController <>4__this;

			[Token(Token = "0x170004B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C41")]
				[Address(RVA = "0x1F1ACDC", Offset = "0x1F1ACDC", VA = "0x1F1ACDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C43")]
				[Address(RVA = "0x1F1ADAC", Offset = "0x1F1ADAC", VA = "0x1F1ADAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C3E")]
			[Address(RVA = "0x1F1A850", Offset = "0x1F1A850", VA = "0x1F1A850")]
			[DebuggerHidden]
			public <EndOfFrame>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0x1F1AAD4", Offset = "0x1F1AAD4", VA = "0x1F1AAD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C40")]
			[Address(RVA = "0x1F1AAE8", Offset = "0x1F1AAE8", VA = "0x1F1AAE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C42")]
			[Address(RVA = "0x1F1AD0C", Offset = "0x1F1AD0C", VA = "0x1F1AD0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool renderedStereo;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAFE7")]
		private NvrEye[] eyes;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private NvrHead mHead;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896704", Offset = "0x896704")]
		private Camera <cam>k__BackingField;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CameraClearFlags m_MonoCameraClearFlags;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color m_MonoCameraBackgroundColor;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_MonoCameraCullingMask;

		[Token(Token = "0x170001F2")]
		public NvrEye[] Eyes
		{
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x1F17CAC", Offset = "0x1F17CAC", VA = "0x1F17CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public NvrHead Head
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x1F17F88", Offset = "0x1F17F88", VA = "0x1F17F88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public Camera cam
		{
			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x1F18140", Offset = "0x1F18140", VA = "0x1F18140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACA94", Offset = "0x8ACA94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0x1F18170", Offset = "0x1F18170", VA = "0x1F18170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACAD0", Offset = "0x8ACAD0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x1F181A8", Offset = "0x1F181A8", VA = "0x1F181A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x1F18A0C", Offset = "0x1F18A0C", VA = "0x1F18A0C")]
		public void OnProfileChanged()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x1F1872C", Offset = "0x1F1872C", VA = "0x1F1872C")]
		public void AddStereoRig()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x1F18D1C", Offset = "0x1F18D1C", VA = "0x1F18D1C")]
		private void CreateEye(NvrViewer.Eye eye)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x1F19624", Offset = "0x1F19624", VA = "0x1F19624")]
		private void OnPreRenderListener(int cacheTextureId, NvrViewer.Eye eyeType)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x1F198A4", Offset = "0x1F198A4", VA = "0x1F198A4")]
		private void OnPostRenderListener(int cacheTextureId, NvrViewer.Eye eyeType)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x1F1A2AC", Offset = "0x1F1A2AC", VA = "0x1F1A2AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x1F1A334", Offset = "0x1F1A334", VA = "0x1F1A334")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x1F1A3BC", Offset = "0x1F1A3BC", VA = "0x1F1A3BC")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x1F1A794", Offset = "0x1F1A794", VA = "0x1F1A794")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ACB0C", Offset = "0x8ACB0C")]
		private IEnumerator EndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x1F1A60C", Offset = "0x1F1A60C", VA = "0x1F1A60C")]
		private void BlackOutMonoCamera()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x1F1A898", Offset = "0x1F1A898", VA = "0x1F1A898")]
		private void RestoreMonoCamera()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x1F1A978", Offset = "0x1F1A978", VA = "0x1F1A978")]
		public NvrStereoController()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x1F1A9A8", Offset = "0x1F1A9A8", VA = "0x1F1A9A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACBBC", Offset = "0x8ACBBC")]
		private bool <get_Eyes>b__4_0(NvrEye eye)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A6")]
	public class Loom : MonoBehaviour
	{
		[Token(Token = "0x200075A")]
		public struct NoDelayedQueueItem
		{
			[Token(Token = "0x4002CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<object> action;

			[Token(Token = "0x4002CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAFEE")]
			public object param;
		}

		[Token(Token = "0x200075B")]
		public struct DelayedQueueItem
		{
			[Token(Token = "0x4002CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public float time;

			[Token(Token = "0x4002CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F924")]
			public Action<object> action;

			[Token(Token = "0x4002CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public object param;
		}

		[Serializable]
		[Token(Token = "0x200075C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88640C", Offset = "0x88640C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<DelayedQueueItem, bool> <>9__19_0;

			[Token(Token = "0x6002C45")]
			[Address(RVA = "0x19B1EF0", Offset = "0x19B1EF0", VA = "0x19B1EF0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C46")]
			[Address(RVA = "0x19B1F20", Offset = "0x19B1F20", VA = "0x19B1F20")]
			internal bool <Update>b__19_0(DelayedQueueItem d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int maxThreads;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int numThreads;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Loom _current;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAFF6")]
		private static bool initialized;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private List<NoDelayedQueueItem> _actions;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F92C")]
		private List<DelayedQueueItem> _delayed;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<DelayedQueueItem> _currentDelayed;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<NoDelayedQueueItem> _currentActions;

		[Token(Token = "0x170001F5")]
		public static Loom Current
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x19AFA8C", Offset = "0x19AFA8C", VA = "0x19AFA8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x19AFE38", Offset = "0x19AFE38", VA = "0x19AFE38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x19AFB84", Offset = "0x19AFB84", VA = "0x19AFB84")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x19AFF40", Offset = "0x19AFF40", VA = "0x19AFF40")]
		public static void QueueOnMainThread(Action<object> taction, object tparam)
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x19B0044", Offset = "0x19B0044", VA = "0x19B0044")]
		public static void QueueOnMainThread(Action<object> taction, object tparam, float time)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x19B0824", Offset = "0x19B0824", VA = "0x19B0824")]
		public static Thread RunAsync(Action a)
		{
			return null;
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x19B0AB8", Offset = "0x19B0AB8", VA = "0x19B0AB8")]
		private static void RunAction(object action)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x19B0E94", Offset = "0x19B0E94", VA = "0x19B0E94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x19B10A4", Offset = "0x19B10A4", VA = "0x19B10A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x19B1C78", Offset = "0x19B1C78", VA = "0x19B1C78")]
		public Loom()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public enum RenderEventType
	{
		[Token(Token = "0x4001F43")]
		InitRenderThread,
		[Token(Token = "0x4001F44")]
		Pause,
		[Token(Token = "0x4001F45")]
		Resume,
		[Token(Token = "0x4001F46")]
		LeftEyeEndFrame,
		[Token(Token = "0x4001F47")]
		RightEyeEndFrame,
		[Token(Token = "0x4001F48")]
		TimeWarp,
		[Token(Token = "0x4001F49")]
		PlatformUI,
		[Token(Token = "0x4001F4A")]
		PlatformUIConfirmQuit,
		[Token(Token = "0x4001F4B")]
		ResetVrModeParms,
		[Token(Token = "0x4001F4C")]
		PlatformUITutorial,
		[Token(Token = "0x4001F4D")]
		ShutdownRenderThread,
		[Token(Token = "0x4001F4E")]
		LeftEyeBeginFrame,
		[Token(Token = "0x4001F4F")]
		RightEyeBeginFrame,
		[Token(Token = "0x4001F50")]
		PrepareFrame
	}
	[Token(Token = "0x20003A8")]
	public static class NvrPluginEvent
	{
		[Token(Token = "0x4001F51")]
		private const uint IS_DATA_FLAG = 2147483648u;

		[Token(Token = "0x4001F52")]
		private const uint DATA_POS_MASK = 1073741824u;

		[Token(Token = "0x4001F53")]
		private const int DATA_POS_SHIFT = 30;

		[Token(Token = "0x4001F54")]
		private const uint EVENT_TYPE_MASK = 1040187392u;

		[Token(Token = "0x4001F55")]
		private const int EVENT_TYPE_SHIFT = 25;

		[Token(Token = "0x4001F56")]
		private const uint PAYLOAD_MASK = 65535u;

		[Token(Token = "0x4001F57")]
		private const int PAYLOAD_SHIFT = 16;

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x1F0C4D8", Offset = "0x1F0C4D8", VA = "0x1F0C4D8")]
		public static void Issue(RenderEventType eventType)
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x1F0C54C", Offset = "0x1F0C54C", VA = "0x1F0C54C")]
		public static void IssueWithData(RenderEventType eventType, int eventData)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x1F0C524", Offset = "0x1F0C524", VA = "0x1F0C524")]
		private static int EncodeType(int eventType)
		{
			return default(int);
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x1F0C610", Offset = "0x1F0C610", VA = "0x1F0C610")]
		private static int EncodeData(int eventId, int eventData, int pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x1F0C6D8", Offset = "0x1F0C6D8", VA = "0x1F0C6D8")]
		private static int DecodeData(int eventData)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003A9")]
	public static class NvrOverrideSettings
	{
		[Token(Token = "0x200075D")]
		public enum PerfLevel
		{
			[Token(Token = "0x4002CF6")]
			NoOverride = -1,
			[Token(Token = "0x4002CF7")]
			System,
			[Token(Token = "0x4002CF8")]
			Minimum,
			[Token(Token = "0x4002CF9")]
			Medium,
			[Token(Token = "0x4002CFA")]
			Maximum
		}

		[Token(Token = "0x200075E")]
		public delegate void OnProfileChangedCallback();

		[Token(Token = "0x200075F")]
		public delegate void OnEyeCameraInitCallback(NvrViewer.Eye eye, GameObject goParent);

		[Token(Token = "0x2000760")]
		public delegate void OnGazeCallback(GameObject gazeObject);

		[Token(Token = "0x2000761")]
		public delegate void OnApplicationQuit();

		[Token(Token = "0x2000762")]
		public delegate void onSelectionResult(AndroidJavaObject task);

		[Token(Token = "0x2000763")]
		public delegate void onPowerChange(double task);

		[Token(Token = "0x2000764")]
		public delegate void onServerApiReady(bool isReady);

		[Token(Token = "0x2000765")]
		public delegate void onDeviceConnectState(int state, CDevice device);

		[Token(Token = "0x2000766")]
		public delegate void onDeviceInfoCallback(string currentTimezone, string currentLanguage, List<string> languageList, string vrVersion, string deviceName);

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnProfileChangedCallback OnProfileChangedEvent;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnEyeCameraInitCallback OnEyeCameraInitEvent;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OnGazeCallback OnGazeEvent;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB01E")]
		public static OnApplicationQuit OnApplicationQuitEvent;
	}
	[Token(Token = "0x20003AA")]
	public class AndroidDevice : NvrDevice
	{
		[Token(Token = "0x2000767")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886448", Offset = "0x886448")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB02E")]
			public AndroidDevice <>4__this;

			[Token(Token = "0x4002CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public bool keep;

			[Token(Token = "0x6002C6B")]
			[Address(RVA = "0x19A0E94", Offset = "0x19A0E94", VA = "0x19A0E94")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0x19A2154", Offset = "0x19A2154", VA = "0x19A2154")]
			internal void <SetIsKeepScreenOn>b__0()
			{
			}
		}

		[Token(Token = "0x4001F5C")]
		private const string ActivityListenerClass = "com.nibiru.lib.xr.unity.NibiruVRUnityService";

		[Token(Token = "0x4001F5D")]
		private const string NibiruVRClass = "com.nibiru.lib.vr.NibiruVR";

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject activityListener;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject nibiruVR;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AndroidJavaObject nibiruVRService;

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x199C4DC", Offset = "0x199C4DC", VA = "0x199C4DC", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x199CF34", Offset = "0x199CF34", VA = "0x199CF34", Slot = "44")]
		protected override void ConnectToActivity()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x199DB28", Offset = "0x199DB28", VA = "0x199DB28", Slot = "40")]
		public override void TurnOff()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x199E108", Offset = "0x199E108", VA = "0x199E108", Slot = "41")]
		public override void Reboot()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x199E1D0", Offset = "0x199E1D0", VA = "0x199E1D0", Slot = "14")]
		public override long CreateNibiruVRService()
		{
			return default(long);
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x199FBA8", Offset = "0x199FBA8", VA = "0x199FBA8", Slot = "16")]
		public override void SetDisplayQuality(int level)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x199FCEC", Offset = "0x199FCEC", VA = "0x199FCEC", Slot = "38")]
		public override bool GazeApi(GazeTag tag, string param)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x199FEBC", Offset = "0x199FEBC", VA = "0x199FEBC", Slot = "5")]
		public override void SetVRModeEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x199FEDC", Offset = "0x199FEDC", VA = "0x199FEDC", Slot = "6")]
		public override void AndroidLog(string msg)
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x199FFF0", Offset = "0x199FFF0", VA = "0x199FFF0", Slot = "7")]
		public override void SetSystemParameters(string key, string value)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x19A0178", Offset = "0x19A0178", VA = "0x19A0178", Slot = "25")]
		public override void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x19A0744", Offset = "0x19A0744", VA = "0x19A0744", Slot = "29")]
		public override void AppQuit()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x19A0834", Offset = "0x19A0834", VA = "0x19A0834", Slot = "28")]
		public override void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x19A0A70", Offset = "0x19A0A70", VA = "0x19A0A70")]
		private void runOnUiThread()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x19A0D0C", Offset = "0x19A0D0C", VA = "0x19A0D0C", Slot = "8")]
		public override void SetIsKeepScreenOn(bool keep)
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x19A0EC4", Offset = "0x19A0EC4", VA = "0x19A0EC4")]
		private void SetScreenOn(bool enable)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x199C530", Offset = "0x199C530", VA = "0x199C530")]
		private void SetApplicationState()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x19A1174", Offset = "0x19A1174", VA = "0x19A1174", Slot = "32")]
		public override void ShowVideoPlayer(string path, int type2D3D, int mode, int decode)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x19A13C8", Offset = "0x19A13C8", VA = "0x19A13C8")]
		private void InitNibiruVRService()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x19A14C4", Offset = "0x19A14C4", VA = "0x19A14C4", Slot = "34")]
		public override void SetIpd(float ipd)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x19A1BD8", Offset = "0x19A1BD8", VA = "0x19A1BD8", Slot = "31")]
		public override string GetStoragePath()
		{
			return null;
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x19A1DA4", Offset = "0x19A1DA4", VA = "0x19A1DA4", Slot = "15")]
		public override void SetCameraNearFar(float near, float far)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x19A1F4C", Offset = "0x19A1F4C", VA = "0x19A1F4C")]
		public AndroidDevice()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x19A2098", Offset = "0x19A2098", VA = "0x19A2098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACBF8", Offset = "0x8ACBF8")]
		private void <AppQuit>b__16_0()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public abstract class BaseAndroidDevice : BaseVRDevice
	{
		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F964")]
		protected AndroidJavaObject androidActivity;

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x19A21B8", Offset = "0x19A21B8", VA = "0x19A21B8", Slot = "39")]
		public override void Destroy()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x199D100", Offset = "0x199D100", VA = "0x199D100", Slot = "44")]
		protected virtual void ConnectToActivity()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x19A23C8", Offset = "0x19A23C8", VA = "0x19A23C8")]
		public static AndroidJavaClass GetClass(string className)
		{
			return null;
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x199D668", Offset = "0x199D668", VA = "0x199D668")]
		public static AndroidJavaObject Create(string className, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x199DBF0", Offset = "0x199DBF0", VA = "0x199DBF0")]
		public static bool CallStaticMethod(AndroidJavaObject jo, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x19A16C0", Offset = "0x19A16C0", VA = "0x19A16C0")]
		public static bool CallObjectMethod(AndroidJavaObject jo, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFC")]
		public static bool CallStaticMethod<T>(ref T result, AndroidJavaObject jo, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x19A0644", Offset = "0x19A0644", VA = "0x19A0644")]
		public static void RunOnUIThread(AndroidJavaObject activityObj, AndroidJavaRunnable r)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x19A1C0C", Offset = "0x19A1C0C", VA = "0x19A1C0C")]
		public static string GetAndroidStoragePath()
		{
			return null;
		}

		[Token(Token = "0x6001AFF")]
		public static bool CallObjectMethod<T>(ref T result, AndroidJavaObject jo, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x19A2868", Offset = "0x19A2868", VA = "0x19A2868")]
		protected BaseAndroidDevice()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public abstract class BaseVRDevice
	{
		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BaseVRDevice device;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896740", Offset = "0x896740")]
		private NvrProfile <Profile>k__BackingField;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long nibiruVRServiceId;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB036")]
		protected MutablePose3D headPose;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected Matrix4x4 leftEyeDistortedProjection;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F96C")]
		protected Matrix4x4 rightEyeDistortedProjection;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Matrix4x4 leftEyeUndistortedProjection;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Matrix4x4 rightEyeUndistortedProjection;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Rect leftEyeDistortedViewport;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB03E")]
		protected Rect rightEyeDistortedViewport;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected Rect leftEyeUndistortedViewport;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98707C")]
		protected Rect rightEyeUndistortedViewport;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Vector2 recommendedTextureSize;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int leftEyeOrientation;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int rightEyeOrientation;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB045")]
		public bool profileChanged;

		[Token(Token = "0x170001F6")]
		public NvrProfile Profile
		{
			[Token(Token = "0x6001B02")]
			[Address(RVA = "0x19A2B90", Offset = "0x19A2B90", VA = "0x19A2B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACC34", Offset = "0x8ACC34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B03")]
			[Address(RVA = "0x19A2BC0", Offset = "0x19A2BC0", VA = "0x19A2BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACC70", Offset = "0x8ACC70")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x19A2950", Offset = "0x19A2950", VA = "0x19A2950")]
		protected BaseVRDevice()
		{
		}

		[Token(Token = "0x6001B04")]
		public abstract void Init();

		[Token(Token = "0x6001B05")]
		public abstract void SetVRModeEnabled(bool enabled);

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x19A2BF8", Offset = "0x19A2BF8", VA = "0x19A2BF8", Slot = "6")]
		public virtual void AndroidLog(string msg)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x19A2CEC", Offset = "0x19A2CEC", VA = "0x19A2CEC", Slot = "7")]
		public virtual void SetSystemParameters(string key, string value)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x19A2D08", Offset = "0x19A2D08", VA = "0x19A2D08", Slot = "8")]
		public virtual void SetIsKeepScreenOn(bool keep)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x19A2D28", Offset = "0x19A2D28", VA = "0x19A2D28", Slot = "9")]
		public virtual bool SupportsNativeDistortionCorrection(List<string> diagnostics)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x19A2D50", Offset = "0x19A2D50", VA = "0x19A2D50", Slot = "10")]
		public virtual void SetTextureSizeNative(int w, int h)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x19A2D6C", Offset = "0x19A2D6C", VA = "0x19A2D6C", Slot = "11")]
		public virtual void SetCpuLevel(NvrOverrideSettings.PerfLevel level)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x19A2D84", Offset = "0x19A2D84", VA = "0x19A2D84", Slot = "12")]
		public virtual void SetGpuLevel(NvrOverrideSettings.PerfLevel level)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x19A2D9C", Offset = "0x19A2D9C", VA = "0x19A2D9C", Slot = "13")]
		public virtual RenderTexture CreateStereoScreen(int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x19A3DAC", Offset = "0x19A3DAC", VA = "0x19A3DAC", Slot = "14")]
		public virtual long CreateNibiruVRService()
		{
			return default(long);
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x19A3DC8", Offset = "0x19A3DC8", VA = "0x19A3DC8", Slot = "15")]
		public virtual void SetCameraNearFar(float near, float far)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x19A3DE4", Offset = "0x19A3DE4", VA = "0x19A3DE4", Slot = "16")]
		public virtual void SetDisplayQuality(int level)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x19A3DFC", Offset = "0x19A3DFC", VA = "0x19A3DFC", Slot = "17")]
		public virtual IntPtr NGetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x19A3E60", Offset = "0x19A3E60", VA = "0x19A3E60", Slot = "18")]
		public virtual void NIssuePluginEvent(int eventID)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x19A3E78", Offset = "0x19A3E78", VA = "0x19A3E78", Slot = "19")]
		public virtual int GetTimewarpViewNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x19A3E94", Offset = "0x19A3E94", VA = "0x19A3E94")]
		public Pose3D GetHeadPose()
		{
			return null;
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x19A3EC4", Offset = "0x19A3EC4", VA = "0x19A3EC4")]
		public Matrix4x4 GetProjection(NvrViewer.Eye eye, NvrViewer.Distortion distortion = NvrViewer.Distortion.Distorted)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x19A405C", Offset = "0x19A405C", VA = "0x19A405C")]
		public Rect GetViewport(NvrViewer.Eye eye, NvrViewer.Distortion distortion = NvrViewer.Distortion.Distorted)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001B17")]
		public abstract void UpdateState();

		[Token(Token = "0x6001B18")]
		public abstract void UpdateScreenData();

		[Token(Token = "0x6001B19")]
		public abstract void Recenter();

		[Token(Token = "0x6001B1A")]
		public abstract void PostRender(RenderTexture stereoScreen);

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x19A4198", Offset = "0x19A4198", VA = "0x19A4198", Slot = "24")]
		public virtual void OnPause(bool pause)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x19A41F0", Offset = "0x19A41F0", VA = "0x19A41F0", Slot = "25")]
		public virtual void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x19A4248", Offset = "0x19A4248", VA = "0x19A4248", Slot = "26")]
		public virtual void EnterVRMode()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x19A425C", Offset = "0x19A425C", VA = "0x19A425C", Slot = "27")]
		public virtual void OnFocus(bool focus)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x19A427C", Offset = "0x19A427C", VA = "0x19A427C", Slot = "28")]
		public virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x19A4290", Offset = "0x19A4290", VA = "0x19A4290", Slot = "29")]
		public virtual void AppQuit()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x19A42A4", Offset = "0x19A42A4", VA = "0x19A42A4", Slot = "30")]
		public virtual NibiruService GetNibiruService()
		{
			return null;
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x19A42C0", Offset = "0x19A42C0", VA = "0x19A42C0", Slot = "31")]
		public virtual string GetStoragePath()
		{
			return null;
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x19A42DC", Offset = "0x19A42DC", VA = "0x19A42DC", Slot = "32")]
		public virtual void ShowVideoPlayer(string path, int type2D3D, int mode, int decode)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x19A4300", Offset = "0x19A4300", VA = "0x19A4300", Slot = "33")]
		public virtual void SetTimeWarpEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x19A4320", Offset = "0x19A4320", VA = "0x19A4320", Slot = "34")]
		public virtual void SetIpd(float ipd)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x19A4338", Offset = "0x19A4338", VA = "0x19A4338", Slot = "35")]
		public virtual void NSetSystemVRMode(int flag)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x19A4350", Offset = "0x19A4350", VA = "0x19A4350", Slot = "36")]
		public virtual void NLockTracker()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x19A4364", Offset = "0x19A4364", VA = "0x19A4364", Slot = "37")]
		public virtual void NUnLockTracker()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x19A4378", Offset = "0x19A4378", VA = "0x19A4378", Slot = "38")]
		public virtual bool GazeApi(GazeTag tag, string param)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x19A2244", Offset = "0x19A2244", VA = "0x19A2244", Slot = "39")]
		public virtual void Destroy()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x19A43A4", Offset = "0x19A43A4", VA = "0x19A43A4")]
		protected void ComputeEyeFrustum(NvrViewer.Eye eyeType, float near, float far, float left, float right, float top, float bottom)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x19A4B58", Offset = "0x19A4B58", VA = "0x19A4B58")]
		public void ComputeEyesForWin(NvrViewer.Eye eyeType, float near, float far, float left, float top, float right, float bottom)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x19A562C", Offset = "0x19A562C", VA = "0x19A562C")]
		protected void ComputeEyesFromProfile(float near, float far)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x19A4780", Offset = "0x19A4780", VA = "0x19A4780")]
		public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x19A6454", Offset = "0x19A6454", VA = "0x19A6454", Slot = "40")]
		public virtual void TurnOff()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x19A6468", Offset = "0x19A6468", VA = "0x19A6468", Slot = "41")]
		public virtual void Reboot()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x19A647C", Offset = "0x19A647C", VA = "0x19A647C")]
		public static BaseVRDevice GetDevice()
		{
			return null;
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x19A66B0", Offset = "0x19A66B0", VA = "0x19A66B0", Slot = "42")]
		public virtual void SetColorspaceType(int colorSpace)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x19A66C8", Offset = "0x19A66C8", VA = "0x19A66C8", Slot = "43")]
		public virtual void SetControllerSupportMode(ControllerSupportMode csm)
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class NvrControllerHelper
	{
		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int RIGHT_HAND_MODE;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F974")]
		public static int LEFT_HAND_MODE;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89677C", Offset = "0x89677C")]
		private static GameObject <ControllerRaycastObject>k__BackingField;

		[Token(Token = "0x170001F7")]
		public static GameObject ControllerRaycastObject
		{
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0x19BD390", Offset = "0x19BD390", VA = "0x19BD390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACCE8", Offset = "0x8ACCE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0x19BD2A0", Offset = "0x19BD2A0", VA = "0x19BD2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACCAC", Offset = "0x8ACCAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x19BD478", Offset = "0x19BD478", VA = "0x19BD478")]
		public NvrControllerHelper()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class NvrControllerModel : MonoBehaviour
	{
		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NvrTrackedDevice trackedDevice;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform touchpad;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB04D")]
		private Transform menu;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Transform system;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F97C")]
		private Transform grip_left;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform grip_right;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform trigger;

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x19BD548", Offset = "0x19BD548", VA = "0x19BD548")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x19BD78C", Offset = "0x19BD78C", VA = "0x19BD78C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x19BD994", Offset = "0x19BD994", VA = "0x19BD994")]
		private void TouchPad_Down()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x19BDA38", Offset = "0x19BDA38", VA = "0x19BDA38")]
		private void TouchPad_Up()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x19BDB44", Offset = "0x19BDB44", VA = "0x19BDB44")]
		private void Menu_Down()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x19BDBE8", Offset = "0x19BDBE8", VA = "0x19BDBE8")]
		private void Menu_Up()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x19BDCF4", Offset = "0x19BDCF4", VA = "0x19BDCF4")]
		private void System_Down()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x19BDD98", Offset = "0x19BDD98", VA = "0x19BDD98")]
		private void System_Up()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x19BE13C", Offset = "0x19BE13C", VA = "0x19BE13C")]
		private void Trigger_Down()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x19BE2D8", Offset = "0x19BE2D8", VA = "0x19BE2D8")]
		private void Trigger_Up()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x19BDEA4", Offset = "0x19BDEA4", VA = "0x19BDEA4")]
		private void Grip_Down()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x19BDFC8", Offset = "0x19BDFC8", VA = "0x19BDFC8")]
		private void Grip_Up()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x19BE49C", Offset = "0x19BE49C", VA = "0x19BE49C")]
		public NvrControllerModel()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public struct PointerEventArgs
	{
		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB045")]
		public uint flags;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float distance;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F974")]
		public Transform target;
	}
	[Token(Token = "0x20003B0")]
	public delegate void PointerEventHandler(object sender, PointerEventArgs e);
	[Token(Token = "0x20003B1")]
	public class NvrLaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color color;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float thickness;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject holder;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB05D")]
		public GameObject pointer;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject losdot;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F98C")]
		private GameObject hitObject;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isActive;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool addRigidBody;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Transform previousContact;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F994")]
		private float zDistance;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform cacheTransform;

		[Token(Token = "0x14000047")]
		public event PointerEventHandler PointerIn
		{
			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0x1F0722C", Offset = "0x1F0722C", VA = "0x1F0722C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACD24", Offset = "0x8ACD24")]
			add
			{
			}
			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0x1F07378", Offset = "0x1F07378", VA = "0x1F07378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACD60", Offset = "0x8ACD60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event PointerEventHandler PointerOut
		{
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0x1F074C4", Offset = "0x1F074C4", VA = "0x1F074C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACD9C", Offset = "0x8ACD9C")]
			add
			{
			}
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0x1F07610", Offset = "0x1F07610", VA = "0x1F07610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACDD8", Offset = "0x8ACDD8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x1F0775C", Offset = "0x1F0775C", VA = "0x1F0775C")]
		public void SetHolderLocalPosition(Vector3 localPosition)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x1F07A60", Offset = "0x1F07A60", VA = "0x1F07A60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x1F083E0", Offset = "0x1F083E0", VA = "0x1F083E0", Slot = "4")]
		public virtual void OnPointerIn(PointerEventArgs e)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x1F08BBC", Offset = "0x1F08BBC", VA = "0x1F08BBC", Slot = "5")]
		public virtual void OnPointerOut(PointerEventArgs e)
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x1F08C8C", Offset = "0x1F08C8C", VA = "0x1F08C8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x1F08E38", Offset = "0x1F08E38", VA = "0x1F08E38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x1F09BF8", Offset = "0x1F09BF8", VA = "0x1F09BF8")]
		public GameObject GetLosDot()
		{
			return null;
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x1F09C28", Offset = "0x1F09C28", VA = "0x1F09C28")]
		public NvrLaserPointer()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class NvrTrackedDevice : MonoBehaviour
	{
		[Token(Token = "0x2000768")]
		public struct Nibiru_ControllerStates
		{
			[Token(Token = "0x4002CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB065")]
			public uint battery;

			[Token(Token = "0x4002CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public uint connectStatus;

			[Token(Token = "0x4002CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F994")]
			public uint buttons;

			[Token(Token = "0x4002D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint hmdButtons;

			[Token(Token = "0x4002D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint touches;

			[Token(Token = "0x4002D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 touchpadAxis;
		}

		[Token(Token = "0x2000769")]
		public enum NibiruDeviceType
		{
			[Token(Token = "0x4002D04")]
			Hmd,
			[Token(Token = "0x4002D05")]
			LeftController,
			[Token(Token = "0x4002D06")]
			RightController
		}

		[Token(Token = "0x200076A")]
		public enum ButtonID
		{
			[Token(Token = "0x4002D08")]
			Trigger = 0,
			[Token(Token = "0x4002D09")]
			Grip = 1,
			[Token(Token = "0x4002D0A")]
			Menu = 21,
			[Token(Token = "0x4002D0B")]
			System = -1,
			[Token(Token = "0x4002D0C")]
			TouchPad = 20,
			[Token(Token = "0x4002D0D")]
			DPadUp = 5,
			[Token(Token = "0x4002D0E")]
			DPadDown = 4,
			[Token(Token = "0x4002D0F")]
			DPadLeft = 2,
			[Token(Token = "0x4002D10")]
			DPadRight = 3,
			[Token(Token = "0x4002D11")]
			DPadCenter = 6,
			[Token(Token = "0x4002D12")]
			TrackpadTouch = 7
		}

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NibiruDeviceType deviceType;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Nibiru_ControllerStates _prevStates;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB06D")]
		private Nibiru_ControllerStates _currentStates;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private NvrControllerModel controllerModel;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F99C")]
		private NvrLaserPointer laserPointer;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isGamePad;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] lastState;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] curState;

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x1F1ADDC", Offset = "0x1F1ADDC", VA = "0x1F1ADDC")]
		public NvrLaserPointer GetLaserPointer()
		{
			return null;
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x1F1AE0C", Offset = "0x1F1AE0C", VA = "0x1F1AE0C")]
		public void ReloadLaserPointer(NvrLaserPointer laserPointerIn)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x1F1B060", Offset = "0x1F1B060", VA = "0x1F1B060")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x1F1B550", Offset = "0x1F1B550", VA = "0x1F1B550")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x1F1B838", Offset = "0x1F1B838", VA = "0x1F1B838")]
		private int GetNoloType()
		{
			return default(int);
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x1F1B900", Offset = "0x1F1B900", VA = "0x1F1B900")]
		public void OnDeviceConnectState(int state, CDevice device)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x1F1BFF4", Offset = "0x1F1BFF4", VA = "0x1F1BFF4")]
		private void PointerInEventHandler(object sender, PointerEventArgs e)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x1F1C220", Offset = "0x1F1C220", VA = "0x1F1C220")]
		private void PointerOutEventHandler(object sender, PointerEventArgs e)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x1F1C418", Offset = "0x1F1C418", VA = "0x1F1C418")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x1F1EA70", Offset = "0x1F1EA70", VA = "0x1F1EA70")]
		private void initState()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x1F1D674", Offset = "0x1F1D674", VA = "0x1F1D674")]
		private void processControllerKeyEvent(int noloType)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x1F1D5FC", Offset = "0x1F1D5FC", VA = "0x1F1D5FC")]
		public bool IsConneted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x1F1EC14", Offset = "0x1F1EC14", VA = "0x1F1EC14")]
		public bool GetButtonDown(ButtonID btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x1F1ED58", Offset = "0x1F1ED58", VA = "0x1F1ED58")]
		public bool GetButtonUp(ButtonID btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x1F1EEB0", Offset = "0x1F1EEB0", VA = "0x1F1EEB0")]
		public bool GetButtonPressed(ButtonID btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x1F1EF78", Offset = "0x1F1EF78", VA = "0x1F1EF78")]
		public bool GetTouchPressed(ButtonID btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x1F1F040", Offset = "0x1F1F040", VA = "0x1F1F040")]
		public bool GetTouchDown(ButtonID btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x1F1F184", Offset = "0x1F1F184", VA = "0x1F1F184")]
		public bool GetTouchUp(ButtonID btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x1F1F2DC", Offset = "0x1F1F2DC", VA = "0x1F1F2DC")]
		public Vector2 GetTouchPosition(ButtonID axisIndex = ButtonID.TrackpadTouch)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x1F1F45C", Offset = "0x1F1F45C", VA = "0x1F1F45C")]
		public NvrTrackedDevice()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class NvrCameraUtils
	{
		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x19BC7D0", Offset = "0x19BC7D0", VA = "0x19BC7D0")]
		public static void FixProjection(Rect camRect, float nearClipPlane, float farClipPlane, ref Matrix4x4 proj)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x19BCA0C", Offset = "0x19BCA0C", VA = "0x19BCA0C")]
		public static Rect FixViewport(Rect rect, Rect viewport, bool isRightEye)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x19BCD3C", Offset = "0x19BCD3C", VA = "0x19BCD3C")]
		public static Rect FixEditorViewport(Rect rect, float profileAspect, float windowAspect)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x19BCFA8", Offset = "0x19BCFA8", VA = "0x19BCFA8")]
		public static void ZoomStereoCameras(float matchByZoom, float matchMonoFOV, float monoProj11, ref Matrix4x4 proj)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x19BD270", Offset = "0x19BD270", VA = "0x19BD270")]
		public NvrCameraUtils()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public abstract class NvrDevice : BaseAndroidDevice
	{
		[Token(Token = "0x200076B")]
		public enum PARAMS_KEY
		{
			[Token(Token = "0x4002D14")]
			CONTROLLER_SUPPORT = 1006,
			[Token(Token = "0x4002D15")]
			COLOR_SPACE
		}

		[Token(Token = "0x4001F95")]
		private const int kRenderEvent = 1196770114;

		[Token(Token = "0x4001F96")]
		private const int kTilted = 2;

		[Token(Token = "0x4001F97")]
		private const int kProfileChanged = 4;

		[Token(Token = "0x4001F98")]
		private const int kVRBackButtonPressed = 8;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987084")]
		private float[] position;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] headData;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] viewData;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float[] profileData;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB09C")]
		private Matrix4x4 headView;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Matrix4x4 leftEyeView;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F9C4")]
		private Matrix4x4 rightEyeView;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _timewarp_view_number;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool applicationQuited;

		[Token(Token = "0x4001FA2")]
		private const string nvrDllName = "nvr_unity";

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x19BE4CC", Offset = "0x19BE4CC", VA = "0x19BE4CC", Slot = "30")]
		public override NibiruService GetNibiruService()
		{
			return null;
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x199C544", Offset = "0x199C544", VA = "0x199C544", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x19BE908", Offset = "0x19BE908", VA = "0x19BE908", Slot = "19")]
		public override int GetTimewarpViewNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x19BE938", Offset = "0x19BE938", VA = "0x19BE938", Slot = "20")]
		public override void UpdateState()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x19BEFDC", Offset = "0x19BEFDC", VA = "0x19BEFDC", Slot = "21")]
		public override void UpdateScreenData()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x19C0E7C", Offset = "0x19C0E7C", VA = "0x19C0E7C", Slot = "22")]
		public override void Recenter()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x19C1070", Offset = "0x19C1070", VA = "0x19C1070", Slot = "23")]
		public override void PostRender(RenderTexture stereoScreen)
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x19C1088", Offset = "0x19C1088", VA = "0x19C1088", Slot = "26")]
		public override void EnterVRMode()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x19A02B8", Offset = "0x19A02B8", VA = "0x19A02B8", Slot = "25")]
		public override void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x19C1370", Offset = "0x19C1370", VA = "0x19C1370", Slot = "39")]
		public override void Destroy()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x19A0864", Offset = "0x19A0864", VA = "0x19A0864", Slot = "28")]
		public override void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x19C038C", Offset = "0x19C038C", VA = "0x19C038C")]
		private void UpdateView()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x19BF440", Offset = "0x19BF440", VA = "0x19BF440")]
		private void UpdateProfile()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x19BEE88", Offset = "0x19BEE88", VA = "0x19BEE88")]
		private static int ExtractMatrix(ref Matrix4x4 mat, float[] data, int i = 0)
		{
			return default(int);
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x19C179C", Offset = "0x19C179C", VA = "0x19C179C", Slot = "17")]
		public override IntPtr NGetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x19C18C0", Offset = "0x19C18C0", VA = "0x19C18C0", Slot = "35")]
		public override void NSetSystemVRMode(int flag)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x19C19F0", Offset = "0x19C19F0", VA = "0x19C19F0", Slot = "36")]
		public override void NLockTracker()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x19C1B04", Offset = "0x19C1B04", VA = "0x19C1B04", Slot = "37")]
		public override void NUnLockTracker()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x19C1C18", Offset = "0x19C1C18", VA = "0x19C1C18", Slot = "10")]
		public override void SetTextureSizeNative(int w, int h)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x19C1D8C", Offset = "0x19C1D8C", VA = "0x19C1D8C", Slot = "11")]
		public override void SetCpuLevel(NvrOverrideSettings.PerfLevel level)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x19C1DD0", Offset = "0x19C1DD0", VA = "0x19C1DD0", Slot = "12")]
		public override void SetGpuLevel(NvrOverrideSettings.PerfLevel level)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x19C1E14", Offset = "0x19C1E14", VA = "0x19C1E14", Slot = "18")]
		public override void NIssuePluginEvent(int eventID)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x19C1F54", Offset = "0x19C1F54", VA = "0x19C1F54", Slot = "42")]
		public override void SetColorspaceType(int colorSpace)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x19C1F98", Offset = "0x19C1F98", VA = "0x19C1F98", Slot = "43")]
		public override void SetControllerSupportMode(ControllerSupportMode csm)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x19BE5B8", Offset = "0x19BE5B8", VA = "0x19BE5B8")]
		private static extern int _NVR_InitAPIs(bool supportDTR);

		[PreserveSig]
		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x19BE7EC", Offset = "0x19BE7EC", VA = "0x19BE7EC")]
		private static extern bool _NVR_Start(long pointer);

		[PreserveSig]
		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x19BE6C4", Offset = "0x19BE6C4", VA = "0x19BE6C4")]
		private static extern void _NVR_SetUnityVersion(byte[] version_str, int version_length);

		[PreserveSig]
		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x19C1FDC", Offset = "0x19C1FDC", VA = "0x19C1FDC")]
		private static extern int _NVR_GetEventFlags();

		[PreserveSig]
		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x19C167C", Offset = "0x19C167C", VA = "0x19C167C")]
		private static extern void _NVR_GetNVRConfig(float[] profile);

		[PreserveSig]
		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x19C20CC", Offset = "0x19C20CC", VA = "0x19C20CC")]
		private static extern void _NVR_GetHeadPose(float[] pose, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x19BED2C", Offset = "0x19BED2C", VA = "0x19BED2C")]
		private static extern void _NVR_GetHeadPoseAndPosition(float[] position, float[] pose, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x19C0F88", Offset = "0x19C0F88", VA = "0x19C0F88")]
		private static extern void _NVR_ResetHeadPose();

		[PreserveSig]
		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x19C155C", Offset = "0x19C155C", VA = "0x19C155C")]
		private static extern void _NVR_GetViewParameters(float[] viewParams);

		[PreserveSig]
		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x19C1288", Offset = "0x19C1288", VA = "0x19C1288")]
		private static extern void _NVR_ApplicationPause();

		[PreserveSig]
		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x19C11A0", Offset = "0x19C11A0", VA = "0x19C11A0")]
		private static extern void _NVR_ApplicationResume();

		[PreserveSig]
		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x19C1474", Offset = "0x19C1474", VA = "0x19C1474")]
		private static extern void _NVR_ApplicationDestory();

		[PreserveSig]
		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x19C17D0", Offset = "0x19C17D0", VA = "0x19C17D0")]
		private static extern IntPtr _NVR_GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x19C1A1C", Offset = "0x19C1A1C", VA = "0x19C1A1C")]
		private static extern void _NVR_LockHeadPose();

		[PreserveSig]
		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x19C1B30", Offset = "0x19C1B30", VA = "0x19C1B30")]
		private static extern void _NVR_UnLockHeadPose();

		[PreserveSig]
		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x19C18FC", Offset = "0x19C18FC", VA = "0x19C18FC")]
		private static extern void _NVR_SetSystemVRMode(int flag);

		[PreserveSig]
		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x19C1C90", Offset = "0x19C1C90", VA = "0x19C1C90")]
		private static extern void _NVR_SetParamI(int key, int value);

		[PreserveSig]
		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x19C21F4", Offset = "0x19C21F4", VA = "0x19C21F4")]
		private static extern int _NVR_GetParamI(int key);

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x19A1F7C", Offset = "0x19A1F7C", VA = "0x19A1F7C")]
		protected NvrDevice()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87CCD4", Offset = "0x87CCD4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87CCD4", Offset = "0x87CCD4")]
	public class NvrEye : MonoBehaviour
	{
		[Token(Token = "0x200076C")]
		public delegate void OnPostRenderCallback(int cacheTextureId, NvrViewer.Eye eyeType);

		[Token(Token = "0x200076D")]
		public delegate void OnPreRenderCallback(int cacheTextureId, NvrViewer.Eye eyeType);

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OnPostRenderCallback OnPostRenderListener;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OnPreRenderCallback OnPreRenderListener;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NvrViewer.Eye eye;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0AC")]
		public NvrStereoController controller;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private StereoRenderEffect stereoEffect;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F9D4")]
		private Camera monoCamera;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896830", Offset = "0x896830")]
		private Camera <cam>k__BackingField;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform cacheTransform;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int cacheTextureId;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0B4")]
		private int frameId;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Coroutine fadeCor;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F9DC")]
		private MeshFilter fadeMeshFilter;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MeshRenderer fadeMeshRenderer;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color fadeColor;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fadeMaterial;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0BC")]
		private Color fadeMaterialColor;

		[Token(Token = "0x170001F8")]
		public NvrStereoController Controller
		{
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0x19C22F0", Offset = "0x19C22F0", VA = "0x19C22F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0x19C26B4", Offset = "0x19C26B4", VA = "0x19C26B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public Camera cam
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0x19C26EC", Offset = "0x19C26EC", VA = "0x19C26EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACE14", Offset = "0x8ACE14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0x19C271C", Offset = "0x19C271C", VA = "0x19C271C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACE50", Offset = "0x8ACE50")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x19C2754", Offset = "0x19C2754", VA = "0x19C2754")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x19C27EC", Offset = "0x19C27EC", VA = "0x19C27EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x19C2A7C", Offset = "0x19C2A7C", VA = "0x19C2A7C")]
		public void UpdateCameraProjection()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x19C3750", Offset = "0x19C3750", VA = "0x19C3750")]
		public int GetTargetTextureId()
		{
			return default(int);
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x19C3780", Offset = "0x19C3780", VA = "0x19C3780")]
		public void UpdateTargetTexture()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x19C3964", Offset = "0x19C3964", VA = "0x19C3964")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x19C3B8C", Offset = "0x19C3B8C", VA = "0x19C3B8C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x19C3DF4", Offset = "0x19C3DF4", VA = "0x19C3DF4")]
		private void SetupStereo()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x19C41F0", Offset = "0x19C41F0", VA = "0x19C41F0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x19C4874", Offset = "0x19C4874", VA = "0x19C4874")]
		public void CopyCameraAndMakeSideBySide(NvrStereoController controller)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x19C53B4", Offset = "0x19C53B4", VA = "0x19C53B4")]
		public void Fade(float startAlpha, float endAlpha, float velocidad = 1f)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x19C5720", Offset = "0x19C5720", VA = "0x19C5720")]
		private void DestroyFadeMesh()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x19C542C", Offset = "0x19C542C", VA = "0x19C542C")]
		private void PonerPantallaEnNegro()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x19C59D4", Offset = "0x19C59D4", VA = "0x19C59D4")]
		private void CreateFadeMesh()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x19C6358", Offset = "0x19C6358", VA = "0x19C6358")]
		public NvrEye()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87CDCC", Offset = "0x87CDCC")]
	public class NvrHead : MonoBehaviour
	{
		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89686C", Offset = "0x89686C")]
		private Vector3 <BasePosition>k__BackingField;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F9E4")]
		private bool trackRotation;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool trackPosition;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Transform mTransform;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float initEulerYAngle;

		[Token(Token = "0x170001FA")]
		public Vector3 BasePosition
		{
			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0x1EFCE44", Offset = "0x1EFCE44", VA = "0x1EFCE44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACEC8", Offset = "0x8ACEC8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0x1EFCDE4", Offset = "0x1EFCDE4", VA = "0x1EFCDE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ACE8C", Offset = "0x8ACE8C")]
			set
			{
			}
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x1EFCE84", Offset = "0x1EFCE84", VA = "0x1EFCE84")]
		public void SetTrackPosition(bool b)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x1EFCED0", Offset = "0x1EFCED0", VA = "0x1EFCED0")]
		public void SetTrackRotation(bool b)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x1EFCF1C", Offset = "0x1EFCF1C", VA = "0x1EFCF1C")]
		public bool IsTrackRotation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x1EFCF60", Offset = "0x1EFCF60", VA = "0x1EFCF60")]
		public bool IsTrackPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x1EFCFA4", Offset = "0x1EFCFA4", VA = "0x1EFCFA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x1EFCFE4", Offset = "0x1EFCFE4", VA = "0x1EFCFE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x1EFD550", Offset = "0x1EFD550", VA = "0x1EFD550")]
		private void UpdateHead()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x1EFDF04", Offset = "0x1EFDF04", VA = "0x1EFDF04")]
		public void ResetInitEulerYAngle()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x1EFDF30", Offset = "0x1EFDF30", VA = "0x1EFDF30")]
		public NvrHead()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class NvrHeadControl : MonoBehaviour
	{
		[Token(Token = "0x200076E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886484", Offset = "0x886484")]
		private sealed class <FillSelectionRadial>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private int <>1__state;

			[Token(Token = "0x4002D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98F9F4")]
			private object <>2__current;

			[Token(Token = "0x4002D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NvrHeadControl <>4__this;

			[Token(Token = "0x4002D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <timer>5__2;

			[Token(Token = "0x170004B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C78")]
				[Address(RVA = "0x1EFEA80", Offset = "0x1EFEA80", VA = "0x1EFEA80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C7A")]
				[Address(RVA = "0x1EFEB50", Offset = "0x1EFEB50", VA = "0x1EFEB50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C75")]
			[Address(RVA = "0x1EFE2DC", Offset = "0x1EFE2DC", VA = "0x1EFE2DC")]
			[DebuggerHidden]
			public <FillSelectionRadial>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002C76")]
			[Address(RVA = "0x1EFE580", Offset = "0x1EFE580", VA = "0x1EFE580", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C77")]
			[Address(RVA = "0x1EFE594", Offset = "0x1EFE594", VA = "0x1EFE594", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C79")]
			[Address(RVA = "0x1EFEAB0", Offset = "0x1EFEAB0", VA = "0x1EFEAB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200076F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8864C0", Offset = "0x8864C0")]
		private sealed class <WaitForSelectionRadialToFill>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0D4")]
			private object <>2__current;

			[Token(Token = "0x4002D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public NvrHeadControl <>4__this;

			[Token(Token = "0x170004B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C7E")]
				[Address(RVA = "0x1EFED58", Offset = "0x1EFED58", VA = "0x1EFED58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C80")]
				[Address(RVA = "0x1EFEE28", Offset = "0x1EFEE28", VA = "0x1EFEE28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C7B")]
			[Address(RVA = "0x1EFE3E0", Offset = "0x1EFE3E0", VA = "0x1EFE3E0")]
			[DebuggerHidden]
			public <WaitForSelectionRadialToFill>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002C7C")]
			[Address(RVA = "0x1EFEB80", Offset = "0x1EFEB80", VA = "0x1EFEB80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C7D")]
			[Address(RVA = "0x1EFEB94", Offset = "0x1EFEB94", VA = "0x1EFEB94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0x1EFED88", Offset = "0x1EFED88", VA = "0x1EFED88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0C4")]
		public static GameObject eventGameObject;

		[NonSerialized]
		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static BaseEventData baseEventData;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98F9EC")]
		private float duration;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image selection;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Coroutine fillcoroutine;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isselect;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0CC")]
		private bool isfilled;

		[Token(Token = "0x170001FB")]
		public float Duration
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0x1EFDF8C", Offset = "0x1EFDF8C", VA = "0x1EFDF8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x1EFDFBC", Offset = "0x1EFDFBC", VA = "0x1EFDFBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x1EFE0F4", Offset = "0x1EFE0F4", VA = "0x1EFE0F4")]
		public void Show()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x1EFE174", Offset = "0x1EFE174", VA = "0x1EFE174")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x1EFE220", Offset = "0x1EFE220", VA = "0x1EFE220")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ACF04", Offset = "0x8ACF04")]
		private IEnumerator FillSelectionRadial()
		{
			return null;
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x1EFE324", Offset = "0x1EFE324", VA = "0x1EFE324")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8ACFB4", Offset = "0x8ACFB4")]
		public IEnumerator WaitForSelectionRadialToFill()
		{
			return null;
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1EFE428", Offset = "0x1EFE428", VA = "0x1EFE428")]
		public void HandleDown()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x1EFE4A0", Offset = "0x1EFE4A0", VA = "0x1EFE4A0")]
		public void HandleUp()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x1EFE53C", Offset = "0x1EFE53C", VA = "0x1EFE53C")]
		public NvrHeadControl()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class NvrInput
	{
		[Token(Token = "0x4001FBF")]
		private const int MAX_INDEX = 256;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] KeyStateHMD;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] KeyStateControllerLeft;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] KeyStateControllerRight;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0DC")]
		private static int[] KeyStateController3DOF;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int[] KeyStateControllerNOLO_Left;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA04")]
		private static int[] KeyStateControllerNOLO_Right;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] KeyStateHMD_Pre;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] KeyStateControllerLeft_Pre;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] KeyStateControllerRight_Pre;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0E4")]
		private static int[] KeyStateController3DOF_Pre;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int[] KeyStateControllerNOLO_Left_Pre;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA0C")]
		private static int[] KeyStateControllerNOLO_Right_Pre;

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x1EFEE58", Offset = "0x1EFEE58", VA = "0x1EFEE58")]
		public NvrInput()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x1EFF3CC", Offset = "0x1EFF3CC", VA = "0x1EFF3CC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x1EFF92C", Offset = "0x1EFF92C", VA = "0x1EFF92C")]
		public void OnChangeKeyEvent(int keyCode, int keyAction)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x1EFFAD8", Offset = "0x1EFFAD8", VA = "0x1EFFAD8")]
		public void Process()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x1F04D60", Offset = "0x1F04D60", VA = "0x1F04D60")]
		public static bool IsNoloControllerConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x1F04E5C", Offset = "0x1F04E5C", VA = "0x1F04E5C")]
		public static bool Is3DofControllerConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x1F04F58", Offset = "0x1F04F58", VA = "0x1F04F58")]
		public static bool GetKeyPressed(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x1F05144", Offset = "0x1F05144", VA = "0x1F05144")]
		public static bool GetKeyDown(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x1F04044", Offset = "0x1F04044", VA = "0x1F04044")]
		public static bool GetKeyUp(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x1F05470", Offset = "0x1F05470", VA = "0x1F05470")]
		public static bool GetControllerKeyDown(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x1F0579C", Offset = "0x1F0579C", VA = "0x1F0579C")]
		public static bool GetControllerKeyPressed(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x1F04370", Offset = "0x1F04370", VA = "0x1F04370")]
		public static bool GetControllerKeyUp(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x1F05988", Offset = "0x1F05988", VA = "0x1F05988")]
		public static bool GetControllerKeyDown(int key, InteractionManager.NACTION_HAND_TYPE handType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x1F0604C", Offset = "0x1F0604C", VA = "0x1F0604C")]
		public static bool GetControllerKeyPressed(int key, InteractionManager.NACTION_HAND_TYPE handType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x1F0469C", Offset = "0x1F0469C", VA = "0x1F0469C")]
		public static bool GetControllerKeyUp(int key, InteractionManager.NACTION_HAND_TYPE handType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x1F06440", Offset = "0x1F06440", VA = "0x1F06440")]
		public static bool OnBackDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x1F06918", Offset = "0x1F06918", VA = "0x1F06918")]
		public static bool OnBackUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x1F06DF0", Offset = "0x1F06DF0", VA = "0x1F06DF0")]
		public static Vector2 GetTouchPadPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x1F06EA0", Offset = "0x1F06EA0", VA = "0x1F06EA0")]
		public static Vector2 GetTouchPadPosition(InteractionManager.NACTION_HAND_TYPE handType)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87CE30", Offset = "0x87CE30")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87CE30", Offset = "0x87CE30")]
	public class NvrPostRender : MonoBehaviour
	{
		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8968E4", Offset = "0x8968E4")]
		private Camera <cam>k__BackingField;

		[Token(Token = "0x4001FCD")]
		private const int kMeshWidth = 30;

		[Token(Token = "0x4001FCE")]
		private const int kMeshHeight = 30;

		[Token(Token = "0x4001FCF")]
		private const bool kDistortVertices = true;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Mesh distortionMesh;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98708C")]
		private Material meshMaterial;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Mesh quadMesh;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material uiMaterial;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float centerWidthPx;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0F3")]
		private float buttonWidthPx;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float xScale;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA14")]
		private float yScale;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Matrix4x4 xfm;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float aspectComparison;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool firstDraw;

		[Token(Token = "0x170001FC")]
		public Camera cam
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0x1F0C764", Offset = "0x1F0C764", VA = "0x1F0C764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD064", Offset = "0x8AD064")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0x1F0C794", Offset = "0x1F0C794", VA = "0x1F0C794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD0A0", Offset = "0x8AD0A0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x1F0C7CC", Offset = "0x1F0C7CC", VA = "0x1F0C7CC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x1F0C940", Offset = "0x1F0C940", VA = "0x1F0C940")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x1F0CB84", Offset = "0x1F0CB84", VA = "0x1F0CB84")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1F0D964", Offset = "0x1F0D964", VA = "0x1F0D964")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x1F0E204", Offset = "0x1F0E204", VA = "0x1F0E204")]
		private void BuildQuadMesh()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1F0D72C", Offset = "0x1F0D72C", VA = "0x1F0D72C")]
		private void RebuildDistortionMesh()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x1F0E7B4", Offset = "0x1F0E7B4", VA = "0x1F0E7B4")]
		private static void ComputeMeshPoints(int width, int height, bool distortVertices, out Vector3[] vertices, out Vector2[] tex)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x1F10208", Offset = "0x1F10208", VA = "0x1F10208")]
		private static Color[] ComputeMeshColors(int width, int height, Vector2[] tex, int[] indices, bool distortVertices)
		{
			return null;
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1F0F91C", Offset = "0x1F0F91C", VA = "0x1F0F91C")]
		private static int[] ComputeMeshIndices(int width, int height, bool distortVertices)
		{
			return null;
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x1F11E6C", Offset = "0x1F11E6C", VA = "0x1F11E6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x1F12004", Offset = "0x1F12004", VA = "0x1F12004")]
		public NvrPostRender()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87CF28", Offset = "0x87CF28")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87CF28", Offset = "0x87CF28")]
	public class NvrPreRender : MonoBehaviour
	{
		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896920", Offset = "0x896920")]
		private Camera <cam>k__BackingField;

		[Token(Token = "0x170001FD")]
		public Camera cam
		{
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x1F12048", Offset = "0x1F12048", VA = "0x1F12048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD0DC", Offset = "0x8AD0DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x1F12078", Offset = "0x1F12078", VA = "0x1F12078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD118", Offset = "0x8AD118")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x1F120B0", Offset = "0x1F120B0", VA = "0x1F120B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x1F12148", Offset = "0x1F12148", VA = "0x1F12148")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x1F1226C", Offset = "0x1F1226C", VA = "0x1F1226C")]
		public NvrPreRender()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BB")]
	public class NvrProfile
	{
		[Serializable]
		[Token(Token = "0x2000770")]
		public struct Screen
		{
			[Token(Token = "0x4002D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0FB")]
			public float width;

			[Token(Token = "0x4002D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public float height;

			[Token(Token = "0x4002D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FA1C")]
			public float border;
		}

		[Serializable]
		[Token(Token = "0x2000771")]
		public struct Lenses
		{
			[Token(Token = "0x4002D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float separation;

			[Token(Token = "0x4002D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float offset;

			[Token(Token = "0x4002D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float screenDistance;

			[Token(Token = "0x4002D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB103")]
			public int alignment;

			[Token(Token = "0x4002D24")]
			public const int AlignTop = -1;

			[Token(Token = "0x4002D25")]
			public const int AlignCenter = 0;

			[Token(Token = "0x4002D26")]
			public const int AlignBottom = 1;
		}

		[Serializable]
		[Token(Token = "0x2000772")]
		public struct MaxFOV
		{
			[Token(Token = "0x4002D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float outer;

			[Token(Token = "0x4002D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float inner;

			[Token(Token = "0x4002D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB10B")]
			public float upper;

			[Token(Token = "0x4002D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public float lower;
		}

		[Serializable]
		[Token(Token = "0x2000773")]
		public struct Distortion
		{
			[Token(Token = "0x4002D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FA2C")]
			private float[] coef;

			[Token(Token = "0x170004B8")]
			public float[] Coef
			{
				[Token(Token = "0x6002C81")]
				[Address(RVA = "0xC766E8", Offset = "0xC766E8", VA = "0xC766E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002C82")]
				[Address(RVA = "0xC7673C", Offset = "0xC7673C", VA = "0xC7673C")]
				set
				{
				}
			}

			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xC76798", Offset = "0xC76798", VA = "0xC76798")]
			public float distort(float r)
			{
				return default(float);
			}

			[Token(Token = "0x6002C84")]
			[Address(RVA = "0xC767F4", Offset = "0xC767F4", VA = "0xC767F4")]
			public float distortInv(float radius)
			{
				return default(float);
			}
		}

		[Serializable]
		[Token(Token = "0x2000774")]
		public struct Viewer
		{
			[Token(Token = "0x4002D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Lenses lenses;

			[Token(Token = "0x4002D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MaxFOV maxFOV;

			[Token(Token = "0x4002D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Distortion distortion;

			[Token(Token = "0x4002D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB113")]
			public Distortion inverse;
		}

		[Token(Token = "0x2000775")]
		public enum ScreenSizes
		{
			[Token(Token = "0x4002D31")]
			Nexus5,
			[Token(Token = "0x4002D32")]
			Nexus6,
			[Token(Token = "0x4002D33")]
			GalaxyS6,
			[Token(Token = "0x4002D34")]
			GalaxyNote4,
			[Token(Token = "0x4002D35")]
			LGG3
		}

		[Token(Token = "0x2000776")]
		public enum ViewerTypes
		{
			[Token(Token = "0x4002D37")]
			CardboardJun2014,
			[Token(Token = "0x4002D38")]
			CardboardMay2015,
			[Token(Token = "0x4002D39")]
			GoggleTechC1Glass
		}

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Screen screen;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA1C")]
		public Viewer viewer;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Screen Nexus5;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Screen Nexus6;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Screen GalaxyS6;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB103")]
		public static readonly Screen GalaxyNote4;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly Screen LGG3;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA24")]
		public static readonly Viewer CardboardJun2014;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Viewer CardboardMay2015;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Viewer GoggleTechC1Glass;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly NvrProfile Default;

		[Token(Token = "0x170001FE")]
		public float VerticalLensOffset
		{
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x1F123CC", Offset = "0x1F123CC", VA = "0x1F123CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x1F1229C", Offset = "0x1F1229C", VA = "0x1F1229C")]
		public NvrProfile Clone()
		{
			return null;
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x1F12498", Offset = "0x1F12498", VA = "0x1F12498")]
		public static NvrProfile GetKnownProfile(ScreenSizes screenSize, ViewerTypes deviceType)
		{
			return null;
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1F10864", Offset = "0x1F10864", VA = "0x1F10864")]
		public void GetLeftEyeVisibleTanAngles(float[] result)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1F10F7C", Offset = "0x1F10F7C", VA = "0x1F10F7C")]
		public void GetLeftEyeNoLensTanAngles(float[] result)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x1F11668", Offset = "0x1F11668", VA = "0x1F11668")]
		public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1F12A84", Offset = "0x1F12A84", VA = "0x1F12A84")]
		public static float GetMaxRadius(float[] tanAngleRect)
		{
			return default(float);
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1F12C90", Offset = "0x1F12C90", VA = "0x1F12C90")]
		private static double[] solveLinear(double[,] a, double[] y)
		{
			return null;
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1F1335C", Offset = "0x1F1335C", VA = "0x1F1335C")]
		private static double[] solveLeastSquares(double[,] matA, double[] vecY)
		{
			return null;
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x1F13A28", Offset = "0x1F13A28", VA = "0x1F13A28")]
		public static Distortion ApproximateInverse(float[] coef, float maxRadius = 1f, int numSamples = 100)
		{
			return default(Distortion);
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x1F13CC0", Offset = "0x1F13CC0", VA = "0x1F13CC0")]
		public static Distortion ApproximateInverse(Distortion distort, float maxRadius = 1f, int numSamples = 100)
		{
			return default(Distortion);
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x1F1239C", Offset = "0x1F1239C", VA = "0x1F1239C")]
		public NvrProfile()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87D020", Offset = "0x87D020")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D020", Offset = "0x87D020")]
	public class StereoRenderEffect : MonoBehaviour
	{
		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material material;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB133")]
		private Camera cam;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Rect fullRect;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA54")]
		public NvrViewer.Eye eye;

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x1F2FF68", Offset = "0x1F2FF68", VA = "0x1F2FF68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x1F2FFF4", Offset = "0x1F2FFF4", VA = "0x1F2FFF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x1F302C0", Offset = "0x1F302C0", VA = "0x1F302C0")]
		public void UpdateEye(NvrViewer.Eye eyeTmp)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x1F30510", Offset = "0x1F30510", VA = "0x1F30510")]
		private void OnRenderImage(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x1F30934", Offset = "0x1F30934", VA = "0x1F30934")]
		public StereoRenderEffect()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class DataRow : List<string>
	{
		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x19A6CAC", Offset = "0x19A6CAC", VA = "0x19A6CAC")]
		public DataRow(string data)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x19A6E6C", Offset = "0x19A6E6C", VA = "0x19A6E6C")]
		public string Pull()
		{
			return null;
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x19A6F1C", Offset = "0x19A6F1C", VA = "0x19A6F1C")]
		public byte Pull(byte t)
		{
			return default(byte);
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x19A7020", Offset = "0x19A7020", VA = "0x19A7020")]
		public ushort Pull(ushort t)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x19A7124", Offset = "0x19A7124", VA = "0x19A7124")]
		public bool Pull(bool t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x19A734C", Offset = "0x19A734C", VA = "0x19A734C")]
		public uint Pull(uint t)
		{
			return default(uint);
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x19A7248", Offset = "0x19A7248", VA = "0x19A7248")]
		public int Pull(int t)
		{
			return default(int);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x19A7450", Offset = "0x19A7450", VA = "0x19A7450")]
		public float Pull(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x19A74A0", Offset = "0x19A74A0", VA = "0x19A74A0")]
		public Enum Pull(Enum t)
		{
			return null;
		}
	}
	[Token(Token = "0x20003BE")]
	public class DataTable : List<DataRow>
	{
		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x19A75D4", Offset = "0x19A75D4", VA = "0x19A75D4")]
		public DataTable(string data)
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class CoreStaticDataManager
	{
		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoreStaticDataManager m_instance;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string dataPath;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly KeyBoardInfo[] m_arrKeyBoardInfo;

		[Token(Token = "0x170001FF")]
		public static CoreStaticDataManager instance
		{
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x19A66F0", Offset = "0x19A66F0", VA = "0x19A66F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x19A6918", Offset = "0x19A6918", VA = "0x19A6918")]
		public CoreStaticDataManager()
		{
		}

		[Token(Token = "0x6001C05")]
		private T[] StaticMultiRowTableInit<T>(string tableName)
		{
			return null;
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x19A6968", Offset = "0x19A6968", VA = "0x19A6968")]
		private KeyBoardInfo[] InitKeyBoardInfo()
		{
			return null;
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x19A6A00", Offset = "0x19A6A00", VA = "0x19A6A00")]
		public List<KeyBoardInfo> GetKeyBoardInfoByPage(int _dwPageIndex)
		{
			return null;
		}
	}
	[Token(Token = "0x20003C0")]
	public class LevelStaticInfo
	{
		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB13B")]
		public int m_dwLevel;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int m_dwWidth;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA5C")]
		public int m_dwInitCube;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_dwOnceAddCube;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_dwGate;

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x19AE874", Offset = "0x19AE874", VA = "0x19AE874")]
		public LevelStaticInfo(DataRow data)
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class KeyBoardInfo
	{
		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_dwID;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB143")]
		public int m_dwPage;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public string m_strShow_1;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9862CC")]
		public string m_strShow_2;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_strShow;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_dwPosX;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_dwPosY;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB149")]
		public int m_dwScaleX;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public int m_dwScaleY;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987094")]
		public byte m_bType;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x19AD0B8", Offset = "0x19AD0B8", VA = "0x19AD0B8")]
		public KeyBoardInfo(DataRow data)
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class KeyBoardMono : MonoBehaviour
	{
		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isCanUse;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_dwBackTime;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isBack;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB150")]
		private float m_dwInputClip;

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x19AD380", Offset = "0x19AD380", VA = "0x19AD380")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x19AD3B0", Offset = "0x19AD3B0", VA = "0x19AD3B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x19AE314", Offset = "0x19AE314", VA = "0x19AE314")]
		public void OnPressEnter()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x19AE3DC", Offset = "0x19AE3DC", VA = "0x19AE3DC")]
		public void CanKey()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x19AE40C", Offset = "0x19AE40C", VA = "0x19AE40C")]
		public void OnPressLeft()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x19AE420", Offset = "0x19AE420", VA = "0x19AE420")]
		public void OnPressRight()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x19AE434", Offset = "0x19AE434", VA = "0x19AE434")]
		public void OnPressDown()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x19AE448", Offset = "0x19AE448", VA = "0x19AE448")]
		public void OnPressUp()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x19AE45C", Offset = "0x19AE45C", VA = "0x19AE45C")]
		public void OnPressBack()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x19AE470", Offset = "0x19AE470", VA = "0x19AE470")]
		public void OnPressVolumnUp()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x19AE484", Offset = "0x19AE484", VA = "0x19AE484")]
		public void OnPressVolumnDown()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x19AE498", Offset = "0x19AE498", VA = "0x19AE498")]
		public KeyBoardMono()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class KeyBoardSingle : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Transform m_trsSelf;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA64")]
		public Image m_imageKey;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text m_textKey;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_strChar;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public KeyBoardInfo m_CKeyBoardInfo;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB158")]
		public BoxCollider m_colliderKey;

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x19AE4F8", Offset = "0x19AE4F8", VA = "0x19AE4F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x19AE66C", Offset = "0x19AE66C", VA = "0x19AE66C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x19AE6C4", Offset = "0x19AE6C4", VA = "0x19AE6C4", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x19AE784", Offset = "0x19AE784", VA = "0x19AE784", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x19AE844", Offset = "0x19AE844", VA = "0x19AE844")]
		public KeyBoardSingle()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public enum m_eKeyBoard : byte
	{
		[Token(Token = "0x4002008")]
		none,
		[Token(Token = "0x4002009")]
		Add,
		[Token(Token = "0x400200A")]
		Delete,
		[Token(Token = "0x400200B")]
		Space,
		[Token(Token = "0x400200C")]
		ChangePage,
		[Token(Token = "0x400200D")]
		ToggleCase,
		[Token(Token = "0x400200E")]
		Submit
	}
	[Token(Token = "0x20003C5")]
	public class NibiruKeyBoard
	{
		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NibiruKeyBoard m_instance;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_objSelf;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform keyBoardTransform;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB168")]
		private KeyBoardSingle[] m_arrCKeyBoardSingle;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Text m_textKeyBoard;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA7C")]
		private string m_strKeyBoard;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RaycastHit hit;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_dwPageIndex;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_dwToggleCase;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB170")]
		private Text m_text;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int m_dwMaxSize;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA84")]
		private string m_strInitChar;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isShowing;

		[Token(Token = "0x17000200")]
		public static NibiruKeyBoard Instance
		{
			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0x19ADB38", Offset = "0x19ADB38", VA = "0x19ADB38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x19B24AC", Offset = "0x19B24AC", VA = "0x19B24AC")]
		public NibiruKeyBoard()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x19B276C", Offset = "0x19B276C", VA = "0x19B276C")]
		private void ReInit()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x19B3438", Offset = "0x19B3438", VA = "0x19B3438")]
		public void SetText(Text _text)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x19B3500", Offset = "0x19B3500", VA = "0x19B3500")]
		public void Show(int _pageIndex = 0)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x19B35DC", Offset = "0x19B35DC", VA = "0x19B35DC")]
		public void Show(int _pageIndex, Vector3 position, Vector3 rotation)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x19B2878", Offset = "0x19B2878", VA = "0x19B2878")]
		private void ShowPage(int _pageIndex, int _toggleCase)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x19AE0A0", Offset = "0x19AE0A0", VA = "0x19AE0A0")]
		public void OnPressEnterByCamera()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x19ADE90", Offset = "0x19ADE90", VA = "0x19ADE90")]
		public void OnPressEnterByQuat()
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x19B49AC", Offset = "0x19B49AC", VA = "0x19B49AC")]
		public void OnPressEnterByMouse()
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x19B4284", Offset = "0x19B4284", VA = "0x19B4284")]
		public void OnPressEnter(GameObject hit)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x19B4ABC", Offset = "0x19B4ABC", VA = "0x19B4ABC")]
		public void Dismiss()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x19B4CF0", Offset = "0x19B4CF0", VA = "0x19B4CF0")]
		public bool isShown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x19B40DC", Offset = "0x19B40DC", VA = "0x19B40DC")]
		public string Char(int asciiCode)
		{
			return null;
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x19B4D34", Offset = "0x19B4D34", VA = "0x19B4D34")]
		public string GetKeyBoardString()
		{
			return null;
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x19B4D64", Offset = "0x19B4D64", VA = "0x19B4D64")]
		public Transform GetKeyBoardTransform()
		{
			return null;
		}
	}
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D118", Offset = "0x87D118")]
	public class NvrViewer : MonoBehaviour
	{
		[Token(Token = "0x2000777")]
		public enum Eye
		{
			[Token(Token = "0x4002D3B")]
			Left,
			[Token(Token = "0x4002D3C")]
			Right,
			[Token(Token = "0x4002D3D")]
			Center
		}

		[Token(Token = "0x2000778")]
		public enum Distortion
		{
			[Token(Token = "0x4002D3F")]
			Distorted,
			[Token(Token = "0x4002D40")]
			Undistorted
		}

		[Token(Token = "0x2000779")]
		public enum SleepTimeoutMode
		{
			[Token(Token = "0x4002D42")]
			NEVER_SLEEP,
			[Token(Token = "0x4002D43")]
			SYSTEM_SETTING
		}

		[Token(Token = "0x200077A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8864FC", Offset = "0x8864FC")]
		private sealed class <ChangeEyes>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB1BF")]
			private object <>2__current;

			[Token(Token = "0x4002D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public NvrViewer <>4__this;

			[Token(Token = "0x4002D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FACC")]
			private bool <exit>5__2;

			[Token(Token = "0x170004B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C88")]
				[Address(RVA = "0x1F2E7B4", Offset = "0x1F2E7B4", VA = "0x1F2E7B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C8A")]
				[Address(RVA = "0x1F2E884", Offset = "0x1F2E884", VA = "0x1F2E884", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C85")]
			[Address(RVA = "0x1F204DC", Offset = "0x1F204DC", VA = "0x1F204DC")]
			[DebuggerHidden]
			public <ChangeEyes>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002C86")]
			[Address(RVA = "0x1F2E3B0", Offset = "0x1F2E3B0", VA = "0x1F2E3B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C87")]
			[Address(RVA = "0x1F2E3C4", Offset = "0x1F2E3C4", VA = "0x1F2E3C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C89")]
			[Address(RVA = "0x1F2E7E4", Offset = "0x1F2E7E4", VA = "0x1F2E7E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886538", Offset = "0x886538")]
		private sealed class <EndOfFrame>d__148 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NvrViewer <>4__this;

			[Token(Token = "0x170004BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C8E")]
				[Address(RVA = "0x1F2ED98", Offset = "0x1F2ED98", VA = "0x1F2ED98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C90")]
				[Address(RVA = "0x1F2EE68", Offset = "0x1F2EE68", VA = "0x1F2EE68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0x1F29E18", Offset = "0x1F29E18", VA = "0x1F29E18")]
			[DebuggerHidden]
			public <EndOfFrame>d__148(int <>1__state)
			{
			}

			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0x1F2E8B4", Offset = "0x1F2E8B4", VA = "0x1F2E8B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C8D")]
			[Address(RVA = "0x1F2E8C8", Offset = "0x1F2E8C8", VA = "0x1F2E8C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0x1F2EDC8", Offset = "0x1F2EDC8", VA = "0x1F2EDC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200077C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886574", Offset = "0x886574")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB1C7")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static Action<object> <>9__173_0;

			[Token(Token = "0x4002D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FAD4")]
			public static Action<object> <>9__173_1;

			[Token(Token = "0x4002D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<object> <>9__173_2;

			[Token(Token = "0x4002D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<object> <>9__173_3;

			[Token(Token = "0x4002D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<object> <>9__173_4;

			[Token(Token = "0x6002C92")]
			[Address(RVA = "0x1F2DBE4", Offset = "0x1F2DBE4", VA = "0x1F2DBE4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C93")]
			[Address(RVA = "0x1F2DC14", Offset = "0x1F2DC14", VA = "0x1F2DC14")]
			internal void <onHandleAndroidMsg>b__173_0(object param)
			{
			}

			[Token(Token = "0x6002C94")]
			[Address(RVA = "0x1F2DE50", Offset = "0x1F2DE50", VA = "0x1F2DE50")]
			internal void <onHandleAndroidMsg>b__173_1(object param)
			{
			}

			[Token(Token = "0x6002C95")]
			[Address(RVA = "0x1F2E08C", Offset = "0x1F2E08C", VA = "0x1F2E08C")]
			internal void <onHandleAndroidMsg>b__173_2(object param)
			{
			}

			[Token(Token = "0x6002C96")]
			[Address(RVA = "0x1F2E198", Offset = "0x1F2E198", VA = "0x1F2E198")]
			internal void <onHandleAndroidMsg>b__173_3(object param)
			{
			}

			[Token(Token = "0x6002C97")]
			[Address(RVA = "0x1F2E2A4", Offset = "0x1F2E2A4", VA = "0x1F2E2A4")]
			internal void <onHandleAndroidMsg>b__173_4(object param)
			{
			}
		}

		[Token(Token = "0x400201C")]
		public const string NVR_SDK_VERSION = "1.0.0_20200514";

		[Token(Token = "0x400201D")]
		private const string CORE_VERSION = "CV_1";

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB178")]
		public static bool USE_DTR;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static int _texture_count;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA8C")]
		private float[] headEulerAnglesRange;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NvrViewer instance;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NvrEye[] eyes;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte[] winTypeName;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB180")]
		private static NvrStereoController currentController;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool openEffectRender;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA94")]
		[SerializeField]
		private bool vrModeEnabled;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private HeadControl headControlEnabled;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NvrReticle mNxrReticle;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB188")]
		private Coroutine corEyes;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Vector3 noloLeftControllerYOffset;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FA9C")]
		[SerializeField]
		private Vector3 noloRightControllerOffset;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public TextureMSAA textureMsaa;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool trackerPosition;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool initialRecenter;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB190")]
		[SerializeField]
		public TextureQuality textureQuality;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool requestLock;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FAA4")]
		[SerializeField]
		private bool distortionEnabled;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool IsNativeGazeShow;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BaseVRDevice device;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RenderTexture[] eyeStereoScreens;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB198")]
		private NvrInput nvrInput;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private NvrHead head;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FAAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C2C", Offset = "0x896C2C")]
		private bool <Triggered>k__BackingField;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896C68", Offset = "0x896C68")]
		private bool <ProfileChanged>k__BackingField;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int updatedToFrame;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasEnterVRMode;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1A0")]
		private int[] _texture_ids;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int _current_texture_index;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98709C")]
		private int _next_texture_index;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int frameCount;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaitForEndOfFrame waitForEndOfFrame;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float mFar;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1A7")]
		private bool needUpdateNearFar;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float oldFov;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FAB4")]
		private Matrix4x4[] eyeOriginalProjection;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float defaultIpd;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float userIpd;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public SleepTimeoutMode sleepTimeoutMode;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1AF")]
		[SerializeField]
		public ControllerSupportMode controllerSupportMode;

		[Token(Token = "0x17000201")]
		public static NvrViewer Instance
		{
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x1EFD0EC", Offset = "0x1EFD0EC", VA = "0x1EFD0EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public static NvrStereoController Controller
		{
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x1F1F680", Offset = "0x1F1F680", VA = "0x1F1F680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		public bool EffectRender
		{
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x1F1F990", Offset = "0x1F1F990", VA = "0x1F1F990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x1F1F9D4", Offset = "0x1F1F9D4", VA = "0x1F1F9D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public bool VRModeEnabled
		{
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x1F1FA70", Offset = "0x1F1FA70", VA = "0x1F1FA70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x1F1FAB4", Offset = "0x1F1FAB4", VA = "0x1F1FAB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public HeadControl HeadControl
		{
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x1F1FCEC", Offset = "0x1F1FCEC", VA = "0x1F1FCEC")]
			get
			{
				return default(HeadControl);
			}
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0x1F1FD1C", Offset = "0x1F1FD1C", VA = "0x1F1FD1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public float Duration
		{
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0x1F1FF48", Offset = "0x1F1FF48", VA = "0x1F1FF48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C38")]
			[Address(RVA = "0x1F1FF78", Offset = "0x1F1FF78", VA = "0x1F1FF78")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public Vector3 NoloLeftControllerOffset
		{
			[Token(Token = "0x6001C41")]
			[Address(RVA = "0x1F20B4C", Offset = "0x1F20B4C", VA = "0x1F20B4C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0x1F20B8C", Offset = "0x1F20B8C", VA = "0x1F20B8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public Vector3 NoloRightControllerOffset
		{
			[Token(Token = "0x6001C43")]
			[Address(RVA = "0x1F20BEC", Offset = "0x1F20BEC", VA = "0x1F20BEC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0x1F20C2C", Offset = "0x1F20C2C", VA = "0x1F20C2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public bool TrackerPosition
		{
			[Token(Token = "0x6001C45")]
			[Address(RVA = "0x1F20C8C", Offset = "0x1F20C8C", VA = "0x1F20C8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C46")]
			[Address(RVA = "0x1F20CD0", Offset = "0x1F20CD0", VA = "0x1F20CD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public TextureMSAA TextureMSAA
		{
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0x1F20D1C", Offset = "0x1F20D1C", VA = "0x1F20D1C")]
			get
			{
				return default(TextureMSAA);
			}
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0x1F20D4C", Offset = "0x1F20D4C", VA = "0x1F20D4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public bool InitialRecenter
		{
			[Token(Token = "0x6001C49")]
			[Address(RVA = "0x1F20DB4", Offset = "0x1F20DB4", VA = "0x1F20DB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0x1F20DF8", Offset = "0x1F20DF8", VA = "0x1F20DF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public TextureQuality TextureQuality
		{
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0x1F20E44", Offset = "0x1F20E44", VA = "0x1F20E44")]
			get
			{
				return default(TextureQuality);
			}
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0x1F20E74", Offset = "0x1F20E74", VA = "0x1F20E74")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public bool LockHeadTracker
		{
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0x1F20EDC", Offset = "0x1F20EDC", VA = "0x1F20EDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0x1F20F20", Offset = "0x1F20F20", VA = "0x1F20F20")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public bool DistortionEnabled
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0x1F21304", Offset = "0x1F21304", VA = "0x1F21304")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x1F21348", Offset = "0x1F21348", VA = "0x1F21348")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public NvrProfile Profile
		{
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0x1F10758", Offset = "0x1F10758", VA = "0x1F10758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		public Pose3D HeadPose
		{
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0x1EFDDF8", Offset = "0x1EFDDF8", VA = "0x1EFDDF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		public bool Triggered
		{
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x1F26DC8", Offset = "0x1F26DC8", VA = "0x1F26DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD204", Offset = "0x8AD204")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x1F26E0C", Offset = "0x1F26E0C", VA = "0x1F26E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD240", Offset = "0x8AD240")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public bool ProfileChanged
		{
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x1F26E58", Offset = "0x1F26E58", VA = "0x1F26E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD27C", Offset = "0x8AD27C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0x1F26E9C", Offset = "0x1F26E9C", VA = "0x1F26E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD2B8", Offset = "0x8AD2B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public bool NeedUpdateNearFar
		{
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x1F2A064", Offset = "0x1F2A064", VA = "0x1F2A064")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x1F2725C", Offset = "0x1F2725C", VA = "0x1F2725C")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public SleepTimeoutMode SleepMode
		{
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x1F2D2D0", Offset = "0x1F2D2D0", VA = "0x1F2D2D0")]
			get
			{
				return default(SleepTimeoutMode);
			}
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x1F2D300", Offset = "0x1F2D300", VA = "0x1F2D300")]
			set
			{
			}
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x1F1F48C", Offset = "0x1F1F48C", VA = "0x1F1F48C")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x1F18374", Offset = "0x1F18374", VA = "0x1F18374")]
		public static void Create()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x1F1FFB0", Offset = "0x1F1FFB0", VA = "0x1F1FFB0")]
		public void CambiarCabeza(NvrReticle newReticle, NvrStereoController newCurrentController, GameObject camera)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x1F20420", Offset = "0x1F20420", VA = "0x1F20420")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AD154", Offset = "0x8AD154")]
		private IEnumerator ChangeEyes()
		{
			return null;
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x1F20524", Offset = "0x1F20524", VA = "0x1F20524")]
		public NvrReticle GetNvrReticle()
		{
			return null;
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x1F2070C", Offset = "0x1F2070C", VA = "0x1F2070C")]
		public void DismissReticle()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x1F20758", Offset = "0x1F20758", VA = "0x1F20758")]
		public void ShowReticle()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x1F20564", Offset = "0x1F20564", VA = "0x1F20564")]
		private void InitNvrReticleScript()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x1F207A4", Offset = "0x1F207A4", VA = "0x1F207A4")]
		public void ShowHeadControl()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x1F20978", Offset = "0x1F20978", VA = "0x1F20978")]
		public void HideHeadControl()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x1F20FBC", Offset = "0x1F20FBC", VA = "0x1F20FBC")]
		public void RequestLock()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x1F21160", Offset = "0x1F21160", VA = "0x1F21160")]
		public void RequestUnLock()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x1F214C4", Offset = "0x1F214C4", VA = "0x1F214C4")]
		public void GazeApi(GazeTag tag)
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1F2155C", Offset = "0x1F2155C", VA = "0x1F2155C")]
		public void GazeApi(GazeTag tag, string param)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x1F1BF80", Offset = "0x1F1BF80", VA = "0x1F1BF80")]
		public void SwitchControllerMode(bool enabled)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x1F219C8", Offset = "0x1F219C8", VA = "0x1F219C8")]
		public void SwitchApplicationReticle(bool enabled)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x1F0D324", Offset = "0x1F0D324", VA = "0x1F0D324")]
		public RenderTexture GetStereoScreen(int eye)
		{
			return null;
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x1F21DE0", Offset = "0x1F21DE0", VA = "0x1F21DE0")]
		private void InitEyeStereoScreens()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x1F21E1C", Offset = "0x1F21E1C", VA = "0x1F21E1C")]
		private void InitEyeStereoScreens(int width, int height)
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x1F22680", Offset = "0x1F22680", VA = "0x1F22680")]
		private void RealeaseEyeStereoScreens()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x1F22A04", Offset = "0x1F22A04", VA = "0x1F22A04")]
		public Matrix4x4 Projection(Eye eye, Distortion distortion = Distortion.Distorted)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x1F22B30", Offset = "0x1F22B30", VA = "0x1F22B30")]
		public Rect Viewport(Eye eye, Distortion distortion = Distortion.Distorted)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x1F22C3C", Offset = "0x1F22C3C", VA = "0x1F22C3C")]
		private void InitDevice()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x1F22FFC", Offset = "0x1F22FFC", VA = "0x1F22FFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x1F2302C", Offset = "0x1F2302C", VA = "0x1F2302C")]
		public void DoAwake()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x1F24F20", Offset = "0x1F24F20", VA = "0x1F24F20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x1F1FD68", Offset = "0x1F1FD68", VA = "0x1F1FD68")]
		public void UpdateHeadControl()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x1F25270", Offset = "0x1F25270", VA = "0x1F25270")]
		public NvrHead GetHead()
		{
			return null;
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x1F2566C", Offset = "0x1F2566C", VA = "0x1F2566C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x1F266A8", Offset = "0x1F266A8", VA = "0x1F266A8")]
		public BaseVRDevice GetDevice()
		{
			return null;
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x1F26794", Offset = "0x1F26794", VA = "0x1F26794")]
		public void AndroidLog(string msg)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x1EFD38C", Offset = "0x1EFD38C", VA = "0x1EFD38C")]
		public void UpdateHeadPose()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x1F26168", Offset = "0x1F26168", VA = "0x1F26168")]
		public void UpdateEyeTexture()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x1F241C8", Offset = "0x1F241C8", VA = "0x1F241C8")]
		private void AddPrePostRenderStages()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x1F258E0", Offset = "0x1F258E0", VA = "0x1F258E0")]
		public void UpdateState()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x1F26EE8", Offset = "0x1F26EE8", VA = "0x1F26EE8")]
		private void DispatchEvents()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x1F272F8", Offset = "0x1F272F8", VA = "0x1F272F8")]
		public void Recenter()
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x1F24820", Offset = "0x1F24820", VA = "0x1F24820")]
		public static void AddStereoControllerToCameras()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x1F274E0", Offset = "0x1F274E0", VA = "0x1F274E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x1F276C0", Offset = "0x1F276C0", VA = "0x1F276C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x1F27890", Offset = "0x1F27890", VA = "0x1F27890")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x1F27ACC", Offset = "0x1F27ACC", VA = "0x1F27ACC")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x1F27CB4", Offset = "0x1F27CB4", VA = "0x1F27CB4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x1F27EE8", Offset = "0x1F27EE8", VA = "0x1F27EE8")]
		public void AppQuit()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x1F27FF0", Offset = "0x1F27FF0", VA = "0x1F27FF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x1F19E38", Offset = "0x1F19E38", VA = "0x1F19E38")]
		public void EnterVRMode()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x1F2849C", Offset = "0x1F2849C", VA = "0x1F2849C")]
		public void ResetHeadTrackerFromAndroid()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x1F286F8", Offset = "0x1F286F8", VA = "0x1F286F8")]
		private void OnVolumnUp()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x1F28850", Offset = "0x1F28850", VA = "0x1F28850")]
		private void OnVolumnDown()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x1F289A8", Offset = "0x1F289A8", VA = "0x1F289A8")]
		private void OnKeyDown(string keyCode)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x1F28DF4", Offset = "0x1F28DF4", VA = "0x1F28DF4")]
		private void OnKeyUp(string keyCode)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x1F29240", Offset = "0x1F29240", VA = "0x1F29240")]
		private void OnActivityPause()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x1F29338", Offset = "0x1F29338", VA = "0x1F29338")]
		private void OnActivityResume()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x1F29430", Offset = "0x1F29430", VA = "0x1F29430")]
		public void SetSystemVRMode(int flag)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x1F269DC", Offset = "0x1F269DC", VA = "0x1F269DC")]
		public bool SwapBuffers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x1F29548", Offset = "0x1F29548", VA = "0x1F29548")]
		public int GetEyeTextureId(int eye)
		{
			return default(int);
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x1F295C0", Offset = "0x1F295C0", VA = "0x1F295C0")]
		public int GetTimeWarpViewNum()
		{
			return default(int);
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x1F296D0", Offset = "0x1F296D0", VA = "0x1F296D0")]
		public List<GameObject> GetAllObjectsInScene()
		{
			return null;
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x1F29AD4", Offset = "0x1F29AD4", VA = "0x1F29AD4")]
		public Texture2D createTexture2D(RenderTexture renderTexture)
		{
			return null;
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x1F29D5C", Offset = "0x1F29D5C", VA = "0x1F29D5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AD2F4", Offset = "0x8AD2F4")]
		private IEnumerator EndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x1F29E60", Offset = "0x1F29E60", VA = "0x1F29E60")]
		public int GetFrameId()
		{
			return default(int);
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x1F29E90", Offset = "0x1F29E90", VA = "0x1F29E90")]
		public void UpateCameraFar(float far)
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x1F2A034", Offset = "0x1F2A034", VA = "0x1F2A034")]
		public float GetCameraFar()
		{
			return default(float);
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x1F2A0A8", Offset = "0x1F2A0A8", VA = "0x1F2A0A8")]
		public void UpdateEyeCameraProjection(Eye eye)
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1F2B540", Offset = "0x1F2B540", VA = "0x1F2B540")]
		public void ResetCameraFov()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1F2A900", Offset = "0x1F2A900", VA = "0x1F2A900")]
		public void UpdateCameraFov(float fov)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1F2B7F8", Offset = "0x1F2B7F8", VA = "0x1F2B7F8")]
		public void SetHorizontalAngleRange(float minRange, float maxRange)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x1F2B9A0", Offset = "0x1F2B9A0", VA = "0x1F2B9A0")]
		public void SetVerticalAngleRange(float minRange, float maxRange)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x1F2BB48", Offset = "0x1F2BB48", VA = "0x1F2BB48")]
		public void RemoveAngleLimit()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x1F2BB78", Offset = "0x1F2BB78", VA = "0x1F2BB78")]
		public float[] GetHeadEulerAnglesRange()
		{
			return null;
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x1F2BBA8", Offset = "0x1F2BBA8", VA = "0x1F2BBA8")]
		public string GetStoragePath()
		{
			return null;
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x1F2BCB8", Offset = "0x1F2BCB8", VA = "0x1F2BCB8")]
		public void SetIsKeepScreenOn(bool keep)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x1F2BDE4", Offset = "0x1F2BDE4", VA = "0x1F2BDE4")]
		public void SetIpd(float ipd)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x1F2C284", Offset = "0x1F2C284", VA = "0x1F2C284")]
		public void ResetIpd()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x1F2C044", Offset = "0x1F2C044", VA = "0x1F2C044")]
		public float GetIpd()
		{
			return default(float);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x1F2C2FC", Offset = "0x1F2C2FC", VA = "0x1F2C2FC")]
		private void onHandleAndroidMsg(string msgContent)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x1F2CFB0", Offset = "0x1F2CFB0", VA = "0x1F2CFB0")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x1F2D0B8", Offset = "0x1F2D0B8", VA = "0x1F2D0B8")]
		public void Reboot()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x1F2D1C0", Offset = "0x1F2D1C0", VA = "0x1F2D1C0")]
		public NibiruService GetNibiruService()
		{
			return null;
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x1F2D368", Offset = "0x1F2D368", VA = "0x1F2D368")]
		public Camera GetMainCamera()
		{
			return null;
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x1F2D46C", Offset = "0x1F2D46C", VA = "0x1F2D46C")]
		public Camera GetLeftEyeCamera()
		{
			return null;
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x1F2D5AC", Offset = "0x1F2D5AC", VA = "0x1F2D5AC")]
		public Camera GetRightEyeCamera()
		{
			return null;
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x1F2D6F8", Offset = "0x1F2D6F8", VA = "0x1F2D6F8")]
		public Quaternion GetCameraQuaternion()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x1F2D778", Offset = "0x1F2D778", VA = "0x1F2D778")]
		public NvrViewer()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class NibiruService
	{
		[Token(Token = "0x200077D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8865B0", Offset = "0x8865B0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NibiruService <>4__this;

			[Token(Token = "0x4002D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int mode;

			[Token(Token = "0x6002C98")]
			[Address(RVA = "0x19BA794", Offset = "0x19BA794", VA = "0x19BA794")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002C99")]
			[Address(RVA = "0x19BC1E4", Offset = "0x19BC1E4", VA = "0x19BC1E4")]
			internal void <RegHandleNKey>b__0()
			{
			}
		}

		[Token(Token = "0x200077E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8865EC", Offset = "0x8865EC")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NibiruService <>4__this;

			[Token(Token = "0x4002D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB1DF")]
			public int value;

			[Token(Token = "0x6002C9A")]
			[Address(RVA = "0x19BB138", Offset = "0x19BB138", VA = "0x19BB138")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002C9B")]
			[Address(RVA = "0x19BC330", Offset = "0x19BC330", VA = "0x19BC330")]
			internal void <SetBrightnessValue>b__0()
			{
			}
		}

		[Token(Token = "0x200077F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886628", Offset = "0x886628")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4002D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public NibiruService <>4__this;

			[Token(Token = "0x4002D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FAEC")]
			public DISPLAY_MODE displayMode;

			[Token(Token = "0x6002C9C")]
			[Address(RVA = "0x19BB43C", Offset = "0x19BB43C", VA = "0x19BB43C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0x19BC4E8", Offset = "0x19BC4E8", VA = "0x19BC4E8")]
			internal void <SetDisplayMode>b__0()
			{
			}
		}

		[Token(Token = "0x2000780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886664", Offset = "0x886664")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NibiruService <>4__this;

			[Token(Token = "0x4002D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool isEnable;

			[Token(Token = "0x6002C9E")]
			[Address(RVA = "0x19BBC84", Offset = "0x19BBC84", VA = "0x19BBC84")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6002C9F")]
			[Address(RVA = "0x19BC634", Offset = "0x19BC634", VA = "0x19BC634")]
			internal void <SetEnableTouchCursor>b__0()
			{
			}
		}

		[Token(Token = "0x4002049")]
		private const string NibiruSDKClassName = "com.nibiru.lib.vr.NibiruVR";

		[Token(Token = "0x400204A")]
		private const string ServiceClassName = "com.nibiru.service.NibiruService";

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FADC")]
		protected AndroidJavaObject androidActivity;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected AndroidJavaClass nibiruSDKClass;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected AndroidJavaObject nibiruOsServiceObject;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected AndroidJavaObject nibiruVRServiceObject;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1D7")]
		protected AndroidJavaObject audioManager;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int NKEY_SYS_HANDLE;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FAE4")]
		public static int NKEY_APP_HANDLE;

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x19B98B4", Offset = "0x19B98B4", VA = "0x19B98B4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x19BA588", Offset = "0x19BA588", VA = "0x19BA588")]
		public void RegHandleNKey(int mode)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x19BA8C8", Offset = "0x19BA8C8", VA = "0x19BA8C8")]
		public void SetEnableFPS(bool isEnabled)
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x19BAAD8", Offset = "0x19BAAD8", VA = "0x19BAAD8")]
		public float[] GetFPS()
		{
			return null;
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x19BAD04", Offset = "0x19BAD04", VA = "0x19BAD04")]
		public bool IsSupport6DOF()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x19BAED4", Offset = "0x19BAED4", VA = "0x19BAED4")]
		public int GetBrightnessValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x19BAFB8", Offset = "0x19BAFB8", VA = "0x19BAFB8")]
		public void SetBrightnessValue(int value)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x19BB168", Offset = "0x19BB168", VA = "0x19BB168")]
		public DISPLAY_MODE GetDisplayMode()
		{
			return default(DISPLAY_MODE);
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x19BB2C4", Offset = "0x19BB2C4", VA = "0x19BB2C4")]
		public void SetDisplayMode(DISPLAY_MODE displayMode)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x19BB46C", Offset = "0x19BB46C", VA = "0x19BB46C")]
		public string GetChannelCode()
		{
			return null;
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x19BB58C", Offset = "0x19BB58C", VA = "0x19BB58C")]
		public string GetModel()
		{
			return null;
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x19BB6AC", Offset = "0x19BB6AC", VA = "0x19BB6AC")]
		public string GetOSVersion()
		{
			return null;
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x19BB7CC", Offset = "0x19BB7CC", VA = "0x19BB7CC")]
		public int GetOSVersionCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x19BB8DC", Offset = "0x19BB8DC", VA = "0x19BB8DC")]
		public string GetServiceVersionCode()
		{
			return null;
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x19BB9FC", Offset = "0x19BB9FC", VA = "0x19BB9FC")]
		public string GetVendorSWVersion()
		{
			return null;
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x19BBB1C", Offset = "0x19BBB1C", VA = "0x19BBB1C")]
		public void SetEnableTouchCursor(bool isEnable)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x19BA7C4", Offset = "0x19BA7C4", VA = "0x19BA7C4")]
		public void RunOnUIThread(AndroidJavaObject activityObj, AndroidJavaRunnable r)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x19BBCB4", Offset = "0x19BBCB4", VA = "0x19BBCB4")]
		private AndroidJavaObject javaArrayFromCS(string[] values)
		{
			return null;
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x19BA440", Offset = "0x19BA440", VA = "0x19BA440")]
		public void RequsetPermission(string[] names)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x19BC114", Offset = "0x19BC114", VA = "0x19BC114")]
		public NibiruService()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class NibiruRemindBox : NibiruRemindBoxBase
	{
		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896D1C", Offset = "0x896D1C")]
		private static NibiruRemindBox <Instance>k__BackingField;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1E7")]
		private bool isAutoClose;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 VOLUMESIZE;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FAF4")]
		private int VOLUMESTART;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string typeName;

		[Token(Token = "0x17000215")]
		public static NibiruRemindBox Instance
		{
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0x19B4E2C", Offset = "0x19B4E2C", VA = "0x19B4E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD3E0", Offset = "0x8AD3E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x19B4DA4", Offset = "0x19B4DA4", VA = "0x19B4DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD3A4", Offset = "0x8AD3A4")]
			set
			{
			}
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x19B4EAC", Offset = "0x19B4EAC", VA = "0x19B4EAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x19B4EDC", Offset = "0x19B4EDC", VA = "0x19B4EDC")]
		public void Electricity()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x19B6164", Offset = "0x19B6164", VA = "0x19B6164")]
		public void CalibrationDelay()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x19B62D0", Offset = "0x19B62D0", VA = "0x19B62D0")]
		public void Calibration()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x19B65A4", Offset = "0x19B65A4", VA = "0x19B65A4")]
		public void CloseBox()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x19B7150", Offset = "0x19B7150", VA = "0x19B7150")]
		public void Volume(string param)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x19B7B40", Offset = "0x19B7B40", VA = "0x19B7B40")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x19B7DE0", Offset = "0x19B7DE0", VA = "0x19B7DE0")]
		public void ReStart()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x19B7EE8", Offset = "0x19B7EE8", VA = "0x19B7EE8")]
		public void OnLiftBack()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x19B8020", Offset = "0x19B8020", VA = "0x19B8020")]
		public NibiruRemindBox()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x19B8234", Offset = "0x19B8234", VA = "0x19B8234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD41C", Offset = "0x8AD41C")]
		private void <CalibrationDelay>b__10_0(object param)
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public enum RemindBoxParam
	{
		[Token(Token = "0x4002058")]
		ELECTRICITY,
		[Token(Token = "0x4002059")]
		CALIBRATION,
		[Token(Token = "0x400205A")]
		CLOSE,
		[Token(Token = "0x400205B")]
		VOLUME
	}
	[Token(Token = "0x20003CA")]
	public class NibiruRemindBoxBase : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject remindbox;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isClose;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Text defaultText;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1F7")]
		private GameObject cameraObject;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private GameObject tagImage;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9870A4")]
		private float time;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float timeEnd;

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x19B8268", Offset = "0x19B8268", VA = "0x19B8268")]
		public bool Showing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x19B50F4", Offset = "0x19B50F4", VA = "0x19B50F4")]
		public bool Init(float timeend)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x19B5710", Offset = "0x19B5710", VA = "0x19B5710")]
		public void Create(string name, Vector3 position, Vector2 size)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x19B5C34", Offset = "0x19B5C34", VA = "0x19B5C34")]
		public void Create(string name, string context, Vector3 position, Vector2 size)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x19B6CF4", Offset = "0x19B6CF4", VA = "0x19B6CF4")]
		public void Create(string name, Vector3 position, Vector2 size, NibiruRemindBoxEvent.RemindBoxEvent action)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x19B76E8", Offset = "0x19B76E8", VA = "0x19B76E8")]
		public void Create(Vector3 position, Vector2 size)
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x19B6070", Offset = "0x19B6070", VA = "0x19B6070")]
		public void Close()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x19B7C48", Offset = "0x19B7C48", VA = "0x19B7C48")]
		public void ReleaseDestory()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x19B8384", Offset = "0x19B8384", VA = "0x19B8384")]
		public void FadeOut(GameObject remindbox)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x19B8C74", Offset = "0x19B8C74", VA = "0x19B8C74")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x19B8204", Offset = "0x19B8204", VA = "0x19B8204")]
		public NibiruRemindBoxBase()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class NibiruRemindBoxEvent : MonoBehaviour, INvrGazeResponder
	{
		[Token(Token = "0x2000781")]
		public delegate void RemindBoxEvent();

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RemindBoxEvent handleRemindBox;

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x19B8E10", Offset = "0x19B8E10", VA = "0x19B8E10")]
		public void SetGazedAt(bool gazedAt)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x19B90B4", Offset = "0x19B90B4", VA = "0x19B90B4", Slot = "4")]
		public void OnGazeEnter()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x19B9330", Offset = "0x19B9330", VA = "0x19B9330", Slot = "5")]
		public void OnGazeExit()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x19B9368", Offset = "0x19B9368", VA = "0x19B9368", Slot = "6")]
		public void OnGazeTrigger()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x19B97BC", Offset = "0x19B97BC", VA = "0x19B97BC")]
		public void OnUpdateIntersectionPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x19B97DC", Offset = "0x19B97DC", VA = "0x19B97DC")]
		private void OnDestory()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x19B97F0", Offset = "0x19B97F0", VA = "0x19B97F0")]
		public NibiruRemindBoxEvent()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D17C", Offset = "0x87D17C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87D17C", Offset = "0x87D17C")]
	public class NvrReticle : MonoBehaviour, INvrGazePointer
	{
		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int reticleSegments;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1FE")]
		public float reticleGrowthSpeed;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool showReticle;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FB04")]
		private Material materialComp;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float reticleInnerAngle;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float reticleOuterAngle;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float reticleDistanceInMeters;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB206")]
		public float kReticleMinInnerAngle;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float kReticleMinOuterAngle;

		[Token(Token = "0x400206D")]
		private const float kReticleGrowthAngle = 1f;

		[Token(Token = "0x400206E")]
		private const float kReticleDistanceMin = 0.45f;

		[Token(Token = "0x400206F")]
		private const float kReticleDistanceMax = 10f;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float reticleInnerDiameter;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB20E")]
		private float reticleOuterDiameter;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x896D58", Offset = "0x896D58")]
		public int reticleSortingOrder;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FB14")]
		private GameObject reticlePointer;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Transform cacheTransform;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float alphaValue;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int updatedToFrame;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB216")]
		private static GameObject headControl;

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x1F14CA0", Offset = "0x1F14CA0", VA = "0x1F14CA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x1F14DB4", Offset = "0x1F14DB4", VA = "0x1F14DB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x1F1564C", Offset = "0x1F1564C", VA = "0x1F1564C")]
		public GameObject GetReticlePointer()
		{
			return null;
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x1F1567C", Offset = "0x1F1567C", VA = "0x1F1567C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x1F15774", Offset = "0x1F15774", VA = "0x1F15774")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x1F15A24", Offset = "0x1F15A24", VA = "0x1F15A24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x1F15B00", Offset = "0x1F15B00", VA = "0x1F15B00", Slot = "12")]
		public void UpdateStatus()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x1F162E0", Offset = "0x1F162E0", VA = "0x1F162E0", Slot = "4")]
		public void OnGazeEnabled()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x1F162F4", Offset = "0x1F162F4", VA = "0x1F162F4", Slot = "5")]
		public void OnGazeDisabled()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x1F16308", Offset = "0x1F16308", VA = "0x1F16308", Slot = "6")]
		public void OnGazeStart(Camera camera, GameObject targetObject, Vector3 intersectionPosition, bool isInteractive)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x1F16A28", Offset = "0x1F16A28", VA = "0x1F16A28", Slot = "7")]
		public void OnGazeStay(Camera camera, GameObject targetObject, Vector3 intersectionPosition, bool isInteractive)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x1F16AB0", Offset = "0x1F16AB0", VA = "0x1F16AB0", Slot = "8")]
		public void OnGazeExit(Camera camera, GameObject targetObject)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x1F16CCC", Offset = "0x1F16CCC", VA = "0x1F16CCC", Slot = "9")]
		public void OnGazeTriggerStart(Camera camera)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x1F16CE4", Offset = "0x1F16CE4", VA = "0x1F16CE4", Slot = "10")]
		public void OnGazeTriggerEnd(Camera camera)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x1F16CFC", Offset = "0x1F16CFC", VA = "0x1F16CFC", Slot = "11")]
		public void GetPointerRadius(out float innerRadius, out float outerRadius)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x1F14EB8", Offset = "0x1F14EB8", VA = "0x1F14EB8")]
		private void CreateReticleVertices()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x1F15D60", Offset = "0x1F15D60", VA = "0x1F15D60")]
		private void UpdateDiameters()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x1F16EBC", Offset = "0x1F16EBC", VA = "0x1F16EBC")]
		internal void Show()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x1F170BC", Offset = "0x1F170BC", VA = "0x1F170BC")]
		public bool IsShowing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x1F17100", Offset = "0x1F17100", VA = "0x1F17100")]
		public void HeadShow()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x1F17500", Offset = "0x1F17500", VA = "0x1F17500")]
		public void HeadDismiss()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x1F17768", Offset = "0x1F17768", VA = "0x1F17768")]
		public void Dismiss()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x1F164F8", Offset = "0x1F164F8", VA = "0x1F164F8")]
		private void SetGazeTarget(Vector3 target, bool interactive)
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x1F17968", Offset = "0x1F17968", VA = "0x1F17968")]
		public void UpdateColor(Color color)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x1F17B68", Offset = "0x1F17B68", VA = "0x1F17B68")]
		public void UpdateSize(float size)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x1F17BA0", Offset = "0x1F17BA0", VA = "0x1F17BA0")]
		public float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x1F17BD0", Offset = "0x1F17BD0", VA = "0x1F17BD0")]
		public NvrReticle()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D274", Offset = "0x87D274")]
	public class GazeInputModule : BaseInputModule
	{
		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x896DAC", Offset = "0x896DAC")]
		private bool vrModeOnly;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FB1C")]
		public static INvrGazePointer gazePointer;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PointerEventData pointerData;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 lastHeadPose;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isActive;

		[Token(Token = "0x400207D")]
		private const float clickTime = 0.1f;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector2 screenCenterVec;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FB24")]
		private bool isShowGaze;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastGazeZ;

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x19A79B4", Offset = "0x19A79B4", VA = "0x19A79B4", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x19A7CD8", Offset = "0x19A7CD8", VA = "0x19A7CD8", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x19A8C98", Offset = "0x19A8C98", VA = "0x19A8C98")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x19A8F50", Offset = "0x19A8F50", VA = "0x19A8F50", Slot = "20")]
		public override bool IsPointerOverGameObject(int pointerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x19A90D8", Offset = "0x19A90D8", VA = "0x19A90D8", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x19A997C", Offset = "0x19A997C", VA = "0x19A997C")]
		private void CastRayFromGamepad()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x19AA200", Offset = "0x19AA200", VA = "0x19AA200")]
		private void CastRayFromGaze()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x19AA9CC", Offset = "0x19AA9CC", VA = "0x19AA9CC")]
		private void UpdateCurrentObject()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x19AAAD8", Offset = "0x19AAAD8", VA = "0x19AAAD8")]
		private void UpdateReticle(GameObject previousGazedObject)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x19AC8F4", Offset = "0x19AC8F4", VA = "0x19AC8F4")]
		private void HandleDrag()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x19A8314", Offset = "0x19A8314", VA = "0x19A8314")]
		private void HandlePendingClick()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x19ABBA8", Offset = "0x19ABBA8", VA = "0x19ABBA8")]
		private void HandleTrigger()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x19AC2E8", Offset = "0x19AC2E8", VA = "0x19AC2E8")]
		private Vector2 NormalizedCartesianToSpherical(Vector3 cartCoords)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x19AA014", Offset = "0x19AA014", VA = "0x19AA014")]
		private GameObject GetCurrentGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x19AC5A0", Offset = "0x19AC5A0", VA = "0x19AC5A0")]
		private Vector3 GetIntersectionPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x19A7EC0", Offset = "0x19A7EC0", VA = "0x19A7EC0")]
		private void DisableGazePointer()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x19ACFD8", Offset = "0x19ACFD8", VA = "0x19ACFD8")]
		public GazeInputModule()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class LocalizationManager
	{
		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LocalizationManager _instance;

		[Token(Token = "0x4002082")]
		public const string chinese = "Text/Chinese";

		[Token(Token = "0x4002083")]
		public const string english = "Text/English";

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Dictionary<string, string> dic_CN;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FB2C")]
		private Dictionary<string, string> dic_EN;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string languageType;

		[Token(Token = "0x17000216")]
		public static LocalizationManager GetInstance
		{
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x19AE9D8", Offset = "0x19AE9D8", VA = "0x19AE9D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x19AEAC8", Offset = "0x19AEAC8", VA = "0x19AEAC8")]
		public LocalizationManager()
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x19AF1D0", Offset = "0x19AF1D0", VA = "0x19AF1D0")]
		public string GetValue(string key)
		{
			return null;
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x19AF3A4", Offset = "0x19AF3A4", VA = "0x19AF3A4")]
		public string GetValue(string key, string language)
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x19AF328", Offset = "0x19AF328", VA = "0x19AF328")]
		private Dictionary<string, string> getDIC()
		{
			return null;
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x19AF564", Offset = "0x19AF564", VA = "0x19AF564")]
		private bool isCN()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x19AF720", Offset = "0x19AF720", VA = "0x19AF720")]
		public void ChangeLanguage(string language)
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class LocalizationText : MonoBehaviour
	{
		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string key;

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x19AF758", Offset = "0x19AF758", VA = "0x19AF758")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x19AF82C", Offset = "0x19AF82C", VA = "0x19AF82C")]
		public void UpdateKey(string keyValue)
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x19AF918", Offset = "0x19AF918", VA = "0x19AF918")]
		public void refresh(string language)
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x19AF9FC", Offset = "0x19AF9FC", VA = "0x19AF9FC")]
		public LocalizationText()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class NvrFPS : MonoBehaviour
	{
		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string fpsFormat;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB22E")]
		private float updateInterval;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float accum;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FB34")]
		private int frames;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float timeLeft;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float fpsDeltaTime;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TextMesh textMesh;

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1EFC3BC", Offset = "0x1EFC3BC", VA = "0x1EFC3BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1EFC448", Offset = "0x1EFC448", VA = "0x1EFC448")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x1EFC644", Offset = "0x1EFC644", VA = "0x1EFC644")]
		private void calculate_fps()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x1EFC870", Offset = "0x1EFC870", VA = "0x1EFC870")]
		public NvrFPS()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	internal class NvrGlobal
	{
		[Token(Token = "0x2000782")]
		public class Permission
		{
			[Token(Token = "0x4002D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9870AC")]
			public static string CAMERA;

			[Token(Token = "0x4002D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static string WRITE_EXTERNAL_STORAGE;

			[Token(Token = "0x4002D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static string READ_EXTERNAL_STORAGE;

			[Token(Token = "0x4002D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static string ACCESS_COARSE_LOCATION;

			[Token(Token = "0x4002D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB255")]
			public static string ACCESS_NETWORK_STATE;

			[Token(Token = "0x4002D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static string WRITE_SETTINGS;

			[Token(Token = "0x4002D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FB54")]
			public static string BLUETOOTH;

			[Token(Token = "0x4002D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static string BLUETOOTH_ADMIN;

			[Token(Token = "0x4002D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static string INTERNET;

			[Token(Token = "0x4002D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static string GET_TASKS;

			[Token(Token = "0x4002D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB25D")]
			public static string RECORD_AUDIO;

			[Token(Token = "0x4002D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static string READ_PHONE_STATE;

			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0x1EFCB9C", Offset = "0x1EFCB9C", VA = "0x1EFCB9C")]
			public Permission()
			{
			}
		}

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB236")]
		public static NibiruService nibiruService;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static float defaultGazeDistance;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FB3C")]
		public static bool trackerInited;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool nvrStarted;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool supportDtr;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool useNvrSo;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB23E")]
		public static bool distortionEnabled;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static float refreshRate;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FB44")]
		public static float[] dftProfileParams;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float fovNear;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float fovFar;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string channelCode;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB246")]
		public static int jarVersion;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static int soVersion;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FB4C")]
		public static int platformID;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int platPerformanceLevel;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float focusObjectDistance;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isVR9Platform;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB24E")]
		public static string KeyEvent_KEYCODE_ALT_LEFT;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static string KeyEvent_KEYCODE_MEDIA_RECORD;

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x1EFC8B8", Offset = "0x1EFC8B8", VA = "0x1EFC8B8")]
		public NvrGlobal()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public enum PERFORMANCE
	{
		[Token(Token = "0x40020A4")]
		LOW,
		[Token(Token = "0x40020A5")]
		NORMAL,
		[Token(Token = "0x40020A6")]
		HIGH
	}
	[Token(Token = "0x20003D3")]
	public enum PLATFORM
	{
		[Token(Token = "0x40020A8")]
		GENERAL,
		[Token(Token = "0x40020A9")]
		RK_3288_CG,
		[Token(Token = "0x40020AA")]
		ACT_S900,
		[Token(Token = "0x40020AB")]
		SAMSUNG,
		[Token(Token = "0x40020AC")]
		INTEL_T3,
		[Token(Token = "0x40020AD")]
		INTEL_T4,
		[Token(Token = "0x40020AE")]
		MTK_X20,
		[Token(Token = "0x40020AF")]
		QUALCOMM,
		[Token(Token = "0x40020B0")]
		RK_3399,
		[Token(Token = "0x40020B1")]
		SAMSUNG_8890VR,
		[Token(Token = "0x40020B2")]
		PLATFORM_SAMSUNG_8895,
		[Token(Token = "0x40020B3")]
		PLATFORM_VR9
	}
	[Token(Token = "0x20003D4")]
	public enum JARVERSION
	{
		[Token(Token = "0x40020B5")]
		JAR_161228 = 161228
	}
	[Token(Token = "0x20003D5")]
	public enum SOVERSION
	{
		[Token(Token = "0x40020B7")]
		SO_1228 = 161228
	}
	[Token(Token = "0x20003D6")]
	public enum GazeTag
	{
		[Token(Token = "0x40020B9")]
		Show,
		[Token(Token = "0x40020BA")]
		Hide,
		[Token(Token = "0x40020BB")]
		Set_Distance,
		[Token(Token = "0x40020BC")]
		Set_Size,
		[Token(Token = "0x40020BD")]
		Set_Color
	}
	[Token(Token = "0x20003D7")]
	public enum GazeSize
	{
		[Token(Token = "0x40020BF")]
		Original,
		[Token(Token = "0x40020C0")]
		Large,
		[Token(Token = "0x40020C1")]
		Medium,
		[Token(Token = "0x40020C2")]
		Small
	}
	[Token(Token = "0x20003D8")]
	public enum TextureQuality
	{
		[Token(Token = "0x40020C4")]
		Simple = 2,
		[Token(Token = "0x40020C5")]
		Good = 0,
		[Token(Token = "0x40020C6")]
		Better = 3,
		[Token(Token = "0x40020C7")]
		Best = 1
	}
	[Token(Token = "0x20003D9")]
	public enum TextureMSAA
	{
		[Token(Token = "0x40020C9")]
		NONE = 1,
		[Token(Token = "0x40020CA")]
		MSAA_2X = 2,
		[Token(Token = "0x40020CB")]
		MSAA_4X = 4,
		[Token(Token = "0x40020CC")]
		MSAA_8X = 8
	}
	[Token(Token = "0x20003DA")]
	public enum FrameRate
	{
		[Token(Token = "0x40020CE")]
		FPS_60 = 60,
		[Token(Token = "0x40020CF")]
		FPS_72 = 72,
		[Token(Token = "0x40020D0")]
		FPS_75 = 75,
		[Token(Token = "0x40020D1")]
		FPS_90 = 90
	}
	[Token(Token = "0x20003DB")]
	public enum FunctionKeyCode
	{
		[Token(Token = "0x40020D3")]
		NF1 = 131,
		[Token(Token = "0x40020D4")]
		NF2,
		[Token(Token = "0x40020D5")]
		TRIGGER,
		[Token(Token = "0x40020D6")]
		TOUCHPAD_TOUCH,
		[Token(Token = "0x40020D7")]
		MENU,
		[Token(Token = "0x40020D8")]
		TOUCHPAD,
		[Token(Token = "0x40020D9")]
		VOLUMN_DOWN,
		[Token(Token = "0x40020DA")]
		VOLUMN_UP
	}
	[Token(Token = "0x20003DC")]
	public enum DISPLAY_MODE
	{
		[Token(Token = "0x40020DC")]
		MODE_2D,
		[Token(Token = "0x40020DD")]
		MODE_3D
	}
	[Token(Token = "0x20003DD")]
	public enum MSG_ID
	{
		[Token(Token = "0x40020DF")]
		MSG_verifySucc = 1000,
		[Token(Token = "0x40020E0")]
		MSG_verifyFailed,
		[Token(Token = "0x40020E1")]
		MSG_onKeyStoreException,
		[Token(Token = "0x40020E2")]
		MSG_onGestureEvent,
		[Token(Token = "0x40020E3")]
		MSG_onVoiceBegin,
		[Token(Token = "0x40020E4")]
		MSG_onVoiceEnd,
		[Token(Token = "0x40020E5")]
		MSG_onVoiceFinishResult,
		[Token(Token = "0x40020E6")]
		MSG_onVoiceFinishError,
		[Token(Token = "0x40020E7")]
		MSG_onVoiceVolume,
		[Token(Token = "0x40020E8")]
		MSG_onServiceReady,
		[Token(Token = "0x40020E9")]
		MSG_onHeadPosition,
		[Token(Token = "0x40020EA")]
		MSG_onMarkerLoadStatus,
		[Token(Token = "0x40020EB")]
		MSG_onVoiceCancel,
		[Token(Token = "0x40020EC")]
		MSG_onServerApiReady,
		[Token(Token = "0x40020ED")]
		MSG_onSysSleepApiReady,
		[Token(Token = "0x40020EE")]
		MSG_onInteractionKeyEvent,
		[Token(Token = "0x40020EF")]
		MSG_onInteractionTouchEvent,
		[Token(Token = "0x40020F0")]
		MSG_onInteractionDeviceConnectEvent,
		[Token(Token = "0x40020F1")]
		MSG_onGestureHoverEvent
	}
	[Token(Token = "0x20003DE")]
	public enum MARKER_LOAD_STATUS
	{
		[Token(Token = "0x40020F3")]
		SUCCESS = 1,
		[Token(Token = "0x40020F4")]
		LIB_ERROR,
		[Token(Token = "0x40020F5")]
		CAMERA_BUSY
	}
	[Token(Token = "0x20003DF")]
	public enum GESTURE_ID
	{
		[Token(Token = "0x40020F7")]
		BASE_ID = 100,
		[Token(Token = "0x40020F8")]
		OPEN_HAND = 101,
		[Token(Token = "0x40020F9")]
		CLOSE_HAND = 102,
		[Token(Token = "0x40020FA")]
		PINCH_SIGN = 103,
		[Token(Token = "0x40020FB")]
		THUMBS_UP = 104,
		[Token(Token = "0x40020FC")]
		LOST = 113
	}
	[Token(Token = "0x20003E0")]
	public enum VOICE_LANGUAGE
	{
		[Token(Token = "0x40020FE")]
		CHINESE = 1536,
		[Token(Token = "0x40020FF")]
		ENGLISH = 1736
	}
	[Token(Token = "0x20003E1")]
	public enum SERVICE_TYPE
	{
		[Token(Token = "0x4002101")]
		VOICE = 3,
		[Token(Token = "0x4002102")]
		SIX_DOF = 5,
		[Token(Token = "0x4002103")]
		GESTURE = 6
	}
	[Token(Token = "0x20003E2")]
	public enum SENSOR_LOCATION
	{
		[Token(Token = "0x4002105")]
		HMD,
		[Token(Token = "0x4002106")]
		CONTROLLER,
		[Token(Token = "0x4002107")]
		NONE
	}
	[Token(Token = "0x20003E3")]
	public enum HeadControl
	{
		[Token(Token = "0x4002109")]
		GazeSystem,
		[Token(Token = "0x400210A")]
		GazeApplication,
		[Token(Token = "0x400210B")]
		Hover,
		[Token(Token = "0x400210C")]
		Controller
	}
	[Token(Token = "0x20003E4")]
	public enum SENSOR_TYPE
	{
		[Token(Token = "0x400210E")]
		UNKNOWN,
		[Token(Token = "0x400210F")]
		ACCELEROMETER,
		[Token(Token = "0x4002110")]
		GYROSCOPE,
		[Token(Token = "0x4002111")]
		MAGNETIC_FIELD
	}
	[Token(Token = "0x20003E5")]
	public enum CAMERA_ID
	{
		[Token(Token = "0x4002113")]
		FRONT = 1,
		[Token(Token = "0x4002114")]
		BACK = 0
	}
	[Token(Token = "0x20003E6")]
	public enum VIDEO_SIZE
	{
		[Token(Token = "0x4002116")]
		V480P = 1,
		[Token(Token = "0x4002117")]
		V720P,
		[Token(Token = "0x4002118")]
		V1080P
	}
	[Token(Token = "0x20003E7")]
	public enum MARKER_CAMERA_ZOOM
	{
		[Token(Token = "0x400211A")]
		NED = 16,
		[Token(Token = "0x400211B")]
		BLL = 0
	}
	[Token(Token = "0x20003E8")]
	public enum TRACKING_MODE
	{
		[Token(Token = "0x400211D")]
		ROTATION,
		[Token(Token = "0x400211E")]
		POSITION
	}
	[Token(Token = "0x20003E9")]
	public enum PLUGIN_ID
	{
		[Token(Token = "0x4002120")]
		SIX_DOF = 1,
		[Token(Token = "0x4002121")]
		VOICE = 2,
		[Token(Token = "0x4002122")]
		GESTURE = 3,
		[Token(Token = "0x4002123")]
		RECORD = 6,
		[Token(Token = "0x4002124")]
		MARKER = 7,
		[Token(Token = "0x4002125")]
		BASIS = 8,
		[Token(Token = "0x4002126")]
		RECOGINIZE = 9
	}
	[Token(Token = "0x20003EA")]
	public enum HMD_TYPE
	{
		[Token(Token = "0x4002128")]
		VR,
		[Token(Token = "0x4002129")]
		AR,
		[Token(Token = "0x400212A")]
		NONE
	}
	[Token(Token = "0x20003EB")]
	public enum ControllerSupportMode
	{
		[Token(Token = "0x400212C")]
		NONE,
		[Token(Token = "0x400212D")]
		ALL,
		[Token(Token = "0x400212E")]
		THREE_DOF,
		[Token(Token = "0x400212F")]
		NOLO_SIX_DOF,
		[Token(Token = "0x4002130")]
		THREE_DOF_AND_NOLO_SIX_DOF
	}
	[Token(Token = "0x20003EC")]
	public class Pose3D
	{
		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB31B")]
		protected static readonly Matrix4x4 flipZ;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896E10", Offset = "0x896E10")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896E4C", Offset = "0x896E4C")]
		private Quaternion <Orientation>k__BackingField;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x896E88", Offset = "0x896E88")]
		private Matrix4x4 <Matrix>k__BackingField;

		[Token(Token = "0x17000217")]
		public Vector3 Position
		{
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0x1F2EF9C", Offset = "0x1F2EF9C", VA = "0x1F2EF9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD458", Offset = "0x8AD458")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x1F2EFDC", Offset = "0x1F2EFDC", VA = "0x1F2EFDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD494", Offset = "0x8AD494")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public Quaternion Orientation
		{
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0x1F2F03C", Offset = "0x1F2F03C", VA = "0x1F2F03C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD4D0", Offset = "0x8AD4D0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x1F2F084", Offset = "0x1F2F084", VA = "0x1F2F084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD50C", Offset = "0x8AD50C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public Matrix4x4 Matrix
		{
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x1F2F1B4", Offset = "0x1F2F1B4", VA = "0x1F2F1B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD548", Offset = "0x8AD548")]
			get
			{
				return default(Matrix4x4);
			}
			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0x1F2F1DC", Offset = "0x1F2F1DC", VA = "0x1F2F1DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD584", Offset = "0x8AD584")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public Matrix4x4 RightHandedMatrix
		{
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0x1F2F248", Offset = "0x1F2F248", VA = "0x1F2F248")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x1F2F498", Offset = "0x1F2F498", VA = "0x1F2F498")]
		public Pose3D()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x1F2F6A0", Offset = "0x1F2F6A0", VA = "0x1F2F6A0")]
		public Pose3D(Vector3 position, Quaternion orientation)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x1F2F9B8", Offset = "0x1F2F9B8", VA = "0x1F2F9B8")]
		public Pose3D(Vector3 position, Quaternion orientation, bool updateMatrix)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x1F2FA7C", Offset = "0x1F2FA7C", VA = "0x1F2FA7C")]
		public Pose3D(Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x1F2F74C", Offset = "0x1F2F74C", VA = "0x1F2F74C")]
		protected void Set(Vector3 position, Quaternion orientation, bool updateMatrix)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x1F2FB08", Offset = "0x1F2FB08", VA = "0x1F2FB08")]
		protected void Set(Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x1F2FDE0", Offset = "0x1F2FDE0", VA = "0x1F2FDE0")]
		public void SetPosition(Vector3 position)
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class MutablePose3D : Pose3D
	{
		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x19B1FE4", Offset = "0x19B1FE4", VA = "0x19B1FE4")]
		public void Set(Vector3 position, Quaternion orientation)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x19B2088", Offset = "0x19B2088", VA = "0x19B2088")]
		public new void Set(Vector3 position, Quaternion orientation, bool updateMatrix)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x19B2138", Offset = "0x19B2138", VA = "0x19B2138")]
		public new void Set(Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x19B21B0", Offset = "0x19B21B0", VA = "0x19B21B0")]
		public void SetRightHanded(Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x19B2448", Offset = "0x19B2448", VA = "0x19B2448")]
		public new void SetPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x19A2AA8", Offset = "0x19A2AA8", VA = "0x19A2AA8")]
		public MutablePose3D()
		{
		}
	}
}
namespace Photon.Voice.DemoVoiceUI
{
	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87D2D8", Offset = "0x87D2D8")]
	public class DemoVoiceUI : MonoBehaviour
	{
		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB323")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC14")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB32B")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC1C")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB333")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC24")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private VoiceConnection voiceConnection;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB33B")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x400214A")]
		protected internal const string MutePropKey = "mute";

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC2C")]
		private Color warningColor;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color okColor;

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x1199C08", Offset = "0x1199C08", VA = "0x1199C08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x119A994", Offset = "0x119A994", VA = "0x119A994")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x119ABF8", Offset = "0x119ABF8", VA = "0x119ABF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x119ACD4", Offset = "0x119ACD4", VA = "0x119ACD4")]
		private void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x119AE74", Offset = "0x119AE74", VA = "0x119AE74")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x119B020", Offset = "0x119B020", VA = "0x119B020")]
		public void ToggleMute()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x119B268", Offset = "0x119B268", VA = "0x119B268")]
		public void ToggleDebugEcho()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x119B2FC", Offset = "0x119B2FC", VA = "0x119B2FC")]
		public void ToggleReliable()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x119B390", Offset = "0x119B390", VA = "0x119B390")]
		public void ToggleAEC()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x119B40C", Offset = "0x119B40C", VA = "0x119B40C")]
		public void ToggleNoiseSuppression()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x119B488", Offset = "0x119B488", VA = "0x119B488")]
		public void ToggleAGC()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x119B504", Offset = "0x119B504", VA = "0x119B504")]
		public void ToggleVAD()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x119B580", Offset = "0x119B580", VA = "0x119B580")]
		public void ToggleDsp()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x119B688", Offset = "0x119B688", VA = "0x119B688")]
		public void ToggleAudioClipStreaming()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x119B888", Offset = "0x119B888", VA = "0x119B888")]
		public void TogglePhotonVAD()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x119B91C", Offset = "0x119B91C", VA = "0x119B91C")]
		public void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x119BA64", Offset = "0x119BA64", VA = "0x119BA64")]
		public void JoinOrCreateRoom(string roomname)
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x119BDEC", Offset = "0x119BDEC", VA = "0x119BDEC")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x1199CA8", Offset = "0x1199CA8", VA = "0x1199CA8")]
		private void InitToggles()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x119C874", Offset = "0x119C874", VA = "0x119C874")]
		public DemoVoiceUI()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public struct MicRef
	{
		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB333")]
		public int PhotonId;

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x9B489C", Offset = "0x9B489C", VA = "0x9B489C")]
		public MicRef(string name, int id)
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x9B4900", Offset = "0x9B4900", VA = "0x9B4900")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x9B495C", Offset = "0x9B495C", VA = "0x9B495C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003F0")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC34")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<MicRef> micOptions;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8973B0", Offset = "0x8973B0")]
		private GameObject refreshButton;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x897438", Offset = "0x897438")]
		private GameObject toggleButton;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB34B")]
		private Toggle photonToggle;

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x119CBE8", Offset = "0x119CBE8", VA = "0x119CBE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x119CCDC", Offset = "0x119CCDC", VA = "0x119CCDC")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x119D0AC", Offset = "0x119D0AC", VA = "0x119D0AC")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x119D298", Offset = "0x119D298", VA = "0x119D298")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x119DDDC", Offset = "0x119DDDC", VA = "0x119DDDC")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x119CC9C", Offset = "0x119CC9C", VA = "0x119CC9C")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x119DFC8", Offset = "0x119DFC8", VA = "0x119DFC8")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x119DFF8", Offset = "0x119DFF8", VA = "0x119DFF8")]
		public MicrophoneDropdownFiller()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x119E028", Offset = "0x119E028", VA = "0x119E028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD5C0", Offset = "0x8AD5C0")]
		private void <SetupMicDropdown>b__7_0(int <p0>)
		{
		}
	}
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87D388", Offset = "0x87D388")]
	public class RemoteSpeakerUI : MonoBehaviour
	{
		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC3C")]
		[SerializeField]
		private Image remoteIsMuting;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x119E134", Offset = "0x119E134", VA = "0x119E134")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x119E1C0", Offset = "0x119E1C0", VA = "0x119E1C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x119E758", Offset = "0x119E758", VA = "0x119E758")]
		public RemoteSpeakerUI()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x20003F2")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB353")]
		private ConnectionHandler ch;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Text StateUiText;

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x1198C2C", Offset = "0x1198C2C", VA = "0x1198C2C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x1198F54", Offset = "0x1198F54", VA = "0x1198F54")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x119923C", Offset = "0x119923C", VA = "0x119923C", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x1199250", Offset = "0x1199250", VA = "0x1199250", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x1199374", Offset = "0x1199374", VA = "0x1199374", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x11994C8", Offset = "0x11994C8", VA = "0x11994C8", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x11994E0", Offset = "0x11994E0", VA = "0x11994E0", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x11994F8", Offset = "0x11994F8", VA = "0x11994F8", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x1199670", Offset = "0x1199670", VA = "0x1199670", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x1199688", Offset = "0x1199688", VA = "0x1199688", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x11996A0", Offset = "0x11996A0", VA = "0x11996A0", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x11996B4", Offset = "0x11996B4", VA = "0x11996B4", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x11996C8", Offset = "0x11996C8", VA = "0x11996C8", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x11996E0", Offset = "0x11996E0", VA = "0x11996E0", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x11996F4", Offset = "0x11996F4", VA = "0x11996F4", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x1199710", Offset = "0x1199710", VA = "0x1199710", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x1199808", Offset = "0x1199808", VA = "0x1199808", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x1199824", Offset = "0x1199824", VA = "0x1199824", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x1199970", Offset = "0x1199970", VA = "0x1199970", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x1199984", Offset = "0x1199984", VA = "0x1199984")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x1199B60", Offset = "0x1199B60", VA = "0x1199B60")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x20003F3")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x1195E84", Offset = "0x1195E84", VA = "0x1195E84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x119603C", Offset = "0x119603C", VA = "0x119603C")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x119606C", Offset = "0x119606C", VA = "0x119606C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x1196164", Offset = "0x1196164", VA = "0x1196164")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87D438", Offset = "0x87D438")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9870C4")]
		private Text _text;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Selectable Selectable;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color NormalColor;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color HoverColor;

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x1196194", Offset = "0x1196194", VA = "0x1196194")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x1196220", Offset = "0x1196220", VA = "0x1196220")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x1196290", Offset = "0x1196290", VA = "0x1196290")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x1196300", Offset = "0x1196300", VA = "0x1196300", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x1196468", Offset = "0x1196468", VA = "0x1196468", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x11965D0", Offset = "0x11965D0", VA = "0x11965D0")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87D4E8", Offset = "0x87D4E8")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB35A")]
		public Toggle toggle;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Text _text;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC44")]
		public Color NormalOnColor;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color NormalOffColor;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color HoverOnColor;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color HoverOffColor;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB362")]
		private bool isHover;

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x1196670", Offset = "0x1196670", VA = "0x1196670")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x11969A0", Offset = "0x11969A0", VA = "0x11969A0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x11967DC", Offset = "0x11967DC", VA = "0x11967DC")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x1196A98", Offset = "0x1196A98", VA = "0x1196A98", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x1196BC4", Offset = "0x1196BC4", VA = "0x1196BC4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x1196CF0", Offset = "0x1196CF0", VA = "0x1196CF0")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace Photon.Pun.Demo.PunBasics
{
	[Token(Token = "0x20003F7")]
	public class OnlineStart : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x2000783")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8866A0", Offset = "0x8866A0")]
		private sealed class <EsperarAlAmigo>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FC54")]
			private int <>1__state;

			[Token(Token = "0x4002D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OnlineStart <>4__this;

			[Token(Token = "0x4002D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <tiempo>5__2;

			[Token(Token = "0x170004BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CA9")]
				[Address(RVA = "0x1198B2C", Offset = "0x1198B2C", VA = "0x1198B2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CAB")]
				[Address(RVA = "0x1198BFC", Offset = "0x1198BFC", VA = "0x1198BFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0x1198574", Offset = "0x1198574", VA = "0x1198574")]
			[DebuggerHidden]
			public <EsperarAlAmigo>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0x119865C", Offset = "0x119865C", VA = "0x119865C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CA8")]
			[Address(RVA = "0x1198670", Offset = "0x1198670", VA = "0x1198670", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CAA")]
			[Address(RVA = "0x1198B5C", Offset = "0x1198B5C", VA = "0x1198B5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8975B0", Offset = "0x8975B0")]
		[SerializeField]
		private byte maxPlayersPerRoom;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC4C")]
		public Text textoInfo;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Camera cam;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isConnecting;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string gameVersion;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB36A")]
		private Coroutine corutinaEsperarAmigo;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int contTicksEsperaAmigo;

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x1196E00", Offset = "0x1196E00", VA = "0x1196E00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x1196FE8", Offset = "0x1196FE8", VA = "0x1196FE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x1197104", Offset = "0x1197104", VA = "0x1197104")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x1197700", Offset = "0x1197700", VA = "0x1197700")]
		private void LogFeedback(string message)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x11977F8", Offset = "0x11977F8", VA = "0x11977F8", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x11979B0", Offset = "0x11979B0", VA = "0x11979B0", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x1197FC8", Offset = "0x1197FC8", VA = "0x1197FC8", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x119828C", Offset = "0x119828C", VA = "0x119828C", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x119734C", Offset = "0x119734C", VA = "0x119734C")]
		private void CargarPartida()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x1197F0C", Offset = "0x1197F0C", VA = "0x1197F0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AD5FC", Offset = "0x8AD5FC")]
		private IEnumerator EsperarAlAmigo()
		{
			return null;
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x11985BC", Offset = "0x11985BC", VA = "0x11985BC")]
		public OnlineStart()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x20003F8")]
	public static class Calibration
	{
		[Serializable]
		[Token(Token = "0x2000784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8866DC", Offset = "0x8866DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FC6C")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0x11DC7D8", Offset = "0x11DC7D8", VA = "0x11DC7D8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0x11DC808", Offset = "0x11DC808", VA = "0x11DC808")]
			internal void <.cctor>b__20_0(object o, FileSystemEventArgs e)
			{
			}
		}

		[Token(Token = "0x400216F")]
		private const string ConfigFileName = "externalcamera.cfg";

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC5C")]
		public static float X;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float Y;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float Z;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float Yaw;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB37A")]
		public static float Pitch;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static float Roll;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC64")]
		public static float FieldOfVision;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float NearClip;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float FarClip;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float HMDOffset;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB382")]
		public static float NearOffset;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static readonly FileSystemWatcher ConfigWatcher;

		[Token(Token = "0x1700021B")]
		public static Vector3 PositionOffset
		{
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x11DA500", Offset = "0x11DA500", VA = "0x11DA500")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700021C")]
		public static Quaternion RotationOffset
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0x11DA664", Offset = "0x11DA664", VA = "0x11DA664")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x14000049")]
		public static event EventHandler Changed
		{
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x11DA0A8", Offset = "0x11DA0A8", VA = "0x11DA0A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD6AC", Offset = "0x8AD6AC")]
			add
			{
			}
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x11DA2D4", Offset = "0x11DA2D4", VA = "0x11DA2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD6E8", Offset = "0x8AD6E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x11DA7C0", Offset = "0x11DA7C0", VA = "0x11DA7C0")]
		static Calibration()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x11DC408", Offset = "0x11DC408", VA = "0x11DC408")]
		private static void Reset()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x11DADFC", Offset = "0x11DADFC", VA = "0x11DADFC")]
		public static void Read()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x11DC604", Offset = "0x11DC604", VA = "0x11DC604")]
		private static bool TryParseInvariantFloat(string number, out float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F9")]
	public static class Extensions
	{
		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x11DC8F4", Offset = "0x11DC8F4", VA = "0x11DC8F4")]
		private static float _copysign(float sizeval, float signval)
		{
			return default(float);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x11DCAA8", Offset = "0x11DCAA8", VA = "0x11DCAA8")]
		public static Quaternion GetRotation(this Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x11DD1A8", Offset = "0x11DD1A8", VA = "0x11DD1A8")]
		public static Vector3 GetPosition(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003FA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D5D4", Offset = "0x87D5D4")]
	public class ExternalCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000785")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886718", Offset = "0x886718")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FC74")]
			public static Func<TrackedDevicePose_t, int, <>f__AnonymousType0<TrackedDevicePose_t, uint>> <>9__17_0;

			[Token(Token = "0x4002D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, bool> <>9__17_1;

			[Token(Token = "0x4002D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>> <>9__17_2;

			[Token(Token = "0x4002D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, bool> <>9__17_3;

			[Token(Token = "0x4002D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB392")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>> <>9__17_4;

			[Token(Token = "0x4002D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static Func<<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>, int> <>9__17_5;

			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0x11DF1EC", Offset = "0x11DF1EC", VA = "0x11DF1EC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002CB1")]
			[Address(RVA = "0x11DF21C", Offset = "0x11DF21C", VA = "0x11DF21C")]
			internal <>f__AnonymousType0<TrackedDevicePose_t, uint> <IdentifyExternalCameraDevice>b__17_0(TrackedDevicePose_t pose, int index)
			{
				return null;
			}

			[Token(Token = "0x6002CB2")]
			[Address(RVA = "0x11DF31C", Offset = "0x11DF31C", VA = "0x11DF31C")]
			internal bool <IdentifyExternalCameraDevice>b__17_1(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0x11DF3DC", Offset = "0x11DF3DC", VA = "0x11DF3DC")]
			internal <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> <IdentifyExternalCameraDevice>b__17_2(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return null;
			}

			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0x11DF5F4", Offset = "0x11DF5F4", VA = "0x11DF5F4")]
			internal bool <IdentifyExternalCameraDevice>b__17_3(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6002CB5")]
			[Address(RVA = "0x11DF740", Offset = "0x11DF740", VA = "0x11DF740")]
			internal <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> <IdentifyExternalCameraDevice>b__17_4(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return null;
			}

			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0x11DFA14", Offset = "0x11DFA14", VA = "0x11DFA14")]
			internal int <IdentifyExternalCameraDevice>b__17_5(<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> candidate)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89766C", Offset = "0x89766C")]
		private uint <OpenVRTrackedDeviceId>k__BackingField;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TrackedDevicePose_t _trackedDevicePose;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TrackedDevicePose_t[] _devices;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB38A")]
		private TrackedDevicePose_t[] _gameDevices;

		[Token(Token = "0x1700021D")]
		public bool IsValid
		{
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x11DD2C8", Offset = "0x11DD2C8", VA = "0x11DD2C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021E")]
		public uint OpenVRTrackedDeviceId
		{
			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0x11DD358", Offset = "0x11DD358", VA = "0x11DD358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD79C", Offset = "0x8AD79C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x11DD388", Offset = "0x11DD388", VA = "0x11DD388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD7D8", Offset = "0x8AD7D8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x11DD3C0", Offset = "0x11DD3C0", VA = "0x11DD3C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x11DD4AC", Offset = "0x11DD4AC", VA = "0x11DD4AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x11DD534", Offset = "0x11DD534", VA = "0x11DD534")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x11DD6A4", Offset = "0x11DD6A4", VA = "0x11DD6A4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x11DD564", Offset = "0x11DD564", VA = "0x11DD564")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x11DD6D4", Offset = "0x11DD6D4", VA = "0x11DD6D4")]
		private void UpdateOpenVRPose()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x11DD890", Offset = "0x11DD890", VA = "0x11DD890")]
		private void UpdateTransform(HmdMatrix34_t deviceToAbsolute)
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x11DD464", Offset = "0x11DD464", VA = "0x11DD464")]
		private void UpdateOpenVRDevice()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x11DDE00", Offset = "0x11DDE00", VA = "0x11DDE00")]
		private uint IdentifyExternalCameraDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x11DED7C", Offset = "0x11DED7C", VA = "0x11DED7C")]
		private static string GetStringTrackedDeviceProperty(uint device, ETrackedDeviceProperty property)
		{
			return null;
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x11DF084", Offset = "0x11DF084", VA = "0x11DF084")]
		public ExternalCamera()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x87D638", Offset = "0x87D638")]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC7C")]
		public readonly string text;

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x11DFD4C", Offset = "0x11DFD4C", VA = "0x11DFD4C")]
		public HelpAttribute(string text)
		{
		}
	}
	[Token(Token = "0x20003FC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D698", Offset = "0x87D698")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8976A8", Offset = "0x8976A8")]
		public Transform TrackedSpaceOrigin;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x89770C", Offset = "0x89770C")]
		public Camera HMDCamera;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x897748", Offset = "0x897748")]
		public bool DisableStandardAssets;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB39A")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x897784", Offset = "0x897784")]
		public LayerMask SpectatorLayerMask;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected bool WasActive;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC84")]
		private SharedTextureProtocol _sharedTextureProtocol;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ExternalCamera _externalCamera;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MixedRealityRender _mixedRealityRender;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _wasSteamVRExternalCameraActive;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3A2")]
		private VolumetricFog volFog;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private VolumetricFogPosT volFogPosT;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC8C")]
		private MKGlow[] glow;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MKGlow glowPlay;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject camaraLiv;

		[Token(Token = "0x1700021F")]
		public Transform Origin
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x11DFD94", Offset = "0x11DFD94", VA = "0x11DFD94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x11DFEFC", Offset = "0x11DFEFC", VA = "0x11DFEFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x11E04EC", Offset = "0x11E04EC", VA = "0x11E04EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x11E0C8C", Offset = "0x11E0C8C", VA = "0x11E0C8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x11E0D98", Offset = "0x11E0D98", VA = "0x11E0D98")]
		private void OnCompositorActivated()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x11E0540", Offset = "0x11E0540", VA = "0x11E0540")]
		private void OnCompositorDeactivated()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x11E1548", Offset = "0x11E1548", VA = "0x11E1548")]
		private void CreateSharedTextureProtocol()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x11E22C4", Offset = "0x11E22C4", VA = "0x11E22C4")]
		private void DestroySharedTextureProtocol()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x11E15F4", Offset = "0x11E15F4", VA = "0x11E15F4")]
		private void CreateExternalCamera()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x11E2634", Offset = "0x11E2634", VA = "0x11E2634")]
		private void DestroyExternalCamera()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x11E17B4", Offset = "0x11E17B4", VA = "0x11E17B4")]
		private void CreateMixedRealityRender()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x11E2470", Offset = "0x11E2470", VA = "0x11E2470")]
		private void DestroyMixedRealityRender()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x11E2B30", Offset = "0x11E2B30", VA = "0x11E2B30")]
		public void ActivarNiebla()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x11E2D70", Offset = "0x11E2D70", VA = "0x11E2D70")]
		public void DesActivarNiebla()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x11E2FB0", Offset = "0x11E2FB0", VA = "0x11E2FB0")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D6FC", Offset = "0x87D6FC")]
	public class MixedRealityRender : MonoBehaviour
	{
		[Token(Token = "0x2000786")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886754", Offset = "0x886754")]
		private sealed class <RenderLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MixedRealityRender <>4__this;

			[Token(Token = "0x170004BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CBA")]
				[Address(RVA = "0x11E4D04", Offset = "0x11E4D04", VA = "0x11E4D04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CBC")]
				[Address(RVA = "0x11E4DD4", Offset = "0x11E4DD4", VA = "0x11E4DD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CB7")]
			[Address(RVA = "0x11E48E8", Offset = "0x11E48E8", VA = "0x11E48E8")]
			[DebuggerHidden]
			public <RenderLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002CB8")]
			[Address(RVA = "0x11E4960", Offset = "0x11E4960", VA = "0x11E4960", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CB9")]
			[Address(RVA = "0x11E4974", Offset = "0x11E4974", VA = "0x11E4974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CBB")]
			[Address(RVA = "0x11E4D34", Offset = "0x11E4D34", VA = "0x11E4D34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isSetup;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3AA")]
		private LIV _liv;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Camera _mrCamera;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9870CC")]
		private Transform _hmd;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject _clipQuad;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _clipMaterial;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material _blitMaterial;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3B1")]
		private RenderTexture _compositeTexture;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTexture _foregroundTexture;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FC94")]
		private RenderTexture _backgroundTexture;

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x11E27F8", Offset = "0x11E27F8", VA = "0x11E27F8")]
		public void Setup(LIV liv)
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x11E30C0", Offset = "0x11E30C0", VA = "0x11E30C0")]
		private void CreateClipQuad()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x11E345C", Offset = "0x11E345C", VA = "0x11E345C")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x11E3738", Offset = "0x11E3738", VA = "0x11E3738")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x11E3EA8", Offset = "0x11E3EA8", VA = "0x11E3EA8")]
		public float GetDistanceToHMD()
		{
			return default(float);
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x11E4414", Offset = "0x11E4414", VA = "0x11E4414")]
		private void OrientClipQuad()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x11E4428", Offset = "0x11E4428", VA = "0x11E4428")]
		private void RenderNear()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x11E44D8", Offset = "0x11E44D8", VA = "0x11E44D8")]
		private void RenderFar()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x11E4588", Offset = "0x11E4588", VA = "0x11E4588")]
		private void Composite()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x11E47E4", Offset = "0x11E47E4", VA = "0x11E47E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x11E482C", Offset = "0x11E482C", VA = "0x11E482C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AD814", Offset = "0x8AD814")]
		private IEnumerator RenderLoop()
		{
			return null;
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x11E4930", Offset = "0x11E4930", VA = "0x11E4930")]
		public MixedRealityRender()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D760", Offset = "0x87D760")]
	public class SharedTextureProtocol : MonoBehaviour
	{
		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886790", Offset = "0x886790")]
		private sealed class <CallPluginAtEndOfFrames>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB3B9")]
			private int <>1__state;

			[Token(Token = "0x4002D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			private object <>2__current;

			[Token(Token = "0x4002D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FC9C")]
			public SharedTextureProtocol <>4__this;

			[Token(Token = "0x170004C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CC0")]
				[Address(RVA = "0x11E56D8", Offset = "0x11E56D8", VA = "0x11E56D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CC2")]
				[Address(RVA = "0x11E57A8", Offset = "0x11E57A8", VA = "0x11E57A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CBD")]
			[Address(RVA = "0x11E53E8", Offset = "0x11E53E8", VA = "0x11E53E8")]
			[DebuggerHidden]
			public <CallPluginAtEndOfFrames>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0x11E54D4", Offset = "0x11E54D4", VA = "0x11E54D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0x11E54E8", Offset = "0x11E54E8", VA = "0x11E54E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0x11E5708", Offset = "0x11E5708", VA = "0x11E5708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x17000220")]
		public static bool IsActive
		{
			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x11E0D54", Offset = "0x11E0D54", VA = "0x11E0D54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000221")]
		public static int TextureWidth
		{
			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0x11E3E48", Offset = "0x11E3E48", VA = "0x11E3E48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000222")]
		public static int TextureHeight
		{
			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x11E3E78", Offset = "0x11E3E78", VA = "0x11E3E78")]
			get
			{
				return default(int);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x11E4E04", Offset = "0x11E4E04", VA = "0x11E4E04")]
		private static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x11E4EF4", Offset = "0x11E4EF4", VA = "0x11E4EF4")]
		private static extern bool GetIsCaptureActive();

		[PreserveSig]
		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x11E5010", Offset = "0x11E5010", VA = "0x11E5010")]
		private static extern int GetTextureWidth();

		[PreserveSig]
		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x11E5100", Offset = "0x11E5100", VA = "0x11E5100")]
		private static extern int GetTextureHeight();

		[PreserveSig]
		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x11E51F0", Offset = "0x11E51F0", VA = "0x11E51F0")]
		private static extern void SetTexture(IntPtr texture);

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x11E4770", Offset = "0x11E4770", VA = "0x11E4770")]
		public static void SetOutputTexture(Texture texture)
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x11E52E4", Offset = "0x11E52E4", VA = "0x11E52E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x11E532C", Offset = "0x11E532C", VA = "0x11E532C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8AD8C4", Offset = "0x8AD8C4")]
		private IEnumerator CallPluginAtEndOfFrames()
		{
			return null;
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x11E5430", Offset = "0x11E5430", VA = "0x11E5430")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x11E54A4", Offset = "0x11E54A4", VA = "0x11E54A4")]
		public SharedTextureProtocol()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	internal static class SteamVRCompatibility
	{
		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsAvailable;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type SteamVRCamera;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type SteamVRExternalCamera;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3C1")]
		public static Type SteamVRFade;

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x11E57D8", Offset = "0x11E57D8", VA = "0x11E57D8")]
		static SteamVRCompatibility()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x11E5874", Offset = "0x11E5874", VA = "0x11E5874")]
		private static bool FindSteamVRAsset()
		{
			return default(bool);
		}
	}
}
namespace VolumetricFogAndMist
{
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D7C4", Offset = "0x87D7C4")]
	public class FogAreaCullingManager : MonoBehaviour
	{
		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public VolumetricFog fog;

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x1CC61B0", Offset = "0x1CC61B0", VA = "0x1CC61B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x1CC63D4", Offset = "0x1CC63D4", VA = "0x1CC63D4")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x1CC651C", Offset = "0x1CC651C", VA = "0x1CC651C")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x1CC6664", Offset = "0x1CC6664", VA = "0x1CC6664")]
		public FogAreaCullingManager()
		{
		}
	}
	[Token(Token = "0x2000401")]
	[ExecuteInEditMode]
	public class FogOfWarHole : MonoBehaviour
	{
		[Token(Token = "0x2000788")]
		public enum HoleShape
		{
			[Token(Token = "0x4002D78")]
			Disc,
			[Token(Token = "0x4002D79")]
			Box
		}

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FCA4")]
		public HoleShape shape;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8977C0", Offset = "0x8977C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8977C0", Offset = "0x8977C0")]
		public float alpha;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x897854", Offset = "0x897854")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897854", Offset = "0x897854")]
		public float smoothness;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HoleShape lastShape;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3C9")]
		private Vector3 lastPosition;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 lastScale;

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x1CC6694", Offset = "0x1CC6694", VA = "0x1CC6694")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x1CC6BDC", Offset = "0x1CC6BDC", VA = "0x1CC6BDC")]
		private void RestoreHole(Vector3 position, HoleShape shape, float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x1CC67A0", Offset = "0x1CC67A0", VA = "0x1CC67A0")]
		private void StampHole(Vector3 position, HoleShape shape, float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x1CC6ED0", Offset = "0x1CC6ED0", VA = "0x1CC6ED0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x1CC7064", Offset = "0x1CC7064", VA = "0x1CC7064")]
		public FogOfWarHole()
		{
		}
	}
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D864", Offset = "0x87D864")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x40021A5")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3D1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8978E8", Offset = "0x8978E8")]
		public bool enableProfileTransition;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89794C", Offset = "0x89794C")]
		public VolumetricFogProfile targetProfile;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FCB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8979B0", Offset = "0x8979B0")]
		public bool enableAlphaTransition;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897A14", Offset = "0x897A14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x897A14", Offset = "0x897A14")]
		public float targetFogAlpha;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897AB0", Offset = "0x897AB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x897AB0", Offset = "0x897AB0")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897B4C", Offset = "0x897B4C")]
		public bool enableFogColorTransition;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3D9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897BB0", Offset = "0x897BB0")]
		public Color targetFogColor;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897C14", Offset = "0x897C14")]
		public bool enableFogSpecularColorTransition;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FCBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897C78", Offset = "0x897C78")]
		public Color targetFogSpecularColor;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897CDC", Offset = "0x897CDC")]
		public bool enableLightColorTransition;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897D40", Offset = "0x897D40")]
		public Color targetLightColor;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897DA4", Offset = "0x897DA4")]
		public float transitionDuration;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3E1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897E08", Offset = "0x897E08")]
		public Collider targetCollider;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897E6C", Offset = "0x897E6C")]
		public bool debugMode;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FCC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x897ED0", Offset = "0x897ED0")]
		public VolumetricFog targetFog;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool cameraInside;

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x1CC7158", Offset = "0x1CC7158", VA = "0x1CC7158")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x1CC7354", Offset = "0x1CC7354", VA = "0x1CC7354")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x1CC79B0", Offset = "0x1CC79B0", VA = "0x1CC79B0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x1CC7FD8", Offset = "0x1CC7FD8", VA = "0x1CC7FD8")]
		public FogVolume()
		{
		}
	}
	[Token(Token = "0x2000403")]
	internal interface IVolumetricFogRenderComponent
	{
		[Token(Token = "0x17000223")]
		VolumetricFog fog
		{
			[Token(Token = "0x6001DD1")]
			get;
			[Token(Token = "0x6001DD2")]
			set;
		}

		[Token(Token = "0x6001DD3")]
		void DestroySelf();
	}
	[Token(Token = "0x2000404")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x40021B7")]
		Clear = 0,
		[Token(Token = "0x40021B8")]
		Mist = 10,
		[Token(Token = "0x40021B9")]
		WindyMist = 11,
		[Token(Token = "0x40021BA")]
		LowClouds = 20,
		[Token(Token = "0x40021BB")]
		SeaClouds = 21,
		[Token(Token = "0x40021BC")]
		GroundFog = 30,
		[Token(Token = "0x40021BD")]
		FrostedGround = 31,
		[Token(Token = "0x40021BE")]
		FoggyLake = 32,
		[Token(Token = "0x40021BF")]
		Fog = 41,
		[Token(Token = "0x40021C0")]
		HeavyFog = 42,
		[Token(Token = "0x40021C1")]
		SandStorm1 = 50,
		[Token(Token = "0x40021C2")]
		Smoke = 51,
		[Token(Token = "0x40021C3")]
		ToxicSwamp = 52,
		[Token(Token = "0x40021C4")]
		SandStorm2 = 53,
		[Token(Token = "0x40021C5")]
		WorldEdge = 200,
		[Token(Token = "0x40021C6")]
		Custom = 1000
	}
	[Token(Token = "0x2000405")]
	public enum SPSR_BEHAVIOUR
	{
		[Token(Token = "0x40021C8")]
		AutoDetectInEditor,
		[Token(Token = "0x40021C9")]
		ForcedOn,
		[Token(Token = "0x40021CA")]
		ForcedOff
	}
	[Token(Token = "0x2000406")]
	public enum TRANSPARENT_MODE
	{
		[Token(Token = "0x40021CC")]
		None,
		[Token(Token = "0x40021CD")]
		Blend
	}
	[Token(Token = "0x2000407")]
	public enum COMPUTE_DEPTH_SCOPE
	{
		[Token(Token = "0x40021CF")]
		OnlyTreeBillboards,
		[Token(Token = "0x40021D0")]
		EverythingInLayer,
		[Token(Token = "0x40021D1")]
		TreeBillboardsAndTransparentObjects
	}
	[Token(Token = "0x2000408")]
	public enum LIGHTING_MODEL
	{
		[Token(Token = "0x40021D3")]
		Classic,
		[Token(Token = "0x40021D4")]
		Natural,
		[Token(Token = "0x40021D5")]
		SingleLight
	}
	[Token(Token = "0x2000409")]
	public enum SUN_SHADOWS_BAKE_MODE
	{
		[Token(Token = "0x40021D7")]
		Realtime,
		[Token(Token = "0x40021D8")]
		Discrete
	}
	[Token(Token = "0x200040A")]
	public enum FOG_VOID_TOPOLOGY
	{
		[Token(Token = "0x40021DA")]
		Sphere,
		[Token(Token = "0x40021DB")]
		Box
	}
	[Token(Token = "0x200040B")]
	public enum FOG_AREA_TOPOLOGY
	{
		[Token(Token = "0x40021DD")]
		Sphere = 1,
		[Token(Token = "0x40021DE")]
		Box
	}
	[Token(Token = "0x200040C")]
	public enum FOG_AREA_SORTING_MODE
	{
		[Token(Token = "0x40021E0")]
		DistanceToCamera,
		[Token(Token = "0x40021E1")]
		Altitude,
		[Token(Token = "0x40021E2")]
		Fixed
	}
	[Token(Token = "0x200040D")]
	public enum FOG_AREA_FOLLOW_MODE
	{
		[Token(Token = "0x40021E4")]
		FullXYZ,
		[Token(Token = "0x40021E5")]
		RestrictToXZPlane
	}
	[Token(Token = "0x200040E")]
	public enum FOG_VISIBILITY_SCOPE
	{
		[Token(Token = "0x40021E7")]
		Global,
		[Token(Token = "0x40021E8")]
		Volume
	}
	[Token(Token = "0x200040F")]
	public struct FOG_TEMPORARY_PROPERTIES
	{
		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public Color color;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FCF4")]
		public float density;
	}
	[Token(Token = "0x2000410")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87D8C8", Offset = "0x87D8C8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x87D8C8", Offset = "0x87D8C8")]
	public class VolumetricFog : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000789")]
		public struct PointLightParams
		{
			[Token(Token = "0x4002D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB57F")]
			public Light light;

			[Token(Token = "0x4002D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			[HideInInspector]
			public VolumetricFogLightParams lightParams;

			[Token(Token = "0x4002D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FE34")]
			public float range;

			[Token(Token = "0x4002D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float rangeMultiplier;

			[Token(Token = "0x4002D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float intensity;

			[Token(Token = "0x4002D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float intensityMultiplier;

			[Token(Token = "0x4002D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB587")]
			public Vector3 position;

			[Token(Token = "0x4002D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public Color color;
		}

		[Token(Token = "0x200078A")]
		private struct FogOfWarTransition
		{
			[Token(Token = "0x4002D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FE3C")]
			public bool enabled;

			[Token(Token = "0x4002D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4002D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int y;

			[Token(Token = "0x4002D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float startTime;

			[Token(Token = "0x4002D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB58F")]
			public float startDelay;

			[Token(Token = "0x4002D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public float duration;

			[Token(Token = "0x4002D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98FE44")]
			public byte initialAlpha;

			[Token(Token = "0x4002D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte targetAlpha;
		}

		[Serializable]
		[Token(Token = "0x200078B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8867CC", Offset = "0x8867CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<VolumetricFog> <>9__630_0;

			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0x2639384", Offset = "0x2639384", VA = "0x2639384")]
			public <>c()
			{
			}

			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0x26393B4", Offset = "0x26393B4", VA = "0x26393B4")]
			internal int <Update>b__630_0(VolumetricFog x, VolumetricFog y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40021EB")]
		public const string SKW_FOG_DISTANCE_ON = "FOG_DISTANCE_ON";

		[Token(Token = "0x40021EC")]
		public const string SKW_LIGHT_SCATTERING = "FOG_SCATTERING_ON";

		[Token(Token = "0x40021ED")]
		public const string SKW_FOG_AREA_BOX = "FOG_AREA_BOX";

		[Token(Token = "0x40021EE")]
		public const string SKW_FOG_AREA_SPHERE = "FOG_AREA_SPHERE";

		[Token(Token = "0x40021EF")]
		public const string SKW_FOG_VOID_BOX = "FOG_VOID_BOX";

		[Token(Token = "0x40021F0")]
		public const string SKW_FOG_VOID_SPHERE = "FOG_VOID_SPHERE";

		[Token(Token = "0x40021F1")]
		public const string SKW_FOG_HAZE_ON = "FOG_HAZE_ON";

		[Token(Token = "0x40021F2")]
		public const string SKW_FOG_OF_WAR_ON = "FOG_OF_WAR_ON";

		[Token(Token = "0x40021F3")]
		public const string SKW_FOG_BLUR = "FOG_BLUR_ON";

		[Token(Token = "0x40021F4")]
		public const string SKW_SUN_SHADOWS = "FOG_SUN_SHADOWS_ON";

		[Token(Token = "0x40021F5")]
		public const string SKW_FOG_USE_XY_PLANE = "FOG_USE_XY_PLANE";

		[Token(Token = "0x40021F6")]
		public const string SKW_FOG_COMPUTE_DEPTH = "FOG_COMPUTE_DEPTH";

		[Token(Token = "0x40021F7")]
		public const string SKW_POINT_LIGHTS = "FOG_POINT_LIGHTS";

		[Token(Token = "0x40021F8")]
		private const string DEPTH_CAM_NAME = "VFMDepthCamera";

		[Token(Token = "0x40021F9")]
		private const string DEPTH_SUN_CAM_NAME = "VFMDepthSunCamera";

		[Token(Token = "0x40021FA")]
		private const string VFM_BUILD_FIRST_INSTALL = "VFMFirstInstall";

		[Token(Token = "0x40021FB")]
		private const string VFM_BUILD_HINT = "VFMBuildHint102RC1";

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD1C")]
		private static VolumetricFog _fog;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool isDirty;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private VolumetricFogProfile _profile;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB448")]
		[SerializeField]
		private bool _profileSync;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD24")]
		[SerializeField]
		private bool _debugPass;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _showInSceneView;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TRANSPARENT_MODE _transparencyBlendMode;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898114", Offset = "0x898114")]
		private float _transparencyBlendPower;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB450")]
		[SerializeField]
		private LayerMask _transparencyLayerMask;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private FOG_VISIBILITY_SCOPE _visibilityScope;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD2C")]
		[SerializeField]
		private Bounds _visibilityVolume;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LIGHTING_MODEL _lightingModel;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _enableMultipleCameras;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _computeDepth;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB458")]
		[SerializeField]
		private COMPUTE_DEPTH_SCOPE _computeDepthScope;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _transparencyCutOff;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9870DC")]
		[SerializeField]
		private bool _renderBeforeTransparent;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8983E4", Offset = "0x8983E4")]
		private float _timeBetweenTextureUpdates;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _sunCopyColor;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB45F")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898498", Offset = "0x898498")]
		private float _density;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898510", Offset = "0x898510")]
		private float _noiseStrength;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898588", Offset = "0x898588")]
		private float _noiseFinalMultiplier;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898604", Offset = "0x898604")]
		private float _noiseSparse;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898684", Offset = "0x898684")]
		private float _distance;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _maxFogLength;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB467")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898738", Offset = "0x898738")]
		private float _maxFogLengthFallOff;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8987B0", Offset = "0x8987B0")]
		private float _distanceFallOff;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898828", Offset = "0x898828")]
		private float _height;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8988A8", Offset = "0x8988A8")]
		private float _heightFallOff;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _deepObscurance;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB46F")]
		[SerializeField]
		private bool _baselineRelativeToCamera;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8989D4", Offset = "0x8989D4")]
		private float _baselineRelativeToCameraDelay;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD44")]
		[SerializeField]
		private float _noiseScale;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898A88", Offset = "0x898A88")]
		private float _alpha;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color _specularColor;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB477")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898B7C", Offset = "0x898B7C")]
		private float _specularThreshold;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898BF4", Offset = "0x898BF4")]
		private float _specularIntensity;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD4C")]
		[SerializeField]
		private Vector3 _lightDirection;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _lightIntensity;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color _lightColor;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898D20", Offset = "0x898D20")]
		private int _updateTextureSpread;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB47F")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898D9C", Offset = "0x898D9C")]
		private float _speed;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD54")]
		[SerializeField]
		private bool _useRealTime;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color _skyColor;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _skyHaze;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _skyNoiseScale;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB487")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898F40", Offset = "0x898F40")]
		private float _skySpeed;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x898FB8", Offset = "0x898FB8")]
		private float _skyNoiseStrength;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD5C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899030", Offset = "0x899030")]
		private float _skyAlpha;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8990A8", Offset = "0x8990A8")]
		private float _skyDepth;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject _character;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private FOG_VOID_TOPOLOGY _fogVoidTopology;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB48F")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89919C", Offset = "0x89919C")]
		private float _fogVoidFallOff;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _fogVoidRadius;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD64")]
		[SerializeField]
		private Vector3 _fogVoidPosition;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _fogVoidDepth;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _fogVoidHeight;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _fogVoidInverted;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB497")]
		[SerializeField]
		private bool _fogAreaShowGizmos;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject _fogAreaCenter;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD6C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8993B8", Offset = "0x8993B8")]
		private float _fogAreaFallOff;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private FOG_AREA_FOLLOW_MODE _fogAreaFollowMode;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private FOG_AREA_TOPOLOGY _fogAreaTopology;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _fogAreaRadius;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB49F")]
		[SerializeField]
		private Vector3 _fogAreaPosition;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _fogAreaDepth;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD74")]
		[SerializeField]
		private float _fogAreaHeight;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private FOG_AREA_SORTING_MODE _fogAreaSortingMode;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _fogAreaRenderOrder;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PointLightParams[] pointLightParams;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4A7")]
		[SerializeField]
		private bool pointLightDataMigrated;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector4[] pointLightColorBuffer;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD7C")]
		private Vector4[] pointLightPositionBuffer;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private GameObject[] _pointLights;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float[] _pointLightRanges;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float[] _pointLightIntensities;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4AF")]
		[SerializeField]
		private float[] _pointLightIntensitiesMultiplier;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Vector3[] _pointLightPositions;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98616C")]
		[SerializeField]
		private Color[] _pointLightColors;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _pointLightTrackingAuto;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Transform _pointLightTrackingPivot;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _pointLightTrackingCount;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4B4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899870", Offset = "0x899870")]
		private float _pointLightTrackingCheckInterval;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private float _pointLightTrackingNewLightsCheckInterval;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9862D4")]
		[SerializeField]
		private float _pointLightInscattering;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _pointLightIntensity;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _pointLightInsideAtten;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8999D8", Offset = "0x8999D8")]
		private int _downsampling;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4BA")]
		[SerializeField]
		private bool _forceComposition;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _edgeImprove;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9870E4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899ACC", Offset = "0x899ACC")]
		private float _edgeThreshold;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899B50", Offset = "0x899B50")]
		private float _stepping;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899BCC", Offset = "0x899BCC")]
		private float _steppingNear;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _dithering;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4C1")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899C80", Offset = "0x899C80")]
		private float _ditherStrength;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899D00", Offset = "0x899D00")]
		private float _jitterStrength;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD84")]
		[SerializeField]
		private bool _lightScatteringEnabled;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899DB4", Offset = "0x899DB4")]
		private float _lightScatteringDiffusion;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899E2C", Offset = "0x899E2C")]
		private float _lightScatteringSpread;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899EA4", Offset = "0x899EA4")]
		private int _lightScatteringSamples;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4C9")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899F20", Offset = "0x899F20")]
		private float _lightScatteringWeight;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x899F98", Offset = "0x899F98")]
		private float _lightScatteringIllumination;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD8C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A010", Offset = "0x89A010")]
		private float _lightScatteringDecay;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A094", Offset = "0x89A094")]
		private float _lightScatteringExposure;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A110", Offset = "0x89A110")]
		private float _lightScatteringJittering;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A188", Offset = "0x89A188")]
		private int _lightScatteringBlurDownscale;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4D1")]
		[SerializeField]
		private bool _fogBlur;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A240", Offset = "0x89A240")]
		private float _fogBlurDepth;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD94")]
		[SerializeField]
		private bool _sunShadows;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private LayerMask _sunShadowsLayerMask;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A330", Offset = "0x89A330")]
		private float _sunShadowsStrength;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _sunShadowsBias;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4D9")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A3E4", Offset = "0x89A3E4")]
		private float _sunShadowsJitterStrength;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A45C", Offset = "0x89A45C")]
		private int _sunShadowsResolution;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FD9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A4D4", Offset = "0x89A4D4")]
		private float _sunShadowsMaxDistance;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SUN_SHADOWS_BAKE_MODE _sunShadowsBakeMode;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _sunShadowsRefreshInterval;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A5C8", Offset = "0x89A5C8")]
		private float _sunShadowsCancellation;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4E1")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A640", Offset = "0x89A640")]
		private float _turbulenceStrength;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _useXYPlane;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDA4")]
		[SerializeField]
		private bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public SPSR_BEHAVIOUR _spsrBehaviour;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _reduceFlickerBigWorlds;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _enableMask;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4E9")]
		[SerializeField]
		private LayerMask _maskLayer;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A820", Offset = "0x89A820")]
		private int _maskDownsampling;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDAC")]
		public bool isRendering;

		[NonSerialized]
		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distanceToCameraMin;

		[NonSerialized]
		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distanceToCameraMax;

		[NonSerialized]
		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distanceToCamera;

		[NonSerialized]
		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4F1")]
		public float distanceToCameraYAxis;

		[NonSerialized]
		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public FOG_TEMPORARY_PROPERTIES temporaryProperties;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDB4")]
		public VolumetricFog fogRenderer;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private VolumetricFog[] allFogRenderers;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isPartOfScene;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int noiseTextureSize;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4F9")]
		private float initialFogAlpha;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float targetFogAlpha;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDBC")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool transitionAlpha;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool transitionColor;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB501")]
		private bool transitionSpecularColor;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool transitionLightColor;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDC4")]
		private bool transitionProfile;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool targetColorActive;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool targetSpecularColorActive;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool targetLightColorActive;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB509")]
		private Color initialFogColor;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color targetFogColor;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDCC")]
		private Color initialFogSpecularColor;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color targetFogSpecularColor;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color initialLightColor;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color targetLightColor;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB511")]
		private float transitionDuration;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float transitionStartTime;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9870EC")]
		private float currentFogAlpha;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color currentFogColor;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color currentFogSpecularColor;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB518")]
		private Color currentLightColor;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private VolumetricFogProfile initialProfile;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDD4")]
		private VolumetricFogProfile targetProfile;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float oldBaselineRelativeCameraY;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentFogAltitude;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float skyHazeSpeedAcum;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB520")]
		private Color skyHazeLightColor;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool _hasCamera;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDDC")]
		private bool _hasCameraChecked;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera mainCamera;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<string> shaderKeywords;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material blurMat;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB528")]
		private RenderBuffer[] mrt;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int _renderingInstancesCount;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDE4")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int lastFrameCount;

		[NonSerialized]
		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material fogMat;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture depthTexture;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB530")]
		private RenderTexture depthSunTexture;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTexture reducedDestination;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDEC")]
		private Light[] lastFoundLights;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Light[] lightBuffer;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Light[] currentLights;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float trackPointAutoLastTime;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB538")]
		private float trackPointCheckNewLightsLastTime;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector4 black;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDF4")]
		private Shader depthShader;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Shader depthShaderAndTrans;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject depthCamObj;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Camera depthCam;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB540")]
		private float lastTextureUpdate;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 windSpeedAcum;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FDFC")]
		private Texture2D adjustedTexture;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color[] noiseColors;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color[] adjustedColors;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float sunLightIntensity;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB548")]
		private bool needUpdateTexture;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private bool hasChangeAdjustedColorsAlpha;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE04")]
		private int updatingTextureSlice;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color updatingTextureLightColor;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color lastRenderSettingsAmbientLight;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastRenderSettingsAmbientIntensity;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB550")]
		private int lastFrameAppliedChaos;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int lastFrameAppliedWind;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE0C")]
		private Light sunLight;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 oldSunPos;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float sunFade;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject depthSunCamObj;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB558")]
		private Camera depthSunCam;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Shader depthSunShader;

		[NonSerialized]
		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE14")]
		public bool needUpdateDepthSunTexture;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float lastShadowUpdateFrame;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool sunShadowsActive;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentDepthSunTextureRes;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB560")]
		private Texture2D adjustedChaosTexture;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material chaosLerpMat;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE1C")]
		private float turbAcum;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float deltaTime;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float timeOfLastRender;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<VolumetricFog> fogInstances;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB568")]
		private List<VolumetricFog> fogRenderInstances;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private MeshRenderer mr;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9870F4")]
		private float lastTimeSortInstances;

		[Token(Token = "0x40022E1")]
		private const float FOG_INSTANCES_SORT_INTERVAL = 2f;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 lastCamPos;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool needResort;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB56F")]
		private CommandBuffer maskCommandBuffer;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private RenderTextureDescriptor rtMaskDesc;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE24")]
		private Material maskMaterial;

		[Token(Token = "0x40022E7")]
		private const int MAX_SIMULTANEOUS_TRANSITIONS = 10000;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB577")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A950", Offset = "0x89A950")]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89A9CC", Offset = "0x89A9CC")]
		private float _fogOfWarRestoreDelay;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AA44", Offset = "0x89AA44")]
		private float _fogOfWarRestoreDuration;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AABC", Offset = "0x89AABC")]
		private float _fogOfWarSmoothness;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _maskEditorEnabled;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB57F")]
		[SerializeField]
		private MASK_TEXTURE_BRUSH_MODE _maskBrushMode;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89ABAC", Offset = "0x89ABAC")]
		private int _maskBrushWidth;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AC28", Offset = "0x89AC28")]
		private float _maskBrushFuzziness;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89ACA0", Offset = "0x89ACA0")]
		private float _maskBrushOpacity;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Texture2D _fogOfWarTexture;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB587")]
		private FogOfWarTransition[] fowTransitionList;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private int lastTransitionPos;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE3C")]
		private Dictionary<int, int> fowTransitionIndices;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool requiresTextureUpload;

		[Token(Token = "0x40022FA")]
		public const int MAX_POINT_LIGHTS = 6;

		[Token(Token = "0x40022FB")]
		public const bool LIGHT_SCATTERING_BLUR_ENABLED = false;

		[Token(Token = "0x17000224")]
		public static VolumetricFog instance
		{
			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x2609514", Offset = "0x2609514", VA = "0x2609514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x2609978", Offset = "0x2609978", VA = "0x2609978")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x26099A8", Offset = "0x26099A8", VA = "0x26099A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public VolumetricFogProfile profile
		{
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x260D2C0", Offset = "0x260D2C0", VA = "0x260D2C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x260D2F0", Offset = "0x260D2F0", VA = "0x260D2F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public bool profileSync
		{
			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x260E494", Offset = "0x260E494", VA = "0x260E494")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x260E4D8", Offset = "0x260E4D8", VA = "0x260E4D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x260E58C", Offset = "0x260E58C", VA = "0x260E58C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x260E5D0", Offset = "0x260E5D0", VA = "0x260E5D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public bool debugDepthPass
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x260E684", Offset = "0x260E684", VA = "0x260E684")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0x260E6C8", Offset = "0x260E6C8", VA = "0x260E6C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public bool showInSceneView
		{
			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x260E77C", Offset = "0x260E77C", VA = "0x260E77C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0x260E7C0", Offset = "0x260E7C0", VA = "0x260E7C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public TRANSPARENT_MODE transparencyBlendMode
		{
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x260E874", Offset = "0x260E874", VA = "0x260E874")]
			get
			{
				return default(TRANSPARENT_MODE);
			}
			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0x260E8A4", Offset = "0x260E8A4", VA = "0x260E8A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public float transparencyBlendPower
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x260EB58", Offset = "0x260EB58", VA = "0x260EB58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0x260EB88", Offset = "0x260EB88", VA = "0x260EB88")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public LayerMask transparencyLayerMask
		{
			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x260EC34", Offset = "0x260EC34", VA = "0x260EC34")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0x260EC7C", Offset = "0x260EC7C", VA = "0x260EC7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public FOG_VISIBILITY_SCOPE visibilityScope
		{
			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0x260EDE8", Offset = "0x260EDE8", VA = "0x260EDE8")]
			get
			{
				return default(FOG_VISIBILITY_SCOPE);
			}
			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0x260EE18", Offset = "0x260EE18", VA = "0x260EE18")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public Bounds visibilityVolume
		{
			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x260EE98", Offset = "0x260EE98", VA = "0x260EE98")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x260EEC0", Offset = "0x260EEC0", VA = "0x260EEC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public LIGHTING_MODEL lightingModel
		{
			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0x260EFF8", Offset = "0x260EFF8", VA = "0x260EFF8")]
			get
			{
				return default(LIGHTING_MODEL);
			}
			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0x260F028", Offset = "0x260F028", VA = "0x260F028")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public bool enableMultipleCameras
		{
			[Token(Token = "0x6001DED")]
			[Address(RVA = "0x260FC1C", Offset = "0x260FC1C", VA = "0x260FC1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0x260FC60", Offset = "0x260FC60", VA = "0x260FC60")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public bool computeDepth
		{
			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0x2610044", Offset = "0x2610044", VA = "0x2610044")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0x2610088", Offset = "0x2610088", VA = "0x2610088")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public COMPUTE_DEPTH_SCOPE computeDepthScope
		{
			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0x2610160", Offset = "0x2610160", VA = "0x2610160")]
			get
			{
				return default(COMPUTE_DEPTH_SCOPE);
			}
			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0x2610190", Offset = "0x2610190", VA = "0x2610190")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public float transparencyCutOff
		{
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x2610264", Offset = "0x2610264", VA = "0x2610264")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x2610294", Offset = "0x2610294", VA = "0x2610294")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public bool renderBeforeTransparent
		{
			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0x2610340", Offset = "0x2610340", VA = "0x2610340")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0x2610384", Offset = "0x2610384", VA = "0x2610384")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public GameObject sun
		{
			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0x2610494", Offset = "0x2610494", VA = "0x2610494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x26104C4", Offset = "0x26104C4", VA = "0x26104C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public float timeBetweenTextureUpdates
		{
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x2610854", Offset = "0x2610854", VA = "0x2610854")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0x2610884", Offset = "0x2610884", VA = "0x2610884")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public bool sunCopyColor
		{
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x261090C", Offset = "0x261090C", VA = "0x261090C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x2610950", Offset = "0x2610950", VA = "0x2610950")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public float density
		{
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x2610A28", Offset = "0x2610A28", VA = "0x2610A28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x2610A58", Offset = "0x2610A58", VA = "0x2610A58")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public float noiseStrength
		{
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x2610EA4", Offset = "0x2610EA4", VA = "0x2610EA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E00")]
			[Address(RVA = "0x2610ED4", Offset = "0x2610ED4", VA = "0x2610ED4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public float noiseFinalMultiplier
		{
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0x2610FA4", Offset = "0x2610FA4", VA = "0x2610FA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0x2610FD4", Offset = "0x2610FD4", VA = "0x2610FD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public float noiseSparse
		{
			[Token(Token = "0x6001E03")]
			[Address(RVA = "0x26110A4", Offset = "0x26110A4", VA = "0x26110A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0x26110D4", Offset = "0x26110D4", VA = "0x26110D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public float distance
		{
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x26111A4", Offset = "0x26111A4", VA = "0x26111A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0x26111D4", Offset = "0x26111D4", VA = "0x26111D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public float maxFogLength
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x261128C", Offset = "0x261128C", VA = "0x261128C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x26112BC", Offset = "0x26112BC", VA = "0x26112BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public float maxFogLengthFallOff
		{
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x2611368", Offset = "0x2611368", VA = "0x2611368")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0x2611398", Offset = "0x2611398", VA = "0x2611398")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public float distanceFallOff
		{
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x2611444", Offset = "0x2611444", VA = "0x2611444")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0x2611474", Offset = "0x2611474", VA = "0x2611474")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public float height
		{
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x261152C", Offset = "0x261152C", VA = "0x261152C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0x261155C", Offset = "0x261155C", VA = "0x261155C")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public float heightFallOff
		{
			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x26116F0", Offset = "0x26116F0", VA = "0x26116F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0x2611720", Offset = "0x2611720", VA = "0x2611720")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public float deepObscurance
		{
			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x261189C", Offset = "0x261189C", VA = "0x261189C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E12")]
			[Address(RVA = "0x26118CC", Offset = "0x26118CC", VA = "0x26118CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public float baselineHeight
		{
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x2611A6C", Offset = "0x2611A6C", VA = "0x2611A6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x2611A9C", Offset = "0x2611A9C", VA = "0x2611A9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public bool baselineRelativeToCamera
		{
			[Token(Token = "0x6001E15")]
			[Address(RVA = "0x2611B54", Offset = "0x2611B54", VA = "0x2611B54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E16")]
			[Address(RVA = "0x2611B98", Offset = "0x2611B98", VA = "0x2611B98")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public float baselineRelativeToCameraDelay
		{
			[Token(Token = "0x6001E17")]
			[Address(RVA = "0x2611C7C", Offset = "0x2611C7C", VA = "0x2611C7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E18")]
			[Address(RVA = "0x2611CAC", Offset = "0x2611CAC", VA = "0x2611CAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public float noiseScale
		{
			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x2611D58", Offset = "0x2611D58", VA = "0x2611D58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0x2611D88", Offset = "0x2611D88", VA = "0x2611D88")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public float alpha
		{
			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0x2611E6C", Offset = "0x2611E6C", VA = "0x2611E6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0x2611E9C", Offset = "0x2611E9C", VA = "0x2611E9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public Color color
		{
			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0x2611F6C", Offset = "0x2611F6C", VA = "0x2611F6C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0x2611FB4", Offset = "0x2611FB4", VA = "0x2611FB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public Color specularColor
		{
			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0x26120E4", Offset = "0x26120E4", VA = "0x26120E4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x261212C", Offset = "0x261212C", VA = "0x261212C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public float specularThreshold
		{
			[Token(Token = "0x6001E21")]
			[Address(RVA = "0x2612270", Offset = "0x2612270", VA = "0x2612270")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x26122A0", Offset = "0x26122A0", VA = "0x26122A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public float specularIntensity
		{
			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x2612348", Offset = "0x2612348", VA = "0x2612348")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x2612378", Offset = "0x2612378", VA = "0x2612378")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public Vector3 lightDirection
		{
			[Token(Token = "0x6001E25")]
			[Address(RVA = "0x261243C", Offset = "0x261243C", VA = "0x261243C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E26")]
			[Address(RVA = "0x261247C", Offset = "0x261247C", VA = "0x261247C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public float lightIntensity
		{
			[Token(Token = "0x6001E27")]
			[Address(RVA = "0x2612618", Offset = "0x2612618", VA = "0x2612618")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0x2612648", Offset = "0x2612648", VA = "0x2612648")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public Color lightColor
		{
			[Token(Token = "0x6001E29")]
			[Address(RVA = "0x261270C", Offset = "0x261270C", VA = "0x261270C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0x2612754", Offset = "0x2612754", VA = "0x2612754")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public int updateTextureSpread
		{
			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0x2612894", Offset = "0x2612894", VA = "0x2612894")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x26128C4", Offset = "0x26128C4", VA = "0x26128C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public float speed
		{
			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0x2612944", Offset = "0x2612944", VA = "0x2612944")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x2612974", Offset = "0x2612974", VA = "0x2612974")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0x2612FCC", Offset = "0x2612FCC", VA = "0x2612FCC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E30")]
			[Address(RVA = "0x261300C", Offset = "0x261300C", VA = "0x261300C")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public bool useRealTime
		{
			[Token(Token = "0x6001E31")]
			[Address(RVA = "0x26131C4", Offset = "0x26131C4", VA = "0x26131C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x2613208", Offset = "0x2613208", VA = "0x2613208")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public Color skyColor
		{
			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x26132BC", Offset = "0x26132BC", VA = "0x26132BC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x2613304", Offset = "0x2613304", VA = "0x2613304")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public float skyHaze
		{
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x26133FC", Offset = "0x26133FC", VA = "0x26133FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x261342C", Offset = "0x261342C", VA = "0x261342C")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public float skyNoiseScale
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x26134F0", Offset = "0x26134F0", VA = "0x26134F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x2613520", Offset = "0x2613520", VA = "0x2613520")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public float skySpeed
		{
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x26135CC", Offset = "0x26135CC", VA = "0x26135CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x26135FC", Offset = "0x26135FC", VA = "0x26135FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x2613690", Offset = "0x2613690", VA = "0x2613690")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0x26136C0", Offset = "0x26136C0", VA = "0x26136C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public float skyAlpha
		{
			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x2613784", Offset = "0x2613784", VA = "0x2613784")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x26137B4", Offset = "0x26137B4", VA = "0x26137B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public float skyDepth
		{
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x261386C", Offset = "0x261386C", VA = "0x261386C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x261389C", Offset = "0x261389C", VA = "0x261389C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public GameObject character
		{
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x2613954", Offset = "0x2613954", VA = "0x2613954")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0x2613984", Offset = "0x2613984", VA = "0x2613984")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public FOG_VOID_TOPOLOGY fogVoidTopology
		{
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0x2613ACC", Offset = "0x2613ACC", VA = "0x2613ACC")]
			get
			{
				return default(FOG_VOID_TOPOLOGY);
			}
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0x2613AFC", Offset = "0x2613AFC", VA = "0x2613AFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public float fogVoidFallOff
		{
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0x2613BA0", Offset = "0x2613BA0", VA = "0x2613BA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0x2613BD0", Offset = "0x2613BD0", VA = "0x2613BD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public float fogVoidRadius
		{
			[Token(Token = "0x6001E47")]
			[Address(RVA = "0x2613C88", Offset = "0x2613C88", VA = "0x2613C88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E48")]
			[Address(RVA = "0x2613CB8", Offset = "0x2613CB8", VA = "0x2613CB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public Vector3 fogVoidPosition
		{
			[Token(Token = "0x6001E49")]
			[Address(RVA = "0x2613D70", Offset = "0x2613D70", VA = "0x2613D70")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x2613DB0", Offset = "0x2613DB0", VA = "0x2613DB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public float fogVoidDepth
		{
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x2613F3C", Offset = "0x2613F3C", VA = "0x2613F3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x2613F6C", Offset = "0x2613F6C", VA = "0x2613F6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public float fogVoidHeight
		{
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x2614024", Offset = "0x2614024", VA = "0x2614024")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0x2614054", Offset = "0x2614054", VA = "0x2614054")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8BEEE4", Offset = "0x8BEEE4")]
		public bool fogVoidInverted
		{
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0x261410C", Offset = "0x261410C", VA = "0x261410C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x2614150", Offset = "0x2614150", VA = "0x2614150")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public bool fogAreaShowGizmos
		{
			[Token(Token = "0x6001E51")]
			[Address(RVA = "0x261419C", Offset = "0x261419C", VA = "0x261419C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x26141E0", Offset = "0x26141E0", VA = "0x26141E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public GameObject fogAreaCenter
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0x26142B8", Offset = "0x26142B8", VA = "0x26142B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0x26142E8", Offset = "0x26142E8", VA = "0x26142E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public float fogAreaFallOff
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0x2614430", Offset = "0x2614430", VA = "0x2614430")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0x2614460", Offset = "0x2614460", VA = "0x2614460")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public FOG_AREA_FOLLOW_MODE fogAreaFollowMode
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x261450C", Offset = "0x261450C", VA = "0x261450C")]
			get
			{
				return default(FOG_AREA_FOLLOW_MODE);
			}
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x261453C", Offset = "0x261453C", VA = "0x261453C")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public FOG_AREA_TOPOLOGY fogAreaTopology
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x26145E0", Offset = "0x26145E0", VA = "0x26145E0")]
			get
			{
				return default(FOG_AREA_TOPOLOGY);
			}
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0x2614610", Offset = "0x2614610", VA = "0x2614610")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public float fogAreaRadius
		{
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x26146B4", Offset = "0x26146B4", VA = "0x26146B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0x26146E4", Offset = "0x26146E4", VA = "0x26146E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public Vector3 fogAreaPosition
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0x2614790", Offset = "0x2614790", VA = "0x2614790")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x26147D0", Offset = "0x26147D0", VA = "0x26147D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public float fogAreaDepth
		{
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x2614954", Offset = "0x2614954", VA = "0x2614954")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0x2614984", Offset = "0x2614984", VA = "0x2614984")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public float fogAreaHeight
		{
			[Token(Token = "0x6001E61")]
			[Address(RVA = "0x2614A30", Offset = "0x2614A30", VA = "0x2614A30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0x2614A60", Offset = "0x2614A60", VA = "0x2614A60")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public FOG_AREA_SORTING_MODE fogAreaSortingMode
		{
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0x2614B0C", Offset = "0x2614B0C", VA = "0x2614B0C")]
			get
			{
				return default(FOG_AREA_SORTING_MODE);
			}
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x2614B3C", Offset = "0x2614B3C", VA = "0x2614B3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public int fogAreaRenderOrder
		{
			[Token(Token = "0x6001E65")]
			[Address(RVA = "0x2614BD0", Offset = "0x2614BD0", VA = "0x2614BD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0x2614C00", Offset = "0x2614C00", VA = "0x2614C00")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public bool pointLightTrackAuto
		{
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0x2614C94", Offset = "0x2614C94", VA = "0x2614C94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x2614CD8", Offset = "0x2614CD8", VA = "0x2614CD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public Transform pointLightTrackingPivot
		{
			[Token(Token = "0x6001E69")]
			[Address(RVA = "0x26156B4", Offset = "0x26156B4", VA = "0x26156B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x26156E4", Offset = "0x26156E4", VA = "0x26156E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public int pointLightTrackingCount
		{
			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0x2615848", Offset = "0x2615848", VA = "0x2615848")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0x2615878", Offset = "0x2615878", VA = "0x2615878")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public float pointLightTrackingCheckInterval
		{
			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0x2616434", Offset = "0x2616434", VA = "0x2616434")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0x2616464", Offset = "0x2616464", VA = "0x2616464")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public float pointLightTrackingNewLightsCheckInterval
		{
			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0x2616510", Offset = "0x2616510", VA = "0x2616510")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E70")]
			[Address(RVA = "0x2616540", Offset = "0x2616540", VA = "0x2616540")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public float pointLightInscattering
		{
			[Token(Token = "0x6001E71")]
			[Address(RVA = "0x26165EC", Offset = "0x26165EC", VA = "0x26165EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E72")]
			[Address(RVA = "0x261661C", Offset = "0x261661C", VA = "0x261661C")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public float pointLightIntensity
		{
			[Token(Token = "0x6001E73")]
			[Address(RVA = "0x26166A4", Offset = "0x26166A4", VA = "0x26166A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0x26166D4", Offset = "0x26166D4", VA = "0x26166D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public float pointLightInsideAtten
		{
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0x261675C", Offset = "0x261675C", VA = "0x261675C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x261678C", Offset = "0x261678C", VA = "0x261678C")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public int downsampling
		{
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0x2616838", Offset = "0x2616838", VA = "0x2616838")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E78")]
			[Address(RVA = "0x2616868", Offset = "0x2616868", VA = "0x2616868")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public bool forceComposition
		{
			[Token(Token = "0x6001E79")]
			[Address(RVA = "0x26168F4", Offset = "0x26168F4", VA = "0x26168F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x2616938", Offset = "0x2616938", VA = "0x2616938")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public bool edgeImprove
		{
			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x2616A1C", Offset = "0x2616A1C", VA = "0x2616A1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0x2616A60", Offset = "0x2616A60", VA = "0x2616A60")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public float edgeThreshold
		{
			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x2616B44", Offset = "0x2616B44", VA = "0x2616B44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0x2616B74", Offset = "0x2616B74", VA = "0x2616B74")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public float stepping
		{
			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x2616C2C", Offset = "0x2616C2C", VA = "0x2616C2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x2616C5C", Offset = "0x2616C5C", VA = "0x2616C5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public float steppingNear
		{
			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x2616D14", Offset = "0x2616D14", VA = "0x2616D14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x2616D44", Offset = "0x2616D44", VA = "0x2616D44")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public bool dithering
		{
			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x2616DFC", Offset = "0x2616DFC", VA = "0x2616DFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x2616E40", Offset = "0x2616E40", VA = "0x2616E40")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public float ditherStrength
		{
			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x2616F18", Offset = "0x2616F18", VA = "0x2616F18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x2616F48", Offset = "0x2616F48", VA = "0x2616F48")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public float jitterStrength
		{
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x2616FF4", Offset = "0x2616FF4", VA = "0x2616FF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x2617024", Offset = "0x2617024", VA = "0x2617024")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public bool lightScatteringEnabled
		{
			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x26170D0", Offset = "0x26170D0", VA = "0x26170D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0x2617114", Offset = "0x2617114", VA = "0x2617114")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public float lightScatteringDiffusion
		{
			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0x26171EC", Offset = "0x26171EC", VA = "0x26171EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0x261721C", Offset = "0x261721C", VA = "0x261721C")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public float lightScatteringSpread
		{
			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0x26172C8", Offset = "0x26172C8", VA = "0x26172C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x26172F8", Offset = "0x26172F8", VA = "0x26172F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public int lightScatteringSamples
		{
			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x26173A4", Offset = "0x26173A4", VA = "0x26173A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x26173D4", Offset = "0x26173D4", VA = "0x26173D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public float lightScatteringWeight
		{
			[Token(Token = "0x6001E91")]
			[Address(RVA = "0x2617478", Offset = "0x2617478", VA = "0x2617478")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x26174A8", Offset = "0x26174A8", VA = "0x26174A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public float lightScatteringIllumination
		{
			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x2617554", Offset = "0x2617554", VA = "0x2617554")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x2617584", Offset = "0x2617584", VA = "0x2617584")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public float lightScatteringDecay
		{
			[Token(Token = "0x6001E95")]
			[Address(RVA = "0x2617630", Offset = "0x2617630", VA = "0x2617630")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E96")]
			[Address(RVA = "0x2617660", Offset = "0x2617660", VA = "0x2617660")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public float lightScatteringExposure
		{
			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x261770C", Offset = "0x261770C", VA = "0x261770C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x261773C", Offset = "0x261773C", VA = "0x261773C")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public float lightScatteringJittering
		{
			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x26177E8", Offset = "0x26177E8", VA = "0x26177E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x2617818", Offset = "0x2617818", VA = "0x2617818")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public int lightScatteringBlurDownscale
		{
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x26178C4", Offset = "0x26178C4", VA = "0x26178C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x26178F4", Offset = "0x26178F4", VA = "0x26178F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public bool fogBlur
		{
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x2617998", Offset = "0x2617998", VA = "0x2617998")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x26179DC", Offset = "0x26179DC", VA = "0x26179DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public float fogBlurDepth
		{
			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x2617AB4", Offset = "0x2617AB4", VA = "0x2617AB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x2617AE4", Offset = "0x2617AE4", VA = "0x2617AE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public bool sunShadows
		{
			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x2617B90", Offset = "0x2617B90", VA = "0x2617B90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x2617BD4", Offset = "0x2617BD4", VA = "0x2617BD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public LayerMask sunShadowsLayerMask
		{
			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x2617FF4", Offset = "0x2617FF4", VA = "0x2617FF4")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x261803C", Offset = "0x261803C", VA = "0x261803C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public float sunShadowsStrength
		{
			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x26181A8", Offset = "0x26181A8", VA = "0x26181A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x26181D8", Offset = "0x26181D8", VA = "0x26181D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public float sunShadowsBias
		{
			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x2618284", Offset = "0x2618284", VA = "0x2618284")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x26182B4", Offset = "0x26182B4", VA = "0x26182B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public float sunShadowsJitterStrength
		{
			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0x2618370", Offset = "0x2618370", VA = "0x2618370")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x26183A0", Offset = "0x26183A0", VA = "0x26183A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public int sunShadowsResolution
		{
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x261844C", Offset = "0x261844C", VA = "0x261844C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x261847C", Offset = "0x261847C", VA = "0x261847C")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public float sunShadowsMaxDistance
		{
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x261853C", Offset = "0x261853C", VA = "0x261853C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0x261856C", Offset = "0x261856C", VA = "0x261856C")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public SUN_SHADOWS_BAKE_MODE sunShadowsBakeMode
		{
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x2618628", Offset = "0x2618628", VA = "0x2618628")]
			get
			{
				return default(SUN_SHADOWS_BAKE_MODE);
			}
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x2618658", Offset = "0x2618658", VA = "0x2618658")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public float sunShadowsRefreshInterval
		{
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x261870C", Offset = "0x261870C", VA = "0x261870C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x261873C", Offset = "0x261873C", VA = "0x261873C")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public float sunShadowsCancellation
		{
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x26187E8", Offset = "0x26187E8", VA = "0x26187E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x2618818", Offset = "0x2618818", VA = "0x2618818")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public float turbulenceStrength
		{
			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x26188C4", Offset = "0x26188C4", VA = "0x26188C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x26188F4", Offset = "0x26188F4", VA = "0x26188F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public bool useXYPlane
		{
			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0x26189D8", Offset = "0x26189D8", VA = "0x26189D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x2618A1C", Offset = "0x2618A1C", VA = "0x2618A1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x2618B1C", Offset = "0x2618B1C", VA = "0x2618B1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x2618B60", Offset = "0x2618B60", VA = "0x2618B60")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public SPSR_BEHAVIOUR spsrBehaviour
		{
			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x2618C14", Offset = "0x2618C14", VA = "0x2618C14")]
			get
			{
				return default(SPSR_BEHAVIOUR);
			}
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x2618C44", Offset = "0x2618C44", VA = "0x2618C44")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public bool reduceFlickerBigWorlds
		{
			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x2618CC4", Offset = "0x2618CC4", VA = "0x2618CC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x2618D08", Offset = "0x2618D08", VA = "0x2618D08")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public bool enableMask
		{
			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x2618DBC", Offset = "0x2618DBC", VA = "0x2618DBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x2618E00", Offset = "0x2618E00", VA = "0x2618E00")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public LayerMask maskLayer
		{
			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x2619958", Offset = "0x2619958", VA = "0x2619958")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0x26199A0", Offset = "0x26199A0", VA = "0x26199A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public int maskDownsampling
		{
			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0x2619B14", Offset = "0x2619B14", VA = "0x2619B14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0x2619B44", Offset = "0x2619B44", VA = "0x2619B44")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public Camera fogCamera
		{
			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x2619BD8", Offset = "0x2619BD8", VA = "0x2619BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		public int renderingInstancesCount
		{
			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x2619C08", Offset = "0x2619C08", VA = "0x2619C08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700029F")]
		public List<VolumetricFog> renderingInstances
		{
			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x2619C38", Offset = "0x2619C38", VA = "0x2619C38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		public List<VolumetricFog> instances
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x2619C68", Offset = "0x2619C68", VA = "0x2619C68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		public bool hasCamera
		{
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x2619C98", Offset = "0x2619C98", VA = "0x2619C98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A2")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x26334B4", Offset = "0x26334B4", VA = "0x26334B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x26334F8", Offset = "0x26334F8", VA = "0x26334F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x26335DC", Offset = "0x26335DC", VA = "0x26335DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x263361C", Offset = "0x263361C", VA = "0x263361C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x26337A0", Offset = "0x26337A0", VA = "0x26337A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x26337E0", Offset = "0x26337E0", VA = "0x26337E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x26339C4", Offset = "0x26339C4", VA = "0x26339C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0x26339F4", Offset = "0x26339F4", VA = "0x26339F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public float fogOfWarRestoreDelay
		{
			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x2633AC8", Offset = "0x2633AC8", VA = "0x2633AC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0x2633AF8", Offset = "0x2633AF8", VA = "0x2633AF8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public float fogOfWarRestoreDuration
		{
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x2633B80", Offset = "0x2633B80", VA = "0x2633B80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F20")]
			[Address(RVA = "0x2633BB0", Offset = "0x2633BB0", VA = "0x2633BB0")]
			set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public float fogOfWarSmoothness
		{
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0x2633C38", Offset = "0x2633C38", VA = "0x2633C38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x2633C68", Offset = "0x2633C68", VA = "0x2633C68")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public bool maskEditorEnabled
		{
			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x2633CF0", Offset = "0x2633CF0", VA = "0x2633CF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x2633D34", Offset = "0x2633D34", VA = "0x2633D34")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public MASK_TEXTURE_BRUSH_MODE maskBrushMode
		{
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x2633DD0", Offset = "0x2633DD0", VA = "0x2633DD0")]
			get
			{
				return default(MASK_TEXTURE_BRUSH_MODE);
			}
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x2633E00", Offset = "0x2633E00", VA = "0x2633E00")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public int maskBrushWidth
		{
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x2633E68", Offset = "0x2633E68", VA = "0x2633E68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x2633E98", Offset = "0x2633E98", VA = "0x2633E98")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public float maskBrushFuzziness
		{
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x2633F00", Offset = "0x2633F00", VA = "0x2633F00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x2633F30", Offset = "0x2633F30", VA = "0x2633F30")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public float maskBrushOpacity
		{
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x2633FA0", Offset = "0x2633FA0", VA = "0x2633FA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0x2633FD0", Offset = "0x2633FD0", VA = "0x2633FD0")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public Texture2D fogOfWarTexture
		{
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x2634040", Offset = "0x2634040", VA = "0x2634040")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x2634070", Offset = "0x2634070", VA = "0x2634070")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public Color32[] fogOfWarTextureData
		{
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0x2637BD8", Offset = "0x2637BD8", VA = "0x2637BD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0x2637C08", Offset = "0x2637C08", VA = "0x2637C08")]
			set
			{
			}
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x2619E28", Offset = "0x2619E28", VA = "0x2619E28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x261B620", Offset = "0x261B620", VA = "0x261B620")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x261B7D0", Offset = "0x261B7D0", VA = "0x261B7D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x261C48C", Offset = "0x261C48C", VA = "0x261C48C")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x261C5AC", Offset = "0x261C5AC", VA = "0x261C5AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x261C650", Offset = "0x261C650", VA = "0x261C650")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x2624ABC", Offset = "0x2624ABC", VA = "0x2624ABC")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x262615C", Offset = "0x262615C", VA = "0x262615C")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x261A9A8", Offset = "0x261A9A8", VA = "0x261A9A8")]
		private void FindMainCamera()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x261A73C", Offset = "0x261A73C", VA = "0x261A73C")]
		private bool IsPartOfScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x261AC80", Offset = "0x261AC80", VA = "0x261AC80")]
		private void InitFogMaterial()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x260E954", Offset = "0x260E954", VA = "0x260E954")]
		private void UpdateRenderComponents()
		{
		}

		[Token(Token = "0x6001ED6")]
		private void DestroyRenderComponent<T>() where T : IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6001ED7")]
		private void AssignRenderComponent<T>() where T : Component, IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x2626574", Offset = "0x2626574", VA = "0x2626574")]
		private void RegisterFogArea(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x261C258", Offset = "0x261C258", VA = "0x261C258")]
		private void UnregisterFogArea(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x261B05C", Offset = "0x261B05C", VA = "0x261B05C")]
		private void RegisterWithRenderers()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x261BFC4", Offset = "0x261BFC4", VA = "0x261BFC4")]
		private void UnregisterWithRenderers()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x260FD28", Offset = "0x260FD28", VA = "0x260FD28")]
		public void UpdateMultiCameraSetup()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x262666C", Offset = "0x262666C", VA = "0x262666C")]
		private void SetEnableMultipleCameras(bool state)
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x26266CC", Offset = "0x26266CC", VA = "0x26266CC")]
		internal void DoOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x2628EC8", Offset = "0x2628EC8", VA = "0x2628EC8")]
		internal void DoOnRenderImageInstance(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x262DAA0", Offset = "0x262DAA0", VA = "0x262DAA0")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x261C354", Offset = "0x261C354", VA = "0x261C354")]
		private void CleanUpDepthTexture()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x2625044", Offset = "0x2625044", VA = "0x2625044")]
		private void GetTransparentDepth()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x2624730", Offset = "0x2624730", VA = "0x2624730")]
		private void CastSunShadows()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x262E0F4", Offset = "0x262E0F4", VA = "0x262E0F4")]
		private void GetSunShadows()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x262DB48", Offset = "0x262DB48", VA = "0x262DB48")]
		private void SetBlurTexture(RenderTexture source, RenderTextureDescriptor desc)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x2617E3C", Offset = "0x2617E3C", VA = "0x2617E3C")]
		private void DestroySunShadowsDependencies()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x2617CF0", Offset = "0x2617CF0", VA = "0x2617CF0")]
		private void CleanUpTextureDepthSun()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x262F6D4", Offset = "0x262F6D4", VA = "0x262F6D4")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x2609A3C", Offset = "0x2609A3C", VA = "0x2609A3C")]
		public void UpdatePreset()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x262F8C4", Offset = "0x262F8C4", VA = "0x262F8C4")]
		public void CheckWaterLevel(bool baseZero)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x262FEA8", Offset = "0x262FEA8", VA = "0x262FEA8")]
		public static Terrain GetActiveTerrain()
		{
			return null;
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x262243C", Offset = "0x262243C", VA = "0x262243C")]
		private void UpdateMaterialFogColor()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x26226A4", Offset = "0x26226A4", VA = "0x26226A4")]
		private void UpdateMaterialHeights(Camera mainCamera)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x260EAC0", Offset = "0x260EAC0", VA = "0x260EAC0")]
		public void UpdateMaterialProperties(bool forceNow = false)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x261B018", Offset = "0x261B018", VA = "0x261B018")]
		public void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x2627224", Offset = "0x2627224", VA = "0x2627224")]
		private void UpdateMaterialPropertiesNow(Camera mainCamera)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x26304F4", Offset = "0x26304F4", VA = "0x26304F4")]
		public void NotifyChangesToFogInstances()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x262F268", Offset = "0x262F268", VA = "0x262F268")]
		private void UpdateSunShadowsData()
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x2612A38", Offset = "0x2612A38", VA = "0x2612A38")]
		private void UpdateWindSpeedQuick()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x262BFE8", Offset = "0x262BFE8", VA = "0x262BFE8")]
		private void UpdateScatteringData(Camera mainCamera)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x2610618", Offset = "0x2610618", VA = "0x2610618")]
		private void UpdateSun()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x2622264", Offset = "0x2622264", VA = "0x2622264")]
		private void UpdateSkyColor(float alpha)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x2610B28", Offset = "0x2610B28", VA = "0x2610B28")]
		private void UpdateTextureAlpha()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x260F0D8", Offset = "0x260F0D8", VA = "0x260F0D8")]
		private void UpdateTexture()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x2622D94", Offset = "0x2622D94", VA = "0x2622D94")]
		private void UpdateTextureColors(Color[] colors, bool forceUpdateEntireTexture)
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x2625AC8", Offset = "0x2625AC8", VA = "0x2625AC8")]
		internal void ApplyChaos()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x262647C", Offset = "0x262647C", VA = "0x262647C")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x2630840", Offset = "0x2630840", VA = "0x2630840")]
		public void SetTargetProfile(VolumetricFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x26318EC", Offset = "0x26318EC", VA = "0x26318EC")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x2631940", Offset = "0x2631940", VA = "0x2631940")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x2631A38", Offset = "0x2631A38", VA = "0x2631A38")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x2631A84", Offset = "0x2631A84", VA = "0x2631A84")]
		public void SetTargetColor(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x2631B90", Offset = "0x2631B90", VA = "0x2631B90")]
		public void ClearTargetColor(float duration)
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x2631C0C", Offset = "0x2631C0C", VA = "0x2631C0C")]
		public void SetTargetSpecularColor(Color newSpecularColor, float duration)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x2631D18", Offset = "0x2631D18", VA = "0x2631D18")]
		public void ClearTargetSpecularColor(float duration)
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x2631D94", Offset = "0x2631D94", VA = "0x2631D94")]
		public void SetTargetLightColor(Color newLightColor, float duration)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x2631EA8", Offset = "0x2631EA8", VA = "0x2631EA8")]
		public void ClearTargetLightColor(float duration)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x26159F4", Offset = "0x26159F4", VA = "0x26159F4")]
		public void CheckPointLightData()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x2631F24", Offset = "0x2631F24", VA = "0x2631F24")]
		private void PointLightDataSetDefaults(int k)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x262CF14", Offset = "0x262CF14", VA = "0x262CF14")]
		private void SetPointLightMaterialProperties(Camera mainCamera)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x26321A4", Offset = "0x26321A4", VA = "0x26321A4")]
		public Light GetPointLight(int index)
		{
			return null;
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x2632284", Offset = "0x2632284", VA = "0x2632284")]
		private void TrackNewLights()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x2614DB0", Offset = "0x2614DB0", VA = "0x2614DB0")]
		public void TrackPointLights(bool forceImmediateUpdate = false)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x2632380", Offset = "0x2632380", VA = "0x2632380")]
		private Light GetNearestLight(Light[] lights)
		{
			return null;
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x26327D4", Offset = "0x26327D4", VA = "0x26327D4")]
		public static VolumetricFog CreateFogArea(Vector3 position, float radius, float height = 16f, float fallOff = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x2632BA4", Offset = "0x2632BA4", VA = "0x2632BA4")]
		public static VolumetricFog CreateFogArea(Vector3 position, Vector3 boxSize)
		{
			return null;
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x263293C", Offset = "0x263293C", VA = "0x263293C")]
		private static VolumetricFog CreateFogAreaPlaceholder(bool spherical, Vector3 position, float radius, float height, float depth)
		{
			return null;
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x2632DBC", Offset = "0x2632DBC", VA = "0x2632DBC")]
		public static void RemoveAllFogAreas()
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x262B80C", Offset = "0x262B80C", VA = "0x262B80C")]
		private void CheckFogAreaDimensions()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x2618EC8", Offset = "0x2618EC8", VA = "0x2618EC8")]
		public void UpdateVolumeMask()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x2633124", Offset = "0x2633124", VA = "0x2633124")]
		public void TogglePreviewMask()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x261B650", Offset = "0x261B650", VA = "0x261B650")]
		private void RemoveMaskCommandBuffer()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x262618C", Offset = "0x262618C", VA = "0x262618C")]
		private void FogOfWarInit()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x2634350", Offset = "0x2634350", VA = "0x2634350")]
		public void ReloadFogOfWarTexture()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x26301B8", Offset = "0x26301B8", VA = "0x26301B8")]
		private void FogOfWarUpdateTexture()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x2623EC0", Offset = "0x2623EC0", VA = "0x2623EC0")]
		public void UpdateFogOfWar(bool forceUpload = false)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x2635084", Offset = "0x2635084", VA = "0x2635084")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x263510C", Offset = "0x263510C", VA = "0x263510C")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x2635C70", Offset = "0x2635C70", VA = "0x2635C70")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration, float smoothness)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x26351E4", Offset = "0x26351E4", VA = "0x26351E4")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, bool blendAlpha, float duration, float smoothness, float restoreDelay, float restoreDuration)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x2635D48", Offset = "0x2635D48", VA = "0x2635D48")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x2636B24", Offset = "0x2636B24", VA = "0x2636B24")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration, float smoothness)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x2635E20", Offset = "0x2635E20", VA = "0x2635E20")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, bool blendAlpha, float duration, float smoothness, float restoreDelay, float restoreDuration)
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x2636BFC", Offset = "0x2636BFC", VA = "0x2636BFC")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x2637364", Offset = "0x2637364", VA = "0x2637364")]
		public void ResetFogOfWarAlpha(Bounds bounds)
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x2637AE8", Offset = "0x2637AE8", VA = "0x2637AE8")]
		public void ResetFogOfWarAlpha(Vector3 position, Vector3 size)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x2637424", Offset = "0x2637424", VA = "0x2637424")]
		public void ResetFogOfWarAlpha(Vector3 position, float extentsX, float extentsZ)
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x2634548", Offset = "0x2634548", VA = "0x2634548")]
		public void ResetFogOfWar(byte alpha = byte.MaxValue)
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x26349B8", Offset = "0x26349B8", VA = "0x26349B8")]
		private void AddFogOfWarTransitionSlot(int x, int y, byte initialAlpha, byte targetAlpha, float delay, float duration)
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x2637E6C", Offset = "0x2637E6C", VA = "0x2637E6C")]
		public float GetFogOfWarAlpha(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x26382B4", Offset = "0x26382B4", VA = "0x26382B4")]
		private void ShowFoWGizmo()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x2638698", Offset = "0x2638698", VA = "0x2638698")]
		public VolumetricFog()
		{
		}
	}
	[Token(Token = "0x2000411")]
	[ExecuteInEditMode]
	public class VolumetricFogDayCycleManager : MonoBehaviour
	{
		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5A7")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AD54", Offset = "0x89AD54")]
		public float currentTime;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Gradient colorOverTime;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE5C")]
		public AnimationCurve densityOverTime;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevTime;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private VolumetricFog[] fogs;

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x2639B2C", Offset = "0x2639B2C", VA = "0x2639B2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x2639F2C", Offset = "0x2639F2C", VA = "0x2639F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x263A488", Offset = "0x263A488", VA = "0x263A488")]
		private float GetCurrentTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x263A4B8", Offset = "0x263A4B8", VA = "0x263A4B8")]
		public VolumetricFogDayCycleManager()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public enum MASK_TEXTURE_BRUSH_MODE
	{
		[Token(Token = "0x4002302")]
		AddFog,
		[Token(Token = "0x4002303")]
		RemoveFog
	}
	[Token(Token = "0x2000413")]
	public class VolumetricFogLightParams : MonoBehaviour
	{
		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE64")]
		public float rangeMultiplier;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float intensityMultiplier;

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x263A4E8", Offset = "0x263A4E8", VA = "0x263A4E8")]
		public VolumetricFogLightParams()
		{
		}
	}
	[Token(Token = "0x2000414")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87D9D4", Offset = "0x87D9D4")]
	public class VolumetricFogMaterialIntegration : MonoBehaviour
	{
		[Token(Token = "0x200078C")]
		private enum PropertyType
		{
			[Token(Token = "0x4002D8D")]
			Float,
			[Token(Token = "0x4002D8E")]
			Float3,
			[Token(Token = "0x4002D8F")]
			Float4,
			[Token(Token = "0x4002D90")]
			Color,
			[Token(Token = "0x4002D91")]
			Texture2D,
			[Token(Token = "0x4002D92")]
			FloatArray,
			[Token(Token = "0x4002D93")]
			Float4Array,
			[Token(Token = "0x4002D94")]
			ColorArray,
			[Token(Token = "0x4002D95")]
			Matrix4x4
		}

		[Token(Token = "0x200078D")]
		private struct Properties
		{
			[Token(Token = "0x4002D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB5B6")]
			public string name;

			[Token(Token = "0x4002D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
			public PropertyType type;
		}

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Properties[] props;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] keywords;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5B7")]
		public VolumetricFog fog;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Renderer[] materials;

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x263A53C", Offset = "0x263A53C", VA = "0x263A53C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x263A5C8", Offset = "0x263A5C8", VA = "0x263A5C8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x263CD48", Offset = "0x263CD48", VA = "0x263CD48")]
		public VolumetricFogMaterialIntegration()
		{
		}
	}
	[Token(Token = "0x2000415")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87DAA0", Offset = "0x87DAA0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87DAA0", Offset = "0x87DAA0")]
	[ImageEffectAllowedInSceneView]
	public class VolumetricFogPosT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89AD9C", Offset = "0x89AD9C")]
		private VolumetricFog <fog>k__BackingField;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material copyOpaqueMat;

		[Token(Token = "0x170002B0")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x263E404", Offset = "0x263E404", VA = "0x263E404", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD974", Offset = "0x8AD974")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x263E434", Offset = "0x263E434", VA = "0x263E434", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD9B0", Offset = "0x8AD9B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x263E46C", Offset = "0x263E46C", VA = "0x263E46C")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x263EB98", Offset = "0x263EB98", VA = "0x263EB98", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x263EC80", Offset = "0x263EC80", VA = "0x263EC80")]
		public VolumetricFogPosT()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87DBD0", Offset = "0x87DBD0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87DBD0", Offset = "0x87DBD0")]
	[ImageEffectAllowedInSceneView]
	public class VolumetricFogPreT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89ADD8", Offset = "0x89ADD8")]
		private VolumetricFog <fog>k__BackingField;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RenderTexture opaqueFrame;

		[Token(Token = "0x170002B1")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0x263ECB0", Offset = "0x263ECB0", VA = "0x263ECB0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD9EC", Offset = "0x8AD9EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x263ECE0", Offset = "0x263ECE0", VA = "0x263ECE0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADA28", Offset = "0x8ADA28")]
			set
			{
			}
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x263ED18", Offset = "0x263ED18", VA = "0x263ED18")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x263F13C", Offset = "0x263F13C", VA = "0x263F13C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x263F280", Offset = "0x263F280", VA = "0x263F280", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x263F368", Offset = "0x263F368", VA = "0x263F368")]
		public VolumetricFogPreT()
		{
		}
	}
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x87DD00", Offset = "0x87DD00")]
	public class VolumetricFogProfile : ScriptableObject
	{
		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5CE")]
		public LIGHTING_MODEL lightingModel;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool sunCopyColor;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AE14", Offset = "0x89AE14")]
		public float density;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AE5C", Offset = "0x89AE5C")]
		public float noiseStrength;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AEA4", Offset = "0x89AEA4")]
		public float height;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AEEC", Offset = "0x89AEEC")]
		public float heightFallOff;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5D6")]
		public float baselineHeight;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AF34", Offset = "0x89AF34")]
		public float distance;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AF7C", Offset = "0x89AF7C")]
		public float distanceFallOff;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxFogLength;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89AFC4", Offset = "0x89AFC4")]
		public float maxFogLengthFallOff;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool baselineRelativeToCamera;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5DE")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B00C", Offset = "0x89B00C")]
		public float baselineRelativeToCameraDelay;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B054", Offset = "0x89B054")]
		public float noiseScale;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B0A4", Offset = "0x89B0A4")]
		public float noiseSparse;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B0F4", Offset = "0x89B0F4")]
		public float noiseFinalMultiplier;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B140", Offset = "0x89B140")]
		public float alpha;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color color;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5E6")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B18C", Offset = "0x89B18C")]
		public float deepObscurance;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Color specularColor;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B1D4", Offset = "0x89B1D4")]
		public float specularThreshold;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B21C", Offset = "0x89B21C")]
		public float specularIntensity;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 lightDirection;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B264", Offset = "0x89B264")]
		public float lightIntensity;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5EE")]
		public Color lightColor;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B2B0", Offset = "0x89B2B0")]
		public float speed;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FE9C")]
		public bool useRealTime;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 windDirection;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B2F8", Offset = "0x89B2F8")]
		public float turbulenceStrength;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useXYPlane;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5F6")]
		public Color skyColor;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float skyHaze;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FEA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B340", Offset = "0x89B340")]
		public float skySpeed;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B388", Offset = "0x89B388")]
		public float skyNoiseStrength;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float skyNoiseScale;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B3D0", Offset = "0x89B3D0")]
		public float skyAlpha;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5FE")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B418", Offset = "0x89B418")]
		private float skyDepth;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float stepping;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FEAC")]
		public float steppingNear;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool dithering;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ditherStrength;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool downsamplingOverride;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB606")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B494", Offset = "0x89B494")]
		public int downsampling;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool forceComposition;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FEB4")]
		public bool edgeImprove;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B4E0", Offset = "0x89B4E0")]
		public float edgeThreshold;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool lightScatteringOverride;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool lightScatteringEnabled;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB60E")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B534", Offset = "0x89B534")]
		public float lightScatteringDiffusion;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B57C", Offset = "0x89B57C")]
		public float lightScatteringSpread;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FEBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B5C4", Offset = "0x89B5C4")]
		public int lightScatteringSamples;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B610", Offset = "0x89B610")]
		public float lightScatteringWeight;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B658", Offset = "0x89B658")]
		public float lightScatteringIllumination;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B6A0", Offset = "0x89B6A0")]
		public float lightScatteringDecay;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB616")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B6F4", Offset = "0x89B6F4")]
		public float lightScatteringExposure;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B740", Offset = "0x89B740")]
		public float lightScatteringJittering;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987104")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B788", Offset = "0x89B788")]
		public int lightScatteringBlurDownscale;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool fogVoidOverride;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FOG_VOID_TOPOLOGY fogVoidTopology;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B7D4", Offset = "0x89B7D4")]
		public float fogVoidFallOff;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB61D")]
		public float fogVoidRadius;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public Vector3 fogVoidPosition;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FEC4")]
		public float fogVoidDepth;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float fogVoidHeight;

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x260D50C", Offset = "0x260D50C", VA = "0x260D50C")]
		public void Load(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x263097C", Offset = "0x263097C", VA = "0x263097C")]
		public void Save(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x261F458", Offset = "0x261F458", VA = "0x261F458")]
		public static void Lerp(VolumetricFogProfile profile1, VolumetricFogProfile profile2, float t, VolumetricFog fog)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x263F398", Offset = "0x263F398", VA = "0x263F398")]
		public VolumetricFogProfile()
		{
		}
	}
}
namespace DynamicFogAndMist
{
	[Token(Token = "0x2000418")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87DDC8", Offset = "0x87DDC8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x87DDC8", Offset = "0x87DDC8")]
	[ImageEffectAllowedInSceneView]
	public class DynamicFog : DynamicFogBase
	{
		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x135F900", Offset = "0x135F900", VA = "0x135F900")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x1361F40", Offset = "0x1361F40", VA = "0x1361F40")]
		public DynamicFog()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public enum FOG_TYPE
	{
		[Token(Token = "0x400234F")]
		DesktopFogWithSkyHaze,
		[Token(Token = "0x4002350")]
		MobileFogWithSkyHaze,
		[Token(Token = "0x4002351")]
		MobileFogOnlyGround,
		[Token(Token = "0x4002352")]
		DesktopFogPlusWithSkyHaze,
		[Token(Token = "0x4002353")]
		MobileFogSimple,
		[Token(Token = "0x4002354")]
		MobileFogBasic,
		[Token(Token = "0x4002355")]
		MobileFogOrthogonal,
		[Token(Token = "0x4002356")]
		DesktopFogPlusOrthogonal
	}
	[Token(Token = "0x200041A")]
	internal static class FOG_TYPE_Ext
	{
		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x12D0230", Offset = "0x12D0230", VA = "0x12D0230")]
		public static bool isPlus(this FOG_TYPE fogType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200041B")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x4002358")]
		Clear,
		[Token(Token = "0x4002359")]
		Mist,
		[Token(Token = "0x400235A")]
		WindyMist,
		[Token(Token = "0x400235B")]
		GroundFog,
		[Token(Token = "0x400235C")]
		Fog,
		[Token(Token = "0x400235D")]
		HeavyFog,
		[Token(Token = "0x400235E")]
		SandStorm,
		[Token(Token = "0x400235F")]
		Custom
	}
	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x87DF34", Offset = "0x87DF34")]
	public class DynamicFogBase : MonoBehaviour
	{
		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private FOG_TYPE _effectType;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB63D")]
		[SerializeField]
		private DynamicFogProfile _profile;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FEE4")]
		[SerializeField]
		private bool _enableDithering;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B978", Offset = "0x89B978")]
		private float _ditherStrength;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89B9F4", Offset = "0x89B9F4")]
		protected float _alpha;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BA6C", Offset = "0x89BA6C")]
		private float _noiseStrength;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB645")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BAE4", Offset = "0x89BAE4")]
		private float _noiseScale;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BB64", Offset = "0x89BB64")]
		private float _distance;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FEEC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BBE0", Offset = "0x89BBE0")]
		private float _distanceFallOff;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BC60", Offset = "0x89BC60")]
		private float _maxDistance;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BCDC", Offset = "0x89BCDC")]
		private float _maxDistanceFallOff;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BD5C", Offset = "0x89BD5C")]
		private float _height;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB64D")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BDD4", Offset = "0x89BDD4")]
		private float _maxHeight;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BE4C", Offset = "0x89BE4C")]
		private float _heightFallOff;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FEF4")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _clipUnderBaseline;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BF44", Offset = "0x89BF44")]
		private float _turbulence;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89BFBC", Offset = "0x89BFBC")]
		private float _speed;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB655")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FEFC")]
		[SerializeField]
		private Color _color2;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C0E8", Offset = "0x89C0E8")]
		private float _skyHaze;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C160", Offset = "0x89C160")]
		private float _skySpeed;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C1D8", Offset = "0x89C1D8")]
		private float _skyNoiseStrength;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB65D")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C250", Offset = "0x89C250")]
		private float _skyAlpha;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF04")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB665")]
		[SerializeField]
		protected bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[SerializeField]
		private bool _useXZDistance;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF0C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C46C", Offset = "0x89C46C")]
		private float _scattering;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color _scatteringColor;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fogMatAdv;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fogMatFogSky;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB66D")]
		private Material fogMatOnlyFog;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Material fogMatVol;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98710C")]
		private Material fogMatSimple;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fogMatBasic;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fogMatOrthogonal;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Material fogMatDesktopPlusOrthogonal;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB674")]
		[SerializeField]
		protected Material fogMat;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float initialFogAlpha;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF14")]
		private float targetFogAlpha;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool targetFogColors;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB67C")]
		private Color initialFogColor1;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color targetFogColor1;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF1C")]
		private Color initialFogColor2;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color targetFogColor2;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float transitionDuration;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float transitionStartTime;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB684")]
		private float currentFogAlpha;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF24")]
		private bool transitionAlpha;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool transitionColor;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool transitionProfile;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DynamicFogProfile initialProfile;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB68C")]
		private DynamicFogProfile targetProfile;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Color currentFogColor1;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF2C")]
		private Color currentFogColor2;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Camera currentCamera;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB694")]
		private Light sunLight;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Vector3 sunDirection;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF34")]
		private Color sunColor;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float sunIntensity;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFog _fog;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<string> shaderKeywords;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB69C")]
		protected bool matOrtho;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		protected bool shouldUpdateMaterialProperties;

		[Token(Token = "0x170002B2")]
		public FOG_TYPE effectType
		{
			[Token(Token = "0x6001F60")]
			[Address(RVA = "0x136232C", Offset = "0x136232C", VA = "0x136232C")]
			get
			{
				return default(FOG_TYPE);
			}
			[Token(Token = "0x6001F61")]
			[Address(RVA = "0x136235C", Offset = "0x136235C", VA = "0x136235C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6001F62")]
			[Address(RVA = "0x1362458", Offset = "0x1362458", VA = "0x1362458")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x1362488", Offset = "0x1362488", VA = "0x1362488")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public DynamicFogProfile profile
		{
			[Token(Token = "0x6001F64")]
			[Address(RVA = "0x1362504", Offset = "0x1362504", VA = "0x1362504")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F65")]
			[Address(RVA = "0x1362534", Offset = "0x1362534", VA = "0x1362534")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x136274C", Offset = "0x136274C", VA = "0x136274C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x1362790", Offset = "0x1362790", VA = "0x1362790")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public bool enableDithering
		{
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x136282C", Offset = "0x136282C", VA = "0x136282C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x1362870", Offset = "0x1362870", VA = "0x1362870")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public float ditherStrength
		{
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x1362920", Offset = "0x1362920", VA = "0x1362920")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x1362950", Offset = "0x1362950", VA = "0x1362950")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public float alpha
		{
			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x13629D4", Offset = "0x13629D4", VA = "0x13629D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x1362A04", Offset = "0x1362A04", VA = "0x1362A04")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public float noiseStrength
		{
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x1362A9C", Offset = "0x1362A9C", VA = "0x1362A9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x1362ACC", Offset = "0x1362ACC", VA = "0x1362ACC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public float noiseScale
		{
			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x1362B64", Offset = "0x1362B64", VA = "0x1362B64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F71")]
			[Address(RVA = "0x1362B94", Offset = "0x1362B94", VA = "0x1362B94")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public float distance
		{
			[Token(Token = "0x6001F72")]
			[Address(RVA = "0x1362C2C", Offset = "0x1362C2C", VA = "0x1362C2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0x1362C5C", Offset = "0x1362C5C", VA = "0x1362C5C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public float distanceFallOff
		{
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x1362CF4", Offset = "0x1362CF4", VA = "0x1362CF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x1362D24", Offset = "0x1362D24", VA = "0x1362D24")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public float maxDistance
		{
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x1362DBC", Offset = "0x1362DBC", VA = "0x1362DBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x1362DEC", Offset = "0x1362DEC", VA = "0x1362DEC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float maxDistanceFallOff
		{
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x1362E84", Offset = "0x1362E84", VA = "0x1362E84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x1362EB4", Offset = "0x1362EB4", VA = "0x1362EB4")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public float height
		{
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x1362F4C", Offset = "0x1362F4C", VA = "0x1362F4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x1362F7C", Offset = "0x1362F7C", VA = "0x1362F7C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public float maxHeight
		{
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x1363014", Offset = "0x1363014", VA = "0x1363014")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x1363044", Offset = "0x1363044", VA = "0x1363044")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public float heightFallOff
		{
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x13630DC", Offset = "0x13630DC", VA = "0x13630DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x136310C", Offset = "0x136310C", VA = "0x136310C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public float baselineHeight
		{
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x13631A4", Offset = "0x13631A4", VA = "0x13631A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x13631D4", Offset = "0x13631D4", VA = "0x13631D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public bool clipUnderBaseline
		{
			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x1363258", Offset = "0x1363258", VA = "0x1363258")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x136329C", Offset = "0x136329C", VA = "0x136329C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public float turbulence
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x136334C", Offset = "0x136334C", VA = "0x136334C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x136337C", Offset = "0x136337C", VA = "0x136337C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public float speed
		{
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x1363414", Offset = "0x1363414", VA = "0x1363414")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x1363444", Offset = "0x1363444", VA = "0x1363444")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x13634DC", Offset = "0x13634DC", VA = "0x13634DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x136351C", Offset = "0x136351C", VA = "0x136351C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public Color color
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x136368C", Offset = "0x136368C", VA = "0x136368C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x13636D4", Offset = "0x13636D4", VA = "0x13636D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public Color color2
		{
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x13637BC", Offset = "0x13637BC", VA = "0x13637BC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x1363804", Offset = "0x1363804", VA = "0x1363804")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public float skyHaze
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x13638EC", Offset = "0x13638EC", VA = "0x13638EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x136391C", Offset = "0x136391C", VA = "0x136391C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public float skySpeed
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x13639B4", Offset = "0x13639B4", VA = "0x13639B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x13639E4", Offset = "0x13639E4", VA = "0x13639E4")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x1363A7C", Offset = "0x1363A7C", VA = "0x1363A7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x1363AAC", Offset = "0x1363AAC", VA = "0x1363AAC")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public float skyAlpha
		{
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x1363B44", Offset = "0x1363B44", VA = "0x1363B44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x1363B74", Offset = "0x1363B74", VA = "0x1363B74")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public GameObject sun
		{
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x1363C0C", Offset = "0x1363C0C", VA = "0x1363C0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x1363C3C", Offset = "0x1363C3C", VA = "0x1363C3C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x1363D78", Offset = "0x1363D78", VA = "0x1363D78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x1363DBC", Offset = "0x1363DBC", VA = "0x1363DBC")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x1363E6C", Offset = "0x1363E6C", VA = "0x1363E6C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0x1363EAC", Offset = "0x1363EAC", VA = "0x1363EAC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x136401C", Offset = "0x136401C", VA = "0x136401C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0x136405C", Offset = "0x136405C", VA = "0x136405C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x13641CC", Offset = "0x13641CC", VA = "0x13641CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x13641FC", Offset = "0x13641FC", VA = "0x13641FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x1364278", Offset = "0x1364278", VA = "0x1364278")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x13642BC", Offset = "0x13642BC", VA = "0x13642BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public bool useXZDistance
		{
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0x136436C", Offset = "0x136436C", VA = "0x136436C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x13643B0", Offset = "0x13643B0", VA = "0x13643B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public float scattering
		{
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x1364460", Offset = "0x1364460", VA = "0x1364460")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0x1364490", Offset = "0x1364490", VA = "0x1364490")]
			set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public Color scatteringColor
		{
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0x1364514", Offset = "0x1364514", VA = "0x1364514")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x136455C", Offset = "0x136455C", VA = "0x136455C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public static DynamicFog instance
		{
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x1364638", Offset = "0x1364638", VA = "0x1364638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		public Camera fogCamera
		{
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x1364B0C", Offset = "0x1364B0C", VA = "0x1364B0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x1364918", Offset = "0x1364918", VA = "0x1364918")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x1364B3C", Offset = "0x1364B3C", VA = "0x1364B3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1364D10", Offset = "0x1364D10", VA = "0x1364D10")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x1364D40", Offset = "0x1364D40", VA = "0x1364D40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x1364B7C", Offset = "0x1364B7C", VA = "0x1364B7C")]
		private void Init()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x1365AD0", Offset = "0x1365AD0", VA = "0x1365AD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x1367D28", Offset = "0x1367D28", VA = "0x1367D28")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x1367D58", Offset = "0x1367D58", VA = "0x1367D58")]
		public void CheckPreset()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x1368A08", Offset = "0x1368A08", VA = "0x1368A08")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x1368B80", Offset = "0x1368B80", VA = "0x1368B80")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x1361E98", Offset = "0x1361E98", VA = "0x1361E98")]
		protected void ResetMaterial()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x13623F0", Offset = "0x13623F0", VA = "0x13623F0")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x1360018", Offset = "0x1360018", VA = "0x1360018")]
		protected void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x1369298", Offset = "0x1369298", VA = "0x1369298")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x13670E4", Offset = "0x13670E4", VA = "0x13670E4")]
		private void SetSkyData()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x1367298", Offset = "0x1367298", VA = "0x1367298")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x1369358", Offset = "0x1369358", VA = "0x1369358")]
		public void SetTargetProfile(DynamicFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x13694A4", Offset = "0x13694A4", VA = "0x13694A4")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x13694F8", Offset = "0x13694F8", VA = "0x13694F8")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x1369604", Offset = "0x1369604", VA = "0x1369604")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x1369650", Offset = "0x1369650", VA = "0x1369650")]
		public void SetTargetColors(Color color1, Color color2, float duration)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x13697E8", Offset = "0x13697E8", VA = "0x13697E8")]
		public void ClearTargetColors(float duration)
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x1365908", Offset = "0x1365908", VA = "0x1365908")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x1369D18", Offset = "0x1369D18", VA = "0x1369D18")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x136A778", Offset = "0x136A778", VA = "0x136A778")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x136995C", Offset = "0x136995C", VA = "0x136995C")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x13698B4", Offset = "0x13698B4", VA = "0x13698B4")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x1361F70", Offset = "0x1361F70", VA = "0x1361F70")]
		public DynamicFogBase()
		{
		}
	}
	[Token(Token = "0x200041D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87DF98", Offset = "0x87DF98")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x87DF98", Offset = "0x87DF98")]
	[ImageEffectAllowedInSceneView]
	public class DynamicFogExclusive : DynamicFogBase
	{
		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF3C")]
		private RenderTexture rt;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C55C", Offset = "0x89C55C")]
		public float renderScale;

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x12CA50C", Offset = "0x12CA50C", VA = "0x12CA50C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x12CA99C", Offset = "0x12CA99C", VA = "0x12CA99C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x12CB050", Offset = "0x12CB050", VA = "0x12CB050")]
		public DynamicFogExclusive()
		{
		}
	}
	[Token(Token = "0x200041E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x87E0C8", Offset = "0x87E0C8")]
	public class DynamicFogManager : MonoBehaviour
	{
		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C5AC", Offset = "0x89C5AC")]
		public float alpha;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C5F4", Offset = "0x89C5F4")]
		public float noiseStrength;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C63C", Offset = "0x89C63C")]
		public float distance;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C688", Offset = "0x89C688")]
		public float distanceFallOff;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C6D0", Offset = "0x89C6D0")]
		public float height;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C718", Offset = "0x89C718")]
		public float heightFallOff;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float baselineHeight;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color color;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6AC")]
		public GameObject sun;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private Light sunLight;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF4C")]
		private Vector3 sunDirection;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color sunColor;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float sunIntensity;

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x12CB094", Offset = "0x12CB094", VA = "0x12CB094")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x12CB104", Offset = "0x12CB104", VA = "0x12CB104")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x12CB134", Offset = "0x12CB134", VA = "0x12CB134")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x12CB0C4", Offset = "0x12CB0C4", VA = "0x12CB0C4")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x12CBB94", Offset = "0x12CBB94", VA = "0x12CBB94")]
		private void UpdateFogData()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x12CB538", Offset = "0x12CB538", VA = "0x12CB538")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x12CBE0C", Offset = "0x12CBE0C", VA = "0x12CBE0C")]
		public DynamicFogManager()
		{
		}
	}
	[Token(Token = "0x200041F")]
	[ExecuteInEditMode]
	public class DynamicFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int fogOfWarTextureSize;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6B4")]
		private Material fogMat;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private static DynamicFogOfWar _instance;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF54")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x170002D8")]
		public static DynamicFogOfWar instance
		{
			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x12CBFDC", Offset = "0x12CBFDC", VA = "0x12CBFDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x12CC1B4", Offset = "0x12CC1B4", VA = "0x12CC1B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x12CC430", Offset = "0x12CC430", VA = "0x12CC430")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x12CC5DC", Offset = "0x12CC5DC", VA = "0x12CC5DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x12CC26C", Offset = "0x12CC26C", VA = "0x12CC26C")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x12CC790", Offset = "0x12CC790", VA = "0x12CC790")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x12CCBF4", Offset = "0x12CCBF4", VA = "0x12CCBF4")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x12CC838", Offset = "0x12CC838", VA = "0x12CC838")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x12CD690", Offset = "0x12CD690", VA = "0x12CD690")]
		public void SetFogOfWarTerrainBoundary(Terrain terrain, float borderWidth)
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x12CDCE8", Offset = "0x12CDCE8", VA = "0x12CDCE8")]
		public DynamicFogOfWar()
		{
		}
	}
	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x87E18C", Offset = "0x87E18C")]
	public class DynamicFogProfile : ScriptableObject
	{
		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FOG_TYPE effectType;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enableDithering;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C760", Offset = "0x89C760")]
		public float ditherStrength;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C7AC", Offset = "0x89C7AC")]
		public float alpha;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C7F4", Offset = "0x89C7F4")]
		public float noiseStrength;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C83C", Offset = "0x89C83C")]
		public float noiseScale;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C88C", Offset = "0x89C88C")]
		public float distance;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C8D8", Offset = "0x89C8D8")]
		public float distanceFallOff;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C928", Offset = "0x89C928")]
		public float maxDistance;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C974", Offset = "0x89C974")]
		public float maxDistanceFallOff;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89C9C4", Offset = "0x89C9C4")]
		public float height;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CA0C", Offset = "0x89CA0C")]
		public float maxHeight;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CA54", Offset = "0x89CA54")]
		public float heightFallOff;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float baselineHeight;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6CB")]
		public bool clipUnderBaseline;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CAA4", Offset = "0x89CAA4")]
		public float turbulence;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CAEC", Offset = "0x89CAEC")]
		public float speed;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 windDirection;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color color;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color color2;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6D3")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CB34", Offset = "0x89CB34")]
		public float skyHaze;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CB7C", Offset = "0x89CB7C")]
		public float skySpeed;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CBC4", Offset = "0x89CBC4")]
		public float skyNoiseStrength;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CC0C", Offset = "0x89CC0C")]
		public float skyAlpha;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useXZDistance;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CC54", Offset = "0x89CC54")]
		public float scattering;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6DB")]
		public Color scatteringColor;

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x12CDD2C", Offset = "0x12CDD2C", VA = "0x12CDD2C")]
		public void Load(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x12CE2B8", Offset = "0x12CE2B8", VA = "0x12CE2B8")]
		public void Save(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x12CE834", Offset = "0x12CE834", VA = "0x12CE834")]
		public static void Lerp(DynamicFogProfile profile1, DynamicFogProfile profile2, float t, DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x12CFFF8", Offset = "0x12CFFF8", VA = "0x12CFFF8")]
		public DynamicFogProfile()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x40023DB")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89CC9C", Offset = "0x89CC9C")]
		public bool enableProfileTransition;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89CD00", Offset = "0x89CD00")]
		public DynamicFogProfile targetProfile;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89CD64", Offset = "0x89CD64")]
		public bool enableAlphaTransition;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89CDC8", Offset = "0x89CDC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CDC8", Offset = "0x89CDC8")]
		public float targetFogAlpha;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6E3")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89CE64", Offset = "0x89CE64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89CE64", Offset = "0x89CE64")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89CF00", Offset = "0x89CF00")]
		public bool enableFogColorTransition;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89CF64", Offset = "0x89CF64")]
		public Color targetFogColor1;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89CFC8", Offset = "0x89CFC8")]
		public Color targetFogColor2;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89D02C", Offset = "0x89D02C")]
		public float transitionDuration;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89D090", Offset = "0x89D090")]
		public Collider targetCollider;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6EB")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89D0F4", Offset = "0x89D0F4")]
		public bool debugMode;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x89D158", Offset = "0x89D158")]
		public DynamicFog targetFog;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF84")]
		private bool cameraInside;

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x12D0334", Offset = "0x12D0334", VA = "0x12D0334")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x12D0530", Offset = "0x12D0530", VA = "0x12D0530")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x12D0ABC", Offset = "0x12D0ABC", VA = "0x12D0ABC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x12D1044", Offset = "0x12D1044", VA = "0x12D1044")]
		public FogVolume()
		{
		}
	}
}
namespace ns3dRudder
{
	[Token(Token = "0x2000422")]
	public class U3D_AnimationCurve : Curve
	{
		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve Curve;

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x14F20E4", Offset = "0x14F20E4", VA = "0x14F20E4")]
		public U3D_AnimationCurve(float fxSat, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x14F9EF4", Offset = "0x14F9EF4", VA = "0x14F9EF4", Slot = "5")]
		public override float CalcCurveValue(float fValue)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000423")]
	public class AxesParamUnity3D : IAxesParam
	{
		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimationCurve[] animationCurves;

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x14F17AC", Offset = "0x14F17AC", VA = "0x14F17AC")]
		public AxesParamUnity3D()
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x14F1C2C", Offset = "0x14F1C2C", VA = "0x14F1C2C", Slot = "4")]
		public override ErrorCode UpdateParam(uint nPortNumber)
		{
			return default(ErrorCode);
		}
	}
	[Token(Token = "0x2000424")]
	public class FPSLocomotion : ILocomotion
	{
		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float AnglePerSecond;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6F3")]
		public bool LocalTranslation;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public bool UsePhysics;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF8C")]
		protected Vector3 translation;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float angle;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Transform trans;

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x14F418C", Offset = "0x14F418C", VA = "0x14F418C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x14F428C", Offset = "0x14F428C", VA = "0x14F428C", Slot = "4")]
		public override void UpdateAxes(Controller3dRudder controller3dRudder, Vector4 axesWithFactor)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x14F43B4", Offset = "0x14F43B4", VA = "0x14F43B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x14F468C", Offset = "0x14F468C", VA = "0x14F468C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x14F48B0", Offset = "0x14F48B0", VA = "0x14F48B0")]
		public FPSLocomotion()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public abstract class ILocomotion : MonoBehaviour
	{
		[Token(Token = "0x6001FEB")]
		public abstract void UpdateAxes(Controller3dRudder controller3dRudder, Vector4 axesWithFactor);

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x14F490C", Offset = "0x14F490C", VA = "0x14F490C")]
		protected ILocomotion()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class AxesParamCustom : IAxesParam
	{
		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Curve[] CustomCurves;

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x14EF838", Offset = "0x14EF838", VA = "0x14EF838")]
		public AxesParamCustom()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x14EFDDC", Offset = "0x14EFDDC", VA = "0x14EFDDC", Slot = "4")]
		public override ErrorCode UpdateParam(uint nPortNumber)
		{
			return default(ErrorCode);
		}
	}
	[Token(Token = "0x2000427")]
	public class AxesParamDefault : IAxesParam
	{
		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6FB")]
		public static float DEFAULT_DEADZONE;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static float DEFAULT_XSAT;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FF94")]
		public static float DEFAULT_DEADZONE_ROTATION;

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x14F0B84", Offset = "0x14F0B84", VA = "0x14F0B84")]
		public AxesParamDefault()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x14F0D10", Offset = "0x14F0D10", VA = "0x14F0D10", Slot = "4")]
		public override ErrorCode UpdateParam(uint nPortNumber)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x14EFAC8", Offset = "0x14EFAC8", VA = "0x14EFAC8")]
		public static Curve[] GetDefaultNonNormalizedCurves()
		{
			return null;
		}
	}
	[Token(Token = "0x2000428")]
	public class AxesParamNormalizedLinear : IAxesParam
	{
		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x14F14D8", Offset = "0x14F14D8", VA = "0x14F14D8")]
		public AxesParamNormalizedLinear()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x14F16A4", Offset = "0x14F16A4", VA = "0x14F16A4", Slot = "4")]
		public override ErrorCode UpdateParam(uint nPortNumber)
		{
			return default(ErrorCode);
		}
	}
	[Token(Token = "0x2000429")]
	public enum Axes
	{
		[Token(Token = "0x40023F6")]
		LeftRight,
		[Token(Token = "0x40023F7")]
		ForwardBackward,
		[Token(Token = "0x40023F8")]
		UpDown,
		[Token(Token = "0x40023F9")]
		Rotation,
		[Token(Token = "0x40023FA")]
		MaxAxes
	}
	[Token(Token = "0x200042A")]
	public enum Status
	{
		[Token(Token = "0x40023FC")]
		NoStatus = 0,
		[Token(Token = "0x40023FD")]
		NoFootStayStill = 1,
		[Token(Token = "0x40023FE")]
		Initialization = 2,
		[Token(Token = "0x40023FF")]
		PutYourFeet = 3,
		[Token(Token = "0x4002400")]
		PutSecondFoot = 4,
		[Token(Token = "0x4002401")]
		StayStill = 5,
		[Token(Token = "0x4002402")]
		InUse = 6,
		[Token(Token = "0x4002403")]
		Frozen = 253,
		[Token(Token = "0x4002404")]
		IsNotConnected = 254,
		[Token(Token = "0x4002405")]
		Error = 255
	}
	[Token(Token = "0x200042B")]
	public enum ErrorCode
	{
		[Token(Token = "0x4002407")]
		Success = 0,
		[Token(Token = "0x4002408")]
		NotConnected = 1,
		[Token(Token = "0x4002409")]
		Fail = 2,
		[Token(Token = "0x400240A")]
		IncorrectCommand = 3,
		[Token(Token = "0x400240B")]
		Timeout = 4,
		[Token(Token = "0x400240C")]
		DeviceNotSupported = 5,
		[Token(Token = "0x400240D")]
		DeviceInitError = 6,
		[Token(Token = "0x400240E")]
		ValidationError = 7,
		[Token(Token = "0x400240F")]
		ValidationTimeOut = 8,
		[Token(Token = "0x4002410")]
		NotReady = 9,
		[Token(Token = "0x4002411")]
		FirmwareNeedToBeUpdated = 10,
		[Token(Token = "0x4002412")]
		NotInitialized = 11,
		[Token(Token = "0x4002413")]
		NotSupported = 12,
		[Token(Token = "0x4002414")]
		DashboardInstallError = 13,
		[Token(Token = "0x4002415")]
		DashboardUpdateError = 14,
		[Token(Token = "0x4002416")]
		Other = 255
	}
	[Token(Token = "0x200042C")]
	public delegate float CalcCurveValue_t(IntPtr pCurve, float value);
	[Token(Token = "0x200042D")]
	public delegate void CallbackTypeConnect(uint value);
	[Token(Token = "0x200042E")]
	public class Sdk3dRudder
	{
		[Token(Token = "0x200078E")]
		private class Import
		{
			[PreserveSig]
			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0x14F5ACC", Offset = "0x14F5ACC", VA = "0x14F5ACC")]
			public static extern uint Init();

			[PreserveSig]
			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0x14F5CC4", Offset = "0x14F5CC4", VA = "0x14F5CC4")]
			public static extern ushort GetSDKVersion();

			[PreserveSig]
			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0x14F5DE4", Offset = "0x14F5DE4", VA = "0x14F5DE4")]
			public static extern uint GetNumberOfConnectedDevice();

			[PreserveSig]
			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0x14F5F28", Offset = "0x14F5F28", VA = "0x14F5F28")]
			public static extern bool IsDeviceConnected(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0x14F6084", Offset = "0x14F6084", VA = "0x14F6084")]
			public static extern ushort GetFWVersion(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0x14F61E0", Offset = "0x14F61E0", VA = "0x14F61E0")]
			public static extern ErrorCode HideSystemDevice(uint nPortNumber, bool bHide);

			[PreserveSig]
			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0x14F6348", Offset = "0x14F6348", VA = "0x14F6348")]
			public static extern bool IsSystemDeviceHidden(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002CCD")]
			[Address(RVA = "0x14F64C4", Offset = "0x14F64C4", VA = "0x14F64C4")]
			public static extern ErrorCode PlaySnd(uint nPortNumber, ushort nFrequency, ushort nDuration);

			[PreserveSig]
			[Token(Token = "0x6002CCE")]
			[Address(RVA = "0x14F66DC", Offset = "0x14F66DC", VA = "0x14F66DC")]
			public static extern ErrorCode PlaySndEx1(uint nPortNumber, uint nSize, IntPtr pTones, bool bAddToPlayedList);

			[PreserveSig]
			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0x14F6974", Offset = "0x14F6974", VA = "0x14F6974")]
			public static extern ErrorCode PlaySndEx2(uint nPortNumber, IntPtr sTones, bool bAddToPlayedList);

			[PreserveSig]
			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0x14F6B60", Offset = "0x14F6B60", VA = "0x14F6B60")]
			public static extern ErrorCode GetUserOffset(uint nPortNumber, IntPtr pAxisValue);

			[PreserveSig]
			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0x14F79E8", Offset = "0x14F79E8", VA = "0x14F79E8")]
			public static extern ErrorCode GetAxes(uint nPortNumber, IntPtr pAxesParam, IntPtr pAxisValue, CalcCurveValue_t pCalcCurve);

			[PreserveSig]
			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0x14F7B5C", Offset = "0x14F7B5C", VA = "0x14F7B5C")]
			public static extern Status GetStatus(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002CD3")]
			[Address(RVA = "0x14F7CA8", Offset = "0x14F7CA8", VA = "0x14F7CA8")]
			public static extern ushort GetSensor(uint nPortNumber, uint nIndex);

			[PreserveSig]
			[Token(Token = "0x6002CD4")]
			[Address(RVA = "0x14F7DAC", Offset = "0x14F7DAC", VA = "0x14F7DAC")]
			public static extern IntPtr GetDeviceInformation(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0x14F800C", Offset = "0x14F800C", VA = "0x14F800C")]
			public static extern ErrorCode SetFreeze(uint nPortNumber, bool bEnable);

			[PreserveSig]
			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0x14F8174", Offset = "0x14F8174", VA = "0x14F8174")]
			public static extern bool IsFrozen(uint nPortNumber);

			[PreserveSig]
			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0x14F8380", Offset = "0x14F8380", VA = "0x14F8380")]
			public static extern IntPtr GetErrorText(ErrorCode nError);

			[PreserveSig]
			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0x14F8290", Offset = "0x14F8290", VA = "0x14F8290")]
			public static extern ErrorCode GetLastSdkError();

			[PreserveSig]
			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0x14F847C", Offset = "0x14F847C", VA = "0x14F847C")]
			public static extern void Set3dREvent(CallbackTypeConnect OnConnect, CallbackTypeConnect OnDisconnect, CallbackTypeConnect OnEndSound);

			[PreserveSig]
			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0x14F5740", Offset = "0x14F5740", VA = "0x14F5740")]
			public static extern void InitQueueEvent();

			[PreserveSig]
			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0x14F8850", Offset = "0x14F8850", VA = "0x14F8850")]
			public static extern IntPtr GetEventMessage();

			[PreserveSig]
			[Token(Token = "0x6002CDC")]
			[Address(RVA = "0x14F8940", Offset = "0x14F8940", VA = "0x14F8940")]
			public static extern float CalcCurveValue(float fDeadZone, float fxSat, float fExp, float fValue);

			[PreserveSig]
			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0x14F8B34", Offset = "0x14F8B34", VA = "0x14F8B34")]
			public static extern float CalcNonSymmetricalPitch(uint nPortNumber, float fNormalizedV, IntPtr pCurve);

			[PreserveSig]
			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0x14F7EA8", Offset = "0x14F7EA8", VA = "0x14F7EA8")]
			public static extern void MemCpy(IntPtr pDest, IntPtr pSrc, int nSize);

			[PreserveSig]
			[Token(Token = "0x6002CDF")]
			[Address(RVA = "0x14F8EB4", Offset = "0x14F8EB4", VA = "0x14F8EB4")]
			public static extern ErrorCode StopSDK();

			[PreserveSig]
			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0x14F98F4", Offset = "0x14F98F4", VA = "0x14F98F4")]
			public static extern void EndSDK();

			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0x14F99DC", Offset = "0x14F99DC", VA = "0x14F99DC")]
			public Import()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x886808", Offset = "0x886808")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<uint> <>9__3_0;

			[Token(Token = "0x4002D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB732")]
			public static Action<uint> <>9__3_1;

			[Token(Token = "0x4002D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
			public static Action<uint> <>9__3_2;

			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0x14F922C", Offset = "0x14F922C", VA = "0x14F922C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002CE4")]
			[Address(RVA = "0x14F925C", Offset = "0x14F925C", VA = "0x14F925C")]
			internal void <Initialize>b__3_0(uint portNumber)
			{
			}

			[Token(Token = "0x6002CE5")]
			[Address(RVA = "0x14F94E0", Offset = "0x14F94E0", VA = "0x14F94E0")]
			internal void <Initialize>b__3_1(uint portNumber)
			{
			}

			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0x14F9764", Offset = "0x14F9764", VA = "0x14F9764")]
			internal void <Initialize>b__3_2(uint portNumber)
			{
			}
		}

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public static readonly int MAX_DEVICE;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FFBC")]
		public static readonly uint _3DRUDDER_SDK_VERSION;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly uint _3DRUDDER_PACKAGE_VERSION;

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x14F4AD0", Offset = "0x14F4AD0", VA = "0x14F4AD0")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x14F5828", Offset = "0x14F5828", VA = "0x14F5828")]
		public static ErrorCode Init()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x14F5A9C", Offset = "0x14F5A9C", VA = "0x14F5A9C")]
		public static ushort GetSDKVersion()
		{
			return default(ushort);
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x14F5DB4", Offset = "0x14F5DB4", VA = "0x14F5DB4")]
		public static uint GetNumberOfConnectedDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x14F5ED4", Offset = "0x14F5ED4", VA = "0x14F5ED4")]
		public static bool IsDeviceConnected(uint nPortNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x14F6044", Offset = "0x14F6044", VA = "0x14F6044")]
		public static ushort GetVersion(uint nPortNumber)
		{
			return default(ushort);
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x14F6180", Offset = "0x14F6180", VA = "0x14F6180")]
		public static ErrorCode HideSystemDevice(uint nPortNumber, bool bHide)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x14F62F4", Offset = "0x14F62F4", VA = "0x14F62F4")]
		public static bool IsSystemDeviceHidden(uint nPortNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x14F6464", Offset = "0x14F6464", VA = "0x14F6464")]
		public static ErrorCode PlaySnd(uint nPortNumber, ushort nFrequency, ushort nDuration)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x14F65D8", Offset = "0x14F65D8", VA = "0x14F65D8")]
		public static ErrorCode PlaySndEx(uint nPortNumber, uint nSize, Tone sTones, bool bAddToPlayedList = true)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x14F6800", Offset = "0x14F6800", VA = "0x14F6800")]
		public static ErrorCode PlaySndEx(uint nPortNumber, string sTones, bool bAddToPlayedList = true)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x14F6A90", Offset = "0x14F6A90", VA = "0x14F6A90")]
		public static ErrorCode GetUserOffset(uint nPortNumber, AxesValue sAxis)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x14F6C64", Offset = "0x14F6C64", VA = "0x14F6C64")]
		public static ErrorCode GetAxes(uint nPortNumber, IAxesParam sAxesParam, AxesValue sAxes)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x14F7B1C", Offset = "0x14F7B1C", VA = "0x14F7B1C")]
		public static Status GetStatus(uint nPortNumber)
		{
			return default(Status);
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x14F7C58", Offset = "0x14F7C58", VA = "0x14F7C58")]
		public static ushort GetSensor(uint nPortNumber, uint nIndex)
		{
			return default(ushort);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x14F0780", Offset = "0x14F0780", VA = "0x14F0780")]
		public static DeviceInformation GetDeviceInformation(uint nPortNumber)
		{
			return null;
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x14F7FAC", Offset = "0x14F7FAC", VA = "0x14F7FAC")]
		public static ErrorCode SetFreeze(uint nPortNumber, bool bEnable)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x14F8120", Offset = "0x14F8120", VA = "0x14F8120")]
		public static bool IsFrozen(uint nPortNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x14F0B54", Offset = "0x14F0B54", VA = "0x14F0B54")]
		public static ErrorCode GetLastError()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x14F5BBC", Offset = "0x14F5BBC", VA = "0x14F5BBC")]
		public static string GetErrorText(ErrorCode nError)
		{
			return null;
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x14F56E8", Offset = "0x14F56E8", VA = "0x14F56E8")]
		public static void SetEvent(CallbackTypeConnect OnConnect, CallbackTypeConnect OnDisconnect, CallbackTypeConnect OnEndSound)
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x14F85C8", Offset = "0x14F85C8", VA = "0x14F85C8")]
		public static EventData GetEventMessage()
		{
			return null;
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x14F3000", Offset = "0x14F3000", VA = "0x14F3000")]
		public static float CalcCurveValue(float fDeadZone, float fxSat, float fExp, float fValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x14F8A54", Offset = "0x14F8A54", VA = "0x14F8A54")]
		public static float CalcNonSymmetricalPitch(uint nPortNumber, float fNormalizedV, Curve sCurve)
		{
			return default(float);
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x14F8C40", Offset = "0x14F8C40", VA = "0x14F8C40")]
		public static ErrorCode Stop()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x14F8FA4", Offset = "0x14F8FA4", VA = "0x14F8FA4")]
		public static Vector3 GetAxes3D(AxesValue sAxis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x14F90A0", Offset = "0x14F90A0", VA = "0x14F90A0")]
		public Sdk3dRudder()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class EventRudder
	{
		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FFC4")]
		public static Action<uint> OnConnectEvent;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<uint> OnDisconnectEvent;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<uint> OnEndSoundEvent;

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x14F3B18", Offset = "0x14F3B18", VA = "0x14F3B18")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8ADADC", Offset = "0x8ADADC")]
		public static void OnConnect(uint nPortNumber)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x14F3CCC", Offset = "0x14F3CCC", VA = "0x14F3CCC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8ADB8C", Offset = "0x8ADB8C")]
		public static void OnDisconnect(uint nPortNumber)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x14F3E80", Offset = "0x14F3E80", VA = "0x14F3E80")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8ADC3C", Offset = "0x8ADC3C")]
		public static void OnEndSound(uint nPortNumber)
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x14F4034", Offset = "0x14F4034", VA = "0x14F4034")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x14F414C", Offset = "0x14F414C", VA = "0x14F414C")]
		public EventRudder()
		{
		}
	}
	[StructLayout(0)]
	[Token(Token = "0x2000430")]
	public class EventData
	{
		[Token(Token = "0x2000790")]
		public enum TypeEVent
		{
			[Token(Token = "0x4002D9D")]
			OnConnect,
			[Token(Token = "0x4002D9E")]
			OnDisconnect,
			[Token(Token = "0x4002D9F")]
			OnEndSound
		}

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TypeEVent typeEvent;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB73A")]
		public uint portNumber;

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x14F3AE8", Offset = "0x14F3AE8", VA = "0x14F3AE8")]
		public EventData()
		{
		}
	}
	[StructLayout(0)]
	[Token(Token = "0x2000431")]
	public class DeviceInformation
	{
		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName0;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB742")]
		private byte m_sDeviceName1;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private byte m_sDeviceName2;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FFD4")]
		private byte m_sDeviceName3;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName4;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName5;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName6;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB74A")]
		private byte m_sDeviceName7;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private byte m_sDeviceName8;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FFDC")]
		private byte m_sDeviceName9;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName10;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName11;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName12;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB752")]
		private byte m_sDeviceName13;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private byte m_sDeviceName14;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FFE4")]
		private byte m_sDeviceName15;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName16;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName17;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName18;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB75A")]
		private byte m_sDeviceName19;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private byte m_sDeviceName20;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FFEC")]
		private byte m_sDeviceName21;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName22;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName23;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName24;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB762")]
		private byte m_sDeviceName25;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private byte m_sDeviceName26;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FFF4")]
		private byte m_sDeviceName27;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName28;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName29;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_sDeviceName30;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB76A")]
		private byte m_sDeviceName31;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private uint m_nSerialNumber;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FFFC")]
		private float m_fMaxRoll;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_fMaxPitch;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_fMaxYaw;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_fUserRoll;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB772")]
		private float m_fUserPitch;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		private float m_fUserYaw;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x987124")]
		private float m_DefaultRoll2YawCompensation;

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x14F3084", Offset = "0x14F3084", VA = "0x14F3084")]
		public DeviceInformation()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x14F30B4", Offset = "0x14F30B4", VA = "0x14F30B4")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x14F38C0", Offset = "0x14F38C0", VA = "0x14F38C0")]
		public uint GetSerialNumber()
		{
			return default(uint);
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x14F38F0", Offset = "0x14F38F0", VA = "0x14F38F0")]
		public void SetUserRoll(float nVal)
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x14F3928", Offset = "0x14F3928", VA = "0x14F3928")]
		public void SetUserPitch(float nVal)
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x14F3960", Offset = "0x14F3960", VA = "0x14F3960")]
		public void SetUserYaw(float nVal)
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x14F3998", Offset = "0x14F3998", VA = "0x14F3998")]
		public float GetMaxRoll()
		{
			return default(float);
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x14F39C8", Offset = "0x14F39C8", VA = "0x14F39C8")]
		public float GetMaxPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x14F39F8", Offset = "0x14F39F8", VA = "0x14F39F8")]
		public float GetMaxYaw()
		{
			return default(float);
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x14F3A28", Offset = "0x14F3A28", VA = "0x14F3A28")]
		public float GetUserRoll()
		{
			return default(float);
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x14F3A58", Offset = "0x14F3A58", VA = "0x14F3A58")]
		public float GetUserPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x14F3A88", Offset = "0x14F3A88", VA = "0x14F3A88")]
		public float GetUserYaw()
		{
			return default(float);
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x14F3AB8", Offset = "0x14F3AB8", VA = "0x14F3AB8")]
		public float GetDefaultRoll2YawCompensation()
		{
			return default(float);
		}
	}
	[StructLayout(0)]
	[Token(Token = "0x2000432")]
	public class AxesValue : IDisposable
	{
		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_Axes1;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_Axes2;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_Axes3;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB779")]
		private float m_Axes4;

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x14F2148", Offset = "0x14F2148", VA = "0x14F2148", Slot = "1")]
		~AxesValue()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x14F228C", Offset = "0x14F228C", VA = "0x14F228C")]
		public AxesValue()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x14F22F4", Offset = "0x14F22F4", VA = "0x14F22F4")]
		public float Get(Axes nAxis)
		{
			return default(float);
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x14F23FC", Offset = "0x14F23FC", VA = "0x14F23FC", Slot = "5")]
		public virtual void Dispose()
		{
		}
	}
	[Serializable]
	[StructLayout(0)]
	[Token(Token = "0x2000433")]
	public class Curve : IDisposable
	{
		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		public float DeadZone;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x990004")]
		public float XSat;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Exp;

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x14F2D28", Offset = "0x14F2D28", VA = "0x14F2D28")]
		public Curve()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x14F0A24", Offset = "0x14F0A24", VA = "0x14F0A24")]
		public Curve(float fxSat, float fDeadZone, float fExp)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x14F2D90", Offset = "0x14F2D90", VA = "0x14F2D90", Slot = "1")]
		~Curve()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x14F2ED4", Offset = "0x14F2ED4", VA = "0x14F2ED4", Slot = "5")]
		public virtual float CalcCurveValue(float fValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x14F3070", Offset = "0x14F3070", VA = "0x14F3070", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000434")]
	public abstract class IAxesParam : ScriptableObject
	{
		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private Curve[] m_Curve;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public float Roll2YawCompensation;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB781")]
		[HideInInspector]
		public bool NonSymmetrical;

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x14EF950", Offset = "0x14EF950", VA = "0x14EF950")]
		public IAxesParam()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x14F4A74", Offset = "0x14F4A74", VA = "0x14F4A74", Slot = "4")]
		public virtual ErrorCode UpdateParam(uint nPortNumber)
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x14F1340", Offset = "0x14F1340", VA = "0x14F1340")]
		public Curve GetCurve(Axes nCurve)
		{
			return null;
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x14F0A9C", Offset = "0x14F0A9C", VA = "0x14F0A9C")]
		public void SetCurve(Axes nCurve, Curve pCurve)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x14F0CA0", Offset = "0x14F0CA0", VA = "0x14F0CA0")]
		public void SetCurves(Curve[] curves)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x14F4A94", Offset = "0x14F4A94", VA = "0x14F4A94")]
		public void NoUpDown()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x14F493C", Offset = "0x14F493C", VA = "0x14F493C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8ADCEC", Offset = "0x8ADCEC")]
		public static float CalcCurveValueCb(IntPtr pCurve, float fVal)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000435")]
	public struct InternalAxesParam
	{
		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float m_fDeadZone1;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98FFFC")]
		public float m_fDeadZone2;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_fDeadZone3;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_fDeadZone4;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_fxSat1;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB779")]
		public float m_fxSat2;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public float m_fxSat3;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x990004")]
		public float m_fxSat4;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_fExp1;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_fExp2;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_fExp3;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB781")]
		public float m_fExp4;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public ulong m_handleCurveObject1;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99000C")]
		public ulong m_handleCurveObject2;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_handleCurveObject3;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_handleCurveObject4;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_bValidatedAxes1;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB789")]
		public uint m_bValidatedAxes2;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9FFF0")]
		public uint m_bValidatedAxes3;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x990014")]
		public uint m_bValidatedAxes4;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_fRoll2YawCompensation;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_bNonSymmetrical;
	}
	[StructLayout(0)]
	[Token(Token = "0x2000436")]
	public class Tone : IDisposable
	{
		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D290", Offset = "0x89D290")]
		private ushort <Frequency>k__BackingField;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB7A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D2CC", Offset = "0x89D2CC")]
		private ushort <DurationOfTone>k__BackingField;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x89D308", Offset = "0x89D308")]
		private ushort <PauseAfterTone>k__BackingField;

		[Token(Token = "0x170002D9")]
		public ushort Frequency
		{
			[Token(Token = "0x600203D")]
			[Address(RVA = "0x14F9B58", Offset = "0x14F9B58", VA = "0x14F9B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADD9C", Offset = "0x8ADD9C")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x600203E")]
			[Address(RVA = "0x14F9B88", Offset = "0x14F9B88", VA = "0x14F9B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADDD8", Offset = "0x8ADDD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public ushort DurationOfTone
		{
			[Token(Token = "0x600203F")]
			[Address(RVA = "0x14F9BC0", Offset = "0x14F9BC0", VA = "0x14F9BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE14", Offset = "0x8ADE14")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6002040")]
			[Address(RVA = "0x14F9BF0", Offset = "0x14F9BF0", VA = "0x14F9BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE50", Offset = "0x8ADE50")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public ushort PauseAfterTone
		{
			[Token(Token = "0x6002041")]
			[Address(RVA = "0x14F9C28", Offset = "0x14F9C28", VA = "0x14F9C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADE8C", Offset = "0x8ADE8C")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6002042")]
			[Address(RVA = "0x14F9C58", Offset = "0x14F9C58", VA = "0x14F9C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADEC8", Offset = "0x8ADEC8")]
			private set
			{
			}
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x14F9C90", Offset = "0x14F9C90", VA = "0x14F9C90", Slot = "1")]
		~Tone()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x14F9DD4", Offset = "0x14F9DD4", VA = "0x14F9DD4")]
		public Tone()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x14F9E54", Offset = "0x14F9E54", VA = "0x14F9E54")]
		public Tone(ushort nFrequency, ushort nDurationOfTone, ushort nPauseAfterTone)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x14F9EE0", Offset = "0x14F9EE0", VA = "0x14F9EE0", Slot = "5")]
		public virtual void Dispose()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000437")]
	public class SmoothMovement
	{
		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99002C")]
		public bool Enable;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x89D344", Offset = "0x89D344")]
		public float Smoothness;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float CurrentSpeed;

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x14F9A0C", Offset = "0x14F9A0C", VA = "0x14F9A0C")]
		public SmoothMovement()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x14F9A84", Offset = "0x14F9A84", VA = "0x14F9A84")]
		public float ComputeSpeed(float input, float deltatime)
		{
			return default(float);
		}
	}
}
