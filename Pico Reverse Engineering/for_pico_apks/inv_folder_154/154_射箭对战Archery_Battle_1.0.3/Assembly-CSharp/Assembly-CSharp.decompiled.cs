using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization.Formatters.Binary;
using System.Xml;
using ArcheryBattle;
using ArcheryBattle.AI;
using ArcheryBattle.Plugins.RobustFSM.Core.Base;
using ArcheryBattle.Plugins.RobustFSM.Core.Interfaces;
using ArcheryBattle.Plugins.RobustFSM.Mono;
using Com.Colorzore.Net;
using DG.Tweening;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using Photon.Pun;
using Photon.Pun.Demo.PunBasics;
using Photon.Realtime;
using RootMotion;
using RootMotion.Demos;
using RootMotion.FinalIK;
using TMPro;
using Unity.Profiling;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Serializable]
[Token(Token = "0x2000002")]
public class ModelLevelItem
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool IsLock;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int Score;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xB9965C", Offset = "0xB9965C", VA = "0xB9965C")]
	public ModelLevelItem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000003")]
public class ModelLevel
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<ModelLevelItem> modelLevels;

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xB995D8", Offset = "0xB995D8", VA = "0xB995D8")]
	public ModelLevel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000004")]
public class ModelLevelsData
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ModelLevel Adven;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xB9966C", Offset = "0xB9966C", VA = "0xB9966C")]
	public ModelLevelsData()
	{
	}
}
[Token(Token = "0x2000005")]
public class LevelsJsonSaveLyn : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ModelLevelsData datas;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string filePath;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isTest;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xB94110", Offset = "0xB94110", VA = "0xB94110")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xB942F8", Offset = "0xB942F8", VA = "0xB942F8")]
	public void SaveJsonData()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xB943EC", Offset = "0xB943EC", VA = "0xB943EC")]
	public void ReadJsonData()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xB942B8", Offset = "0xB942B8", VA = "0xB942B8")]
	public void ClearJsonData()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xB94540", Offset = "0xB94540", VA = "0xB94540")]
	public LevelsJsonSaveLyn()
	{
	}
}
[Token(Token = "0x2000006")]
public class DesChildLYN : MonoBehaviour
{
	[Token(Token = "0x6000009")]
	[Address(RVA = "0xCC5C10", Offset = "0xCC5C10", VA = "0xCC5C10")]
	public void DesChild()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xCC5D0C", Offset = "0xCC5D0C", VA = "0xCC5D0C")]
	public DesChildLYN()
	{
	}
}
[Token(Token = "0x2000007")]
public class MoldThroughDetectionLYN : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 LastHeadLoc;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Origin;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xB99844", Offset = "0xB99844", VA = "0xB99844")]
	private void Start()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xB99880", Offset = "0xB99880", VA = "0xB99880")]
	private void Update()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB99A78", Offset = "0xB99A78", VA = "0xB99A78")]
	public MoldThroughDetectionLYN()
	{
	}
}
[Token(Token = "0x2000008")]
public class TeleportationController : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputActionProperty m_teleportModeActivate;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputActionProperty m_teleportModeCancel;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InputAction teleportModeActivate;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InputAction teleportModeCancel;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private XRRayInteractor teleportInteractor;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject Reticle;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform HandController;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform Head;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ActionBasedController ActionBasedController;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action callback;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xFA7D6C", Offset = "0xFA7D6C", VA = "0xFA7D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xFA7E54", Offset = "0xFA7E54", VA = "0xFA7E54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xFA7EA4", Offset = "0xFA7EA4", VA = "0xFA7EA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xFA801C", Offset = "0xFA801C", VA = "0xFA801C")]
	private void SetTeleportController(bool isEnable)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xFA8108", Offset = "0xFA8108", VA = "0xFA8108")]
	private bool CanEnterTeleport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xFA8164", Offset = "0xFA8164", VA = "0xFA8164")]
	private bool CanExitTeleport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xFA7E08", Offset = "0xFA7E08", VA = "0xFA7E08")]
	private void EnableAction()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xFA7E58", Offset = "0xFA7E58", VA = "0xFA7E58")]
	private void DisableAction()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xFA81C0", Offset = "0xFA81C0", VA = "0xFA81C0")]
	public TeleportationController()
	{
	}
}
[Token(Token = "0x2000009")]
public class AnimalAppearLYN : MonoBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int animalNumber;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool AnimalAppeared;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool AnimalAttacked;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> AnimalsShow;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> RunWays;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> RunWays1;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform parent;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xC2B060", Offset = "0xC2B060", VA = "0xC2B060")]
	public void AnimalAppear()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xC2B578", Offset = "0xC2B578", VA = "0xC2B578")]
	public void ShowResultAnimal()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xC2B698", Offset = "0xC2B698", VA = "0xC2B698")]
	public AnimalAppearLYN()
	{
	}
}
[Serializable]
[Token(Token = "0x200000A")]
public class WildAnimal
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsLock;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xB754C4", Offset = "0xB754C4", VA = "0xB754C4")]
	public WildAnimal()
	{
	}
}
[Serializable]
[Token(Token = "0x200000B")]
public class WildAnimals
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<WildAnimal> wildAnimals;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xB754CC", Offset = "0xB754CC", VA = "0xB754CC")]
	public WildAnimals()
	{
	}
}
[Token(Token = "0x200000C")]
public class AnimalLockLYN : MonoBehaviour
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C89C", Offset = "0x83C89C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83C89C", Offset = "0x83C89C")]
	private static AnimalLockLYN <Instance>k__BackingField;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WildAnimals wildAnimals;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string filePath;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> Animals;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> AnimalPrefab;

	[Token(Token = "0x17000001")]
	public static AnimalLockLYN Instance
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0xC2B74C", Offset = "0xC2B74C", VA = "0xC2B74C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844C04", Offset = "0x844C04")]
		get
		{
			return null;
		}
		[Token(Token = "0x600001D")]
		[Address(RVA = "0xC2B6F8", Offset = "0xC2B6F8", VA = "0xC2B6F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844BF4", Offset = "0x844BF4")]
		private set
		{
		}
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xC2B798", Offset = "0xC2B798", VA = "0xC2B798")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xC2B9B0", Offset = "0xC2B9B0", VA = "0xC2B9B0")]
	public void SaveJsonData()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xC2BAA4", Offset = "0xC2BAA4", VA = "0xC2BAA4")]
	public void ReadJsonData()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xC2BCE0", Offset = "0xC2BCE0", VA = "0xC2BCE0")]
	public void ClearJsonData()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xC2BBF8", Offset = "0xC2BBF8", VA = "0xC2BBF8")]
	public void RenewAnimal()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xC2BD20", Offset = "0xC2BD20", VA = "0xC2BD20")]
	public AnimalLockLYN()
	{
	}
}
[Token(Token = "0x200000D")]
public class ExhibitsAnimalLYN : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xCC82DC", Offset = "0xCC82DC", VA = "0xCC82DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xCC8338", Offset = "0xCC8338", VA = "0xCC8338")]
	public void Collected()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xCC8524", Offset = "0xCC8524", VA = "0xCC8524")]
	public ExhibitsAnimalLYN()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xCC8534", Offset = "0xCC8534", VA = "0xCC8534")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844C14", Offset = "0x844C14")]
	private void <Collected>b__2_0()
	{
	}
}
[Token(Token = "0x200000E")]
public class LevelInfoLYN : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200000F")]
	public class LevelBaseInfoLYN
	{
		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsLock;

		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Score;

		[Token(Token = "0x600002C")]
		[Address(RVA = "0xB7CD60", Offset = "0xB7CD60", VA = "0xB7CD60")]
		public LevelBaseInfoLYN()
		{
		}
	}

	[Token(Token = "0x2000010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BC14", Offset = "0x83BC14")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelInfoLYN <>4__this;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mode;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Level;

		[Token(Token = "0x600002D")]
		[Address(RVA = "0xB7CD2C", Offset = "0xB7CD2C", VA = "0xB7CD2C")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0xB7CD34", Offset = "0xB7CD34", VA = "0xB7CD34")]
		internal void <InitInfo>b__0()
		{
		}
	}

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI LevelText;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Suo;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Bg;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image Star;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject StarGp;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button LevelButton;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Sprite> sprites;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB92AC4", Offset = "0xB92AC4", VA = "0xB92AC4")]
	public void InitInfo(bool IsLock, int Score, int Level, string mode, bool nextIsLock = false)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB92DD4", Offset = "0xB92DD4", VA = "0xB92DD4")]
	private void LoadLevel(string mode, int Level)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB93048", Offset = "0xB93048", VA = "0xB93048")]
	public LevelInfoLYN()
	{
	}
}
[Token(Token = "0x2000011")]
public class LevelManagerLYN : Singleton<LevelManagerLYN>
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<LevelItem> levelItems;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LevelItem curlevelItem;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IGameModeLYN _gameMode;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShowResultLYN showResult;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Wild;

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xB93960", Offset = "0xB93960", VA = "0xB93960")]
	public void Init(IGameModeLYN gameMode)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xB93968", Offset = "0xB93968", VA = "0xB93968")]
	public LevelItem CreateLevelItem(int levelId)
	{
		return null;
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xB93C60", Offset = "0xB93C60", VA = "0xB93C60")]
	public void ShowFinishPanel(bool isPass, int score = 0)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xB93E98", Offset = "0xB93E98", VA = "0xB93E98")]
	public void FindAllChildLevelItems()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xB93FF0", Offset = "0xB93FF0", VA = "0xB93FF0")]
	public LevelManagerLYN()
	{
	}
}
[Token(Token = "0x2000012")]
public class ShowResultLYN : BaseUiMenu
{
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BC24", Offset = "0x83BC24")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShowResultLYN <>4__this;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int starIndex;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int count;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action callBack;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x600003E")]
		[Address(RVA = "0xB84F18", Offset = "0xB84F18", VA = "0xB84F18")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0xB84F20", Offset = "0xB84F20", VA = "0xB84F20")]
		internal void <ShowStar>b__0()
		{
		}
	}

	[Token(Token = "0x2000014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BC34", Offset = "0x83BC34")]
	private sealed class <ShowStar>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int starIndex;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShowResultLYN <>4__this;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <waitFor>5__1;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__2;

		[Token(Token = "0x17000002")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000043")]
			[Address(RVA = "0xB851B0", Offset = "0xB851B0", VA = "0xB851B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000003")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000045")]
			[Address(RVA = "0xB851F8", Offset = "0xB851F8", VA = "0xB851F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0xB84FE0", Offset = "0xB84FE0", VA = "0xB84FE0")]
		[DebuggerHidden]
		public <ShowStar>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0xB8500C", Offset = "0xB8500C", VA = "0xB8500C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0xB85010", Offset = "0xB85010", VA = "0xB85010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0xB851B8", Offset = "0xB851B8", VA = "0xB851B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite[] sprites;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image[] Stars;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem[] Particles;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text result;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button Retry;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button Next;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button exitBtn;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string LevelMode;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ModelLevel LevelInfo;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quiver quiver;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text moneyText;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tweener _coinTween;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int CoinNum;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine _coroutine;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xCD459C", Offset = "0xCD459C", VA = "0xCD459C")]
	public void ShowStar(int starIndex, int count, float duration, Action callBack)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xCD4700", Offset = "0xCD4700", VA = "0xCD4700")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x844C24", Offset = "0x844C24")]
	private IEnumerator ShowStar(int starIndex, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xCD4798", Offset = "0xCD4798", VA = "0xCD4798")]
	public void ShowResult(int Score)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xCD4D9C", Offset = "0xCD4D9C", VA = "0xCD4D9C")]
	public void ReTryThisLevel()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xCD4E64", Offset = "0xCD4E64", VA = "0xCD4E64")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xCD4F44", Offset = "0xCD4F44", VA = "0xCD4F44")]
	public void GoHome()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xCD4B80", Offset = "0xCD4B80", VA = "0xCD4B80")]
	private void InfoRenew(int Score)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xCD4FA0", Offset = "0xCD4FA0", VA = "0xCD4FA0", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xCD50D8", Offset = "0xCD50D8", VA = "0xCD50D8")]
	public ShowResultLYN()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xCD50E8", Offset = "0xCD50E8", VA = "0xCD50E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844C84", Offset = "0x844C84")]
	private void <ShowResult>b__16_0(float value)
	{
	}
}
[Token(Token = "0x2000015")]
public class UIListenerLYN : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button AdvenBtn;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button DuetBtn;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ModeSelect;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LevelSelect;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject item;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform ItemGp;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject netUiPanel;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isFirst;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xFAD2B8", Offset = "0xFAD2B8", VA = "0xFAD2B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xFAD3BC", Offset = "0xFAD3BC", VA = "0xFAD3BC")]
	private void ClickLevel(string mode)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xFAD738", Offset = "0xFAD738", VA = "0xFAD738")]
	private void ClickDuet()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xFAD4C8", Offset = "0xFAD4C8", VA = "0xFAD4C8")]
	private void InsItemJson(int Level, ModelLevel model, string mode)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xFAD788", Offset = "0xFAD788", VA = "0xFAD788")]
	private void PlaySource()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xFAD7F0", Offset = "0xFAD7F0", VA = "0xFAD7F0")]
	public UIListenerLYN()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xFAD800", Offset = "0xFAD800", VA = "0xFAD800")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844CE4", Offset = "0x844CE4")]
	private void <Awake>b__8_0()
	{
	}
}
[Token(Token = "0x2000016")]
public class Move : MonoBehaviour
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Move _ins;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject kill;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 ditance;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startPos;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isClick;

	[Token(Token = "0x17000004")]
	public static Move Ins
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0xB9A73C", Offset = "0xB9A73C", VA = "0xB9A73C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xB9A788", Offset = "0xB9A788", VA = "0xB9A788")]
	private void Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xB9A868", Offset = "0xB9A868", VA = "0xB9A868")]
	private void Update()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xB9AA1C", Offset = "0xB9AA1C", VA = "0xB9AA1C")]
	public void ActiveShow()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xB9AA3C", Offset = "0xB9AA3C", VA = "0xB9AA3C")]
	public void ActiveHide()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xB9AA5C", Offset = "0xB9AA5C", VA = "0xB9AA5C")]
	public Move()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xB9AA68", Offset = "0xB9AA68", VA = "0xB9AA68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844CF4", Offset = "0x844CF4")]
	private void <Update>b__8_0()
	{
	}
}
[Token(Token = "0x2000017")]
public class PlayerController : MonoBehaviour
{
	[Token(Token = "0x2000018")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BC44", Offset = "0x83BC44")]
	private sealed class <BurstFire>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int burstAmount;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerController <>4__this;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__1;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000060")]
			[Address(RVA = "0xB83378", Offset = "0xB83378", VA = "0xB83378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000062")]
			[Address(RVA = "0xB833C0", Offset = "0xB833C0", VA = "0xB833C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0xB83274", Offset = "0xB83274", VA = "0xB83274")]
		[DebuggerHidden]
		public <BurstFire>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0xB832A0", Offset = "0xB832A0", VA = "0xB832A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0xB832A4", Offset = "0xB832A4", VA = "0xB832A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000061")]
		[Address(RVA = "0xB83380", Offset = "0xB83380", VA = "0xB83380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject projectile;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float MoveSpeed;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 MoveValue;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 m_Rotation;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_Charging;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x20DFBB8", Offset = "0x20DFBB8", VA = "0x20DFBB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x20DFC30", Offset = "0x20DFC30", VA = "0x20DFC30")]
	private void OnJump()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x20DFC60", Offset = "0x20DFC60", VA = "0x20DFC60")]
	private void OnMove(InputValue value)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x20DFCC8", Offset = "0x20DFCC8", VA = "0x20DFCC8")]
	private void OnLook(InputValue value)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x20DFDC4", Offset = "0x20DFDC4", VA = "0x20DFDC4")]
	public void OnFire()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x20E00A8", Offset = "0x20E00A8", VA = "0x20E00A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x844D04", Offset = "0x844D04")]
	private IEnumerator BurstFire(int burstAmount)
	{
		return null;
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x20E0130", Offset = "0x20E0130", VA = "0x20E0130")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x20DFDC8", Offset = "0x20DFDC8", VA = "0x20DFDC8")]
	private void Fire()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x20E01EC", Offset = "0x20E01EC", VA = "0x20E01EC")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000019")]
public class PlayerInputAction : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
{
	[Token(Token = "0x200001A")]
	public struct PlayerActionMapActions
	{
		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PlayerInputAction m_Wrapper;

		[Token(Token = "0x1700000D")]
		public InputAction Jump
		{
			[Token(Token = "0x6000075")]
			[Address(RVA = "0xB834CC", Offset = "0xB834CC", VA = "0xB834CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		public InputAction Move
		{
			[Token(Token = "0x6000076")]
			[Address(RVA = "0xB834E8", Offset = "0xB834E8", VA = "0xB834E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		public InputAction Look
		{
			[Token(Token = "0x6000077")]
			[Address(RVA = "0xB83504", Offset = "0xB83504", VA = "0xB83504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		public InputAction Fire
		{
			[Token(Token = "0x6000078")]
			[Address(RVA = "0xB83520", Offset = "0xB83520", VA = "0xB83520")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		public bool enabled
		{
			[Token(Token = "0x600007C")]
			[Address(RVA = "0xB835A8", Offset = "0xB835A8", VA = "0xB835A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0xB834C4", Offset = "0xB834C4", VA = "0xB834C4")]
		public PlayerActionMapActions(PlayerInputAction wrapper)
		{
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0xB8353C", Offset = "0xB8353C", VA = "0xB8353C")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0xB83558", Offset = "0xB83558", VA = "0xB83558")]
		public void Enable()
		{
		}

		[Token(Token = "0x600007B")]
		[Address(RVA = "0xB83580", Offset = "0xB83580", VA = "0xB83580")]
		public void Disable()
		{
		}

		[Token(Token = "0x600007D")]
		[Address(RVA = "0xB835D0", Offset = "0xB835D0", VA = "0xB835D0")]
		public static implicit operator InputActionMap(PlayerActionMapActions set)
		{
			return null;
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0xB835E8", Offset = "0xB835E8", VA = "0xB835E8")]
		public void SetCallbacks(IPlayerActionMapActions instance)
		{
		}
	}

	[Token(Token = "0x200001B")]
	public interface IPlayerActionMapActions
	{
		[Token(Token = "0x600007F")]
		void OnJump(InputAction.CallbackContext context);

		[Token(Token = "0x6000080")]
		void OnMove(InputAction.CallbackContext context);

		[Token(Token = "0x6000081")]
		void OnLook(InputAction.CallbackContext context);

		[Token(Token = "0x6000082")]
		void OnFire(InputAction.CallbackContext context);
	}

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C8D8", Offset = "0x83C8D8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83C8D8", Offset = "0x83C8D8")]
	private readonly InputActionAsset <asset>k__BackingField;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly InputActionMap m_PlayerActionMap;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IPlayerActionMapActions m_PlayerActionMapActionsCallbackInterface;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly InputAction m_PlayerActionMap_Jump;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly InputAction m_PlayerActionMap_Move;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly InputAction m_PlayerActionMap_Look;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly InputAction m_PlayerActionMap_Fire;

	[Token(Token = "0x17000007")]
	public InputActionAsset asset
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x20E2490", Offset = "0x20E2490", VA = "0x20E2490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844DB4", Offset = "0x844DB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	public InputBinding? bindingMask
	{
		[Token(Token = "0x6000066")]
		[Address(RVA = "0x20E26A8", Offset = "0x20E26A8", VA = "0x20E26A8", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000067")]
		[Address(RVA = "0x20E26D4", Offset = "0x20E26D4", VA = "0x20E26D4", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public ReadOnlyArray<UnityEngine.InputSystem.InputDevice>? devices
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0x20E272C", Offset = "0x20E272C", VA = "0x20E272C", Slot = "9")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000069")]
		[Address(RVA = "0x20E2778", Offset = "0x20E2778", VA = "0x20E2778", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public ReadOnlyArray<InputControlScheme> controlSchemes
	{
		[Token(Token = "0x600006A")]
		[Address(RVA = "0x20E27C8", Offset = "0x20E27C8", VA = "0x20E27C8", Slot = "11")]
		get
		{
			return default(ReadOnlyArray<InputControlScheme>);
		}
	}

	[Token(Token = "0x1700000B")]
	public IEnumerable<InputBinding> bindings
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0x20E2870", Offset = "0x20E2870", VA = "0x20E2870", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public PlayerActionMapActions PlayerActionMap
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0x20E290C", Offset = "0x20E290C", VA = "0x20E290C")]
		get
		{
			return default(PlayerActionMapActions);
		}
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x20E2498", Offset = "0x20E2498", VA = "0x20E2498")]
	public PlayerInputAction()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x20E2640", Offset = "0x20E2640", VA = "0x20E2640", Slot = "17")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x20E27E4", Offset = "0x20E27E4", VA = "0x20E27E4", Slot = "12")]
	public bool Contains(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x20E2800", Offset = "0x20E2800", VA = "0x20E2800", Slot = "15")]
	public IEnumerator<InputAction> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x20E281C", Offset = "0x20E281C", VA = "0x20E281C", Slot = "16")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x20E2838", Offset = "0x20E2838", VA = "0x20E2838", Slot = "13")]
	public void Enable()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x20E2854", Offset = "0x20E2854", VA = "0x20E2854", Slot = "14")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x20E288C", Offset = "0x20E288C", VA = "0x20E288C", Slot = "5")]
	public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x20E28AC", Offset = "0x20E28AC", VA = "0x20E28AC", Slot = "6")]
	public int FindBinding(InputBinding bindingMask, out InputAction action)
	{
		return default(int);
	}
}
[Token(Token = "0x200001C")]
public class AutoMovePath1 : BaseMove
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ArcheryBattle.Path path;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Vector3> movePaths;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tweener _tweener;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xC31B34", Offset = "0xC31B34", VA = "0xC31B34")]
	private int GetNearTranIndex(Vector3 pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xC31C28", Offset = "0xC31C28", VA = "0xC31C28")]
	private void CreatePath(List<Transform> points)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xC31D98", Offset = "0xC31D98", VA = "0xC31D98", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xC31EA8", Offset = "0xC31EA8", VA = "0xC31EA8", Slot = "9")]
	public override void PlayMove()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xC31EFC", Offset = "0xC31EFC", VA = "0xC31EFC", Slot = "10")]
	public override void StopMove()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xC31F4C", Offset = "0xC31F4C", VA = "0xC31F4C")]
	public AutoMovePath1()
	{
	}
}
[Token(Token = "0x200001D")]
public class RotateYeZi : MonoBehaviour
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool right;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool left;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xCCFA08", Offset = "0xCCFA08", VA = "0xCCFA08")]
	private void Start()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xCCFA0C", Offset = "0xCCFA0C", VA = "0xCCFA0C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xCCFAA0", Offset = "0xCCFAA0", VA = "0xCCFAA0")]
	private void ToRight()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xCCFAD4", Offset = "0xCCFAD4", VA = "0xCCFAD4")]
	private void ToLeft()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xCCFB08", Offset = "0xCCFB08", VA = "0xCCFB08")]
	public RotateYeZi()
	{
	}
}
[Token(Token = "0x200001E")]
public class Connect : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int onlineRoom;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xCC35E0", Offset = "0xCC35E0", VA = "0xCC35E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xCC36F8", Offset = "0xCC36F8", VA = "0xCC36F8", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xCC37A4", Offset = "0xCC37A4", VA = "0xCC37A4", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xCC3888", Offset = "0xCC3888", VA = "0xCC3888", Slot = "36")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xCC38D0", Offset = "0xCC38D0", VA = "0xCC38D0", Slot = "37")]
	public override void OnLeftLobby()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xCC38D4", Offset = "0xCC38D4", VA = "0xCC38D4", Slot = "40")]
	public override void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xCC39AC", Offset = "0xCC39AC", VA = "0xCC39AC")]
	public Connect()
	{
	}
}
[Token(Token = "0x200001F")]
public class GameSetting : MonoBehaviour
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83C934", Offset = "0x83C934")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83C934", Offset = "0x83C934")]
	public float value;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xB8D3C8", Offset = "0xB8D3C8", VA = "0xB8D3C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB8D3D4", Offset = "0xB8D3D4", VA = "0xB8D3D4")]
	public GameSetting()
	{
	}
}
[Token(Token = "0x2000020")]
public class LoadingScene : MonoBehaviour
{
	[Token(Token = "0x2000021")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BC54", Offset = "0x83BC54")]
	private sealed class <Load>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScene <>4__this;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncOperation>5__1;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A3")]
			[Address(RVA = "0xB7E3D8", Offset = "0xB7E3D8", VA = "0xB7E3D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A5")]
			[Address(RVA = "0xB7E420", Offset = "0xB7E420", VA = "0xB7E420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xB7E0A0", Offset = "0xB7E0A0", VA = "0xB7E0A0")]
		[DebuggerHidden]
		public <Load>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xB7E0CC", Offset = "0xB7E0CC", VA = "0xB7E0CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xB7E0D0", Offset = "0xB7E0D0", VA = "0xB7E0D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xB7E3E0", Offset = "0xB7E3E0", VA = "0xB7E3E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000022")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BC64", Offset = "0x83BC64")]
	private sealed class <LoadPun>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScene <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A9")]
			[Address(RVA = "0xB7E5BC", Offset = "0xB7E5BC", VA = "0xB7E5BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000AB")]
			[Address(RVA = "0xB7E604", Offset = "0xB7E604", VA = "0xB7E604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xB7E428", Offset = "0xB7E428", VA = "0xB7E428")]
		[DebuggerHidden]
		public <LoadPun>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xB7E454", Offset = "0xB7E454", VA = "0xB7E454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xB7E458", Offset = "0xB7E458", VA = "0xB7E458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xB7E5C4", Offset = "0xB7E5C4", VA = "0xB7E5C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider progress;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text progressText;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text[] loadingTexts;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int senceIndex;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool isPun;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xB95BB0", Offset = "0xB95BB0", VA = "0xB95BB0")]
	public static void LoadScene(int senceIndex)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB95C70", Offset = "0xB95C70", VA = "0xB95C70")]
	public static void LoadScenePun(int senceIndex)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB95D34", Offset = "0xB95D34", VA = "0xB95D34")]
	private void Start()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB95EC4", Offset = "0xB95EC4", VA = "0xB95EC4")]
	public void SetLoadingText(string text)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB95FD8", Offset = "0xB95FD8", VA = "0xB95FD8")]
	private void SetLoadingPercentage(float value)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xB96124", Offset = "0xB96124", VA = "0xB96124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x844DC4", Offset = "0x844DC4")]
	private IEnumerator Load()
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xB960AC", Offset = "0xB960AC", VA = "0xB960AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x844E24", Offset = "0x844E24")]
	private IEnumerator LoadPun()
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xB9619C", Offset = "0xB9619C", VA = "0xB9619C")]
	public LoadingScene()
	{
	}
}
[Token(Token = "0x2000023")]
public class ExportCode : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> filePath;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DirectoryInfo> AllDirector;

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xCC85AC", Offset = "0xCC85AC", VA = "0xCC85AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xCC88B0", Offset = "0xCC88B0", VA = "0xCC88B0")]
	private void WriteAllDate()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xCC870C", Offset = "0xCC870C", VA = "0xCC870C")]
	private void GetCSFiles()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xCC8638", Offset = "0xCC8638", VA = "0xCC8638")]
	private void GetAllDirect(DirectoryInfo dir)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xCC8A70", Offset = "0xCC8A70", VA = "0xCC8A70")]
	public ExportCode()
	{
	}
}
[Token(Token = "0x2000024")]
public class ProfilerStats : MonoSingleton<ProfilerStats>
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ProfilerRecorder triangleRecorder;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ProfilerRecorder drawCallsRecorder;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI statOverlay;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputAction inputAction;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int framesCount;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float framesTime;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lastFPS;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _isShow;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string opreateText;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xCC90B8", Offset = "0xCC90B8", VA = "0xCC90B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xCC9258", Offset = "0xCC9258", VA = "0xCC9258")]
	private void OnTap(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xCC925C", Offset = "0xCC925C", VA = "0xCC925C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xCC9310", Offset = "0xCC9310", VA = "0xCC9310")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xCC9354", Offset = "0xCC9354", VA = "0xCC9354")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xCC91F0", Offset = "0xCC91F0", VA = "0xCC91F0")]
	public void hideInfo()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xCC95C0", Offset = "0xCC95C0", VA = "0xCC95C0")]
	public void showDebug(string debugInfo)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xCC95E4", Offset = "0xCC95E4", VA = "0xCC95E4")]
	public ProfilerStats()
	{
	}
}
[Token(Token = "0x2000025")]
public class ShowHideTest : MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputAction inputUpAction;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputAction inputDownAction;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProfilerStats profilerStats;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Stack<GameObject> enableQueue;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Stack<GameObject> disableStack;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> gameObjects;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xCD3CF8", Offset = "0xCD3CF8", VA = "0xCD3CF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xCD3CFC", Offset = "0xCD3CFC", VA = "0xCD3CFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xCD3E10", Offset = "0xCD3E10", VA = "0xCD3E10")]
	private void GetAll()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xCD4014", Offset = "0xCD4014", VA = "0xCD4014")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xCD4018", Offset = "0xCD4018", VA = "0xCD4018")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xCD4054", Offset = "0xCD4054", VA = "0xCD4054")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xCD4090", Offset = "0xCD4090", VA = "0xCD4090")]
	public void UpdateText(string text)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xCD40AC", Offset = "0xCD40AC", VA = "0xCD40AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xCD42CC", Offset = "0xCD42CC", VA = "0xCD42CC")]
	private void OnInputAction(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xCD44A0", Offset = "0xCD44A0", VA = "0xCD44A0")]
	public ShowHideTest()
	{
	}
}
[Token(Token = "0x2000026")]
public class DeviceInfo
{
	[Token(Token = "0x2000027")]
	public enum DeviceType
	{
		[Token(Token = "0x4000094")]
		iPad,
		[Token(Token = "0x4000095")]
		Normal,
		[Token(Token = "0x4000096")]
		AndroidNarrow,
		[Token(Token = "0x4000097")]
		iPhoneX,
		[Token(Token = "0x4000098")]
		SuperNarrow
	}

	[Token(Token = "0x17000016")]
	public static DeviceType CurrentDevice
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xCC5D14", Offset = "0xCC5D14", VA = "0xCC5D14")]
		get
		{
			return default(DeviceType);
		}
	}

	[Token(Token = "0x17000017")]
	public static bool IsEditor
	{
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xCC5DE8", Offset = "0xCC5DE8", VA = "0xCC5DE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xCC5E30", Offset = "0xCC5E30", VA = "0xCC5E30")]
	public DeviceInfo()
	{
	}
}
[Token(Token = "0x2000028")]
public class Easing
{
	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xCC6D84", Offset = "0xCC6D84", VA = "0xCC6D84")]
	public static float EaseInSine(float x)
	{
		return default(float);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xCC6DB4", Offset = "0xCC6DB4", VA = "0xCC6DB4")]
	public static float EaseOutSine(float x)
	{
		return default(float);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xCC6DCC", Offset = "0xCC6DCC", VA = "0xCC6DCC")]
	public static float EaseInOutSine(float x)
	{
		return default(float);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xCC6DFC", Offset = "0xCC6DFC", VA = "0xCC6DFC")]
	public static float EaseInQuad(float x)
	{
		return default(float);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xCC6E04", Offset = "0xCC6E04", VA = "0xCC6E04")]
	public static float EaseOutQuad(float x)
	{
		return default(float);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xCC6E18", Offset = "0xCC6E18", VA = "0xCC6E18")]
	public Easing()
	{
	}
}
[Token(Token = "0x2000029")]
public class Tools : MonoBehaviour
{
	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xFABFFC", Offset = "0xFABFFC", VA = "0xFABFFC")]
	public static void ChangeScenceSkyBox(Material material)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xFAC004", Offset = "0xFAC004", VA = "0xFAC004")]
	public static void ChangeScenceFog(bool isOpen, Color color)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xFAC054", Offset = "0xFAC054", VA = "0xFAC054")]
	public Tools()
	{
	}
}
[Token(Token = "0x200002A")]
public class ScreenController : BaseMonitorMono
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScreenView leftScreenView;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ScreenView rightScreenView;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RawImage tvRawImage;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FollowCamera followCamera;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BreakthroughModeLYN BreakthroughModeLyn;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int source;

	[Token(Token = "0x17000018")]
	public FollowCamera GetFollowCamera
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xCD0858", Offset = "0xCD0858", VA = "0xCD0858")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xCD029C", Offset = "0xCD029C", VA = "0xCD029C", Slot = "7")]
	protected override void OnChangeWind(WindData data)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xCD02A0", Offset = "0xCD02A0", VA = "0xCD02A0", Slot = "8")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xCD0394", Offset = "0xCD0394", VA = "0xCD0394")]
	private void OnUpdate(LevelItem item)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xCD0460", Offset = "0xCD0460", VA = "0xCD0460", Slot = "5")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xCD053C", Offset = "0xCD053C", VA = "0xCD053C", Slot = "4")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xCD0618", Offset = "0xCD0618", VA = "0xCD0618", Slot = "6")]
	protected override void OnHitBroadEvent(Arrow arrow, int source)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xCD0730", Offset = "0xCD0730", VA = "0xCD0730", Slot = "9")]
	protected override void OnFireArrow(Arrow arrow)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xCD037C", Offset = "0xCD037C", VA = "0xCD037C")]
	public void ChangeSource(string tipTxt, string txt)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xCD083C", Offset = "0xCD083C", VA = "0xCD083C")]
	public void SetScreenView(RenderTexture texture)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xCD0860", Offset = "0xCD0860", VA = "0xCD0860")]
	public ScreenController()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xCD0868", Offset = "0xCD0868", VA = "0xCD0868")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844F24", Offset = "0x844F24")]
	private void <OnHitBroadEvent>b__11_0(float value)
	{
	}
}
[Token(Token = "0x200002B")]
public class BigScreenDisplay : MonoBehaviour
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage rawImage;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text textView;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xC372FC", Offset = "0xC372FC", VA = "0xC372FC")]
	public BigScreenDisplay()
	{
	}
}
[Token(Token = "0x200002C")]
public class Crosshairs : MonoBehaviour
{
	[Token(Token = "0x200002D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BC74", Offset = "0x83BC74")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Crosshairs <>4__this;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float curValue;

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xB7AC4C", Offset = "0xB7AC4C", VA = "0xB7AC4C")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xB7AC54", Offset = "0xB7AC54", VA = "0xB7AC54")]
		internal void <FireEffect>b__0(float newValue)
		{
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xB7AC70", Offset = "0xB7AC70", VA = "0xB7AC70")]
		internal void <FireEffect>b__1()
		{
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xB7AD6C", Offset = "0xB7AD6C", VA = "0xB7AD6C")]
		internal void <FireEffect>b__2(float newValue)
		{
		}
	}

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform L;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform R;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform U;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform D;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83C9C8", Offset = "0x83C9C8")]
	public float value;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minPos;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxPos;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private DrawSquald drawSquald;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float minValue;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float maxValue;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform moveTran;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Camera mainCamera;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxDis;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Tweener _tweener;

	[Token(Token = "0x17000019")]
	public bool IsActive
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xCC4760", Offset = "0xCC4760", VA = "0xCC4760")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xCC472C", Offset = "0xCC472C", VA = "0xCC472C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xCC4730", Offset = "0xCC4730", VA = "0xCC4730")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xCC4784", Offset = "0xCC4784", VA = "0xCC4784")]
	public void UpdateValue(float value)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xCC48C0", Offset = "0xCC48C0", VA = "0xCC48C0")]
	public void UpdatePos(Vector3 targetPos)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xCC4A94", Offset = "0xCC4A94", VA = "0xCC4A94")]
	public void FireEffect(float duration)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xCC4C6C", Offset = "0xCC4C6C", VA = "0xCC4C6C")]
	public void ShowAim()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xCC4CB8", Offset = "0xCC4CB8", VA = "0xCC4CB8")]
	public void HideAim()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xCC4CE8", Offset = "0xCC4CE8", VA = "0xCC4CE8")]
	public Crosshairs()
	{
	}
}
[Token(Token = "0x200002E")]
public class DisRuler : MonoBehaviour
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xCC5E38", Offset = "0xCC5E38", VA = "0xCC5E38")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xCC5F0C", Offset = "0xCC5F0C", VA = "0xCC5F0C")]
	public DisRuler()
	{
	}
}
[Token(Token = "0x200002F")]
public class DrawSquald : MaskableGraphic
{
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Texture m_Texture;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83CA68", Offset = "0x83CA68")]
	[SerializeField]
	private float fillAmount;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool fill;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int thickness;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int segments;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private UIVertex[] uiVertices;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector2[] uvs;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector2[] pos;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private float offset;

	[Token(Token = "0x1700001A")]
	public float FillAmount
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xCC64E8", Offset = "0xCC64E8", VA = "0xCC64E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xCC64F0", Offset = "0xCC64F0", VA = "0xCC64F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public override Texture mainTexture
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xCC6504", Offset = "0xCC6504", VA = "0xCC6504", Slot = "35")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001C")]
	public Texture texture
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xCC65B8", Offset = "0xCC65B8", VA = "0xCC65B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xCC65C0", Offset = "0xCC65C0", VA = "0xCC65C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public float Offset
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xCC6718", Offset = "0xCC6718", VA = "0xCC6718")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xCC48AC", Offset = "0xCC48AC", VA = "0xCC48AC")]
		set
		{
		}
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xCC6688", Offset = "0xCC6688", VA = "0xCC6688", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xCC6720", Offset = "0xCC6720", VA = "0xCC6720", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xCC6BD4", Offset = "0xCC6BD4", VA = "0xCC6BD4")]
	public DrawSquald()
	{
	}
}
[Token(Token = "0x2000030")]
public class GameFinishPanel : MonoBehaviour
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup _canvasGroup;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityAction callBack;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x1700001E")]
	public CanvasGroup GetCanvasGroup
	{
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xB8C184", Offset = "0xB8C184", VA = "0xB8C184")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB8C238", Offset = "0xB8C238", VA = "0xB8C238")]
	public void Show(bool isWin, UnityAction callBack)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB8C3B4", Offset = "0xB8C3B4", VA = "0xB8C3B4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB8C4A8", Offset = "0xB8C4A8", VA = "0xB8C4A8")]
	public GameFinishPanel()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB8C4B0", Offset = "0xB8C4B0", VA = "0xB8C4B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844F34", Offset = "0x844F34")]
	private void <Show>b__5_0()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB8C55C", Offset = "0xB8C55C", VA = "0xB8C55C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844F44", Offset = "0x844F44")]
	private void <Show>b__5_1()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB8C560", Offset = "0xB8C560", VA = "0xB8C560")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844F54", Offset = "0x844F54")]
	private void <Hide>b__6_0()
	{
	}
}
[Token(Token = "0x2000031")]
public class HandTrigger : MonoBehaviour
{
	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.XR.InputDevice currentController;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 axis2D;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool primaryButton;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool secondaryButton;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool menuButton;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float grip;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float trigger;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject pickUp;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB8E9C8", Offset = "0xB8E9C8", VA = "0xB8E9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB8E9CC", Offset = "0xB8E9CC", VA = "0xB8E9CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB8EAD8", Offset = "0xB8EAD8", VA = "0xB8EAD8")]
	public HandTrigger()
	{
	}
}
[Token(Token = "0x2000032")]
public class ItemBtn : MonoBehaviour
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityAction<int> callBack;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button _button;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int id;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text _text;

	[Token(Token = "0x1700001F")]
	public Text GetText
	{
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xB8F508", Offset = "0xB8F508", VA = "0xB8F508")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xB8F5DC", Offset = "0xB8F5DC", VA = "0xB8F5DC")]
	public void Init(int id)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB8F750", Offset = "0xB8F750", VA = "0xB8F750")]
	private void OnClickBtn()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB8F7B0", Offset = "0xB8F7B0", VA = "0xB8F7B0")]
	public ItemBtn()
	{
	}
}
[Token(Token = "0x2000033")]
public class LanguageStr
{
	[Token(Token = "0x40000CC")]
	public const string STR_Two_PlayerBattle_Btn = "STR_Two_PlayerBattle_Btn";

	[Token(Token = "0x40000CD")]
	public const string STR_Classic_Btn = "STR_Classic_Btn";

	[Token(Token = "0x40000CE")]
	public const string STR_Start_matching_Btn = "STR_Start_matching_Btn";

	[Token(Token = "0x40000CF")]
	public const string STR_Available_Btn = "STR_Available_Btn";

	[Token(Token = "0x40000D0")]
	public const string STR_InUse_Btn = "STR_InUse_Btn";

	[Token(Token = "0x40000D1")]
	public const string STR_Buy_Btn = "STR_Buy_Btn";

	[Token(Token = "0x40000D2")]
	public const string STR_TIPS1 = "STR_TIPS1";

	[Token(Token = "0x40000D3")]
	public const string STR_TIPS0 = "STR_TIPS0";

	[Token(Token = "0x40000D4")]
	public const string NICK_NAME = "NICK_NAME";

	[Token(Token = "0x40000D5")]
	public const string STR_Continue_Btn = "STR_Continue_Btn";

	[Token(Token = "0x40000D6")]
	public const string STR_Exit_Btn = "STR_Exit_Btn";

	[Token(Token = "0x40000D7")]
	public const string STR_Back_Btn = "STR_Back_Btn";

	[Token(Token = "0x40000D8")]
	public const string STR_Colse_Btn = "STR_Colse_Btn";

	[Token(Token = "0x40000D9")]
	public const string STR_Time = "STR_Time";

	[Token(Token = "0x40000DA")]
	public const string STR_Game_Start = "STR_Game_Start";

	[Token(Token = "0x40000DB")]
	public const string STR_Game_Over = "STR_Game_Over";

	[Token(Token = "0x40000DC")]
	public const string STR_Next_Btn = "STR_Next_Btn";

	[Token(Token = "0x40000DD")]
	public const string STR_Retry_Btn = "STR_Retry_Btn";

	[Token(Token = "0x40000DE")]
	public const string STR_Stadium_Title = "STR_Stadium_Title";

	[Token(Token = "0x40000DF")]
	public const string STR_Level_Title = "STR_Level_Title";

	[Token(Token = "0x40000E0")]
	public const string STR_Target_Score = "STR_Target_Score";

	[Token(Token = "0x40000E1")]
	public const string STR_Minimum_Pass_Score = "STR_Minimum_Pass_Score";

	[Token(Token = "0x40000E2")]
	public const string STR_Score = "STR_Score";

	[Token(Token = "0x40000E3")]
	public const string STR_Wind = "STR_Wind";

	[Token(Token = "0x40000E4")]
	public const string STR_Ring = "STR_Ring";

	[Token(Token = "0x40000E5")]
	public const string STR_TIPS2 = "STR_TIPS2";

	[Token(Token = "0x40000E6")]
	public const string STR_Select_Btn = "STR_Select_Btn";

	[Token(Token = "0x40000E7")]
	public const string STR_Put_Down_Btn = "STR_Put_Down_Btn";

	[Token(Token = "0x40000E8")]
	public const string STR_Local_User = "STR_Local_User";

	[Token(Token = "0x40000E9")]
	public const string STR_User = "STR_User";

	[Token(Token = "0x40000EA")]
	public const string STR_Matching_tip = "STR_Matching_tip";

	[Token(Token = "0x40000EB")]
	public const string STR_Creating_room_tip = "STR_Creating_room_tip";

	[Token(Token = "0x40000EC")]
	public const string STR_Failed_match_rematch_tip = "STR_Failed_match_rematch_tip";

	[Token(Token = "0x40000ED")]
	public const string STR_Match_timeout_tip = "STR_Match_timeout_tip";

	[Token(Token = "0x40000EE")]
	public const string STR_Connection_timeout_tip = "STR_Connection_timeout_tip";

	[Token(Token = "0x40000EF")]
	public const string STR_Server_timeout_tip = "STR_Server_timeout_tip";

	[Token(Token = "0x40000F0")]
	public const string STR_Join_in_room_tip = "STR_Join_in_room_tip";

	[Token(Token = "0x40000F1")]
	public const string STR_Exiting_matching_tip = "STR_Exiting_matching_tip";

	[Token(Token = "0x40000F2")]
	public const string STR_Stop_Btn = "STR_Stop_Btn";

	[Token(Token = "0x40000F3")]
	public const string STR_Re_match_Btn = "STR_Re_match_Btn";

	[Token(Token = "0x40000F4")]
	public const string STR_Loading_tip = "STR_Loading_tip";

	[Token(Token = "0x40000F5")]
	public const string STR_Load_txt = "STR_Load_txt";

	[Token(Token = "0x40000F6")]
	public const string STR_Matching_failed_tip = "STR_Matching_failed_tip";

	[Token(Token = "0x40000F7")]
	public const string STR_Victory_title = "STR_Victory_title";

	[Token(Token = "0x40000F8")]
	public const string STR_Fail_title = "STR_Fail_title";

	[Token(Token = "0x40000F9")]
	public const string STR_Setting_Btn = "STR_Setting_Btn";

	[Token(Token = "0x40000FA")]
	public const string STR_Clear_Btn = "STR_Clear_Btn";

	[Token(Token = "0x40000FB")]
	public const string STR_AI_Challenge_Btn = "STR_AI_Challenge_Btn";

	[Token(Token = "0x40000FC")]
	public const string STR_Money_title = "STR_Money_title";

	[Token(Token = "0x40000FD")]
	public const string STR_Win_Title = "STR_Win_Title";

	[Token(Token = "0x40000FE")]
	public const string STR_Win_Txt_Title = "STR_Win_Txt_Title";

	[Token(Token = "0x40000FF")]
	public const string STR_Player_Str = "STR_Player_Str";

	[Token(Token = "0x4000100")]
	public const string STR_YouWin = "STR_YouWin";

	[Token(Token = "0x4000101")]
	public const string STR_YouFail = "STR_YouFail";

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB91D7C", Offset = "0xB91D7C", VA = "0xB91D7C")]
	public LanguageStr()
	{
	}
}
[Token(Token = "0x2000034")]
public class LevelItem : MonoBehaviour
{
	[Token(Token = "0x2000035")]
	public enum LevelItemType
	{
		[Token(Token = "0x4000108")]
		KillAll,
		[Token(Token = "0x4000109")]
		TargetSource
	}

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetSource;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<BaseTarget> baseTargets;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83CAE8", Offset = "0x83CAE8")]
	[SerializeField]
	private WindData[] windDatas;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LevelItemType itemType;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83CB44", Offset = "0x83CB44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CB44", Offset = "0x83CB44")]
	private int <ID>k__BackingField;

	[Token(Token = "0x17000020")]
	public int ID
	{
		[Token(Token = "0x6000104")]
		[Address(RVA = "0xB93050", Offset = "0xB93050", VA = "0xB93050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844F64", Offset = "0x844F64")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000105")]
		[Address(RVA = "0xB93058", Offset = "0xB93058", VA = "0xB93058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844F74", Offset = "0x844F74")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public LevelItemType GetLevelItemType
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xB93060", Offset = "0xB93060", VA = "0xB93060")]
		get
		{
			return default(LevelItemType);
		}
	}

	[Token(Token = "0x17000022")]
	public int GetTargetSource
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0xB93068", Offset = "0xB93068", VA = "0xB93068")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000023")]
	public WindData[] GetWindDatas
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0xB93070", Offset = "0xB93070", VA = "0xB93070")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000024")]
	public List<BaseTarget> GetBaseTargets
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0xB93078", Offset = "0xB93078", VA = "0xB93078")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xB930A8", Offset = "0xB930A8", VA = "0xB930A8")]
	public void ReadFindAllTarget()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xB93200", Offset = "0xB93200", VA = "0xB93200")]
	public LevelItem()
	{
	}
}
[Token(Token = "0x2000036")]
public class LevelManager : Singleton<LevelManager>
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<LevelItem> levelItems;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScrollRectItem scrollRectItem;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LevelItem curlevelItem;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameFinishPanel gameFinishPanel;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int id;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IGameMode _gameMode;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB93270", Offset = "0xB93270", VA = "0xB93270")]
	public void Init(IGameMode gameMode)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB93364", Offset = "0xB93364", VA = "0xB93364")]
	public void ShowSelect()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB93380", Offset = "0xB93380", VA = "0xB93380")]
	private void OnSelectLevel(int levelId)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB934FC", Offset = "0xB934FC", VA = "0xB934FC")]
	public LevelItem CreateLevelItem(int levelId)
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB93688", Offset = "0xB93688", VA = "0xB93688")]
	public void ShowFinishPanel(bool isPass)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB93720", Offset = "0xB93720", VA = "0xB93720")]
	public void FindAllChildLevelItems()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB93878", Offset = "0xB93878", VA = "0xB93878")]
	public LevelManager()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB938F0", Offset = "0xB938F0", VA = "0xB938F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844F84", Offset = "0x844F84")]
	private void <ShowFinishPanel>b__10_0()
	{
	}
}
[Token(Token = "0x2000037")]
public class LimitTimeMode : MonoBehaviour, IGameMode
{
	[Token(Token = "0x2000038")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BC84", Offset = "0x83BC84")]
	private sealed class <UpdateTime>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<float> updateTimeAction;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callFinishCallBack;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LimitTimeMode <>4__this;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds <interval>5__1;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <runTime>5__2;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600011E")]
			[Address(RVA = "0xB7CEAC", Offset = "0xB7CEAC", VA = "0xB7CEAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000120")]
			[Address(RVA = "0xB7CEF4", Offset = "0xB7CEF4", VA = "0xB7CEF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0xB7CD70", Offset = "0xB7CD70", VA = "0xB7CD70")]
		[DebuggerHidden]
		public <UpdateTime>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0xB7CD9C", Offset = "0xB7CD9C", VA = "0xB7CD9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0xB7CDA0", Offset = "0xB7CDA0", VA = "0xB7CDA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0xB7CEB4", Offset = "0xB7CEB4", VA = "0xB7CEB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83CB80", Offset = "0x83CB80")]
	public float duration;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float curTime;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LevelItem levelItem;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<IPlayer> players;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent gameFinish;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent gameStart;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent<float> updateTimeAction;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB94600", Offset = "0xB94600", VA = "0xB94600")]
	private void Start()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB94A9C", Offset = "0xB94A9C", VA = "0xB94A9C")]
	private void UpdateTimeView(float curTime)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB94B10", Offset = "0xB94B10", VA = "0xB94B10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x844F94", Offset = "0x844F94")]
	private IEnumerator UpdateTime(float duration, Action<float> updateTimeAction, Action callFinishCallBack)
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xB94768", Offset = "0xB94768", VA = "0xB94768", Slot = "4")]
	public void Init(LevelItem levelItem)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB94BC8", Offset = "0xB94BC8", VA = "0xB94BC8")]
	private void OnGameOver()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB94BDC", Offset = "0xB94BDC", VA = "0xB94BDC", Slot = "5")]
	public void OnGameFinish(bool isPass)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xB94C1C", Offset = "0xB94C1C", VA = "0xB94C1C")]
	public LimitTimeMode()
	{
	}
}
[Token(Token = "0x2000039")]
public class AutoMovePath : BaseMove
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ArcheryBattle.Path path;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform startPoint;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform endPoint;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<Vector3> movePaths;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Tweener _tweener;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC31500", Offset = "0xC31500", VA = "0xC31500")]
	private int GetNearTranIndex(Vector3 pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xC315F4", Offset = "0xC315F4", VA = "0xC315F4")]
	private void CreatePath(Vector3 startPos, Vector3 endPos, List<Transform> points)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xC318A0", Offset = "0xC318A0", VA = "0xC318A0", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC31A04", Offset = "0xC31A04", VA = "0xC31A04", Slot = "9")]
	public override void PlayMove()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xC31A58", Offset = "0xC31A58", VA = "0xC31A58", Slot = "10")]
	public override void StopMove()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xC31AA8", Offset = "0xC31AA8", VA = "0xC31AA8")]
	public AutoMovePath()
	{
	}
}
[Token(Token = "0x200003A")]
public class NetworkPlayer : MonoBehaviour
{
	[Token(Token = "0x6000127")]
	[Address(RVA = "0x20D8CA4", Offset = "0x20D8CA4", VA = "0x20D8CA4")]
	public NetworkPlayer()
	{
	}
}
[Token(Token = "0x200003B")]
public interface ISynNetwork
{
	[Token(Token = "0x6000128")]
	void Init(string guid);

	[Token(Token = "0x6000129")]
	string GetGuid();

	[Token(Token = "0x600012A")]
	MessageData.MessageType GetMessageDataType();

	[Token(Token = "0x600012B")]
	MessageData.OperateType GetOperateType();

	[Token(Token = "0x600012C")]
	string SynchronousData();

	[Token(Token = "0x600012D")]
	bool IsNeedSyn();
}
[Token(Token = "0x200003C")]
public interface INetworkPlayer
{
	[Token(Token = "0x600012E")]
	string GetGuid();

	[Token(Token = "0x600012F")]
	void Init(string guid);

	[Token(Token = "0x6000130")]
	MessageData.MessageType GetMessageDataType();

	[Token(Token = "0x6000131")]
	void ApplyDataToTran(string guid, string data);
}
[Serializable]
[Token(Token = "0x200003D")]
public class RootPositionAndRotateDatas
{
	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string useId;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<RootPositionAndRotateData> datas;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xCCF968", Offset = "0xCCF968", VA = "0xCCF968")]
	public RootPositionAndRotateDatas(string useid)
	{
	}
}
[Serializable]
[Token(Token = "0x200003E")]
public struct RootPositionAndRotateData
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public short _x;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public short _y;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public short _z;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public short _angleX;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public short _angleY;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public short _angleZ;

	[Token(Token = "0x17000027")]
	public Vector3 Position
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0xCCF6E0", Offset = "0xCCF6E0", VA = "0xCCF6E0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000028")]
	public Vector3 Rotation
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0xCCF778", Offset = "0xCCF778", VA = "0xCCF778")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xCCF710", Offset = "0xCCF710", VA = "0xCCF710")]
	public void SetPosition(Vector3 value)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xCCF794", Offset = "0xCCF794", VA = "0xCCF794")]
	public void SetRotation(Vector3 value)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xCCF7E8", Offset = "0xCCF7E8", VA = "0xCCF7E8")]
	public RootPositionAndRotateData(int id, Transform root)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xCCF8E0", Offset = "0xCCF8E0", VA = "0xCCF8E0")]
	public void ApplyDataToRoot(ref Transform targetRoot)
	{
	}
}
[Token(Token = "0x200003F")]
public class PoolMananger : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000040")]
	public class Pool
	{
		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string tag;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int size;

		[Token(Token = "0x6000140")]
		[Address(RVA = "0xB846B0", Offset = "0xB846B0", VA = "0xB846B0")]
		public Pool()
		{
		}
	}

	[Token(Token = "0x2000041")]
	public interface IPoolObj
	{
		[Token(Token = "0x6000141")]
		void Recycle(float delayTime);
	}

	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BC94", Offset = "0x83BC94")]
	private sealed class <DelaySetActiveFalse>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject g;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delayTime;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callBack;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PoolMananger <>4__this;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000145")]
			[Address(RVA = "0xB84660", Offset = "0xB84660", VA = "0xB84660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000147")]
			[Address(RVA = "0xB846A8", Offset = "0xB846A8", VA = "0xB846A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0xB84538", Offset = "0xB84538", VA = "0xB84538")]
		[DebuggerHidden]
		public <DelaySetActiveFalse>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0xB84564", Offset = "0xB84564", VA = "0xB84564", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000144")]
		[Address(RVA = "0xB84568", Offset = "0xB84568", VA = "0xB84568", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000146")]
		[Address(RVA = "0xB84668", Offset = "0xB84668", VA = "0xB84668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PoolMananger instance;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parent;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Pool> pools;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<string, Queue<GameObject>> poolDictionary;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x20E3218", Offset = "0x20E3218", VA = "0x20E3218")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x20E32C8", Offset = "0x20E32C8", VA = "0x20E32C8")]
	public void InstantiatePool()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x20DE550", Offset = "0x20DE550", VA = "0x20DE550")]
	public GameObject SpawnFromPool(string tag, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x20E35A4", Offset = "0x20E35A4", VA = "0x20E35A4")]
	public void DespawnToPool(string tag)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x20DE9E4", Offset = "0x20DE9E4", VA = "0x20DE9E4")]
	public void DelayDespawn(GameObject g, float delayTime, [Optional] Action callBack)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x20E379C", Offset = "0x20E379C", VA = "0x20E379C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x845044", Offset = "0x845044")]
	private IEnumerator DelaySetActiveFalse(GameObject g, float delayTime, Action callBack)
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x20E3854", Offset = "0x20E3854", VA = "0x20E3854")]
	public PoolMananger()
	{
	}
}
[Token(Token = "0x2000043")]
public class AnimatorFrameControl : MonoBehaviour
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationClip _animationClip;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83CC18", Offset = "0x83CC18")]
	public float value;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float playerTime;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xC2CF98", Offset = "0xC2CF98", VA = "0xC2CF98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xC2CFF4", Offset = "0xC2CFF4", VA = "0xC2CFF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xC2D050", Offset = "0xC2D050", VA = "0xC2D050")]
	public void UpdateValue(float value)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xC2D058", Offset = "0xC2D058", VA = "0xC2D058")]
	public void UpdateFrameControl(float value)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xC2D138", Offset = "0xC2D138", VA = "0xC2D138")]
	public void FrameControlPrivew(float value)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xC2D2A4", Offset = "0xC2D2A4", VA = "0xC2D2A4")]
	public AnimatorFrameControl()
	{
	}
}
[Token(Token = "0x2000044")]
public class PKMode : MonoBehaviour
{
	[Token(Token = "0x2000045")]
	public interface IPKPlayer
	{
		[Token(Token = "0x6000153")]
		void Init(IPlayer player);

		[Token(Token = "0x6000154")]
		void Enter();

		[Token(Token = "0x6000155")]
		void Stay();

		[Token(Token = "0x6000156")]
		float GetStartTime();

		[Token(Token = "0x6000157")]
		bool IsExit();

		[Token(Token = "0x6000158")]
		IPlayer GetPlayer();

		[Token(Token = "0x6000159")]
		int GetSource();

		[Token(Token = "0x600015A")]
		void Exit();
	}

	[Serializable]
	[Token(Token = "0x2000046")]
	public struct ScoreData
	{
		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int score;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int[] resultState;

		[Token(Token = "0x600015B")]
		[Address(RVA = "0xB82AF0", Offset = "0xB82AF0", VA = "0xB82AF0")]
		public ScoreData(int count)
		{
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0xB82BA8", Offset = "0xB82BA8", VA = "0xB82BA8")]
		public void SetResultState(int id, int status)
		{
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0xB82BE4", Offset = "0xB82BE4", VA = "0xB82BE4")]
		public int GetResultWinCount()
		{
			return default(int);
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0xB82C54", Offset = "0xB82C54", VA = "0xB82C54")]
		public bool CompareResult(ScoreData scoreData)
		{
			return default(bool);
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0xB82C90", Offset = "0xB82C90", VA = "0xB82C90")]
		public bool CompareScore(ScoreData data)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScoreData[] scoreDatas;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int turnBasedCount;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waitTime;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<IPKPlayer> pkPlayers;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onGameStartAction;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityAction<int> onWinPlayAction;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<IPlayer> players;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] playerObjects;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IPKPlayer curPlayer;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _index;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _turnCount;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _isRun;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float curTime;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x20DA3C0", Offset = "0x20DA3C0", VA = "0x20DA3C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x20DA698", Offset = "0x20DA698", VA = "0x20DA698")]
	public void Initialized()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x20DA7AC", Offset = "0x20DA7AC", VA = "0x20DA7AC")]
	private void NextPlayerTime()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x20DAF88", Offset = "0x20DAF88", VA = "0x20DAF88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x20DB278", Offset = "0x20DB278", VA = "0x20DB278")]
	public PKMode()
	{
	}
}
[Token(Token = "0x2000047")]
public class PKTarget : MonoBehaviour, PKMode.IPKPlayer
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BaseTarget baseTarget;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator lockWood;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _startTime;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _isExit;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IPlayer bindPlayer;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int source;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x20DB2E4", Offset = "0x20DB2E4", VA = "0x20DB2E4", Slot = "4")]
	public void Init(IPlayer player)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x20DB470", Offset = "0x20DB470", VA = "0x20DB470")]
	private void OnFireArrow(Arrow arrow)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x20DB504", Offset = "0x20DB504", VA = "0x20DB504")]
	private void OnFlyFinishAction()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x20DB51C", Offset = "0x20DB51C", VA = "0x20DB51C")]
	private void OnHitBoard(string arrowId, BaseTarget target, int source)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x20DB520", Offset = "0x20DB520", VA = "0x20DB520", Slot = "5")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x20DB56C", Offset = "0x20DB56C", VA = "0x20DB56C", Slot = "6")]
	public void Stay()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x20DB6B0", Offset = "0x20DB6B0", VA = "0x20DB6B0", Slot = "7")]
	public float GetStartTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x20DB6B8", Offset = "0x20DB6B8", VA = "0x20DB6B8", Slot = "8")]
	public bool IsExit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x20DB6C0", Offset = "0x20DB6C0", VA = "0x20DB6C0", Slot = "9")]
	public IPlayer GetPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x20DB6C8", Offset = "0x20DB6C8", VA = "0x20DB6C8", Slot = "10")]
	public int GetSource()
	{
		return default(int);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x20DB57C", Offset = "0x20DB57C", VA = "0x20DB57C", Slot = "11")]
	public void Exit()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x20DB6D0", Offset = "0x20DB6D0", VA = "0x20DB6D0")]
	public PKTarget()
	{
	}
}
[Token(Token = "0x2000048")]
public class PXR_VibrationManager : MonoBehaviour
{
	[Token(Token = "0x2000049")]
	public enum HandType
	{
		[Token(Token = "0x4000158")]
		Left,
		[Token(Token = "0x4000159")]
		Right
	}

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnityEngine.XR.InputDevice leftController;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static UnityEngine.XR.InputDevice rightController;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83CC40", Offset = "0x83CC40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CC40", Offset = "0x83CC40")]
	private static bool <LeftControllerState>k__BackingField;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CC7C", Offset = "0x83CC7C")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83CC7C", Offset = "0x83CC7C")]
	private static bool <RightControllerState>k__BackingField;

	[Token(Token = "0x1700002B")]
	public static UnityEngine.XR.InputDevice GetLeftController
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x20DB6D8", Offset = "0x20DB6D8", VA = "0x20DB6D8")]
		get
		{
			return default(UnityEngine.XR.InputDevice);
		}
	}

	[Token(Token = "0x1700002C")]
	public static UnityEngine.XR.InputDevice GetRightController
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x20DB724", Offset = "0x20DB724", VA = "0x20DB724")]
		get
		{
			return default(UnityEngine.XR.InputDevice);
		}
	}

	[Token(Token = "0x1700002D")]
	public static bool LeftControllerState
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x20DB7C4", Offset = "0x20DB7C4", VA = "0x20DB7C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845104", Offset = "0x845104")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x20DB770", Offset = "0x20DB770", VA = "0x20DB770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8450F4", Offset = "0x8450F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public static bool RightControllerState
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x20DB864", Offset = "0x20DB864", VA = "0x20DB864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845124", Offset = "0x845124")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x20DB810", Offset = "0x20DB810", VA = "0x20DB810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845114", Offset = "0x845114")]
		private set
		{
		}
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x20DB8B0", Offset = "0x20DB8B0", VA = "0x20DB8B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x20DBA08", Offset = "0x20DBA08", VA = "0x20DBA08")]
	private void UpdateInfo()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x20DBA0C", Offset = "0x20DBA0C", VA = "0x20DBA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x20DBBD4", Offset = "0x20DBBD4", VA = "0x20DBBD4")]
	public static void Trigger(HandType type)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x20DBCA8", Offset = "0x20DBCA8", VA = "0x20DBCA8")]
	public static void TriggerRightHand()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x20DBD14", Offset = "0x20DBD14", VA = "0x20DBD14")]
	public static void TriggerLeftHand()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x20DBD80", Offset = "0x20DBD80", VA = "0x20DBD80")]
	public void triggerRightHand()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x20DBDEC", Offset = "0x20DBDEC", VA = "0x20DBDEC")]
	public void triggerLeftHand()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x20DBE58", Offset = "0x20DBE58", VA = "0x20DBE58")]
	public static void Trigger(HandType type, int frequency = 100, float strength = 0.5f, int time = 500)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x20DBF40", Offset = "0x20DBF40", VA = "0x20DBF40")]
	public static void TriggerEvent(HandType type, int index)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x20DBF38", Offset = "0x20DBF38", VA = "0x20DBF38")]
	private static void SetControllerVibrationEvent(uint hand = 0u, int frequency = 100, float strength = 0.5f, int time = 500)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x20DBC94", Offset = "0x20DBC94", VA = "0x20DBC94")]
	private static void SetControllerVibration(PXR_Input.Controller controller, float strength = 0.5f, int time = 10)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x20DC008", Offset = "0x20DC008", VA = "0x20DC008")]
	public PXR_VibrationManager()
	{
	}
}
[Token(Token = "0x200004A")]
public class PickUp : StateMachineBehaviour
{
	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityAction<int> unityAction;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x20DC738", Offset = "0x20DC738", VA = "0x20DC738", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x20DC86C", Offset = "0x20DC86C", VA = "0x20DC86C", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x20DC8CC", Offset = "0x20DC8CC", VA = "0x20DC8CC", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x20DC92C", Offset = "0x20DC92C", VA = "0x20DC92C")]
	public PickUp()
	{
	}
}
[Token(Token = "0x200004B")]
public class Player : MonoBehaviour, IPlayer
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Bow bow;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsPickArrow;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Quiver quiver;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int arrowCount;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x20DC94C", Offset = "0x20DC94C", VA = "0x20DC94C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x20DC950", Offset = "0x20DC950", VA = "0x20DC950", Slot = "4")]
	public Bow GetBow()
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x20DC958", Offset = "0x20DC958", VA = "0x20DC958", Slot = "5")]
	public Quiver GetQuiver()
	{
		return null;
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x20DC960", Offset = "0x20DC960", VA = "0x20DC960", Slot = "6")]
	public int GetFireArrow()
	{
		return default(int);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x20DC968", Offset = "0x20DC968", VA = "0x20DC968", Slot = "7")]
	public int SetFireArrow(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x20DC97C", Offset = "0x20DC97C", VA = "0x20DC97C")]
	public Player()
	{
	}
}
[Token(Token = "0x200004C")]
public interface IPlayer
{
	[Token(Token = "0x6000189")]
	Bow GetBow();

	[Token(Token = "0x600018A")]
	Quiver GetQuiver();

	[Token(Token = "0x600018B")]
	int GetFireArrow();

	[Token(Token = "0x600018C")]
	int SetFireArrow(int count);
}
[Token(Token = "0x200004D")]
public class TextEffect : MonoBehaviour
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform _textRectTran;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CanvasGroup _canvasGroup;

	[Token(Token = "0x1700002F")]
	public RectTransform GetTextRectTran
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0xFA99DC", Offset = "0xFA99DC", VA = "0xFA99DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public CanvasGroup GetCanvasGroup
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0xFA9A98", Offset = "0xFA9A98", VA = "0xFA9A98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xFA9B5C", Offset = "0xFA9B5C", VA = "0xFA9B5C")]
	public void ShowTextEffect(string txt)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xFA9CC0", Offset = "0xFA9CC0", VA = "0xFA9CC0")]
	public void ShowTextEffect(string txt, Color color)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xFA9D04", Offset = "0xFA9D04", VA = "0xFA9D04")]
	public TextEffect()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xFA9D0C", Offset = "0xFA9D0C", VA = "0xFA9D0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845134", Offset = "0x845134")]
	private void <ShowTextEffect>b__7_0()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xFA9E0C", Offset = "0xFA9E0C", VA = "0xFA9E0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845144", Offset = "0x845144")]
	private void <ShowTextEffect>b__7_1()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xFA9EC8", Offset = "0xFA9EC8", VA = "0xFA9EC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845154", Offset = "0x845154")]
	private void <ShowTextEffect>b__7_2()
	{
	}
}
[Token(Token = "0x200004E")]
public class ScrollRectItem : MonoBehaviour
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject togglePrefab;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ToggleGroup toggleGroup;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button sumbitBtn;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int count;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ItemToggle> itemBtns;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityAction<int> createLevelAction;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int selectId;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CanvasGroup _canvasGroup;

	[Token(Token = "0x17000031")]
	public CanvasGroup GetCanvasGroup
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0xCD2F9C", Offset = "0xCD2F9C", VA = "0xCD2F9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xCD27B4", Offset = "0xCD27B4", VA = "0xCD27B4")]
	public void Initialized(int count)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xCD2C00", Offset = "0xCD2C00", VA = "0xCD2C00")]
	private void OnChangeValue(bool isEnable)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xCD2CBC", Offset = "0xCD2CBC", VA = "0xCD2CBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xCD2D70", Offset = "0xCD2D70", VA = "0xCD2D70")]
	private void OnClickSumbitBtn()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xCD2E1C", Offset = "0xCD2E1C", VA = "0xCD2E1C")]
	private void CreateLevel(int id)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xCD2E8C", Offset = "0xCD2E8C", VA = "0xCD2E8C")]
	public void Show()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xCD3050", Offset = "0xCD3050", VA = "0xCD3050")]
	public void Hide()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xCD3144", Offset = "0xCD3144", VA = "0xCD3144")]
	public ScrollRectItem()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xCD31C8", Offset = "0xCD31C8", VA = "0xCD31C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845164", Offset = "0x845164")]
	private void <Show>b__12_0()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xCD31EC", Offset = "0xCD31EC", VA = "0xCD31EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845174", Offset = "0x845174")]
	private void <Hide>b__13_0()
	{
	}
}
[Token(Token = "0x200004F")]
public class MonoSingleton<T> : MonoBehaviour where T : Component
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly object _lock;

	[Token(Token = "0x17000032")]
	public static T Instance
	{
		[Token(Token = "0x60001A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A1")]
	public MonoSingleton()
	{
	}
}
[Token(Token = "0x2000050")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x83BCA4", Offset = "0x83BCA4")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioManager Instance;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<bool> OnSwitch;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SFXManager sfxManager;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BGMManager bgmManager;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool _soundon;

	[Token(Token = "0x17000033")]
	public static bool SoundOn
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xC2FAF0", Offset = "0xC2FAF0", VA = "0xC2FAF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xC2FB3C", Offset = "0xC2FB3C", VA = "0xC2FB3C")]
		set
		{
		}
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xC2FC58", Offset = "0xC2FC58", VA = "0xC2FC58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xC2FCDC", Offset = "0xC2FCDC", VA = "0xC2FCDC")]
	public static void Switch()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xC2FD30", Offset = "0xC2FD30", VA = "0xC2FD30")]
	public static void PlaySFX(int index)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xC2FD98", Offset = "0xC2FD98", VA = "0xC2FD98")]
	public static void PlayBgm(int index)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xC2FF50", Offset = "0xC2FF50", VA = "0xC2FF50")]
	public static void BindEvent(Action<bool> actionEvent)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC30064", Offset = "0xC30064", VA = "0xC30064")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x2000051")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x83BCB8", Offset = "0x83BCB8")]
public class BGMManager : SoundManagerBase<BGMManager>
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AudioClip> bgm_clip_list;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC33FF8", Offset = "0xC33FF8", VA = "0xC33FF8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC2FDFC", Offset = "0xC2FDFC", VA = "0xC2FDFC")]
	public void PlayBgm(int index)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xC34080", Offset = "0xC34080", VA = "0xC34080")]
	public static void PlayBgmClip(int index)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC34198", Offset = "0xC34198", VA = "0xC34198")]
	public BGMManager()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x83BCCC", Offset = "0x83BCCC")]
public class SFXManager : SoundManagerBase<SFXManager>
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AudioClip> clip_list;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xCCFB10", Offset = "0xCCFB10", VA = "0xCCFB10", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xCCFB90", Offset = "0xCCFB90", VA = "0xCCFB90")]
	public void PlayClip(int index)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xCCFCD4", Offset = "0xCCFCD4", VA = "0xCCFCD4")]
	public static void Play(int index)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xCCFDEC", Offset = "0xCCFDEC", VA = "0xCCFDEC")]
	public SFXManager()
	{
	}
}
[Token(Token = "0x2000053")]
public class SoundBtnUI : MonoBehaviour
{
	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button btn;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image btnImg;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite soundOnSprite;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite soundOffSprite;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool firstload;

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xCD5190", Offset = "0xCD5190", VA = "0xCD5190")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xCD5264", Offset = "0xCD5264", VA = "0xCD5264")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xCD530C", Offset = "0xCD530C", VA = "0xCD530C")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xCD532C", Offset = "0xCD532C", VA = "0xCD532C")]
	private void UpdateInfo(bool isSoundOn)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xCD5360", Offset = "0xCD5360", VA = "0xCD5360")]
	public SoundBtnUI()
	{
	}
}
[Token(Token = "0x2000054")]
public enum AudioType
{
	[Token(Token = "0x4000179")]
	BGM,
	[Token(Token = "0x400017A")]
	SFX
}
[Token(Token = "0x2000055")]
public class SoundManagerBase<T> : MonoBehaviour where T : SoundManagerBase<T>
{
	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected AudioType type;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioSource audiosource;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83CCF8", Offset = "0x83CCF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CCF8", Offset = "0x83CCF8")]
	private static T <Instance>k__BackingField;

	[Token(Token = "0x17000034")]
	public static T Instance
	{
		[Token(Token = "0x60001B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845184", Offset = "0x845184")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845194", Offset = "0x845194")]
		private set
		{
		}
	}

	[Token(Token = "0x60001BA")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60001BB")]
	public SoundManagerBase()
	{
	}
}
[Token(Token = "0x2000056")]
public class TestPlayer : MonoBehaviour, PKMode.IPKPlayer
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string targetName;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isFire;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _startTime;

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xFA9278", Offset = "0xFA9278", VA = "0xFA9278", Slot = "4")]
	public void Init(IPlayer player)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xFA927C", Offset = "0xFA927C", VA = "0xFA927C", Slot = "5")]
	public void Enter()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xFA9320", Offset = "0xFA9320", VA = "0xFA9320", Slot = "6")]
	public void Stay()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xFA9400", Offset = "0xFA9400", VA = "0xFA9400", Slot = "7")]
	public float GetStartTime()
	{
		return default(float);
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xFA9408", Offset = "0xFA9408", VA = "0xFA9408", Slot = "8")]
	public bool IsExit()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xFA9410", Offset = "0xFA9410", VA = "0xFA9410", Slot = "9")]
	public IPlayer GetPlayer()
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xFA9450", Offset = "0xFA9450", VA = "0xFA9450", Slot = "10")]
	public int GetSource()
	{
		return default(int);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xFA9370", Offset = "0xFA9370", VA = "0xFA9370", Slot = "11")]
	public void Exit()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xFA9458", Offset = "0xFA9458", VA = "0xFA9458")]
	public TestPlayer()
	{
	}
}
[Token(Token = "0x2000057")]
public class TimeManager : MonoBehaviour
{
	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xFAAB8C", Offset = "0xFAAB8C", VA = "0xFAAB8C")]
	public TimeManager()
	{
	}
}
[Token(Token = "0x2000058")]
public class Timer
{
	[Token(Token = "0x2000059")]
	private class TimerManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200005A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BCE0", Offset = "0x83BCE0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Timer> <>9__5_0;

			[Token(Token = "0x60001E9")]
			[Address(RVA = "0x20A5378", Offset = "0x20A5378", VA = "0x20A5378")]
			public <>c()
			{
			}

			[Token(Token = "0x60001EA")]
			[Address(RVA = "0x20A5380", Offset = "0x20A5380", VA = "0x20A5380")]
			internal bool <UpdateAllTimers>b__5_0(Timer t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Timer> _timers;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Timer> _timersToAdd;

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x20A3AFC", Offset = "0x20A3AFC", VA = "0x20A3AFC")]
		public void RegisterTimer(Timer timer)
		{
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x20A3B60", Offset = "0x20A3B60", VA = "0x20A3B60")]
		public void CancelAllTimers()
		{
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x20A3CFC", Offset = "0x20A3CFC", VA = "0x20A3CFC")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x845224", Offset = "0x845224")]
		private void Update()
		{
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x20A3D00", Offset = "0x20A3D00", VA = "0x20A3D00")]
		private void UpdateAllTimers()
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x20A3F7C", Offset = "0x20A3F7C", VA = "0x20A3F7C")]
		public TimerManager()
		{
		}
	}

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83CD34", Offset = "0x83CD34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CD34", Offset = "0x83CD34")]
	private float <duration>k__BackingField;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83CD70", Offset = "0x83CD70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CD70", Offset = "0x83CD70")]
	private bool <isLooped>k__BackingField;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83CDAC", Offset = "0x83CDAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CDAC", Offset = "0x83CDAC")]
	private bool <isCompleted>k__BackingField;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CDE8", Offset = "0x83CDE8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83CDE8", Offset = "0x83CDE8")]
	private bool <usesRealTime>k__BackingField;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TimerManager _manager;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Action _onComplete;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Action<float> _onUpdate;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _startTime;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _lastUpdateTime;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float? _timeElapsedBeforeCancel;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float? _timeElapsedBeforePause;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly MonoBehaviour _autoDestroyOwner;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly bool _hasAutoDestroyOwner;

	[Token(Token = "0x17000035")]
	public float duration
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xFAAB94", Offset = "0xFAAB94", VA = "0xFAAB94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8451A4", Offset = "0x8451A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xFAAB9C", Offset = "0xFAAB9C", VA = "0xFAAB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8451B4", Offset = "0x8451B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public bool isLooped
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xFAABA4", Offset = "0xFAABA4", VA = "0xFAABA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8451C4", Offset = "0x8451C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xFAABAC", Offset = "0xFAABAC", VA = "0xFAABAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8451D4", Offset = "0x8451D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public bool isCompleted
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xFAABB8", Offset = "0xFAABB8", VA = "0xFAABB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8451E4", Offset = "0x8451E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xFAABC0", Offset = "0xFAABC0", VA = "0xFAABC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8451F4", Offset = "0x8451F4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public bool usesRealTime
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xFAABCC", Offset = "0xFAABCC", VA = "0xFAABCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845204", Offset = "0x845204")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xFAABD4", Offset = "0xFAABD4", VA = "0xFAABD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845214", Offset = "0x845214")]
		private set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public bool isPaused
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xFAABE0", Offset = "0xFAABE0", VA = "0xFAABE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003A")]
	public bool isCancelled
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xFAAC20", Offset = "0xFAAC20", VA = "0xFAAC20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003B")]
	public bool isDone
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xFAAC60", Offset = "0xFAAC60", VA = "0xFAAC60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003C")]
	private bool isOwnerDestroyed
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xFAACC0", Offset = "0xFAACC0", VA = "0xFAACC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xFAAD44", Offset = "0xFAAD44", VA = "0xFAAD44")]
	public static Timer Register(float duration, Action onComplete, [Optional] Action<float> onUpdate, bool isLooped = false, bool useRealTime = false, [Optional] MonoBehaviour autoDestroyOwner)
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xFAB050", Offset = "0xFAB050", VA = "0xFAB050")]
	public static void Cancel(Timer timer)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xFAB0D4", Offset = "0xFAB0D4", VA = "0xFAB0D4")]
	public static void Pause(Timer timer)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xFAB180", Offset = "0xFAB180", VA = "0xFAB180")]
	public static void Resume(Timer timer)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xFAB1E0", Offset = "0xFAB1E0", VA = "0xFAB1E0")]
	public static void CancelAllRegisteredTimers()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xFAB05C", Offset = "0xFAB05C", VA = "0xFAB05C")]
	public void Cancel()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xFAB0E0", Offset = "0xFAB0E0", VA = "0xFAB0E0")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xFAB18C", Offset = "0xFAB18C", VA = "0xFAB18C")]
	public void Resume()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xFAB290", Offset = "0xFAB290", VA = "0xFAB290")]
	public float GetTimeElapsed()
	{
		return default(float);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xFAB388", Offset = "0xFAB388", VA = "0xFAB388")]
	public float GetTimeRemaining()
	{
		return default(float);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xFAB3AC", Offset = "0xFAB3AC", VA = "0xFAB3AC")]
	public float GetRatioComplete()
	{
		return default(float);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xFAB3D4", Offset = "0xFAB3D4", VA = "0xFAB3D4")]
	public float GetRatioRemaining()
	{
		return default(float);
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xFAAF38", Offset = "0xFAAF38", VA = "0xFAAF38")]
	private Timer(float duration, Action onComplete, Action<float> onUpdate, bool isLooped, bool usesRealTime, MonoBehaviour autoDestroyOwner)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xFAB360", Offset = "0xFAB360", VA = "0xFAB360")]
	private float GetWorldTime()
	{
		return default(float);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xFAB378", Offset = "0xFAB378", VA = "0xFAB378")]
	private float GetFireTime()
	{
		return default(float);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xFAB40C", Offset = "0xFAB40C", VA = "0xFAB40C")]
	private float GetTimeDelta()
	{
		return default(float);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xFAB44C", Offset = "0xFAB44C", VA = "0xFAB44C")]
	private void Update()
	{
	}
}
[Token(Token = "0x200005B")]
public static class TimerExtensions
{
	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xFAB5B0", Offset = "0xFAB5B0", VA = "0xFAB5B0")]
	public static void AttachTimer(this MonoBehaviour behaviour, float duration, Action onComplete, [Optional] Action<float> onUpdate, bool isLooped = false, bool useRealTime = false)
	{
	}
}
[Token(Token = "0x200005C")]
public class WoodenTarget : MonoBehaviour
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RingTarget ringTarget;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83CE24", Offset = "0x83CE24")]
	[SerializeField]
	public int fallSource;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isFallDown;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xB75D20", Offset = "0xB75D20", VA = "0xB75D20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xB75DE4", Offset = "0xB75DE4", VA = "0xB75DE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xB75EA8", Offset = "0xB75EA8", VA = "0xB75EA8")]
	private void OnHitBoard(GameObject arrowId, BaseTarget target, int source)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB75F4C", Offset = "0xB75F4C", VA = "0xB75F4C")]
	public WoodenTarget()
	{
	}
}
[Token(Token = "0x200005D")]
public class TexturePan : MonoBehaviour
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeed;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xFAA2A0", Offset = "0xFAA2A0", VA = "0xFAA2A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xFAA2FC", Offset = "0xFAA2FC", VA = "0xFAA2FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xFAA380", Offset = "0xFAA380", VA = "0xFAA380")]
	public TexturePan()
	{
	}
}
[Serializable]
[Token(Token = "0x200005E")]
public class LightAndSky
{
	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_Name;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light m_Light;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_Skybox;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_FogColor;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color m_AmbientLight;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xB94548", Offset = "0xB94548", VA = "0xB94548")]
	public LightAndSky()
	{
	}
}
[Token(Token = "0x200005F")]
public class FSPlayer : MonoBehaviour
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightAndSky[] m_LightAndSkyList;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_CurrentSkyBox;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB881A4", Offset = "0xB881A4", VA = "0xB881A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB8874C", Offset = "0xB8874C", VA = "0xB8874C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB887B8", Offset = "0xB887B8", VA = "0xB887B8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xB881D0", Offset = "0xB881D0", VA = "0xB881D0")]
	private void SwitchSkyBox(int DiffNum)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xB88390", Offset = "0xB88390", VA = "0xB88390")]
	private void UpdateDetailsText()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xB8865C", Offset = "0xB8865C", VA = "0xB8865C")]
	private void UpdateHowToText()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xB88890", Offset = "0xB88890", VA = "0xB88890")]
	public FSPlayer()
	{
	}
}
[Token(Token = "0x2000060")]
public class TCP2_Demo_InvertedMaskImage : Image
{
	[Token(Token = "0x1700003D")]
	public override Material materialForRendering
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xF9EAC4", Offset = "0xF9EAC4", VA = "0xF9EAC4", Slot = "34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xF9EB68", Offset = "0xF9EB68", VA = "0xF9EB68")]
	public TCP2_Demo_InvertedMaskImage()
	{
	}
}
[Token(Token = "0x2000061")]
public class TCP2_Demo_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Speed;

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xCD8B2C", Offset = "0xCD8B2C", VA = "0xCD8B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xCD8B98", Offset = "0xCD8B98", VA = "0xCD8B98")]
	public TCP2_Demo_AutoRotate()
	{
	}
}
[Token(Token = "0x2000062")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x2000063")]
	private static class Uniforms
	{
		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xCC80E0", Offset = "0xCC80E0", VA = "0xCC80E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xCC8158", Offset = "0xCC8158", VA = "0xCC8158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xCC82D4", Offset = "0xCC82D4", VA = "0xCC82D4")]
	public ExampleWheelController()
	{
	}
}
[Token(Token = "0x2000064")]
public class cloud_behav : MonoBehaviour
{
	[Token(Token = "0x2000065")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BD00", Offset = "0x83BD00")]
	private sealed class <spawn_cldwn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cloud_behav <>4__this;

		[Token(Token = "0x1700003E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600020D")]
			[Address(RVA = "0x20A4D04", Offset = "0x20A4D04", VA = "0x20A4D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600020F")]
			[Address(RVA = "0x20A4D4C", Offset = "0x20A4D4C", VA = "0x20A4D4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x20A4C08", Offset = "0x20A4C08", VA = "0x20A4C08")]
		[DebuggerHidden]
		public <spawn_cldwn>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0x20A4C34", Offset = "0x20A4C34", VA = "0x20A4C34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x20A4C38", Offset = "0x20A4C38", VA = "0x20A4C38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x20A4D0C", Offset = "0x20A4D0C", VA = "0x20A4D0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cloud_1;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cloud_2;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cloud_3;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float clusterx;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float clustery;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float clusterz;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int cloud_count_max;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int cloud_count_cur;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int spawn_interval;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool spawn;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject new_cloud;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xB76330", Offset = "0xB76330", VA = "0xB76330")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xB76378", Offset = "0xB76378", VA = "0xB76378")]
	private void Start()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xB7653C", Offset = "0xB7653C", VA = "0xB7653C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB763BC", Offset = "0xB763BC", VA = "0xB763BC")]
	private void spawn_cloud(int mode)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xB76584", Offset = "0xB76584", VA = "0xB76584")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x845244", Offset = "0x845244")]
	private IEnumerator spawn_cldwn()
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xB765FC", Offset = "0xB765FC", VA = "0xB765FC")]
	private Vector3 start_cloud_pos(int mode)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xB76680", Offset = "0xB76680", VA = "0xB76680")]
	public cloud_behav()
	{
	}
}
[Token(Token = "0x2000066")]
public class cloud_self : MonoBehaviour
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private cloud_behav cld_behav;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem prt_sys;

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xB766A0", Offset = "0xB766A0", VA = "0xB766A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xB7680C", Offset = "0xB7680C", VA = "0xB7680C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xB76904", Offset = "0xB76904", VA = "0xB76904")]
	private bool space_cluster(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xB769C0", Offset = "0xB769C0", VA = "0xB769C0")]
	public cloud_self()
	{
	}
}
[Token(Token = "0x2000067")]
public class FreeCam : MonoBehaviour
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedNormal;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedFast;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mouseSensX;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mouseSensY;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotY;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float speed;

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xB892A0", Offset = "0xB892A0", VA = "0xB892A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xB892A4", Offset = "0xB892A4", VA = "0xB892A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xB89594", Offset = "0xB89594", VA = "0xB89594")]
	public FreeCam()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x83BD10", Offset = "0x83BD10")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000069")]
	public enum RotationAxes
	{
		[Token(Token = "0x40001C5")]
		MouseXAndY,
		[Token(Token = "0x40001C6")]
		MouseX,
		[Token(Token = "0x40001C7")]
		MouseY
	}

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xB9A474", Offset = "0xB9A474", VA = "0xB9A474")]
	private void Update()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xB9A64C", Offset = "0xB9A64C", VA = "0xB9A64C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xB9A714", Offset = "0xB9A714", VA = "0xB9A714")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200006A")]
public class BackSenceMenu : BaseUiMenu
{
	[Token(Token = "0x200006B")]
	public enum ModeType
	{
		[Token(Token = "0x40001CD")]
		Classic,
		[Token(Token = "0x40001CE")]
		TwoPlayerBattle
	}

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button exitBtn;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button continueBtn;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI textMeshProUGUI;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ModeType modeType;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xC358D0", Offset = "0xC358D0", VA = "0xC358D0", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xC35BB8", Offset = "0xC35BB8", VA = "0xC35BB8")]
	public BackSenceMenu()
	{
	}
}
[Token(Token = "0x200006C")]
public class LanguageGetAllText : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200006D")]
	public struct AutoTextInfo
	{
		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI text;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string cnText;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string enText;
	}

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AutoSetText[] autoSetTexts;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AutoTextInfo> autoTextInfos;

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xB8FC28", Offset = "0xB8FC28", VA = "0xB8FC28")]
	public void GetAllAutoText()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xB8FE0C", Offset = "0xB8FE0C", VA = "0xB8FE0C")]
	public LanguageGetAllText()
	{
	}
}
[Token(Token = "0x200006E")]
public class LevelSelectMenu : BaseUiMenu
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button backBtn;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xB94068", Offset = "0xB94068", VA = "0xB94068", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xB94108", Offset = "0xB94108", VA = "0xB94108")]
	public LevelSelectMenu()
	{
	}
}
[Token(Token = "0x200006F")]
public class MVCPattern : MonoBehaviour
{
	[Token(Token = "0x6000220")]
	[Address(RVA = "0xB98704", Offset = "0xB98704", VA = "0xB98704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xB98708", Offset = "0xB98708", VA = "0xB98708")]
	private void Update()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xB9870C", Offset = "0xB9870C", VA = "0xB9870C")]
	public MVCPattern()
	{
	}
}
[Token(Token = "0x2000070")]
public class ModelSelectMenu : BaseUiMenu
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button calssicBtn;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button MultiplayerBattleBtn;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button SettingBtn;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button ExitBtn;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button ClearBtn;

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xB99674", Offset = "0xB99674", VA = "0xB99674", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xB9983C", Offset = "0xB9983C", VA = "0xB9983C")]
	public ModelSelectMenu()
	{
	}
}
[Token(Token = "0x2000071")]
public abstract class BaseUiMenu : MonoBehaviour
{
	[Token(Token = "0x6000225")]
	public abstract void Init();

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xC372EC", Offset = "0xC372EC", VA = "0xC372EC", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xC35A4C", Offset = "0xC35A4C", VA = "0xC35A4C")]
	public void SetButtonText(ref Button btn, string txt)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xC35BC0", Offset = "0xC35BC0", VA = "0xC35BC0")]
	protected BaseUiMenu()
	{
	}
}
[Token(Token = "0x2000072")]
public class RingTargetAiShoot : MonoBehaviour, IAiShoot
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RingTarget ringTarget;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xCCCC68", Offset = "0xCCCC68", VA = "0xCCCC68", Slot = "4")]
	public Vector3 GetTargetByScore(int score)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xCCCE64", Offset = "0xCCCE64", VA = "0xCCCE64")]
	public RingTargetAiShoot()
	{
	}
}
[Token(Token = "0x2000073")]
public class BaseNetworkMono : MonoBehaviour
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected MessageData.OperateType operateType;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float interval;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xC3685C", Offset = "0xC3685C", VA = "0xC3685C")]
	public void SetOperateType(MessageData.OperateType operateType)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xC36864", Offset = "0xC36864", VA = "0xC36864", Slot = "4")]
	protected virtual bool IsOutLimitTime()
	{
		return default(bool);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xC368B0", Offset = "0xC368B0", VA = "0xC368B0")]
	public BaseNetworkMono()
	{
	}
}
[Token(Token = "0x2000074")]
public class ConfettiEffect : MonoBehaviour
{
	[Token(Token = "0x2000075")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BD48", Offset = "0x83BD48")]
	private sealed class <WaitIntervalDO>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float interval;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int count;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<int> intervalCallBack;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action finishAction;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ConfettiEffect <>4__this;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds <waitTime>5__1;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__2;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600023D")]
			[Address(RVA = "0xB7ABFC", Offset = "0xB7ABFC", VA = "0xB7ABFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600023F")]
			[Address(RVA = "0xB7AC44", Offset = "0xB7AC44", VA = "0xB7AC44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0xB7AABC", Offset = "0xB7AABC", VA = "0xB7AABC")]
		[DebuggerHidden]
		public <WaitIntervalDO>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0xB7AAE8", Offset = "0xB7AAE8", VA = "0xB7AAE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0xB7AAEC", Offset = "0xB7AAEC", VA = "0xB7AAEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0xB7AC04", Offset = "0xB7AC04", VA = "0xB7AC04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000076")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BD58", Offset = "0x83BD58")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ConfettiEffect <>4__this;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 winnerPos;

		[Token(Token = "0x6000240")]
		[Address(RVA = "0xB7AA60", Offset = "0xB7AA60", VA = "0xB7AA60")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0xB7AA68", Offset = "0xB7AA68", VA = "0xB7AA68")]
		internal void <PlayWinEffect>b__0()
		{
		}
	}

	[Token(Token = "0x2000077")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BD68", Offset = "0x83BD68")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ConfettiEffect <>4__this;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] winnerPos;

		[Token(Token = "0x6000242")]
		[Address(RVA = "0xB7AA90", Offset = "0xB7AA90", VA = "0xB7AA90")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0xB7AA98", Offset = "0xB7AA98", VA = "0xB7AA98")]
		internal void <PlayWinEffect>b__0()
		{
		}
	}

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string directionalEffectName;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> directionalPoints;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] rainEffect;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ConfettiEffect intstance;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> poolObjs;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xCC2C58", Offset = "0xCC2C58", VA = "0xCC2C58")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xCC2D38", Offset = "0xCC2D38", VA = "0xCC2D38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xCC2E6C", Offset = "0xCC2E6C", VA = "0xCC2E6C")]
	public void PlayDirectionalSuccessively(float interval, Action callBack)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xCC2F4C", Offset = "0xCC2F4C", VA = "0xCC2F4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8452F4", Offset = "0x8452F4")]
	private IEnumerator WaitIntervalDO(float interval, int count, Action<int> intervalCallBack, Action finishAction)
	{
		return null;
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xCC3014", Offset = "0xCC3014", VA = "0xCC3014")]
	public void PlayRainEffect(int index, Vector3 pos)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xCC3100", Offset = "0xCC3100", VA = "0xCC3100")]
	public void PlayRainEffect(Vector3 pos)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xCC3108", Offset = "0xCC3108", VA = "0xCC3108")]
	public void PlayRainEffect(Vector3[] pos)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xCC2D7C", Offset = "0xCC2D7C", VA = "0xCC2D7C")]
	public void PlayWinEffect(Vector3 winnerPos)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xCC3188", Offset = "0xCC3188", VA = "0xCC3188")]
	public void PlayWinEffect(Vector3[] winnerPos)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xCC3268", Offset = "0xCC3268", VA = "0xCC3268")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xCC33CC", Offset = "0xCC33CC", VA = "0xCC33CC")]
	public ConfettiEffect()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xCC3474", Offset = "0xCC3474", VA = "0xCC3474")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845354", Offset = "0x845354")]
	private void <PlayDirectionalSuccessively>b__7_0(int index)
	{
	}
}
[Token(Token = "0x2000078")]
public class DrawLine : MonoBehaviour
{
	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Ray ray;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distance;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] path;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float height;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 offset;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xCC6368", Offset = "0xCC6368", VA = "0xCC6368")]
	private void CalculatePath()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xCC64DC", Offset = "0xCC64DC", VA = "0xCC64DC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xCC64E0", Offset = "0xCC64E0", VA = "0xCC64E0")]
	public DrawLine()
	{
	}
}
[Token(Token = "0x2000079")]
public class MessageCenter : MonoBehaviour
{
	[Token(Token = "0x200007A")]
	public delegate void OnFireArrow(string id, PathData data);

	[Token(Token = "0x200007B")]
	public delegate void OnChangeGameData(Data.UserData[] userDatas, int gameState);

	[Token(Token = "0x200007C")]
	public delegate void OnChangeWind(WindData windData);

	[Serializable]
	[Token(Token = "0x200007D")]
	public struct FireArrow
	{
		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string id;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PathData data;

		[Token(Token = "0x6000257")]
		[Address(RVA = "0xB7F454", Offset = "0xB7F454", VA = "0xB7F454")]
		public FireArrow(string id, PathData data)
		{
		}
	}

	[Token(Token = "0x200007E")]
	[SerializeField]
	public struct GameDatas
	{
		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Data.UserData[] datas;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int gameState;

		[Token(Token = "0x6000258")]
		[Address(RVA = "0xB7F498", Offset = "0xB7F498", VA = "0xB7F498")]
		public GameDatas(Data.UserData[] userDatas, int gameState)
		{
		}
	}

	[Token(Token = "0x200007F")]
	public enum MethodType
	{
		[Token(Token = "0x4000200")]
		FireArrow,
		[Token(Token = "0x4000201")]
		ChangeGameState,
		[Token(Token = "0x4000202")]
		ChangeWind
	}

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int count;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UnityEvent<string> OnSendMessageEvent;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OnFireArrow FireArrowAction;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static OnChangeGameData onChangeGameData;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static OnChangeWind onChangeWind;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xB98878", Offset = "0xB98878", VA = "0xB98878")]
	public static void SendMethodMessage(MethodType methodType, params object[] args)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xB98E3C", Offset = "0xB98E3C", VA = "0xB98E3C")]
	public static void ExecuteMethodAction(MethodType type, string data)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xB99020", Offset = "0xB99020", VA = "0xB99020")]
	public MessageCenter()
	{
	}
}
[Token(Token = "0x2000080")]
public class LoginManager : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_InputField PlayerName_InputField;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xB98434", Offset = "0xB98434", VA = "0xB98434")]
	public void ConnectToPhotonServer()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xB9850C", Offset = "0xB9850C", VA = "0xB9850C")]
	public void ConnectAnonymously()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xB98568", Offset = "0xB98568", VA = "0xB98568", Slot = "30")]
	public override void OnConnected()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xB985DC", Offset = "0xB985DC", VA = "0xB985DC", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xB986FC", Offset = "0xB986FC", VA = "0xB986FC")]
	public LoginManager()
	{
	}
}
[Token(Token = "0x2000081")]
public class MultiplayerVRConstants
{
	[Token(Token = "0x2000082")]
	public enum RaiseEventCodes
	{
		[Token(Token = "0x400020E")]
		PlayerSpawnEventCode = 1
	}

	[Token(Token = "0x4000204")]
	public const string MAP_TYPE_KEY = "map";

	[Token(Token = "0x4000205")]
	public const string MAP_TYPE_VALUE_SCHOOL = "school";

	[Token(Token = "0x4000206")]
	public const string MAP_TYPE_VALUE_OUTDOOR = "outdoor";

	[Token(Token = "0x4000207")]
	public const string SELECTED_AVATAR_INDEX = "Selected_Avatar_Index";

	[Token(Token = "0x4000208")]
	public const string AVATAR_RECIPE_STRING = "Avatar_Recipe_String";

	[Token(Token = "0x4000209")]
	public const string AVATAR_SAVE_FILE_NAME = "/LocalAvatarText.txt";

	[Token(Token = "0x400020A")]
	public const string AVATAR_CALIBRATIONDATA_FILE_NAME = "/AvatarCalibrationDataText.save";

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool USE_FINALIK;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool USE_FINALIK_UMA2;

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x20D2FDC", Offset = "0x20D2FDC", VA = "0x20D2FDC")]
	public MultiplayerVRConstants()
	{
	}
}
[Token(Token = "0x2000083")]
public class MultiplayerVRSynchronization : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83CEB0", Offset = "0x83CEB0")]
	public Transform networkedVRPlayerTransform;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_Distance_NetworkedVRPlayer;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_Direction_NetworkedVRPlayer;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_NetworkPosition_NetworkedVRPlayer;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_StoredPosition_NetworkedVRPlayer;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion m_NetworkRotation_GeneralVRPlayer;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_Angle_GeneralVRPlayer;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83CEE8", Offset = "0x83CEE8")]
	public Transform mainAvatarTransform;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_Distance_MainAvatar;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 m_Direction_MainAvatar;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_NetworkPosition_MainAvatar;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 m_StoredPosition_MainAvatar;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion m_NetworkRotation_MainAvatar;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_Angle_MainAvatar;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83CF20", Offset = "0x83CF20")]
	public Transform headTransform;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion m_NetworkRotation_Head;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float m_Angle_Head;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83CF58", Offset = "0x83CF58")]
	public Transform bodyTransform;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Quaternion m_NetworkRotation_Body;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float m_Angle_Body;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83CF90", Offset = "0x83CF90")]
	public Transform leftHandTransform;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform rightHandTransform;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float m_Distance_LeftHand;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 m_Direction_LeftHand;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 m_NetworkPosition_LeftHand;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 m_StoredPosition_LeftHand;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Quaternion m_NetworkRotation_LeftHand;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float m_Angle_LeftHand;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float m_Distance_RightHand;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 m_Direction_RightHand;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 m_NetworkPosition_RightHand;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 m_StoredPosition_RightHand;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Quaternion m_NetworkRotation_RightHand;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float m_Angle_RightHand;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool m_firstTake;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x20D303C", Offset = "0x20D303C", VA = "0x20D303C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x20D31C0", Offset = "0x20D31C0", VA = "0x20D31C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x20D31CC", Offset = "0x20D31CC", VA = "0x20D31CC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x20D3788", Offset = "0x20D3788", VA = "0x20D3788", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x20D456C", Offset = "0x20D456C", VA = "0x20D456C")]
	public MultiplayerVRSynchronization()
	{
	}
}
[Token(Token = "0x2000084")]
public class NetworkedGrabbing : MonoBehaviourPunCallbacks, IPunOwnershipCallbacks
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonView m_photonView;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isBeingHeld;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x20D8CAC", Offset = "0x20D8CAC", VA = "0x20D8CAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x20D8D08", Offset = "0x20D8D08", VA = "0x20D8D08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x20D8D64", Offset = "0x20D8D64", VA = "0x20D8D64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x20D8DDC", Offset = "0x20D8DDC", VA = "0x20D8DDC")]
	private void TransferOwnership()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x20D8DF8", Offset = "0x20D8DF8", VA = "0x20D8DF8")]
	public void OnSelectEnter()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x20D8FEC", Offset = "0x20D8FEC", VA = "0x20D8FEC")]
	public void OnSelectExit()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x20D9138", Offset = "0x20D9138", VA = "0x20D9138", Slot = "54")]
	public void OnOwnershipRequest(PhotonView targetView, Photon.Realtime.Player requestingPlayer)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x20D9288", Offset = "0x20D9288", VA = "0x20D9288", Slot = "55")]
	public void OnOwnershipTransfered(PhotonView targetView, Photon.Realtime.Player previousOwner)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x20D928C", Offset = "0x20D928C", VA = "0x20D928C")]
	[PunRPC]
	public void StartNetworkedGrabbing()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x20D9298", Offset = "0x20D9298", VA = "0x20D9298")]
	[PunRPC]
	public void StopNetworkedGrabbing()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x20D92A0", Offset = "0x20D92A0", VA = "0x20D92A0", Slot = "56")]
	public void OnOwnershipTransferFailed(PhotonView targetView, Photon.Realtime.Player senderOfFailedRequest)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x20D92E0", Offset = "0x20D92E0", VA = "0x20D92E0")]
	public NetworkedGrabbing()
	{
	}
}
[Token(Token = "0x2000085")]
public class PlayerNetworkSetup : MonoBehaviourPun
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject localXRRigGameobject;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject mainAvatarGamebject;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject avatarHeadGameobject;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject avatarBodyGameobject;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI playerName_Text;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] AvatarModelPrefabs;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject nonNetworkedGameobjects;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x20E293C", Offset = "0x20E293C", VA = "0x20E293C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x20E2FBC", Offset = "0x20E2FBC", VA = "0x20E2FBC")]
	[PunRPC]
	public void InitializeSelectedAvatarModel(int avatarSelectionNumber)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x20E311C", Offset = "0x20E311C", VA = "0x20E311C")]
	private void SetUpAvatarGameobject(Transform avatarModelTransform, Transform parentAvatarTransform)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x20E2EF0", Offset = "0x20E2EF0", VA = "0x20E2EF0")]
	private void SetAvatarUI()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x20E2DE8", Offset = "0x20E2DE8", VA = "0x20E2DE8")]
	private void SetLayerRecursively(GameObject go, int layerNumber)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x20E3174", Offset = "0x20E3174", VA = "0x20E3174")]
	public PlayerNetworkSetup()
	{
	}
}
[Token(Token = "0x2000086")]
public class SpawnManager : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] spawnPositions;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xCD5370", Offset = "0xCD5370", VA = "0xCD5370")]
	private void Start()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xCD5374", Offset = "0xCD5374", VA = "0xCD5374")]
	private void SpawnPlayer()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xCD559C", Offset = "0xCD559C", VA = "0xCD559C")]
	public SpawnManager()
	{
	}
}
[Token(Token = "0x2000087")]
public class VirtualWorldManager : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnNewPlayerEntered;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VirtualWorldManager Instance;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xB75130", Offset = "0xB75130", VA = "0xB75130")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xB75254", Offset = "0xB75254", VA = "0xB75254")]
	public void LeaveRoomAndLoadHomeScene()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xB752B4", Offset = "0xB752B4", VA = "0xB752B4", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xB753D8", Offset = "0xB753D8", VA = "0xB753D8", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xB75434", Offset = "0xB75434", VA = "0xB75434", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xB75438", Offset = "0xB75438", VA = "0xB75438", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xB754BC", Offset = "0xB754BC", VA = "0xB754BC")]
	public VirtualWorldManager()
	{
	}
}
[Token(Token = "0x2000088")]
public class NetCore : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x6000281")]
	[Address(RVA = "0x20D47A0", Offset = "0x20D47A0", VA = "0x20D47A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x20D4818", Offset = "0x20D4818", VA = "0x20D4818", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x20D4DC4", Offset = "0x20D4DC4", VA = "0x20D4DC4", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x20D4DC8", Offset = "0x20D4DC8", VA = "0x20D4DC8")]
	public NetCore()
	{
	}
}
[Token(Token = "0x2000089")]
public class NetworkManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200008A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BD88", Offset = "0x83BD88")]
	private sealed class <>c
	{
		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, int> <>9__10_0;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<Transform> <>9__12_0;

		[Token(Token = "0x6000290")]
		[Address(RVA = "0xB8223C", Offset = "0xB8223C", VA = "0xB8223C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0xB82244", Offset = "0xB82244", VA = "0xB82244")]
		internal int <RegisterStartPosition>b__10_0(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xB82260", Offset = "0xB82260", VA = "0xB82260")]
		internal bool <GetStartPosition>b__12_0(Transform t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerPrefab;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool dontDestroyOnLoad;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Transform> startPositions;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int startPositionIndex;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83CFD8", Offset = "0x83CFD8")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83CFD8", Offset = "0x83CFD8")]
	private static NetworkManager <singleton>k__BackingField;

	[Token(Token = "0x17000042")]
	public static NetworkManager singleton
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0x20D6378", Offset = "0x20D6378", VA = "0x20D6378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8453E4", Offset = "0x8453E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x20D63DC", Offset = "0x20D63DC", VA = "0x20D63DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8453F4", Offset = "0x8453F4")]
		internal set
		{
		}
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x20D6448", Offset = "0x20D6448", VA = "0x20D6448")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x20D6810", Offset = "0x20D6810", VA = "0x20D6810")]
	private void SceneLoadedForPlayer()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x20D6814", Offset = "0x20D6814", VA = "0x20D6814")]
	public static void RegisterStartPosition(Transform start)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x20D69F8", Offset = "0x20D69F8", VA = "0x20D69F8")]
	public static void UnRegisterStartPosition(Transform start)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x20D6A84", Offset = "0x20D6A84", VA = "0x20D6A84", Slot = "4")]
	public virtual Transform GetStartPosition()
	{
		return null;
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x20D644C", Offset = "0x20D644C", VA = "0x20D644C")]
	private bool InitializeSingleton()
	{
		return default(bool);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x20D6CB8", Offset = "0x20D6CB8", VA = "0x20D6CB8")]
	public NetworkManager()
	{
	}
}
[Token(Token = "0x200008B")]
public class NumberKeyBoard : MonoBehaviour
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text viewText;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Button> numberButtons;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isInit;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<char> inputInfo;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityAction<string> callBack;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x20D92EC", Offset = "0x20D92EC", VA = "0x20D92EC")]
	public void ApplyButton()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x20D94F4", Offset = "0x20D94F4", VA = "0x20D94F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x20D950C", Offset = "0x20D950C", VA = "0x20D950C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x20D97B4", Offset = "0x20D97B4", VA = "0x20D97B4")]
	public void OnTigger(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x20D9BD0", Offset = "0x20D9BD0", VA = "0x20D9BD0")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x20D9B28", Offset = "0x20D9B28", VA = "0x20D9B28")]
	private void OnAddNumber(string number)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x20D9980", Offset = "0x20D9980", VA = "0x20D9980")]
	private void Del()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x20D9A0C", Offset = "0x20D9A0C", VA = "0x20D9A0C")]
	private void Ok()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x20D9C54", Offset = "0x20D9C54", VA = "0x20D9C54")]
	private void Clear()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x20D9CB0", Offset = "0x20D9CB0", VA = "0x20D9CB0")]
	public void ShowNumberKeyBoard(UnityAction<string> callBack)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x20D9D00", Offset = "0x20D9D00", VA = "0x20D9D00")]
	public NumberKeyBoard()
	{
	}
}
[Token(Token = "0x200008C")]
public class PKGameUI : BaseUiMenu
{
	[Token(Token = "0x200008D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BD98", Offset = "0x83BD98")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PKGameUI <>4__this;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callBack;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xB82880", Offset = "0xB82880", VA = "0xB82880")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xB82888", Offset = "0xB82888", VA = "0xB82888")]
		internal void <GameStart>b__0()
		{
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xB8293C", Offset = "0xB8293C", VA = "0xB8293C")]
		internal void <GameStart>b__1()
		{
		}
	}

	[Token(Token = "0x200008E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BDA8", Offset = "0x83BDA8")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PKGameUI <>4__this;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callBack;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xB829B8", Offset = "0xB829B8", VA = "0xB829B8")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xB829C0", Offset = "0xB829C0", VA = "0xB829C0")]
		internal void <GameOver>b__0()
		{
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xB82A74", Offset = "0xB82A74", VA = "0xB82A74")]
		internal void <GameOver>b__1()
		{
		}
	}

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text[] usersNamesText;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text[] scoreTexts;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text gameStartText;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text gameOverText;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CanvasGroup startPanel;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CanvasGroup overPanel;

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x20D9E1C", Offset = "0x20D9E1C", VA = "0x20D9E1C")]
	public void GameStart(string userName1, string userName2, Action callBack)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x20D9FD8", Offset = "0x20D9FD8", VA = "0x20D9FD8")]
	public void GameOver(int score1, int score2, Action callBack)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x20DA128", Offset = "0x20DA128", VA = "0x20DA128")]
	private void UpdateScoreText(int score1, int score2)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x20DA2B8", Offset = "0x20DA2B8", VA = "0x20DA2B8", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x20DA3B8", Offset = "0x20DA3B8", VA = "0x20DA3B8")]
	public PKGameUI()
	{
	}
}
[Token(Token = "0x200008F")]
public class ResurceLoad : MonoBehaviour
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bow;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject arrow;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject palayer;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject refPlayer;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xCCC32C", Offset = "0xCCC32C", VA = "0xCCC32C")]
	public ResurceLoad()
	{
	}
}
[Token(Token = "0x2000090")]
public class RoomUI : BaseUiMenu
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text scoreText;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text userName;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text otherUserName;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text timeTitle;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text timeView;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text messageText;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xCCF064", Offset = "0xCCF064", VA = "0xCCF064")]
	public void UpdateSource(int[] socres)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xCCF128", Offset = "0xCCF128", VA = "0xCCF128")]
	public void UpdateSource(NetPlayerManager[] netPlayerManagers)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xCCF2F8", Offset = "0xCCF2F8", VA = "0xCCF2F8")]
	public void UpdateSource(string[] nickNames, int[] socres)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xCCF470", Offset = "0xCCF470", VA = "0xCCF470")]
	public void UpdateScoreLeft(int score)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xCCF554", Offset = "0xCCF554", VA = "0xCCF554")]
	public void UpdateTimeView(float time)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xCCF61C", Offset = "0xCCF61C", VA = "0xCCF61C")]
	public void HideResult()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xCCF630", Offset = "0xCCF630", VA = "0xCCF630", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xCCF6D8", Offset = "0xCCF6D8", VA = "0xCCF6D8")]
	public RoomUI()
	{
	}
}
[Token(Token = "0x2000091")]
public class SelectSceneUI : BaseUIPanel
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Button> buttons;

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xCD35E4", Offset = "0xCD35E4", VA = "0xCD35E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xCD3828", Offset = "0xCD3828", VA = "0xCD3828")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xCD3830", Offset = "0xCD3830", VA = "0xCD3830")]
	private void SetInteraction(bool isEnable)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xCD3864", Offset = "0xCD3864", VA = "0xCD3864")]
	private void OnClickClassicBtn()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xCD38C8", Offset = "0xCD38C8", VA = "0xCD38C8")]
	private void OnClickAdventureBtn()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xCD392C", Offset = "0xCD392C", VA = "0xCD392C")]
	private void OnClickRoundBtn()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xCD3990", Offset = "0xCD3990", VA = "0xCD3990")]
	private void OnClickRushBtn()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xCD39F4", Offset = "0xCD39F4", VA = "0xCD39F4")]
	public SelectSceneUI()
	{
	}
}
[Token(Token = "0x2000092")]
public class SettingPanel : MonoBehaviour
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup rctPanel;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> panels;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int index;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject curPanel;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xCD3AFC", Offset = "0xCD3AFC", VA = "0xCD3AFC")]
	public void OnClickNextBtn()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xCD3BD0", Offset = "0xCD3BD0", VA = "0xCD3BD0")]
	public void OnClickBackBtn()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xCD3C3C", Offset = "0xCD3C3C", VA = "0xCD3C3C")]
	public void OnClickRct()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xCD3CEC", Offset = "0xCD3CEC", VA = "0xCD3CEC")]
	public SettingPanel()
	{
	}
}
[Token(Token = "0x2000093")]
public class Test2 : MonoBehaviour
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] points;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedV;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedY;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float g;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int count;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xFA8234", Offset = "0xFA8234", VA = "0xFA8234")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xFA83F0", Offset = "0xFA83F0", VA = "0xFA83F0")]
	public Test2()
	{
	}
}
[Token(Token = "0x2000094")]
public class TestIK : MonoBehaviour
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRIKCalibrationBasic vrikCalibrationBasic;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform H;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform L;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform R;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ModelBody modelBody;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private VRHandAnimator vRHandAnimator;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private VRIK ik;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRHandAnimator _vrHandAnimator;

	[Token(Token = "0x17000043")]
	public VRHandAnimator GetVRHandAnimator
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xFA8AFC", Offset = "0xFA8AFC", VA = "0xFA8AFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public VRIKCalibrationBasic GetVRIKCalibrationBasic
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xFA8E40", Offset = "0xFA8E40", VA = "0xFA8E40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xFA8764", Offset = "0xFA8764", VA = "0xFA8764")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xFA8A40", Offset = "0xFA8A40", VA = "0xFA8A40")]
	private void UpdateWeight(float value)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xFA8BB0", Offset = "0xFA8BB0", VA = "0xFA8BB0")]
	public void SetRightHand(bool isTrue)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xFA8CF8", Offset = "0xFA8CF8", VA = "0xFA8CF8")]
	public void SetLeftHand(bool isTrue)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xFA8E48", Offset = "0xFA8E48", VA = "0xFA8E48")]
	public void SetAnchorToTarget(Transform anchor, Transform target, Vector3 localOffset)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xFA89E8", Offset = "0xFA89E8", VA = "0xFA89E8")]
	public void SetAnchorToTarget(Transform anchor, Transform target)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xFA8EC0", Offset = "0xFA8EC0", VA = "0xFA8EC0")]
	public TestIK()
	{
	}
}
[Token(Token = "0x2000095")]
public class TestLine : MonoBehaviour
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _renderer;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] points;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Bow bow;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDis;

	[Token(Token = "0x17000045")]
	public LineRenderer GetLineRenderer
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xFA8EC8", Offset = "0xFA8EC8", VA = "0xFA8EC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xFA8F7C", Offset = "0xFA8F7C", VA = "0xFA8F7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xFA9188", Offset = "0xFA9188", VA = "0xFA9188")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xFA918C", Offset = "0xFA918C", VA = "0xFA918C")]
	public TestLine()
	{
	}
}
[Token(Token = "0x2000096")]
public class TestMatch : MonoBehaviour
{
	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xFA91FC", Offset = "0xFA91FC", VA = "0xFA91FC")]
	public void OnTapStartMatch()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xFA9270", Offset = "0xFA9270", VA = "0xFA9270")]
	public TestMatch()
	{
	}
}
[Token(Token = "0x2000097")]
public class AvatarHolder : MonoBehaviour
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform MainAvatarTransform;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform HeadTransform;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform BodyTransform;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform HandLeftTransform;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform HandRightTransform;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xC324F4", Offset = "0xC324F4", VA = "0xC324F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xC32548", Offset = "0xC32548", VA = "0xC32548")]
	private void SetLayerRecursively(GameObject go, int layerNumber)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xC32650", Offset = "0xC32650", VA = "0xC32650")]
	public AvatarHolder()
	{
	}
}
[Token(Token = "0x2000098")]
public class AvatarInputConverter : MonoBehaviour
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform MainAvatarTransform;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform AvatarHead;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform AvatarBody;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform AvatarHand_Left;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform AvatarHand_Right;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform XRHead;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform XRHand_Left;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform XRHand_Right;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 headPositionOffset;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 handRotationOffset;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xC32658", Offset = "0xC32658", VA = "0xC32658")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xC32ADC", Offset = "0xC32ADC", VA = "0xC32ADC")]
	public AvatarInputConverter()
	{
	}
}
[Token(Token = "0x2000099")]
public class AvatarSelectionManager : MonoBehaviour
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject AvatarSelectionPlatformGameobject;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject VRPlayerGameobject;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] selectableAvatarModels;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] loadableAvatarModels;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int selectedAvatarIndex;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AvatarInputConverter avatarInputConverter;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AvatarSelectionManager Instance;

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xC32AE4", Offset = "0xC32AE4", VA = "0xC32AE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xC32C08", Offset = "0xC32C08", VA = "0xC32C08")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xC3320C", Offset = "0xC3320C", VA = "0xC3320C")]
	public void NextAvatar()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xC33244", Offset = "0xC33244", VA = "0xC33244")]
	public void PreviousAvatar()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xC32DC0", Offset = "0xC32DC0", VA = "0xC32DC0")]
	private void ActivateAvatarModelAt(int avatarIndex)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xC32EFC", Offset = "0xC32EFC", VA = "0xC32EFC")]
	private void LoadAvatarModelAt(int avatarIndex)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xC3327C", Offset = "0xC3327C", VA = "0xC3327C")]
	public AvatarSelectionManager()
	{
	}
}
[Token(Token = "0x200009A")]
public class UpdateGroundHeight : MonoBehaviour
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform xrRig;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform model;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isLocalPlayer;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xB71368", Offset = "0xB71368", VA = "0xB71368")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xB713DC", Offset = "0xB713DC", VA = "0xB713DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xB71468", Offset = "0xB71468", VA = "0xB71468")]
	public UpdateGroundHeight()
	{
	}
}
[Token(Token = "0x200009B")]
public class XRRigFollower : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject xrRig_Gameobject;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fullbodyAvatar_Gameobject;

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xB75F54", Offset = "0xB75F54", VA = "0xB75F54")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xB76030", Offset = "0xB76030", VA = "0xB76030")]
	public XRRigFollower()
	{
	}
}
[Token(Token = "0x200009C")]
public class StandingSignInfo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200009D")]
	public struct AutoTextInfo
	{
		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI text;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string cnText;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string enText;
	}

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TextMeshPro> textMeshPros;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoSetText[] autoSetTexts;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AutoTextInfo> autoTextInfos;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xCD5768", Offset = "0xCD5768", VA = "0xCD5768")]
	public void GetAllAutoText()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xCD594C", Offset = "0xCD594C", VA = "0xCD594C")]
	public StandingSignInfo()
	{
	}
}
[Token(Token = "0x200009E")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xFA81C8", Offset = "0xFA81C8", VA = "0xFA81C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xFA8228", Offset = "0xFA8228", VA = "0xFA8228")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xFA822C", Offset = "0xFA822C", VA = "0xFA822C")]
	public Test()
	{
	}
}
[Token(Token = "0x200009F")]
public class TestHand : MonoBehaviour
{
	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xFA85BC", Offset = "0xFA85BC", VA = "0xFA85BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xFA85C0", Offset = "0xFA85C0", VA = "0xFA85C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xFA875C", Offset = "0xFA875C", VA = "0xFA875C")]
	public TestHand()
	{
	}
}
[Token(Token = "0x20000A0")]
public class VRIKTest : MonoBehaviour
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D114", Offset = "0x83D114")]
	public VRIK ik;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D14C", Offset = "0x83D14C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D14C", Offset = "0x83D14C")]
	public Transform centerEyeAnchor;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D1AC", Offset = "0x83D1AC")]
	public Vector3 headAnchorPositionOffset;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D1E4", Offset = "0x83D1E4")]
	public Vector3 headAnchorRotationOffset;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D21C", Offset = "0x83D21C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D21C", Offset = "0x83D21C")]
	public Transform leftHandAnchor;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D27C", Offset = "0x83D27C")]
	public Transform rightHandAnchor;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D2B4", Offset = "0x83D2B4")]
	public Vector3 handAnchorPositionOffset;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D2EC", Offset = "0x83D2EC")]
	public Vector3 handAnchorRotationOffset;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D324", Offset = "0x83D324")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D324", Offset = "0x83D324")]
	public float scaleMlp;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D384", Offset = "0x83D384")]
	public VRIKCalibrator.CalibrationData data;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xB748FC", Offset = "0xB748FC", VA = "0xB748FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xB74970", Offset = "0xB74970", VA = "0xB74970")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xB74974", Offset = "0xB74974", VA = "0xB74974")]
	public VRIKTest()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TestDemo : MonoBehaviour
{
	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelsJsonSaveLyn levelsJsonSaveLyn;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ModelLevelsData modelLevelsData;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ModelLevel modelLevel;

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xFA840C", Offset = "0xFA840C", VA = "0xFA840C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xFA8468", Offset = "0xFA8468", VA = "0xFA8468")]
	public void UnLockALl()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xFA8584", Offset = "0xFA8584", VA = "0xFA8584")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xFA85B4", Offset = "0xFA85B4", VA = "0xFA85B4")]
	public TestDemo()
	{
	}
}
[Token(Token = "0x20000A2")]
public class TetVib : MonoBehaviour
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActionBasedController baseController;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputActionProperty property;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputAction action;

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xFA965C", Offset = "0xFA965C", VA = "0xFA965C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xFA96A0", Offset = "0xFA96A0", VA = "0xFA96A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xFA96BC", Offset = "0xFA96BC", VA = "0xFA96BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xFA96D8", Offset = "0xFA96D8", VA = "0xFA96D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xFA975C", Offset = "0xFA975C", VA = "0xFA975C")]
	public TetVib()
	{
	}
}
[Token(Token = "0x20000A3")]
public class TipsCanvasPanel : BaseUiMenu
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI textMeshProUGUI;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int tipsIndex;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xFAB5CC", Offset = "0xFAB5CC", VA = "0xFAB5CC", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xFAB704", Offset = "0xFAB704", VA = "0xFAB704")]
	public TipsCanvasPanel()
	{
	}
}
[Token(Token = "0x20000A4")]
public enum XmlPathType
{
	[Token(Token = "0x40002AE")]
	Content,
	[Token(Token = "0x40002AF")]
	Local,
	[Token(Token = "0x40002B0")]
	Resources
}
[Token(Token = "0x20000A5")]
public static class XmlExtend
{
	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xB76038", Offset = "0xB76038", VA = "0xB76038")]
	public static XmlNodeList GetXmlNodeList(this XmlDocument xml, string path, string rootname, XmlPathType type)
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB761D0", Offset = "0xB761D0", VA = "0xB761D0")]
	public static XmlDocument SaveToLocal(this XmlDocument xml, string name)
	{
		return null;
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB76274", Offset = "0xB76274", VA = "0xB76274")]
	public static XmlElement CreateXmlElement(this XmlElement xe, XmlDocument xml, string name)
	{
		return null;
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB76294", Offset = "0xB76294", VA = "0xB76294")]
	public static XmlElement XeSetAttribute(this XmlElement xe, string name, object value)
	{
		return null;
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB762F0", Offset = "0xB762F0", VA = "0xB762F0")]
	public static XmlElement AddTo(this XmlElement xe, XmlNode node)
	{
		return null;
	}
}
namespace IRONHEADGames
{
	[Token(Token = "0x20000A6")]
	public class RoomManager : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI OccupancyRateText_ForSchool;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI OccupancyRateText_ForOutdoor;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string mapType;

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xCCDBE0", Offset = "0xCCDBE0", VA = "0xCCDBE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xCCDC94", Offset = "0xCCDC94", VA = "0xCCDC94")]
		public void JoinRandomRoom()
		{
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xCCDCF0", Offset = "0xCCDCF0", VA = "0xCCDCF0")]
		public void OnEnterRoomButtonClicked_Outdoor()
		{
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xCCDDE8", Offset = "0xCCDDE8", VA = "0xCCDDE8")]
		public void OnEnterRoomButtonClicked_School()
		{
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xCCDEE0", Offset = "0xCCDEE0", VA = "0xCCDEE0", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0xCCE174", Offset = "0xCCE174", VA = "0xCCE174", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0xCCE1D8", Offset = "0xCCE1D8", VA = "0xCCE1D8", Slot = "35")]
		public override void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0xCCE2AC", Offset = "0xCCE2AC", VA = "0xCCE2AC", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0xCCE354", Offset = "0xCCE354", VA = "0xCCE354", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0xCCE7C8", Offset = "0xCCE7C8", VA = "0xCCE7C8", Slot = "42")]
		public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
		{
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0xCCE8D8", Offset = "0xCCE8D8", VA = "0xCCE8D8", Slot = "40")]
		public override void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0xCCEDAC", Offset = "0xCCEDAC", VA = "0xCCEDAC", Slot = "36")]
		public override void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0xCCEE20", Offset = "0xCCEE20", VA = "0xCCEE20")]
		public void CreatePrivateRoom(string roomName, byte maxPlayer, string mapType)
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0xCCEFE4", Offset = "0xCCEFE4", VA = "0xCCEFE4")]
		public void JoinPrivateRoom(string roomName)
		{
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0xCCDF58", Offset = "0xCCDF58", VA = "0xCCDF58")]
		private void CreateAndJoinRoom()
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0xCCF05C", Offset = "0xCCF05C", VA = "0xCCF05C")]
		public RoomManager()
		{
		}
	}
}
namespace Pico.Platform.Samples.Game
{
	[Token(Token = "0x20000A7")]
	public class LogHelper
	{
		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D3EC", Offset = "0x83D3EC")]
		public bool _Log;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool _Warning;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool _Assert;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool _Exception;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool _Error;

		[Token(Token = "0x17000046")]
		private string fileName
		{
			[Token(Token = "0x600030B")]
			[Address(RVA = "0xB97CB0", Offset = "0xB97CB0", VA = "0xB97CB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0xB97D4C", Offset = "0xB97D4C", VA = "0xB97D4C")]
		private void CaptureLog()
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xB97E14", Offset = "0xB97E14", VA = "0xB97E14")]
		private void CaptureLogThread(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0xB98220", Offset = "0xB98220", VA = "0xB98220")]
		private void SaveLog(string log)
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0xB982DC", Offset = "0xB982DC", VA = "0xB982DC")]
		public static void LogInfo(string tag, string msg)
		{
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0xB9840C", Offset = "0xB9840C", VA = "0xB9840C")]
		public static void LogWarning(string tag, string msg)
		{
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0xB98414", Offset = "0xB98414", VA = "0xB98414")]
		public static void LogError(string tag, string msg)
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0xB982E4", Offset = "0xB982E4", VA = "0xB982E4")]
		private static void Log(string tag, string msg, LogType logType)
		{
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0xB9841C", Offset = "0xB9841C", VA = "0xB9841C")]
		public LogHelper()
		{
		}
	}
}
namespace Com.Colorzore.Net
{
	[Token(Token = "0x20000A8")]
	public class GameCoreManager : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20000A9")]
		public enum GameState
		{
			[Token(Token = "0x40002C9")]
			Waiting,
			[Token(Token = "0x40002CA")]
			Ready,
			[Token(Token = "0x40002CB")]
			Start,
			[Token(Token = "0x40002CC")]
			Over,
			[Token(Token = "0x40002CD")]
			None
		}

		[Token(Token = "0x20000AA")]
		public delegate void OnGameOverDelegate(int index);

		[Token(Token = "0x20000AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BDC8", Offset = "0x83BDC8")]
		private sealed class <WaitGameStart>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40002CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40002CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40002D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameCoreManager <>4__this;

			[Token(Token = "0x17000047")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000332")]
				[Address(RVA = "0xB7BBC4", Offset = "0xB7BBC4", VA = "0xB7BBC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000048")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000334")]
				[Address(RVA = "0xB7BC0C", Offset = "0xB7BC0C", VA = "0xB7BC0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600032F")]
			[Address(RVA = "0xB7B814", Offset = "0xB7B814", VA = "0xB7B814")]
			[DebuggerHidden]
			public <WaitGameStart>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000330")]
			[Address(RVA = "0xB7B840", Offset = "0xB7B840", VA = "0xB7B840", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000331")]
			[Address(RVA = "0xB7B844", Offset = "0xB7B844", VA = "0xB7B844", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000333")]
			[Address(RVA = "0xB7BBCC", Offset = "0xB7BBCC", VA = "0xB7BBCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BDD8", Offset = "0x83BDD8")]
		private sealed class <>c
		{
			[Token(Token = "0x40002D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40002D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<NetPlayerManager> <>9__20_0;

			[Token(Token = "0x6000336")]
			[Address(RVA = "0xB7B7C8", Offset = "0xB7B7C8", VA = "0xB7B7C8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000337")]
			[Address(RVA = "0xB7B7D0", Offset = "0xB7B7D0", VA = "0xB7B7D0")]
			internal int <GetNetPlayerManager>b__20_0(NetPlayerManager p1, NetPlayerManager p2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameCoreManager Instance;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject instance;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject playerPrefab;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float gameDuration;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GameState gameState;

		[Token(Token = "0x40002BE")]
		public const string backSenceName = "Room";

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BaseTarget[] baseTargets;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NetPlayerManager[] _networkManagers;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isGameStart;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RoomUI roomUi;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PKGameUI pkGameUi;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ConfettiEffect confettiEffect;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float timer;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float windTime;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public OnGameOverDelegate onGameOverDelegate;

		[Token(Token = "0x6000314")]
		[Address(RVA = "0xB8A554", Offset = "0xB8A554", VA = "0xB8A554")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0xB8A5A8", Offset = "0xB8A5A8", VA = "0xB8A5A8")]
		public void Log(string message)
		{
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0xB8A638", Offset = "0xB8A638", VA = "0xB8A638")]
		public void SetGameState(GameState target)
		{
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0xB8A708", Offset = "0xB8A708", VA = "0xB8A708")]
		private void Start()
		{
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0xB8ABB0", Offset = "0xB8ABB0", VA = "0xB8ABB0", Slot = "43")]
		public override void OnPlayerLeftRoom(Photon.Realtime.Player other)
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0xB8AF9C", Offset = "0xB8AF9C", VA = "0xB8AF9C", Slot = "31")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0xB8B010", Offset = "0xB8B010", VA = "0xB8B010")]
		public bool LeaveRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0xB8B070", Offset = "0xB8B070", VA = "0xB8B070")]
		public void QuitApplication()
		{
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0xB8AB38", Offset = "0xB8AB38", VA = "0xB8AB38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x845454", Offset = "0x845454")]
		private IEnumerator WaitGameStart()
		{
			return null;
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0xB8B078", Offset = "0xB8B078", VA = "0xB8B078")]
		private void OnGameStart()
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0xB8B25C", Offset = "0xB8B25C", VA = "0xB8B25C")]
		public NetPlayerManager[] GetNetPlayerManager()
		{
			return null;
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xB8B550", Offset = "0xB8B550", VA = "0xB8B550")]
		public void GameStart()
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0xB8B800", Offset = "0xB8B800", VA = "0xB8B800")]
		public void UpdateSourceView()
		{
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0xB8B834", Offset = "0xB8B834", VA = "0xB8B834")]
		private void OnHitBoard(GameObject obj, BaseTarget target, int score)
		{
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0xB8B934", Offset = "0xB8B934", VA = "0xB8B934")]
		private void UpdateWindData()
		{
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0xB8BB68", Offset = "0xB8BB68", VA = "0xB8BB68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0xB8B98C", Offset = "0xB8B98C", VA = "0xB8B98C")]
		private void ChangeData()
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0xB8BC94", Offset = "0xB8BC94", VA = "0xB8BC94")]
		public void CmdWindDataChange(short[] power)
		{
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0xB8ADC0", Offset = "0xB8ADC0", VA = "0xB8ADC0")]
		public void OnGameOver()
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0xB8BD04", Offset = "0xB8BD04", VA = "0xB8BD04")]
		public void GameOver()
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0xB8C140", Offset = "0xB8C140", VA = "0xB8C140")]
		public GameCoreManager()
		{
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0xB8C150", Offset = "0xB8C150", VA = "0xB8C150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8454B4", Offset = "0x8454B4")]
		private void <GameStart>b__21_0()
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0xB8C180", Offset = "0xB8C180", VA = "0xB8C180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8454C4", Offset = "0x8454C4")]
		private void <GameOver>b__36_0()
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public class LauncherCore : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20000AE")]
		public delegate void UpdateMessageDelegate(LinkState state, string message);

		[Token(Token = "0x20000AF")]
		public enum LinkState
		{
			[Token(Token = "0x40002DE")]
			StartConnect,
			[Token(Token = "0x40002DF")]
			IsConnected,
			[Token(Token = "0x40002E0")]
			NoConnected,
			[Token(Token = "0x40002E1")]
			OnConnectedToMaster,
			[Token(Token = "0x40002E2")]
			OnJoinRandomFailed,
			[Token(Token = "0x40002E3")]
			OnDisconnected,
			[Token(Token = "0x40002E4")]
			OnJoinedRoom,
			[Token(Token = "0x40002E5")]
			OnLeftRoom
		}

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private byte maxPlayersPerRoom;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool isConnecting;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool isGameStart;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string gameVersion;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateMessageDelegate MessageDelegate;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string infoTxt;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isCreateRoom;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float runTime;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool InRoom;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine _coroutine;

		[Token(Token = "0x17000049")]
		public static string NickName
		{
			[Token(Token = "0x6000339")]
			[Address(RVA = "0xB91EEC", Offset = "0xB91EEC", VA = "0xB91EEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600033A")]
			[Address(RVA = "0xB91F4C", Offset = "0xB91F4C", VA = "0xB91F4C")]
			set
			{
			}
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0xB91D84", Offset = "0xB91D84", VA = "0xB91D84")]
		private void Awake()
		{
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0xB91F9C", Offset = "0xB91F9C", VA = "0xB91F9C")]
		public void Connect()
		{
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0xB920F0", Offset = "0xB920F0", VA = "0xB920F0")]
		public void DisableConnect()
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0xB920F8", Offset = "0xB920F8", VA = "0xB920F8", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0xB92180", Offset = "0xB92180", VA = "0xB92180", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xB92184", Offset = "0xB92184", VA = "0xB92184")]
		private void MatchFailTimeOut()
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xB92240", Offset = "0xB92240", VA = "0xB92240", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xB92430", Offset = "0xB92430", VA = "0xB92430")]
		private void Update()
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0xB92838", Offset = "0xB92838", VA = "0xB92838", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xB928AC", Offset = "0xB928AC", VA = "0xB928AC", Slot = "31")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0xB9266C", Offset = "0xB9266C", VA = "0xB9266C")]
		private void LoadRoom()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xB929B4", Offset = "0xB929B4", VA = "0xB929B4", Slot = "42")]
		public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0xB92A5C", Offset = "0xB92A5C", VA = "0xB92A5C")]
		public LauncherCore()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	public class NetPlayerManager : MonoBehaviourPunCallbacks, IPunObservable
	{
		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject LocalPlayerInstance;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject xrOrigin;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] heads;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AvatarInputConverter avatarInputConverter;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerController playerController;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int score;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int teamId;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SpawnPoints _spawnPoints;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool leavingRoom;

		[Token(Token = "0x1700004A")]
		public static SpawnPoints GetSpawnPoints
		{
			[Token(Token = "0x6000352")]
			[Address(RVA = "0x20D5188", Offset = "0x20D5188", VA = "0x20D5188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x20D4DD0", Offset = "0x20D4DD0", VA = "0x20D4DD0")]
		public void SetTeamId(int id)
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x20D4DD8", Offset = "0x20D4DD8", VA = "0x20D4DD8")]
		public void AddScore(int score)
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x20D4DE8", Offset = "0x20D4DE8", VA = "0x20D4DE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x20D4FD4", Offset = "0x20D4FD4", VA = "0x20D4FD4")]
		private void Start()
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x20D5090", Offset = "0x20D5090", VA = "0x20D5090")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadingMode)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x20D50FC", Offset = "0x20D50FC", VA = "0x20D50FC")]
		public PhotonView GetView()
		{
			return null;
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x20D50C4", Offset = "0x20D50C4", VA = "0x20D50C4")]
		private void CalledOnLevelWasLoaded(int level)
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x20D5104", Offset = "0x20D5104", VA = "0x20D5104")]
		private Vector3 GetPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x20D527C", Offset = "0x20D527C", VA = "0x20D527C", Slot = "29")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x20D5344", Offset = "0x20D5344", VA = "0x20D5344", Slot = "42")]
		public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x20D5348", Offset = "0x20D5348", VA = "0x20D5348")]
		[PunRPC]
		private void GameStart()
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x20D53A0", Offset = "0x20D53A0", VA = "0x20D53A0")]
		[PunRPC]
		public void CmdWindDataChange(short[] power)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x20D5400", Offset = "0x20D5400", VA = "0x20D5400")]
		[PunRPC]
		public void GameOver()
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x20D5458", Offset = "0x20D5458", VA = "0x20D5458", Slot = "31")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x20D5460", Offset = "0x20D5460", VA = "0x20D5460", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x20D4ED0", Offset = "0x20D4ED0", VA = "0x20D4ED0")]
		private void SetBodyController(bool isVisable)
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x20D5498", Offset = "0x20D5498", VA = "0x20D5498", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x20D5594", Offset = "0x20D5594", VA = "0x20D5594")]
		public NetPlayerManager()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public class PlayerController : MonoBehaviourPunCallbacks, IPunObservable
	{
		[Serializable]
		[Token(Token = "0x20000B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BDE8", Offset = "0x83BDE8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<TestIK> <>9__22_0;

			[Token(Token = "0x4000306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<TestIK> <>9__34_0;

			[Token(Token = "0x4000307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<TestIK> <>9__50_0;

			[Token(Token = "0x4000308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<TestIK> <>9__50_1;

			[Token(Token = "0x600037F")]
			[Address(RVA = "0xB8342C", Offset = "0xB8342C", VA = "0xB8342C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000380")]
			[Address(RVA = "0xB83434", Offset = "0xB83434", VA = "0xB83434")]
			internal void <OnTriggerLeft>b__22_0(TestIK ik)
			{
			}

			[Token(Token = "0x6000381")]
			[Address(RVA = "0xB83454", Offset = "0xB83454", VA = "0xB83454")]
			internal void <CmdShoot>b__34_0(TestIK ik)
			{
			}

			[Token(Token = "0x6000382")]
			[Address(RVA = "0xB83484", Offset = "0xB83484", VA = "0xB83484")]
			internal void <UpdateArrowState>b__50_0(TestIK ik)
			{
			}

			[Token(Token = "0x6000383")]
			[Address(RVA = "0xB834A4", Offset = "0xB834A4", VA = "0xB834A4")]
			internal void <UpdateArrowState>b__50_1(TestIK ik)
			{
			}
		}

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputActionReference leftTrigger;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputActionReference rightTrigger;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputActionReference primaryButtonInputActionReference;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputAction primaryButtonInputAction;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform leftTran;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform rightTran;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public Bow bow;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject arrowModel;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Quiver quiver;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isPickArrow;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool isRightTrigger;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public VibrationManager vibTrigger;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Collider[] _colliders;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int dragPower;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TestIK testIk;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _handPos;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Arrow _arrowTemp;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool primaryButton;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject userCanvasPanel;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _stopOperation;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float power;

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x20E01FC", Offset = "0x20E01FC", VA = "0x20E01FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x20E02CC", Offset = "0x20E02CC", VA = "0x20E02CC", Slot = "28")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x20E0308", Offset = "0x20E0308", VA = "0x20E0308")]
		private void Start()
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x20E06C0", Offset = "0x20E06C0", VA = "0x20E06C0")]
		public void UpdateBowCustomProperties(BowType type)
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x20E0864", Offset = "0x20E0864", VA = "0x20E0864", Slot = "47")]
		public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x20E09B4", Offset = "0x20E09B4", VA = "0x20E09B4")]
		private void StartTeleportLeft(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x20E09B8", Offset = "0x20E09B8", VA = "0x20E09B8")]
		private void CancelTeleportLeft(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x20E09D8", Offset = "0x20E09D8", VA = "0x20E09D8")]
		private void OnCancelLeft()
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x20E0548", Offset = "0x20E0548", VA = "0x20E0548")]
		private void OnTriggerLeft()
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x20E0AAC", Offset = "0x20E0AAC", VA = "0x20E0AAC")]
		private void OnTriggerRight()
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x20E09F8", Offset = "0x20E09F8", VA = "0x20E09F8")]
		public void TestIKNoNull(Action<TestIK> callBack)
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x20E0DAC", Offset = "0x20E0DAC", VA = "0x20E0DAC")]
		private void OnCancelRight()
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x20E1248", Offset = "0x20E1248", VA = "0x20E1248")]
		private void StartTeleportRight(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x20E124C", Offset = "0x20E124C", VA = "0x20E124C")]
		public void StopAllOperation()
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x20E12B8", Offset = "0x20E12B8", VA = "0x20E12B8")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x20E0F48", Offset = "0x20E0F48", VA = "0x20E0F48")]
		protected void Shoot(Vector3 start, Vector3 dir, float power)
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x20E14F0", Offset = "0x20E14F0", VA = "0x20E14F0")]
		protected void LoadArrow()
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x20E1558", Offset = "0x20E1558", VA = "0x20E1558")]
		[PunRPC]
		protected void CmdLoadArrow()
		{
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x20E15FC", Offset = "0x20E15FC", VA = "0x20E15FC")]
		[PunRPC]
		protected void CmdShoot(short[] start, short[] dir, short power)
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x20E19B4", Offset = "0x20E19B4", VA = "0x20E19B4")]
		public Arrow GetArrow()
		{
			return null;
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x20E1B74", Offset = "0x20E1B74", VA = "0x20E1B74")]
		private void OnTest()
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x20E1BE8", Offset = "0x20E1BE8", VA = "0x20E1BE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x20E1BE4", Offset = "0x20E1BE4", VA = "0x20E1BE4")]
		private void CancelTeleportRight(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x20E1D38", Offset = "0x20E1D38", VA = "0x20E1D38", Slot = "29")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x20E1CF4", Offset = "0x20E1CF4", VA = "0x20E1CF4")]
		private static void EnableAction(InputActionReference actionReference)
		{
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x20E1274", Offset = "0x20E1274", VA = "0x20E1274")]
		private static void DisableAction(InputActionReference actionReference)
		{
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x20E07D4", Offset = "0x20E07D4", VA = "0x20E07D4")]
		public static InputAction GetInputAction(InputActionReference actionReference)
		{
			return null;
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x20E09AC", Offset = "0x20E09AC", VA = "0x20E09AC")]
		public PhotonView GetView()
		{
			return null;
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x20E1E64", Offset = "0x20E1E64", VA = "0x20E1E64", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x20E0B68", Offset = "0x20E0B68", VA = "0x20E0B68")]
		private void UpdateArrowState()
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x20E21E4", Offset = "0x20E21E4", VA = "0x20E21E4")]
		public PlayerController()
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x20E21F0", Offset = "0x20E21F0", VA = "0x20E21F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845574", Offset = "0x845574")]
		private void <CmdLoadArrow>b__33_0(TestIK ik)
		{
		}
	}
	[Token(Token = "0x20000B3")]
	public class QuitRoomButton : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BDF8", Offset = "0x83BDF8")]
		private sealed class <>c
		{
			[Token(Token = "0x400030A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400030B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction <>9__1_0;

			[Token(Token = "0x6000387")]
			[Address(RVA = "0xB8471C", Offset = "0xB8471C", VA = "0xB8471C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000388")]
			[Address(RVA = "0xB84724", Offset = "0xB84724", VA = "0xB84724")]
			internal void <Awake>b__1_0()
			{
			}
		}

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button _button;

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xCC9684", Offset = "0xCC9684", VA = "0xCC9684")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xCC9818", Offset = "0xCC9818", VA = "0xCC9818")]
		public QuitRoomButton()
		{
		}
	}
	[Token(Token = "0x20000B5")]
	public class SpawnPoints : MonoBehaviour
	{
		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] points;

		[Token(Token = "0x6000389")]
		[Address(RVA = "0xCD55A4", Offset = "0xCD55A4", VA = "0xCD55A4")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xCD55E8", Offset = "0xCD55E8", VA = "0xCD55E8")]
		public Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xCD562C", Offset = "0xCD562C", VA = "0xCD562C")]
		public SpawnPoints()
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x20000B6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83BE08", Offset = "0x83BE08")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Material> createdMaterials;

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x20E385C", Offset = "0x20E385C", VA = "0x20E385C")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x20E3CA8", Offset = "0x20E3CA8", VA = "0x20E3CA8")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x20E3EB0", Offset = "0x20E3EB0", VA = "0x20E3EB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x20E3EBC", Offset = "0x20E3EBC", VA = "0x20E3EBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x20E3EC0", Offset = "0x20E3EC0", VA = "0x20E3EC0")]
		private void RemoveCreatedMaterials()
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x20E3F90", Offset = "0x20E3F90", VA = "0x20E3F90")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x20E409C", Offset = "0x20E409C", VA = "0x20E409C", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x20E4160", Offset = "0x20E4160", VA = "0x20E4160")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x20E3F98", Offset = "0x20E3F98", VA = "0x20E3F98")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x20E416C", Offset = "0x20E416C", VA = "0x20E416C")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x20E41C8", Offset = "0x20E41C8", VA = "0x20E41C8")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x20E41D0", Offset = "0x20E41D0", VA = "0x20E41D0")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x20E428C", Offset = "0x20E428C", VA = "0x20E428C")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x20E3C7C", Offset = "0x20E3C7C", VA = "0x20E3C7C")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x20E4500", Offset = "0x20E4500", VA = "0x20E4500")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x20E4878", Offset = "0x20E4878", VA = "0x20E4878")]
		public PostEffectsBase()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x83BE78", Offset = "0x83BE78")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83BE78", Offset = "0x83BE78")]
	[ExecuteInEditMode]
	internal class GlobalFog : PostEffectsBase
	{
		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D524", Offset = "0x83D524")]
		public bool distanceFog;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D55C", Offset = "0x83D55C")]
		public bool excludeFarPixels;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D594", Offset = "0x83D594")]
		public bool useRadialDistance;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D5CC", Offset = "0x83D5CC")]
		public bool heightFog;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D604", Offset = "0x83D604")]
		public float height;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83D63C", Offset = "0x83D63C")]
		public float heightDensity;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x83D658", Offset = "0x83D658")]
		public float startDistance;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader fogShader;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fogMaterial;

		[Token(Token = "0x600039C")]
		[Address(RVA = "0xB8D418", Offset = "0xB8D418", VA = "0xB8D418", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0xB8D498", Offset = "0xB8D498", VA = "0xB8D498")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0xB8DB90", Offset = "0xB8DB90", VA = "0xB8DB90")]
		private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0xB8DCFC", Offset = "0xB8DCFC", VA = "0xB8DCFC")]
		public GlobalFog()
		{
		}
	}
}
namespace PWCommon1
{
	[Token(Token = "0x20000B8")]
	public class AppConfig
	{
		[Token(Token = "0x400031A")]
		public const string VERSION = "1";

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string CfgVersion;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double LastUpdated;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string MinUnity;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly Texture2D Logo;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string NameSpace;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string Folder;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string ScriptsFolder;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string EditorScriptsFolder;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly string DocsFolder;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly string DocsFolderSpaced;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string MajorVersion;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly string MinorVersion;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public readonly string PatchVersion;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly string Version;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public readonly SystemLanguage[] AvailableLanguages;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly string TutorialsLink;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly string DiscordLink;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public readonly string SupportLink;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly string ASLink;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public readonly string NewsURLStripped;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public readonly bool HasWelcome;

		[Token(Token = "0x1700004B")]
		public string NewsURL
		{
			[Token(Token = "0x60003A0")]
			[Address(RVA = "0xC2D378", Offset = "0xC2D378", VA = "0xC2D378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xC2D540", Offset = "0xC2D540", VA = "0xC2D540")]
		public AppConfig(string minUnity, string name, SystemLanguage[] availableLanguages)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xC2D974", Offset = "0xC2D974", VA = "0xC2D974")]
		public AppConfig(string cfgVersion, double lastUpdated, string minUnity, string name, Texture2D logo, string nameSpace, string folder, string scriptsFolder, string editorScriptsFolder, string docsFolder, string majorVer, string minorVer, string patchVer, SystemLanguage[] availableLang, string tutorialsLink, string discordLink, string supportLink, string asLink, string newsURL, bool hasWelcome)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B9")]
	public class DropStack<T>
	{
		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T[] m_items;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int m_topIndex;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int m_count;

		[Token(Token = "0x1700004C")]
		public int Capacity
		{
			[Token(Token = "0x60003A3")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700004D")]
		public int Count
		{
			[Token(Token = "0x60003A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60003A5")]
		public DropStack(int capacity)
		{
		}

		[Token(Token = "0x60003A6")]
		public void Push(T item)
		{
		}

		[Token(Token = "0x60003A7")]
		public void Push(IEnumerable<T> items)
		{
		}

		[Token(Token = "0x60003A8")]
		public T Pop()
		{
			return (T)null;
		}

		[Token(Token = "0x60003A9")]
		public T Peek()
		{
			return (T)null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000BA")]
	public class UBrush
	{
		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float[] m_Strength;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Texture2D m_Brush;

		[Token(Token = "0x4000336")]
		private const int MIN_BRUSH_SIZE = 3;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x83D6C0", Offset = "0x83D6C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83D6C0", Offset = "0x83D6C0")]
		private int <Size>k__BackingField;

		[Token(Token = "0x1700004E")]
		public int Size
		{
			[Token(Token = "0x60003AA")]
			[Address(RVA = "0xFAC098", Offset = "0xFAC098", VA = "0xFAC098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845594", Offset = "0x845594")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0xFAC0A0", Offset = "0xFAC0A0", VA = "0xFAC0A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8455A4", Offset = "0x8455A4")]
			private set
			{
			}
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xFAC0A8", Offset = "0xFAC0A8", VA = "0xFAC0A8")]
		public bool Load(Texture2D brushTex, int size)
		{
			return default(bool);
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xFAC300", Offset = "0xFAC300", VA = "0xFAC300")]
		public float GetStrengthAtCoords(int ix, int iy)
		{
			return default(float);
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xFAC360", Offset = "0xFAC360", VA = "0xFAC360")]
		public UBrush()
		{
		}
	}
	[Token(Token = "0x20000BB")]
	public class Utils : MonoBehaviour
	{
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0xB72448", Offset = "0xB72448", VA = "0xB72448")]
		public static string FixFileName(string sourceFileName)
		{
			return null;
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xB72534", Offset = "0xB72534", VA = "0xB72534")]
		public static FileStream OpenRead(string path)
		{
			return null;
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xB725A0", Offset = "0xB725A0", VA = "0xB725A0")]
		public static string ReadAllText(string path)
		{
			return null;
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xB727B4", Offset = "0xB727B4", VA = "0xB727B4")]
		public static void WriteAllText(string path, string contents)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xB729F4", Offset = "0xB729F4", VA = "0xB729F4")]
		public static byte[] ReadAllBytes(string path)
		{
			return null;
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xB72C7C", Offset = "0xB72C7C", VA = "0xB72C7C")]
		public static void WriteAllBytes(string path, byte[] bytes)
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xB72DD4", Offset = "0xB72DD4", VA = "0xB72DD4")]
		public static string GetEditorScriptsPath(AppConfig appConfig)
		{
			return null;
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xB72DF4", Offset = "0xB72DF4", VA = "0xB72DF4")]
		public static string GetAppsSubfolder(string appFolder, string subfolderPath)
		{
			return null;
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xB73324", Offset = "0xB73324", VA = "0xB73324")]
		public static bool Math_ApproximatelyEqual(float a, float b, float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xB73348", Offset = "0xB73348", VA = "0xB73348")]
		public static bool Math_ApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xB73374", Offset = "0xB73374", VA = "0xB73374")]
		public static bool Math_IsPowerOf2(int value)
		{
			return default(bool);
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xB73384", Offset = "0xB73384", VA = "0xB73384")]
		public static float Math_Clamp(float min, float max, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xB73398", Offset = "0xB73398", VA = "0xB73398")]
		public static float Math_Modulo(float value, float mod)
		{
			return default(float);
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xB73410", Offset = "0xB73410", VA = "0xB73410")]
		public static int Math_Modulo(int value, int mod)
		{
			return default(int);
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xB734AC", Offset = "0xB734AC", VA = "0xB734AC")]
		public static float Math_InterpolateLinear(float value1, float value2, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xB734C4", Offset = "0xB734C4", VA = "0xB734C4")]
		public static float Math_InterpolateSmooth(float value1, float value2, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xB73510", Offset = "0xB73510", VA = "0xB73510")]
		public static float Math_Distance(float x1, float y1, float x2, float y2)
		{
			return default(float);
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xB7353C", Offset = "0xB7353C", VA = "0xB7353C")]
		public static float Math_InterpolateSmooth2(float v1, float v2, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xB73570", Offset = "0xB73570", VA = "0xB73570")]
		public static float Math_InterpolateCubic(float v0, float v1, float v2, float v3, float fraction)
		{
			return default(float);
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xB735A8", Offset = "0xB735A8", VA = "0xB735A8")]
		public static Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xB73624", Offset = "0xB73624", VA = "0xB73624")]
		public static int GetFrapoch()
		{
			return default(int);
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xB736E8", Offset = "0xB736E8", VA = "0xB736E8")]
		public static int TimeToFrapoch(DateTime time)
		{
			return default(int);
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xB737A0", Offset = "0xB737A0", VA = "0xB737A0")]
		public static DateTime FrapochToLocalDate(int seconds)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xB737A8", Offset = "0xB737A8", VA = "0xB737A8")]
		public static DateTime FrapochToLocalDate(double seconds)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xB7381C", Offset = "0xB7381C", VA = "0xB7381C")]
		public static bool IsInLayerMask(GameObject obj, LayerMask mask)
		{
			return default(bool);
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xB73878", Offset = "0xB73878", VA = "0xB73878")]
		public static bool IsSameTexture(Texture2D tex1, Texture2D tex2, bool checkID = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xB739E8", Offset = "0xB739E8", VA = "0xB739E8")]
		public static bool IsSameGameObject(GameObject go1, GameObject go2, bool checkID = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xB73B04", Offset = "0xB73B04", VA = "0xB73B04")]
		public static Type GetType(string TypeName)
		{
			return null;
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xB73EF0", Offset = "0xB73EF0", VA = "0xB73EF0")]
		public Utils()
		{
		}
	}
}
namespace PWCommon1.Localization
{
	[Token(Token = "0x20000BC")]
	public class LanguagePack
	{
		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<string, LanguagePack> ms_loadedPacks;

		[Token(Token = "0x4000339")]
		public const string VERSION = "1";

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Version;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double LastUpdated;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<LocalizationCategory> Categories;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IDictionary<string, LocalizationItem> Items;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_path;

		[Token(Token = "0x14000001")]
		private event Action OnChange
		{
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0xB91B94", Offset = "0xB91B94", VA = "0xB91B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8455B4", Offset = "0x8455B4")]
			add
			{
			}
			[Token(Token = "0x60003D3")]
			[Address(RVA = "0xB91C34", Offset = "0xB91C34", VA = "0xB91C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8455C4", Offset = "0x8455C4")]
			remove
			{
			}
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xB9045C", Offset = "0xB9045C", VA = "0xB9045C")]
		public LanguagePack()
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xB90560", Offset = "0xB90560", VA = "0xB90560")]
		public LanguagePack(LocalizationItem[] items)
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xB90A3C", Offset = "0xB90A3C", VA = "0xB90A3C")]
		public LanguagePack(LocalizationCategory[] categories)
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xB90DBC", Offset = "0xB90DBC", VA = "0xB90DBC")]
		public static LanguagePack Load(string path)
		{
			return null;
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xB91778", Offset = "0xB91778", VA = "0xB91778")]
		public void ReLoad()
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xB91364", Offset = "0xB91364", VA = "0xB91364")]
		private void LoadV1(BinaryFormatter formatter, Stream stream)
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xB91CD4", Offset = "0xB91CD4", VA = "0xB91CD4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8455D4", Offset = "0x8455D4")]
		public void Validate()
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xB91CE8", Offset = "0xB91CE8", VA = "0xB91CE8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x84560C", Offset = "0x84560C")]
		public void AddOnChangeAction(Action action)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xB91CEC", Offset = "0xB91CEC", VA = "0xB91CEC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x845644", Offset = "0x845644")]
		public void RemoveOnChangeAction(Action action)
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public class LocalizationCategory
	{
		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LocalizationItem> Items;

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xB9099C", Offset = "0xB9099C", VA = "0xB9099C")]
		public LocalizationCategory(string name)
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xB97CA0", Offset = "0xB97CA0", VA = "0xB97CA0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20000BE")]
	public class LocalizationItem
	{
		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Val;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Tooltip;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Help;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Context;

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xB97CA8", Offset = "0xB97CA8", VA = "0xB97CA8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xB91B08", Offset = "0xB91B08", VA = "0xB91B08")]
		public LocalizationItem()
		{
		}
	}
}
namespace AmbientSkies
{
	[Serializable]
	[Token(Token = "0x20000BF")]
	public class AmbientGradientSkyboxProfile
	{
		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string assetName;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int profileIndex;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lightRotation;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isPWProfile;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string postProcessingAssetName;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int creationMatchPostProcessing;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D738", Offset = "0x83D738")]
		public AmbientSkiesConsts.AmbientMode defaultAmbientMode;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AmbientSkiesConsts.VolumeFogType defaultFogType;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D770", Offset = "0x83D770")]
		public float defaultSkyboxRotation;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float defaultSkyboxPitch;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D7A8", Offset = "0x83D7A8")]
		public float defaultShadowStrength;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float defaultIndirectLightMultiplier;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color defaultSunColor;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 defaultSunRotation;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float defaultSunIntensity;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float defaultLWRPSunIntensity;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float defaultHDRPSunIntensity;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D7E0", Offset = "0x83D7E0")]
		public Color defaultFogColor;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float defaultFogDistance;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float defaultFogDensity;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float defaultNearFogDistance;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D818", Offset = "0x83D818")]
		public bool defaultScaleHorizonObjectWithFog;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool defaultHorizonSkyEnabled;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float defaultHorizonScattering;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float defaultHorizonFogDensity;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float defaultHorizonFalloff;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float defaultHorizonBlend;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector3 defaultHorizonSize;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool defaultFollowPlayer;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 defaultHorizonPosition;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float defaultHorizonUpdateTime;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D850", Offset = "0x83D850")]
		public float defaultShadowDistance;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AmbientSkiesConsts.HDShadowQuality defaultShadowQuality;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public AmbientSkiesConsts.ShadowCascade defaultCascadeCount;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public ShadowmaskMode defaultShadowmaskMode;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public LightShadows defaultShadowType;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public ShadowResolution defaultShadowResolution;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public ShadowProjection defaultShadowProjection;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D888", Offset = "0x83D888")]
		public float defaultSkyboxGroundIntensity;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public Color32 defaultSkyColor;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Color32 defaultEquatorColor;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Color32 defaultGroundColor;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool defaultEnableSunDisk;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D8C0", Offset = "0x83D8C0")]
		public Color32 defaultTopColor;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Color32 defaultMiddleColor;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public Color32 defaultBottomColor;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float defaultGradientDiffusion;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float defaultSkyMultiplier;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D8F8", Offset = "0x83D8F8")]
		public bool defaultIsGlobal;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float defaultBlendDistance;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float defaultWeight;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public int defaultPriority;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float defaultHDRIExposure;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float defaultHDRIMultiplier;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AmbientSkiesConsts.EnvironementSkyUpdateMode defaultHDRIUpdateMode;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float defaultHDRIRotation;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D930", Offset = "0x83D930")]
		public float defaultMaxShadowDistance;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float defaultCascadeSplit1;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float defaultCascadeSplit2;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float defaultCascadeSplit3;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool defaultUseContactShadows;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float defaultContactShadowsLength;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float defaultContactShadowsDistanceScaleFactor;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float defaultContactShadowsMaxDistance;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float defaultContactShadowsFadeDistance;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public int defaultContactShadowsSampleCount;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float defaultContactShadowsOpacity;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool defaultUseMicroShadowing;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83D968", Offset = "0x83D968")]
		public float defaultMicroShadowOpacity;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D980", Offset = "0x83D980")]
		public float defaultHDRPFogDistance;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Color32 defaultVolumetricSingleScatteringAlbedo;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float defaultVolumetricBaseFogDistance;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float defaultVolumetricBaseFogHeight;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public float defaultVolumetricMeanHeight;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float defaultVolumetricGlobalAnisotropy;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public float defaultVolumetricGlobalLightProbeDimmer;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float defaultVolumetricMaxFogDistance;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool defaultVolumetricEnableDistanceFog;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Color32 defaultVolumetricConstFogColor;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float defaultVolumetricMipFogNear;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public float defaultVolumetricMipFogFar;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public float defaultVolumetricMipFogMaxMip;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float defaultVolumetricDistanceRange;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public float defaultVolumetricSliceDistributionUniformity;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D9B8", Offset = "0x83D9B8")]
		public float defaultExponentialFogDensity;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float defaultExponentialBaseHeight;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float defaultExponentialHeightAttenuation;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float defaultExponentialMaxFogDistance;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float defaultExponentialMipFogNear;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float defaultExponentialMipFogFar;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public float defaultExponentialMipFogMaxMip;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83D9F0", Offset = "0x83D9F0")]
		public float defaultLinearFogDensity;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float defaultLinearHeightStart;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float defaultLinearHeightEnd;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public float defaultLinearMaxFogDistance;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public float defaultLinearMipFogNear;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float defaultLinearMipFogFar;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public float defaultLinearMipFogMaxMip;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DA28", Offset = "0x83DA28")]
		public float defaultIndirectDiffuseIntensity;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float defaultIndirectSpecularIntensity;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DA60", Offset = "0x83DA60")]
		public bool defaultEnableScreenSpaceReflections;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float defaultScreenEdgeFadeDistance;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public int defaultMaxNumberOfRaySteps;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public float defaultObjectThickness;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float defaultMinSmoothness;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float defaultSmoothnessFadeStart;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public bool defaultReflectSky;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DA98", Offset = "0x83DA98")]
		public bool defaultEnableScreenSpaceRefractions;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public float defaultScreenWeightDistance;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public bool defaultUseBakingSky;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DAD0", Offset = "0x83DAD0")]
		public bool defaultUseFogDensityVolume;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public Color32 defaultSingleScatteringAlbedo;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float defaultDensityVolumeFogDistance;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public Texture3D defaultFogDensityMaskTexture;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public Vector3 defaultDensityMaskTiling;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public Vector3 defaultDensityScale;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DB08", Offset = "0x83DB08")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83DB08", Offset = "0x83DB08")]
		public float skyboxGroundIntensity;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DB4C", Offset = "0x83DB4C")]
		public float skyboxRotation;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float skyboxPitch;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public float shadowStrength;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float indirectLightMultiplier;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public Color sunColor;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public float shadowDistance;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public Vector3 sunRotation;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public float sunIntensity;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public float LWRPSunIntensity;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public float HDRPSunIntensity;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public Color fogColor;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public float fogDistance;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public float nearFogDistance;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public float fogDensity;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public bool includeSunInBaking;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28D")]
		public bool horizonSkyEnabled;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28E")]
		public bool scaleHorizonObjectWithFog;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public float horizonScattering;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		public float horizonFogDensity;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public float horizonFalloff;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		public float horizonBlend;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public Vector3 horizonSize;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public bool followPlayer;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public Vector3 horizonPosition;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public float horizonUpdateTime;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public ShadowmaskMode shadowmaskMode;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public LightShadows shadowType;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public ShadowResolution shadowResolution;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		public ShadowProjection shadowProjection;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public AmbientSkiesConsts.AmbientMode ambientMode;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		public Color32 skyColor;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public Color32 equatorColor;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public Color32 groundColor;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public AmbientSkiesConsts.HDShadowQuality shadowQuality;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		public AmbientSkiesConsts.VolumeFogType fogType;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public AmbientSkiesConsts.ShadowCascade cascadeCount;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		public bool enableSunDisk;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DB68", Offset = "0x83DB68")]
		public Color32 topColor;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public Color32 middleColor;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public Color32 bottomColor;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		public float gradientDiffusion;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public float skyMultiplier;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DBA0", Offset = "0x83DBA0")]
		public bool isGlobal;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public float blendDistance;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DBD8", Offset = "0x83DBD8")]
		public float weight;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public int priority;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public float hDRIExposure;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public float hDRIMultiplier;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DBF0", Offset = "0x83DBF0")]
		public AmbientSkiesConsts.EnvironementSkyUpdateMode hDRIUpdateMode;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public float hDRIRotation;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DC0C", Offset = "0x83DC0C")]
		public float maxShadowDistance;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DC44", Offset = "0x83DC44")]
		public float cascadeSplit1;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DC5C", Offset = "0x83DC5C")]
		public float cascadeSplit2;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DC74", Offset = "0x83DC74")]
		public float cascadeSplit3;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DC8C", Offset = "0x83DC8C")]
		public bool useContactShadows;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DCC4", Offset = "0x83DCC4")]
		public float contactShadowsLength;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DCDC", Offset = "0x83DCDC")]
		public float contactShadowsDistanceScaleFactor;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public float contactShadowsMaxDistance;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		public float contactShadowsFadeDistance;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DCF4", Offset = "0x83DCF4")]
		public int contactShadowsSampleCount;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public float contactShadowsOpacity;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DD10", Offset = "0x83DD10")]
		public bool useMicroShadowing;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DD48", Offset = "0x83DD48")]
		public float microShadowOpacity;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DD60", Offset = "0x83DD60")]
		public float hDRPFogDistance;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public Color32 volumetricSingleScatteringAlbedo;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public float volumetricBaseFogDistance;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public float volumetricBaseFogHeight;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public float volumetricMeanHeight;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DD98", Offset = "0x83DD98")]
		public float volumetricGlobalAnisotropy;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DDB0", Offset = "0x83DDB0")]
		public float volumetricGlobalLightProbeDimmer;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		public float volumetricMaxFogDistance;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public bool volumetricEnableDistanceFog;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		public Color32 volumetricConstFogColor;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public float volumetricMipFogNear;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		public float volumetricMipFogFar;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DDC8", Offset = "0x83DDC8")]
		public float volumetricMipFogMaxMip;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DDE0", Offset = "0x83DDE0")]
		public float volumetricDistanceRange;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DE18", Offset = "0x83DE18")]
		public float volumetricSliceDistributionUniformity;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DE30", Offset = "0x83DE30")]
		public float exponentialBaseHeight;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public float exponentialHeightAttenuation;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		public float exponentialMaxFogDistance;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public float exponentialMipFogNear;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		public float exponentialMipFogFar;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public float exponentialMipFogMaxMip;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DE68", Offset = "0x83DE68")]
		public float linearHeightStart;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public float linearHeightEnd;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		public float linearMaxFogDistance;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public float linearMipFogNear;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		public float linearMipFogFar;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public float linearMipFogMaxMip;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DEA0", Offset = "0x83DEA0")]
		public float indirectDiffuseIntensity;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public float indirectSpecularIntensity;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DED8", Offset = "0x83DED8")]
		public bool enableScreenSpaceReflections;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DF10", Offset = "0x83DF10")]
		public float screenEdgeFadeDistance;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		public int maxNumberOfRaySteps;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DF28", Offset = "0x83DF28")]
		public float objectThickness;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DF40", Offset = "0x83DF40")]
		public float minSmoothness;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DF58", Offset = "0x83DF58")]
		public float smoothnessFadeStart;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public bool reflectSky;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E5")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DF70", Offset = "0x83DF70")]
		public bool enableScreenSpaceRefractions;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83DFA8", Offset = "0x83DFA8")]
		public float screenWeightDistance;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		public bool useBakingSky;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3ED")]
		public bool useFogDensityVolume;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		public Color32 singleScatteringAlbedo;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
		public float densityVolumeFogDistance;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		public Texture3D fogDensityMaskTexture;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		public Vector3 densityMaskTiling;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
		public Vector3 densityScale;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		public float linearFogDensity;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		public float exponentialFogDensity;

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x1CBE284", Offset = "0x1CBE284", VA = "0x1CBE284")]
		public void RevertToDefault()
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x1CBE538", Offset = "0x1CBE538", VA = "0x1CBE538")]
		public void SaveCurrentToDefault()
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x1CBE7FC", Offset = "0x1CBE7FC", VA = "0x1CBE7FC")]
		public AmbientGradientSkyboxProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C0")]
	public class AmbientLightingProfile
	{
		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int profileIndex;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string assetName;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool deaultShowLightmapSettings;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool defaultRealtimeGlobalIllumination;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool defaultBakedGlobalIllumination;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AmbientSkiesConsts.LightmapperMode defaultLightmappingMode;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float defaultIndirectRelolution;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float defaultLightmapResolution;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int defaultLightmapPadding;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool defaultUseHighResolutionLightmapSize;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool defaultCompressLightmaps;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool defaultAmbientOcclusion;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float defaultMaxDistance;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float defaultIndirectContribution;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float defaultDirectContribution;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool defaultUseDirectionalMode;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float defaultLightIndirectIntensity;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float defaultLightBoostIntensity;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool defaultFinalGather;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int defaultFinalGatherRayCount;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool defaultFinalGatherDenoising;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool defaultAutoLightmapGeneration;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DFC0", Offset = "0x83DFC0")]
		public string defaultReflectionProbeName;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AmbientSkiesConsts.ReflectionProbeSpawnType defaultReflectionProbeSpawnType;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ReflectionProbeMode defaultReflectionProbeMode;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ReflectionProbeRefreshMode defaultReflectionProbeRefresh;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public ReflectionCubemapCompression defaultReflectionCubemapCompression;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ReflectionProbeTimeSlicingMode defaultReflectionProbeTimeSlicingMode;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 defaultReflectionProbeScale;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int defaultReflectionProbesPerRow;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float defaultReflectionProbeOffset;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float defaultReflectionProbeClipPlaneDistance;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float defaultReflectionProbeBlendDistance;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LayerMask defaultReflectionprobeCullingMask;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float defaultReflectionProbeShadowDistance;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AmbientSkiesConsts.ReflectionProbeResolution defaultReflectionProbeResolution;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public AmbientSkiesConsts.LightProbeSpawnType defaultLightProbeSpawnType;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int defaultLightProbesPerRow;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int defaultLightProbeSpawnRadius;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float defaultSeaLevel;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool showLightmapSettings;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool realtimeGlobalIllumination;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		public bool bakedGlobalIllumination;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AmbientSkiesConsts.LightmapperMode lightmappingMode;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float indirectRelolution;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float lightmapResolution;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int lightmapPadding;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool useHighResolutionLightmapSize;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		public bool compressLightmaps;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		public bool ambientOcclusion;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float maxDistance;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float indirectContribution;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float directContribution;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool useDirectionalMode;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float lightIndirectIntensity;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float lightBoostIntensity;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool finalGather;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int finalGatherRayCount;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool finalGatherDenoising;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		public bool autoLightmapGeneration;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83DFF8", Offset = "0x83DFF8")]
		public string reflectionProbeName;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AmbientSkiesConsts.ReflectionProbeSpawnType reflectionProbeSpawnType;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public ReflectionProbeMode reflectionProbeMode;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ReflectionProbeRefreshMode reflectionProbeRefresh;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public ReflectionCubemapCompression reflectionCubemapCompression;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public ReflectionProbeTimeSlicingMode reflectionProbeTimeSlicingMode;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Vector3 reflectionProbeScale;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public int reflectionProbesPerRow;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float reflectionProbeOffset;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float reflectionProbeClipPlaneDistance;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float reflectionProbeBlendDistance;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public LayerMask reflectionprobeCullingMask;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float reflectionProbeShadowDistance;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public AmbientSkiesConsts.ReflectionProbeResolution reflectionProbeResolution;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public AmbientSkiesConsts.LightProbeSpawnType lightProbeSpawnType;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public int lightProbesPerRow;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public int lightProbeSpawnRadius;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float seaLevel;

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x1CBEF34", Offset = "0x1CBEF34", VA = "0x1CBEF34")]
		public void RevertToDefault()
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x1CBEFF0", Offset = "0x1CBEFF0", VA = "0x1CBEFF0")]
		public void SaveCurrentToDefault()
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x1CBF0AC", Offset = "0x1CBF0AC", VA = "0x1CBF0AC")]
		public AmbientLightingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C1")]
	public class AmbientPostProcessingProfile
	{
		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string assetName;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int profileIndex;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PostProcessProfile creationPostProcessProfile;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool defaultEnableEditMode;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool defaultHideGizmos;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool defaultAutoMatchProfile;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool defaultAoEnabled;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float defaultAoAmount;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color32 defaultAoColor;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool defaultAutoExposureEnabled;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float defaultExposureAmount;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float defaultExposureMin;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float defaultExposureMax;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool defaultBloomEnabled;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float defaultBloomAmount;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float defaultBloomThreshold;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture2D defaultLensTexture;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float defaultLensIntensity;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool defaultChromaticAberrationEnabled;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float defaultChromaticAberrationIntensity;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool defaultColorGradingEnabled;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D defaultColorGradingLut;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float defaultColorGradingPostExposure;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color32 defaultColorGradingColorFilter;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int defaultColorGradingTempature;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int defaultColorGradingTint;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float defaultColorGradingSaturation;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float defaultColorGradingContrast;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int defaultChannelMixerRed;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int defaultChannelMixerGreen;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int defaultChannelMixerBlue;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool defaultDepthOfFieldEnabled;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float defaultDepthOfFieldFocusDistance;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float defaultDepthOfFieldAperture;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float defaultDepthOfFieldFocalLength;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public AmbientSkiesConsts.DOFTrackingType defaultDepthOfFieldTrackingType;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float defaultFocusOffset;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public LayerMask defaultTargetLayer;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float defaultMaxFocusDistance;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool defaultDistortionEnabled;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float defaultDistortionIntensity;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float defaultDistortionScale;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool defaultGrainEnabled;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float defaultGrainIntensity;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float defaultGrainSize;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public bool defaultScreenSpaceReflectionsEnabled;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int defaultMaximumIterationCount;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float defaultThickness;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public PostProcessProfile defaultCustomPostProcessingProfile;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GradingMode defaultColorGradingMode;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public KernelSize defaultMaxBlurSize;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ScreenSpaceReflectionResolution defaultSpaceReflectionResolution;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public ScreenSpaceReflectionPreset defaultScreenSpaceReflectionPreset;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AmbientOcclusionMode defaultAmbientOcclusionMode;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float defaultMaximumMarchDistance;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float defaultDistanceFade;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float defaultScreenSpaceVignette;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool defaultVignetteEnabled;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float defaultVignetteIntensity;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float defaultVignetteSmoothness;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool defaultMotionBlurEnabled;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public int defaultShutterAngle;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public int defaultSampleCount;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AmbientSkiesConsts.AntiAliasingMode defaultAntiAliasingMode;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public AmbientSkiesConsts.HDRMode defaultHDRMode;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AmbientSkiesConsts.DepthOfFieldMode defaultDepthOfFieldMode;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public bool defaultDithering;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float defaultHDRPAOIntensity;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float defaultHDRPAOThicknessModifier;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float defaultHDRPAODirectLightingStrength;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float defaultHDRPBloomIntensity;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float defaultHDRPBloomScatter;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public Color32 defaultHDRPBloomTint;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Texture2D defaultHDRPBloomDirtLensTexture;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float defaultHDRPBloomDirtLensIntensity;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public bool defaultHDRPBloomHighQualityFiltering;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
		public bool defaultHDRPBloomPrefiler;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x156")]
		public bool defaultHDRPBloomAnamorphic;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public int defaultHDRPChannelMixerRed;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public int defaultHDRPChannelMixerGreen;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public int defaultHDRPChannelMixerBlue;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Texture2D defaultHDRPChromaticAberrationSpectralLut;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float defaultHDRPChromaticAberrationIntensity;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public int defaultHDRPChromaticAberrationMaxSamples;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float defaultHDRPColorAdjustmentPostExposure;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public float defaultHDRPColorAdjustmentContrast;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Color32 defaultHDRPColorAdjustmentColorFilter;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public int defaultHDRPColorAdjustmentHueShift;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float defaultHDRPColorAdjustmentSaturation;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Texture defaultHDRPColorLookupTexture;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float defaultHDRPColorLookupContribution;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public float defaultHDRPDepthOfFieldFocusDistance;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float defaultHDRPDepthOfFieldNearBlurStart;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float defaultHDRPDepthOfFieldNearBlurEnd;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public int defaultHDRPDepthOfFieldNearBlurSampleCount;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float defaultHDRPDepthOfFieldNearBlurMaxRadius;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float defaultHDRPDepthOfFieldFarBlurStart;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float defaultHDRPDepthOfFieldFarBlurEnd;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public int defaultHDRPDepthOfFieldFarBlurSampleCount;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public float defaultHDRPDepthOfFieldFarBlurMaxRadius;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public bool defaultHDRPDepthOfFieldHighQualityFiltering;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float defualtHDRPFilmGrainIntensity;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public float defualtHDRPFilmGrainResponse;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public float defaultHDRPLensDistortionIntensity;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float defaultHDRPLensDistortionXMultiplier;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public float defaultHDRPLensDistortionYMultiplier;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Vector2 defaultHDRPLensDistortionCenter;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float defaultHDRPLensDistortionScale;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float defaultHDRPMotionBlurIntensity;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public int defaultHDRPMotionBlurSampleCount;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public int defaultHDRPMotionBlurMaxVelocity;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float defaultHDRPMotionBlurMinVelocity;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float defaultHDRPMotionBlurCameraRotationVelocityClamp;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public bool defaultHDRPPaniniProjectionEnabled;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public float defaultHDRPPaniniProjectionDistance;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public float defaultHDRPPaniniProjectionCropToFit;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public float defualtHDRPShadowsMidtonesHighlightsShadowLimitStart;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float defualtHDRPShadowsMidtonesHighlightsShadowLimitEnd;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public float defualtHDRPShadowsMidtonesHighlightsHightlightLimitStart;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float defualtHDRPShadowsMidtonesHighlightsHighlightLimitEnd;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public Color32 defaultHDRPSplitToningShadows;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public Color32 defaultHDRPSplitToningHighlights;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public int defaultHDRPSplitToningBalance;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float defaultHDRPTonemappingToeStrength;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float defaultHDRPTonemappingToeLength;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float defaultHDRPTonemappingShoulderStrength;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public float defaultHDRPTonemappingShoulderLength;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public float defaultHDRPTonemappingShoulderAngle;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public float defaultHDRPTonemappingGamma;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public Texture2D defaultHDRPVignetteMask;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float defaultHDRPVignetteMaskOpacity;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public Color32 defaultHDRPVignetteColor;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public Vector2 defaultHDRPVignetteCenter;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public float defaultHDRPVignetteIntensity;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public float defaultHDRPVignetteSmoothness;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public float defaultHDRPVignetteRoundness;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public bool defaultHDRPVignetteRounded;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public int defaultHDRPWhiteBalanceTempature;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public int defaultHDRPWhiteBalanceTint;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public float defaultHDRPExposureCompensation;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public float defaultHDRPExposureFixedExposure;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public AnimationCurve defaultHDRPExposureCurveMap;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public float defaultHDRPExposureLimitMin;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public float defaultHDRPExposureLimitMax;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public float defaultHDRPExposureAdaptionSpeedDarkToLight;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public float defaultHDRPExposureAdaptionSpeedLightToDark;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public bool enableEditMode;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x289")]
		public bool hideGizmos;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28A")]
		public bool autoMatchProfile;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28B")]
		public bool aoEnabled;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public float aoAmount;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public Color32 aoColor;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		public bool autoExposureEnabled;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public float exposureAmount;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		public float exposureMin;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public float exposureMax;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		public bool bloomEnabled;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public float bloomAmount;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public float bloomThreshold;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public Texture2D lensTexture;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public float lensIntensity;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public bool chromaticAberrationEnabled;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public float chromaticAberrationIntensity;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public bool colorGradingEnabled;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public Texture2D colorGradingLut;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public float colorGradingPostExposure;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		public Color32 colorGradingColorFilter;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public int colorGradingTempature;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public int colorGradingTint;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public float colorGradingSaturation;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		public float colorGradingContrast;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public int channelMixerRed;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		public int channelMixerGreen;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public int channelMixerBlue;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public bool depthOfFieldEnabled;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public float depthOfFieldFocusDistance;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		public float depthOfFieldAperture;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public float depthOfFieldFocalLength;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		public AmbientSkiesConsts.DOFTrackingType depthOfFieldTrackingType;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public float focusOffset;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		public LayerMask targetLayer;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public float maxFocusDistance;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public bool distortionEnabled;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public float distortionIntensity;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public float distortionScale;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public bool grainEnabled;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public float grainIntensity;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public float grainSize;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public bool screenSpaceReflectionsEnabled;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public int maximumIterationCount;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public float thickness;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public GradingMode colorGradingMode;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public PostProcessProfile customPostProcessingProfile;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public KernelSize maxBlurSize;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public ScreenSpaceReflectionResolution spaceReflectionResolution;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public ScreenSpaceReflectionPreset screenSpaceReflectionPreset;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public AmbientOcclusionMode ambientOcclusionMode;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public float maximumMarchDistance;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public float distanceFade;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public float screenSpaceVignette;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public bool vignetteEnabled;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public float vignetteIntensity;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		public float vignetteSmoothness;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public bool motionBlurEnabled;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		public int shutterAngle;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public int sampleCount;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		public AmbientSkiesConsts.AntiAliasingMode antiAliasingMode;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public AmbientSkiesConsts.HDRMode hDRMode;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		public AmbientSkiesConsts.DepthOfFieldMode depthOfFieldMode;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public bool dithering;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		public float hDRPAOIntensity;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public float hDRPAOThicknessModifier;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		public float hDRPAODirectLightingStrength;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public float hDRPBloomIntensity;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		public float hDRPBloomScatter;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public Color32 hDRPBloomTint;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public Texture2D hDRPBloomDirtLensTexture;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public float hDRPBloomDirtLensIntensity;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		public bool hDRPBloomHighQualityFiltering;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B5")]
		public bool hDRPBloomPrefiler;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B6")]
		public bool hDRPBloomAnamorphic;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public int hDRPChannelMixerRed;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		public int hDRPChannelMixerGreen;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public int hDRPChannelMixerBlue;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public Texture2D hDRPChromaticAberrationSpectralLut;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public float hDRPChromaticAberrationIntensity;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		public int hDRPChromaticAberrationMaxSamples;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		public float hDRPColorAdjustmentPostExposure;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		public float hDRPColorAdjustmentContrast;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		public Color32 hDRPColorAdjustmentColorFilter;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public int hDRPColorAdjustmentHueShift;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		public float hDRPColorAdjustmentSaturation;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		public Texture hDRPColorLookupTexture;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		public float hDRPColorLookupContribution;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		public float hDRPDepthOfFieldFocusDistance;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		public float hDRPDepthOfFieldNearBlurStart;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		public float hDRPDepthOfFieldNearBlurEnd;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public int hDRPDepthOfFieldNearBlurSampleCount;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
		public float hDRPDepthOfFieldNearBlurMaxRadius;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		public float hDRPDepthOfFieldFarBlurStart;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
		public float hDRPDepthOfFieldFarBlurEnd;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		public int hDRPDepthOfFieldFarBlurSampleCount;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		public float hDRPDepthOfFieldFarBlurMaxRadius;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		public bool hDRPDepthOfFieldHighQualityFiltering;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		public float hDRPFilmGrainIntensity;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		public float hDRPFilmGrainResponse;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
		public float hDRPLensDistortionIntensity;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		public float hDRPLensDistortionXMultiplier;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
		public float hDRPLensDistortionYMultiplier;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		public Vector2 hDRPLensDistortionCenter;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		public float hDRPLensDistortionScale;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		public float hDRPMotionBlurIntensity;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		public int hDRPMotionBlurSampleCount;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		public int hDRPMotionBlurMaxVelocity;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		public float hDRPMotionBlurMinVelocity;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		public float hDRPMotionBlurCameraRotationVelocityClamp;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		public bool hDRPPaniniProjectionEnabled;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		public float hDRPPaniniProjectionDistance;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		public float hDRPPaniniProjectionCropToFit;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		public float hDRPShadowsMidtonesHighlightsShadowLimitStart;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		public float hDRPShadowsMidtonesHighlightsShadowLimitEnd;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		public float hDRPShadowsMidtonesHighlightsHightlightLimitStart;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		public float hDRPShadowsMidtonesHighlightsHighlightLimitEnd;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		public Color32 hDRPSplitToningShadows;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		public Color32 hDRPSplitToningHighlights;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		public int hDRPSplitToningBalance;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		public float hDRPTonemappingToeStrength;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		public float hDRPTonemappingToeLength;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		public float hDRPTonemappingShoulderStrength;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48C")]
		public float hDRPTonemappingShoulderLength;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		public float hDRPTonemappingShoulderAngle;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
		public float hDRPTonemappingGamma;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		public Texture2D hDRPVignetteMask;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		public float hDRPVignetteMaskOpacity;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
		public Color32 hDRPVignetteColor;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		public Vector2 hDRPVignetteCenter;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		public float hDRPVignetteIntensity;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B4")]
		public float hDRPVignetteSmoothness;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		public float hDRPVignetteRoundness;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		public bool hDRPVignetteRounded;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		public int hDRPWhiteBalanceTempature;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
		public int hDRPWhiteBalanceTint;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		public float hDRPExposureCompensation;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		public float hDRPExposureFixedExposure;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		public float hDRPExposureLimitMin;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D4")]
		public float hDRPExposureLimitMax;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		public float hDRPExposureAdaptionSpeedDarkToLight;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
		public float hDRPExposureAdaptionSpeedLightToDark;

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x1CC00A0", Offset = "0x1CC00A0", VA = "0x1CC00A0")]
		public void RevertToDefault(AmbientSkiesConsts.RenderPipelineSettings renderPipelineSettings)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x1CC0218", Offset = "0x1CC0218", VA = "0x1CC0218")]
		public void SaveCurrentToDefault(AmbientSkiesConsts.RenderPipelineSettings renderPipelineSettings)
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x1CC037C", Offset = "0x1CC037C", VA = "0x1CC037C")]
		public AmbientPostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C2")]
	public class AmbientProceduralSkyboxProfile
	{
		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string assetName;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int profileIndex;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lightRotation;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isPWProfile;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string postProcessingAssetName;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int creationMatchPostProcessing;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E030", Offset = "0x83E030")]
		public bool defaultUseSkies;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AmbientSkiesConsts.AmbientMode defaultAmbientMode;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public AmbientSkiesConsts.VolumeFogType defaultFogType;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E068", Offset = "0x83E068")]
		public float defaultSkyboxRotation;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float defaultSkyboxPitch;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float defaultProceduralSunSize;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float defaultHDRPProceduralSunSize;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float defaultProceduralSunSizeConvergence;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float defaultHDRPProceduralSunSizeConvergence;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float defaultProceduralAtmosphereThickness;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Color32 defaultProceduralGroundColor;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color32 defaultProceduralSkyTint;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float defaultProceduralSkyExposure;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float defaultProceduralSkyboxRotation;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float defaultProceduralSkyboxPitch;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool defaultIncludeSunInBaking;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float defaultProceduralSkyMultiplier;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E0A0", Offset = "0x83E0A0")]
		public float defaultShadowStrength;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float defaultIndirectLightMultiplier;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color defaultProceduralSunColor;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float defaultProceduralSunIntensity;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float defaultProceduralLWRPSunIntensity;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float defaultProceduralHDRPSunIntensity;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E0D8", Offset = "0x83E0D8")]
		public Color defaultProceduralFogColor;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float defaultProceduralFogDistance;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float defaultProceduralFogDensity;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float defaultProceduralNearFogDistance;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E110", Offset = "0x83E110")]
		public bool defaultScaleHorizonObjectWithFog;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool defaultHorizonSkyEnabled;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float defaultHorizonScattering;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float defaultHorizonFogDensity;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float defaultHorizonFalloff;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float defaultHorizonBlend;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public Vector3 defaultHorizonSize;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool defaultFollowPlayer;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Vector3 defaultHorizonPosition;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float defaultHorizonUpdateTime;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E148", Offset = "0x83E148")]
		public float defaultShadowDistance;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AmbientSkiesConsts.HDShadowQuality defaultShadowQuality;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public AmbientSkiesConsts.ShadowCascade defaultCascadeCount;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public ShadowmaskMode defaultShadowmaskMode;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public LightShadows defaultShadowType;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ShadowResolution defaultShadowResolution;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public ShadowProjection defaultShadowProjection;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E180", Offset = "0x83E180")]
		public float defaultSkyboxGroundIntensity;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Color32 defaultSkyColor;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Color32 defaultEquatorColor;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public Color32 defaultGroundColor;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Color32 defaultLWRPSkyColor;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public Color32 defaultLWRPEquatorColor;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Color32 defaultLWRPGroundColor;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public bool defaultEnableSunDisk;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E1B8", Offset = "0x83E1B8")]
		public bool defaultIsGlobal;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float defaultBlendDistance;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public float defaultWeight;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public int defaultPriority;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E1F0", Offset = "0x83E1F0")]
		public float defaultHDRIExposure;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float defaultHDRIMultiplier;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public AmbientSkiesConsts.EnvironementSkyUpdateMode defaultHDRIUpdateMode;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float defaultHDRIRotation;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E228", Offset = "0x83E228")]
		public float defaultMaxShadowDistance;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float defaultCascadeSplit1;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float defaultCascadeSplit2;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float defaultCascadeSplit3;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool defaultUseContactShadows;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float defaultContactShadowsLength;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public float defaultContactShadowsDistanceScaleFactor;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float defaultContactShadowsMaxDistance;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float defaultContactShadowsFadeDistance;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public int defaultContactShadowsSampleCount;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public float defaultContactShadowsOpacity;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E260", Offset = "0x83E260")]
		public bool defaultUseMicroShadowing;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E298", Offset = "0x83E298")]
		public float defaultMicroShadowOpacity;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E2B0", Offset = "0x83E2B0")]
		public float defaultHDRPFogDistance;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Color32 defaultVolumetricSingleScatteringAlbedo;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float defaultVolumetricBaseFogDistance;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float defaultVolumetricBaseFogHeight;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public float defaultVolumetricMeanHeight;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public float defaultVolumetricGlobalAnisotropy;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float defaultVolumetricGlobalLightProbeDimmer;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public float defaultVolumetricMaxFogDistance;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool defaultVolumetricEnableDistanceFog;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public Color32 defaultVolumetricConstFogColor;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float defaultVolumetricMipFogNear;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float defaultVolumetricMipFogFar;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float defaultVolumetricMipFogMaxMip;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float defaultVolumetricDistanceRange;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public float defaultVolumetricSliceDistributionUniformity;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E2E8", Offset = "0x83E2E8")]
		public float defaultExponentialFogDensity;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float defaultExponentialBaseHeight;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float defaultExponentialHeightAttenuation;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public float defaultExponentialMaxFogDistance;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public float defaultExponentialMipFogNear;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float defaultExponentialMipFogFar;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public float defaultExponentialMipFogMaxMip;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E320", Offset = "0x83E320")]
		public float defaultLinearFogDensity;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float defaultLinearHeightStart;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float defaultLinearHeightEnd;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float defaultLinearMaxFogDistance;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public float defaultLinearMipFogNear;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public float defaultLinearMipFogFar;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float defaultLinearMipFogMaxMip;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float defaultIndirectDiffuseIntensity;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public float defaultIndirectSpecularIntensity;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E358", Offset = "0x83E358")]
		public bool defaultEnableScreenSpaceReflections;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public float defaultScreenEdgeFadeDistance;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public int defaultMaxNumberOfRaySteps;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float defaultObjectThickness;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public float defaultMinSmoothness;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float defaultSmoothnessFadeStart;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public bool defaultReflectSky;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x215")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E390", Offset = "0x83E390")]
		public bool defaultEnableScreenSpaceRefractions;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float defaultScreenWeightDistance;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public bool defaultUseBakingSky;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E3C8", Offset = "0x83E3C8")]
		public bool defaultUseFogDensityVolume;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public Color32 defaultSingleScatteringAlbedo;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float defaultDensityVolumeFogDistance;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public Texture3D defaultFogDensityMaskTexture;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Vector3 defaultDensityMaskTiling;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public Vector3 defaultDensityScale;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83E400", Offset = "0x83E400")]
		public bool showSettings;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x249")]
		public bool useSkies;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E414", Offset = "0x83E414")]
		public float skyboxGroundIntensity;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E42C", Offset = "0x83E42C")]
		public float skyboxRotation;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public float skyboxPitch;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public float shadowStrength;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public float indirectLightMultiplier;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public float shadowDistance;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public float proceduralSunSize;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public float hdrpProceduralSunSize;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public float proceduralSunSizeConvergence;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public float hdrpProceduralSunSizeConvergence;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		public float proceduralAtmosphereThickness;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Color32 proceduralGroundColor;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public Color32 proceduralSkyTint;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public float proceduralSkyExposure;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public float proceduralSkyboxRotation;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public float proceduralSkyboxPitch;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public Color proceduralSunColor;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		public float proceduralSunIntensity;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public float proceduralLWRPSunIntensity;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		public float proceduralHDRPSunIntensity;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public Color proceduralFogColor;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public float proceduralFogDistance;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public float proceduralFogDensity;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public float proceduralNearFogDistance;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public bool includeSunInBaking;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public float proceduralSkyMultiplier;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		public bool horizonSkyEnabled;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CD")]
		public bool scaleHorizonObjectWithFog;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public float horizonScattering;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		public float horizonFogDensity;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public float horizonFalloff;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public float horizonBlend;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public Vector3 horizonSize;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		public bool followPlayer;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public Vector3 horizonPosition;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		public float horizonUpdateTime;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public ShadowmaskMode shadowmaskMode;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		public LightShadows shadowType;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public ShadowResolution shadowResolution;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		public ShadowProjection shadowProjection;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public AmbientSkiesConsts.AmbientMode ambientMode;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public Color32 skyColor;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public Color32 equatorColor;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public Color32 groundColor;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public Color32 lwrpSkyColor;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public Color32 lwrpEquatorColor;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public Color32 lwrpGroundColor;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public AmbientSkiesConsts.HDShadowQuality shadowQuality;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public AmbientSkiesConsts.VolumeFogType fogType;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public AmbientSkiesConsts.ShadowCascade cascadeCount;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public bool enableSunDisk;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x339")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E448", Offset = "0x83E448")]
		public bool isGlobal;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public float blendDistance;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E480", Offset = "0x83E480")]
		public float weight;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		public int priority;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E498", Offset = "0x83E498")]
		public float hDRIExposure;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public float hDRIMultiplier;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E4D0", Offset = "0x83E4D0")]
		public AmbientSkiesConsts.EnvironementSkyUpdateMode hDRIUpdateMode;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float hDRIRotation;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E4EC", Offset = "0x83E4EC")]
		public float maxShadowDistance;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E524", Offset = "0x83E524")]
		public float cascadeSplit1;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E53C", Offset = "0x83E53C")]
		public float cascadeSplit2;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E554", Offset = "0x83E554")]
		public float cascadeSplit3;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E56C", Offset = "0x83E56C")]
		public bool useContactShadows;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E5A4", Offset = "0x83E5A4")]
		public float contactShadowsLength;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E5BC", Offset = "0x83E5BC")]
		public float contactShadowsDistanceScaleFactor;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		public float contactShadowsMaxDistance;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public float contactShadowsFadeDistance;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E5D4", Offset = "0x83E5D4")]
		public int contactShadowsSampleCount;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public float contactShadowsOpacity;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E5F0", Offset = "0x83E5F0")]
		public bool useMicroShadowing;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E628", Offset = "0x83E628")]
		public float microShadowOpacity;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E640", Offset = "0x83E640")]
		public float hDRPFogDistance;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public Color32 volumetricSingleScatteringAlbedo;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		public float volumetricBaseFogDistance;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public float volumetricBaseFogHeight;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		public float volumetricMeanHeight;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E678", Offset = "0x83E678")]
		public float volumetricGlobalAnisotropy;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E690", Offset = "0x83E690")]
		public float volumetricGlobalLightProbeDimmer;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public float volumetricMaxFogDistance;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		public bool volumetricEnableDistanceFog;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public Color32 volumetricConstFogColor;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		public float volumetricMipFogNear;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public float volumetricMipFogFar;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E6A8", Offset = "0x83E6A8")]
		public float volumetricMipFogMaxMip;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E6C0", Offset = "0x83E6C0")]
		public float volumetricDistanceRange;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E6F8", Offset = "0x83E6F8")]
		public float volumetricSliceDistributionUniformity;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E710", Offset = "0x83E710")]
		public float exponentialBaseHeight;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		public float exponentialHeightAttenuation;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public float exponentialMaxFogDistance;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		public float exponentialMipFogNear;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		public float exponentialMipFogFar;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		public float exponentialMipFogMaxMip;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E748", Offset = "0x83E748")]
		public float linearHeightStart;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public float linearHeightEnd;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		public float linearMaxFogDistance;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		public float linearMipFogNear;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		public float linearMipFogFar;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
		public float linearMipFogMaxMip;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E780", Offset = "0x83E780")]
		public float indirectDiffuseIntensity;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		public float indirectSpecularIntensity;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E7B8", Offset = "0x83E7B8")]
		public bool enableScreenSpaceReflections;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E7F0", Offset = "0x83E7F0")]
		public float screenEdgeFadeDistance;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public int maxNumberOfRaySteps;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E808", Offset = "0x83E808")]
		public float objectThickness;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E820", Offset = "0x83E820")]
		public float minSmoothness;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E838", Offset = "0x83E838")]
		public float smoothnessFadeStart;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		public bool reflectSky;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x419")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E850", Offset = "0x83E850")]
		public bool enableScreenSpaceRefractions;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83E888", Offset = "0x83E888")]
		public float screenWeightDistance;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		public bool useBakingSky;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x421")]
		public bool useFogDensityVolume;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		public Color32 singleScatteringAlbedo;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		public float densityVolumeFogDistance;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		public Texture3D fogDensityMaskTexture;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		public Vector3 densityMaskTiling;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		public Vector3 densityScale;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		public float linearFogDensity;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		public float exponentialFogDensity;

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x1CC0AF4", Offset = "0x1CC0AF4", VA = "0x1CC0AF4")]
		public void RevertToDefault()
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x1CC0DB0", Offset = "0x1CC0DB0", VA = "0x1CC0DB0")]
		public void SaveCurrentToDefault()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x1CC1068", Offset = "0x1CC1068", VA = "0x1CC1068")]
		public AmbientProceduralSkyboxProfile()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class AmbientSkiesConsts : MonoBehaviour
	{
		[Token(Token = "0x20000C4")]
		public enum RenderPipelineSettings
		{
			[Token(Token = "0x4000694")]
			BuiltIn,
			[Token(Token = "0x4000695")]
			Lightweight,
			[Token(Token = "0x4000696")]
			HighDefinition
		}

		[Token(Token = "0x20000C5")]
		public enum HighDefinitionQualitySetting
		{
			[Token(Token = "0x4000698")]
			Custom,
			[Token(Token = "0x4000699")]
			MobileAndAndriod,
			[Token(Token = "0x400069A")]
			VR,
			[Token(Token = "0x400069B")]
			Desktop,
			[Token(Token = "0x400069C")]
			HighEndDesktop,
			[Token(Token = "0x400069D")]
			Cinematic
		}

		[Token(Token = "0x20000C6")]
		public enum EnvironementSkyUpdateMode
		{
			[Token(Token = "0x400069F")]
			OnChanged,
			[Token(Token = "0x40006A0")]
			OnDemand,
			[Token(Token = "0x40006A1")]
			Realtime
		}

		[Token(Token = "0x20000C7")]
		public enum VolumeSkyType
		{
			[Token(Token = "0x40006A3")]
			Gradient,
			[Token(Token = "0x40006A4")]
			HDRISky,
			[Token(Token = "0x40006A5")]
			ProceduralSky
		}

		[Token(Token = "0x20000C8")]
		public enum VolumeFogType
		{
			[Token(Token = "0x40006A7")]
			None,
			[Token(Token = "0x40006A8")]
			Exponential,
			[Token(Token = "0x40006A9")]
			ExponentialSquared,
			[Token(Token = "0x40006AA")]
			Linear,
			[Token(Token = "0x40006AB")]
			Volumetric
		}

		[Token(Token = "0x20000C9")]
		public enum ShadowCascade
		{
			[Token(Token = "0x40006AD")]
			CascadeCount1,
			[Token(Token = "0x40006AE")]
			CascadeCount2,
			[Token(Token = "0x40006AF")]
			CascadeCount3,
			[Token(Token = "0x40006B0")]
			CascadeCount4
		}

		[Token(Token = "0x20000CA")]
		public enum HDShadowQuality
		{
			[Token(Token = "0x40006B2")]
			Resolution64,
			[Token(Token = "0x40006B3")]
			Resolution128,
			[Token(Token = "0x40006B4")]
			Resolution256,
			[Token(Token = "0x40006B5")]
			Resolution512,
			[Token(Token = "0x40006B6")]
			Resolution1024,
			[Token(Token = "0x40006B7")]
			Resolution2048,
			[Token(Token = "0x40006B8")]
			Resolution4096,
			[Token(Token = "0x40006B9")]
			Resolution8192,
			[Token(Token = "0x40006BA")]
			Resolution16384
		}

		[Token(Token = "0x20000CB")]
		public enum AmbientMode
		{
			[Token(Token = "0x40006BC")]
			Color,
			[Token(Token = "0x40006BD")]
			Gradient,
			[Token(Token = "0x40006BE")]
			Skybox
		}

		[Token(Token = "0x20000CC")]
		public enum VSyncMode
		{
			[Token(Token = "0x40006C0")]
			DontSync,
			[Token(Token = "0x40006C1")]
			EveryVBlank,
			[Token(Token = "0x40006C2")]
			EverySecondVBlank
		}

		[Token(Token = "0x20000CD")]
		public enum AntiAliasingMode
		{
			[Token(Token = "0x40006C4")]
			None,
			[Token(Token = "0x40006C5")]
			FXAA,
			[Token(Token = "0x40006C6")]
			SMAA,
			[Token(Token = "0x40006C7")]
			TAA,
			[Token(Token = "0x40006C8")]
			MSAA
		}

		[Token(Token = "0x20000CE")]
		public enum HDRMode
		{
			[Token(Token = "0x40006CA")]
			On,
			[Token(Token = "0x40006CB")]
			Off
		}

		[Token(Token = "0x20000CF")]
		public enum SkyType
		{
			[Token(Token = "0x40006CD")]
			HDRISky,
			[Token(Token = "0x40006CE")]
			ProceduralSky
		}

		[Token(Token = "0x20000D0")]
		public enum PlatformTarget
		{
			[Token(Token = "0x40006D0")]
			DesktopAndConsole,
			[Token(Token = "0x40006D1")]
			MobileAndVR
		}

		[Token(Token = "0x20000D1")]
		public enum DepthOfFieldMode
		{
			[Token(Token = "0x40006D3")]
			AutoFocus,
			[Token(Token = "0x40006D4")]
			Manual
		}

		[Token(Token = "0x20000D2")]
		public enum DOFQuality
		{
			[Token(Token = "0x40006D6")]
			NORMAL,
			[Token(Token = "0x40006D7")]
			HIGH
		}

		[Token(Token = "0x20000D3")]
		public enum DOFTrackingType
		{
			[Token(Token = "0x40006D9")]
			FixedOffset,
			[Token(Token = "0x40006DA")]
			LeftMouseClick,
			[Token(Token = "0x40006DB")]
			RightMouseClick,
			[Token(Token = "0x40006DC")]
			FollowScreen,
			[Token(Token = "0x40006DD")]
			FollowTarget
		}

		[Token(Token = "0x20000D4")]
		public enum SystemTypes
		{
			[Token(Token = "0x40006DF")]
			AmbientHDRISkies,
			[Token(Token = "0x40006E0")]
			AmbientProceduralSkies,
			[Token(Token = "0x40006E1")]
			AmbientGradientSkies,
			[Token(Token = "0x40006E2")]
			DefaultProcedural,
			[Token(Token = "0x40006E3")]
			ThirdParty
		}

		[Token(Token = "0x20000D5")]
		public enum TimeOfDayController
		{
			[Token(Token = "0x40006E5")]
			Realtime,
			[Token(Token = "0x40006E6")]
			AmbientSkies,
			[Token(Token = "0x40006E7")]
			WorldManagerAPI,
			[Token(Token = "0x40006E8")]
			ThirdParty
		}

		[Token(Token = "0x20000D6")]
		public enum CurrentSeason
		{
			[Token(Token = "0x40006EA")]
			Spring,
			[Token(Token = "0x40006EB")]
			Summer,
			[Token(Token = "0x40006EC")]
			AutumnFall,
			[Token(Token = "0x40006ED")]
			Winter
		}

		[Token(Token = "0x20000D7")]
		public enum HemisphereOrigin
		{
			[Token(Token = "0x40006EF")]
			Northern,
			[Token(Token = "0x40006F0")]
			Southern
		}

		[Token(Token = "0x20000D8")]
		public enum DisableAndEnable
		{
			[Token(Token = "0x40006F2")]
			Enable,
			[Token(Token = "0x40006F3")]
			Disable
		}

		[Token(Token = "0x20000D9")]
		public enum LightmapperMode
		{
			[Token(Token = "0x40006F5")]
			Enlighten,
			[Token(Token = "0x40006F6")]
			ProgressiveCPU,
			[Token(Token = "0x40006F7")]
			ProgressiveGPU
		}

		[Token(Token = "0x20000DA")]
		public enum AutoConfigureType
		{
			[Token(Token = "0x40006F9")]
			Terrain,
			[Token(Token = "0x40006FA")]
			Camera,
			[Token(Token = "0x40006FB")]
			Manual
		}

		[Token(Token = "0x20000DB")]
		public enum ReflectionProbeSpawnType
		{
			[Token(Token = "0x40006FD")]
			AutomaticallyGenerated,
			[Token(Token = "0x40006FE")]
			ManualPlacement
		}

		[Token(Token = "0x20000DC")]
		public enum LightProbeSpawnType
		{
			[Token(Token = "0x4000700")]
			AutomaticallyGenerated,
			[Token(Token = "0x4000701")]
			MinDefaultHeight,
			[Token(Token = "0x4000702")]
			ManualPlacement
		}

		[Token(Token = "0x20000DD")]
		public enum ReflectionProbeResolution
		{
			[Token(Token = "0x4000704")]
			Resolution16,
			[Token(Token = "0x4000705")]
			Resolution32,
			[Token(Token = "0x4000706")]
			Resolution64,
			[Token(Token = "0x4000707")]
			Resolution128,
			[Token(Token = "0x4000708")]
			Resolution256,
			[Token(Token = "0x4000709")]
			Resolution512,
			[Token(Token = "0x400070A")]
			Resolution1024,
			[Token(Token = "0x400070B")]
			Resolution2048
		}

		[Token(Token = "0x20000DE")]
		public enum EnvironmentLightingEditMode
		{
			[Token(Token = "0x400070D")]
			Exterior,
			[Token(Token = "0x400070E")]
			Interior
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x1CC186C", Offset = "0x1CC186C", VA = "0x1CC186C")]
		public AmbientSkiesConsts()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x83BF0C", Offset = "0x83BF0C")]
	[ExecuteInEditMode]
	public class AmbientSkiesTimeOfDay : MonoBehaviour
	{
		[Token(Token = "0x20000E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83BF58", Offset = "0x83BF58")]
		private sealed class <UpdateGiTimer>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400071A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400071B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400071C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AmbientSkiesTimeOfDay <>4__this;

			[Token(Token = "0x1700004F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000401")]
				[Address(RVA = "0xB76D1C", Offset = "0xB76D1C", VA = "0xB76D1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000050")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000403")]
				[Address(RVA = "0xB76D64", Offset = "0xB76D64", VA = "0xB76D64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60003FE")]
			[Address(RVA = "0xB76BE4", Offset = "0xB76BE4", VA = "0xB76BE4")]
			[DebuggerHidden]
			public <UpdateGiTimer>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60003FF")]
			[Address(RVA = "0xB76C10", Offset = "0xB76C10", VA = "0xB76C10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000400")]
			[Address(RVA = "0xB76C14", Offset = "0xB76C14", VA = "0xB76C14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000402")]
			[Address(RVA = "0xB76D24", Offset = "0xB76D24", VA = "0xB76D24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E8A0", Offset = "0x83E8A0")]
		public AmbientSkiesTimeOfDayProfile m_timeOfDayProfile;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AmbientSkyProfiles m_ambientSkiesProfileVol1;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AmbientProceduralSkyboxProfile m_ambientProceduralSkybox;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float lightRotationDot;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool m_sunActive;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float minPoint;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_nightIsActive;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_mainLight;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Light m_directionalSunLight;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Light m_directionalMoonLight;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float updateGI;

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1CC18F8", Offset = "0x1CC18F8", VA = "0x1CC18F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1CC1AAC", Offset = "0x1CC1AAC", VA = "0x1CC1AAC")]
		private void Start()
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x1CC1FB4", Offset = "0x1CC1FB4", VA = "0x1CC1FB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1CC2114", Offset = "0x1CC2114", VA = "0x1CC2114")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x1CC21EC", Offset = "0x1CC21EC", VA = "0x1CC21EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1CC29A8", Offset = "0x1CC29A8", VA = "0x1CC29A8")]
		public void RealtimeSynchronization()
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1CC2B14", Offset = "0x1CC2B14", VA = "0x1CC2B14")]
		public void AmbientSkiesSynchronization()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1CC2DBC", Offset = "0x1CC2DBC", VA = "0x1CC2DBC")]
		public void ThirdPartySynchronization()
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1CC1EA0", Offset = "0x1CC1EA0", VA = "0x1CC1EA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84567C", Offset = "0x84567C")]
		private IEnumerator UpdateGiTimer()
		{
			return null;
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1CC300C", Offset = "0x1CC300C", VA = "0x1CC300C")]
		public void UpdateBuiltInAndLightweight(float gameTime)
		{
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1CC2DC0", Offset = "0x1CC2DC0", VA = "0x1CC2DC0")]
		public void UpdateHighDefinition(float gameTime)
		{
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x1CC2DC4", Offset = "0x1CC2DC4", VA = "0x1CC2DC4")]
		public void PostProcessingSync()
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1CC277C", Offset = "0x1CC277C", VA = "0x1CC277C")]
		public void PauseTime(bool isTimePaused)
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x1CC27C8", Offset = "0x1CC27C8", VA = "0x1CC27C8")]
		public void AddTime(float timeToAdd)
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x1CC2808", Offset = "0x1CC2808", VA = "0x1CC2808")]
		public void RemoveTime(float timeToRemove)
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x1CC2848", Offset = "0x1CC2848", VA = "0x1CC2848")]
		public void RotateSunLeft(float rotationValue)
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x1CC28F8", Offset = "0x1CC28F8", VA = "0x1CC28F8")]
		public void RotateSunRight(float rotationValue)
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x1CC3908", Offset = "0x1CC3908", VA = "0x1CC3908")]
		public GameObject GetMainDirectionalLight()
		{
			return null;
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x1CC1F18", Offset = "0x1CC1F18", VA = "0x1CC1F18")]
		public Material GetAndSetSkyboxMaterial()
		{
			return null;
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x1CC3A54", Offset = "0x1CC3A54", VA = "0x1CC3A54")]
		public void UpdateDynamicGI(bool updateEveryFrame)
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x1CC3C8C", Offset = "0x1CC3C8C", VA = "0x1CC3C8C")]
		public AmbientSkiesTimeOfDay()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class AmbientSkiesTimeOfDayProfile : ScriptableObject
	{
		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E918", Offset = "0x83E918")]
		[HideInInspector]
		public bool m_debugMode;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public AmbientSkiesConsts.TimeOfDayController m_timeOfDayController;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E974", Offset = "0x83E974")]
		public bool m_realtimeGIUpdate;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_gIUpdateIntervalInSeconds;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E9AC", Offset = "0x83E9AC")]
		public AmbientSkiesConsts.HemisphereOrigin m_hemisphereOrigin;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AmbientSkiesConsts.CurrentSeason m_environmentSeason;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AmbientSkiesConsts.RenderPipelineSettings m_renderPipeline;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83E9F4", Offset = "0x83E9F4")]
		public KeyCode m_pauseTimeKey;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode m_incrementUpKey;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode m_incrementDownKey;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83EA2C", Offset = "0x83EA2C")]
		public float m_timeToAddOrRemove;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KeyCode m_rotateSunLeftKey;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyCode m_rotateSunRightKey;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83EA48", Offset = "0x83EA48")]
		public float m_sunRotationAmount;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83EA64", Offset = "0x83EA64")]
		public bool m_pauseTime;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83EA9C", Offset = "0x83EA9C")]
		public float m_currentTime;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_dayLengthInSeconds;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_nightLengthInSeconds;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83EAB4", Offset = "0x83EAB4")]
		[HideInInspector]
		public int m_timeOfDayHour;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83EAF4", Offset = "0x83EAF4")]
		public int m_timeOfDayMinutes;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83EB38", Offset = "0x83EB38")]
		[HideInInspector]
		public int m_timeOfDaySeconds;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83EB7C", Offset = "0x83EB7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83EB7C", Offset = "0x83EB7C")]
		public int m_day;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83EBD0", Offset = "0x83EBD0")]
		public int m_month;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int m_year;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83EBE8", Offset = "0x83EBE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83EBE8", Offset = "0x83EBE8")]
		public float m_sunRotation;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve m_daySunIntensity;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Gradient m_daySunGradientColor;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationCurve m_nightSunIntensity;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Gradient m_nightSunGradientColor;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83EC40", Offset = "0x83EC40")]
		public float m_startFogDistance;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AnimationCurve m_dayFogDensity;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationCurve m_nightFogDensity;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AnimationCurve m_dayFogDistance;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Gradient m_dayFogColor;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AnimationCurve m_nightFogDistance;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Gradient m_nightFogColor;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83EC78", Offset = "0x83EC78")]
		public bool m_syncPostFXToTimeOfDay;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Gradient m_dayColor;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Gradient m_nightColor;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AnimationCurve m_dayTempature;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AnimationCurve m_nightTempature;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83ECB0", Offset = "0x83ECB0")]
		public Material m_skyboxMaterial;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public FogMode m_fogMode;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83ECE8", Offset = "0x83ECE8")]
		public AnimationCurve m_lightAnisotropy;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AnimationCurve m_lightProbeDimmer;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AnimationCurve m_lightDepthExtent;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AnimationCurve m_sunSize;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AnimationCurve m_skyExposure;

		[Token(Token = "0x6000404")]
		[Address(RVA = "0xC28E40", Offset = "0xC28E40", VA = "0xC28E40")]
		public AmbientSkiesTimeOfDayProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E2")]
	public class AmbientSkyProfiles : ScriptableObject
	{
		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83ED20", Offset = "0x83ED20")]
		public bool m_editSettings;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public int m_inspectorUpdateLimit;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		public string m_version;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83EDB4", Offset = "0x83EDB4")]
		public bool m_showDebug;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		public bool m_showTimersInDebug;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		public bool m_showHasChangedDebug;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[SerializeField]
		public bool m_showFunctionDebugsOnly;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public bool m_smartConsoleClean;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[HideInInspector]
		[SerializeField]
		public bool m_isProceduralCreatedProfile;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83EE78", Offset = "0x83EE78")]
		[SerializeField]
		public AmbientSkiesConsts.SystemTypes m_systemTypes;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		public AmbientSkiesConsts.EnvironmentLightingEditMode m_lightingEditMode;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		public AmbientSkiesConsts.RenderPipelineSettings m_selectedRenderPipeline;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		public AmbientSkiesConsts.PlatformTarget m_targetPlatform;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public AmbientSkiesConsts.DisableAndEnable m_useTimeOfDay;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		public AmbientSkiesConsts.VSyncMode m_vSyncMode;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		public AmbientSkiesConsts.AutoConfigureType m_configurationType;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		[SerializeField]
		public bool m_autoMatchProfile;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83F024", Offset = "0x83F024")]
		public bool m_syncPostProcessing;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[HideInInspector]
		[SerializeField]
		public bool m_realtimeGIUpdate;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		public int m_gIUpdateInterval;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		[SerializeField]
		public bool m_realtimeEmission;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[HideInInspector]
		[SerializeField]
		public bool m_syncRealtimeEmissionToTimeOfDay;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[SerializeField]
		public float m_dayLengthInSeconds;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		[SerializeField]
		public int m_dayDate;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		public int m_monthDate;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		[SerializeField]
		public int m_yearDate;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		public AmbientSkiesConsts.CurrentSeason m_currentSeason;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		[SerializeField]
		public AmbientSkiesConsts.HemisphereOrigin m_hemisphereOrigin;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public AmbientSkiesTimeOfDayProfile m_timeOfDayProfile;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		public KeyCode m_pauseTimeKey;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[HideInInspector]
		public KeyCode m_incrementUpKey;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		public KeyCode m_incrementDownKey;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[HideInInspector]
		public KeyCode m_rotateSunLeftKey;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[HideInInspector]
		public KeyCode m_rotateSunRightKey;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[HideInInspector]
		public float m_timeToAddOrRemove;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[HideInInspector]
		public float m_sunRotationAmount;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[HideInInspector]
		public bool m_pauseTime;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[HideInInspector]
		public float m_currentTimeOfDay;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		[SerializeField]
		public float m_skyboxRotation;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[HideInInspector]
		public float m_nightLengthInSeconds;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve m_daySunIntensity;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		public Gradient m_daySunGradientColor;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve m_nightSunIntensity;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		public Gradient m_nightSunGradientColor;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		public float m_startFogDistance;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve m_dayFogDensity;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve m_nightFogDensity;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		[SerializeField]
		public AnimationCurve m_dayFogDistance;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		[SerializeField]
		public Gradient m_dayFogColor;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve m_nightFogDistance;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		public Gradient m_nightFogColor;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		public Gradient m_dayPostFXColor;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		[SerializeField]
		public Gradient m_nightPostFXColor;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		[SerializeField]
		public AnimationCurve m_dayTempature;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		[SerializeField]
		public AnimationCurve m_nightTempature;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve m_lightAnisotropy;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve m_lightProbeDimmer;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		[SerializeField]
		public AnimationCurve m_lightDepthExtent;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		[SerializeField]
		public AnimationCurve m_sunSize;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve m_skyExposure;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83F988", Offset = "0x83F988")]
		public bool m_useSkies;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		[SerializeField]
		public bool m_usePostFX;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
		[SerializeField]
		public bool m_useLighting;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83F9F4", Offset = "0x83F9F4")]
		[SerializeField]
		public List<AmbientSkyboxProfile> m_skyProfiles;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		public List<AmbientProceduralSkyboxProfile> m_proceduralSkyProfiles;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		public List<AmbientGradientSkyboxProfile> m_gradientSkyProfiles;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		public List<AmbientPostProcessingProfile> m_ppProfiles;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		public List<AmbientLightingProfile> m_lightingProfiles;

		[Token(Token = "0x6000405")]
		[Address(RVA = "0xC28EDC", Offset = "0xC28EDC", VA = "0xC28EDC")]
		public void RevertSkyboxSettingsToDefault(int hdriProfileIdx, int proceduralProfileIdx, int gradientProceduralIdx)
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0xC293A0", Offset = "0xC293A0", VA = "0xC293A0")]
		public void SaveSkyboxSettingsToDefault(int profileIdx)
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0xC29824", Offset = "0xC29824", VA = "0xC29824")]
		public void SaveLightingSettingsToDefault(int profileIdx)
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0xC298C4", Offset = "0xC298C4", VA = "0xC298C4")]
		public void RevertLightingSettingsToDefault(int profileIdx)
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xC29964", Offset = "0xC29964", VA = "0xC29964")]
		public void RevertPostProcessingSettingsToDefault(int profileIdx, AmbientSkiesConsts.RenderPipelineSettings renderPipelineSettings)
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0xC29A0C", Offset = "0xC29A0C", VA = "0xC29A0C")]
		public void SavePostProcessingSettingsToDefault(int profileIdx, AmbientSkiesConsts.RenderPipelineSettings renderPipelineSettings)
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0xC29AB4", Offset = "0xC29AB4", VA = "0xC29AB4")]
		public void SaveAllDefaults(AmbientSkiesConsts.RenderPipelineSettings renderPipelineSettings)
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0xC2A0F0", Offset = "0xC2A0F0", VA = "0xC2A0F0")]
		public void RevertAllDefaults(AmbientSkiesConsts.RenderPipelineSettings renderPipelineSettings)
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0xC2A0F4", Offset = "0xC2A0F4", VA = "0xC2A0F4")]
		public static string GetAssetPath(string name)
		{
			return null;
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0xC2A0FC", Offset = "0xC2A0FC", VA = "0xC2A0FC")]
		public void UpdateAllFogType(AmbientSkiesConsts.VolumeFogType fogmode)
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xC2A510", Offset = "0xC2A510", VA = "0xC2A510")]
		public static void DestroyParent(string parentGameObject)
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xC2A634", Offset = "0xC2A634", VA = "0xC2A634")]
		public AmbientSkyProfiles()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class AmbientSkiesProfilesList : ScriptableObject
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FA80", Offset = "0x83FA80")]
		public List<AmbientSkyProfiles> m_skyProfiles;

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x1CC1874", Offset = "0x1CC1874", VA = "0x1CC1874")]
		public AmbientSkiesProfilesList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E4")]
	public class AmbientSkyboxProfile
	{
		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string assetName;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int profileIndex;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lightRotation;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isPWProfile;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string postProcessingAssetName;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Cubemap creationHDRIAsset;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int creationMatchPostProcessing;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FAB8", Offset = "0x83FAB8")]
		public bool defaultShowSettings;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AmbientSkiesConsts.AmbientMode defaultAmbientMode;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public AmbientSkiesConsts.VolumeFogType defaultFogType;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FAF0", Offset = "0x83FAF0")]
		public Cubemap defaultHDRISkybox;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color defaultSkyboxTint;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Cubemap defaultCustomSkybox;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool defaultIsProceduralSkybox;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float defaultSkyboxExposure;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float defaultSkyboxRotation;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float defaultSkyboxPitch;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float defaultSkyMultiplier;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FB28", Offset = "0x83FB28")]
		public float defaultShadowStrength;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float defaultIndirectLightMultiplier;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color defaultSunColor;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 defaultSunRotation;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float defaultSunIntensity;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float defaultLWRPSunIntensity;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float defaultHDRPSunIntensity;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float defaultTemperature;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool defaultUseTempature;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FB60", Offset = "0x83FB60")]
		public Color defaultFogColor;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float defaultFogDistance;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float defaultFogDensity;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float defaultNearFogDistance;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FB98", Offset = "0x83FB98")]
		public bool defaultScaleHorizonObjectWithFog;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool defaultHorizonSkyEnabled;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float defaultHorizonScattering;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float defaultHorizonFogDensity;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float defaultHorizonFalloff;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float defaultHorizonBlend;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public Vector3 defaultHorizonSize;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool defaultFollowPlayer;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public Vector3 defaultHorizonPosition;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float defaultHorizonUpdateTime;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FBD0", Offset = "0x83FBD0")]
		public float defaultShadowDistance;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AmbientSkiesConsts.HDShadowQuality defaultShadowQuality;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public AmbientSkiesConsts.ShadowCascade defaultCascadeCount;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ShadowmaskMode defaultShadowmaskMode;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public LightShadows defaultShadowType;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public ShadowResolution defaultShadowResolution;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public ShadowProjection defaultShadowProjection;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FC08", Offset = "0x83FC08")]
		public float defaultSkyboxGroundIntensity;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public Color32 defaultSkyColor;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Color32 defaultEquatorColor;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public Color32 defaultGroundColor;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Color32 defaultLWRPSkyColor;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public Color32 defaultLWRPEquatorColor;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Color32 defaultLWRPGroundColor;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public bool defaultEnableSunDisk;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FC40", Offset = "0x83FC40")]
		public bool defaultIsGlobal;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float defaultBlendDistance;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float defaultWeight;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public int defaultPriority;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FC78", Offset = "0x83FC78")]
		public float defaultHDRIExposure;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float defaultHDRIMultiplier;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public AmbientSkiesConsts.EnvironementSkyUpdateMode defaultHDRIUpdateMode;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float defaultHDRIRotation;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FCB0", Offset = "0x83FCB0")]
		public float defaultMaxShadowDistance;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float defaultCascadeSplit1;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float defaultCascadeSplit2;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float defaultCascadeSplit3;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public bool defaultUseContactShadows;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float defaultContactShadowsLength;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public float defaultContactShadowsDistanceScaleFactor;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float defaultContactShadowsMaxDistance;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public float defaultContactShadowsFadeDistance;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public int defaultContactShadowsSampleCount;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float defaultContactShadowsOpacity;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool defaultUseMicroShadowing;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83FCE8", Offset = "0x83FCE8")]
		public float defaultMicroShadowOpacity;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FD00", Offset = "0x83FD00")]
		public float defaultHDRPFogDistance;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public Color32 defaultVolumetricSingleScatteringAlbedo;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float defaultVolumetricBaseFogDistance;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float defaultVolumetricBaseFogHeight;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float defaultVolumetricMeanHeight;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float defaultVolumetricGlobalAnisotropy;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float defaultVolumetricGlobalLightProbeDimmer;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float defaultVolumetricMaxFogDistance;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public bool defaultVolumetricEnableDistanceFog;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public Color32 defaultVolumetricConstFogColor;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float defaultVolumetricMipFogNear;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float defaultVolumetricMipFogFar;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public float defaultVolumetricMipFogMaxMip;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public float defaultVolumetricDistanceRange;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float defaultVolumetricSliceDistributionUniformity;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FD38", Offset = "0x83FD38")]
		public float defaultExponentialFogDensity;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public float defaultExponentialBaseHeight;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float defaultExponentialHeightAttenuation;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float defaultExponentialMaxFogDistance;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float defaultExponentialMipFogNear;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public float defaultExponentialMipFogFar;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public float defaultExponentialMipFogMaxMip;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FD70", Offset = "0x83FD70")]
		public float defaultLinearFogDensity;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float defaultLinearHeightStart;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public float defaultLinearHeightEnd;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public float defaultLinearMaxFogDistance;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public float defaultLinearMipFogNear;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public float defaultLinearMipFogFar;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float defaultLinearMipFogMaxMip;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public float defaultIndirectDiffuseIntensity;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float defaultIndirectSpecularIntensity;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FDA8", Offset = "0x83FDA8")]
		public bool defaultEnableScreenSpaceReflections;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float defaultScreenEdgeFadeDistance;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public int defaultMaxNumberOfRaySteps;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float defaultObjectThickness;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float defaultMinSmoothness;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float defaultSmoothnessFadeStart;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public bool defaultReflectSky;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FDE0", Offset = "0x83FDE0")]
		public bool defaultEnableScreenSpaceRefractions;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public float defaultScreenWeightDistance;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public bool defaultUseBakingSky;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x235")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FE18", Offset = "0x83FE18")]
		public bool defaultUseFogDensityVolume;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public Color32 defaultSingleScatteringAlbedo;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public float defaultDensityVolumeFogDistance;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public Texture3D defaultFogDensityMaskTexture;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public Vector3 defaultDensityMaskTiling;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public Vector3 defaultDensityScale;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x83FE50", Offset = "0x83FE50")]
		public bool showSettings;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public Color skyboxTint;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Cubemap customSkybox;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public Color customSkyboxTint;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public float customSkyboxExposure;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		public float customSkyboxRotation;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public float customSkyboxPitch;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		public float customProceduralSunSize;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public float customProceduralSunSizeConvergence;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		public float customProceduralAtmosphereThickness;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public Color customProceduralGroundColor;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public bool customEnableSunDisk;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83FE64", Offset = "0x83FE64")]
		public float skyboxExposure;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83FE7C", Offset = "0x83FE7C")]
		public float skyboxGroundIntensity;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83FE94", Offset = "0x83FE94")]
		public float skyboxRotation;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public float skyboxPitch;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		public float skyMultiplier;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public float shadowStrength;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		public float indirectLightMultiplier;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public Color sunColor;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public float shadowDistance;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		public Vector3 sunRotation;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public bool isProceduralSkybox;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		public float sunIntensity;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public float LWRPSunIntensity;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		public float HDRPSunIntensity;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public float temperature;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		public bool useTempature;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public Color fogColor;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public float fogDistance;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public float nearFogDistance;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public float fogDensity;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public bool includeSunInBaking;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32D")]
		public bool horizonSkyEnabled;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32E")]
		public bool scaleHorizonObjectWithFog;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public float horizonScattering;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public float horizonFogDensity;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public float horizonFalloff;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public float horizonBlend;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public Vector3 horizonSize;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public bool followPlayer;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public Vector3 horizonPosition;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public float horizonUpdateTime;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public ShadowmaskMode shadowmaskMode;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public LightShadows shadowType;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public ShadowResolution shadowResolution;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		public ShadowProjection shadowProjection;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public AmbientSkiesConsts.AmbientMode ambientMode;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		public Color32 skyColor;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public Color32 equatorColor;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		public Color32 groundColor;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public Color32 lwrpSkyColor;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		public Color32 lwrpEquatorColor;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public Color32 lwrpGroundColor;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public Cubemap hDRISkybox;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public AmbientSkiesConsts.HDShadowQuality shadowQuality;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		public AmbientSkiesConsts.VolumeFogType fogType;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public AmbientSkiesConsts.ShadowCascade cascadeCount;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		public bool enableSunDisk;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A5")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FEB0", Offset = "0x83FEB0")]
		public bool isGlobal;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public float blendDistance;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83FEE8", Offset = "0x83FEE8")]
		public float weight;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public int priority;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FF00", Offset = "0x83FF00")]
		public float hDRIExposure;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public float hDRIMultiplier;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83FF38", Offset = "0x83FF38")]
		public AmbientSkiesConsts.EnvironementSkyUpdateMode hDRIUpdateMode;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public float hDRIRotation;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FF54", Offset = "0x83FF54")]
		public float maxShadowDistance;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83FF8C", Offset = "0x83FF8C")]
		public float cascadeSplit1;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83FFA4", Offset = "0x83FFA4")]
		public float cascadeSplit2;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x83FFBC", Offset = "0x83FFBC")]
		public float cascadeSplit3;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x83FFD4", Offset = "0x83FFD4")]
		public bool useContactShadows;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84000C", Offset = "0x84000C")]
		public float contactShadowsLength;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840024", Offset = "0x840024")]
		public float contactShadowsDistanceScaleFactor;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		public float contactShadowsMaxDistance;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public float contactShadowsFadeDistance;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84003C", Offset = "0x84003C")]
		public int contactShadowsSampleCount;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		public float contactShadowsOpacity;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x840058", Offset = "0x840058")]
		public bool useMicroShadowing;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840090", Offset = "0x840090")]
		public float microShadowOpacity;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8400A8", Offset = "0x8400A8")]
		public float hDRPFogDistance;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		public Color32 volumetricSingleScatteringAlbedo;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		public float volumetricBaseFogDistance;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		public float volumetricBaseFogHeight;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public float volumetricMeanHeight;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8400E0", Offset = "0x8400E0")]
		public float volumetricGlobalAnisotropy;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8400F8", Offset = "0x8400F8")]
		public float volumetricGlobalLightProbeDimmer;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
		public float volumetricMaxFogDistance;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		public bool volumetricEnableDistanceFog;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		public Color32 volumetricConstFogColor;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		public float volumetricMipFogNear;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		public float volumetricMipFogFar;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840110", Offset = "0x840110")]
		public float volumetricMipFogMaxMip;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x840128", Offset = "0x840128")]
		public float volumetricDistanceRange;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840160", Offset = "0x840160")]
		public float volumetricSliceDistributionUniformity;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x840178", Offset = "0x840178")]
		public float exponentialBaseHeight;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		public float exponentialHeightAttenuation;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
		public float exponentialMaxFogDistance;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		public float exponentialMipFogNear;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		public float exponentialMipFogFar;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		public float exponentialMipFogMaxMip;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8401B0", Offset = "0x8401B0")]
		public float linearHeightStart;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		public float linearHeightEnd;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		public float linearMaxFogDistance;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		public float linearMipFogNear;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		public float linearMipFogFar;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		public float linearMipFogMaxMip;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8401E8", Offset = "0x8401E8")]
		public float indirectDiffuseIntensity;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		public float indirectSpecularIntensity;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x840220", Offset = "0x840220")]
		public bool enableScreenSpaceReflections;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840258", Offset = "0x840258")]
		public float screenEdgeFadeDistance;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		public int maxNumberOfRaySteps;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840270", Offset = "0x840270")]
		public float objectThickness;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840288", Offset = "0x840288")]
		public float minSmoothness;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8402A0", Offset = "0x8402A0")]
		public float smoothnessFadeStart;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		public bool reflectSky;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x485")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8402B8", Offset = "0x8402B8")]
		public bool enableScreenSpaceRefractions;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8402F0", Offset = "0x8402F0")]
		public float screenWeightDistance;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48C")]
		public bool useBakingSky;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48D")]
		public bool useFogDensityVolume;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		public Color32 singleScatteringAlbedo;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
		public float densityVolumeFogDistance;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		public Texture3D fogDensityMaskTexture;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		public Vector3 densityMaskTiling;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		public Vector3 densityScale;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		public float linearFogDensity;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		public float exponentialFogDensity;

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xC29064", Offset = "0xC29064", VA = "0xC29064")]
		public void RevertToDefault()
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xC2950C", Offset = "0xC2950C", VA = "0xC2950C")]
		public void SaveCurrentToDefault()
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0xC2A8A8", Offset = "0xC2A8A8", VA = "0xC2A8A8")]
		public AmbientSkyboxProfile()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x83BF68", Offset = "0x83BF68")]
	public class AutoDepthOfField : MonoBehaviour
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AmbientSkiesConsts.RenderPipelineSettings m_renderPipeLine;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AmbientSkiesConsts.DOFTrackingType m_trackingType;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_focusOffset;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera m_sourceCamera;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_targetObject;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask m_targetLayer;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_maxFocusDistance;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_actualFocusDistance;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public AmbientPostProcessingProfile m_processingProfile;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_maxDistanceExceeded;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DepthOfField m_dof;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_dofTrackingPoint;

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xC3006C", Offset = "0xC3006C", VA = "0xC3006C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xC30600", Offset = "0xC30600", VA = "0xC30600")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0xC30614", Offset = "0xC30614", VA = "0xC30614")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xC3074C", Offset = "0xC3074C", VA = "0xC3074C")]
		private void UpdateDofTrackingPoint()
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xC30070", Offset = "0xC30070", VA = "0xC30070")]
		private void SetupAutoFocus()
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xC30B50", Offset = "0xC30B50", VA = "0xC30B50")]
		private Camera GetMainCamera()
		{
			return null;
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xC30A68", Offset = "0xC30A68", VA = "0xC30A68")]
		private void SetPipelineRenderer()
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xC30DD0", Offset = "0xC30DD0", VA = "0xC30DD0")]
		public AutoDepthOfField()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83BFA0", Offset = "0x83BFA0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x83BFA0", Offset = "0x83BFA0")]
	public class HorizonSky : MonoBehaviour
	{
		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840318", Offset = "0x840318")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x840318", Offset = "0x840318")]
		public float m_positionUpdate;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840378", Offset = "0x840378")]
		public bool m_followsCameraPosition;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_mainCamera;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_HorizonSky;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_storedUpdate;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_isUpdatingPosition;

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xB8EB54", Offset = "0xB8EB54", VA = "0xB8EB54")]
		private void Start()
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xB8F144", Offset = "0xB8F144", VA = "0xB8F144")]
		private void Update()
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xB8EF14", Offset = "0xB8EF14", VA = "0xB8EF14")]
		public void UpdatePosition()
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xB8ECC8", Offset = "0xB8ECC8", VA = "0xB8ECC8")]
		public static GameObject GetOrCreateMainCamera()
		{
			return null;
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xB8F1A0", Offset = "0xB8F1A0", VA = "0xB8F1A0")]
		public HorizonSky()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class Quadtree<T>
	{
		[Token(Token = "0x20000E8")]
		private class QuadtreeNode
		{
			[Token(Token = "0x40008A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8403EC", Offset = "0x8403EC")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8403EC", Offset = "0x8403EC")]
			private Vector2 <Position>k__BackingField;

			[Token(Token = "0x40008A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840428", Offset = "0x840428")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x840428", Offset = "0x840428")]
			private T <Value>k__BackingField;

			[Token(Token = "0x17000052")]
			public Vector2 Position
			{
				[Token(Token = "0x600042D")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8457AC", Offset = "0x8457AC")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x600042E")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8457BC", Offset = "0x8457BC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000053")]
			public T Value
			{
				[Token(Token = "0x600042F")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8457CC", Offset = "0x8457CC")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6000430")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8457DC", Offset = "0x8457DC")]
				private set
				{
				}
			}

			[Token(Token = "0x6000431")]
			public QuadtreeNode(Vector2 position, T value)
			{
			}
		}

		[Token(Token = "0x20000E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C024", Offset = "0x83C024")]
		private sealed class <Find>d__12 : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40008AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Rect range;

			[Token(Token = "0x40008AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rect <>3__range;

			[Token(Token = "0x40008AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Quadtree<T> <>4__this;

			[Token(Token = "0x40008AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <index>5__1;

			[Token(Token = "0x40008AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private QuadtreeNode <node>5__2;

			[Token(Token = "0x40008AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <index>5__3;

			[Token(Token = "0x40008B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Quadtree<T> <child>5__4;

			[Token(Token = "0x40008B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<T> <>s__5;

			[Token(Token = "0x40008B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <value>5__6;

			[Token(Token = "0x17000054")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6000436")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000055")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000438")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000432")]
			[DebuggerHidden]
			public <Find>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000433")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000434")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000435")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000437")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000439")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600043A")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int nodeCapacity;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<QuadtreeNode> nodes;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Quadtree<T>[] children;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Rect boundaries;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8403B0", Offset = "0x8403B0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8403B0", Offset = "0x8403B0")]
		private int <Count>k__BackingField;

		[Token(Token = "0x17000051")]
		public int Count
		{
			[Token(Token = "0x6000422")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84572C", Offset = "0x84572C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000423")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84573C", Offset = "0x84573C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000424")]
		public Quadtree(Rect boundaries, int nodeCapacity = 32)
		{
		}

		[Token(Token = "0x6000425")]
		public bool Insert(float x, float y, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000426")]
		public bool Insert(Vector2 position, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000427")]
		private bool Insert(QuadtreeNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x6000428")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84574C", Offset = "0x84574C")]
		public IEnumerable<T> Find(Rect range)
		{
			return null;
		}

		[Token(Token = "0x6000429")]
		public bool Remove(float x, float z, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600042A")]
		public bool Remove(Vector2 position, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600042B")]
		private void Subdivide()
		{
		}

		[Token(Token = "0x600042C")]
		private void Combine()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x83C034", Offset = "0x83C034")]
	public class RealtimeEmissionSetup : MonoBehaviour
	{
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x840464", Offset = "0x840464")]
		public bool m_syncToASTimeOfDay;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode m_emissionOverwriteActivation;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Material> m_emissiveMaterials;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Renderer> m_sceneRenderers;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_sunActive;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AmbientSkiesTimeOfDay m_timeOfDay;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AmbientSkiesConsts.RenderPipelineSettings m_renderPipelineSettings;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color m_emissiveOn;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_emissiveOff;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_activestats;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool m_showDebugging;

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xCCA758", Offset = "0xCCA758", VA = "0xCCA758")]
		private void Start()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xCCA814", Offset = "0xCCA814", VA = "0xCCA814")]
		private void Update()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0xCCB538", Offset = "0xCCB538", VA = "0xCCB538")]
		public RealtimeEmissionSetup()
		{
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x20000EB")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xB8D3E4", Offset = "0xB8D3E4", VA = "0xB8D3E4")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x600043F")]
		[Address(RVA = "0xB993EC", Offset = "0xB993EC", VA = "0xB993EC")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x6000440")]
		[Address(RVA = "0xFAC05C", Offset = "0xFAC05C", VA = "0xFAC05C")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000441")]
		[Address(RVA = "0xFAC090", Offset = "0xFAC090", VA = "0xFAC090")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x20000F0")]
		private static class Uniforms
		{
			[Token(Token = "0x40008C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x40008C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x40008C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x40008C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x40008CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x40008CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x40008CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x40008CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x20000F1")]
		private enum OcclusionSource
		{
			[Token(Token = "0x40008D0")]
			DepthTexture,
			[Token(Token = "0x40008D1")]
			DepthNormalsTexture,
			[Token(Token = "0x40008D2")]
			GBuffer
		}

		[Token(Token = "0x40008C2")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x40008C3")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x17000056")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x6000442")]
			[Address(RVA = "0x1CBF234", Offset = "0x1CBF234", VA = "0x1CBF234")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x17000057")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x6000443")]
			[Address(RVA = "0x1CBF2F4", Offset = "0x1CBF2F4", VA = "0x1CBF2F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000058")]
		public override bool active
		{
			[Token(Token = "0x6000444")]
			[Address(RVA = "0x1CBF388", Offset = "0x1CBF388", VA = "0x1CBF388", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x1CBF40C", Offset = "0x1CBF40C", VA = "0x1CBF40C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x1CBF448", Offset = "0x1CBF448", VA = "0x1CBF448", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x1CBF48C", Offset = "0x1CBF48C", VA = "0x1CBF48C", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x1CBF4F0", Offset = "0x1CBF4F0", VA = "0x1CBF4F0", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x1CBFF04", Offset = "0x1CBFF04", VA = "0x1CBFF04")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x20000F3")]
		private static class Uniforms
		{
			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x40008D3")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x17000059")]
		public override bool active
		{
			[Token(Token = "0x600044B")]
			[Address(RVA = "0xC37D40", Offset = "0xC37D40", VA = "0xC37D40", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0xC37DD8", Offset = "0xC37DD8", VA = "0xC37DD8")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0xC387F8", Offset = "0xC387F8", VA = "0xC387F8")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x20000F5")]
		private static class Uniforms
		{
			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x40008E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x40008E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x40008E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x40008E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x20000F6")]
		private enum Pass
		{
			[Token(Token = "0x40008EA")]
			Depth,
			[Token(Token = "0x40008EB")]
			Normals,
			[Token(Token = "0x40008EC")]
			MovecOpacity,
			[Token(Token = "0x40008ED")]
			MovecImaging,
			[Token(Token = "0x40008EE")]
			MovecArrows
		}

		[Token(Token = "0x20000F7")]
		private class ArrowArray
		{
			[Token(Token = "0x40008EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84049C", Offset = "0x84049C")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84049C", Offset = "0x84049C")]
			private Mesh <mesh>k__BackingField;

			[Token(Token = "0x40008F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8404D8", Offset = "0x8404D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8404D8", Offset = "0x8404D8")]
			private int <columnCount>k__BackingField;

			[Token(Token = "0x40008F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840514", Offset = "0x840514")]
			[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x840514", Offset = "0x840514")]
			private int <rowCount>k__BackingField;

			[Token(Token = "0x1700005B")]
			public Mesh mesh
			{
				[Token(Token = "0x600045B")]
				[Address(RVA = "0xB79678", Offset = "0xB79678", VA = "0xB79678")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84585C", Offset = "0x84585C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600045C")]
				[Address(RVA = "0xB79680", Offset = "0xB79680", VA = "0xB79680")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84586C", Offset = "0x84586C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700005C")]
			public int columnCount
			{
				[Token(Token = "0x600045D")]
				[Address(RVA = "0xB79688", Offset = "0xB79688", VA = "0xB79688")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84587C", Offset = "0x84587C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600045E")]
				[Address(RVA = "0xB79690", Offset = "0xB79690", VA = "0xB79690")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84588C", Offset = "0x84588C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700005D")]
			public int rowCount
			{
				[Token(Token = "0x600045F")]
				[Address(RVA = "0xB79698", Offset = "0xB79698", VA = "0xB79698")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84589C", Offset = "0x84589C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000460")]
				[Address(RVA = "0xB796A0", Offset = "0xB796A0", VA = "0xB796A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8458AC", Offset = "0x8458AC")]
				private set
				{
				}
			}

			[Token(Token = "0x6000461")]
			[Address(RVA = "0xB796A8", Offset = "0xB796A8", VA = "0xB796A8")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x6000462")]
			[Address(RVA = "0xB79A68", Offset = "0xB79A68", VA = "0xB79A68")]
			public void Release()
			{
			}

			[Token(Token = "0x6000463")]
			[Address(RVA = "0xB79A9C", Offset = "0xB79A9C", VA = "0xB79A9C")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x40008E0")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x1700005A")]
		public override bool active
		{
			[Token(Token = "0x600044F")]
			[Address(RVA = "0xCBBCCC", Offset = "0xCBBCCC", VA = "0xCBBCCC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0xCBBD44", Offset = "0xCBBD44", VA = "0xCBBD44", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0xCBBDC0", Offset = "0xCBBDC0", VA = "0xCBBDC0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0xCBBE1C", Offset = "0xCBBE1C", VA = "0xCBBE1C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0xCBBE60", Offset = "0xCBBE60", VA = "0xCBBE60", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0xCBBF84", Offset = "0xCBBF84", VA = "0xCBBF84")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xCBC0B0", Offset = "0xCBC0B0", VA = "0xCBC0B0")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0xCBC180", Offset = "0xCBC180", VA = "0xCBC180")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0xCBC70C", Offset = "0xCBC70C", VA = "0xCBC70C")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0xCBC81C", Offset = "0xCBC81C", VA = "0xCBC81C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0xCBC854", Offset = "0xCBC854", VA = "0xCBC854")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x20000F9")]
		private static class Uniforms
		{
			[Token(Token = "0x40008F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x40008F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x1700005E")]
		public override bool active
		{
			[Token(Token = "0x6000464")]
			[Address(RVA = "0xCC07E0", Offset = "0xCC07E0", VA = "0xCC07E0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xCC0870", Offset = "0xCC0870", VA = "0xCC0870", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xCC08A4", Offset = "0xCC08A4", VA = "0xCC08A4", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xCC0BAC", Offset = "0xCC0BAC", VA = "0xCC0BAC")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x20000FB")]
		private static class Uniforms
		{
			[Token(Token = "0x40008FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x40008FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x40008FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x40008FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x40008FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x40008FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x4000900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x4000901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x4000902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x4000903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x4000904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x4000905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x4000906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x4000907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x4000908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4000909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x400090A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x400090B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x400090C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x400090D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x40008F5")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x40008F6")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x40008F7")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x1700005F")]
		public override bool active
		{
			[Token(Token = "0x6000469")]
			[Address(RVA = "0xCC0E3C", Offset = "0xCC0E3C", VA = "0xCC0E3C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xCC0EAC", Offset = "0xCC0EAC", VA = "0xCC0EAC")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0xCC0ED8", Offset = "0xCC0ED8", VA = "0xCC0ED8")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0xCC0F68", Offset = "0xCC0F68", VA = "0xCC0F68")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xCC1088", Offset = "0xCC1088", VA = "0xCC1088")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0xCC1128", Offset = "0xCC1128", VA = "0xCC1128")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0xCC11AC", Offset = "0xCC11AC", VA = "0xCC11AC")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0xCC1210", Offset = "0xCC1210", VA = "0xCC1210")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xCC1304", Offset = "0xCC1304", VA = "0xCC1304")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xCC13A0", Offset = "0xCC13A0", VA = "0xCC13A0")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xCC1448", Offset = "0xCC1448", VA = "0xCC1448")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0xCC14C4", Offset = "0xCC14C4", VA = "0xCC14C4")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0xCC1598", Offset = "0xCC1598", VA = "0xCC1598")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0xCC160C", Offset = "0xCC160C", VA = "0xCC160C")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0xCC16B4", Offset = "0xCC16B4", VA = "0xCC16B4")]
		private TextureFormat GetCurveFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xCC16E8", Offset = "0xCC16E8", VA = "0xCC16E8")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0xCC1CE8", Offset = "0xCC1CE8", VA = "0xCC1CE8")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xCC1D90", Offset = "0xCC1D90", VA = "0xCC1D90")]
		private RenderTextureFormat GetLutFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0xCC1DC0", Offset = "0xCC1DC0", VA = "0xCC1DC0")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xCC2648", Offset = "0xCC2648", VA = "0xCC2648", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0xCC2838", Offset = "0xCC2838", VA = "0xCC2838")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xCC297C", Offset = "0xCC297C", VA = "0xCC297C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0xCC2A04", Offset = "0xCC2A04", VA = "0xCC2A04")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x20000FD")]
		private static class Uniforms
		{
			[Token(Token = "0x4000911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x4000912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x4000913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x4000914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x4000915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x4000916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x4000917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x4000918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x400091A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x400091B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x400090E")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x4000910")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x17000060")]
		public override bool active
		{
			[Token(Token = "0x6000481")]
			[Address(RVA = "0xCC4FFC", Offset = "0xCC4FFC", VA = "0xCC4FFC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xCC506C", Offset = "0xCC506C", VA = "0xCC506C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xCC5074", Offset = "0xCC5074", VA = "0xCC5074")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xCC5128", Offset = "0xCC5128", VA = "0xCC5128")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xCC51A8", Offset = "0xCC51A8", VA = "0xCC51A8")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xCC5284", Offset = "0xCC5284", VA = "0xCC5284")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xCC52D4", Offset = "0xCC52D4", VA = "0xCC52D4")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xCC5A78", Offset = "0xCC5A78", VA = "0xCC5A78", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xCC5B04", Offset = "0xCC5B04", VA = "0xCC5B04")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x20000FF")]
		private static class Uniforms
		{
			[Token(Token = "0x400091F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x4000920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x400091E")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x17000061")]
		public override bool active
		{
			[Token(Token = "0x600048B")]
			[Address(RVA = "0xCC5F1C", Offset = "0xCC5F1C", VA = "0xCC5F1C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xCC5F8C", Offset = "0xCC5F8C", VA = "0xCC5F8C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0xCC5F98", Offset = "0xCC5F98", VA = "0xCC5F98")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xCC60D8", Offset = "0xCC60D8", VA = "0xCC60D8", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0xCC62B0", Offset = "0xCC62B0", VA = "0xCC62B0")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x2000101")]
		private static class Uniforms
		{
			[Token(Token = "0x400092C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x400092D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x400092E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x400092F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x4000930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x4000931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x4000929")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x400092A")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x400092B")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x17000062")]
		public override bool active
		{
			[Token(Token = "0x6000491")]
			[Address(RVA = "0xB86EF8", Offset = "0xB86EF8", VA = "0xB86EF8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xB86F74", Offset = "0xB86F74", VA = "0xB86F74")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0xB86F80", Offset = "0xB86F80", VA = "0xB86F80", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xB86F8C", Offset = "0xB86F8C", VA = "0xB86F8C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xB87134", Offset = "0xB87134", VA = "0xB87134")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xB87238", Offset = "0xB87238", VA = "0xB87238")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xB87EB4", Offset = "0xB87EB4", VA = "0xB87EB4")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xB8804C", Offset = "0xB8804C", VA = "0xB8804C")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x2000103")]
		private static class Uniforms
		{
			[Token(Token = "0x4000933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x4000934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x4000935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x4000936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x4000937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x4000932")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x17000063")]
		public override bool active
		{
			[Token(Token = "0x600049A")]
			[Address(RVA = "0xB8889C", Offset = "0xB8889C", VA = "0xB8889C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xB8892C", Offset = "0xB8892C", VA = "0xB8892C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xB88970", Offset = "0xB88970", VA = "0xB88970", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xB88978", Offset = "0xB88978", VA = "0xB88978", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xB88980", Offset = "0xB88980", VA = "0xB88980", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xB88E6C", Offset = "0xB88E6C", VA = "0xB88E6C")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000105")]
		private static class Uniforms
		{
			[Token(Token = "0x4000938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x4000939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x17000064")]
		public override bool active
		{
			[Token(Token = "0x60004A1")]
			[Address(RVA = "0xB8A098", Offset = "0xB8A098", VA = "0xB8A098", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xB8A12C", Offset = "0xB8A12C", VA = "0xB8A12C")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xB8A398", Offset = "0xB8A398", VA = "0xB8A398")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x2000107")]
		private static class Uniforms
		{
			[Token(Token = "0x400093B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x400093C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x400093D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x400093E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x17000065")]
		public override bool active
		{
			[Token(Token = "0x60004A5")]
			[Address(RVA = "0xB8DD58", Offset = "0xB8DD58", VA = "0xB8DD58", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xB8DDFC", Offset = "0xB8DDFC", VA = "0xB8DDFC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xB8DE2C", Offset = "0xB8DE2C", VA = "0xB8DE2C", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xB8E218", Offset = "0xB8E218", VA = "0xB8E218")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x2000109")]
		private static class Uniforms
		{
			[Token(Token = "0x4000942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x4000943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x4000944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x4000945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x4000946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4000947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x4000948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x4000949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x400094A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x400094B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x400094C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x400094D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x400094E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x400094F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4000950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x4000951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x4000952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x4000953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x4000954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x4000955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x4000956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x4000957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x4000958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x4000959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x400095A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x400095B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x200010A")]
		private enum Pass
		{
			[Token(Token = "0x400095D")]
			VelocitySetup,
			[Token(Token = "0x400095E")]
			TileMax1,
			[Token(Token = "0x400095F")]
			TileMax2,
			[Token(Token = "0x4000960")]
			TileMaxV,
			[Token(Token = "0x4000961")]
			NeighborMax,
			[Token(Token = "0x4000962")]
			Reconstruction,
			[Token(Token = "0x4000963")]
			FrameCompression,
			[Token(Token = "0x4000964")]
			FrameBlendingChroma,
			[Token(Token = "0x4000965")]
			FrameBlendingRaw
		}

		[Token(Token = "0x200010B")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x4000966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x4000967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x60004B6")]
			[Address(RVA = "0xB80C40", Offset = "0xB80C40", VA = "0xB80C40")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x60004B7")]
			[Address(RVA = "0xB80C84", Offset = "0xB80C84", VA = "0xB80C84")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x60004B8")]
			[Address(RVA = "0xB80CB4", Offset = "0xB80CB4", VA = "0xB80CB4")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x60004B9")]
			[Address(RVA = "0xB80CBC", Offset = "0xB80CBC", VA = "0xB80CBC")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x200010C")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x200010D")]
			private struct Frame
			{
				[Token(Token = "0x400096C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x400096D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x400096E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x400096F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x60004C1")]
				[Address(RVA = "0x20A4D54", Offset = "0x20A4D54", VA = "0x20A4D54")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x60004C2")]
				[Address(RVA = "0x20A4DD0", Offset = "0x20A4DD0", VA = "0x20A4DD0")]
				public void Release()
				{
				}

				[Token(Token = "0x60004C3")]
				[Address(RVA = "0x20A4EB4", Offset = "0x20A4EB4", VA = "0x20A4EB4")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x60004C4")]
				[Address(RVA = "0x20A5190", Offset = "0x20A5190", VA = "0x20A5190")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4000968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x400096A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x400096B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x60004BA")]
			[Address(RVA = "0xB8035C", Offset = "0xB8035C", VA = "0xB8035C")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x60004BB")]
			[Address(RVA = "0xB804E8", Offset = "0xB804E8", VA = "0xB804E8")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60004BC")]
			[Address(RVA = "0xB80574", Offset = "0xB80574", VA = "0xB80574")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x60004BD")]
			[Address(RVA = "0xB806B0", Offset = "0xB806B0", VA = "0xB806B0")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x60004BE")]
			[Address(RVA = "0xB803D8", Offset = "0xB803D8", VA = "0xB803D8")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x60004BF")]
			[Address(RVA = "0xB80410", Offset = "0xB80410", VA = "0xB80410")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x60004C0")]
			[Address(RVA = "0xB80BC8", Offset = "0xB80BC8", VA = "0xB80BC8")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x17000066")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x60004AA")]
			[Address(RVA = "0xB99A80", Offset = "0xB99A80", VA = "0xB99A80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x60004AB")]
			[Address(RVA = "0xB99AF4", Offset = "0xB99AF4", VA = "0xB99AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		public override bool active
		{
			[Token(Token = "0x60004AC")]
			[Address(RVA = "0xB99B68", Offset = "0xB99B68", VA = "0xB99B68", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xB99C40", Offset = "0xB99C40", VA = "0xB99C40", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xB99C84", Offset = "0xB99C84", VA = "0xB99C84")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xB99CBC", Offset = "0xB99CBC", VA = "0xB99CBC", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xB99CC4", Offset = "0xB99CC4", VA = "0xB99CC4", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xB99CCC", Offset = "0xB99CCC", VA = "0xB99CCC", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xB99CD8", Offset = "0xB99CD8", VA = "0xB99CD8", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xB9A3A0", Offset = "0xB9A3A0", VA = "0xB9A3A0", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xB9A3B4", Offset = "0xB9A3B4", VA = "0xB9A3B4")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x200010F")]
		private static class Uniforms
		{
			[Token(Token = "0x4000975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x4000976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x4000977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x4000978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x4000979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x400097A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x400097B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x400097E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x400097F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x4000980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x4000981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x4000982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x4000983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x4000984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x4000985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x4000986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x4000987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x4000988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x4000989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x400098A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x400098B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x400098C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x400098D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x400098E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x400098F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x4000990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x4000991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x4000992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x4000993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x4000994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x4000995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x4000996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x4000997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x2000110")]
		private enum PassIndex
		{
			[Token(Token = "0x4000999")]
			RayTraceStep,
			[Token(Token = "0x400099A")]
			CompositeFinal,
			[Token(Token = "0x400099B")]
			Blur,
			[Token(Token = "0x400099C")]
			CompositeSSR,
			[Token(Token = "0x400099D")]
			MinMipGeneration,
			[Token(Token = "0x400099E")]
			HitPointToReflections,
			[Token(Token = "0x400099F")]
			BilateralKeyPack,
			[Token(Token = "0x40009A0")]
			BlitDepthAsCSZ,
			[Token(Token = "0x40009A1")]
			PoissonBlur
		}

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x17000069")]
		public override bool active
		{
			[Token(Token = "0x60004C6")]
			[Address(RVA = "0xCD0954", Offset = "0xCD0954", VA = "0xCD0954", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xCD094C", Offset = "0xCD094C", VA = "0xCD094C", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xCD09D0", Offset = "0xCD09D0", VA = "0xCD09D0", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xCD0B24", Offset = "0xCD0B24", VA = "0xCD0B24", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xCD0B68", Offset = "0xCD0B68", VA = "0xCD0B68", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xCD0B70", Offset = "0xCD0B70", VA = "0xCD0B70", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xCD1DDC", Offset = "0xCD1DDC", VA = "0xCD1DDC")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000112")]
		private static class Uniforms
		{
			[Token(Token = "0x40009A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x40009AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x40009AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x40009AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x40009AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x40009A2")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x40009A3")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x840550", Offset = "0x840550")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x840550", Offset = "0x840550")]
		private Vector2 <jitterVector>k__BackingField;

		[Token(Token = "0x1700006A")]
		public override bool active
		{
			[Token(Token = "0x60004CD")]
			[Address(RVA = "0xFA6210", Offset = "0xFA6210", VA = "0xFA6210", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006B")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x60004CF")]
			[Address(RVA = "0xFA62CC", Offset = "0xFA62CC", VA = "0xFA62CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8458BC", Offset = "0x8458BC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0xFA62D4", Offset = "0xFA62D4", VA = "0xFA62D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8458CC", Offset = "0x8458CC")]
			private set
			{
			}
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xFA62C4", Offset = "0xFA62C4", VA = "0xFA62C4", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xFA62DC", Offset = "0xFA62DC", VA = "0xFA62DC")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xFA62E8", Offset = "0xFA62E8", VA = "0xFA62E8")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xFA6BF4", Offset = "0xFA6BF4", VA = "0xFA6BF4")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xFA70D4", Offset = "0xFA70D4", VA = "0xFA70D4")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xFA657C", Offset = "0xFA657C", VA = "0xFA657C")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xFA6610", Offset = "0xFA6610", VA = "0xFA6610")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xFA6A80", Offset = "0xFA6A80", VA = "0xFA6A80")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xFA7118", Offset = "0xFA7118", VA = "0xFA7118", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xFA71C0", Offset = "0xFA71C0", VA = "0xFA71C0")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x2000114")]
		private static class Uniforms
		{
			[Token(Token = "0x40009AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x40009AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x1700006C")]
		public override bool active
		{
			[Token(Token = "0x60004DB")]
			[Address(RVA = "0xB719DC", Offset = "0xB719DC", VA = "0xB719DC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xB71B14", Offset = "0xB71B14", VA = "0xB71B14", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xB71C80", Offset = "0xB71C80", VA = "0xB71C80")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xB71DC4", Offset = "0xB71DC4", VA = "0xB71DC4")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x2000116")]
		private static class Uniforms
		{
			[Token(Token = "0x40009B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x40009B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x40009B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x40009B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x1700006D")]
		public override bool active
		{
			[Token(Token = "0x60004E0")]
			[Address(RVA = "0xB74C80", Offset = "0xB74C80", VA = "0xB74C80", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xB74CF0", Offset = "0xB74CF0", VA = "0xB74CF0", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xB74FCC", Offset = "0xB74FCC", VA = "0xB74FCC")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000117")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x2000118")]
		public enum SampleCount
		{
			[Token(Token = "0x40009B7")]
			Lowest = 3,
			[Token(Token = "0x40009B8")]
			Low = 6,
			[Token(Token = "0x40009B9")]
			Medium = 10,
			[Token(Token = "0x40009BA")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x2000119")]
		public struct Settings
		{
			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84059C", Offset = "0x84059C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84059C", Offset = "0x84059C")]
			public float intensity;

			[Token(Token = "0x40009BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8405F0", Offset = "0x8405F0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x8405F0", Offset = "0x8405F0")]
			public float radius;

			[Token(Token = "0x40009BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840644", Offset = "0x840644")]
			public SampleCount sampleCount;

			[Token(Token = "0x40009BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84067C", Offset = "0x84067C")]
			public bool downsampling;

			[Token(Token = "0x40009BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8406B4", Offset = "0x8406B4")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x40009C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8406EC", Offset = "0x8406EC")]
			public bool ambientOnly;

			[Token(Token = "0x40009C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840724", Offset = "0x840724")]
			public bool highPrecision;

			[Token(Token = "0x1700006F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60004E8")]
				[Address(RVA = "0xB76BCC", Offset = "0xB76BCC", VA = "0xB76BCC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700006E")]
		public Settings settings
		{
			[Token(Token = "0x60004E4")]
			[Address(RVA = "0x1CBF2E4", Offset = "0x1CBF2E4", VA = "0x1CBF2E4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60004E5")]
			[Address(RVA = "0x1CC0034", Offset = "0x1CC0034", VA = "0x1CC0034")]
			set
			{
			}
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x1CC0040", Offset = "0x1CC0040", VA = "0x1CC0040", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1CC006C", Offset = "0x1CC006C", VA = "0x1CC006C")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011A")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x200011B")]
		public enum Method
		{
			[Token(Token = "0x40009C4")]
			Fxaa,
			[Token(Token = "0x40009C5")]
			Taa
		}

		[Token(Token = "0x200011C")]
		public enum FxaaPreset
		{
			[Token(Token = "0x40009C7")]
			ExtremePerformance,
			[Token(Token = "0x40009C8")]
			Performance,
			[Token(Token = "0x40009C9")]
			Default,
			[Token(Token = "0x40009CA")]
			Quality,
			[Token(Token = "0x40009CB")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x200011D")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x40009CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84076C", Offset = "0x84076C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84076C", Offset = "0x84076C")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8407C0", Offset = "0x8407C0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8407C0", Offset = "0x8407C0")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x40009CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84081C", Offset = "0x84081C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84081C", Offset = "0x84081C")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x40009CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x200011E")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x40009D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840874", Offset = "0x840874")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840874", Offset = "0x840874")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x40009D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8408CC", Offset = "0x8408CC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8408CC", Offset = "0x8408CC")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x40009D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840920", Offset = "0x840920")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840920", Offset = "0x840920")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840974", Offset = "0x840974")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840974", Offset = "0x840974")]
			public float minimumRequiredLuminance;

			[Token(Token = "0x40009D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x200011F")]
		public struct FxaaSettings
		{
			[Token(Token = "0x40009D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x17000071")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x60004EF")]
				[Address(RVA = "0xB76F68", Offset = "0xB76F68", VA = "0xB76F68")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000120")]
		public struct TaaSettings
		{
			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8409D0", Offset = "0x8409D0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8409D0", Offset = "0x8409D0")]
			public float jitterSpread;

			[Token(Token = "0x40009D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840A28", Offset = "0x840A28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840A28", Offset = "0x840A28")]
			public float sharpen;

			[Token(Token = "0x40009D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840A7C", Offset = "0x840A7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840A7C", Offset = "0x840A7C")]
			public float stationaryBlending;

			[Token(Token = "0x40009D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840AD4", Offset = "0x840AD4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840AD4", Offset = "0x840AD4")]
			public float motionBlending;

			[Token(Token = "0x17000072")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x60004F0")]
				[Address(RVA = "0xB76F8C", Offset = "0xB76F8C", VA = "0xB76F8C")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000121")]
		public struct Settings
		{
			[Token(Token = "0x40009DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x40009DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x40009DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x17000073")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60004F1")]
				[Address(RVA = "0xB76F70", Offset = "0xB76F70", VA = "0xB76F70")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000070")]
		public Settings settings
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0xC2D2AC", Offset = "0xC2D2AC", VA = "0xC2D2AC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0xC2D2C0", Offset = "0xC2D2C0", VA = "0xC2D2C0")]
			set
			{
			}
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xC2D2D4", Offset = "0xC2D2D4", VA = "0xC2D2D4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xC2D320", Offset = "0xC2D320", VA = "0xC2D320")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000122")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000123")]
		public struct BloomSettings
		{
			[Token(Token = "0x40009DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x840B3C", Offset = "0x840B3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840B3C", Offset = "0x840B3C")]
			public float intensity;

			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x840B8C", Offset = "0x840B8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840B8C", Offset = "0x840B8C")]
			public float threshold;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840BDC", Offset = "0x840BDC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840BDC", Offset = "0x840BDC")]
			public float softKnee;

			[Token(Token = "0x40009E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840C30", Offset = "0x840C30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840C30", Offset = "0x840C30")]
			public float radius;

			[Token(Token = "0x40009E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840C84", Offset = "0x840C84")]
			public bool antiFlicker;

			[Token(Token = "0x17000075")]
			public float thresholdLinear
			{
				[Token(Token = "0x60004F7")]
				[Address(RVA = "0xB783B0", Offset = "0xB783B0", VA = "0xB783B0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60004F6")]
				[Address(RVA = "0xB78388", Offset = "0xB78388", VA = "0xB78388")]
				set
				{
				}
			}

			[Token(Token = "0x17000076")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x60004F8")]
				[Address(RVA = "0xB783BC", Offset = "0xB783BC", VA = "0xB783BC")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000124")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840CBC", Offset = "0x840CBC")]
			public Texture texture;

			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840CF4", Offset = "0x840CF4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x840CF4", Offset = "0x840CF4")]
			public float intensity;

			[Token(Token = "0x17000077")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x60004F9")]
				[Address(RVA = "0xB783D8", Offset = "0xB783D8", VA = "0xB783D8")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000125")]
		public struct Settings
		{
			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x40009E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x17000078")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60004FA")]
				[Address(RVA = "0xB7840C", Offset = "0xB7840C", VA = "0xB7840C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000074")]
		public Settings settings
		{
			[Token(Token = "0x60004F2")]
			[Address(RVA = "0xCB61B4", Offset = "0xCB61B4", VA = "0xCB61B4")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60004F3")]
			[Address(RVA = "0xCB61CC", Offset = "0xCB61CC", VA = "0xCB61CC")]
			set
			{
			}
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xCB61F0", Offset = "0xCB61F0", VA = "0xCB61F0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xCB6250", Offset = "0xCB6250", VA = "0xCB6250")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000126")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000127")]
		public struct DepthSettings
		{
			[Token(Token = "0x40009E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840D54", Offset = "0x840D54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840D54", Offset = "0x840D54")]
			public float scale;

			[Token(Token = "0x1700007B")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x6000501")]
				[Address(RVA = "0xB79C18", Offset = "0xB79C18", VA = "0xB79C18")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000128")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x40009E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840DA8", Offset = "0x840DA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840DA8", Offset = "0x840DA8")]
			public float sourceOpacity;

			[Token(Token = "0x40009EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840DFC", Offset = "0x840DFC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840DFC", Offset = "0x840DFC")]
			public float motionImageOpacity;

			[Token(Token = "0x40009EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x840E50", Offset = "0x840E50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840E50", Offset = "0x840E50")]
			public float motionImageAmplitude;

			[Token(Token = "0x40009EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840EA0", Offset = "0x840EA0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840EA0", Offset = "0x840EA0")]
			public float motionVectorsOpacity;

			[Token(Token = "0x40009ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840EF4", Offset = "0x840EF4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840EF4", Offset = "0x840EF4")]
			public int motionVectorsResolution;

			[Token(Token = "0x40009EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840F4C", Offset = "0x840F4C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x840F4C", Offset = "0x840F4C")]
			public float motionVectorsAmplitude;

			[Token(Token = "0x1700007C")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x6000502")]
				[Address(RVA = "0xB79C20", Offset = "0xB79C20", VA = "0xB79C20")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x2000129")]
		public enum Mode
		{
			[Token(Token = "0x40009F0")]
			None,
			[Token(Token = "0x40009F1")]
			Depth,
			[Token(Token = "0x40009F2")]
			Normals,
			[Token(Token = "0x40009F3")]
			MotionVectors,
			[Token(Token = "0x40009F4")]
			AmbientOcclusion,
			[Token(Token = "0x40009F5")]
			EyeAdaptation,
			[Token(Token = "0x40009F6")]
			FocusPlane,
			[Token(Token = "0x40009F7")]
			PreGradingLog,
			[Token(Token = "0x40009F8")]
			LogLut,
			[Token(Token = "0x40009F9")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x200012A")]
		public struct Settings
		{
			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x40009FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x1700007D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000503")]
				[Address(RVA = "0xB79C3C", Offset = "0xB79C3C", VA = "0xB79C3C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000079")]
		public Settings settings
		{
			[Token(Token = "0x60004FB")]
			[Address(RVA = "0xCBBDB0", Offset = "0xCBBDB0", VA = "0xCBBDB0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x60004FC")]
			[Address(RVA = "0xCBC8A0", Offset = "0xCBC8A0", VA = "0xCBC8A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public bool willInterrupt
		{
			[Token(Token = "0x60004FD")]
			[Address(RVA = "0xCBC8B0", Offset = "0xCBC8B0", VA = "0xCBC8B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xCBC8D4", Offset = "0xCBC8D4", VA = "0xCBC8D4", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xCBBD34", Offset = "0xCBBD34", VA = "0xCBBD34")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xCBC918", Offset = "0xCBC918", VA = "0xCBC918")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012B")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200012C")]
		public struct Settings
		{
			[Token(Token = "0x40009FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840FAC", Offset = "0x840FAC")]
			public Texture2D spectralTexture;

			[Token(Token = "0x40009FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x840FE4", Offset = "0x840FE4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x840FE4", Offset = "0x840FE4")]
			public float intensity;

			[Token(Token = "0x1700007F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000508")]
				[Address(RVA = "0xB79CFC", Offset = "0xB79CFC", VA = "0xB79CFC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700007E")]
		public Settings settings
		{
			[Token(Token = "0x6000504")]
			[Address(RVA = "0xCC0864", Offset = "0xCC0864", VA = "0xCC0864")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000505")]
			[Address(RVA = "0xCC0BF8", Offset = "0xCC0BF8", VA = "0xCC0BF8")]
			set
			{
			}
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xCC0C08", Offset = "0xCC0C08", VA = "0xCC0C08", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xCC0C3C", Offset = "0xCC0C3C", VA = "0xCC0C3C")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012D")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x200012E")]
		public enum Tonemapper
		{
			[Token(Token = "0x4000A04")]
			None,
			[Token(Token = "0x4000A05")]
			ACES,
			[Token(Token = "0x4000A06")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x200012F")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8410C0", Offset = "0x8410C0")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4000A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8410F8", Offset = "0x8410F8")]
			public float neutralBlackIn;

			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841118", Offset = "0x841118")]
			public float neutralWhiteIn;

			[Token(Token = "0x4000A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841130", Offset = "0x841130")]
			public float neutralBlackOut;

			[Token(Token = "0x4000A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841150", Offset = "0x841150")]
			public float neutralWhiteOut;

			[Token(Token = "0x4000A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841168", Offset = "0x841168")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4000A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841184", Offset = "0x841184")]
			public float neutralWhiteClip;

			[Token(Token = "0x17000083")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6000512")]
				[Address(RVA = "0xB7AA38", Offset = "0xB7AA38", VA = "0xB7AA38")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000130")]
		public struct BasicSettings
		{
			[Token(Token = "0x4000A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84119C", Offset = "0x84119C")]
			public float postExposure;

			[Token(Token = "0x4000A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8411D4", Offset = "0x8411D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8411D4", Offset = "0x8411D4")]
			public float temperature;

			[Token(Token = "0x4000A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841230", Offset = "0x841230")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841230", Offset = "0x841230")]
			public float tint;

			[Token(Token = "0x4000A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84128C", Offset = "0x84128C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84128C", Offset = "0x84128C")]
			public float hueShift;

			[Token(Token = "0x4000A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8412E8", Offset = "0x8412E8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8412E8", Offset = "0x8412E8")]
			public float saturation;

			[Token(Token = "0x4000A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84133C", Offset = "0x84133C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84133C", Offset = "0x84133C")]
			public float contrast;

			[Token(Token = "0x17000084")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x6000513")]
				[Address(RVA = "0xB7A0E4", Offset = "0xB7A0E4", VA = "0xB7A0E4")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000131")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4000A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x4000A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x4000A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x4000A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x17000085")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6000514")]
				[Address(RVA = "0xB7A0F4", Offset = "0xB7A0F4", VA = "0xB7A0F4")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000132")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x4000A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x8413A0", Offset = "0x8413A0")]
			public Color slope;

			[Token(Token = "0x4000A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x8413D8", Offset = "0x8413D8")]
			public Color power;

			[Token(Token = "0x4000A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x841410", Offset = "0x841410")]
			public Color offset;

			[Token(Token = "0x17000086")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x6000515")]
				[Address(RVA = "0xB7A188", Offset = "0xB7A188", VA = "0xB7A188")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000133")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4000A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x841448", Offset = "0x841448")]
			public Color lift;

			[Token(Token = "0x4000A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x841480", Offset = "0x841480")]
			public Color gamma;

			[Token(Token = "0x4000A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TrackballAttribute", RVA = "0x8414B8", Offset = "0x8414B8")]
			public Color gain;

			[Token(Token = "0x17000087")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x6000516")]
				[Address(RVA = "0xB7A214", Offset = "0xB7A214", VA = "0xB7A214")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x2000134")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4000A1F")]
			Linear,
			[Token(Token = "0x4000A20")]
			Log
		}

		[Serializable]
		[Token(Token = "0x2000135")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4000A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x4000A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x17000088")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6000517")]
				[Address(RVA = "0xB7A10C", Offset = "0xB7A10C", VA = "0xB7A10C")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000136")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4000A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4000A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4000A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4000A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x17000089")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6000518")]
				[Address(RVA = "0xB7A2A0", Offset = "0xB7A2A0", VA = "0xB7A2A0")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000137")]
		public struct Settings
		{
			[Token(Token = "0x4000A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x4000A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x4000A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4000A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4000A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x1700008A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000519")]
				[Address(RVA = "0xB7A8E4", Offset = "0xB7A8E4", VA = "0xB7A8E4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x841048", Offset = "0x841048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841048", Offset = "0x841048")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x841084", Offset = "0x841084")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x841084", Offset = "0x841084")]
		private RenderTexture <bakedLut>k__BackingField;

		[Token(Token = "0x17000080")]
		public Settings settings
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0xCC1A54", Offset = "0xCC1A54", VA = "0xCC1A54")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600050A")]
			[Address(RVA = "0xCC2AF8", Offset = "0xCC2AF8", VA = "0xCC2AF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public bool isDirty
		{
			[Token(Token = "0x600050B")]
			[Address(RVA = "0xCC2B38", Offset = "0xCC2B38", VA = "0xCC2B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8458DC", Offset = "0x8458DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600050C")]
			[Address(RVA = "0xCC2B40", Offset = "0xCC2B40", VA = "0xCC2B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8458EC", Offset = "0x8458EC")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x600050D")]
			[Address(RVA = "0xCC2B4C", Offset = "0xCC2B4C", VA = "0xCC2B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8458FC", Offset = "0x8458FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600050E")]
			[Address(RVA = "0xCC2B54", Offset = "0xCC2B54", VA = "0xCC2B54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84590C", Offset = "0x84590C")]
			internal set
			{
			}
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xCC2B64", Offset = "0xCC2B64", VA = "0xCC2B64", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xCC2BD0", Offset = "0xCC2BD0", VA = "0xCC2BD0", Slot = "5")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xCC2BDC", Offset = "0xCC2BDC", VA = "0xCC2BDC")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000138")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x2000139")]
		public enum KernelSize
		{
			[Token(Token = "0x4000A38")]
			Small,
			[Token(Token = "0x4000A39")]
			Medium,
			[Token(Token = "0x4000A3A")]
			Large,
			[Token(Token = "0x4000A3B")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x200013A")]
		public struct Settings
		{
			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x841570", Offset = "0x841570")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841570", Offset = "0x841570")]
			public float focusDistance;

			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8415C4", Offset = "0x8415C4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8415C4", Offset = "0x8415C4")]
			public float aperture;

			[Token(Token = "0x4000A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841620", Offset = "0x841620")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841620", Offset = "0x841620")]
			public float focalLength;

			[Token(Token = "0x4000A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841678", Offset = "0x841678")]
			public bool useCameraFov;

			[Token(Token = "0x4000A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8416B0", Offset = "0x8416B0")]
			public KernelSize kernelSize;

			[Token(Token = "0x1700008C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600051E")]
				[Address(RVA = "0xB7B2E4", Offset = "0xB7B2E4", VA = "0xB7B2E4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700008B")]
		public Settings settings
		{
			[Token(Token = "0x600051A")]
			[Address(RVA = "0xCC5114", Offset = "0xCC5114", VA = "0xCC5114")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600051B")]
			[Address(RVA = "0xCC5B50", Offset = "0xCC5B50", VA = "0xCC5B50")]
			set
			{
			}
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xCC5B64", Offset = "0xCC5B64", VA = "0xCC5B64", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0xCC5BB4", Offset = "0xCC5BB4", VA = "0xCC5BB4")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013B")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200013C")]
		public struct Settings
		{
			[Token(Token = "0x1700008E")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000523")]
				[Address(RVA = "0xB7B3A8", Offset = "0xB7B3A8", VA = "0xB7B3A8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700008D")]
		public Settings settings
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0xCC6300", Offset = "0xCC6300", VA = "0xCC6300")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000520")]
			[Address(RVA = "0xCC6308", Offset = "0xCC6308", VA = "0xCC6308")]
			set
			{
			}
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xCC6310", Offset = "0xCC6310", VA = "0xCC6310", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xCC6338", Offset = "0xCC6338", VA = "0xCC6338")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013D")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x200013E")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x4000A44")]
			Progressive,
			[Token(Token = "0x4000A45")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x200013F")]
		public struct Settings
		{
			[Token(Token = "0x4000A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841708", Offset = "0x841708")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841708", Offset = "0x841708")]
			public float lowPercent;

			[Token(Token = "0x4000A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841760", Offset = "0x841760")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841760", Offset = "0x841760")]
			public float highPercent;

			[Token(Token = "0x4000A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8417B8", Offset = "0x8417B8")]
			public float minLuminance;

			[Token(Token = "0x4000A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8417F0", Offset = "0x8417F0")]
			public float maxLuminance;

			[Token(Token = "0x4000A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x841828", Offset = "0x841828")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841828", Offset = "0x841828")]
			public float keyValue;

			[Token(Token = "0x4000A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841878", Offset = "0x841878")]
			public bool dynamicKeyValue;

			[Token(Token = "0x4000A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8418B0", Offset = "0x8418B0")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x8418E8", Offset = "0x8418E8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8418E8", Offset = "0x8418E8")]
			public float speedUp;

			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841938", Offset = "0x841938")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x841938", Offset = "0x841938")]
			public float speedDown;

			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841988", Offset = "0x841988")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841988", Offset = "0x841988")]
			public int logMin;

			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8419DC", Offset = "0x8419DC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8419DC", Offset = "0x8419DC")]
			public int logMax;

			[Token(Token = "0x17000090")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000528")]
				[Address(RVA = "0xB7B564", Offset = "0xB7B564", VA = "0xB7B564")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700008F")]
		public Settings settings
		{
			[Token(Token = "0x6000524")]
			[Address(RVA = "0xB87220", Offset = "0xB87220", VA = "0xB87220")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000525")]
			[Address(RVA = "0xB880D0", Offset = "0xB880D0", VA = "0xB880D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xB880F0", Offset = "0xB880F0", VA = "0xB880F0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0xB88144", Offset = "0xB88144", VA = "0xB88144")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000140")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000141")]
		public struct Settings
		{
			[Token(Token = "0x4000A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841A40", Offset = "0x841A40")]
			public bool excludeSkybox;

			[Token(Token = "0x17000092")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600052D")]
				[Address(RVA = "0xB7B6C4", Offset = "0xB7B6C4", VA = "0xB7B6C4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000091")]
		public Settings settings
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0xB88E44", Offset = "0xB88E44", VA = "0xB88E44")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600052A")]
			[Address(RVA = "0xB88EB8", Offset = "0xB88EB8", VA = "0xB88EB8")]
			set
			{
			}
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xB88EC0", Offset = "0xB88EC0", VA = "0xB88EC0", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xB88EE8", Offset = "0xB88EE8", VA = "0xB88EE8")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000142")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000143")]
		public struct Settings
		{
			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841A88", Offset = "0x841A88")]
			public bool colored;

			[Token(Token = "0x4000A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841AC0", Offset = "0x841AC0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841AC0", Offset = "0x841AC0")]
			public float intensity;

			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841B14", Offset = "0x841B14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841B14", Offset = "0x841B14")]
			public float size;

			[Token(Token = "0x4000A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841B6C", Offset = "0x841B6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841B6C", Offset = "0x841B6C")]
			public float luminanceContribution;

			[Token(Token = "0x17000094")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000532")]
				[Address(RVA = "0xB7C988", Offset = "0xB7C988", VA = "0xB7C988")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000093")]
		public Settings settings
		{
			[Token(Token = "0x600052E")]
			[Address(RVA = "0xB8DDEC", Offset = "0xB8DDEC", VA = "0xB8DDEC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600052F")]
			[Address(RVA = "0xB8E264", Offset = "0xB8E264", VA = "0xB8E264")]
			set
			{
			}
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xB8E270", Offset = "0xB8E270", VA = "0xB8E270", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xB8E29C", Offset = "0xB8E29C", VA = "0xB8E29C")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000144")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000145")]
		public struct Settings
		{
			[Token(Token = "0x4000A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841BD0", Offset = "0x841BD0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841BD0", Offset = "0x841BD0")]
			public float shutterAngle;

			[Token(Token = "0x4000A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841C28", Offset = "0x841C28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841C28", Offset = "0x841C28")]
			public int sampleCount;

			[Token(Token = "0x4000A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841C80", Offset = "0x841C80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841C80", Offset = "0x841C80")]
			public float frameBlending;

			[Token(Token = "0x17000096")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000537")]
				[Address(RVA = "0xB81A58", Offset = "0xB81A58", VA = "0xB81A58")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000095")]
		public Settings settings
		{
			[Token(Token = "0x6000533")]
			[Address(RVA = "0xB99C30", Offset = "0xB99C30", VA = "0xB99C30")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000534")]
			[Address(RVA = "0xB9A408", Offset = "0xB9A408", VA = "0xB9A408")]
			set
			{
			}
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xB9A414", Offset = "0xB9A414", VA = "0xB9A414", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xB9A440", Offset = "0xB9A440", VA = "0xB9A440")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000146")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x2000147")]
		public enum SSRResolution
		{
			[Token(Token = "0x4000A5E")]
			High = 0,
			[Token(Token = "0x4000A5F")]
			Low = 2
		}

		[Token(Token = "0x2000148")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x4000A61")]
			PhysicallyBased,
			[Token(Token = "0x4000A62")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x2000149")]
		public struct IntensitySettings
		{
			[Token(Token = "0x4000A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841CE4", Offset = "0x841CE4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841CE4", Offset = "0x841CE4")]
			public float reflectionMultiplier;

			[Token(Token = "0x4000A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841D38", Offset = "0x841D38")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841D38", Offset = "0x841D38")]
			public float fadeDistance;

			[Token(Token = "0x4000A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841D90", Offset = "0x841D90")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841D90", Offset = "0x841D90")]
			public float fresnelFade;

			[Token(Token = "0x4000A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841DE4", Offset = "0x841DE4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841DE4", Offset = "0x841DE4")]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x200014A")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4000A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841E3C", Offset = "0x841E3C")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4000A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841E74", Offset = "0x841E74")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841EAC", Offset = "0x841EAC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841EAC", Offset = "0x841EAC")]
			public float maxDistance;

			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841F08", Offset = "0x841F08")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841F08", Offset = "0x841F08")]
			public int iterationCount;

			[Token(Token = "0x4000A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841F60", Offset = "0x841F60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841F60", Offset = "0x841F60")]
			public int stepSize;

			[Token(Token = "0x4000A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x841FB4", Offset = "0x841FB4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x841FB4", Offset = "0x841FB4")]
			public float widthModifier;

			[Token(Token = "0x4000A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84200C", Offset = "0x84200C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84200C", Offset = "0x84200C")]
			public float reflectionBlur;

			[Token(Token = "0x4000A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842064", Offset = "0x842064")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x200014B")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x4000A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84209C", Offset = "0x84209C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84209C", Offset = "0x84209C")]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x200014C")]
		public struct Settings
		{
			[Token(Token = "0x4000A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x4000A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x4000A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x17000098")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600053C")]
				[Address(RVA = "0xB84E48", Offset = "0xB84E48", VA = "0xB84E48")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000097")]
		public Settings settings
		{
			[Token(Token = "0x6000538")]
			[Address(RVA = "0xCD1DBC", Offset = "0xCD1DBC", VA = "0xCD1DBC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000539")]
			[Address(RVA = "0xCD1E60", Offset = "0xCD1E60", VA = "0xCD1E60")]
			set
			{
			}
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xCD1E80", Offset = "0xCD1E80", VA = "0xCD1E80", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xCC9034", Offset = "0xCC9034", VA = "0xCC9034")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014D")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200014E")]
		public struct Settings
		{
			[Token(Token = "0x4000A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842100", Offset = "0x842100")]
			public Texture2D lut;

			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x842138", Offset = "0x842138")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842138", Offset = "0x842138")]
			public float contribution;

			[Token(Token = "0x1700009A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000541")]
				[Address(RVA = "0x20A4A08", Offset = "0x20A4A08", VA = "0x20A4A08")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000099")]
		public Settings settings
		{
			[Token(Token = "0x600053D")]
			[Address(RVA = "0xB71B08", Offset = "0xB71B08", VA = "0xB71B08")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x600053E")]
			[Address(RVA = "0xB71E10", Offset = "0xB71E10", VA = "0xB71E10")]
			set
			{
			}
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xB71E20", Offset = "0xB71E20", VA = "0xB71E20", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xB71E54", Offset = "0xB71E54", VA = "0xB71E54")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014F")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x2000150")]
		public enum Mode
		{
			[Token(Token = "0x4000A78")]
			Classic,
			[Token(Token = "0x4000A79")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x2000151")]
		public struct Settings
		{
			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84219C", Offset = "0x84219C")]
			public Mode mode;

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8421D4", Offset = "0x8421D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8421D4", Offset = "0x8421D4")]
			public Color color;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842224", Offset = "0x842224")]
			public Vector2 center;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84225C", Offset = "0x84225C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84225C", Offset = "0x84225C")]
			public float intensity;

			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8422B0", Offset = "0x8422B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8422B0", Offset = "0x8422B0")]
			public float smoothness;

			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x842308", Offset = "0x842308")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842308", Offset = "0x842308")]
			public float roundness;

			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84235C", Offset = "0x84235C")]
			public Texture mask;

			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x842394", Offset = "0x842394")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842394", Offset = "0x842394")]
			public float opacity;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8423E8", Offset = "0x8423E8")]
			public bool rounded;

			[Token(Token = "0x1700009C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6000546")]
				[Address(RVA = "0x20A4B58", Offset = "0x20A4B58", VA = "0x20A4B58")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700009B")]
		public Settings settings
		{
			[Token(Token = "0x6000542")]
			[Address(RVA = "0xB74FAC", Offset = "0xB74FAC", VA = "0xB74FAC")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6000543")]
			[Address(RVA = "0xB75018", Offset = "0xB75018", VA = "0xB75018")]
			set
			{
			}
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xB75044", Offset = "0xB75044", VA = "0xB75044", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xB750B4", Offset = "0xB750B4", VA = "0xB750B4")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x83C080", Offset = "0x83C080")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83C080", Offset = "0x83C080")]
	[ImageEffectAllowedInSceneView]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x20E4908", Offset = "0x20E4908", VA = "0x20E4908")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x20E51E0", Offset = "0x20E51E0", VA = "0x20E51E0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x20E5BC4", Offset = "0x20E5BC4", VA = "0x20E5BC4")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x20E5CFC", Offset = "0x20E5CFC", VA = "0x20E5CFC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x20E5E0C", Offset = "0x20E5E0C", VA = "0x20E5E0C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x20E6404", Offset = "0x20E6404", VA = "0x20E6404")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x20E65CC", Offset = "0x20E65CC", VA = "0x20E65CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x20E6810", Offset = "0x20E6810", VA = "0x20E6810")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x20E58A0", Offset = "0x20E58A0", VA = "0x20E58A0")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x20E5758", Offset = "0x20E5758", VA = "0x20E5758")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x6000551")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6000552")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6000553")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x6000554")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x6000555")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x6000556")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x20E685C", Offset = "0x20E685C", VA = "0x20E685C")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x1700009D")]
		public abstract bool active
		{
			[Token(Token = "0x6000559")]
			get;
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xCC8AF4", Offset = "0xCC8AF4", VA = "0xCC8AF4", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xCC8AFC", Offset = "0xCC8AFC", VA = "0xCC8AFC", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xCC8B00", Offset = "0xCC8B00", VA = "0xCC8B00", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x600055C")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xCC8B04", Offset = "0xCC8B04", VA = "0xCC8B04")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x842420", Offset = "0x842420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842420", Offset = "0x842420")]
		private T <model>k__BackingField;

		[Token(Token = "0x1700009E")]
		public T model
		{
			[Token(Token = "0x600055E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84591C", Offset = "0x84591C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600055F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84592C", Offset = "0x84592C")]
			internal set
			{
			}
		}

		[Token(Token = "0x6000560")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x6000561")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x6000562")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6000563")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x6000564")]
		public abstract string GetName();

		[Token(Token = "0x6000565")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x6000566")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6000567")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x6000568")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class PostProcessingContext
	{
		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84245C", Offset = "0x84245C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84245C", Offset = "0x84245C")]
		private bool <interrupted>k__BackingField;

		[Token(Token = "0x1700009F")]
		public bool interrupted
		{
			[Token(Token = "0x6000569")]
			[Address(RVA = "0xCC8B0C", Offset = "0xCC8B0C", VA = "0xCC8B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84593C", Offset = "0x84593C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600056A")]
			[Address(RVA = "0xCC8B14", Offset = "0xCC8B14", VA = "0xCC8B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84594C", Offset = "0x84594C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x600056D")]
			[Address(RVA = "0xCC8B8C", Offset = "0xCC8B8C", VA = "0xCC8B8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A1")]
		public bool isHdr
		{
			[Token(Token = "0x600056E")]
			[Address(RVA = "0xCC8BB8", Offset = "0xCC8BB8", VA = "0xCC8BB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A2")]
		public int width
		{
			[Token(Token = "0x600056F")]
			[Address(RVA = "0xCC8BD4", Offset = "0xCC8BD4", VA = "0xCC8BD4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A3")]
		public int height
		{
			[Token(Token = "0x6000570")]
			[Address(RVA = "0xCC8BF0", Offset = "0xCC8BF0", VA = "0xCC8BF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A4")]
		public Rect viewport
		{
			[Token(Token = "0x6000571")]
			[Address(RVA = "0xCC8C0C", Offset = "0xCC8C0C", VA = "0xCC8C0C")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xCC8B20", Offset = "0xCC8B20", VA = "0xCC8B20")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xCC8B2C", Offset = "0xCC8B2C", VA = "0xCC8B2C")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xCC8C28", Offset = "0xCC8C28", VA = "0xCC8C28")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000158")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "GetSetAttribute", RVA = "0x842498", Offset = "0x842498")]
		private bool m_Enabled;

		[Token(Token = "0x170000A5")]
		public bool enabled
		{
			[Token(Token = "0x6000573")]
			[Address(RVA = "0xCC8C30", Offset = "0xCC8C30", VA = "0xCC8C30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000574")]
			[Address(RVA = "0xCC8C38", Offset = "0xCC8C38", VA = "0xCC8C38")]
			set
			{
			}
		}

		[Token(Token = "0x6000575")]
		public abstract void Reset();

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xCC8C54", Offset = "0xCC8C54", VA = "0xCC8C54", Slot = "5")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xCC8C58", Offset = "0xCC8C58", VA = "0xCC8C58")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xCC8C60", Offset = "0xCC8C60", VA = "0xCC8C60")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015A")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xCC2A80", Offset = "0xCC2A80", VA = "0xCC2A80")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xCC1A74", Offset = "0xCC1A74", VA = "0xCC1A74")]
		public void Cache()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xCC1C5C", Offset = "0xCC1C5C", VA = "0xCC1C5C")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200015B")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x170000A6")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0xB88E4C", Offset = "0xB88E4C", VA = "0xB88E4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A7")]
		public static bool supportsDX11
		{
			[Token(Token = "0x600057D")]
			[Address(RVA = "0xB8E2D0", Offset = "0xB8E2D0", VA = "0xB8E2D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A8")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x600057E")]
			[Address(RVA = "0xB8E300", Offset = "0xB8E300", VA = "0xB8E300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		public static Mesh quad
		{
			[Token(Token = "0x600057F")]
			[Address(RVA = "0xB8E454", Offset = "0xB8E454", VA = "0xB8E454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xB8E6E0", Offset = "0xB8E6E0", VA = "0xB8E6E0")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xB8E7E4", Offset = "0xB8E7E4", VA = "0xB8E7E4")]
		public static void ClearAndBlit(Texture source, RenderTexture destination, Material material, int pass, bool clearColor = true, bool clearDepth = false)
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xB87098", Offset = "0xB87098", VA = "0xB87098")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xB8E97C", Offset = "0xB8E97C", VA = "0xB8E97C")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xB98714", Offset = "0xB98714", VA = "0xB98714")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xB87CAC", Offset = "0xB87CAC", VA = "0xB87CAC")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xB98798", Offset = "0xB98798", VA = "0xB98798", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xCCB688", Offset = "0xCCB688", VA = "0xCCB688")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xCCB70C", Offset = "0xCCB70C", VA = "0xCCB70C")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xCCB828", Offset = "0xCCB828", VA = "0xCCB828")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xCCB918", Offset = "0xCCB918", VA = "0xCCB918")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xCCBA58", Offset = "0xCCBA58", VA = "0xCCBA58")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xCCBB28", Offset = "0xCCBB28", VA = "0xCCBB28", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace Kino
{
	[Token(Token = "0x200015E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83C138", Offset = "0x83C138")]
	[ImageEffectAllowedInSceneView]
	public class Bloom : MonoBehaviour
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842514", Offset = "0x842514")]
		private float _threshold;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x842560", Offset = "0x842560")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842560", Offset = "0x842560")]
		private float _softKnee;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8425C4", Offset = "0x8425C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8425C4", Offset = "0x8425C4")]
		[SerializeField]
		private float _radius;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842628", Offset = "0x842628")]
		private float _intensity;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842674", Offset = "0x842674")]
		[SerializeField]
		private bool _highQuality;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8426C0", Offset = "0x8426C0")]
		[SerializeField]
		private bool _antiFlicker;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private Shader _shader;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _material;

		[Token(Token = "0x4000AC8")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture[] _blurBuffer1;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture[] _blurBuffer2;

		[Token(Token = "0x170000AA")]
		public float thresholdGamma
		{
			[Token(Token = "0x600058D")]
			[Address(RVA = "0xC37304", Offset = "0xC37304", VA = "0xC37304")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600058E")]
			[Address(RVA = "0xC37314", Offset = "0xC37314", VA = "0xC37314")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public float thresholdLinear
		{
			[Token(Token = "0x600058F")]
			[Address(RVA = "0xC3731C", Offset = "0xC3731C", VA = "0xC3731C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000590")]
			[Address(RVA = "0xC37348", Offset = "0xC37348", VA = "0xC37348")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public float softKnee
		{
			[Token(Token = "0x6000591")]
			[Address(RVA = "0xC37378", Offset = "0xC37378", VA = "0xC37378")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000592")]
			[Address(RVA = "0xC37380", Offset = "0xC37380", VA = "0xC37380")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public float radius
		{
			[Token(Token = "0x6000593")]
			[Address(RVA = "0xC37388", Offset = "0xC37388", VA = "0xC37388")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000594")]
			[Address(RVA = "0xC37390", Offset = "0xC37390", VA = "0xC37390")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public float intensity
		{
			[Token(Token = "0x6000595")]
			[Address(RVA = "0xC37398", Offset = "0xC37398", VA = "0xC37398")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000596")]
			[Address(RVA = "0xC373A8", Offset = "0xC373A8", VA = "0xC373A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public bool highQuality
		{
			[Token(Token = "0x6000597")]
			[Address(RVA = "0xC373B0", Offset = "0xC373B0", VA = "0xC373B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000598")]
			[Address(RVA = "0xC373B8", Offset = "0xC373B8", VA = "0xC373B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public bool antiFlicker
		{
			[Token(Token = "0x6000599")]
			[Address(RVA = "0xC373C4", Offset = "0xC373C4", VA = "0xC373C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600059A")]
			[Address(RVA = "0xC373CC", Offset = "0xC373CC", VA = "0xC373CC")]
			set
			{
			}
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xC37370", Offset = "0xC37370", VA = "0xC37370")]
		private float LinearToGamma(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xC37340", Offset = "0xC37340", VA = "0xC37340")]
		private float GammaToLinear(float x)
		{
			return default(float);
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xC373D8", Offset = "0xC373D8", VA = "0xC373D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xC374CC", Offset = "0xC374CC", VA = "0xC374CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xC37534", Offset = "0xC37534", VA = "0xC37534")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xC37CA8", Offset = "0xC37CA8", VA = "0xC37CA8")]
		public Bloom()
		{
		}
	}
}
namespace ToonyColorsPro
{
	[Token(Token = "0x200015F")]
	public class TCP2_Demo_Interactive_Content : MonoBehaviour
	{
		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pivot;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform textBox;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x842744", Offset = "0x842744")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842744", Offset = "0x842744")]
		public string Text;

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xF9E8E8", Offset = "0xF9E8E8", VA = "0xF9E8E8")]
		public TCP2_Demo_Interactive_Content()
		{
		}
	}
}
namespace ToonyColorsPro.Runtime
{
	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83C1B8", Offset = "0x83C1B8")]
	[ExecuteInEditMode]
	public class TCP2_CameraDepth : MonoBehaviour
	{
		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool RenderDepth;

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xCD59D8", Offset = "0xCD59D8", VA = "0xCD59D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xCD5A5C", Offset = "0xCD5A5C", VA = "0xCD5A5C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xCD59DC", Offset = "0xCD59DC", VA = "0xCD59DC")]
		private void SetCameraDepth()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xCD5A60", Offset = "0xCD5A60", VA = "0xCD5A60")]
		public TCP2_CameraDepth()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class TCP2_GetPosOnWater : MonoBehaviour
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material WaterMaterial;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84277C", Offset = "0x84277C")]
		public float heightScale;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8427B4", Offset = "0x8427B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8427B4", Offset = "0x8427B4")]
		public bool followWaterHeight;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842800", Offset = "0x842800")]
		public float heightOffset;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842838", Offset = "0x842838")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842838", Offset = "0x842838")]
		public bool followWaterNormal;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842884", Offset = "0x842884")]
		public Vector3 upAxis;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8428BC", Offset = "0x8428BC")]
		public Vector3 postRotation;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private bool isValid;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[HideInInspector]
		private int sineCount;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] sinePosOffsetsX;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] sinePosOffsetsZ;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] sinePhsOffsetsX;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] sinePhsOffsetsZ;

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xFA0D24", Offset = "0xFA0D24", VA = "0xFA0D24")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xFA0E54", Offset = "0xFA0E54", VA = "0xFA0E54")]
		public Vector3 GetPositionOnWater(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xFA17FC", Offset = "0xFA17FC", VA = "0xFA17FC")]
		public Vector3 GetNormalOnWater(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xFA2384", Offset = "0xFA2384", VA = "0xFA2384")]
		public TCP2_GetPosOnWater()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class TCP2_GetVertexWavesPosition : MonoBehaviour
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform WaterPlane;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842964", Offset = "0x842964")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842964", Offset = "0x842964")]
		public bool followWaterHeight;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float heightOffset;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8429B0", Offset = "0x8429B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8429B0", Offset = "0x8429B0")]
		public bool followWaterNormal;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8429FC", Offset = "0x8429FC")]
		public Vector3 upAxis;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842A34", Offset = "0x842A34")]
		public Vector3 postRotation;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842A6C", Offset = "0x842A6C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842A6C", Offset = "0x842A6C")]
		public int sineCount;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842AB8", Offset = "0x842AB8")]
		public float WavesSpeed;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float WavesHeight;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float WavesFrequency;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842AC8", Offset = "0x842AC8")]
		public bool useCustomTime;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool customSineValues;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector4 sinOffsets1;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector4 phaseOffsets1;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Vector4 sinOffsets2;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Vector4 phaseOffsets2;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector4 sinOffsets3;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Vector4 phaseOffsets3;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Vector4 sinOffsets4;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Vector4 phaseOffsets4;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _Time;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int LastFrameTimeSampling;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float ShaderTime;

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xFA24F8", Offset = "0xFA24F8", VA = "0xFA24F8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xFA2DD0", Offset = "0xFA2DD0", VA = "0xFA2DD0")]
		private Vector4 CalculateSinePosition(float v1, float v2, Vector4 sinOffsets, Vector4 phaseOffsets, ref float phase)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xFA2EB8", Offset = "0xFA2EB8", VA = "0xFA2EB8")]
		private Vector4 CalculateSineNormal(float v1, float v2, Vector4 sinOffsets, Vector4 phaseOffsets, ref float phase)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xFA274C", Offset = "0xFA274C", VA = "0xFA274C")]
		public Vector3 GetPositionOnWater_SG2(float time, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xFA2A90", Offset = "0xFA2A90", VA = "0xFA2A90")]
		public Vector3 GetNormalOnWater_SG2(float time, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xFA2FB0", Offset = "0xFA2FB0", VA = "0xFA2FB0")]
		public TCP2_GetVertexWavesPosition()
		{
		}
	}
	[Token(Token = "0x2000163")]
	[ExecuteInEditMode]
	public class TCP2_PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int textureSize;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public RenderTextureFormat renderTextureFormat;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool disablePixelLights;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float clipPlaneOffset;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842B58", Offset = "0x842B58")]
		public bool useCustomBackgroundColor;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color backgroundColor;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842B68", Offset = "0x842B68")]
		public bool applyBlur;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x842B78", Offset = "0x842B78")]
		public int blurIterations;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x842B90", Offset = "0x842B90")]
		public float blurDistance;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool useBlurDepth;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float blurDepthRange;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera reflectionCamera;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture reflectionRenderTexture;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material blurMaterial;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CommandBuffer commandBufferBlur;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Shader reflectionDepthShader;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RenderTexture reflectionDepthRenderTexture;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool isURP;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideRendering;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _ShaderID_ReflectionTex;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _ShaderID_ReflectionDepthTex;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _ShaderID_ReflectivePlaneY;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _ShaderID_ReflectionDepthRange;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _ShaderID_UseReflectionDepth;

		[Token(Token = "0x170000B1")]
		private static int ShaderID_ReflectionTex
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0xFA3254", Offset = "0xFA3254", VA = "0xFA3254")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B2")]
		private static int ShaderID_ReflectionDepthTex
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0xFA332C", Offset = "0xFA332C", VA = "0xFA332C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B3")]
		private static int ShaderID_ReflectivePlaneY
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xFA3408", Offset = "0xFA3408", VA = "0xFA3408")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B4")]
		private static int ShaderID_ReflectionDepthRange
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0xFA34E4", Offset = "0xFA34E4", VA = "0xFA34E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B5")]
		private static int ShaderID_UseReflectionDepth
		{
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0xFA35C0", Offset = "0xFA35C0", VA = "0xFA35C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xFA369C", Offset = "0xFA369C", VA = "0xFA369C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xFA3D64", Offset = "0xFA3D64", VA = "0xFA3D64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xFA3FA8", Offset = "0xFA3FA8", VA = "0xFA3FA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xFA36C0", Offset = "0xFA36C0", VA = "0xFA36C0")]
		private void UpdateRenderTexture()
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xFA421C", Offset = "0xFA421C", VA = "0xFA421C")]
		private void ClearRenderTexture()
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xFA3818", Offset = "0xFA3818", VA = "0xFA3818")]
		private void UpdateCommandBuffer()
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xFA413C", Offset = "0xFA413C", VA = "0xFA413C")]
		private void ClearCommandBuffer()
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xFA42E0", Offset = "0xFA42E0", VA = "0xFA42E0")]
		public void BeginCameraRendering_Bultin(Camera camera)
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xFA4E98", Offset = "0xFA4E98", VA = "0xFA4E98")]
		public void BeginCameraRendering_URP(ScriptableRenderContext context, Camera camera)
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xFA452C", Offset = "0xFA452C", VA = "0xFA452C")]
		public void RenderPlanarReflection(Camera worldCamera)
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xFA5388", Offset = "0xFA5388", VA = "0xFA5388")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xFA50E4", Offset = "0xFA50E4", VA = "0xFA50E4")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xFA54B4", Offset = "0xFA54B4", VA = "0xFA54B4")]
		public TCP2_PlanarReflection()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public static class TCP2_RuntimeUtils
	{
		[Token(Token = "0x4000B0C")]
		private const string BASE_SHADER_PATH = "Toony Colors Pro 2/";

		[Token(Token = "0x4000B0D")]
		private const string VARIANT_SHADER_PATH = "Hidden/Toony Colors Pro 2/Variants/";

		[Token(Token = "0x4000B0E")]
		private const string BASE_SHADER_NAME = "Desktop";

		[Token(Token = "0x4000B0F")]
		private const string BASE_SHADER_NAME_MOB = "Mobile";

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string[]> ShaderVariants;

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xFA55A0", Offset = "0xFA55A0", VA = "0xFA55A0")]
		public static Shader GetShaderWithKeywords(Material material)
		{
			return null;
		}
	}
	[Token(Token = "0x2000165")]
	public class TCP2_ShaderUpdateUnityTime : MonoBehaviour
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int UnityTime;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int CustomTime;

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xFA6068", Offset = "0xFA6068", VA = "0xFA6068")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xFA6170", Offset = "0xFA6170", VA = "0xFA6170")]
		public TCP2_ShaderUpdateUnityTime()
		{
		}
	}
}
namespace ToonyColorsPro.Demo
{
	[Token(Token = "0x2000166")]
	public class TCP2_Demo_Camera : MonoBehaviour
	{
		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Pivot;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pivotOffset;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842BA8", Offset = "0x842BA8")]
		public float OrbitStrg;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float OrbitClamp;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842BE0", Offset = "0x842BE0")]
		public float PanStrgMin;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float PanStrgMax;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842C18", Offset = "0x842C18")]
		public float ZoomStrg;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ZoomClamp;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ZoomDistMin;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float ZoomDistMax;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842C50", Offset = "0x842C50")]
		public float Decceleration;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RectTransform ignoreMouseRect;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rect ignoreMouseActualRect;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 mouseDelta;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 orbitAcceleration;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 panAcceleration;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 moveAcceleration;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float zoomAcceleration;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float zoomDistance;

		[Token(Token = "0x4000B26")]
		private const float XMax = 60f;

		[Token(Token = "0x4000B27")]
		private const float XMin = 300f;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 mResetCamPos;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 mResetPivotPos;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 mResetCamRot;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 mResetPivotRot;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool leftMouseHeld;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool rightMouseHeld;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool middleMouseHeld;

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xCD8BD4", Offset = "0xCD8BD4", VA = "0xCD8BD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xCD8C60", Offset = "0xCD8C60", VA = "0xCD8C60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xCD8DB0", Offset = "0xCD8DB0", VA = "0xCD8DB0")]
		private void Update()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xCD94C8", Offset = "0xCD94C8", VA = "0xCD94C8")]
		public void ResetView()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xCD9598", Offset = "0xCD9598", VA = "0xCD9598")]
		public TCP2_Demo_Camera()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class TCP2_Demo_Cat : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000168")]
		public class Ambience
		{
			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject[] activate;

			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material skybox;

			[Token(Token = "0x60005DF")]
			[Address(RVA = "0xB85458", Offset = "0xB85458", VA = "0xB85458")]
			public Ambience()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000169")]
		public class ShaderStyle
		{
			[Serializable]
			[Token(Token = "0x200016A")]
			public class CharacterSettings
			{
				[Token(Token = "0x4000B52")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Material material;

				[Token(Token = "0x4000B53")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Renderer[] renderers;

				[Token(Token = "0x60005E1")]
				[Address(RVA = "0x20A530C", Offset = "0x20A530C", VA = "0x20A530C")]
				public CharacterSettings()
				{
				}
			}

			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CharacterSettings[] settings;

			[Token(Token = "0x60005E0")]
			[Address(RVA = "0xB85460", Offset = "0xB85460", VA = "0xB85460")]
			public ShaderStyle()
			{
			}
		}

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ambience[] ambiences;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int amb;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842C88", Offset = "0x842C88")]
		public ShaderStyle[] styles;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int style;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842C98", Offset = "0x842C98")]
		public GameObject shadedGroup;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject flatGroup;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842CA8", Offset = "0x842CA8")]
		public Animation[] catAnimation;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Animation[] unityChanAnimation;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842CB8", Offset = "0x842CB8")]
		public GameObject[] cats;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject[] unityChans;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject unityChanCopyright;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842CC8", Offset = "0x842CC8")]
		public Light catDirLight;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Light unityChanDirLight;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842CD8", Offset = "0x842CD8")]
		public AnimationClip[] catAnimations;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int catAnim;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationClip[] unityChanAnimations;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int uchanAnim;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842CE8", Offset = "0x842CE8")]
		public Light[] dirLights;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Light[] otherLights;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform rotatingPointLights;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x842CF8", Offset = "0x842CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842CF8", Offset = "0x842CF8")]
		private bool <rotateLights>k__BackingField;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x842D34", Offset = "0x842D34")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x842D34", Offset = "0x842D34")]
		private bool <rotatePointLights>k__BackingField;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842D70", Offset = "0x842D70")]
		public Button[] ambiencesButtons;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Button[] stylesButtons;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Button[] characterButtons;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Button[] textureButtons;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Button[] animationButtons;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842D80", Offset = "0x842D80")]
		public Canvas canvas;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool animationPaused;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float playingSpeed;

		[Token(Token = "0x170000B6")]
		public bool rotateLights
		{
			[Token(Token = "0x60005CE")]
			[Address(RVA = "0xCD95C0", Offset = "0xCD95C0", VA = "0xCD95C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84595C", Offset = "0x84595C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005CF")]
			[Address(RVA = "0xCD95C8", Offset = "0xCD95C8", VA = "0xCD95C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84596C", Offset = "0x84596C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public bool rotatePointLights
		{
			[Token(Token = "0x60005D0")]
			[Address(RVA = "0xCD95D4", Offset = "0xCD95D4", VA = "0xCD95D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84597C", Offset = "0x84597C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0xCD95DC", Offset = "0xCD95DC", VA = "0xCD95DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84598C", Offset = "0x84598C")]
			set
			{
			}
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xCD95E8", Offset = "0xCD95E8", VA = "0xCD95E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xCDA164", Offset = "0xCDA164", VA = "0xCDA164")]
		private void Update()
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xCD9640", Offset = "0xCD9640", VA = "0xCD9640")]
		public void SetAmbience(int index)
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xCD9878", Offset = "0xCD9878", VA = "0xCD9878")]
		public void SetStyle(int index)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xCD9D24", Offset = "0xCD9D24", VA = "0xCD9D24")]
		public void SetFlat(bool flat)
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xCD9A68", Offset = "0xCD9A68", VA = "0xCD9A68")]
		public void SetCat(bool cat)
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xCDA5D4", Offset = "0xCDA5D4", VA = "0xCDA5D4")]
		public void SetLightShadows(bool on)
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xCD9F1C", Offset = "0xCD9F1C", VA = "0xCD9F1C")]
		public void SetAnimation(int index)
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xCDA6A4", Offset = "0xCDA6A4", VA = "0xCDA6A4")]
		public void SetAnimationSpeed(float speed)
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xCDAC08", Offset = "0xCDAC08", VA = "0xCDAC08")]
		public void PauseUnpauseAnimation(bool play)
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xCDA6AC", Offset = "0xCDA6AC", VA = "0xCDA6AC")]
		private void UpdateAnimSpeed()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xCDA45C", Offset = "0xCDA45C", VA = "0xCDA45C")]
		private void PlayCurrentAnimation(float time = -1f)
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xCDAC18", Offset = "0xCDAC18", VA = "0xCDAC18")]
		public TCP2_Demo_Cat()
		{
		}
	}
	[Token(Token = "0x200016B")]
	[ExecuteInEditMode]
	public class TCP2_Demo_GammaLinear : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200016C")]
		public class LightSettings
		{
			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Light light;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float gammaIntensity;

			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float linearIntensity;

			[Token(Token = "0x60005E3")]
			[Address(RVA = "0xB85468", Offset = "0xB85468", VA = "0xB85468")]
			public LightSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200016D")]
		public class MaterialSettings
		{
			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material material;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color gammaColor;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color linearColor;

			[Token(Token = "0x60005E4")]
			[Address(RVA = "0xB85470", Offset = "0xB85470", VA = "0xB85470")]
			public MaterialSettings()
			{
			}
		}

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightSettings[] lights;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialSettings[] materials;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ColorSpace lastColorSpace;

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xCDAC28", Offset = "0xCDAC28", VA = "0xCDAC28")]
		public TCP2_Demo_GammaLinear()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class TCP2_Demo_AnimateMaterial : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200016F")]
		public class AnimatedProperty
		{
			[Token(Token = "0x2000170")]
			public enum MaterialPropertyType
			{
				[Token(Token = "0x4000B6B")]
				Float,
				[Token(Token = "0x4000B6C")]
				Color,
				[Token(Token = "0x4000B6D")]
				Vector4
			}

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MaterialPropertyType Type;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurve Curve;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float Duration;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842D90", Offset = "0x842D90")]
			public float FloatFrom;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float FloatTo;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842DA0", Offset = "0x842DA0")]
			public Color ColorFrom;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Color ColorTo;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842DB0", Offset = "0x842DB0")]
			public Vector4 VectorFrom;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Vector4 VectorTo;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private int propertyId;

			[Token(Token = "0x60005E8")]
			[Address(RVA = "0xB85200", Offset = "0xB85200", VA = "0xB85200")]
			public void Init()
			{
			}

			[Token(Token = "0x60005E9")]
			[Address(RVA = "0xB8522C", Offset = "0xB8522C", VA = "0xB8522C")]
			public void Update(Material material)
			{
			}

			[Token(Token = "0x60005EA")]
			[Address(RVA = "0xB8537C", Offset = "0xB8537C", VA = "0xB8537C")]
			public AnimatedProperty()
			{
			}
		}

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimatedProperty[] animatedProperties;

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xCD8A34", Offset = "0xCD8A34", VA = "0xCD8A34")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xCD8AA8", Offset = "0xCD8AA8", VA = "0xCD8AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xCD8B24", Offset = "0xCD8B24", VA = "0xCD8B24")]
		public TCP2_Demo_AnimateMaterial()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class TCP2_Demo_Interactive : MonoBehaviour
	{
		[Token(Token = "0x2000172")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C248", Offset = "0x83C248")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int ci;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TCP2_Demo_Interactive <>4__this;

			[Token(Token = "0x60005F8")]
			[Address(RVA = "0xB85478", Offset = "0xB85478", VA = "0xB85478")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60005F9")]
			[Address(RVA = "0xB85480", Offset = "0xB85480", VA = "0xB85480")]
			internal void <Awake>b__0()
			{
			}
		}

		[Token(Token = "0x2000173")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C258", Offset = "0x83C258")]
		private sealed class <CR_ResetCamPos>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TCP2_Demo_Interactive <>4__this;

			[Token(Token = "0x4000B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <startPos>5__1;

			[Token(Token = "0x4000B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <endPos>5__2;

			[Token(Token = "0x4000B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion <startQuat>5__3;

			[Token(Token = "0x4000B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Quaternion <endQuat>5__4;

			[Token(Token = "0x4000B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <duration>5__5;

			[Token(Token = "0x4000B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float <time>5__6;

			[Token(Token = "0x4000B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float <delta>5__7;

			[Token(Token = "0x170000B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60005FD")]
				[Address(RVA = "0xB85EA8", Offset = "0xB85EA8", VA = "0xB85EA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60005FF")]
				[Address(RVA = "0xB85EF0", Offset = "0xB85EF0", VA = "0xB85EF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60005FA")]
			[Address(RVA = "0xB85C08", Offset = "0xB85C08", VA = "0xB85C08")]
			[DebuggerHidden]
			public <CR_ResetCamPos>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60005FB")]
			[Address(RVA = "0xB85C34", Offset = "0xB85C34", VA = "0xB85C34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60005FC")]
			[Address(RVA = "0xB85C38", Offset = "0xB85C38", VA = "0xB85C38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60005FE")]
			[Address(RVA = "0xB85EB0", Offset = "0xB85EB0", VA = "0xB85EB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C268", Offset = "0x83C268")]
		private sealed class <CR_MoveToContent>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TCP2_Demo_Interactive_Content content;

			[Token(Token = "0x4000B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TCP2_Demo_Interactive <>4__this;

			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <startPos>5__1;

			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <endPos>5__2;

			[Token(Token = "0x4000B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Quaternion <startQuat>5__3;

			[Token(Token = "0x4000B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Quaternion <endQuat>5__4;

			[Token(Token = "0x4000B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float <duration>5__5;

			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float <time>5__6;

			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private float <delta>5__7;

			[Token(Token = "0x4000BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private float <delta>5__8;

			[Token(Token = "0x170000BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000603")]
				[Address(RVA = "0xB85BB8", Offset = "0xB85BB8", VA = "0xB85BB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000605")]
				[Address(RVA = "0xB85C00", Offset = "0xB85C00", VA = "0xB85C00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000600")]
			[Address(RVA = "0xB854A4", Offset = "0xB854A4", VA = "0xB854A4")]
			[DebuggerHidden]
			public <CR_MoveToContent>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6000601")]
			[Address(RVA = "0xB854D0", Offset = "0xB854D0", VA = "0xB854D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000602")]
			[Address(RVA = "0xB854D4", Offset = "0xB854D4", VA = "0xB854D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000604")]
			[Address(RVA = "0xB85BC0", Offset = "0xB85BC0", VA = "0xB85BC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TCP2_Demo_Camera demoCamera;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera camera;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Canvas canvas;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CanvasScaler canvasScaler;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842DC0", Offset = "0x842DC0")]
		public HorizontalLayoutGroup layoutGroup;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ContentSizeFitter sizeFitter;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842DD0", Offset = "0x842DD0")]
		public RectTransform textBox;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text text;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Image line;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842DE0", Offset = "0x842DE0")]
		public float camAnimDuration;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float maxCamAnimDuration;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool camAnimBasedOnDistance;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float uiAnimDuration;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x842DF0", Offset = "0x842DF0")]
		public Button envButtonTemplate;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Button[] envButtons;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text highlightLabel;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TCP2_Demo_Interactive_Content[] contents;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TCP2_Demo_Interactive_Content currentContent;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int index;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private TCP2_Demo_Interactive_Environment[] lightings;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int lightingIndex;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Color envButtonColor;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 cameraResetPos;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion cameraResetQuat;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform resetPivot;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool coroutineActive;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GameObject infoBox;

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xCDAC30", Offset = "0xCDAC30", VA = "0xCDAC30")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xCDB348", Offset = "0xCDB348", VA = "0xCDB348")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xCDB38C", Offset = "0xCDB38C", VA = "0xCDB38C")]
		private void HandleKeyboard()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xCDB80C", Offset = "0xCDB80C", VA = "0xCDB80C")]
		public void PrevHighlight()
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xCDB730", Offset = "0xCDB730", VA = "0xCDB730")]
		public void NextHighlight()
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xCDB4D8", Offset = "0xCDB4D8", VA = "0xCDB4D8")]
		private void UpdateViewToCurrentContent(float lengthPercent = 1f)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xCDB97C", Offset = "0xCDB97C", VA = "0xCDB97C")]
		private void PlaceLine(Vector2 start, Vector2 end, float lengthPercentage)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xCDB698", Offset = "0xCDB698", VA = "0xCDB698")]
		private void ResetView()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xCDBB28", Offset = "0xCDBB28", VA = "0xCDBB28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84599C", Offset = "0x84599C")]
		private IEnumerator CR_ResetCamPos()
		{
			return null;
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xCDB8E8", Offset = "0xCDB8E8", VA = "0xCDB8E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8459FC", Offset = "0x8459FC")]
		private IEnumerator CR_MoveToContent(TCP2_Demo_Interactive_Content content)
		{
			return null;
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xCDB1F8", Offset = "0xCDB1F8", VA = "0xCDB1F8")]
		private void OnSelectLightingSettings(int index)
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xCDBBA0", Offset = "0xCDBBA0", VA = "0xCDBBA0")]
		public void HideInfoBox()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xCDBBC0", Offset = "0xCDBBC0", VA = "0xCDBBC0")]
		public TCP2_Demo_Interactive()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class TCP2_Demo_Interactive_Environment : MonoBehaviour
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material skybox;

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xF9E944", Offset = "0xF9E944", VA = "0xF9E944")]
		public void ApplyEnvironment()
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xF9EABC", Offset = "0xF9EABC", VA = "0xF9EABC")]
		public TCP2_Demo_Interactive_Environment()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class TCP2_Demo : MonoBehaviour
	{
		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] AffectedMaterials;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D[] RampTextures;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUISkin GuiSkin;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light DirLight;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Robot;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject Ethan;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool mUnityShader;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool mShaderSpecular;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool mShaderBump;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		private bool mShaderReflection;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool mShaderRim;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool mShaderRimOutline;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool mShaderOutline;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float mRimMin;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float mRimMax;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool mRampTextureFlag;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Texture2D mRampTexture;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float mRampSmoothing;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float mLightRotationX;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float mLightRotationY;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool mViewRobot;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool mRobotOutlineNormals;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TCP2_Demo_View DemoView;

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xCD5A70", Offset = "0xCD5A70", VA = "0xCD5A70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xCD6160", Offset = "0xCD6160", VA = "0xCD6160")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xCD62E8", Offset = "0xCD62E8", VA = "0xCD62E8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xCD88A0", Offset = "0xCD88A0", VA = "0xCD88A0")]
		private void UnityDiffuseShader()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xCD5B04", Offset = "0xCD5B04", VA = "0xCD5B04")]
		private void UpdateShader()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xCD867C", Offset = "0xCD867C", VA = "0xCD867C")]
		private void RimOutlineColor()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xCD6184", Offset = "0xCD6184", VA = "0xCD6184")]
		private void RestoreRimColors()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xCD89C8", Offset = "0xCD89C8", VA = "0xCD89C8")]
		private void ToggleKeyword(Material m, bool enabled, string keyword)
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xCD872C", Offset = "0xCD872C", VA = "0xCD872C")]
		private void PrevRamp()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xCD87EC", Offset = "0xCD87EC", VA = "0xCD87EC")]
		private void NextRamp()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xCD89F4", Offset = "0xCD89F4", VA = "0xCD89F4")]
		public TCP2_Demo()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class TCP2_Demo_PBS : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000178")]
		public class SkyboxSetting
		{
			[Token(Token = "0x4000BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material SkyMaterial;

			[Token(Token = "0x4000BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color lightColor;

			[Token(Token = "0x4000BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 DirLightEuler;

			[Token(Token = "0x600062F")]
			[Address(RVA = "0x20A39D8", Offset = "0x20A39D8", VA = "0x20A39D8")]
			public SkyboxSetting()
			{
			}
		}

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light DirLight;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject PointLights;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer Robot;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Canvas;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SkyboxSetting[] SkySettings;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool FlipLight;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D[] RampTextures;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Slider SmoothnessSlider;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text SmoothnessValue;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Slider MetallicSlider;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text MetallicValue;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text BumpScaleValue;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text ShaderText;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text SkyboxValue;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Text RampValue;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Slider RampThresholdSlider;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Text RampThresholdValue;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Slider RampSmoothSlider;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Text RampSmoothValue;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Slider RampSmoothAddSlider;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Text RampSmoothAddValue;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public RawImage RampImage;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int currentSky;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int currentRamp;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material robotMaterial;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool mUseOutline;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool mRotatePointLights;

		[Token(Token = "0x170000BC")]
		public bool ShowPointLights
		{
			[Token(Token = "0x6000613")]
			[Address(RVA = "0xF9EBCC", Offset = "0xF9EBCC", VA = "0xF9EBCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public bool ShowDirLight
		{
			[Token(Token = "0x6000614")]
			[Address(RVA = "0xF9EBEC", Offset = "0xF9EBEC", VA = "0xF9EBEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public bool RotatePointLights
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0xF9EC0C", Offset = "0xF9EC0C", VA = "0xF9EC0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000616")]
			[Address(RVA = "0xF9EC14", Offset = "0xF9EC14", VA = "0xF9EC14")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public bool UseOutline
		{
			[Token(Token = "0x6000617")]
			[Address(RVA = "0xF9EC20", Offset = "0xF9EC20", VA = "0xF9EC20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000618")]
			[Address(RVA = "0xF9EC28", Offset = "0xF9EC28", VA = "0xF9EC28")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public bool UseRampTexture
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0xF9EDA0", Offset = "0xF9EDA0", VA = "0xF9EDA0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public bool UseStylizedFresnel
		{
			[Token(Token = "0x600061A")]
			[Address(RVA = "0xF9EE50", Offset = "0xF9EE50", VA = "0xF9EE50")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public bool UseStylizedSpecular
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0xF9EF00", Offset = "0xF9EF00", VA = "0xF9EF00")]
			set
			{
			}
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xF9EFB0", Offset = "0xF9EFB0", VA = "0xF9EFB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xF9F500", Offset = "0xF9F500", VA = "0xF9F500")]
		private void Update()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xF9F67C", Offset = "0xF9F67C", VA = "0xF9F67C")]
		public void ToggleShader()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xF9F610", Offset = "0xF9F610", VA = "0xF9F610")]
		public void NextSky()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xF9F644", Offset = "0xF9F644", VA = "0xF9F644")]
		public void PrevSky()
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xF9F7BC", Offset = "0xF9F7BC", VA = "0xF9F7BC")]
		public void NextRamp()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xF9F7F0", Offset = "0xF9F7F0", VA = "0xF9F7F0")]
		public void PrevRamp()
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xF9F828", Offset = "0xF9F828", VA = "0xF9F828")]
		public void SetMetallic(float f)
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xF9F8DC", Offset = "0xF9F8DC", VA = "0xF9F8DC")]
		public void SetSmoothness(float f)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xF9F990", Offset = "0xF9F990", VA = "0xF9F990")]
		public void SetBumpScale(float f)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xF9FA44", Offset = "0xF9FA44", VA = "0xF9FA44")]
		public void SetRampThreshold(float f)
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xF9FAF8", Offset = "0xF9FAF8", VA = "0xF9FAF8")]
		public void SetRampSmooth(float f)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xF9FBAC", Offset = "0xF9FBAC", VA = "0xF9FBAC")]
		public void SetRampSmoothAdd(float f)
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xF9F3A0", Offset = "0xF9F3A0", VA = "0xF9F3A0")]
		private void UpdateRamp()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xF9F1B4", Offset = "0xF9F1B4", VA = "0xF9F1B4")]
		private void UpdateSky()
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xF9F754", Offset = "0xF9F754", VA = "0xF9F754")]
		private void ShowUnityStandardShader()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xF9ECC8", Offset = "0xF9ECC8", VA = "0xF9ECC8")]
		public void ShowTCP2Shader()
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xF9FC60", Offset = "0xF9FC60", VA = "0xF9FC60")]
		private void ToggleKeyword(Material m, bool enabled, string keyword)
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xF9FC8C", Offset = "0xF9FC8C", VA = "0xF9FC8C")]
		public TCP2_Demo_PBS()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class TCP2_Demo_PBS_View : MonoBehaviour
	{
		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Pivot;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842E00", Offset = "0x842E00")]
		public float OrbitStrg;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float OrbitClamp;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842E38", Offset = "0x842E38")]
		public float PanStrg;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float PanClamp;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMin;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float yMax;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842E70", Offset = "0x842E70")]
		public float ZoomStrg;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ZoomClamp;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ZoomDistMin;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ZoomDistMax;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842EA8", Offset = "0x842EA8")]
		public float Decceleration;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Rect ignoreMouseRect;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 mouseDelta;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 orbitAcceleration;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 panAcceleration;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveAcceleration;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float zoomAcceleration;

		[Token(Token = "0x4000BE9")]
		private const float XMax = 60f;

		[Token(Token = "0x4000BEA")]
		private const float XMin = 300f;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 mResetCamPos;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 mResetPivotPos;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 mResetCamRot;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 mResetPivotRot;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool leftMouseHeld;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool rightMouseHeld;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		private bool middleMouseHeld;

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xF9FCA0", Offset = "0xF9FCA0", VA = "0xF9FCA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xF9FD2C", Offset = "0xF9FD2C", VA = "0xF9FD2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xF9FD58", Offset = "0xF9FD58", VA = "0xF9FD58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xFA0450", Offset = "0xFA0450", VA = "0xFA0450")]
		public void ResetView()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xFA0510", Offset = "0xFA0510", VA = "0xFA0510")]
		public TCP2_Demo_PBS_View()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class TCP2_Demo_View : MonoBehaviour
	{
		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842EE0", Offset = "0x842EE0")]
		public float OrbitStrg;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float OrbitClamp;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842F18", Offset = "0x842F18")]
		public float PanStrg;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float PanClamp;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842F50", Offset = "0x842F50")]
		public float ZoomStrg;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ZoomClamp;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842F88", Offset = "0x842F88")]
		public float Decceleration;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform CharacterTransform;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 mouseDelta;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 orbitAcceleration;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 panAcceleration;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 moveAcceleration;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float zoomAcceleration;

		[Token(Token = "0x4000BFF")]
		private const float XMax = 60f;

		[Token(Token = "0x4000C00")]
		private const float XMin = 300f;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 mResetCamPos;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 mResetCamRot;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool mMouseDown;

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xFA0538", Offset = "0xFA0538", VA = "0xFA0538")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xFA05A8", Offset = "0xFA05A8", VA = "0xFA05A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xFA05D4", Offset = "0xFA05D4", VA = "0xFA05D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xFA0C90", Offset = "0xFA0C90", VA = "0xFA0C90")]
		public void ResetView()
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xFA0CFC", Offset = "0xFA0CFC", VA = "0xFA0CFC")]
		public TCP2_Demo_View()
		{
		}
	}
}
namespace LineFootball
{
	[Token(Token = "0x200017B")]
	public class CreatePath : MonoBehaviour
	{
		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject point;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Transform> Transforms;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float raduis;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] array;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int count;

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xCC4248", Offset = "0xCC4248", VA = "0xCC4248")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xCC4384", Offset = "0xCC4384", VA = "0xCC4384")]
		private void GizmosCircle(Vector3 center, float raduis, ref Vector3[] array)
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xCC44C4", Offset = "0xCC44C4", VA = "0xCC44C4")]
		public void CreateCircle()
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xCC4670", Offset = "0xCC4670", VA = "0xCC4670")]
		public CreatePath()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public static class UtilTools
	{
		[Token(Token = "0x600063E")]
		[Address(RVA = "0xB71E98", Offset = "0xB71E98", VA = "0xB71E98")]
		public static Vector3 CalculateLineIntersectPanelPoint(Vector3 startPos, Vector3 endPos, Vector3 planeNormal, Vector3 pointOnPlane, bool isLimit = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xB71F80", Offset = "0xB71F80", VA = "0xB71F80")]
		public static Vector2 CalculateLineIntersectPanelPoint(Vector2 startPos, Vector2 endPos, Vector2 planeNormal, Vector2 pointOnPlane, bool isLimit = false)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xB71FF0", Offset = "0xB71FF0", VA = "0xB71FF0")]
		public static Vector3 GetBezierPoint(float t, Vector3 start, Vector3 center, Vector3 end)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xB72050", Offset = "0xB72050", VA = "0xB72050")]
		public static Vector3[] GetBezierPath(Vector3 startPoint, Vector3 endPoint, float height, int resolution = 10)
		{
			return null;
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xB721C8", Offset = "0xB721C8", VA = "0xB721C8")]
		public static Vector3[] GetBezierPath(Vector3 startPoint, Vector3 endPoint, Vector3 offsetHeight, int resolution = 10)
		{
			return null;
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xB72324", Offset = "0xB72324", VA = "0xB72324")]
		public static Vector3 GetCurvePosition(Vector3 startPos, Vector3 speed, float startH = 2f, int count = 100, float interval = 0.2f, float g = 0.2f)
		{
			return default(Vector3);
		}
	}
}
namespace Colorzore
{
	[Token(Token = "0x200017D")]
	public class ChangeScene : MonoBehaviour
	{
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int count;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x842FC0", Offset = "0x842FC0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x842FC0", Offset = "0x842FC0")]
		private InputActionReference leftTrigger;

		[Token(Token = "0x170000C3")]
		public int GetID
		{
			[Token(Token = "0x6000644")]
			[Address(RVA = "0xCBCC18", Offset = "0xCBCC18", VA = "0xCBCC18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000645")]
			[Address(RVA = "0xCBCC64", Offset = "0xCBCC64", VA = "0xCBCC64")]
			set
			{
			}
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xCBCCB4", Offset = "0xCBCCB4", VA = "0xCBCCB4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xCBCD1C", Offset = "0xCBCD1C", VA = "0xCBCD1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xCBCE60", Offset = "0xCBCE60", VA = "0xCBCE60")]
		public void Update()
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xCBCFC0", Offset = "0xCBCFC0", VA = "0xCBCFC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xCBCDD0", Offset = "0xCBCDD0", VA = "0xCBCDD0")]
		public static InputAction GetInputAction(InputActionReference actionReference)
		{
			return null;
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xCBCE9C", Offset = "0xCBCE9C", VA = "0xCBCE9C")]
		public void OnClickNextScene(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xCBD074", Offset = "0xCBD074", VA = "0xCBD074")]
		private int GetNextScene(int id)
		{
			return default(int);
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xCBD098", Offset = "0xCBD098", VA = "0xCBD098")]
		public ChangeScene()
		{
		}
	}
}
namespace _ArcheryBattle.Scripts.State.FSM
{
	[Token(Token = "0x200017E")]
	public class BattleModeMainState : BHState
	{
		[Token(Token = "0x600064E")]
		[Address(RVA = "0xC372F8", Offset = "0xC372F8", VA = "0xC372F8")]
		public BattleModeMainState()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class BreakthroughModeMainState
	{
		[Token(Token = "0x600064F")]
		[Address(RVA = "0xCBBCC4", Offset = "0xCBBCC4", VA = "0xCBBCC4")]
		public BreakthroughModeMainState()
		{
		}
	}
}
namespace zjf_UI.Scripts.Events
{
	[Token(Token = "0x2000180")]
	public delegate void CallBack();
	[Token(Token = "0x2000181")]
	public delegate void CallBack<T>(T arg);
	[Token(Token = "0x2000182")]
	public delegate void CallBack<T, T2>(T arg, T2 arg2);
	[Token(Token = "0x2000183")]
	public class EventCenter
	{
		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<EventType, Delegate> m_EventTable;

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xCC75FC", Offset = "0xCC75FC", VA = "0xCC75FC")]
		private static void OnListenerAdding(EventType eventType, Delegate callBack)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xCC784C", Offset = "0xCC784C", VA = "0xCC784C")]
		private static void OnListenerRemoving(EventType eventType, Delegate callBack)
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xCC7AB8", Offset = "0xCC7AB8", VA = "0xCC7AB8")]
		private static void OnListenerRemoved(EventType eventType)
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xCC7B9C", Offset = "0xCC7B9C", VA = "0xCC7B9C")]
		public static void AddListener(EventType eventType, CallBack callBack)
		{
		}

		[Token(Token = "0x6000660")]
		public static void AddListener<T>(EventType eventType, CallBack<T> callBack)
		{
		}

		[Token(Token = "0x6000661")]
		public static void AddListener<T, T2>(EventType eventType, CallBack<T, T2> callBack)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xCC7CC0", Offset = "0xCC7CC0", VA = "0xCC7CC0")]
		public static void RemoveListener(EventType eventType, CallBack callBack)
		{
		}

		[Token(Token = "0x6000663")]
		public static void RemoveListener<T>(EventType eventType, CallBack<T> callBack)
		{
		}

		[Token(Token = "0x6000664")]
		public static void RemoveListener<T, T2>(EventType eventType, CallBack<T, T2> callBack)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xCC7DEC", Offset = "0xCC7DEC", VA = "0xCC7DEC")]
		public static void Broadcast(EventType eventType)
		{
		}

		[Token(Token = "0x6000666")]
		public static void Broadcast<T>(EventType eventType, T arg)
		{
		}

		[Token(Token = "0x6000667")]
		public static void Broadcast<T, T2>(EventType eventType, T arg, T2 arg2)
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xCC7F30", Offset = "0xCC7F30", VA = "0xCC7F30")]
		public EventCenter()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public enum EventType
	{
		[Token(Token = "0x4000C0D")]
		Event1,
		[Token(Token = "0x4000C0E")]
		Event2,
		[Token(Token = "0x4000C0F")]
		WinChange,
		[Token(Token = "0x4000C10")]
		EndingScreen,
		[Token(Token = "0x4000C11")]
		FireArrow,
		[Token(Token = "0x4000C12")]
		HitBoardEvnet
	}
}
namespace jietu
{
	[Token(Token = "0x2000185")]
	public class Jietu : MonoBehaviour
	{
		[Token(Token = "0x600066A")]
		[Address(RVA = "0xB8F928", Offset = "0xB8F928", VA = "0xB8F928")]
		private void Update()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xB8FC20", Offset = "0xB8FC20", VA = "0xB8FC20")]
		public Jietu()
		{
		}
	}
}
namespace ColorzoreMP
{
	[Token(Token = "0x2000186")]
	public class AutoRotateWithCamera : MonoBehaviour
	{
		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera camera;

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xC31FD8", Offset = "0xC31FD8", VA = "0xC31FD8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xC32198", Offset = "0xC32198", VA = "0xC32198")]
		public AutoRotateWithCamera()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class GameManager : MonoBehaviourPun
	{
		[Token(Token = "0x2000188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C278", Offset = "0x83C278")]
		private sealed class <OnWaitLoading>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x4000C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<Photon.Realtime.Player> <listPlayers>5__1;

			[Token(Token = "0x4000C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x4000C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <teamIndex>5__3;

			[Token(Token = "0x170000C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000684")]
				[Address(RVA = "0xB7C848", Offset = "0xB7C848", VA = "0xB7C848", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000686")]
				[Address(RVA = "0xB7C890", Offset = "0xB7C890", VA = "0xB7C890", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000681")]
			[Address(RVA = "0xB7C5F4", Offset = "0xB7C5F4", VA = "0xB7C5F4")]
			[DebuggerHidden]
			public <OnWaitLoading>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000682")]
			[Address(RVA = "0xB7C620", Offset = "0xB7C620", VA = "0xB7C620", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000683")]
			[Address(RVA = "0xB7C624", Offset = "0xB7C624", VA = "0xB7C624", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000685")]
			[Address(RVA = "0xB7C850", Offset = "0xB7C850", VA = "0xB7C850", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000189")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C288", Offset = "0x83C288")]
		private sealed class <CountdownRoutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <curTime>5__1;

			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <time>5__2;

			[Token(Token = "0x170000C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600068A")]
				[Address(RVA = "0xB7C2AC", Offset = "0xB7C2AC", VA = "0xB7C2AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600068C")]
				[Address(RVA = "0xB7C2F4", Offset = "0xB7C2F4", VA = "0xB7C2F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000687")]
			[Address(RVA = "0xB7BF48", Offset = "0xB7BF48", VA = "0xB7BF48")]
			[DebuggerHidden]
			public <CountdownRoutine>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000688")]
			[Address(RVA = "0xB7BF74", Offset = "0xB7BF74", VA = "0xB7BF74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000689")]
			[Address(RVA = "0xB7BF78", Offset = "0xB7BF78", VA = "0xB7BF78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600068B")]
			[Address(RVA = "0xB7C2B4", Offset = "0xB7C2B4", VA = "0xB7C2B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200018A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C298", Offset = "0x83C298")]
		private sealed class <DisplayGameStart>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callBack;

			[Token(Token = "0x4000C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager <>4__this;

			[Token(Token = "0x170000C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000690")]
				[Address(RVA = "0xB7C5A4", Offset = "0xB7C5A4", VA = "0xB7C5A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000692")]
				[Address(RVA = "0xB7C5EC", Offset = "0xB7C5EC", VA = "0xB7C5EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600068D")]
			[Address(RVA = "0xB7C49C", Offset = "0xB7C49C", VA = "0xB7C49C")]
			[DebuggerHidden]
			public <DisplayGameStart>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x600068E")]
			[Address(RVA = "0xB7C4C8", Offset = "0xB7C4C8", VA = "0xB7C4C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600068F")]
			[Address(RVA = "0xB7C4CC", Offset = "0xB7C4CC", VA = "0xB7C4CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000691")]
			[Address(RVA = "0xB7C5AC", Offset = "0xB7C5AC", VA = "0xB7C5AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200018B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C2A8", Offset = "0x83C2A8")]
		private sealed class <DisplayGameOver>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x170000CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000696")]
				[Address(RVA = "0xB7C44C", Offset = "0xB7C44C", VA = "0xB7C44C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000698")]
				[Address(RVA = "0xB7C494", Offset = "0xB7C494", VA = "0xB7C494", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000693")]
			[Address(RVA = "0xB7C2FC", Offset = "0xB7C2FC", VA = "0xB7C2FC")]
			[DebuggerHidden]
			public <DisplayGameOver>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000694")]
			[Address(RVA = "0xB7C328", Offset = "0xB7C328", VA = "0xB7C328", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000695")]
			[Address(RVA = "0xB7C32C", Offset = "0xB7C32C", VA = "0xB7C32C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000697")]
			[Address(RVA = "0xB7C454", Offset = "0xB7C454", VA = "0xB7C454", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameManager instance;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Player localPlayer;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameMode gameMode;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIGame ui;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Team[] teams;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int maxScore;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float duration;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<TeamTarget> teamTargets;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float timer;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float startTime;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isOver;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isStart;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float curTime;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int time;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float windTime;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float windDuration;

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xB8C6E8", Offset = "0xB8C6E8", VA = "0xB8C6E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xB8C73C", Offset = "0xB8C73C", VA = "0xB8C73C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xB8C9B4", Offset = "0xB8C9B4", VA = "0xB8C9B4")]
		private void OnHitBoard(GameObject owner, BaseTarget baseTarget, int score)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xB8C93C", Offset = "0xB8C93C", VA = "0xB8C93C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x845AFC", Offset = "0x845AFC")]
		private IEnumerator OnWaitLoading()
		{
			return null;
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xB8CA90", Offset = "0xB8CA90", VA = "0xB8CA90")]
		public static GameManager GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xB8C8E0", Offset = "0xB8C8E0", VA = "0xB8C8E0")]
		public static bool isMaster()
		{
			return default(bool);
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xB8CADC", Offset = "0xB8CADC", VA = "0xB8CADC")]
		public int GetTeamFill()
		{
			return default(int);
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xB8CBC0", Offset = "0xB8CBC0", VA = "0xB8CBC0")]
		public void UpdateTime(float time)
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xB8CC50", Offset = "0xB8CC50", VA = "0xB8CC50")]
		public void AddScore(ScoreType scoreType, int teamIndex, int score)
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xB8CD40", Offset = "0xB8CD40", VA = "0xB8CD40")]
		public bool IsGameOver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xB8CD48", Offset = "0xB8CD48", VA = "0xB8CD48")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xB8CEEC", Offset = "0xB8CEEC", VA = "0xB8CEEC")]
		private void CountdownRoutinePlay()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xB8CF2C", Offset = "0xB8CF2C", VA = "0xB8CF2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x845B5C", Offset = "0x845B5C")]
		private IEnumerator CountdownRoutine()
		{
			return null;
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xB8CFA4", Offset = "0xB8CFA4", VA = "0xB8CFA4")]
		public void ExitGame()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xB8CFA8", Offset = "0xB8CFA8", VA = "0xB8CFA8")]
		public void DisplayGameStart(float duration, Action callBack)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xB8D114", Offset = "0xB8D114", VA = "0xB8D114")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x845BBC", Offset = "0x845BBC")]
		private IEnumerator DisplayGameStart(Action callBack)
		{
			return null;
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xB8D1A8", Offset = "0xB8D1A8", VA = "0xB8D1A8")]
		public void DisplayGameOver(int teamIndex)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0xB8D2AC", Offset = "0xB8D2AC", VA = "0xB8D2AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x845C1C", Offset = "0x845C1C")]
		private IEnumerator DisplayGameOver()
		{
			return null;
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xB8D324", Offset = "0xB8D324", VA = "0xB8D324")]
		public GameManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018C")]
	public class Team
	{
		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string tag;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform spawn;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int Score;

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xFA7C1C", Offset = "0xFA7C1C", VA = "0xFA7C1C")]
		public Team()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public enum ScoreType
	{
		[Token(Token = "0x4000C3C")]
		RingTarget,
		[Token(Token = "0x4000C3D")]
		Other
	}
	[Token(Token = "0x200018E")]
	public enum GameMode
	{
		[Token(Token = "0x4000C3F")]
		TIME,
		[Token(Token = "0x4000C40")]
		LIMITARROW
	}
	[Token(Token = "0x200018F")]
	public class NetworkManagerCustom : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x2000190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C2B8", Offset = "0x83C2B8")]
		private sealed class <WaitForSceneChange>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkManagerCustom <>4__this;

			[Token(Token = "0x4000C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <waitTime>5__1;

			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__2;

			[Token(Token = "0x170000CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60006B3")]
				[Address(RVA = "0xB82830", Offset = "0xB82830", VA = "0xB82830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006B5")]
				[Address(RVA = "0xB82878", Offset = "0xB82878", VA = "0xB82878", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006B0")]
			[Address(RVA = "0xB822C8", Offset = "0xB822C8", VA = "0xB822C8")]
			[DebuggerHidden]
			public <WaitForSceneChange>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60006B1")]
			[Address(RVA = "0xB822F4", Offset = "0xB822F4", VA = "0xB822F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006B2")]
			[Address(RVA = "0xB822F8", Offset = "0xB822F8", VA = "0xB822F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006B4")]
			[Address(RVA = "0xB82838", Offset = "0xB82838", VA = "0xB82838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NetworkManagerCustom instance;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int offlineSceneIndex;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int onlineSceneIndex;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxPlayers;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] playerPrefabs;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float duration;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Photon.Realtime.Player> listPlayers;

		[Token(Token = "0x14000002")]
		public static event Action connectionFailedEvent
		{
			[Token(Token = "0x600069A")]
			[Address(RVA = "0x20D6D54", Offset = "0x20D6D54", VA = "0x20D6D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845DBC", Offset = "0x845DBC")]
			add
			{
			}
			[Token(Token = "0x600069B")]
			[Address(RVA = "0x20D6E14", Offset = "0x20D6E14", VA = "0x20D6E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845DCC", Offset = "0x845DCC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000003")]
		public static event Action<bool> connectionCreatRoomEvent
		{
			[Token(Token = "0x600069C")]
			[Address(RVA = "0x20D6ED4", Offset = "0x20D6ED4", VA = "0x20D6ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845DDC", Offset = "0x845DDC")]
			add
			{
			}
			[Token(Token = "0x600069D")]
			[Address(RVA = "0x20D6F94", Offset = "0x20D6F94", VA = "0x20D6F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845DEC", Offset = "0x845DEC")]
			remove
			{
			}
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x20D7054", Offset = "0x20D7054", VA = "0x20D7054")]
		private void Awake()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x20D71F0", Offset = "0x20D71F0", VA = "0x20D71F0")]
		public static NetworkManagerCustom GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x20D723C", Offset = "0x20D723C", VA = "0x20D723C")]
		public static void StartMatch(NetworkMode mode)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x20D7518", Offset = "0x20D7518", VA = "0x20D7518", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x20D76BC", Offset = "0x20D76BC", VA = "0x20D76BC", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x20D7818", Offset = "0x20D7818", VA = "0x20D7818", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x20D7A88", Offset = "0x20D7A88", VA = "0x20D7A88", Slot = "33")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x20D7AE8", Offset = "0x20D7AE8", VA = "0x20D7AE8", Slot = "35")]
		public override void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x20D7D74", Offset = "0x20D7D74", VA = "0x20D7D74", Slot = "36")]
		public override void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x20D7DD0", Offset = "0x20D7DD0", VA = "0x20D7DD0", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x20D7CFC", Offset = "0x20D7CFC", VA = "0x20D7CFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x845DFC", Offset = "0x845DFC")]
		private IEnumerator WaitForSceneChange()
		{
			return null;
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x20D7F14", Offset = "0x20D7F14", VA = "0x20D7F14", Slot = "42")]
		public override void OnPlayerEnteredRoom(Photon.Realtime.Player player)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x20D810C", Offset = "0x20D810C", VA = "0x20D810C")]
		public int GetTeamFill()
		{
			return default(int);
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x20D83D8", Offset = "0x20D83D8", VA = "0x20D83D8")]
		[PunRPC]
		private void AddPlayer()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x20D864C", Offset = "0x20D864C", VA = "0x20D864C", Slot = "43")]
		public override void OnPlayerLeftRoom(Photon.Realtime.Player player)
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x20D86DC", Offset = "0x20D86DC", VA = "0x20D86DC")]
		public GameObject GetPlayerGameObj(Photon.Realtime.Player player)
		{
			return null;
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x20D8994", Offset = "0x20D8994", VA = "0x20D8994")]
		public GameObject GetPlayerGameObject(Photon.Realtime.Player player)
		{
			return null;
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x20D8C04", Offset = "0x20D8C04", VA = "0x20D8C04")]
		public NetworkManagerCustom()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public enum NetworkMode
	{
		[Token(Token = "0x4000C50")]
		Online,
		[Token(Token = "0x4000C51")]
		LAN,
		[Token(Token = "0x4000C52")]
		Offline
	}
	[Token(Token = "0x2000192")]
	public static class RoomExtensions
	{
		[Token(Token = "0x4000C53")]
		public const string size = "size";

		[Token(Token = "0x4000C54")]
		public const string score = "score";

		[Token(Token = "0x4000C55")]
		public const string gameTime = "runGameTime";

		[Token(Token = "0x4000C56")]
		public const string gameState = "gameState";

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xCCCE6C", Offset = "0xCCCE6C", VA = "0xCCCE6C")]
		public static int GetGameState(this Room room)
		{
			return default(int);
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xCCCF10", Offset = "0xCCCF10", VA = "0xCCCF10")]
		public static void SetGameState(this Room room, int state)
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xCCCFFC", Offset = "0xCCCFFC", VA = "0xCCCFFC")]
		public static float GetCurTime(this Room room)
		{
			return default(float);
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xCCD0A0", Offset = "0xCCD0A0", VA = "0xCCD0A0")]
		public static float SetCurTime(this Room room, float duration)
		{
			return default(float);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xCCD198", Offset = "0xCCD198", VA = "0xCCD198")]
		public static int[] GetSize(this Room room)
		{
			return null;
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xCCD238", Offset = "0xCCD238", VA = "0xCCD238")]
		public static int[] AddSize(this Room room, int teamIndex, int value)
		{
			return null;
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xCCD340", Offset = "0xCCD340", VA = "0xCCD340")]
		public static int[] GetScore(this Room room)
		{
			return null;
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xCCD3E0", Offset = "0xCCD3E0", VA = "0xCCD3E0")]
		public static int[] AddScore(this Room room, int teamIndex, int value)
		{
			return null;
		}
	}
	[Token(Token = "0x2000193")]
	public class Player : MonoBehaviourPunCallbacks, IPunObservable
	{
		[Token(Token = "0x2000194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C2D8", Offset = "0x83C2D8")]
		private sealed class <ExitGame>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Player <>4__this;

			[Token(Token = "0x170000CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60006E5")]
				[Address(RVA = "0xB83224", Offset = "0xB83224", VA = "0xB83224", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60006E7")]
				[Address(RVA = "0xB8326C", Offset = "0xB8326C", VA = "0xB8326C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60006E2")]
			[Address(RVA = "0xB83144", Offset = "0xB83144", VA = "0xB83144")]
			[DebuggerHidden]
			public <ExitGame>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x60006E3")]
			[Address(RVA = "0xB83170", Offset = "0xB83170", VA = "0xB83170", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60006E4")]
			[Address(RVA = "0xB83174", Offset = "0xB83174", VA = "0xB83174", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60006E6")]
			[Address(RVA = "0xB8322C", Offset = "0xB8322C", VA = "0xB8322C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform shotPos;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextFire;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bow bow;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject arrowModel;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int arrowCount;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Quiver quiver;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UIGameCustom userCanvas;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private InputActionProperty leftTrigger;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private InputActionProperty rightTrigger;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private InputActionProperty primaryTrigger;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InputAction leftAction;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private InputAction rightAction;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InputAction primaryAction;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public VibrationManager vibTrigger;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform rightHand;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform leftHand;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject xrOrigin;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject rayController;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private AvatarInputConverter avatarInputConverter;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TestIK testIK;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x843138", Offset = "0x843138")]
		public float power;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private bool _isPickArrow;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		[SerializeField]
		private bool _isLoadArrow;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
		[SerializeField]
		private bool _isDrag;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float powerValue;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int bowModel;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float modelValue;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private WindData windData;

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x20DC9FC", Offset = "0x20DC9FC", VA = "0x20DC9FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x20DCAE8", Offset = "0x20DCAE8", VA = "0x20DCAE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x20DCDCC", Offset = "0x20DCDCC", VA = "0x20DCDCC")]
		private void InitBow()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x20DCF4C", Offset = "0x20DCF4C", VA = "0x20DCF4C")]
		public void SetBow(BowType bowType)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x20DCFD8", Offset = "0x20DCFD8", VA = "0x20DCFD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x20DCE64", Offset = "0x20DCE64", VA = "0x20DCE64")]
		private void SetBodyController(bool isVisable)
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x20DCFDC", Offset = "0x20DCFDC", VA = "0x20DCFDC")]
		private void OnTriggerAction(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x20DD3E4", Offset = "0x20DD3E4", VA = "0x20DD3E4")]
		private void SetDragState(bool _isDrag)
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x20DD36C", Offset = "0x20DD36C", VA = "0x20DD36C")]
		public void DisableAction()
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x20DD3A8", Offset = "0x20DD3A8", VA = "0x20DD3A8")]
		public void EnableAction()
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x20DD8F4", Offset = "0x20DD8F4", VA = "0x20DD8F4")]
		private void UpdateDragBow()
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x20DDAF0", Offset = "0x20DDAF0", VA = "0x20DDAF0", Slot = "47")]
		public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player player, ExitGames.Client.Photon.Hashtable playerAndUpdatedProps)
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x20DDEB0", Offset = "0x20DDEB0", VA = "0x20DDEB0", Slot = "54")]
		private void Photon.Pun.IPunObservable.OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x20DE168", Offset = "0x20DE168", VA = "0x20DE168")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x20DCD88", Offset = "0x20DCD88", VA = "0x20DCD88")]
		public PhotonView GetView()
		{
			return null;
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x20DD494", Offset = "0x20DD494", VA = "0x20DD494")]
		protected void Shoot(float power = 1f)
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x20DE260", Offset = "0x20DE260", VA = "0x20DE260")]
		[PunRPC]
		protected void CmdShoot(short[] position, short[] direction, short[] wind, short power)
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x20DEA10", Offset = "0x20DEA10", VA = "0x20DEA10")]
		private void TestFire(Vector3 Position, Vector3 Direction, Vector3 Wind, float power)
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x20DEC00", Offset = "0x20DEC00", VA = "0x20DEC00")]
		protected void RpcOnShot()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x20DDD70", Offset = "0x20DDD70", VA = "0x20DDD70")]
		protected void OnBowModelChange(int value)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x20DDEAC", Offset = "0x20DDEAC", VA = "0x20DDEAC")]
		protected void OnChangeArrow(int value)
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x20DEC04", Offset = "0x20DEC04", VA = "0x20DEC04")]
		public void OnHitBoard(GameObject owner, BaseTarget baseTarget, int score)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x20DEFFC", Offset = "0x20DEFFC", VA = "0x20DEFFC")]
		public void GameStart(float duration)
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x20DF140", Offset = "0x20DF140", VA = "0x20DF140")]
		public void GameOver()
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x20DF2F4", Offset = "0x20DF2F4", VA = "0x20DF2F4")]
		public void ChangeWind()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x20DF4B4", Offset = "0x20DF4B4", VA = "0x20DF4B4")]
		[PunRPC]
		protected void RpcGameOver(byte teamIndex)
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x20DF56C", Offset = "0x20DF56C", VA = "0x20DF56C")]
		public void ShowOverPanel()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x20DF718", Offset = "0x20DF718", VA = "0x20DF718")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x845F5C", Offset = "0x845F5C")]
		private IEnumerator ExitGame()
		{
			return null;
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x20DF790", Offset = "0x20DF790", VA = "0x20DF790")]
		[PunRPC]
		protected void RpcGameStart(byte duration)
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x20DF8A8", Offset = "0x20DF8A8", VA = "0x20DF8A8")]
		[PunRPC]
		protected void RpcWind(short wind, short wPower)
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x20DF900", Offset = "0x20DF900", VA = "0x20DF900")]
		public void OnClickExit()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x20DF99C", Offset = "0x20DF99C", VA = "0x20DF99C", Slot = "31")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x20DFA00", Offset = "0x20DFA00", VA = "0x20DFA00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x20DFA88", Offset = "0x20DFA88", VA = "0x20DFA88")]
		public Player()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x20DFA98", Offset = "0x20DFA98", VA = "0x20DFA98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845FDC", Offset = "0x845FDC")]
		private void <OnTriggerAction>b__32_0()
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x20DFAF0", Offset = "0x20DFAF0", VA = "0x20DFAF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x845FEC", Offset = "0x845FEC")]
		private void <RpcGameStart>b__57_0()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public static class PlayerExtensions
	{
		[Token(Token = "0x4000C77")]
		public const string team = "team";

		[Token(Token = "0x4000C78")]
		public const string bowModel = "bowModel";

		[Token(Token = "0x4000C79")]
		public const string arrow = "arrow";

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x20DCDA8", Offset = "0x20DCDA8", VA = "0x20DCDA8")]
		public static string GetName(this PhotonView player)
		{
			return null;
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x20DCD90", Offset = "0x20DCD90", VA = "0x20DCD90")]
		public static int GetTeam(this PhotonView player)
		{
			return default(int);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x20D85B0", Offset = "0x20D85B0", VA = "0x20D85B0")]
		public static int GetTeam(this Photon.Realtime.Player player)
		{
			return default(int);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x20E2260", Offset = "0x20E2260", VA = "0x20E2260")]
		public static void SetTeam(this PhotonView player, int teamIndex)
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x20D81CC", Offset = "0x20D81CC", VA = "0x20D81CC")]
		public static void SetTeam(this Photon.Realtime.Player player, int teamIndex)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x20E2278", Offset = "0x20E2278", VA = "0x20E2278")]
		public static int GetBowModel(this PhotonView player)
		{
			return default(int);
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x20DDCD4", Offset = "0x20DDCD4", VA = "0x20DDCD4")]
		public static int GetBowModel(this Photon.Realtime.Player player)
		{
			return default(int);
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x20DCFC0", Offset = "0x20DCFC0", VA = "0x20DCFC0")]
		public static void SetBowModel(this PhotonView player, int value)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x20E2290", Offset = "0x20E2290", VA = "0x20E2290")]
		public static void SetBowModel(this Photon.Realtime.Player player, int value)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x20E2378", Offset = "0x20E2378", VA = "0x20E2378")]
		public static int GetArrow(this PhotonView player)
		{
			return default(int);
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x20DDE10", Offset = "0x20DDE10", VA = "0x20DDE10")]
		public static int GetArrow(this Photon.Realtime.Player player)
		{
			return default(int);
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x20DE248", Offset = "0x20DE248", VA = "0x20DE248")]
		public static void SetArrow(this PhotonView player, int value)
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x20E2390", Offset = "0x20E2390", VA = "0x20E2390")]
		public static void SetArrow(this Photon.Realtime.Player player, int value)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x20E2478", Offset = "0x20E2478", VA = "0x20E2478")]
		public static void Clear(this PhotonView player)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x20D82B4", Offset = "0x20D82B4", VA = "0x20D82B4")]
		public static void Clear(this Photon.Realtime.Player player)
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class PrefsKeys
	{
		[Token(Token = "0x4000C7A")]
		public const string playerName = "CZ_playerName";

		[Token(Token = "0x4000C7B")]
		public const string networkMode = "CZ_networkMode";

		[Token(Token = "0x4000C7C")]
		public const string bowmodel = "Bow_model";

		[Token(Token = "0x4000C7D")]
		public const string gameMode = "CZ_gameMode";

		[Token(Token = "0x4000C7E")]
		public const string serverAddress = "CZ_serverAddress";

		[Token(Token = "0x4000C7F")]
		public const string playMusic = "CZ_playMusic";

		[Token(Token = "0x4000C80")]
		public const string appVolume = "CZ_appVolume";

		[Token(Token = "0x4000C81")]
		public const string activeTank = "CZ_activeTank";

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xCC90B0", Offset = "0xCC90B0", VA = "0xCC90B0")]
		public PrefsKeys()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class TeamTarget : MonoBehaviour
	{
		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int teamIndex;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsPublic;

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xFA7D64", Offset = "0xFA7D64", VA = "0xFA7D64")]
		public TeamTarget()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class UIGame : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text[] teamScore;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text[] gameScore;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text[] teamName;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text gameOverText;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject gameOverMenu;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject resultPanel;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text timeDelayText;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject gameStartMenu;

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xFAC524", Offset = "0xFAC524", VA = "0xFAC524")]
		private void Start()
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xFAC588", Offset = "0xFAC588", VA = "0xFAC588", Slot = "46")]
		public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xFAC798", Offset = "0xFAC798", VA = "0xFAC798")]
		public void OnTeanTimeChanged(float time)
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xFAC614", Offset = "0xFAC614", VA = "0xFAC614")]
		public void OnTeamScoreChanged(int[] score)
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xFAC868", Offset = "0xFAC868", VA = "0xFAC868")]
		public void ToggleControls(bool state)
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xFAC86C", Offset = "0xFAC86C", VA = "0xFAC86C")]
		public void ShowGameStartText(Team[] teams, float duration)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xFAC9F0", Offset = "0xFAC9F0", VA = "0xFAC9F0")]
		public void HideGameStartMenu()
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xFACA20", Offset = "0xFACA20", VA = "0xFACA20")]
		public void SetGameOverText(Team team)
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xFACD54", Offset = "0xFACD54", VA = "0xFACD54")]
		public void ShowGameOver()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xFACDA4", Offset = "0xFACDA4", VA = "0xFACDA4")]
		public void Restart()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xFACE70", Offset = "0xFACE70", VA = "0xFACE70")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xFACEFC", Offset = "0xFACEFC", VA = "0xFACEFC", Slot = "31")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xFACF74", Offset = "0xFACF74", VA = "0xFACF74")]
		public UIGame()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class UIGameCustom : BaseUiMenu
	{
		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI resultTitleText;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI scoreText;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button exitBtn;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button continueBtn;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject resultPanel;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject controlPanel;

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xFACF7C", Offset = "0xFACF7C", VA = "0xFACF7C", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xFAD01C", Offset = "0xFAD01C", VA = "0xFAD01C")]
		public void ShowResultPanel(bool isWin, int score)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xFAD20C", Offset = "0xFAD20C", VA = "0xFAD20C")]
		public void HideResultPanel()
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xFAD22C", Offset = "0xFAD22C", VA = "0xFAD22C")]
		public void ShowController(UnityAction callBack)
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xFAD2B0", Offset = "0xFAD2B0", VA = "0xFAD2B0")]
		public UIGameCustom()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class UIMain : MonoBehaviour
	{
		[Token(Token = "0x200019B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C2F8", Offset = "0x83C2F8")]
		private sealed class <HandleStop>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIMain <>4__this;

			[Token(Token = "0x170000D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600071B")]
				[Address(RVA = "0x20A475C", Offset = "0x20A475C", VA = "0x20A475C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600071D")]
				[Address(RVA = "0x20A47A4", Offset = "0x20A47A4", VA = "0x20A47A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000718")]
			[Address(RVA = "0x20A44D8", Offset = "0x20A44D8", VA = "0x20A44D8")]
			[DebuggerHidden]
			public <HandleStop>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000719")]
			[Address(RVA = "0x20A4504", Offset = "0x20A4504", VA = "0x20A4504", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600071A")]
			[Address(RVA = "0x20A4508", Offset = "0x20A4508", VA = "0x20A4508", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600071C")]
			[Address(RVA = "0x20A4764", Offset = "0x20A4764", VA = "0x20A4764", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200019C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C308", Offset = "0x83C308")]
		private sealed class <HandleTimeout>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIMain <>4__this;

			[Token(Token = "0x170000D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000721")]
				[Address(RVA = "0x20A4920", Offset = "0x20A4920", VA = "0x20A4920", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000723")]
				[Address(RVA = "0x20A4968", Offset = "0x20A4968", VA = "0x20A4968", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600071E")]
			[Address(RVA = "0x20A47AC", Offset = "0x20A47AC", VA = "0x20A47AC")]
			[DebuggerHidden]
			public <HandleTimeout>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600071F")]
			[Address(RVA = "0x20A47D8", Offset = "0x20A47D8", VA = "0x20A47D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000720")]
			[Address(RVA = "0x20A47DC", Offset = "0x20A47DC", VA = "0x20A47DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000722")]
			[Address(RVA = "0x20A4928", Offset = "0x20A4928", VA = "0x20A4928", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject loadingWindow;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject connectionErrorWindow;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string playerName;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button stopBtn;

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xFAD84C", Offset = "0xFAD84C", VA = "0xFAD84C")]
		private void Start()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xFADB48", Offset = "0xFADB48", VA = "0xFADB48")]
		public void On_TestLocalBtn()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xFADCF8", Offset = "0xFADCF8", VA = "0xFADCF8")]
		public void On_MatchServer()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xFADC40", Offset = "0xFADC40", VA = "0xFADC40")]
		public void Play()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xFADDD8", Offset = "0xFADDD8", VA = "0xFADDD8")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xFADE68", Offset = "0xFADE68", VA = "0xFADE68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84613C", Offset = "0x84613C")]
		private IEnumerator HandleStop()
		{
			return null;
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xFADD60", Offset = "0xFADD60", VA = "0xFADD60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84619C", Offset = "0x84619C")]
		private IEnumerator HandleTimeout()
		{
			return null;
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xFADEE0", Offset = "0xFADEE0", VA = "0xFADEE0")]
		private void OnConnectionCrateRoom(bool isEnable)
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xFADF8C", Offset = "0xFADF8C", VA = "0xFADF8C")]
		public void OnChangeAi()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xFAE008", Offset = "0xFAE008", VA = "0xFAE008")]
		public void ReStart()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xFAE030", Offset = "0xFAE030", VA = "0xFAE030")]
		private void OnConnectionError()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xFADBE8", Offset = "0xFADBE8", VA = "0xFADBE8")]
		public void OnGameModeChanged(int value)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xFAE0F4", Offset = "0xFAE0F4", VA = "0xFAE0F4")]
		public UIMain()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class UIRestartButton : MonoBehaviour
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0xFAE0FC", Offset = "0xFAE0FC", VA = "0xFAE0FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xFAE1B8", Offset = "0xFAE1B8", VA = "0xFAE1B8")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xFAE20C", Offset = "0xFAE20C", VA = "0xFAE20C")]
		private void EnterPlay()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xFAE330", Offset = "0xFAE330", VA = "0xFAE330")]
		public UIRestartButton()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class UiGameMenu : BaseUiMenu
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text gameStartText;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text gameOverText;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text winText;

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xFAE504", Offset = "0xFAE504", VA = "0xFAE504", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xFAE654", Offset = "0xFAE654", VA = "0xFAE654")]
		public UiGameMenu()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class UiMainMenu : BaseUiMenu
	{
		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button matchBtn;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button localMatchBtn;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button[] changeAIBtn;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button backBtn;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button stopBtn;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button closeBtn;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button restartBtn;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI loadingText;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI matchFailText;

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xFAE65C", Offset = "0xFAE65C", VA = "0xFAE65C", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xFAE994", Offset = "0xFAE994", VA = "0xFAE994")]
		public UiMainMenu()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x20001A0")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xCC39B4", Offset = "0xCC39B4", VA = "0xCC39B4")]
		public void Start()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xCC3B5C", Offset = "0xCC3B5C", VA = "0xCC3B5C")]
		public void Update()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xCC3CB8", Offset = "0xCC3CB8", VA = "0xCC3CB8", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xCC3CBC", Offset = "0xCC3CBC", VA = "0xCC3CBC", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xCC3D4C", Offset = "0xCC3D4C", VA = "0xCC3D4C", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xCC3E4C", Offset = "0xCC3E4C", VA = "0xCC3E4C", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xCC3E50", Offset = "0xCC3E50", VA = "0xCC3E50", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xCC3E54", Offset = "0xCC3E54", VA = "0xCC3E54", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xCC3F4C", Offset = "0xCC3F4C", VA = "0xCC3F4C", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xCC3F50", Offset = "0xCC3F50", VA = "0xCC3F50", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xCC3F54", Offset = "0xCC3F54", VA = "0xCC3F54", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xCC3F58", Offset = "0xCC3F58", VA = "0xCC3F58", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xCC3F5C", Offset = "0xCC3F5C", VA = "0xCC3F5C", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xCC3F60", Offset = "0xCC3F60", VA = "0xCC3F60", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xCC3F64", Offset = "0xCC3F64", VA = "0xCC3F64", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xCC3F68", Offset = "0xCC3F68", VA = "0xCC3F68", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xCC3FDC", Offset = "0xCC3FDC", VA = "0xCC3FDC", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xCC3FE0", Offset = "0xCC3FE0", VA = "0xCC3FE0", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xCC409C", Offset = "0xCC409C", VA = "0xCC409C", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xCC40A0", Offset = "0xCC40A0", VA = "0xCC40A0")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xCC41D0", Offset = "0xCC41D0", VA = "0xCC41D0")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.Demo
{
	[Token(Token = "0x20001A1")]
	public static class AppSettingsExtensions
	{
		[Token(Token = "0x6000741")]
		[Address(RVA = "0xC2DD70", Offset = "0xC2DD70", VA = "0xC2DD70")]
		public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A2")]
	public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Channel;

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xCBD0A0", Offset = "0xCBD0A0", VA = "0xCBD0A0")]
		public void SetChannel(string channel)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xCBD128", Offset = "0xCBD128", VA = "0xCBD128", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xCBD438", Offset = "0xCBD438", VA = "0xCBD438")]
		public ChannelSelector()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	[ExecuteInEditMode]
	public class ChatAppIdCheckerUI : MonoBehaviour
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Description;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool WizardOpenedOnce;

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xCBD440", Offset = "0xCBD440", VA = "0xCBD440")]
		public void Update()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xCBD518", Offset = "0xCBD518", VA = "0xCBD518")]
		public ChatAppIdCheckerUI()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class ChatGui : MonoBehaviour, IChatClientListener
	{
		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] ChannelsToJoinOnConnect;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] FriendsList;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int HistoryLengthToFetch;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84323C", Offset = "0x84323C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84323C", Offset = "0x84323C")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string selectedChannelName;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChatClient chatClient;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected internal ChatAppSettings chatAppSettings;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject missingAppIdErrorPanel;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject ConnectingLabel;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RectTransform ChatPanel;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject UserIdFormPanel;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InputField InputFieldChat;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text CurrentChannelText;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Toggle ChannelToggleToInstantiate;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject FriendListUiItemtoInstantiate;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Dictionary<string, Toggle> channelToggles;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<string, FriendItem> friendListItemLUT;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool ShowState;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject Title;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Text StateText;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Text UserIdText;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string HelpText;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int TestLength;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private byte[] testBytes;

		[Token(Token = "0x170000D4")]
		public string UserName
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0xCBD520", Offset = "0xCBD520", VA = "0xCBD520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8462AC", Offset = "0x8462AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000748")]
			[Address(RVA = "0xCBD528", Offset = "0xCBD528", VA = "0xCBD528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8462BC", Offset = "0x8462BC")]
			set
			{
			}
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xCBD530", Offset = "0xCBD530", VA = "0xCBD530")]
		public void Start()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xCBD814", Offset = "0xCBD814", VA = "0xCBD814")]
		public void Connect()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xCBD9BC", Offset = "0xCBD9BC", VA = "0xCBD9BC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xCBD9D4", Offset = "0xCBD9D4", VA = "0xCBD9D4")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xCBD9EC", Offset = "0xCBD9EC", VA = "0xCBD9EC")]
		public void Update()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xCBDADC", Offset = "0xCBDADC", VA = "0xCBDADC")]
		public void OnEnterSend()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xCBE574", Offset = "0xCBE574", VA = "0xCBE574")]
		public void OnClickSend()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xCBDB7C", Offset = "0xCBDB7C", VA = "0xCBDB7C")]
		private void SendChatMessage(string inputLine)
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xCBE638", Offset = "0xCBE638", VA = "0xCBE638")]
		public void PostHelpToCurrentChannel()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xCBE6F0", Offset = "0xCBE6F0", VA = "0xCBE6F0", Slot = "4")]
		public void DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xCBE7E4", Offset = "0xCBE7E4", VA = "0xCBE7E4", Slot = "6")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xCBEB48", Offset = "0xCBEB48", VA = "0xCBEB48", Slot = "5")]
		public void OnDisconnected()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xCBEBD8", Offset = "0xCBEBD8", VA = "0xCBEBD8", Slot = "7")]
		public void OnChatStateChange(ChatState state)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xCBEC80", Offset = "0xCBEC80", VA = "0xCBEC80", Slot = "10")]
		public void OnSubscribed(string[] channels, bool[] results)
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xCBF000", Offset = "0xCBF000", VA = "0xCBF000")]
		public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xCBEE30", Offset = "0xCBEE30", VA = "0xCBEE30")]
		private void InstantiateChannelButton(string channelName)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xCBE9F4", Offset = "0xCBE9F4", VA = "0xCBE9F4")]
		private void InstantiateFriendButton(string friendId)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xCBF1E0", Offset = "0xCBF1E0", VA = "0xCBF1E0", Slot = "11")]
		public void OnUnsubscribed(string[] channels)
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xCBF660", Offset = "0xCBF660", VA = "0xCBF660", Slot = "8")]
		public void OnGetMessages(string channelName, string[] senders, object[] messages)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xCBF6B0", Offset = "0xCBF6B0", VA = "0xCBF6B0", Slot = "9")]
		public void OnPrivateMessage(string sender, object message, string channelName)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xCBF7D0", Offset = "0xCBF7D0", VA = "0xCBF7D0", Slot = "12")]
		public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xCBF9A0", Offset = "0xCBF9A0", VA = "0xCBF9A0", Slot = "13")]
		public void OnUserSubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xCBFAD0", Offset = "0xCBFAD0", VA = "0xCBFAD0", Slot = "14")]
		public void OnUserUnsubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xCBFC00", Offset = "0xCBFC00", VA = "0xCBFC00")]
		public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xCBFDA4", Offset = "0xCBFDA4", VA = "0xCBFDA4")]
		public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xCBFF88", Offset = "0xCBFF88", VA = "0xCBFF88")]
		public void OnErrorInfo(string channel, string error, object data)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xCC00F0", Offset = "0xCC00F0", VA = "0xCC00F0")]
		public void AddMessageToSelectedChannel(string msg)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xCBD1AC", Offset = "0xCBD1AC", VA = "0xCBD1AC")]
		public void ShowChannel(string channelName)
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xCC01E8", Offset = "0xCC01E8", VA = "0xCC01E8")]
		public void OpenDashboard()
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xCC0230", Offset = "0xCC0230", VA = "0xCC0230")]
		public ChatGui()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class FriendItem : MonoBehaviour
	{
		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text NameLabel;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text StatusLabel;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text Health;

		[Token(Token = "0x170000D5")]
		[HideInInspector]
		public string FriendId
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0xB895CC", Offset = "0xB895CC", VA = "0xB895CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000768")]
			[Address(RVA = "0xB895A8", Offset = "0xB895A8", VA = "0xB895A8")]
			set
			{
			}
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xB895F0", Offset = "0xB895F0", VA = "0xB895F0")]
		public void Awake()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xB89658", Offset = "0xB89658", VA = "0xB89658")]
		public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xB897E8", Offset = "0xB897E8", VA = "0xB897E8")]
		public FriendItem()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x600076D")]
		[Address(RVA = "0xB8F1B8", Offset = "0xB8F1B8", VA = "0xB8F1B8", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xB8F1DC", Offset = "0xB8F1DC", VA = "0xB8F1DC")]
		public IgnoreUiRaycastWhenInactive()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83C338", Offset = "0x83C338")]
	public class NamePickGui : MonoBehaviour
	{
		[Token(Token = "0x4000CCA")]
		private const string UserNamePlayerPref = "NamePickUserName";

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChatGui chatNewComponent;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField idInput;

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x20D4578", Offset = "0x20D4578", VA = "0x20D4578")]
		public void Start()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x20D4650", Offset = "0x20D4650", VA = "0x20D4650")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x20D469C", Offset = "0x20D469C", VA = "0x20D469C")]
		public void StartChat()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x20D4798", Offset = "0x20D4798", VA = "0x20D4798")]
		public NamePickGui()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x20001A8")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x6000773")]
		[Address(RVA = "0xCC7FC4", Offset = "0xCC7FC4", VA = "0xCC7FC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xCC80D8", Offset = "0xCC80D8", VA = "0xCC80D8")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x6000775")]
		[Address(RVA = "0x20D9D9C", Offset = "0x20D9D9C", VA = "0x20D9D9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x20D9E14", Offset = "0x20D9E14", VA = "0x20D9E14")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83C398", Offset = "0x83C398")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xFA9764", Offset = "0xFA9764", VA = "0xFA9764")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xFA97C0", Offset = "0xFA97C0", VA = "0xFA97C0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xFA97F0", Offset = "0xFA97F0", VA = "0xFA97F0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xFA9820", Offset = "0xFA9820", VA = "0xFA9820", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xFA98DC", Offset = "0xFA98DC", VA = "0xFA98DC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xFA9998", Offset = "0xFA9998", VA = "0xFA9998")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83C3F8", Offset = "0x83C3F8")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xFA9EF0", Offset = "0xFA9EF0", VA = "0xFA9EF0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xFAA064", Offset = "0xFAA064", VA = "0xFAA064")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xFAA000", Offset = "0xFAA000", VA = "0xFAA000")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xFAA128", Offset = "0xFAA128", VA = "0xFAA128", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xFAA1B4", Offset = "0xFAA1B4", VA = "0xFAA1B4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xFAA23C", Offset = "0xFAA23C", VA = "0xFAA23C")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace ArcheryBattle
{
	[Token(Token = "0x20001AC")]
	public class BaseRealAnimalLYN : BaseTarget
	{
		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int baseHitSource;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> ways;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected NavMeshAgent agent;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float speed;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool isBird;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843278", Offset = "0x843278")]
		[SerializeField]
		public int killSource;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8432C4", Offset = "0x8432C4")]
		[SerializeField]
		protected Collider[] targetColliders;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip[] audioClips;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject partical;

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xC368C4", Offset = "0xC368C4", VA = "0xC368C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xC36A58", Offset = "0xC36A58", VA = "0xC36A58")]
		public void AnimalMove()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xC36CCC", Offset = "0xC36CCC", VA = "0xC36CCC", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xC36D7C", Offset = "0xC36D7C", VA = "0xC36D7C", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xC36D84", Offset = "0xC36D84", VA = "0xC36D84", Slot = "11")]
		protected virtual void Die()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xC36F80", Offset = "0xC36F80", VA = "0xC36F80")]
		public BaseRealAnimalLYN()
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xC36F9C", Offset = "0xC36F9C", VA = "0xC36F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8462CC", Offset = "0x8462CC")]
		private void <AnimalMove>b__10_0()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xC37014", Offset = "0xC37014", VA = "0xC37014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8462DC", Offset = "0x8462DC")]
		private void <Die>b__13_0()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class Eagle : BaseRealAnimalLYN
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0xCC6CA0", Offset = "0xCC6CA0", VA = "0xCC6CA0", Slot = "11")]
		protected override void Die()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xCC6D7C", Offset = "0xCC6D7C", VA = "0xCC6D7C")]
		public Eagle()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class BalloonTarget : BaseTarget
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform modeTran;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int baseHitSource;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843320", Offset = "0x843320")]
		[SerializeField]
		public int killSource;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84336C", Offset = "0x84336C")]
		private Collider targetCollider;

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xC35BC8", Offset = "0xC35BC8", VA = "0xC35BC8", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xC35C60", Offset = "0xC35C60", VA = "0xC35C60")]
		public void Die()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xC35D10", Offset = "0xC35D10", VA = "0xC35D10", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xC35D18", Offset = "0xC35D18", VA = "0xC35D18", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xC35E50", Offset = "0xC35E50", VA = "0xC35E50")]
		public BalloonTarget()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class BottleTarget : BaseTarget
	{
		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject BottleFull;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int baseHitSource;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8433B8", Offset = "0x8433B8")]
		public int killSource;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843404", Offset = "0x843404")]
		private Collider targetCollider;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Collider> SuiColliders;

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xCB63F8", Offset = "0xCB63F8", VA = "0xCB63F8", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xCB6480", Offset = "0xCB6480", VA = "0xCB6480")]
		public void Die()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xCB6784", Offset = "0xCB6784", VA = "0xCB6784", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xCB68AC", Offset = "0xCB68AC", VA = "0xCB68AC", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xCB68B4", Offset = "0xCB68B4", VA = "0xCB68B4")]
		public BottleTarget()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class ChildTarget : BaseTarget
	{
		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform modeTran;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody modeRigidbody;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Collider modeCollider;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int baseHitSourse;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843480", Offset = "0x843480")]
		public int killSource;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8434CC", Offset = "0x8434CC")]
		private Collider targetCollider;

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xCC03A4", Offset = "0xCC03A4", VA = "0xCC03A4", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xCC042C", Offset = "0xCC042C", VA = "0xCC042C")]
		public void Die(Vector3 hitNormal)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xCC0648", Offset = "0xCC0648", VA = "0xCC0648", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xCC0770", Offset = "0xCC0770", VA = "0xCC0770", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xCC05DC", Offset = "0xCC05DC", VA = "0xCC05DC")]
		public void EnablePhysic()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xCC0778", Offset = "0xCC0778", VA = "0xCC0778")]
		public void DisbalePhysic()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xCC07D0", Offset = "0xCC07D0", VA = "0xCC07D0")]
		public ChildTarget()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class CoconutLYN : FruitTarget
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RotateYeZi RotateYeZi;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AutoMovePath1 AutoMovePath1;

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xCC0C94", Offset = "0xCC0C94", VA = "0xCC0C94", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xCC0E2C", Offset = "0xCC0E2C", VA = "0xCC0E2C")]
		public CoconutLYN()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class FruitTarget : BaseTarget
	{
		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject FruitFull;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int baseHitSource;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843518", Offset = "0x843518")]
		public int killSource;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843564", Offset = "0x843564")]
		private Collider targetCollider;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Collider> SuiColliders;

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xB897F0", Offset = "0xB897F0", VA = "0xB897F0", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xB89878", Offset = "0xB89878", VA = "0xB89878")]
		public void Die()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xB89B50", Offset = "0xB89B50", VA = "0xB89B50", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xB89CBC", Offset = "0xB89CBC", VA = "0xB89CBC", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xB89CC4", Offset = "0xB89CC4", VA = "0xB89CC4")]
		public FruitTarget()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class ScoundrelTarget : BaseTarget
	{
		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform modeTran;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody modeRigidbody;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Collider modeCollider;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform HeadCenter;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float HeadRadiu;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int baseHitSourse;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8435E0", Offset = "0x8435E0")]
		[SerializeField]
		public int killSource;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84362C", Offset = "0x84362C")]
		[SerializeField]
		private Collider targetCollider;

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xCCFE38", Offset = "0xCCFE38", VA = "0xCCFE38")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xCCFE80", Offset = "0xCCFE80", VA = "0xCCFE80", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xCCFF08", Offset = "0xCCFF08", VA = "0xCCFF08")]
		public void Die()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xCD0088", Offset = "0xCD0088", VA = "0xCD0088", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xCD01B0", Offset = "0xCD01B0", VA = "0xCD01B0", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xCD001C", Offset = "0xCD001C", VA = "0xCD001C")]
		public void EnablePhysic()
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xCD0234", Offset = "0xCD0234", VA = "0xCD0234")]
		public void DisbalePhysic()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xCD028C", Offset = "0xCD028C", VA = "0xCD028C")]
		public ScoundrelTarget()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class TargetHide : MonoBehaviour
	{
		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseTarget baseTarget;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool IsHiding;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float LoopTime;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float durationTime;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool hiding;

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xFA7248", Offset = "0xFA7248", VA = "0xFA7248")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xFA730C", Offset = "0xFA730C", VA = "0xFA730C")]
		private void Update()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xFA73D0", Offset = "0xFA73D0", VA = "0xFA73D0")]
		private void OnHitBoard(GameObject arrowId, BaseTarget target, int source)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xFA7408", Offset = "0xFA7408", VA = "0xFA7408")]
		public TargetHide()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class TargetMove : MonoBehaviour
	{
		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseTarget baseTarget;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isMoving;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843678", Offset = "0x843678")]
		public bool MoveVertical;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool NeedTurn;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SportTime;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsGoing;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float target1;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float target2;

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xFA7428", Offset = "0xFA7428", VA = "0xFA7428")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xFA74EC", Offset = "0xFA74EC", VA = "0xFA74EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xFA7720", Offset = "0xFA7720", VA = "0xFA7720")]
		private void MoveRight()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xFA7828", Offset = "0xFA7828", VA = "0xFA7828")]
		private void MoveLeft()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xFA7510", Offset = "0xFA7510", VA = "0xFA7510")]
		private void MoveUp()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xFA7930", Offset = "0xFA7930", VA = "0xFA7930")]
		private void Turn()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xFA7618", Offset = "0xFA7618", VA = "0xFA7618")]
		private void MoveDown()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xFA7A58", Offset = "0xFA7A58", VA = "0xFA7A58")]
		private void OnHitBoard(GameObject id, BaseTarget target, int source)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xFA7B80", Offset = "0xFA7B80", VA = "0xFA7B80")]
		public TargetMove()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xFA7B90", Offset = "0xFA7B90", VA = "0xFA7B90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8462EC", Offset = "0x8462EC")]
		private void <MoveRight>b__10_0()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xFA7BB8", Offset = "0xFA7BB8", VA = "0xFA7BB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8462FC", Offset = "0x8462FC")]
		private void <MoveLeft>b__11_0()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xFA7BE0", Offset = "0xFA7BE0", VA = "0xFA7BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84630C", Offset = "0x84630C")]
		private void <MoveUp>b__12_0()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xFA7BF0", Offset = "0xFA7BF0", VA = "0xFA7BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84631C", Offset = "0x84631C")]
		private void <Turn>b__13_0()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xFA7C0C", Offset = "0xFA7C0C", VA = "0xFA7C0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84632C", Offset = "0x84632C")]
		private void <MoveDown>b__14_0()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class BreakthroughModeLYN : MonoBehaviour, IGameModeLYN
	{
		[Token(Token = "0x20001B7")]
		public delegate void DelegateUpdateLevelItem(LevelItem item);

		[Token(Token = "0x20001B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C458", Offset = "0x83C458")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BreakthroughModeLYN <>4__this;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isPass;

			[Token(Token = "0x60007CF")]
			[Address(RVA = "0xB78FC8", Offset = "0xB78FC8", VA = "0xB78FC8")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60007D0")]
			[Address(RVA = "0xB78FD0", Offset = "0xB78FD0", VA = "0xB78FD0")]
			internal void <OnGameFinish>b__0()
			{
			}
		}

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int limitArrowCount;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IPlayer player;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LevelItem levelItem;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool isPass;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float curSource;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform XrOrigin;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform mainCamera;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool LocIsUpdate;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int AnimalTime;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Arrow> _arrows;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Quiver quiver;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool primaryButton;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timer;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int index;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int _fireArrowCount;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int state;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public DelegateUpdateLevelItem UpdateLevelItem;

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xCBACA0", Offset = "0xCBACA0", VA = "0xCBACA0")]
		public void Start()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xCBAD84", Offset = "0xCBAD84", VA = "0xCBAD84")]
		public void ExitGame()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xCBAE38", Offset = "0xCBAE38", VA = "0xCBAE38")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xCBB164", Offset = "0xCBB164", VA = "0xCBB164")]
		public void SetNextWind()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xCBB258", Offset = "0xCBB258", VA = "0xCBB258")]
		private void OnFireArrowAction(Arrow arrow)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xCBB4A0", Offset = "0xCBB4A0", VA = "0xCBB4A0")]
		private void OnArrowFlyFinish()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xCBAFAC", Offset = "0xCBAFAC", VA = "0xCBAFAC")]
		private int GetLevelStar()
		{
			return default(int);
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xCBB4A4", Offset = "0xCBB4A4", VA = "0xCBB4A4")]
		private void OnHitBoard(GameObject arrowId, BaseTarget target, int source)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xCBB6A4", Offset = "0xCBB6A4", VA = "0xCBB6A4", Slot = "4")]
		public void Init(LevelItem levelItem)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xCBB024", Offset = "0xCBB024", VA = "0xCBB024", Slot = "5")]
		public void OnGameFinish(bool isPass, int star = 0)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xCBB3B8", Offset = "0xCBB3B8", VA = "0xCBB3B8")]
		public void InitAnimal()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xCBBC24", Offset = "0xCBBC24", VA = "0xCBBC24")]
		public BreakthroughModeLYN()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public interface IGameModeLYN
	{
		[Token(Token = "0x60007D1")]
		void Init(LevelItem levelItem);

		[Token(Token = "0x60007D2")]
		void OnGameFinish(bool isPass, int star);
	}
	[Token(Token = "0x20001BA")]
	public interface IGameMode
	{
		[Token(Token = "0x60007D3")]
		void Init(LevelItem levelItem);

		[Token(Token = "0x60007D4")]
		void OnGameFinish(bool isPass);
	}
	[Token(Token = "0x20001BB")]
	public class LoadingLYN : MonoBehaviour
	{
		[Token(Token = "0x20001BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C468", Offset = "0x83C468")]
		private sealed class <LoadAsyncScene>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int id;

			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callBack;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LoadingLYN <>4__this;

			[Token(Token = "0x4000D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <asyncOperation>5__1;

			[Token(Token = "0x170000D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007E5")]
				[Address(RVA = "0xB7E050", Offset = "0xB7E050", VA = "0xB7E050", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007E7")]
				[Address(RVA = "0xB7E098", Offset = "0xB7E098", VA = "0xB7E098", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007E2")]
			[Address(RVA = "0xB7DDEC", Offset = "0xB7DDEC", VA = "0xB7DDEC")]
			[DebuggerHidden]
			public <LoadAsyncScene>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60007E3")]
			[Address(RVA = "0xB7DE18", Offset = "0xB7DE18", VA = "0xB7DE18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007E4")]
			[Address(RVA = "0xB7DE1C", Offset = "0xB7DE1C", VA = "0xB7DE1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007E6")]
			[Address(RVA = "0xB7E058", Offset = "0xB7E058", VA = "0xB7E058", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x843710", Offset = "0x843710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x843710", Offset = "0x843710")]
		private static LoadingLYN <Instance>k__BackingField;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84374C", Offset = "0x84374C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84374C", Offset = "0x84374C")]
		private int <param>k__BackingField;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _isLoading;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int senceId;

		[Token(Token = "0x170000D6")]
		public static LoadingLYN Instance
		{
			[Token(Token = "0x60007D6")]
			[Address(RVA = "0xB95544", Offset = "0xB95544", VA = "0xB95544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84634C", Offset = "0x84634C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0xB954F0", Offset = "0xB954F0", VA = "0xB954F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84633C", Offset = "0x84633C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public int param
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0xB95590", Offset = "0xB95590", VA = "0xB95590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84635C", Offset = "0x84635C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0xB95598", Offset = "0xB95598", VA = "0xB95598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84636C", Offset = "0x84636C")]
			set
			{
			}
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xB955A0", Offset = "0xB955A0", VA = "0xB955A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xB95714", Offset = "0xB95714", VA = "0xB95714")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xB92E98", Offset = "0xB92E98", VA = "0xB92E98")]
		public void LoadLevel(int id)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xB95770", Offset = "0xB95770", VA = "0xB95770")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84637C", Offset = "0x84637C")]
		private IEnumerator LoadAsyncScene(int id, Action callBack)
		{
			return null;
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xB9580C", Offset = "0xB9580C", VA = "0xB9580C")]
		public void ChangeLevel([Optional] Quiver quiver)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xB9591C", Offset = "0xB9591C", VA = "0xB9591C")]
		public void ReLoadLevel()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xB95AAC", Offset = "0xB95AAC", VA = "0xB95AAC")]
		public LoadingLYN()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xB95AB8", Offset = "0xB95AB8", VA = "0xB95AB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8463DC", Offset = "0x8463DC")]
		private void <LoadLevel>b__12_0()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xB95B34", Offset = "0xB95B34", VA = "0xB95B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8463EC", Offset = "0x8463EC")]
		private void <ReLoadLevel>b__15_0()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class AutoMoveBackTest : BaseMove
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform starPoint;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform endPoint;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x843788", Offset = "0x843788")]
		[SerializeField]
		private float value;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tweener _tween;

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xC311A4", Offset = "0xC311A4", VA = "0xC311A4")]
		private void UpdatePos(float value)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xC31274", Offset = "0xC31274", VA = "0xC31274")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xC3127C", Offset = "0xC3127C", VA = "0xC3127C", Slot = "8")]
		public override void Init()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xC31448", Offset = "0xC31448", VA = "0xC31448", Slot = "9")]
		public override void PlayMove()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xC3149C", Offset = "0xC3149C", VA = "0xC3149C", Slot = "10")]
		public override void StopMove()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xC314EC", Offset = "0xC314EC", VA = "0xC314EC")]
		public AutoMoveBackTest()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class BalloonTarget1 : BaseTarget
	{
		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int baseHitSource;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8437C8", Offset = "0x8437C8")]
		[SerializeField]
		public int killSource;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843814", Offset = "0x843814")]
		private Collider targetCollider;

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xC35E60", Offset = "0xC35E60", VA = "0xC35E60", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xC35EE8", Offset = "0xC35EE8", VA = "0xC35EE8")]
		public void Die()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xC35F60", Offset = "0xC35F60", VA = "0xC35F60", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xC35F68", Offset = "0xC35F68", VA = "0xC35F68", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xC36010", Offset = "0xC36010", VA = "0xC36010")]
		public BalloonTarget1()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class BottleTarget1 : BaseTarget
	{
		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int baseHitSource;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843860", Offset = "0x843860")]
		public int killSource;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8438AC", Offset = "0x8438AC")]
		private Collider targetCollider;

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xCB68C4", Offset = "0xCB68C4", VA = "0xCB68C4", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xCB694C", Offset = "0xCB694C", VA = "0xCB694C")]
		public void Die()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xCB69C8", Offset = "0xCB69C8", VA = "0xCB69C8", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xCB6BCC", Offset = "0xCB6BCC", VA = "0xCB6BCC")]
		private void ShowResult()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xCB6BF0", Offset = "0xCB6BF0", VA = "0xCB6BF0", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xCB6BF8", Offset = "0xCB6BF8", VA = "0xCB6BF8")]
		public BottleTarget1()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class FruitTarget1 : BaseTarget
	{
		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int baseHitSource;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8438F8", Offset = "0x8438F8")]
		public int killSource;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843944", Offset = "0x843944")]
		[SerializeField]
		private Collider targetCollider;

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xB89CD4", Offset = "0xB89CD4", VA = "0xB89CD4", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xB89D5C", Offset = "0xB89D5C", VA = "0xB89D5C")]
		public void Die()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xB89DD8", Offset = "0xB89DD8", VA = "0xB89DD8", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xB8A05C", Offset = "0xB8A05C", VA = "0xB8A05C")]
		public void ShowResult()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xB8A080", Offset = "0xB8A080", VA = "0xB8A080", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xB8A088", Offset = "0xB8A088", VA = "0xB8A088")]
		public FruitTarget1()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class PendulumClockRotateTest : BaseMove
	{
		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float limtAngle;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x843990", Offset = "0x843990")]
		private float value;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tweener _tweener;

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x20DC4FC", Offset = "0x20DC4FC", VA = "0x20DC4FC")]
		public void RotateAngle(float value)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x20DC550", Offset = "0x20DC550", VA = "0x20DC550")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x20DC558", Offset = "0x20DC558", VA = "0x20DC558", Slot = "8")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x20DC680", Offset = "0x20DC680", VA = "0x20DC680", Slot = "9")]
		public override void PlayMove()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x20DC6D8", Offset = "0x20DC6D8", VA = "0x20DC6D8", Slot = "10")]
		public override void StopMove()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x20DC730", Offset = "0x20DC730", VA = "0x20DC730")]
		public PendulumClockRotateTest()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class RingTarget1 : BaseTarget
	{
		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform aimPoint;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshCollider meshCollider;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextEffect _textEffect;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float space;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float dis;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float maxDis;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float minDis;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int score;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform testTran;

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xCCC7C0", Offset = "0xCCC7C0", VA = "0xCCC7C0", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xCCC880", Offset = "0xCCC880", VA = "0xCCC880")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xCCC91C", Offset = "0xCCC91C", VA = "0xCCC91C", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xCCCAC0", Offset = "0xCCCAC0", VA = "0xCCCAC0", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xCCCA5C", Offset = "0xCCCA5C", VA = "0xCCCA5C")]
		private int GetIndexByDistance(float distance, float minDis, float maxDis)
		{
			return default(int);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xCCCC48", Offset = "0xCCCC48", VA = "0xCCCC48")]
		public RingTarget1()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class AiBow : MonoBehaviour
	{
		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform dragTran;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform startPoint;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform pointEnd;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform moveTran;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string id;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform arrowModel;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject prefab;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PathData pathData;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Ray _ray;

		[Token(Token = "0x170000DA")]
		public Transform GetArrowModel
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0x1CBC810", Offset = "0x1CBC810", VA = "0x1CBC810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1CBC818", Offset = "0x1CBC818", VA = "0x1CBC818")]
		public void ShowArrow()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1CBC848", Offset = "0x1CBC848", VA = "0x1CBC848")]
		private void UpdateBow(float value)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1CBC928", Offset = "0x1CBC928", VA = "0x1CBC928")]
		public void DrawBow(Vector3 dragPos)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x1CBCA84", Offset = "0x1CBCA84", VA = "0x1CBCA84")]
		public void ShootArrow(GameObject owner, Vector3 targetPos)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1CBCE88", Offset = "0x1CBCE88", VA = "0x1CBCE88")]
		private GameObject CreatArrow(Vector3 pos, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1CBCF6C", Offset = "0x1CBCF6C", VA = "0x1CBCF6C")]
		public AiBow()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1CBD030", Offset = "0x1CBD030", VA = "0x1CBD030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84644C", Offset = "0x84644C")]
		private void <ShootArrow>b__14_1(float value)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1CBD034", Offset = "0x1CBD034", VA = "0x1CBD034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84645C", Offset = "0x84645C")]
		private void <ShootArrow>b__14_0(float value)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class AnimalTaget : BaseTarget
	{
		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform modeTran;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody modeRigidbody;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Collider modeCollider;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<SpecialAreaPoint> specialAreaPoints;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int baseHitSource;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843A90", Offset = "0x843A90")]
		[SerializeField]
		public int killSource;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843ADC", Offset = "0x843ADC")]
		private Collider targetCollider;

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xC2BD28", Offset = "0xC2BD28", VA = "0xC2BD28")]
		public void Die(Vector3 hitNormal)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xC2BEF8", Offset = "0xC2BEF8", VA = "0xC2BEF8", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xC2C128", Offset = "0xC2C128", VA = "0xC2C128", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xC2C204", Offset = "0xC2C204", VA = "0xC2C204", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xC2BE8C", Offset = "0xC2BE8C", VA = "0xC2BE8C")]
		public void EnablePhysic()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xC2C0D0", Offset = "0xC2C0D0", VA = "0xC2C0D0")]
		public void DisbalePhysic()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xC2C884", Offset = "0xC2C884", VA = "0xC2C884")]
		public AnimalTaget()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class AnimatorEvent : MonoBehaviour
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityAction<string> bindKeyEvent;

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xC2C89C", Offset = "0xC2C89C", VA = "0xC2C89C")]
		public void OnKeyEvent(string eventName)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xC2C90C", Offset = "0xC2C90C", VA = "0xC2C90C")]
		public AnimatorEvent()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class BaseMonitorMono : MonoBehaviour
	{
		[Token(Token = "0x20001C7")]
		public delegate void DelegateHitBroadEvent(Arrow arrow, int source);

		[Token(Token = "0x20001C8")]
		public delegate void DelegateChangeWind(WindData data);

		[Token(Token = "0x20001C9")]
		public delegate void DelegateGameOver(bool isTrue);

		[Token(Token = "0x20001CA")]
		public delegate void DelegateInit();

		[Token(Token = "0x20001CB")]
		public delegate void DelegateFireArrow(Arrow arrow);

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DelegateInit dInit;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DelegateGameOver dGameOver;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static DelegateChangeWind dChangeWind;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static DelegateHitBroadEvent dHitBroadEvent;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static DelegateFireArrow dFireArrow;

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xC2F19C", Offset = "0xC2F19C", VA = "0xC2F19C")]
		public static void HitBroadEvent(Arrow arrow, int source)
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xC36144", Offset = "0xC36144", VA = "0xC36144")]
		public static void ChangeWind(WindData data)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xC361AC", Offset = "0xC361AC", VA = "0xC361AC")]
		public static void Init()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xC3620C", Offset = "0xC3620C", VA = "0xC3620C")]
		public static void GameOver(bool isTrue)
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xC2E674", Offset = "0xC2E674", VA = "0xC2E674")]
		public static void FireArrow(Arrow arrow)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xC36274", Offset = "0xC36274", VA = "0xC36274", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xC36554", Offset = "0xC36554", VA = "0xC36554", Slot = "5")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xC36834", Offset = "0xC36834", VA = "0xC36834", Slot = "6")]
		protected virtual void OnHitBroadEvent(Arrow arrow, int source)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xC36838", Offset = "0xC36838", VA = "0xC36838", Slot = "7")]
		protected virtual void OnChangeWind(WindData data)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xC3683C", Offset = "0xC3683C", VA = "0xC3683C", Slot = "8")]
		protected virtual void OnInit()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xC36840", Offset = "0xC36840", VA = "0xC36840", Slot = "9")]
		protected virtual void OnFireArrow(Arrow arrow)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xC36844", Offset = "0xC36844", VA = "0xC36844", Slot = "10")]
		protected virtual void OnGameOver(bool isTrue)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xC2CF20", Offset = "0xC2CF20", VA = "0xC2CF20")]
		public BaseMonitorMono()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class WindArrow : BaseMonitorMono
	{
		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform windArrowTran;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI powerText;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject parent;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _localAngle;

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xB75550", Offset = "0xB75550", VA = "0xB75550", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xB75594", Offset = "0xB75594", VA = "0xB75594", Slot = "7")]
		protected override void OnChangeWind(WindData windData)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xB75720", Offset = "0xB75720", VA = "0xB75720")]
		private void UpdatePowerInfoTxt(string txt)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xB757F8", Offset = "0xB757F8", VA = "0xB757F8")]
		public WindArrow()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class WindFlag : BaseMonitorMono
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform modeTran;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform modelFlag;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Cloth cloth;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _rotateDown;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _rotateUp;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tweener _tweener;

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xB75904", Offset = "0xB75904", VA = "0xB75904")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xB75968", Offset = "0xB75968", VA = "0xB75968", Slot = "7")]
		protected override void OnChangeWind(WindData windData)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xB75C78", Offset = "0xB75C78", VA = "0xB75C78")]
		public void ShakeHorizontal()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xB75D00", Offset = "0xB75D00", VA = "0xB75D00")]
		public WindFlag()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class BaseUIPanel : MonoBehaviour
	{
		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x170000DB")]
		public CanvasGroup GetCanvasGroup
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0xC37230", Offset = "0xC37230", VA = "0xC37230")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xC372E4", Offset = "0xC372E4", VA = "0xC372E4")]
		public BaseUIPanel()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class FollowCamera : MonoBehaviour
	{
		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 offset;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RenderTexture _renderTexture;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Camera camera;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RawImage rawImage;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 heightVector2;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 wightVector2;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2 distanceVector2;

		[Token(Token = "0x170000DC")]
		public RenderTexture GetRenderTexture
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0xB88F18", Offset = "0xB88F18", VA = "0xB88F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xB88FEC", Offset = "0xB88FEC", VA = "0xB88FEC")]
		public void Init(RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xB89030", Offset = "0xB89030", VA = "0xB89030")]
		public void Init()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xB89088", Offset = "0xB89088", VA = "0xB89088")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xB8908C", Offset = "0xB8908C", VA = "0xB8908C")]
		private void Update()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xB8922C", Offset = "0xB8922C", VA = "0xB8922C")]
		public void SetFollowTarget(Transform target)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xB89234", Offset = "0xB89234", VA = "0xB89234")]
		public void Show()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xB8925C", Offset = "0xB8925C", VA = "0xB8925C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xB89284", Offset = "0xB89284", VA = "0xB89284")]
		public FollowCamera()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class Setting
	{
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string TAG_TARGET;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string TAG_GROUND;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string LAY_TARGET;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string LAY_OTHER;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string LAY_IGNORERAYCAST;

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xCD3A04", Offset = "0xCD3A04", VA = "0xCD3A04")]
		public Setting()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class ControllerManager : MonoBehaviour
	{
		[Token(Token = "0x6000853")]
		[Address(RVA = "0xCC4240", Offset = "0xCC4240", VA = "0xCC4240")]
		public ControllerManager()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class SelectSceneItem : MonoBehaviour
	{
		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform modelTran;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DanglingTarget danglingTarget;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Material> selectMaterials;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material[] _materials;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int id;

		[Token(Token = "0x170000DD")]
		public MeshRenderer GetMeshRender
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0xCD3214", Offset = "0xCD3214", VA = "0xCD3214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xCD32E0", Offset = "0xCD32E0", VA = "0xCD32E0")]
		private void UpdateView()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xCD33F4", Offset = "0xCD33F4", VA = "0xCD33F4")]
		private Material GetMaterialById(int id)
		{
			return null;
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xCD3480", Offset = "0xCD3480", VA = "0xCD3480")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xCD3484", Offset = "0xCD3484", VA = "0xCD3484")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xCD3548", Offset = "0xCD3548", VA = "0xCD3548")]
		private void SelectScene(GameObject arrowId, BaseTarget target, int source)
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xCD35DC", Offset = "0xCD35DC", VA = "0xCD35DC")]
		public SelectSceneItem()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class Environment : MonoBehaviour
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x843B58", Offset = "0x843B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x843B58", Offset = "0x843B58")]
		private static float <GravityOffset>k__BackingField;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x843B94", Offset = "0x843B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x843B94", Offset = "0x843B94")]
		private static Vector3 <WindV3>k__BackingField;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float gravity;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 windv3;

		[Token(Token = "0x170000DE")]
		public static float GravityOffset
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0xCC7448", Offset = "0xCC7448", VA = "0xCC7448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84647C", Offset = "0x84647C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600085B")]
			[Address(RVA = "0xCC73F0", Offset = "0xCC73F0", VA = "0xCC73F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84646C", Offset = "0x84646C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public static Vector3 WindV3
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0xCC7500", Offset = "0xCC7500", VA = "0xCC7500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84649C", Offset = "0x84649C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600085D")]
			[Address(RVA = "0xCC7494", Offset = "0xCC7494", VA = "0xCC7494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84648C", Offset = "0x84648C")]
			set
			{
			}
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xCC7550", Offset = "0xCC7550", VA = "0xCC7550")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xCC75BC", Offset = "0xCC75BC", VA = "0xCC75BC")]
		public Environment()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D4")]
	public struct WindData
	{
		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WindDirection WindDirection;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Power;

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xB75810", Offset = "0xB75810", VA = "0xB75810")]
		public WindData(WindDirection direction, float power)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xB7581C", Offset = "0xB7581C", VA = "0xB7581C")]
		public WindData(int index, float power)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xB75828", Offset = "0xB75828", VA = "0xB75828")]
		public WindData(float power)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xB75868", Offset = "0xB75868", VA = "0xB75868")]
		public Vector3 GetWind3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xB75890", Offset = "0xB75890", VA = "0xB75890")]
		public Vector2 GetWind()
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20001D5")]
	public enum WindDirection
	{
		[Token(Token = "0x4000D7E")]
		Left,
		[Token(Token = "0x4000D7F")]
		Right,
		[Token(Token = "0x4000D80")]
		UpLeft,
		[Token(Token = "0x4000D81")]
		UpRight,
		[Token(Token = "0x4000D82")]
		DownLeft,
		[Token(Token = "0x4000D83")]
		DownRight,
		[Token(Token = "0x4000D84")]
		None
	}
	[Token(Token = "0x20001D6")]
	public class ItemToggle : MonoBehaviour
	{
		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text text;

		[Token(Token = "0x170000E0")]
		public Toggle GetToggle
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0xB8F7B8", Offset = "0xB8F7B8", VA = "0xB8F7B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xB8F86C", Offset = "0xB8F86C", VA = "0xB8F86C")]
		public void Initialized(int id, UnityAction<bool> callBack)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xB8F920", Offset = "0xB8F920", VA = "0xB8F920")]
		public ItemToggle()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class AutoMoveBack : BaseMove
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform starPoint;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform endPoint;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x843BE0", Offset = "0x843BE0")]
		[SerializeField]
		private float value;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tweener _tween;

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xC30E24", Offset = "0xC30E24", VA = "0xC30E24")]
		private void UpdatePos(float value)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xC30EF4", Offset = "0xC30EF4", VA = "0xC30EF4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xC30EFC", Offset = "0xC30EFC", VA = "0xC30EFC", Slot = "8")]
		public override void Init()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xC310C8", Offset = "0xC310C8", VA = "0xC310C8", Slot = "9")]
		public override void PlayMove()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xC31128", Offset = "0xC31128", VA = "0xC31128", Slot = "10")]
		public override void StopMove()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xC31180", Offset = "0xC31180", VA = "0xC31180")]
		public AutoMoveBack()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public abstract class BaseMove : MonoBehaviour, IMove
	{
		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x843C20", Offset = "0x843C20")]
		public float speed;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x843C58", Offset = "0x843C58")]
		public Transform moveTran;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isMoving;

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xC36848", Offset = "0xC36848", VA = "0xC36848")]
		private void Start()
		{
		}

		[Token(Token = "0x6000870")]
		public abstract void Init();

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xC3111C", Offset = "0xC3111C", VA = "0xC3111C", Slot = "9")]
		public virtual void PlayMove()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xC31178", Offset = "0xC31178", VA = "0xC31178", Slot = "10")]
		public virtual void StopMove()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xC36854", Offset = "0xC36854", VA = "0xC36854", Slot = "7")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xC31194", Offset = "0xC31194", VA = "0xC31194")]
		protected BaseMove()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public interface IMove
	{
		[Token(Token = "0x6000875")]
		void Init();

		[Token(Token = "0x6000876")]
		void PlayMove();

		[Token(Token = "0x6000877")]
		void StopMove();

		[Token(Token = "0x6000878")]
		bool IsPlaying();
	}
	[Token(Token = "0x20001DA")]
	public class Path : MonoBehaviour
	{
		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> points;

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x20DC010", Offset = "0x20DC010", VA = "0x20DC010")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x20DC14C", Offset = "0x20DC14C", VA = "0x20DC14C")]
		public Path()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class PendulumClockRotate : BaseMove
	{
		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float limtAngle;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x843C90", Offset = "0x843C90")]
		[SerializeField]
		private float value;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tweener _tweener;

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x20DC2BC", Offset = "0x20DC2BC", VA = "0x20DC2BC")]
		public void RotateAngle(float value)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x20DC310", Offset = "0x20DC310", VA = "0x20DC310")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x20DC318", Offset = "0x20DC318", VA = "0x20DC318", Slot = "8")]
		public override void Init()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x20DC444", Offset = "0x20DC444", VA = "0x20DC444", Slot = "9")]
		public override void PlayMove()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x20DC49C", Offset = "0x20DC49C", VA = "0x20DC49C", Slot = "10")]
		public override void StopMove()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x20DC4F4", Offset = "0x20DC4F4", VA = "0x20DC4F4")]
		public PendulumClockRotate()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class PlayMuisc : MonoBehaviour
	{
		[Token(Token = "0x20001DD")]
		public enum MusicType
		{
			[Token(Token = "0x4000D93")]
			ShowArrow,
			[Token(Token = "0x4000D94")]
			ShowBow,
			[Token(Token = "0x4000D95")]
			PutDown,
			[Token(Token = "0x4000D96")]
			Push,
			[Token(Token = "0x4000D97")]
			Fire,
			[Token(Token = "0x4000D98")]
			Hit,
			[Token(Token = "0x4000D99")]
			Win,
			[Token(Token = "0x4000D9A")]
			Select,
			[Token(Token = "0x4000D9B")]
			SelectBtn,
			[Token(Token = "0x4000D9C")]
			WinGame,
			[Token(Token = "0x4000D9D")]
			ArrowFall,
			[Token(Token = "0x4000D9E")]
			ArrowDing,
			[Token(Token = "0x4000D9F")]
			ArrowLoad,
			[Token(Token = "0x4000DA0")]
			ArrowAllFall,
			[Token(Token = "0x4000DA1")]
			ArrowPickUp,
			[Token(Token = "0x4000DA2")]
			Start,
			[Token(Token = "0x4000DA3")]
			FailGame
		}

		[Token(Token = "0x20001DE")]
		public enum BgmType
		{
			[Token(Token = "0x4000DA5")]
			Field,
			[Token(Token = "0x4000DA6")]
			Stadium
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x20DC934", Offset = "0x20DC934", VA = "0x20DC934")]
		public static void PlayMusic(MusicType musicType)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x20DC93C", Offset = "0x20DC93C", VA = "0x20DC93C")]
		public static void PlayBgm(BgmType bgmType)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x20DC944", Offset = "0x20DC944", VA = "0x20DC944")]
		public PlayMuisc()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class Quiver : MonoBehaviour, IPunObservable
	{
		[Serializable]
		[Token(Token = "0x20001E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C478", Offset = "0x83C478")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__23_0;

			[Token(Token = "0x6000893")]
			[Address(RVA = "0xB847E0", Offset = "0xB847E0", VA = "0xB847E0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000894")]
			[Address(RVA = "0xB847E8", Offset = "0xB847E8", VA = "0xB847E8")]
			internal bool <PickArrow>b__23_0(GameObject o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int count;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsCanPick;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843CD0", Offset = "0x843CD0")]
		public bool isAutoCreat;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843D08", Offset = "0x843D08")]
		public float interval;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<GameObject> arrowModels;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _curTime;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _isWait;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, GameObject> _arrowModelDic;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Queue<int> _modelQueue;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool[] arrowModelActivates;

		[Token(Token = "0x170000E1")]
		public Queue<int> ModelQueue
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0xCC9AB8", Offset = "0xCC9AB8", VA = "0xCC9AB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		public int GetArrowCount
		{
			[Token(Token = "0x600088B")]
			[Address(RVA = "0xCC9D28", Offset = "0xCC9D28", VA = "0xCC9D28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xCC9820", Offset = "0xCC9820", VA = "0xCC9820")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xCC98D8", Offset = "0xCC98D8", VA = "0xCC98D8")]
		public void Init(int count)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xCC9AA8", Offset = "0xCC9AA8", VA = "0xCC9AA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xCC9AC0", Offset = "0xCC9AC0", VA = "0xCC9AC0")]
		public void UpdateRecover()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xCC9C2C", Offset = "0xCC9C2C", VA = "0xCC9C2C")]
		public void UpdateModel(int[] arrowIndexs)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xCC9B24", Offset = "0xCC9B24", VA = "0xCC9B24")]
		public void RecoverOneArrow()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xCC9D30", Offset = "0xCC9D30", VA = "0xCC9D30")]
		public Arrow PickArrow(Vector3 handPos)
		{
			return null;
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xCCA0B8", Offset = "0xCCA0B8", VA = "0xCCA0B8")]
		private Arrow CreateArrow(Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xCC9E74", Offset = "0xCC9E74", VA = "0xCC9E74")]
		private bool GetNearArrow(Vector3 targetPos, ref GameObject arrow, ref int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xCCA234", Offset = "0xCCA234", VA = "0xCCA234")]
		public bool PickArrow(Vector3 targetPos, ref int count)
		{
			return default(bool);
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xCCA4A0", Offset = "0xCCA4A0", VA = "0xCCA4A0", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xCCA66C", Offset = "0xCCA66C", VA = "0xCCA66C")]
		public Quiver()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class AimCameraController : MonoBehaviour
	{
		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject model;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x843D60", Offset = "0x843D60")]
		private float value;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x843DA0", Offset = "0x843DA0")]
		private float fieldOfView;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RawImage rawImage;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Camera aimCamera;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float startValue;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxValue;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float startFieldOfView;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float endFieldOfView;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3 direction;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Vector3 startPos;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Ray _ray;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RaycastHit _raycastHit;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _maxUpdateValue;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float scale;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Transform orientation;

		[Token(Token = "0x170000E3")]
		public GameObject GetModel
		{
			[Token(Token = "0x6000895")]
			[Address(RVA = "0x1CBDBBC", Offset = "0x1CBDBBC", VA = "0x1CBDBBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private Vector3 CameraPosition
		{
			[Token(Token = "0x600089D")]
			[Address(RVA = "0x1CBE028", Offset = "0x1CBE028", VA = "0x1CBE028")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600089E")]
			[Address(RVA = "0x1CBDE30", Offset = "0x1CBDE30", VA = "0x1CBDE30")]
			set
			{
			}
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1CBDBC4", Offset = "0x1CBDBC4", VA = "0x1CBDBC4")]
		public void UpdateFieldOfView(float value)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1CBDC08", Offset = "0x1CBDC08", VA = "0x1CBDC08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x1CBDE84", Offset = "0x1CBDE84", VA = "0x1CBDE84")]
		public void Init(Transform orientation)
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1CBDE8C", Offset = "0x1CBDE8C", VA = "0x1CBDE8C")]
		public void UpdateView(float value)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1CBE054", Offset = "0x1CBE054", VA = "0x1CBE054")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1CBE080", Offset = "0x1CBE080", VA = "0x1CBE080")]
		private void Awake()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1CBE0EC", Offset = "0x1CBE0EC", VA = "0x1CBE0EC")]
		public void BackView()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1CBE214", Offset = "0x1CBE214", VA = "0x1CBE214")]
		public AimCameraController()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1CBE27C", Offset = "0x1CBE27C", VA = "0x1CBE27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8464AC", Offset = "0x8464AC")]
		private void <BackView>b__25_0(float newValue)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1CBE280", Offset = "0x1CBE280", VA = "0x1CBE280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8464BC", Offset = "0x8464BC")]
		private void <BackView>b__25_1(float newValue)
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class Arrow : BaseBowArrow, PoolMananger.IPoolObj
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843E40", Offset = "0x843E40")]
		[SerializeField]
		private Transform arrowHead;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843E8C", Offset = "0x843E8C")]
		[SerializeField]
		private Transform modeTran;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TrailRenderer trailRenderer;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject effect;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Ray ray;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _isFire;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RaycastHit[] _hits;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private PathData _pathData;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 _prePos;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 _curDir;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UnityAction onRecycleAction;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public UnityAction<Arrow, int> onHitCallBack;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public UnityAction flyFinishAction;

		[Token(Token = "0x4000DD2")]
		public const string TAG_Arrow = "Arrow";

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float speed;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float flySpeed;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _effectPlay;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x843F08", Offset = "0x843F08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x843F08", Offset = "0x843F08")]
		private bool <IsFall>k__BackingField;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float dis;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool _isFirePath;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 startPos;

		[Token(Token = "0x170000E5")]
		public Transform GetArrowHead
		{
			[Token(Token = "0x60008A2")]
			[Address(RVA = "0xC2DE80", Offset = "0xC2DE80", VA = "0xC2DE80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public bool IsFall
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xC2EB6C", Offset = "0xC2EB6C", VA = "0xC2EB6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8464DC", Offset = "0x8464DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0xC2EB60", Offset = "0xC2EB60", VA = "0xC2EB60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8464CC", Offset = "0x8464CC")]
			private set
			{
			}
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xC2DE88", Offset = "0xC2DE88", VA = "0xC2DE88", Slot = "12")]
		public void Recycle(float delayTime)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xC2DF60", Offset = "0xC2DF60", VA = "0xC2DF60", Slot = "8")]
		public override void PickUp(Transform handTran, Vector3 direction, Vector3 localOffsetPos)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xC2E100", Offset = "0xC2E100", VA = "0xC2E100")]
		public void InitSet()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xC2E170", Offset = "0xC2E170", VA = "0xC2E170", Slot = "9")]
		public override void PutDown()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xC2E1E8", Offset = "0xC2E1E8", VA = "0xC2E1E8")]
		public void InitArrow(GameObject owner, PathData pathData)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xC2E29C", Offset = "0xC2E29C", VA = "0xC2E29C")]
		public void FireArrow(GameObject owner, Vector3 position, Quaternion rotation, Vector3 startPos, Vector3 startDir, float power, PathData data)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xC2E524", Offset = "0xC2E524", VA = "0xC2E524")]
		public void FireArrowDefaultData(Vector3 position, Vector3 direction, float power, Vector3 wind)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xC2E3B8", Offset = "0xC2E3B8", VA = "0xC2E3B8")]
		public void FireArrow(GameObject owner, Vector3 startPos, Vector3 startDir, float power)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xC2E6DC", Offset = "0xC2E6DC", VA = "0xC2E6DC")]
		public Vector3 TransformPoint(Vector3 pos, float offset = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xC2E750", Offset = "0xC2E750", VA = "0xC2E750")]
		private void HideEffect()
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xC2E7B0", Offset = "0xC2E7B0", VA = "0xC2E7B0")]
		private void HitToBoard(bool isSetParent, RaycastHit hit, float offset = 0f)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xC2EB74", Offset = "0xC2EB74", VA = "0xC2EB74")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xC2EC34", Offset = "0xC2EC34", VA = "0xC2EC34")]
		private void CheakHit()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xC2F218", Offset = "0xC2F218", VA = "0xC2F218")]
		public void FireWithPath(GameObject owener, Vector3 startPos, Vector3 endPos, float speed)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xC2F3AC", Offset = "0xC2F3AC", VA = "0xC2F3AC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xC2F3F0", Offset = "0xC2F3F0", VA = "0xC2F3F0")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xC2EB1C", Offset = "0xC2EB1C", VA = "0xC2EB1C")]
		private void OnFlyFinish()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xC2F5DC", Offset = "0xC2F5DC", VA = "0xC2F5DC")]
		public static Vector3 GetCurvePosition(Vector3 startPos, ref Vector3 speed, Vector3 wind, float startH, float interval, float g)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xC2F320", Offset = "0xC2F320", VA = "0xC2F320")]
		public Vector3[] GetPath(Vector3 startPos, Vector3 endPos)
		{
			return null;
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xC2F640", Offset = "0xC2F640", VA = "0xC2F640")]
		public static Vector3 GetCurvePosition(Vector3 startPos, Vector3 speed, Vector3 wind, float startH = 2f, int count = 100, float interval = 0.2f, float g = 0.2f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xC2F7A0", Offset = "0xC2F7A0", VA = "0xC2F7A0")]
		public Arrow()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xC2F7BC", Offset = "0xC2F7BC", VA = "0xC2F7BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8464EC", Offset = "0x8464EC")]
		private void <Recycle>b__17_0()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public abstract class BaseBowArrow : MonoBehaviourPun, IPickupItem
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Collider triggerCollider;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isPickUp;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool IsCanFire;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public GameObject owner;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Collider> physicsColliders;

		[Token(Token = "0x170000E7")]
		public bool IsLocalPlayer
		{
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0xC2F08C", Offset = "0xC2F08C", VA = "0xC2F08C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E8")]
		public Collider GetTriggerCollider
		{
			[Token(Token = "0x60008BE")]
			[Address(RVA = "0xC36120", Offset = "0xC36120", VA = "0xC36120")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		public Rigidbody GetRigidbody
		{
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0xC2E04C", Offset = "0xC2E04C", VA = "0xC2E04C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xC36020", Offset = "0xC36020", VA = "0xC36020")]
		public void OpenEnablePhysics()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xC2E248", Offset = "0xC2E248", VA = "0xC2E248")]
		public void DisablePhysics()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xC36074", Offset = "0xC36074", VA = "0xC36074")]
		private void SetAllPhysicsColliderEnable(bool isEnable)
		{
		}

		[Token(Token = "0x60008C1")]
		public abstract void PickUp(Transform handTran, Vector3 direction, Vector3 localOffsetPos);

		[Token(Token = "0x60008C2")]
		public abstract void PutDown();

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xC36128", Offset = "0xC36128", VA = "0xC36128", Slot = "10")]
		public virtual bool IsPickUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xC36130", Offset = "0xC36130", VA = "0xC36130", Slot = "11")]
		public virtual void SetPickUp(bool isPick)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xC2F7B4", Offset = "0xC2F7B4", VA = "0xC2F7B4")]
		protected BaseBowArrow()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public abstract class BaseTarget : MonoBehaviour, ITarget
	{
		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool isPenetrable;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool isActive;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x843F74", Offset = "0x843F74")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x843F74", Offset = "0x843F74")]
		private int <Source>k__BackingField;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HitRingEvent hitRingEvent;

		[Token(Token = "0x170000EA")]
		protected int Source
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0xC370A0", Offset = "0xC370A0", VA = "0xC370A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84650C", Offset = "0x84650C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0xC37098", Offset = "0xC37098", VA = "0xC37098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8464FC", Offset = "0x8464FC")]
			set
			{
			}
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xC3708C", Offset = "0xC3708C", VA = "0xC3708C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xC35C50", Offset = "0xC35C50", VA = "0xC35C50", Slot = "7")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x60008CA")]
		protected abstract int HitPoint(Vector3 point);

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xC2F194", Offset = "0xC2F194", VA = "0xC2F194", Slot = "4")]
		public bool IsCanThrough()
		{
			return default(bool);
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xC370A8", Offset = "0xC370A8", VA = "0xC370A8", Slot = "5")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xC370B0", Offset = "0xC370B0", VA = "0xC370B0")]
		public void SetActive(bool enable)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xC370BC", Offset = "0xC370BC", VA = "0xC370BC", Slot = "9")]
		public virtual bool HitTarget(PointInfo pointInfo, out int score)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CF")]
		public abstract void HitBoardEffect(PointInfo pointInfo);

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xC2C33C", Offset = "0xC2C33C", VA = "0xC2C33C")]
		public void HitBoardTextEffect(int Source, Vector3 position, Quaternion rotation, PointInfo pointInfo)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xC2C894", Offset = "0xC2C894", VA = "0xC2C894")]
		protected BaseTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E5")]
	public struct PointInfo
	{
		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject owner;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 Position;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 Normal;

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x20E317C", Offset = "0x20E317C", VA = "0x20E317C")]
		public PointInfo(GameObject owner, Vector3 pos, Quaternion rotate)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x20E3204", Offset = "0x20E3204", VA = "0x20E3204")]
		public PointInfo(GameObject owner, Vector3 position, Vector3 normal)
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public interface ITarget
	{
		[Token(Token = "0x60008D4")]
		bool IsCanThrough();

		[Token(Token = "0x60008D5")]
		bool IsActive();

		[Token(Token = "0x60008D6")]
		bool HitTarget(PointInfo pointInfo, out int score);
	}
	[Serializable]
	[Token(Token = "0x20001E7")]
	public class HitRingEvent : UnityEvent<GameObject, BaseTarget, int>
	{
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xB8EB08", Offset = "0xB8EB08", VA = "0xB8EB08")]
		public HitRingEvent()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class Bow : BaseBowArrow
	{
		[Serializable]
		[Token(Token = "0x20001E9")]
		public class OnFireArrowEvent : UnityEvent<Arrow>
		{
			[Token(Token = "0x6000902")]
			[Address(RVA = "0xB78490", Offset = "0xB78490", VA = "0xB78490")]
			public OnFireArrowEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001EA")]
		public class OnLoadArrowEvent
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0xB784DC", Offset = "0xB784DC", VA = "0xB784DC")]
			public OnLoadArrowEvent()
			{
			}
		}

		[Token(Token = "0x20001EB")]
		public delegate void OnReleaseAction(Arrow arrow, Vector3 startPos, Vector3 dir, float power);

		[Token(Token = "0x20001EC")]
		public enum BowState
		{
			[Token(Token = "0x4000DFC")]
			Idle,
			[Token(Token = "0x4000DFD")]
			Drag,
			[Token(Token = "0x4000DFE")]
			Fire
		}

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x843FB0", Offset = "0x843FB0")]
		private BowModel model;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Ray _ray;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RaycastHit _raycastHit;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject _arrowModel;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _tempValue;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityAction<float> onDragAction;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public OnFireArrowEvent onFireArrowEvent;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UnityEvent onLoadArrowEvent;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private BowState state;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public LoadBowAttribute loadBowAttribute;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string[] modelsPath;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public BowType bowType;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private BowType _bowType;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private bool isChangeModel;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _musicColdTime;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _curPower;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _nextPower;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float power;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool _isCanDrag;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public PathData pathData;

		[Token(Token = "0x170000EB")]
		public Vector3 GetDragPos
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0xCB6C08", Offset = "0xCB6C08", VA = "0xCB6C08")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000EC")]
		public float GetBowValue
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0xCB7678", Offset = "0xCB7678", VA = "0xCB7678")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000ED")]
		public float GetPower
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0xCB7570", Offset = "0xCB7570", VA = "0xCB7570")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EE")]
		public float GetMaxPower
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0xCB7760", Offset = "0xCB7760", VA = "0xCB7760")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EF")]
		public float DragBowModelValue
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0xCB7768", Offset = "0xCB7768", VA = "0xCB7768")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F0")]
		public Transform GetShotPos
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0xCB7770", Offset = "0xCB7770", VA = "0xCB7770")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public Vector3 GetStartPos
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0xCB7C10", Offset = "0xCB7C10", VA = "0xCB7C10")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000F2")]
		public Vector3 GetFireDir
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0xCB7C38", Offset = "0xCB7C38", VA = "0xCB7C38")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xCB6C30", Offset = "0xCB6C30", VA = "0xCB6C30")]
		public GameObject GetArrowModel()
		{
			return null;
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xCB6C78", Offset = "0xCB6C78", VA = "0xCB6C78")]
		private void SetCrosshairEnable(bool isEnable)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xCB6CA4", Offset = "0xCB6CA4", VA = "0xCB6CA4")]
		private void UpdateCrosshairValue(Vector3 targetPos, float value)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xCB6CCC", Offset = "0xCB6CCC", VA = "0xCB6CCC")]
		private void OnReleaseBowRope(float duration)
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xCB6CF4", Offset = "0xCB6CF4", VA = "0xCB6CF4")]
		private void OnDelegate_AimUpdateValue(Vector3 pos, Vector3 dir, float viewValue, float fieldOfViewValue)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xCB6D24", Offset = "0xCB6D24", VA = "0xCB6D24")]
		private GameObject LoadBowModel(BowType bowType)
		{
			return null;
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xCB6DC4", Offset = "0xCB6DC4", VA = "0xCB6DC4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xCB6DE4", Offset = "0xCB6DE4", VA = "0xCB6DE4")]
		public void ReplaceCreateModel(BowType type, bool isLocal = true)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xCB703C", Offset = "0xCB703C", VA = "0xCB703C")]
		public void ChangeBow(BowModel bowModel)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xCB72C0", Offset = "0xCB72C0", VA = "0xCB72C0")]
		public void ShowArrowModel()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xCB70A4", Offset = "0xCB70A4", VA = "0xCB70A4")]
		public void HideArrowModel()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xCB71C8", Offset = "0xCB71C8", VA = "0xCB71C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xCB70D0", Offset = "0xCB70D0", VA = "0xCB70D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xCB73B4", Offset = "0xCB73B4", VA = "0xCB73B4")]
		private void OnChangeRopeEvent(float value)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xCB757C", Offset = "0xCB757C", VA = "0xCB757C")]
		public void UpdateModelDrag(float value)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xCB74EC", Offset = "0xCB74EC", VA = "0xCB74EC")]
		private void PlayChangeRopeMusic(float value)
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xCB778C", Offset = "0xCB778C", VA = "0xCB778C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xCB7930", Offset = "0xCB7930", VA = "0xCB7930")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xCB794C", Offset = "0xCB794C", VA = "0xCB794C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xCB7950", Offset = "0xCB7950", VA = "0xCB7950", Slot = "8")]
		public override void PickUp(Transform handTran, Vector3 direction, Vector3 localOffsetPos)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xCB7A60", Offset = "0xCB7A60", VA = "0xCB7A60", Slot = "9")]
		public override void PutDown()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xCB7AD0", Offset = "0xCB7AD0", VA = "0xCB7AD0")]
		public void LoadArrow()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xCB7C60", Offset = "0xCB7C60", VA = "0xCB7C60")]
		public float DragBowRope(Vector3 handPos)
		{
			return default(float);
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xCB7DEC", Offset = "0xCB7DEC", VA = "0xCB7DEC")]
		public float GetRopeValue()
		{
			return default(float);
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xCB7E08", Offset = "0xCB7E08", VA = "0xCB7E08")]
		public void ReleaseBowRope()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xCB8004", Offset = "0xCB8004", VA = "0xCB8004")]
		public void LocalReleaseBowRope()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xCB8060", Offset = "0xCB8060", VA = "0xCB8060")]
		public void ReleaseBowRope(ref Arrow arrow)
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xCB8118", Offset = "0xCB8118", VA = "0xCB8118")]
		public void ReleaseBowRope(ref Arrow arrow, OnReleaseAction releaseAction)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xCB836C", Offset = "0xCB836C", VA = "0xCB836C")]
		public bool IsDragArea(Vector3 handPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xCB83C0", Offset = "0xCB83C0", VA = "0xCB83C0")]
		public bool IsDragBow(Vector3 handPoint, ref float power)
		{
			return default(bool);
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xCB8424", Offset = "0xCB8424", VA = "0xCB8424")]
		public bool IsUnLoadArrow()
		{
			return default(bool);
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xCB783C", Offset = "0xCB783C", VA = "0xCB783C")]
		public Vector3 GetAimTargetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xCB8548", Offset = "0xCB8548", VA = "0xCB8548")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xCB8658", Offset = "0xCB8658", VA = "0xCB8658")]
		public Bow()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public enum BowType
	{
		[Token(Token = "0x4000E00")]
		Default,
		[Token(Token = "0x4000E01")]
		G1,
		[Token(Token = "0x4000E02")]
		G2,
		[Token(Token = "0x4000E03")]
		G3,
		[Token(Token = "0x4000E04")]
		Green,
		[Token(Token = "0x4000E05")]
		Green2,
		[Token(Token = "0x4000E06")]
		W1,
		[Token(Token = "0x4000E07")]
		W2
	}
	[Token(Token = "0x20001EE")]
	public class DanglingTarget : RingTarget
	{
		[Token(Token = "0x6000908")]
		[Address(RVA = "0xCC4D10", Offset = "0xCC4D10", VA = "0xCC4D10")]
		public DanglingTarget()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public interface IPickupItem
	{
		[Token(Token = "0x6000909")]
		void PickUp(Transform handTran, Vector3 direction, Vector3 localOffsetPos);

		[Token(Token = "0x600090A")]
		void PutDown();

		[Token(Token = "0x600090B")]
		bool IsPickUp();

		[Token(Token = "0x600090C")]
		void SetPickUp(bool isPick);
	}
	[Token(Token = "0x20001F0")]
	public class RingTarget : BaseTarget
	{
		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform aimPoint;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshCollider meshCollider;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextEffect _textEffect;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float space;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float dis;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float maxDis;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float minDis;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int score;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform testTran;

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xCCC334", Offset = "0xCCC334", VA = "0xCCC334", Slot = "7")]
		public override void Init()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xCCC3F4", Offset = "0xCCC3F4", VA = "0xCCC3F4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xCCC490", Offset = "0xCCC490", VA = "0xCCC490", Slot = "8")]
		protected override int HitPoint(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xCCC634", Offset = "0xCCC634", VA = "0xCCC634")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xCCC5D0", Offset = "0xCCC5D0", VA = "0xCCC5D0")]
		private int GetIndexByDistance(float distance, float minDis, float maxDis)
		{
			return default(int);
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xCCC684", Offset = "0xCCC684", VA = "0xCCC684")]
		public float GetRaduis(int score)
		{
			return default(float);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xCCC6C8", Offset = "0xCCC6C8", VA = "0xCCC6C8", Slot = "10")]
		public override void HitBoardEffect(PointInfo pointInfo)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xCCC7A0", Offset = "0xCCC7A0", VA = "0xCCC7A0")]
		public RingTarget()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class GameManager : MonoSingleton<GameManager>
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0xB8C5B0", Offset = "0xB8C5B0", VA = "0xB8C5B0")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class Loading : MonoBehaviour
	{
		[Token(Token = "0x20001F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C488", Offset = "0x83C488")]
		private sealed class <LoadAsyncScene>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int id;

			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callBack;

			[Token(Token = "0x4000E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Loading <>4__this;

			[Token(Token = "0x4000E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <asyncOperation>5__1;

			[Token(Token = "0x170000F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000920")]
				[Address(RVA = "0xB7DD9C", Offset = "0xB7DD9C", VA = "0xB7DD9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000922")]
				[Address(RVA = "0xB7DDE4", Offset = "0xB7DDE4", VA = "0xB7DDE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600091D")]
			[Address(RVA = "0xB7DC7C", Offset = "0xB7DC7C", VA = "0xB7DC7C")]
			[DebuggerHidden]
			public <LoadAsyncScene>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600091E")]
			[Address(RVA = "0xB7DCA8", Offset = "0xB7DCA8", VA = "0xB7DCA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600091F")]
			[Address(RVA = "0xB7DCAC", Offset = "0xB7DCAC", VA = "0xB7DCAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000921")]
			[Address(RVA = "0xB7DDA4", Offset = "0xB7DDA4", VA = "0xB7DDA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84406C", Offset = "0x84406C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84406C", Offset = "0x84406C")]
		private static Loading <Instance>k__BackingField;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isLoading;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int senceId;

		[Token(Token = "0x170000F3")]
		public static Loading Instance
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0xB9512C", Offset = "0xB9512C", VA = "0xB9512C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84652C", Offset = "0x84652C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000916")]
			[Address(RVA = "0xB950D8", Offset = "0xB950D8", VA = "0xB950D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84651C", Offset = "0x84651C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xB95178", Offset = "0xB95178", VA = "0xB95178")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xB95220", Offset = "0xB95220", VA = "0xB95220")]
		public void LoadLevel(int id)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xB953D0", Offset = "0xB953D0", VA = "0xB953D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x84653C", Offset = "0x84653C")]
		private IEnumerator LoadAsyncScene(int id, Action callBack)
		{
			return null;
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xB9546C", Offset = "0xB9546C", VA = "0xB9546C")]
		public Loading()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xB95474", Offset = "0xB95474", VA = "0xB95474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84659C", Offset = "0x84659C")]
		private void <LoadLevel>b__7_0()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class ScreenView : MonoBehaviour
	{
		[Token(Token = "0x20001F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C498", Offset = "0x83C498")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityAction callBack;

			[Token(Token = "0x6000932")]
			[Address(RVA = "0xB84E9C", Offset = "0xB84E9C", VA = "0xB84E9C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6000933")]
			[Address(RVA = "0xB84EA4", Offset = "0xB84EA4", VA = "0xB84EA4")]
			internal void <ShowViewPanel>b__0()
			{
			}
		}

		[Token(Token = "0x20001F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C4A8", Offset = "0x83C4A8")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup canvasGroup;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityAction callBack;

			[Token(Token = "0x6000934")]
			[Address(RVA = "0xB84EB8", Offset = "0xB84EB8", VA = "0xB84EB8")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6000935")]
			[Address(RVA = "0xB84EC0", Offset = "0xB84EC0", VA = "0xB84EC0")]
			internal void <HideViewPanel>b__0()
			{
			}
		}

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform viewPanel;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RawImage viewRawImage;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform timePanel;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text timeText;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text tipText;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform winPanel;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text speedText;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RectTransform winDir;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text textLevel;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text textTargetScore;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text textMinScore;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public WindData windData;

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xCD1EE8", Offset = "0xCD1EE8", VA = "0xCD1EE8")]
		private void UpdateTextLevel(int id)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xCD1FD8", Offset = "0xCD1FD8", VA = "0xCD1FD8")]
		private void UpdateTargetScoreTxt(int score)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xCD20E4", Offset = "0xCD20E4", VA = "0xCD20E4")]
		private void UpdateMinScore(int score)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xCD03AC", Offset = "0xCD03AC", VA = "0xCD03AC")]
		public void UpdateLevelInfo(LevelItem item)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xCD21F0", Offset = "0xCD21F0", VA = "0xCD21F0")]
		public void OnChangeWind(WindData windData)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xCD2498", Offset = "0xCD2498", VA = "0xCD2498")]
		public void OnChangeScreen(int index)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xCD26C4", Offset = "0xCD26C4", VA = "0xCD26C4")]
		public void SetViewRawImage(RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xCD07E8", Offset = "0xCD07E8", VA = "0xCD07E8")]
		public void UpdateText(string tips, string text)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xCD26E0", Offset = "0xCD26E0", VA = "0xCD26E0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xCD23B4", Offset = "0xCD23B4", VA = "0xCD23B4")]
		public void SetWindData(WindData windData)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xCD2788", Offset = "0xCD2788", VA = "0xCD2788")]
		private float GetAngle(WindData windData)
		{
			return default(float);
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xCD26E8", Offset = "0xCD26E8", VA = "0xCD26E8")]
		private void UpdateWindData(WindData windData)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xCD226C", Offset = "0xCD226C", VA = "0xCD226C")]
		public void ShowViewPanel(CanvasGroup canvasGroup, float duration = 0.5f, [Optional] UnityAction callBack)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xCD2598", Offset = "0xCD2598", VA = "0xCD2598")]
		public void HideViewPanel(CanvasGroup canvasGroup, float duration = 0.5f, [Optional] UnityAction callBack)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xCD27AC", Offset = "0xCD27AC", VA = "0xCD27AC")]
		public ScreenView()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class SpecialAreaPoint : MonoBehaviour
	{
		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int source;

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xCD5634", Offset = "0xCD5634", VA = "0xCD5634")]
		public bool IsWithinRange(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xCD5710", Offset = "0xCD5710", VA = "0xCD5710")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xCD5760", Offset = "0xCD5760", VA = "0xCD5760")]
		public SpecialAreaPoint()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83C4B8", Offset = "0x83C4B8")]
	public class GameCore : MonoBehaviour
	{
		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844128", Offset = "0x844128")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844128", Offset = "0x844128")]
		private IFSM <FSM>k__BackingField;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameMode gameMode;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityAction<float> updateTimeAction;

		[Token(Token = "0x170000F6")]
		public IFSM FSM
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0xB8A3EC", Offset = "0xB8A3EC", VA = "0xB8A3EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84660C", Offset = "0x84660C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000939")]
			[Address(RVA = "0xB8A3E4", Offset = "0xB8A3E4", VA = "0xB8A3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8465FC", Offset = "0x8465FC")]
			private set
			{
			}
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xB8A3F4", Offset = "0xB8A3F4", VA = "0xB8A3F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xB8A450", Offset = "0xB8A450", VA = "0xB8A450")]
		public GameCore()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public enum GameMode
	{
		[Token(Token = "0x4000E30")]
		LimitTime,
		[Token(Token = "0x4000E31")]
		Battle,
		[Token(Token = "0x4000E32")]
		Breakthrough
	}
	[Token(Token = "0x20001FA")]
	public class GameCoreFSM : MonoFSM<GameCore>
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0xB8A458", Offset = "0xB8A458", VA = "0xB8A458", Slot = "43")]
		public override void AddStates()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xB8A508", Offset = "0xB8A508", VA = "0xB8A508")]
		public GameCoreFSM()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class LimitTimeMainState : BHState
	{
		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float duration;

		[Token(Token = "0x170000F7")]
		public GameCore Owner
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0xB94560", Offset = "0xB94560", VA = "0xB94560")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xB94550", Offset = "0xB94550", VA = "0xB94550", Slot = "65")]
		public override void AddStates()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xB94558", Offset = "0xB94558", VA = "0xB94558", Slot = "20")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xB945F0", Offset = "0xB945F0", VA = "0xB945F0")]
		public LimitTimeMainState()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class ArrowTips : MonoBehaviour
	{
		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup tipCanvasGroup;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalControllerPlayer LocalControllerPlayer;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isOpen;

		[Token(Token = "0x6000943")]
		[Address(RVA = "0xC2F7F4", Offset = "0xC2F7F4", VA = "0xC2F7F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xC2F908", Offset = "0xC2F908", VA = "0xC2F908")]
		private void Update()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xC2FA3C", Offset = "0xC2FA3C", VA = "0xC2FA3C")]
		public ArrowTips()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xC2FA44", Offset = "0xC2FA44", VA = "0xC2FA44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84661C", Offset = "0x84661C")]
		private void <Update>b__4_0()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x83C518", Offset = "0x83C518")]
	public class CommandAttribute : Attribute
	{
		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int channel;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool requiresAuthority;

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xCC2C44", Offset = "0xCC2C44", VA = "0xCC2C44")]
		public CommandAttribute()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x83C52C", Offset = "0x83C52C")]
	public class ClientRpcAttribute : Attribute
	{
		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int channel;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool includeOwner;

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xCC0C80", Offset = "0xCC0C80", VA = "0xCC0C80")]
		public ClientRpcAttribute()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x83C540", Offset = "0x83C540")]
	public class SyncVarAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string hook;

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xCD59D0", Offset = "0xCD59D0", VA = "0xCD59D0")]
		public SyncVarAttribute()
		{
		}
	}
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x83C554", Offset = "0x83C554")]
	public class ServerAttribute : Attribute
	{
		[Token(Token = "0x600094A")]
		[Address(RVA = "0xCD39FC", Offset = "0xCD39FC", VA = "0xCD39FC")]
		public ServerAttribute()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public static class Channels
	{
		[Token(Token = "0x4000E3C")]
		public const int Reliable = 0;

		[Token(Token = "0x4000E3D")]
		public const int Unreliable = 1;
	}
	[Token(Token = "0x2000202")]
	public class AutoSetText : MonoBehaviour
	{
		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] txts;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI _textMeshProUgui;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro _textMeshPro;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isCn;

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xC321A0", Offset = "0xC321A0", VA = "0xC321A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xC3225C", Offset = "0xC3225C", VA = "0xC3225C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xC3242C", Offset = "0xC3242C", VA = "0xC3242C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xC322E8", Offset = "0xC322E8", VA = "0xC322E8")]
		private void SetText(string txt)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xC3248C", Offset = "0xC3248C", VA = "0xC3248C")]
		public AutoSetText()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class BodyPosture : MonoBehaviour
	{
		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform centerEyeAnchor;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 headAnchorPositionOffset;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 headAnchorRotationOffset;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x844164", Offset = "0x844164")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x844164", Offset = "0x844164")]
		public Transform leftHandAnchor;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8441C4", Offset = "0x8441C4")]
		public Transform rightHandAnchor;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8441FC", Offset = "0x8441FC")]
		public Vector3 handAnchorPositionOffset;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x844234", Offset = "0x844234")]
		public Vector3 handAnchorRotationOffset;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84426C", Offset = "0x84426C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84426C", Offset = "0x84426C")]
		public float scaleMlp;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8442CC", Offset = "0x8442CC")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public VRIK vrik;

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xCB62BC", Offset = "0xCB62BC", VA = "0xCB62BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xCB633C", Offset = "0xCB633C", VA = "0xCB633C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xCB62C4", Offset = "0xCB62C4", VA = "0xCB62C4")]
		public void SetIKPosture(VRIK vrik)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xCB6380", Offset = "0xCB6380", VA = "0xCB6380")]
		public BodyPosture()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class InteractiveObject : MonoBehaviour
	{
		[Token(Token = "0x2000205")]
		public enum InteractiveType
		{
			[Token(Token = "0x4000E51")]
			HotAir,
			[Token(Token = "0x4000E52")]
			Grass,
			[Token(Token = "0x4000E53")]
			Ground
		}

		[Token(Token = "0x4000E4D")]
		public const string TAG_InteractiveObject = "Interactive";

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractiveType type;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityAction<GameObject, Vector3, Vector3> OnPlayHitEffectAction;

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xB8F27C", Offset = "0xB8F27C", VA = "0xB8F27C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xB8F2CC", Offset = "0xB8F2CC", VA = "0xB8F2CC")]
		public void PlayHitEffect(GameObject arrow, Vector3 point, Vector3 normal, ref bool isPlay)
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xB8F500", Offset = "0xB8F500", VA = "0xB8F500")]
		public InteractiveObject()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x83C568", Offset = "0x83C568")]
	public class LanguageManager : MonoBehaviour
	{
		[Token(Token = "0x2000207")]
		public class StringClass
		{
			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Dictionary<string, string> stringDict;

			[Token(Token = "0x600095C")]
			[Address(RVA = "0xB7C9A0", Offset = "0xB7C9A0", VA = "0xB7C9A0")]
			public StringClass()
			{
			}
		}

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SystemLanguage _systemLanguage;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LanguageManager instance;

		[Token(Token = "0x4000E56")]
		public const string CN = "cn";

		[Token(Token = "0x4000E57")]
		public const string EN = "en";

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool IsCn;

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xB8FE90", Offset = "0xB8FE90", VA = "0xB8FE90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xB90014", Offset = "0xB90014", VA = "0xB90014")]
		private void LoadStringXml(string language)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xB90294", Offset = "0xB90294", VA = "0xB90294")]
		private void ShowReadAllInfo()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xB9000C", Offset = "0xB9000C", VA = "0xB9000C")]
		public static SystemLanguage GetSystemLanguage()
		{
			return default(SystemLanguage);
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xB90454", Offset = "0xB90454", VA = "0xB90454")]
		public LanguageManager()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class LoadBowAttribute : MonoBehaviour
	{
		[Token(Token = "0x2000209")]
		public delegate void Delegate_SetCrosshairsEnable(bool isEnable);

		[Token(Token = "0x200020A")]
		public delegate void Delegate_UpdateCrosshairsEnable(Vector3 aimTargetPos, float power);

		[Token(Token = "0x200020B")]
		public delegate void Delegate_ReleaseBowRope(float duration);

		[Token(Token = "0x200020C")]
		public delegate void Delegate_AimUpdateValue(float viewValue, float fieldOfViewValue);

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BowAttribute bowAttribute;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x844314", Offset = "0x844314")]
		private TestLine auxiliaryLine;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x844360", Offset = "0x844360")]
		private AimCameraController eyepiece;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8443AC", Offset = "0x8443AC")]
		[SerializeField]
		private Crosshairs sight;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Delegate_SetCrosshairsEnable delegate_SetCrosshairsEnable;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Delegate_UpdateCrosshairsEnable delegate_UpdateCrosshairsValue;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Delegate_ReleaseBowRope delegate_ReleaseBowRope;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Delegate_AimUpdateValue delegate_AimUpdateValue;

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xB94C2C", Offset = "0xB94C2C", VA = "0xB94C2C")]
		public void Init(BowAttribute bowAttribute, BowModel model, bool isHaveEyepiece, bool islocalPlayer = true)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xB94F4C", Offset = "0xB94F4C", VA = "0xB94F4C")]
		private void OnDelegate_AimUpdateValue(float viewValue, float fieldOfViewValue)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xB94F98", Offset = "0xB94F98", VA = "0xB94F98")]
		private void OnDelegate_SetCrosshairsEnable(bool isEnable)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xB94FC0", Offset = "0xB94FC0", VA = "0xB94FC0")]
		private void OnDelegate_UpdateCrosshairsEnable(Vector3 aimTargetPos, float power)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xB9500C", Offset = "0xB9500C", VA = "0xB9500C")]
		private void OnDelegate_ReleaseBowRope(float duration)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xB950D0", Offset = "0xB950D0", VA = "0xB950D0")]
		public LoadBowAttribute()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class RestrictedArea : MonoBehaviour
	{
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextEffect TextEffect;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float radius;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float offsetHeight;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string txt;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Arrow> arrows;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject player;

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xCCBBB0", Offset = "0xCCBBB0", VA = "0xCCBBB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xCCBC3C", Offset = "0xCCBC3C", VA = "0xCCBC3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xCCBD8C", Offset = "0xCCBD8C", VA = "0xCCBD8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xCCBEDC", Offset = "0xCCBEDC", VA = "0xCCBEDC")]
		private void OnFireArrowEvent(Arrow arrow)
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xCCBF7C", Offset = "0xCCBF7C", VA = "0xCCBF7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xCCC20C", Offset = "0xCCC20C", VA = "0xCCC20C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xCCC27C", Offset = "0xCCC27C", VA = "0xCCC27C")]
		public RestrictedArea()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class RoomGuide : MonoBehaviour
	{
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform player;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TipsPoint[] tipsPoints;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer joyConMeshRender;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHandTran;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PXR_ControllerAnimator pxrAnimator;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public XRUIInputModule xRuiInputModule;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] controllers;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TeleportationArea[] teleportationAreas;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TeleportationAnchor[] teleportationAnchors;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isHide;

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xCCD4E8", Offset = "0xCCD4E8", VA = "0xCCD4E8")]
		private void OnSelect(TeleportingEventArgs selectEnter)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xCCD640", Offset = "0xCCD640", VA = "0xCCD640")]
		private void BindEvent()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xCCD7C4", Offset = "0xCCD7C4", VA = "0xCCD7C4")]
		private void UnBindEvent()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xCCD948", Offset = "0xCCD948", VA = "0xCCD948")]
		private void Start()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xCCD500", Offset = "0xCCD500", VA = "0xCCD500")]
		private void OnMove()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xCCDBD8", Offset = "0xCCDBD8", VA = "0xCCDBD8")]
		public RoomGuide()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class AnimatorFlag : BaseMonitorMono
	{
		[Token(Token = "0x2000210")]
		public enum FlagColor
		{
			[Token(Token = "0x4000E7D")]
			Red,
			[Token(Token = "0x4000E7E")]
			Yellow,
			[Token(Token = "0x4000E7F")]
			Blue
		}

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator _animator;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float speed;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float curWindValue;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int HASH_Wind;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material[] materials;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FlagColor flagColor;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 leftAngle;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tweener _windPowerTween;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tweener _windDirTween;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Tweener _amgleTween;

		[Token(Token = "0x170000F8")]
		public Animator GetAnimator
		{
			[Token(Token = "0x6000981")]
			[Address(RVA = "0xC2C9EC", Offset = "0xC2C9EC", VA = "0xC2C9EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xC2C914", Offset = "0xC2C914", VA = "0xC2C914")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xC2CAA0", Offset = "0xC2CAA0", VA = "0xC2CAA0")]
		private void ChangePower(float power, float duration = 0.5f)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xC2CC14", Offset = "0xC2CC14", VA = "0xC2CC14")]
		private void ChangeWindDir(WindDirection direction, float duration = 0.5f)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xC2CE1C", Offset = "0xC2CE1C", VA = "0xC2CE1C")]
		private new void ChangeWind(WindData windData)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xC2CEA4", Offset = "0xC2CEA4", VA = "0xC2CEA4", Slot = "7")]
		protected override void OnChangeWind(WindData data)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xC2CEA8", Offset = "0xC2CEA8", VA = "0xC2CEA8")]
		public AnimatorFlag()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xC2CF28", Offset = "0xC2CF28", VA = "0xC2CF28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84662C", Offset = "0x84662C")]
		private void <ChangePower>b__14_0(float value)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xC2CF58", Offset = "0xC2CF58", VA = "0xC2CF58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84663C", Offset = "0x84663C")]
		private void <ChangeWindDir>b__15_0(float value)
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class BowModel : MonoBehaviour
	{
		[Token(Token = "0x2000212")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C57C", Offset = "0x83C57C")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BowModel <>4__this;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action callBack;

			[Token(Token = "0x600099C")]
			[Address(RVA = "0xB78A94", Offset = "0xB78A94", VA = "0xB78A94")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x600099D")]
			[Address(RVA = "0xB78A9C", Offset = "0xB78A9C", VA = "0xB78A9C")]
			internal void <ReleaseRope>b__0(float dragValue)
			{
			}

			[Token(Token = "0x600099E")]
			[Address(RVA = "0xB78AE4", Offset = "0xB78AE4", VA = "0xB78AE4")]
			internal void <ReleaseRope>b__1()
			{
			}
		}

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform yesTran;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform startTran;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform endTran;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform moveTran;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x844478", Offset = "0x844478")]
		private Transform dirTran;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BowAttribute bowAttribute;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEvent<float> _onChangeRopeValue;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8444D4", Offset = "0x8444D4")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8444D4", Offset = "0x8444D4")]
		private float <GetRopeValue>k__BackingField;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float power;

		[Token(Token = "0x170000F9")]
		public BowAttribute GetCurrBowAttribute
		{
			[Token(Token = "0x6000989")]
			[Address(RVA = "0xCB8A18", Offset = "0xCB8A18", VA = "0xCB8A18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		public Transform YesTran
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0xCB8A20", Offset = "0xCB8A20", VA = "0xCB8A20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		public Transform StartTran
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0xCB8A28", Offset = "0xCB8A28", VA = "0xCB8A28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		public Transform EndTran
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0xCB8A30", Offset = "0xCB8A30", VA = "0xCB8A30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public Transform MoveTran
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0xCB8A38", Offset = "0xCB8A38", VA = "0xCB8A38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		public Transform GetOrientation
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0xCB8A40", Offset = "0xCB8A40", VA = "0xCB8A40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		public float GetDragDistance
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0xCB8A48", Offset = "0xCB8A48", VA = "0xCB8A48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000100")]
		public float GetRopeValue
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0xCB8AE4", Offset = "0xCB8AE4", VA = "0xCB8AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84665C", Offset = "0x84665C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000996")]
			[Address(RVA = "0xCB8ADC", Offset = "0xCB8ADC", VA = "0xCB8ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84664C", Offset = "0x84664C")]
			set
			{
			}
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xCB6C48", Offset = "0xCB6C48", VA = "0xCB6C48")]
		public GameObject GetArrowModel()
		{
			return null;
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xCB72EC", Offset = "0xCB72EC", VA = "0xCB72EC")]
		public void BindChangeRopeEvent(UnityAction<float> unityAction)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xCB7350", Offset = "0xCB7350", VA = "0xCB7350")]
		public void UnBindChangeRopeEvent(UnityAction<float> unityAction)
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xCB8AC0", Offset = "0xCB8AC0", VA = "0xCB8AC0")]
		public void OnRemoveAllBindChangeRopeEvent()
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0xCB7E40", Offset = "0xCB7E40", VA = "0xCB7E40")]
		public void ReleaseRope(float startValue, [Optional] Action callBack)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xCB7690", Offset = "0xCB7690", VA = "0xCB7690")]
		public float GetRopeModelValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xCB7C78", Offset = "0xCB7C78", VA = "0xCB7C78")]
		public float DragRope(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xCB8AEC", Offset = "0xCB8AEC", VA = "0xCB8AEC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xCB7594", Offset = "0xCB7594", VA = "0xCB7594")]
		public void UpdateRopeChange(float value)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xCB8AF4", Offset = "0xCB8AF4", VA = "0xCB8AF4")]
		public BowModel()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class BowShop : BaseUiMenu
	{
		[Token(Token = "0x2000214")]
		public enum BoardColor
		{
			[Token(Token = "0x4000E91")]
			Green,
			[Token(Token = "0x4000E92")]
			Blue,
			[Token(Token = "0x4000E93")]
			Yellow
		}

		[Token(Token = "0x2000215")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C58C", Offset = "0x83C58C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BowType bowType;

			[Token(Token = "0x60009A9")]
			[Address(RVA = "0xB78B10", Offset = "0xB78B10", VA = "0xB78B10")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60009AA")]
			[Address(RVA = "0xB78B18", Offset = "0xB78B18", VA = "0xB78B18")]
			internal bool <GetPrice>b__0(BowShopData.BowData data)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro coinNumText;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro moneyTitleText;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BowShopItem[] bowShopItems;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BowShopData bowShopData;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material[] materials;

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xCB8B78", Offset = "0xCB8B78", VA = "0xCB8B78")]
		public Material GetChangeColor(BoardColor id)
		{
			return null;
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xCB8BB4", Offset = "0xCB8BB4", VA = "0xCB8BB4")]
		private void UpdateCoinNum(int num)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xCB8C48", Offset = "0xCB8C48", VA = "0xCB8C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xCB95EC", Offset = "0xCB95EC", VA = "0xCB95EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xCB96EC", Offset = "0xCB96EC", VA = "0xCB96EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xCB97EC", Offset = "0xCB97EC", VA = "0xCB97EC")]
		private void OnRefresh()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xCB94EC", Offset = "0xCB94EC", VA = "0xCB94EC")]
		private int GetPrice(BowType bowType)
		{
			return default(int);
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xCB9C54", Offset = "0xCB9C54", VA = "0xCB9C54")]
		private void OnSelectTarget(BowShopItem item)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xCBA23C", Offset = "0xCBA23C", VA = "0xCBA23C", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xCBA2E4", Offset = "0xCBA2E4", VA = "0xCBA2E4")]
		public BowShop()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class BowShopItem : BaseUiMenu
	{
		[Token(Token = "0x2000217")]
		public delegate void SelectAction(BowShopItem item);

		[Token(Token = "0x2000218")]
		public enum BowShopItemState
		{
			[Token(Token = "0x4000EA5")]
			Lock,
			[Token(Token = "0x4000EA6")]
			UnLock,
			[Token(Token = "0x4000EA7")]
			Select
		}

		[Serializable]
		[Token(Token = "0x2000219")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C59C", Offset = "0x83C59C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<EventTrigger.Entry> <>9__28_0;

			[Token(Token = "0x60009C5")]
			[Address(RVA = "0xB78B8C", Offset = "0xB78B8C", VA = "0xB78B8C")]
			public <>c()
			{
			}

			[Token(Token = "0x60009C6")]
			[Address(RVA = "0xB78B94", Offset = "0xB78B94", VA = "0xB78B94")]
			internal bool <Init>b__28_0(EventTrigger.Entry entry1)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject model;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro priceText;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro stateText;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x844540", Offset = "0x844540")]
		[SerializeField]
		private TextMeshPro buyTextMeshPro;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventTrigger _eventTrigger;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform boardModelTran;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _upTran;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _downTran;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BowType bowType;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private XRGrabInteractable _xrGrabInteractable;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _displayPosition;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion _displayRotation;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material[] materials;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SelectAction _selectAction;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84459C", Offset = "0x84459C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84459C", Offset = "0x84459C")]
		private BowShopItemState <ItemState>k__BackingField;

		[Token(Token = "0x17000101")]
		public BowType GetBowType
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0xCBA778", Offset = "0xCBA778", VA = "0xCBA778")]
			get
			{
				return default(BowType);
			}
		}

		[Token(Token = "0x17000102")]
		public EventTrigger GetEventTrigger
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0xCBA780", Offset = "0xCBA780", VA = "0xCBA780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		public BowShopItemState ItemState
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0xCBA83C", Offset = "0xCBA83C", VA = "0xCBA83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84667C", Offset = "0x84667C")]
			get
			{
				return default(BowShopItemState);
			}
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0xCBA834", Offset = "0xCBA834", VA = "0xCBA834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84666C", Offset = "0x84666C")]
			private set
			{
			}
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xCBA370", Offset = "0xCBA370", VA = "0xCBA370")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xCBA574", Offset = "0xCBA574", VA = "0xCBA574")]
		private void OnSelectEntered(SelectEnterEventArgs eventArgs)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xCBA61C", Offset = "0xCBA61C", VA = "0xCBA61C")]
		private void OnSelectExited(SelectExitEventArgs eventArgs)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xCBA6CC", Offset = "0xCBA6CC", VA = "0xCBA6CC")]
		public void BackDisplayPos()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xCB9384", Offset = "0xCB9384", VA = "0xCB9384")]
		public void ChangeBoardColor(Material target)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xCB8FF8", Offset = "0xCB8FF8", VA = "0xCB8FF8")]
		public void Init(int price, BowShopItemState state, SelectAction onSelectAction)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xCBA844", Offset = "0xCBA844", VA = "0xCBA844")]
		private void OnSubmit(BaseEventData baseEventData)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xCBA0CC", Offset = "0xCBA0CC", VA = "0xCBA0CC")]
		public void ShakeBoard()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xCBA224", Offset = "0xCBA224", VA = "0xCBA224")]
		public void OnUsing()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xCB9F50", Offset = "0xCB9F50", VA = "0xCB9F50")]
		public void UpLockBoard()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xCB99CC", Offset = "0xCB99CC", VA = "0xCB99CC")]
		public void UpdateState(BowShopItemState state)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xCBA948", Offset = "0xCBA948", VA = "0xCBA948", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xCBA9F0", Offset = "0xCBA9F0", VA = "0xCBA9F0")]
		public BowShopItem()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xCBA9F8", Offset = "0xCBA9F8", VA = "0xCBA9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84668C", Offset = "0x84668C")]
		private void <ShakeBoard>b__30_0()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xCBAABC", Offset = "0xCBAABC", VA = "0xCBAABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84669C", Offset = "0x84669C")]
		private void <ShakeBoard>b__30_1()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xCBAB2C", Offset = "0xCBAB2C", VA = "0xCBAB2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8466AC", Offset = "0x8466AC")]
		private void <UpLockBoard>b__32_0()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xCBAC30", Offset = "0xCBAC30", VA = "0xCBAC30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8466BC", Offset = "0x8466BC")]
		private void <UpLockBoard>b__32_1()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class Data
	{
		[Token(Token = "0x200021B")]
		public delegate void DelegateRefreshData();

		[Serializable]
		[Token(Token = "0x200021C")]
		public struct UserData
		{
			[Token(Token = "0x4000EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string id;

			[Token(Token = "0x4000EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string disPlayerName;

			[Token(Token = "0x4000EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int score;

			[Token(Token = "0x4000EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int arrowCount;

			[Token(Token = "0x60009D6")]
			[Address(RVA = "0xB7B058", Offset = "0xB7B058", VA = "0xB7B058")]
			public UserData(string id, string disPlayerName, int score, int arrowCount)
			{
			}

			[Token(Token = "0x60009D7")]
			[Address(RVA = "0xB7B0A4", Offset = "0xB7B0A4", VA = "0xB7B0A4")]
			public bool IsCompare(string id)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EAA")]
		public const string KEY_USER_ASSETS = "KEY_USER_ASSETS";

		[Token(Token = "0x4000EAB")]
		public const string KEY_COIN = "KEY_COIN";

		[Token(Token = "0x4000EAC")]
		public const string KEY_USINGBOW = "KEY_USINGBOW";

		[Token(Token = "0x4000EAD")]
		public const string KEY_BOW_ID = "KEY_BOW_ID";

		[Token(Token = "0x4000EAE")]
		public const string KEY_FIRST_TIME = "KEY_FIRST_TIME";

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DelegateRefreshData OnRefreshDataDelegate;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int bowCount;

		[Token(Token = "0x17000104")]
		public static int Coin
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0xCB8EE0", Offset = "0xCB8EE0", VA = "0xCB8EE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0xCBA07C", Offset = "0xCBA07C", VA = "0xCBA07C")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public static BowType UsingBowType
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0xCB8FAC", Offset = "0xCB8FAC", VA = "0xCB8FAC")]
			get
			{
				return default(BowType);
			}
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0xCBA1D4", Offset = "0xCBA1D4", VA = "0xCBA1D4")]
			set
			{
			}
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xCC4D18", Offset = "0xCC4D18", VA = "0xCC4D18")]
		public static bool GetIsFistTimePlay(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xCC4D90", Offset = "0xCC4D90", VA = "0xCC4D90")]
		public static void SetIsFistTimePlay(int id, bool value)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xCC4E0C", Offset = "0xCC4E0C", VA = "0xCC4E0C")]
		public static void ClearData()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xCB9468", Offset = "0xCB9468", VA = "0xCB9468")]
		public static bool IsBowTypeLock(BowType bowType)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xCB8F2C", Offset = "0xCB8F2C", VA = "0xCB8F2C")]
		public static void UnLockBowType(BowType bowType, bool isUnLock)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xCC4F20", Offset = "0xCC4F20", VA = "0xCC4F20")]
		public Data()
		{
		}
	}
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x83C5AC", Offset = "0x83C5AC")]
	public class BowAttribute : ScriptableObject
	{
		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BowType bowType;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool isAuxiliaryLine;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool isEyepiece;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[SerializeField]
		private bool isSight;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float power;

		[Token(Token = "0x17000106")]
		public bool IsAuxiliaryLine
		{
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0xCB89E8", Offset = "0xCB89E8", VA = "0xCB89E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000107")]
		public bool IsEyepiece
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0xCB89F0", Offset = "0xCB89F0", VA = "0xCB89F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000108")]
		public bool IsSight
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0xCB89F8", Offset = "0xCB89F8", VA = "0xCB89F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000109")]
		public float Power
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0xCB8A00", Offset = "0xCB8A00", VA = "0xCB8A00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xCB8A08", Offset = "0xCB8A08", VA = "0xCB8A08")]
		public BowAttribute()
		{
		}
	}
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x83C618", Offset = "0x83C618")]
	public class BowShopData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200021F")]
		public struct BowData
		{
			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BowType bowType;

			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int price;
		}

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BowData> bowDatas;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xCBA2EC", Offset = "0xCBA2EC", VA = "0xCBA2EC")]
		public BowShopData()
		{
		}
	}
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x83C684", Offset = "0x83C684")]
	public class ResData : ScriptableObject
	{
		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<DataPath> dataPaths;

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xCCBB2C", Offset = "0xCCBB2C", VA = "0xCCBB2C")]
		public ResData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000221")]
	public class DataPath
	{
		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string tag;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<DataPath> data;

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xCC4F78", Offset = "0xCC4F78", VA = "0xCC4F78")]
		public DataPath()
		{
		}
	}
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x83C6F0", Offset = "0x83C6F0")]
	public class SoundResourceData : ScriptableObject
	{
		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundClip[] Clips;

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xCD5368", Offset = "0xCD5368", VA = "0xCD5368")]
		public SoundResourceData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public struct SoundClip
	{
		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tag;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public int id;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip audioClip;
	}
	[Serializable]
	[Token(Token = "0x2000224")]
	public struct PathData
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 startPos;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 startDir;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 wind;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float g;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startHeight;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float interval;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int count;

		[Token(Token = "0x1700010A")]
		public Vector3 GetStartDir
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x20DC250", Offset = "0x20DC250", VA = "0x20DC250")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x20DC1D0", Offset = "0x20DC1D0", VA = "0x20DC1D0")]
		public PathData(Vector3 wind, float startH = -5f, int count = 100, float interval = 0.2f, float g = 0.5f)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x20DC25C", Offset = "0x20DC25C", VA = "0x20DC25C")]
		public void SetStartPosAndDir(Vector3 startPos, Vector3 dir, float power)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000225")]
	public class MessageData
	{
		[Token(Token = "0x2000226")]
		public enum MessageType
		{
			[Token(Token = "0x4000ED3")]
			Player = 0,
			[Token(Token = "0x4000ED4")]
			Arrow = 2,
			[Token(Token = "0x4000ED5")]
			Target = 3,
			[Token(Token = "0x4000ED6")]
			Method = 4,
			[Token(Token = "0x4000ED7")]
			Other = 5
		}

		[Token(Token = "0x2000227")]
		public enum OperateType
		{
			[Token(Token = "0x4000ED9")]
			Delete,
			[Token(Token = "0x4000EDA")]
			Update,
			[Token(Token = "0x4000EDB")]
			Disable,
			[Token(Token = "0x4000EDC")]
			Enable,
			[Token(Token = "0x4000EDD")]
			Method
		}

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string guid;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int messageType;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int operateType;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int methodType;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string data;

		[Token(Token = "0x1700010B")]
		public MessageType GetMessageType
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0xB9928C", Offset = "0xB9928C", VA = "0xB9928C")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x1700010C")]
		public OperateType GetOperateType
		{
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0xB99294", Offset = "0xB99294", VA = "0xB99294")]
			get
			{
				return default(OperateType);
			}
		}

		[Token(Token = "0x1700010D")]
		public MessageCenter.MethodType GetMethodType
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0xB9929C", Offset = "0xB9929C", VA = "0xB9929C")]
			get
			{
				return default(MessageCenter.MethodType);
			}
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xB990C0", Offset = "0xB990C0", VA = "0xB990C0")]
		public MessageData()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xB990C8", Offset = "0xB990C8", VA = "0xB990C8")]
		public MessageData(string guid, ISynNetwork refPlayer)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xB98DD0", Offset = "0xB98DD0", VA = "0xB98DD0")]
		public MessageData(string guid, MessageCenter.MethodType methodType, OperateType operateType, string data)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xB992A4", Offset = "0xB992A4", VA = "0xB992A4")]
		public void ApplyData(INetworkPlayer refPlayer)
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class ModelBody : MonoBehaviour
	{
		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] heads;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] bodys;

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xB99420", Offset = "0xB99420", VA = "0xB99420")]
		public void SetBodyLayerRecursively()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xB994C8", Offset = "0xB994C8", VA = "0xB994C8")]
		private void SetLayerRecursively(GameObject go, int layerNumber)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xB995D0", Offset = "0xB995D0", VA = "0xB995D0")]
		public ModelBody()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class TeamColor : MonoBehaviour
	{
		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844628", Offset = "0x844628")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844628", Offset = "0x844628")]
		private static TeamColor <Instance>k__BackingField;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] colors;

		[Token(Token = "0x1700010E")]
		public static TeamColor Instance
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0xFA7C78", Offset = "0xFA7C78", VA = "0xFA7C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8466DC", Offset = "0x8466DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0xFA7C24", Offset = "0xFA7C24", VA = "0xFA7C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8466CC", Offset = "0x8466CC")]
			private set
			{
			}
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xFA7CC4", Offset = "0xFA7CC4", VA = "0xFA7CC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xFA7D18", Offset = "0xFA7D18", VA = "0xFA7D18")]
		public Color GetColorById(int index)
		{
			return default(Color);
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xFA7D5C", Offset = "0xFA7D5C", VA = "0xFA7D5C")]
		public TeamColor()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class TidbitsTV : BaseMonitorMono
	{
		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RenderTexture[] RenderTextures;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<TidbitsTV> tibitsList;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int teamId;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FollowCamera followCamera;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Arrow _arrow;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isFollow;

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xFAA390", Offset = "0xFAA390", VA = "0xFAA390", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xFAA480", Offset = "0xFAA480", VA = "0xFAA480", Slot = "5")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xFAA570", Offset = "0xFAA570", VA = "0xFAA570", Slot = "8")]
		protected override void OnInit()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xFAA6DC", Offset = "0xFAA6DC", VA = "0xFAA6DC", Slot = "9")]
		protected override void OnFireArrow(Arrow arrow)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xFAA89C", Offset = "0xFAA89C", VA = "0xFAA89C")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xFAAACC", Offset = "0xFAAACC", VA = "0xFAAACC")]
		public TidbitsTV()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class MoveShoot : MonoBehaviour
	{
		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 dir;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fallSpeed;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _isShoot;

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xB9AA70", Offset = "0xB9AA70", VA = "0xB9AA70")]
		public void UpdateMove()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xB9AAD8", Offset = "0xB9AAD8", VA = "0xB9AAD8")]
		public void Shoot(Vector3 dir)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xB9AAFC", Offset = "0xB9AAFC", VA = "0xB9AAFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xB9AB5C", Offset = "0xB9AB5C", VA = "0xB9AB5C")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xB9ABDC", Offset = "0xB9ABDC", VA = "0xB9ABDC")]
		public MoveShoot()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class TestShootArrow : MonoBehaviour
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xFA94B4", Offset = "0xFA94B4", VA = "0xFA94B4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xFA9654", Offset = "0xFA9654", VA = "0xFA9654")]
		public TestShootArrow()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class TipsPoint : MonoBehaviour
	{
		[Token(Token = "0x200022E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C75C", Offset = "0x83C75C")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TipsPoint <>4__this;

			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action callBack;

			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0x20A402C", Offset = "0x20A402C", VA = "0x20A402C")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6000A0F")]
			[Address(RVA = "0x20A4034", Offset = "0x20A4034", VA = "0x20A4034")]
			internal void <ShowCanvas>b__0(float value)
			{
			}

			[Token(Token = "0x6000A10")]
			[Address(RVA = "0x20A40E0", Offset = "0x20A40E0", VA = "0x20A40E0")]
			internal void <ShowCanvas>b__1()
			{
			}

			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x20A4240", Offset = "0x20A4240", VA = "0x20A4240")]
			internal void <ShowCanvas>b__2()
			{
			}
		}

		[Token(Token = "0x200022F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C76C", Offset = "0x83C76C")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TipsPoint <>4__this;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action callBack;

			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x20A4254", Offset = "0x20A4254", VA = "0x20A4254")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x20A425C", Offset = "0x20A425C", VA = "0x20A425C")]
			internal void <HideCanvas>b__0()
			{
			}

			[Token(Token = "0x6000A14")]
			[Address(RVA = "0x20A439C", Offset = "0x20A439C", VA = "0x20A439C")]
			internal void <HideCanvas>b__1(float value)
			{
			}

			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x20A4448", Offset = "0x20A4448", VA = "0x20A4448")]
			internal void <HideCanvas>b__2()
			{
			}
		}

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasGroup guidCanvasGroup;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI text;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform anchor;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshRenderer effectRenderer;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float offsetHeight;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform targetPlayer;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int tipIndex;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float width;

		[Token(Token = "0x1700010F")]
		public Vector3 GetCanvasPosition
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0xFAB730", Offset = "0xFAB730", VA = "0xFAB730")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0xFAB75C", Offset = "0xFAB75C", VA = "0xFAB75C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xFAB70C", Offset = "0xFAB70C", VA = "0xFAB70C")]
		public void SetText(string txt)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xFAB7B0", Offset = "0xFAB7B0", VA = "0xFAB7B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xFAB894", Offset = "0xFAB894", VA = "0xFAB894")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xFABB80", Offset = "0xFABB80", VA = "0xFABB80")]
		public void SetTarget(Transform targetPlayer)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xFABB88", Offset = "0xFABB88", VA = "0xFABB88")]
		public void Show()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xFABBB0", Offset = "0xFABBB0", VA = "0xFABBB0")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xFABBD8", Offset = "0xFABBD8", VA = "0xFABBD8")]
		public bool IsInArea(float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xFABCBC", Offset = "0xFABCBC", VA = "0xFABCBC")]
		public void ShowCanvas(Action callBack)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xFABEA8", Offset = "0xFABEA8", VA = "0xFABEA8")]
		public void HideCanvas(Action callBack)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xFABA6C", Offset = "0xFABA6C", VA = "0xFABA6C")]
		private void UpdateLineRenderer(float value, Vector3 startPos, Vector3 endPos, float targetWidth)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xFABFE0", Offset = "0xFABFE0", VA = "0xFABFE0")]
		public TipsPoint()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class UIController : MonoBehaviour
	{
		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRRayInteractor xrRayInteractor;

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xFAC368", Offset = "0xFAC368", VA = "0xFAC368")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xFAC42C", Offset = "0xFAC42C", VA = "0xFAC42C")]
		private void OnHoverEntered(HoverEnterEventArgs enterEvent)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xFAC4A0", Offset = "0xFAC4A0", VA = "0xFAC4A0")]
		public void OnHoverExit(HoverExitEventArgs enterEvent)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xFAC514", Offset = "0xFAC514", VA = "0xFAC514")]
		public UIController()
		{
		}
	}
	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83C77C", Offset = "0x83C77C")]
	public class UISetting : MonoBehaviour
	{
		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Button> buttons;

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xFAE338", Offset = "0xFAE338", VA = "0xFAE338")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xFAE4F0", Offset = "0xFAE4F0", VA = "0xFAE4F0")]
		private void OnClickBtn()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xFAE4FC", Offset = "0xFAE4FC", VA = "0xFAE4FC")]
		public UISetting()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class UserCanvasItem : MonoBehaviour
	{
		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action RefreshState;

		[Token(Token = "0x17000110")]
		public CanvasGroup CanvasGroup
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0xB71474", Offset = "0xB71474", VA = "0xB71474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		public bool IsActive
		{
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0xB715E8", Offset = "0xB715E8", VA = "0xB715E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xB71598", Offset = "0xB71598", VA = "0xB71598")]
		public void DOTweenFadeCanvas(float duration, float targetValue)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xB7160C", Offset = "0xB7160C", VA = "0xB7160C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xB71620", Offset = "0xB71620", VA = "0xB71620")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xB7163C", Offset = "0xB7163C", VA = "0xB7163C")]
		public UserCanvasItem()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class UserCanvasManager : MonoBehaviour
	{
		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<UserCanvasItem> userCanvasItems;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isUpdate;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int index;

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xB71644", Offset = "0xB71644", VA = "0xB71644")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xB717FC", Offset = "0xB717FC", VA = "0xB717FC")]
		private void UpdateCanvasView()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xB71950", Offset = "0xB71950", VA = "0xB71950")]
		public UserCanvasManager()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class VibrationManager : MonoBehaviour
	{
		[Token(Token = "0x2000235")]
		public enum VibrationManagerType
		{
			[Token(Token = "0x4000F07")]
			Left,
			[Token(Token = "0x4000F08")]
			Right
		}

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ActionBasedController baseLeftController;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActionBasedController baseRightController;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ActionBasedController tempController;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timeL;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timeR;

		[Token(Token = "0x17000112")]
		private bool IsPicoLeftControllerConnected
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0xB74B30", Offset = "0xB74B30", VA = "0xB74B30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000113")]
		private bool IsPicoRightControllerConnected
		{
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0xB74BB4", Offset = "0xB74BB4", VA = "0xB74BB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xB749EC", Offset = "0xB749EC", VA = "0xB749EC")]
		public void SendHapticImpulse(VibrationManagerType type, float value, float duration, int Hz = 200)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xB74BC0", Offset = "0xB74BC0", VA = "0xB74BC0")]
		public void UpdateSendHapticImpulse(VibrationManagerType type, float value, float interval = 0.05f, int Hz = 200)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xB74B3C", Offset = "0xB74B3C", VA = "0xB74B3C")]
		private void SendHapticImpulse_Pico(VibrationManagerType type, float value, float duration, int Hz)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xB74C6C", Offset = "0xB74C6C", VA = "0xB74C6C")]
		private static void SetControllerVibration(PXR_Input.VibrateType type, float strength = 0.5f, int time = 10, int Hz = 200)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xB74C74", Offset = "0xB74C74", VA = "0xB74C74")]
		public VibrationManager()
		{
		}
	}
}
namespace ArcheryBattle.Net
{
	[Token(Token = "0x2000236")]
	public class NetUIPanel : BaseUiMenu
	{
		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject selectModePanel;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button startMatchBtn;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button aiBattleBtn;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button exitBtn;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8446F4", Offset = "0x8446F4")]
		[SerializeField]
		private GameObject messageInfoPanel;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI titleText;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button[] btns;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LoaderAnime loaderAnime;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI infoText;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI matchText;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject backUI;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LauncherCore launcher;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Timer timer;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _matchBtnState;

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x20D55A0", Offset = "0x20D55A0", VA = "0x20D55A0")]
		public void ShowSelectModePanel(GameObject backUI)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x20D5624", Offset = "0x20D5624", VA = "0x20D5624")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x20D5918", Offset = "0x20D5918", VA = "0x20D5918")]
		private void OnChangeState(LauncherCore.LinkState state, string message)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x20D5AE8", Offset = "0x20D5AE8", VA = "0x20D5AE8")]
		private void OnMatching()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x20D5CB8", Offset = "0x20D5CB8", VA = "0x20D5CB8")]
		private void ChangeStartMatchBtn(int state, float duration = 0f)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x20D5E80", Offset = "0x20D5E80", VA = "0x20D5E80")]
		private void OnClickAiBattleBtn()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x20D5F04", Offset = "0x20D5F04", VA = "0x20D5F04")]
		private void OnShowWaiting()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x20D598C", Offset = "0x20D598C", VA = "0x20D598C")]
		private void OnMatchFail()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x20D6070", Offset = "0x20D6070", VA = "0x20D6070", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x20D6298", Offset = "0x20D6298", VA = "0x20D6298")]
		public NetUIPanel()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x20D62A0", Offset = "0x20D62A0", VA = "0x20D62A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8466EC", Offset = "0x8466EC")]
		private void <Awake>b__12_0()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x20D62E8", Offset = "0x20D62E8", VA = "0x20D62E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8466FC", Offset = "0x8466FC")]
		private void <Awake>b__12_1()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x20D632C", Offset = "0x20D632C", VA = "0x20D632C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84670C", Offset = "0x84670C")]
		private void <ChangeStartMatchBtn>b__18_0()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class Collectible : MonoBehaviour
	{
		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip useClip;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectSpawner spawner;

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xCC0E34", Offset = "0xCC0E34", VA = "0xCC0E34")]
		public Collectible()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class Encryptor : MonoBehaviour
	{
		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Encryptor instance;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool encrypt;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string secret;

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xCC6E20", Offset = "0xCC6E20", VA = "0xCC6E20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xCC6E74", Offset = "0xCC6E74", VA = "0xCC6E74")]
		public static Encryptor GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xCC6EC0", Offset = "0xCC6EC0", VA = "0xCC6EC0")]
		public static string Encrypt(string toEncrypt)
		{
			return null;
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xCC7114", Offset = "0xCC7114", VA = "0xCC7114")]
		public static string Decrypt(string toDecrypt)
		{
			return null;
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xCC7390", Offset = "0xCC7390", VA = "0xCC7390")]
		public Encryptor()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class GameManager : MonoBehaviourPun
	{
		[Serializable]
		[Token(Token = "0x200023A")]
		public class Team
		{
			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material material;

			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spawn;

			[Token(Token = "0x6000A45")]
			[Address(RVA = "0xB7BF40", Offset = "0xB7BF40", VA = "0xB7BF40")]
			public Team()
			{
			}
		}

		[Token(Token = "0x200023B")]
		public enum GameMode
		{
			[Token(Token = "0x4000F25")]
			TDM,
			[Token(Token = "0x4000F26")]
			CTF
		}

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameManager instance;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Player localPlayer;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIGame ui;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Team[] teams;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxScore;

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xB8C628", Offset = "0xB8C628", VA = "0xB8C628")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xB8C67C", Offset = "0xB8C67C", VA = "0xB8C67C")]
		public static GameManager GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xB8C6C8", Offset = "0xB8C6C8", VA = "0xB8C6C8")]
		public int GetTeamFill()
		{
			return default(int);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xB8C6D0", Offset = "0xB8C6D0", VA = "0xB8C6D0")]
		public bool IsGameOver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xB8C6D8", Offset = "0xB8C6D8", VA = "0xB8C6D8")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class ObjectSpawner : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool respawn;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int respawnTime;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject obj;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CollectionType colType;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float nextSpawn;

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x20D9D84", Offset = "0x20D9D84", VA = "0x20D9D84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x20D9D88", Offset = "0x20D9D88", VA = "0x20D9D88", Slot = "42")]
		public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x20D9D90", Offset = "0x20D9D90", VA = "0x20D9D90")]
		public ObjectSpawner()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public enum CollectionType
	{
		[Token(Token = "0x4000F2E")]
		Use,
		[Token(Token = "0x4000F2F")]
		Pickup
	}
	[Token(Token = "0x200023E")]
	public class PrefsKeys
	{
		[Token(Token = "0x4000F30")]
		public const string playerName = "TM_playerName";

		[Token(Token = "0x4000F31")]
		public const string serverAddress = "TM_serverAddress";

		[Token(Token = "0x4000F32")]
		public const string gameMode = "TM_gameMode";

		[Token(Token = "0x4000F33")]
		public const string activeTank = "TM_activeTank";

		[Token(Token = "0x4000F34")]
		public const string accessToken = "ARC_AccessToken";

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xCC90A8", Offset = "0xCC90A8", VA = "0xCC90A8")]
		public PrefsKeys()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class UIGame : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameOverMenu;

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xFAC51C", Offset = "0xFAC51C", VA = "0xFAC51C")]
		public UIGame()
		{
		}
	}
}
namespace ArcheryBattle.GameCoreState
{
	[Token(Token = "0x2000240")]
	public class InitMainState : BState
	{
		[Token(Token = "0x17000114")]
		public GameCore Owner
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0xB8F1E4", Offset = "0xB8F1E4", VA = "0xB8F1E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xB8F274", Offset = "0xB8F274", VA = "0xB8F274")]
		public InitMainState()
		{
		}
	}
}
namespace ArcheryBattle.AI
{
	[Token(Token = "0x2000241")]
	public class AiShooter : MonoBehaviour
	{
		[Token(Token = "0x2000242")]
		private enum AiState
		{
			[Token(Token = "0x4000F4A")]
			Idle,
			[Token(Token = "0x4000F4B")]
			Load,
			[Token(Token = "0x4000F4C")]
			Drag,
			[Token(Token = "0x4000F4D")]
			Aim,
			[Token(Token = "0x4000F4E")]
			Fire
		}

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator aiAnimator;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform dragArrowHandPoint;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AiBow bow;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AnimatorEvent _animationEvent;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int HashKey_Shoot;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PickUp _pickUp;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject handArrow;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quiver _quiver;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AiState aiState;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IAiShoot aiShoot;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float interval;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector2 intervalRandom;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _runTime;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Player player;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MultiplayerGameManager multiplayerGameManager;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Player selfPlayer;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform target;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform targetPanel;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float raduis;

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x1CBD038", Offset = "0x1CBD038", VA = "0x1CBD038")]
		private void OnBindEvent(string str)
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x1CBD138", Offset = "0x1CBD138", VA = "0x1CBD138")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x1CBD21C", Offset = "0x1CBD21C", VA = "0x1CBD21C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1CBD300", Offset = "0x1CBD300", VA = "0x1CBD300")]
		private void SetAiState(AiState aiState)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1CBD388", Offset = "0x1CBD388", VA = "0x1CBD388")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x1CBD558", Offset = "0x1CBD558", VA = "0x1CBD558")]
		private void OnWaitShoot(int id)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x1CBD5E8", Offset = "0x1CBD5E8", VA = "0x1CBD5E8")]
		private void ShootArrow(Vector3 targetPos)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x1CBD678", Offset = "0x1CBD678", VA = "0x1CBD678")]
		public void UpdateIntervalTime()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1CBD6A4", Offset = "0x1CBD6A4", VA = "0x1CBD6A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1CBD824", Offset = "0x1CBD824", VA = "0x1CBD824")]
		public Vector3 GetNextHitPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1CBD93C", Offset = "0x1CBD93C", VA = "0x1CBD93C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x1CBD974", Offset = "0x1CBD974", VA = "0x1CBD974")]
		public Vector3 GetRandomPos(float raduis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x1CBDB48", Offset = "0x1CBDB48", VA = "0x1CBDB48")]
		public AiShooter()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public interface IAiShoot
	{
		[Token(Token = "0x6000A5A")]
		Vector3 GetTargetByScore(int score);
	}
	[Token(Token = "0x2000244")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x2000245")]
		public delegate void UpdateScorePopertyDelegate(string nickName, int score);

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string nickName;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int score;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int teamId;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8447E0", Offset = "0x8447E0")]
		public List<BaseTarget> baseTargets;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateScorePopertyDelegate OnUpdateScorePopertyDelegate;

		[Token(Token = "0x17000115")]
		public string GetNickName
		{
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x20DC984", Offset = "0x20DC984", VA = "0x20DC984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public int GetScore
		{
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x20DC98C", Offset = "0x20DC98C", VA = "0x20DC98C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000117")]
		public int GetTeamId
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x20DC994", Offset = "0x20DC994", VA = "0x20DC994")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000118")]
		public Vector3 GetPosition
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x20DC9D0", Offset = "0x20DC9D0", VA = "0x20DC9D0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x20DC99C", Offset = "0x20DC99C", VA = "0x20DC99C")]
		public void SetTeamId(int id)
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x20DC9A4", Offset = "0x20DC9A4", VA = "0x20DC9A4")]
		public void SetNickName(string nickName)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x20DC9AC", Offset = "0x20DC9AC", VA = "0x20DC9AC")]
		public void UpdateScore(int score)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x20DC9F4", Offset = "0x20DC9F4", VA = "0x20DC9F4")]
		public Player()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class MultiplayerGameManager : MonoBehaviour
	{
		[Token(Token = "0x2000247")]
		public enum GameState
		{
			[Token(Token = "0x4000F67")]
			None,
			[Token(Token = "0x4000F68")]
			GameStart,
			[Token(Token = "0x4000F69")]
			GameOver,
			[Token(Token = "0x4000F6A")]
			GamePause
		}

		[Token(Token = "0x2000248")]
		public delegate void ChangeWindDataDelegate(WindData windData);

		[Token(Token = "0x2000249")]
		public delegate void OnGameOverDelegate(int index);

		[Serializable]
		[Token(Token = "0x200024A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C7DC", Offset = "0x83C7DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ChangeWindDataDelegate <>9__11_0;

			[Token(Token = "0x6000A83")]
			[Address(RVA = "0xB81ACC", Offset = "0xB81ACC", VA = "0xB81ACC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A84")]
			[Address(RVA = "0xB81AD4", Offset = "0xB81AD4", VA = "0xB81AD4")]
			internal void <GameStart>b__11_0(WindData data)
			{
			}
		}

		[Token(Token = "0x200024B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C7EC", Offset = "0x83C7EC")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BaseTarget target;

			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xB81AE0", Offset = "0xB81AE0", VA = "0xB81AE0")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xB81AE8", Offset = "0xB81AE8", VA = "0xB81AE8")]
			internal bool <OnHitBoard>b__0(BaseTarget v)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F54")]
		public const string backSenceName = "Room";

		[Token(Token = "0x4000F55")]
		public const string curSenceName = "PKGameCoreAI";

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BaseTarget[] baseTargets;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Player[] _players;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static GameState _gameState;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gameDuration;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RoomUI roomUi;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PKGameUI pkGameUi;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ConfettiEffect confettiEffect;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float timer;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float windTime;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float CurTime;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844848", Offset = "0x844848")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844848", Offset = "0x844848")]
		private bool <IsGameOver>k__BackingField;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Player _tempPlayer;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject gameOverPanel;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LocalControllerPlayer controllerPlayer;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChangeWindDataDelegate WindDataDelegate;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OnGameOverDelegate onGameOverDelegate;

		[Token(Token = "0x17000119")]
		public static GameState GetGameState
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0xB9ABF8", Offset = "0xB9ABF8", VA = "0xB9ABF8")]
			get
			{
				return default(GameState);
			}
		}

		[Token(Token = "0x1700011A")]
		public bool IsGameOver
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0xB9B24C", Offset = "0xB9B24C", VA = "0xB9B24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84672C", Offset = "0x84672C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0xB9B240", Offset = "0xB9B240", VA = "0xB9B240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84671C", Offset = "0x84671C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xB9ABF0", Offset = "0xB9ABF0", VA = "0xB9ABF0")]
		public void QuitApplication()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xB9AC44", Offset = "0xB9AC44", VA = "0xB9AC44")]
		public static void SetGameState(GameState target)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xB9AC94", Offset = "0xB9AC94", VA = "0xB9AC94")]
		public void GameStart()
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xB9B174", Offset = "0xB9B174", VA = "0xB9B174")]
		private void UpdateScoreView(string nickName, int score)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xB9B254", Offset = "0xB9B254", VA = "0xB9B254")]
		private void OnHitBoard(GameObject obj, BaseTarget target, int score)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xB9B41C", Offset = "0xB9B41C", VA = "0xB9B41C")]
		private void OnGameRunning()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xB9B4F4", Offset = "0xB9B4F4", VA = "0xB9B4F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xB9B560", Offset = "0xB9B560", VA = "0xB9B560")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xB9B7DC", Offset = "0xB9B7DC", VA = "0xB9B7DC", Slot = "4")]
		protected virtual void UpdateWindData()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xB9B120", Offset = "0xB9B120", VA = "0xB9B120")]
		protected WindData GetRandomWind()
		{
			return default(WindData);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xB9B84C", Offset = "0xB9B84C", VA = "0xB9B84C")]
		public void ExitGame()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xB9B8A8", Offset = "0xB9B8A8", VA = "0xB9B8A8")]
		public void RestGame()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xB9B904", Offset = "0xB9B904", VA = "0xB9B904", Slot = "5")]
		protected virtual void GameOver(int selfIndex, int[] scores, Vector3[] positions, Action callBack)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xB9BBA0", Offset = "0xB9BBA0", VA = "0xB9BBA0")]
		public MultiplayerGameManager()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xB9BBB0", Offset = "0xB9BBB0", VA = "0xB9BBB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84673C", Offset = "0x84673C")]
		private void <GameStart>b__11_1()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xB9BC78", Offset = "0xB9BC78", VA = "0xB9BC78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84674C", Offset = "0x84674C")]
		private void <Update>b__29_0()
		{
		}
	}
	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x83C7FC", Offset = "0x83C7FC")]
	public class LocalController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200024D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C85C", Offset = "0x83C85C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<TestIK> <>9__7_0;

			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<TestIK> <>9__13_0;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<TestIK> <>9__15_0;

			[Token(Token = "0x6000A94")]
			[Address(RVA = "0xB7E670", Offset = "0xB7E670", VA = "0xB7E670")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A95")]
			[Address(RVA = "0xB7E678", Offset = "0xB7E678", VA = "0xB7E678")]
			internal void <Start>b__7_0(TestIK ik)
			{
			}

			[Token(Token = "0x6000A96")]
			[Address(RVA = "0xB7E698", Offset = "0xB7E698", VA = "0xB7E698")]
			internal void <OnChangePickArrowState>b__13_0(TestIK ik)
			{
			}

			[Token(Token = "0x6000A97")]
			[Address(RVA = "0xB7E6B8", Offset = "0xB7E6B8", VA = "0xB7E6B8")]
			internal void <OnShootArrow>b__15_0(TestIK ik)
			{
			}
		}

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LocalControllerPlayer _localControllerPlayer;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject userCanvasPanel;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TestIK testIk;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Arrow _arrowTemp;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _arrowModelTemp;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PathData _pathDataTemp;

		[Token(Token = "0x1700011B")]
		public LocalControllerPlayer GetLocalControllerPlayer
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xB961F0", Offset = "0xB961F0", VA = "0xB961F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xB962A4", Offset = "0xB962A4", VA = "0xB962A4")]
		public void TestIKNoNull(Action<TestIK> callBack)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xB96358", Offset = "0xB96358", VA = "0xB96358")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xB966D8", Offset = "0xB966D8", VA = "0xB966D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xB967E8", Offset = "0xB967E8", VA = "0xB967E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xB96860", Offset = "0xB96860", VA = "0xB96860")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xB968D8", Offset = "0xB968D8", VA = "0xB968D8")]
		private void OnChangePickArrowState(bool isPick)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xB96A00", Offset = "0xB96A00", VA = "0xB96A00")]
		private void OnLeftControllerPrimaryButtonChangeState(bool isDown)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xB96A54", Offset = "0xB96A54", VA = "0xB96A54")]
		private void OnShootArrow(Vector3 startPos, Vector3 fireDir, float power)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xB96EF0", Offset = "0xB96EF0", VA = "0xB96EF0")]
		private void OnLoadArrow()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xB96FA0", Offset = "0xB96FA0", VA = "0xB96FA0")]
		public LocalController()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xB96FE0", Offset = "0xB96FE0", VA = "0xB96FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84675C", Offset = "0x84675C")]
		private void <OnLoadArrow>b__16_0(TestIK ik)
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class LocalControllerPlayer : MonoBehaviour
	{
		[Token(Token = "0x200024F")]
		public delegate void ShootArrowDelegate(Vector3 startPos, Vector3 fireDir, float power);

		[Token(Token = "0x2000250")]
		public delegate void LoadArrowDelegate();

		[Token(Token = "0x2000251")]
		public delegate void ChangePickArrowStateDelegate(bool isPickArrow);

		[Token(Token = "0x2000252")]
		public delegate void LeftControllerPrimaryButtonChangeState(bool isDown);

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionReference leftTrigger;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputActionReference rightTrigger;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform leftTran;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform rightTran;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Bow bow;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject arrowModel;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Quiver quiver;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPickArrow;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isRightTrigger;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider[] _colliders;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int dragPower;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool primaryButton;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool _stopOperation;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ShootArrowDelegate OnShootArrowDelegate;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LoadArrowDelegate OnLoadArrowDelegate;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ChangePickArrowStateDelegate OnChangePickArrowStateDelegate;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LeftControllerPrimaryButtonChangeState OnLeftControllerPrimaryButtonChangeState;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public VibrationManager vibTrigger;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x844904", Offset = "0x844904")]
		[SerializeField]
		private InputActionReference _primaryBtnActionReference;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private InputAction _primaryBtnAction;

		[Token(Token = "0x1700011C")]
		public bool IsPickArrow
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0xB97068", Offset = "0xB97068", VA = "0xB97068")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xB97070", Offset = "0xB97070", VA = "0xB97070")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public Bow GetBow
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0xB97098", Offset = "0xB97098", VA = "0xB97098")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		public bool StopOperation
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0xB97A60", Offset = "0xB97A60", VA = "0xB97A60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xB970A0", Offset = "0xB970A0", VA = "0xB970A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xB970DC", Offset = "0xB970DC", VA = "0xB970DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xB97348", Offset = "0xB97348", VA = "0xB97348")]
		private void StartTeleportLeft(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xB9734C", Offset = "0xB9734C", VA = "0xB9734C")]
		private void CancelTeleportLeft(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xB9736C", Offset = "0xB9736C", VA = "0xB9736C")]
		private void OnCancelLeft()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xB97234", Offset = "0xB97234", VA = "0xB97234")]
		private void OnTriggerLeft()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xB9738C", Offset = "0xB9738C", VA = "0xB9738C")]
		private void OnTriggerRight()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xB97458", Offset = "0xB97458", VA = "0xB97458")]
		private void OnCancelRight()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xB97734", Offset = "0xB97734", VA = "0xB97734")]
		private void StartTeleportRight(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xB97738", Offset = "0xB97738", VA = "0xB97738")]
		public void StopAllOperation()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xB977A4", Offset = "0xB977A4", VA = "0xB977A4")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xB96DF0", Offset = "0xB96DF0", VA = "0xB96DF0")]
		public Arrow GetArrow()
		{
			return null;
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xB979EC", Offset = "0xB979EC", VA = "0xB979EC")]
		private void OnTest()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xB968C8", Offset = "0xB968C8", VA = "0xB968C8")]
		public void OpenOperation()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xB97AAC", Offset = "0xB97AAC", VA = "0xB97AAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xB97A5C", Offset = "0xB97A5C", VA = "0xB97A5C")]
		private void CancelTeleportRight(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xB97B54", Offset = "0xB97B54", VA = "0xB97B54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xB97B70", Offset = "0xB97B70", VA = "0xB97B70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xB97A68", Offset = "0xB97A68", VA = "0xB97A68")]
		private static void EnableAction(InputActionReference actionReference)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xB97760", Offset = "0xB97760", VA = "0xB97760")]
		private static void DisableAction(InputActionReference actionReference)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xB972B8", Offset = "0xB972B8", VA = "0xB972B8")]
		public static InputAction GetInputAction(InputActionReference actionReference)
		{
			return null;
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xB97C7C", Offset = "0xB97C7C", VA = "0xB97C7C")]
		public LocalControllerPlayer()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xB97C84", Offset = "0xB97C84", VA = "0xB97C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84676C", Offset = "0x84676C")]
		private void <OnCancelRight>b__36_0()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class VRHandAnimator : MonoBehaviour
	{
		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int HASH_Trigger_Right;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int HASH_Trigger_Left;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int HASH_Grip_Left;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int HASH_Grip_Right;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputActionReference triggerL;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InputActionReference triggerR;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InputActionReference gripL;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputActionReference gripR;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x1700011F")]
		public Animator GetAnimator
		{
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0xB74380", Offset = "0xB74380", VA = "0xB74380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		public float Trigger_Right
		{
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0xB74434", Offset = "0xB74434", VA = "0xB74434")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0xB74248", Offset = "0xB74248", VA = "0xB74248")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public float Trigger_Left
		{
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0xB74464", Offset = "0xB74464", VA = "0xB74464")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0xB74298", Offset = "0xB74298", VA = "0xB74298")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public float Grip_Right
		{
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0xB74494", Offset = "0xB74494", VA = "0xB74494")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0xB74338", Offset = "0xB74338", VA = "0xB74338")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public float Grip_Left
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0xB744C4", Offset = "0xB744C4", VA = "0xB744C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0xB742E8", Offset = "0xB742E8", VA = "0xB742E8")]
			set
			{
			}
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xB73EF8", Offset = "0xB73EF8", VA = "0xB73EF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xB74240", Offset = "0xB74240", VA = "0xB74240")]
		private void PerformedTeleportRight(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xB74288", Offset = "0xB74288", VA = "0xB74288")]
		private void CancelTeleportRight(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xB74290", Offset = "0xB74290", VA = "0xB74290")]
		private void PerformedTeleportLeft(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xB742D8", Offset = "0xB742D8", VA = "0xB742D8")]
		private void CancelTeleportLeft(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xB742E0", Offset = "0xB742E0", VA = "0xB742E0")]
		private void PerformedTeleportGLeft(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xB74328", Offset = "0xB74328", VA = "0xB74328")]
		private void CancelTeleportGLeft(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xB74330", Offset = "0xB74330", VA = "0xB74330")]
		private void PerformedTeleportGRight(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xB74378", Offset = "0xB74378", VA = "0xB74378")]
		private void CancelTeleportGRight(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xB744F4", Offset = "0xB744F4", VA = "0xB744F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xB747AC", Offset = "0xB747AC", VA = "0xB747AC")]
		public static void EnableAction(InputActionReference actionReference)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xB747F0", Offset = "0xB747F0", VA = "0xB747F0")]
		public static void DisableAction(InputActionReference actionReference)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xB741B0", Offset = "0xB741B0", VA = "0xB741B0")]
		public static InputAction GetInputAction(InputActionReference actionReference)
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xB74834", Offset = "0xB74834", VA = "0xB74834")]
		public VRHandAnimator()
		{
		}
	}
}
namespace ArcheryBattle.Plugins.RobustFSM.Mono
{
	[Token(Token = "0x2000254")]
	public class MonoFSM<T> : MonoBehaviour, IFSM
	{
		[Token(Token = "0x2000255")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x83C86C", Offset = "0x83C86C")]
		private sealed class <ManualExecute>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MonoFSM<T> <>4__this;

			[Token(Token = "0x1700012D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B0E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B10")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B0B")]
			[DebuggerHidden]
			public <ManualExecute>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6000B0C")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B0D")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B0F")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IFSM _fsm;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844960", Offset = "0x844960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844960", Offset = "0x844960")]
		private T <Owner>k__BackingField;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84499C", Offset = "0x84499C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84499C", Offset = "0x84499C")]
		private Coroutine <ManualCoroutine>k__BackingField;

		[Token(Token = "0x17000124")]
		public T Owner
		{
			[Token(Token = "0x6000ADA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84677C", Offset = "0x84677C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000ADB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84678C", Offset = "0x84678C")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public Coroutine ManualCoroutine
		{
			[Token(Token = "0x6000ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84679C", Offset = "0x84679C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ADD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8467AC", Offset = "0x8467AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public float ManualUpdateFrequency
		{
			[Token(Token = "0x6000ADE")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ADF")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public string MachineName
		{
			[Token(Token = "0x6000AE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE1")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public IState CurrentState
		{
			[Token(Token = "0x6000AE2")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE3")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public IState InitialState
		{
			[Token(Token = "0x6000AE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE5")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public IState NextState
		{
			[Token(Token = "0x6000AE6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE7")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public IState PreviousState
		{
			[Token(Token = "0x6000AE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE9")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public virtual Dictionary<Type, IState> States
		{
			[Token(Token = "0x6000AEA")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AEB")]
			set
			{
			}
		}

		[Token(Token = "0x6000AEC")]
		public virtual void AddStates()
		{
		}

		[Token(Token = "0x6000AED")]
		public void StartManualExecute()
		{
		}

		[Token(Token = "0x6000AEE")]
		public void StopManualExecute()
		{
		}

		[Token(Token = "0x6000AEF")]
		public void AddState<T>() where T : IState, new()
		{
		}

		[Token(Token = "0x6000AF0")]
		public void ChangeState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000AF1")]
		public bool ContainsState<T>() where T : IState
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF2")]
		public T GetCurrentState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000AF3")]
		public T GetInitialState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000AF4")]
		public T GetPreviousState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000AF5")]
		public T GetState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000AF6")]
		public List<T> GetStates<T>() where T : IState
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		public bool IsCurrentState<T>() where T : IState
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF8")]
		public bool IsPreviousState<T>() where T : IState
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF9")]
		public void RemoveState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000AFA")]
		public void SetCurrentState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000AFB")]
		public void SetInitialState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000AFC")]
		public void SetUpdateFrequency(float value)
		{
		}

		[Token(Token = "0x6000AFD")]
		public void GoToPreviousState()
		{
		}

		[Token(Token = "0x6000AFE")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000AFF")]
		public void OnExecute()
		{
		}

		[Token(Token = "0x6000B00")]
		public void OnManualExecute()
		{
		}

		[Token(Token = "0x6000B01")]
		public void OnPhysicsExecute()
		{
		}

		[Token(Token = "0x6000B02")]
		public void RemoveAllStates()
		{
		}

		[Token(Token = "0x6000B03")]
		public void SetInitialStateToCurrentState()
		{
		}

		[Token(Token = "0x6000B04")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000B05")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000B06")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8467BC", Offset = "0x8467BC")]
		protected IEnumerator ManualExecute()
		{
			return null;
		}

		[Token(Token = "0x6000B07")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000B08")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B09")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000B0A")]
		public MonoFSM()
		{
		}
	}
}
namespace ArcheryBattle.Plugins.RobustFSM.Core.Interfaces
{
	[Token(Token = "0x2000256")]
	public interface IFSM
	{
		[Token(Token = "0x1700012F")]
		float ManualUpdateFrequency
		{
			[Token(Token = "0x6000B11")]
			get;
			[Token(Token = "0x6000B12")]
			set;
		}

		[Token(Token = "0x17000130")]
		string MachineName
		{
			[Token(Token = "0x6000B13")]
			get;
			[Token(Token = "0x6000B14")]
			set;
		}

		[Token(Token = "0x17000131")]
		Dictionary<Type, IState> States
		{
			[Token(Token = "0x6000B15")]
			get;
			[Token(Token = "0x6000B16")]
			set;
		}

		[Token(Token = "0x17000132")]
		IState CurrentState
		{
			[Token(Token = "0x6000B17")]
			get;
			[Token(Token = "0x6000B18")]
			set;
		}

		[Token(Token = "0x17000133")]
		IState InitialState
		{
			[Token(Token = "0x6000B19")]
			get;
			[Token(Token = "0x6000B1A")]
			set;
		}

		[Token(Token = "0x17000134")]
		IState NextState
		{
			[Token(Token = "0x6000B1B")]
			get;
			[Token(Token = "0x6000B1C")]
			set;
		}

		[Token(Token = "0x17000135")]
		IState PreviousState
		{
			[Token(Token = "0x6000B1D")]
			get;
			[Token(Token = "0x6000B1E")]
			set;
		}

		[Token(Token = "0x6000B1F")]
		bool ContainsState<T>() where T : IState;

		[Token(Token = "0x6000B20")]
		bool IsCurrentState<T>() where T : IState;

		[Token(Token = "0x6000B21")]
		bool IsPreviousState<T>() where T : IState;

		[Token(Token = "0x6000B22")]
		T GetCurrentState<T>() where T : IState;

		[Token(Token = "0x6000B23")]
		T GetInitialState<T>() where T : IState;

		[Token(Token = "0x6000B24")]
		T GetPreviousState<T>() where T : IState;

		[Token(Token = "0x6000B25")]
		T GetState<T>() where T : IState;

		[Token(Token = "0x6000B26")]
		List<T> GetStates<T>() where T : IState;

		[Token(Token = "0x6000B27")]
		void AddState<T>() where T : IState, new();

		[Token(Token = "0x6000B28")]
		void ChangeState<T>() where T : IState;

		[Token(Token = "0x6000B29")]
		void RemoveState<T>() where T : IState;

		[Token(Token = "0x6000B2A")]
		void SetCurrentState<T>() where T : IState;

		[Token(Token = "0x6000B2B")]
		void SetInitialState<T>() where T : IState;

		[Token(Token = "0x6000B2C")]
		void AddStates();

		[Token(Token = "0x6000B2D")]
		void Initialize();

		[Token(Token = "0x6000B2E")]
		void SetInitialStateToCurrentState();

		[Token(Token = "0x6000B2F")]
		void GoToPreviousState();

		[Token(Token = "0x6000B30")]
		void OnExecute();

		[Token(Token = "0x6000B31")]
		void OnManualExecute();

		[Token(Token = "0x6000B32")]
		void OnPhysicsExecute();

		[Token(Token = "0x6000B33")]
		void RemoveAllStates();

		[Token(Token = "0x6000B34")]
		void StartManualExecute();

		[Token(Token = "0x6000B35")]
		void StopManualExecute();
	}
	[Token(Token = "0x2000257")]
	public interface IHState : IFSM, IState
	{
	}
	[Token(Token = "0x2000258")]
	public interface IState
	{
		[Token(Token = "0x17000136")]
		string StateName
		{
			[Token(Token = "0x6000B36")]
			get;
			[Token(Token = "0x6000B37")]
			set;
		}

		[Token(Token = "0x17000137")]
		IFSM Machine
		{
			[Token(Token = "0x6000B38")]
			get;
			[Token(Token = "0x6000B39")]
			set;
		}

		[Token(Token = "0x17000138")]
		IFSM SuperMachine
		{
			[Token(Token = "0x6000B3A")]
			get;
			[Token(Token = "0x6000B3B")]
			set;
		}

		[Token(Token = "0x6000B3C")]
		T GetMachine<T>() where T : IFSM;

		[Token(Token = "0x6000B3D")]
		T GetSuperMachine<T>() where T : IFSM;

		[Token(Token = "0x6000B3E")]
		void Initialize();

		[Token(Token = "0x6000B3F")]
		void Enter();

		[Token(Token = "0x6000B40")]
		void Execute();

		[Token(Token = "0x6000B41")]
		void Exit();

		[Token(Token = "0x6000B42")]
		void ManualExecute();

		[Token(Token = "0x6000B43")]
		void PhysicsExecute();
	}
}
namespace ArcheryBattle.Plugins.RobustFSM.Core.Base
{
	[Token(Token = "0x2000259")]
	public class BFSM : IFSM
	{
		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<Type, IState> _states;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8449D8", Offset = "0x8449D8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x8449D8", Offset = "0x8449D8")]
		private float <ManualUpdateFrequency>k__BackingField;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844A14", Offset = "0x844A14")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844A14", Offset = "0x844A14")]
		private string <MachineName>k__BackingField;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844A50", Offset = "0x844A50")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844A50", Offset = "0x844A50")]
		private IState <CurrentState>k__BackingField;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844A8C", Offset = "0x844A8C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844A8C", Offset = "0x844A8C")]
		private IState <InitialState>k__BackingField;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844AC8", Offset = "0x844AC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844AC8", Offset = "0x844AC8")]
		private IState <NextState>k__BackingField;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844B04", Offset = "0x844B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844B04", Offset = "0x844B04")]
		private IState <PreviousState>k__BackingField;

		[Token(Token = "0x17000139")]
		public float ManualUpdateFrequency
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0xC33288", Offset = "0xC33288", VA = "0xC33288", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84686C", Offset = "0x84686C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0xC33290", Offset = "0xC33290", VA = "0xC33290", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84687C", Offset = "0x84687C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public string MachineName
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0xC33298", Offset = "0xC33298", VA = "0xC33298", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84688C", Offset = "0x84688C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0xC332A0", Offset = "0xC332A0", VA = "0xC332A0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84689C", Offset = "0x84689C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public virtual IState CurrentState
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0xC332A8", Offset = "0xC332A8", VA = "0xC332A8", Slot = "41")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8468AC", Offset = "0x8468AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0xC332B0", Offset = "0xC332B0", VA = "0xC332B0", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8468BC", Offset = "0x8468BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public virtual IState InitialState
		{
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0xC332B8", Offset = "0xC332B8", VA = "0xC332B8", Slot = "43")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8468CC", Offset = "0x8468CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0xC332C0", Offset = "0xC332C0", VA = "0xC332C0", Slot = "44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8468DC", Offset = "0x8468DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public virtual IState NextState
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0xC332C8", Offset = "0xC332C8", VA = "0xC332C8", Slot = "45")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8468EC", Offset = "0x8468EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0xC332D0", Offset = "0xC332D0", VA = "0xC332D0", Slot = "46")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8468FC", Offset = "0x8468FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public virtual IState PreviousState
		{
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0xC332D8", Offset = "0xC332D8", VA = "0xC332D8", Slot = "47")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84690C", Offset = "0x84690C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0xC332E0", Offset = "0xC332E0", VA = "0xC332E0", Slot = "48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84691C", Offset = "0x84691C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public virtual Dictionary<Type, IState> States
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0xC332E8", Offset = "0xC332E8", VA = "0xC332E8", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0xC332F0", Offset = "0xC332F0", VA = "0xC332F0", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xC332F8", Offset = "0xC332F8", VA = "0xC332F8", Slot = "51")]
		public virtual void AddStates()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xC332FC", Offset = "0xC332FC", VA = "0xC332FC", Slot = "52")]
		public virtual void StartManualExecute()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xC33300", Offset = "0xC33300", VA = "0xC33300", Slot = "53")]
		public virtual void StopManualExecute()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xC33304", Offset = "0xC33304", VA = "0xC33304")]
		protected void ChangeState(Type type)
		{
		}

		[Token(Token = "0x6000B56")]
		public virtual void AddState<T>() where T : IState, new()
		{
		}

		[Token(Token = "0x6000B57")]
		public virtual void ChangeState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000B58")]
		public virtual bool ContainsState<T>() where T : IState
		{
			return default(bool);
		}

		[Token(Token = "0x6000B59")]
		public virtual T GetCurrentState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000B5A")]
		public virtual T GetInitialState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000B5B")]
		public virtual T GetPreviousState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000B5C")]
		public virtual T GetState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000B5D")]
		public virtual List<T> GetStates<T>() where T : IState
		{
			return null;
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xC3378C", Offset = "0xC3378C", VA = "0xC3378C", Slot = "62")]
		public virtual void GoToPreviousState()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xC337D0", Offset = "0xC337D0", VA = "0xC337D0", Slot = "63")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xC33C18", Offset = "0xC33C18", VA = "0xC33C18", Slot = "33")]
		public void SetInitialStateToCurrentState()
		{
		}

		[Token(Token = "0x6000B61")]
		public bool IsCurrentState<T>() where T : IState
		{
			return default(bool);
		}

		[Token(Token = "0x6000B62")]
		public bool IsPreviousState<T>() where T : IState
		{
			return default(bool);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xC33C58", Offset = "0xC33C58", VA = "0xC33C58", Slot = "64")]
		public virtual void OnExecute()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xC33D40", Offset = "0xC33D40", VA = "0xC33D40", Slot = "65")]
		public virtual void OnManualExecute()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xC33E28", Offset = "0xC33E28", VA = "0xC33E28", Slot = "66")]
		public virtual void OnPhysicsExecute()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xC33F10", Offset = "0xC33F10", VA = "0xC33F10", Slot = "38")]
		public void RemoveAllStates()
		{
		}

		[Token(Token = "0x6000B67")]
		public virtual void RemoveState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000B68")]
		public virtual void SetCurrentState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000B69")]
		public virtual void SetInitialState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xC33F74", Offset = "0xC33F74", VA = "0xC33F74")]
		public BFSM()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class BHState : BState, IHState, IFSM, IState
	{
		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _stateName;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IFSM _fsm;

		[Token(Token = "0x17000140")]
		public override string StateName
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0xC341E4", Offset = "0xC341E4", VA = "0xC341E4", Slot = "18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0xC343B0", Offset = "0xC343B0", VA = "0xC343B0", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public float ManualUpdateFrequency
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0xC343B8", Offset = "0xC343B8", VA = "0xC343B8", Slot = "26")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xC34464", Offset = "0xC34464", VA = "0xC34464", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public string MachineName
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0xC34524", Offset = "0xC34524", VA = "0xC34524", Slot = "28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0xC345D4", Offset = "0xC345D4", VA = "0xC345D4", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public IState CurrentState
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0xC34300", Offset = "0xC34300", VA = "0xC34300", Slot = "32")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0xC34694", Offset = "0xC34694", VA = "0xC34694", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public IState InitialState
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xC34754", Offset = "0xC34754", VA = "0xC34754", Slot = "34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0xC34804", Offset = "0xC34804", VA = "0xC34804", Slot = "35")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public IState NextState
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0xC348C4", Offset = "0xC348C4", VA = "0xC348C4", Slot = "36")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0xC34974", Offset = "0xC34974", VA = "0xC34974", Slot = "37")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public IState PreviousState
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xC34A34", Offset = "0xC34A34", VA = "0xC34A34", Slot = "38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0xC34AE4", Offset = "0xC34AE4", VA = "0xC34AE4", Slot = "39")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public virtual Dictionary<Type, IState> States
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xC34BA4", Offset = "0xC34BA4", VA = "0xC34BA4", Slot = "63")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0xC34C54", Offset = "0xC34C54", VA = "0xC34C54", Slot = "64")]
			set
			{
			}
		}

		[Token(Token = "0x6000B7B")]
		public void AddState<T>() where T : IState, new()
		{
		}

		[Token(Token = "0x6000B7C")]
		public void ChangeState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000B7D")]
		public bool ContainsState<T>() where T : IState
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7E")]
		public T GetCurrentState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000B7F")]
		public T GetInitialState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000B80")]
		public T GetPreviousState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000B81")]
		public T GetState<T>() where T : IState
		{
			return (T)null;
		}

		[Token(Token = "0x6000B82")]
		public List<T> GetStates<T>() where T : IState
		{
			return null;
		}

		[Token(Token = "0x6000B83")]
		public bool IsCurrentState<T>() where T : IState
		{
			return default(bool);
		}

		[Token(Token = "0x6000B84")]
		public bool IsPreviousState<T>() where T : IState
		{
			return default(bool);
		}

		[Token(Token = "0x6000B85")]
		public void RemoveState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000B86")]
		public void SetCurrentState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000B87")]
		public void SetInitialState<T>() where T : IState
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xC34D14", Offset = "0xC34D14", VA = "0xC34D14", Slot = "56")]
		public void GoToPreviousState()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xC34DC4", Offset = "0xC34DC4", VA = "0xC34DC4", Slot = "57")]
		public void OnExecute()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xC34E74", Offset = "0xC34E74", VA = "0xC34E74", Slot = "58")]
		public void OnManualExecute()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xC34F24", Offset = "0xC34F24", VA = "0xC34F24", Slot = "59")]
		public void OnPhysicsExecute()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xC34FD4", Offset = "0xC34FD4", VA = "0xC34FD4", Slot = "60")]
		public void RemoveAllStates()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xC35084", Offset = "0xC35084", VA = "0xC35084", Slot = "55")]
		public void SetInitialStateToCurrentState()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xC35134", Offset = "0xC35134", VA = "0xC35134", Slot = "23")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xC35520", Offset = "0xC35520", VA = "0xC35520", Slot = "20")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xC3565C", Offset = "0xC3565C", VA = "0xC3565C", Slot = "22")]
		public override void Exit()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xC35790", Offset = "0xC35790", VA = "0xC35790", Slot = "21")]
		public override void Execute()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xC35798", Offset = "0xC35798", VA = "0xC35798", Slot = "24")]
		public override void ManualExecute()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xC357A0", Offset = "0xC357A0", VA = "0xC357A0", Slot = "25")]
		public override void PhysicsExecute()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xC357A8", Offset = "0xC357A8", VA = "0xC357A8", Slot = "61")]
		public void StartManualExecute()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xC357AC", Offset = "0xC357AC", VA = "0xC357AC", Slot = "62")]
		public void StopManualExecute()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xC357B0", Offset = "0xC357B0", VA = "0xC357B0", Slot = "65")]
		public virtual void AddStates()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xC357B4", Offset = "0xC357B4", VA = "0xC357B4")]
		public BHState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025B")]
	public class BState : IState
	{
		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844B40", Offset = "0x844B40")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844B40", Offset = "0x844B40")]
		private string <StateName>k__BackingField;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844B7C", Offset = "0x844B7C")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844B7C", Offset = "0x844B7C")]
		private IFSM <Machine>k__BackingField;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x844BB8", Offset = "0x844BB8")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x844BB8", Offset = "0x844BB8")]
		private IFSM <SuperMachine>k__BackingField;

		[Token(Token = "0x17000148")]
		public virtual string StateName
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0xC35828", Offset = "0xC35828", VA = "0xC35828", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84692C", Offset = "0x84692C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xC35830", Offset = "0xC35830", VA = "0xC35830", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84693C", Offset = "0x84693C")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public IFSM Machine
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xC35838", Offset = "0xC35838", VA = "0xC35838", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84694C", Offset = "0x84694C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xC35840", Offset = "0xC35840", VA = "0xC35840", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84695C", Offset = "0x84695C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public IFSM SuperMachine
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xC35848", Offset = "0xC35848", VA = "0xC35848", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84696C", Offset = "0x84696C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xC35850", Offset = "0xC35850", VA = "0xC35850", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84697C", Offset = "0x84697C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B9E")]
		public T GetMachine<T>() where T : IFSM
		{
			return (T)null;
		}

		[Token(Token = "0x6000B9F")]
		public T GetSuperMachine<T>() where T : IFSM
		{
			return (T)null;
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xC35658", Offset = "0xC35658", VA = "0xC35658", Slot = "20")]
		public virtual void Enter()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xC35794", Offset = "0xC35794", VA = "0xC35794", Slot = "21")]
		public virtual void Execute()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xC3578C", Offset = "0xC3578C", VA = "0xC3578C", Slot = "22")]
		public virtual void Exit()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xC35858", Offset = "0xC35858", VA = "0xC35858", Slot = "23")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xC3579C", Offset = "0xC3579C", VA = "0xC3579C", Slot = "24")]
		public virtual void ManualExecute()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xC357A4", Offset = "0xC357A4", VA = "0xC357A4", Slot = "25")]
		public virtual void PhysicsExecute()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xC35820", Offset = "0xC35820", VA = "0xC35820")]
		public BState()
		{
		}
	}
}
