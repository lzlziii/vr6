using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Threading;
using AmplifyOcclusion;
using Bhaptics.Tact.Unity;
using ExitGames.Client.Photon;
using ExitGames.Client.Photon.LoadBalancing;
using ExitGames.Client.Photon.Voice;
using Il2CppDummyDll;
using LitJson;
using MeshCombineStudio;
using POpusCodec;
using POpusCodec.Enums;
using Photon;
using Photon.Chat;
using Photon.Realtime;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using RootMotion.FinalIK;
using TMPro;
using Tayx.Graphy.Advanced;
using Tayx.Graphy.Audio;
using Tayx.Graphy.Fps;
using Tayx.Graphy.Graph;
using Tayx.Graphy.Ram;
using Tayx.Graphy.UI;
using Tayx.Graphy.Utils;
using UltimateGameTools.MeshSimplifier;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using VirtualAge;

[assembly: AssemblyVersion("0.0.0.0")]
[Serializable]
[Token(Token = "0x2000002")]
public class MouseLookHelper
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x13D7F70", Offset = "0x13D7F70", VA = "0x13D7F70")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x13D7FC4", Offset = "0x13D7FC4", VA = "0x13D7FC4")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x13D8288", Offset = "0x13D8288", VA = "0x13D8288")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x13D8350", Offset = "0x13D8350", VA = "0x13D8350")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x2000003")]
public class SoundsForJoinAndLeave : PunBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip JoinClip;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip LeaveClip;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x151CF4C", Offset = "0x151CF4C", VA = "0x151CF4C", Slot = "47")]
	public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x151D054", Offset = "0x151D054", VA = "0x151D054", Slot = "48")]
	public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x151D15C", Offset = "0x151D15C", VA = "0x151D15C")]
	public SoundsForJoinAndLeave()
	{
	}
}
[Token(Token = "0x2000004")]
[DisallowMultipleComponent]
public class PhotonVoiceHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateInterval;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nextSendTickCount;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x158D228", Offset = "0x158D228", VA = "0x158D228")]
	private static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x158D2FC", Offset = "0x158D2FC", VA = "0x158D2FC")]
	private static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x158D34C", Offset = "0x158D34C", VA = "0x158D34C")]
	private static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x158D678", Offset = "0x158D678", VA = "0x158D678")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD9099C", Offset = "0xD9099C")]
	private static void RuntimeInitializeOnLoad()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x158D7D4", Offset = "0x158D7D4", VA = "0x158D7D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x158DB58", Offset = "0x158DB58", VA = "0x158DB58")]
	protected void Update()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x158DDD8", Offset = "0x158DDD8", VA = "0x158DDD8")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x158DEEC", Offset = "0x158DEEC", VA = "0x158DEEC")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x158DF3C", Offset = "0x158DF3C", VA = "0x158DF3C")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x158DFD0", Offset = "0x158DFD0", VA = "0x158DFD0")]
	public PhotonVoiceHandler()
	{
	}
}
[Token(Token = "0x2000005")]
[DisallowMultipleComponent]
public class PhotonVoiceNetwork : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonVoiceNetwork _instance;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static object instanceLock;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool destroyed;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float BackgroundTimeout;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float VoiceChatVolume;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal UnityVoiceFrontend client;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80CF4", Offset = "0xD80CF4")]
	private static Func<PhotonVoiceRecorder, IAudioSource> <AudioSourceFactory>k__BackingField;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string unityMicrophoneDevice;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int photonMicrophoneDeviceID;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioInEnumerator photonMicEnumerator;

	[Token(Token = "0x17000001")]
	internal static PhotonVoiceNetwork instance
	{
		[Token(Token = "0x6000012")]
		[Address(RVA = "0x158D8AC", Offset = "0x158D8AC", VA = "0x158D8AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000013")]
		[Address(RVA = "0x158DFD8", Offset = "0x158DFD8", VA = "0x158DFD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public static Func<PhotonVoiceRecorder, IAudioSource> AudioSourceFactory
	{
		[Token(Token = "0x6000018")]
		[Address(RVA = "0x158E56C", Offset = "0x158E56C", VA = "0x158E56C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD909BC", Offset = "0xD909BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000019")]
		[Address(RVA = "0x158E5D4", Offset = "0x158E5D4", VA = "0x158E5D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD909CC", Offset = "0xD909CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public static UnityVoiceFrontend Client
	{
		[Token(Token = "0x600001C")]
		[Address(RVA = "0x158D598", Offset = "0x158D598", VA = "0x158D598")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	public static VoiceClient VoiceClient
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0x158EAA0", Offset = "0x158EAA0", VA = "0x158EAA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	public static ExitGames.Client.Photon.LoadBalancing.ClientState ClientState
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x158EB14", Offset = "0x158EB14", VA = "0x158EB14")]
		get
		{
			return default(ExitGames.Client.Photon.LoadBalancing.ClientState);
		}
	}

	[Token(Token = "0x17000006")]
	public static string CurrentRoomName
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0x158EB88", Offset = "0x158EB88", VA = "0x158EB88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	public static AudioInEnumerator PhotonMicrophoneEnumerator
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x158EC44", Offset = "0x158EC44", VA = "0x158EC44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	public static string MicrophoneDevice
	{
		[Token(Token = "0x6000021")]
		[Address(RVA = "0x158ECB0", Offset = "0x158ECB0", VA = "0x158ECB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000022")]
		[Address(RVA = "0x158ED1C", Offset = "0x158ED1C", VA = "0x158ED1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public static int PhotonMicrophoneDeviceID
	{
		[Token(Token = "0x6000023")]
		[Address(RVA = "0x158F2C4", Offset = "0x158F2C4", VA = "0x158F2C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000024")]
		[Address(RVA = "0x158F330", Offset = "0x158F330", VA = "0x158F330")]
		set
		{
		}
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x158E2D8", Offset = "0x158E2D8", VA = "0x158E2D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x158E3DC", Offset = "0x158E3DC", VA = "0x158E3DC")]
	private PhotonVoiceNetwork()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x158E474", Offset = "0x158E474", VA = "0x158E474")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD909AC", Offset = "0xD909AC")]
	public static void RuntimeInitializeOnLoad()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x158E508", Offset = "0x158E508", VA = "0x158E508")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x158E640", Offset = "0x158E640", VA = "0x158E640")]
	public static bool Connect()
	{
		return default(bool);
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x158D604", Offset = "0x158D604", VA = "0x158D604")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x158F704", Offset = "0x158F704", VA = "0x158F704")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x158F8B4", Offset = "0x158F8B4", VA = "0x158F8B4")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x158F984", Offset = "0x158F984", VA = "0x158F984")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x158FA84", Offset = "0x158FA84", VA = "0x158FA84")]
	private void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x158FC34", Offset = "0x158FC34", VA = "0x158FC34")]
	private void OnLeftRoom()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x158FDC4", Offset = "0x158FDC4", VA = "0x158FDC4")]
	private void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x158FF54", Offset = "0x158FF54", VA = "0x158FF54")]
	internal static void LinkSpeakerToRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x158FFD0", Offset = "0x158FFD0", VA = "0x158FFD0")]
	internal static void UnlinkSpeakerFromRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}
}
[Token(Token = "0x2000006")]
public class UnityVoiceFrontend : LoadBalancingFrontend
{
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8078C", Offset = "0xD8078C")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityVoiceFrontend <>4__this;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public byte voiceId;

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x240930C", Offset = "0x240930C", VA = "0x240930C")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x240A1D8", Offset = "0x240A1D8", VA = "0x240A1D8")]
		internal void <OnRemoteVoiceInfo>b__0(float[] frame)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x240A200", Offset = "0x240A200", VA = "0x240A200")]
		internal void <OnRemoteVoiceInfo>b__1()
		{
		}
	}

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Dictionary<KeyValuePair<int, byte>, PhotonVoiceSpeaker> voiceSpeakers;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80D04", Offset = "0xD80D04")]
	private Action<int, byte, VoiceInfo> <OnRemoteVoiceInfoAction>k__BackingField;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80D14", Offset = "0xD80D14")]
	private Action<int, byte> <OnRemoteVoiceRemoveAction>k__BackingField;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80D24", Offset = "0xD80D24")]
	private Action<int, byte, float[]> <OnAudioFrameAction>k__BackingField;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80D34", Offset = "0xD80D34")]
	private Action<ExitGames.Client.Photon.LoadBalancing.ClientState> <OnStateChangeAction>k__BackingField;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80D44", Offset = "0xD80D44")]
	private Action<OperationResponse> <OnOpResponseAction>k__BackingField;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool reconnect;

	[Token(Token = "0x1700000A")]
	public Action<int, byte, VoiceInfo> OnRemoteVoiceInfoAction
	{
		[Token(Token = "0x600002E")]
		[Address(RVA = "0x2408748", Offset = "0x2408748", VA = "0x2408748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD909DC", Offset = "0xD909DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600002F")]
		[Address(RVA = "0x2408750", Offset = "0x2408750", VA = "0x2408750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD909EC", Offset = "0xD909EC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public Action<int, byte> OnRemoteVoiceRemoveAction
	{
		[Token(Token = "0x6000030")]
		[Address(RVA = "0x2408758", Offset = "0x2408758", VA = "0x2408758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD909FC", Offset = "0xD909FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x2408760", Offset = "0x2408760", VA = "0x2408760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90A0C", Offset = "0xD90A0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public Action<int, byte, float[]> OnAudioFrameAction
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x2408768", Offset = "0x2408768", VA = "0x2408768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90A1C", Offset = "0xD90A1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x2408770", Offset = "0x2408770", VA = "0x2408770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90A2C", Offset = "0xD90A2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public new Action<ExitGames.Client.Photon.LoadBalancing.ClientState> OnStateChangeAction
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x2408778", Offset = "0x2408778", VA = "0x2408778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90A3C", Offset = "0xD90A3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x2408780", Offset = "0x2408780", VA = "0x2408780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90A4C", Offset = "0xD90A4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public new Action<OperationResponse> OnOpResponseAction
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0x2408788", Offset = "0x2408788", VA = "0x2408788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90A5C", Offset = "0xD90A5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x2408790", Offset = "0x2408790", VA = "0x2408790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90A6C", Offset = "0xD90A6C")]
		set
		{
		}
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x2408798", Offset = "0x2408798", VA = "0x2408798")]
	internal UnityVoiceFrontend(ConnectionProtocol connetProtocol)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x2408944", Offset = "0x2408944", VA = "0x2408944")]
	public void Reconnect()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x24089D4", Offset = "0x24089D4", VA = "0x24089D4", Slot = "14")]
	public override void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x2408B70", Offset = "0x2408B70", VA = "0x2408B70")]
	public void OnOpResponse(OperationResponse resp)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x2408BE4", Offset = "0x2408BE4", VA = "0x2408BE4")]
	private void linkVoice(int playerId, byte voiceId, VoiceInfo voiceInfo, PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x2408F1C", Offset = "0x2408F1C", VA = "0x2408F1C")]
	public void OnRemoteVoiceInfo(int channelId, int playerId, byte voiceId, VoiceInfo voiceInfo, ref RemoteVoiceOptions options)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x2409314", Offset = "0x2409314", VA = "0x2409314")]
	public void LinkSpeakerToRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x2409644", Offset = "0x2409644", VA = "0x2409644")]
	public void OnRemoteVoiceRemove(int playerId, byte voiceId)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x24098B4", Offset = "0x24098B4", VA = "0x24098B4")]
	private bool unlinkSpeaker(KeyValuePair<int, byte> key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x240995C", Offset = "0x240995C", VA = "0x240995C")]
	public void UnlinkSpeakerFromRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x2409CE8", Offset = "0x2409CE8", VA = "0x2409CE8")]
	public void OnAudioFrame(int playerId, byte voiceId, float[] frame)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x2409F50", Offset = "0x2409F50", VA = "0x2409F50")]
	public void OnStateChange(ExitGames.Client.Photon.LoadBalancing.ClientState state)
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7CEC4", Offset = "0xD7CEC4")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7CEC4", Offset = "0xD7CEC4")]
public class PhotonVoiceRecorder : Photon.MonoBehaviour
{
	[Token(Token = "0x20003DF")]
	public enum AudioSource
	{
		[Token(Token = "0x4001BC8")]
		Microphone,
		[Token(Token = "0x4001BC9")]
		AudioClip,
		[Token(Token = "0x4001BCA")]
		Factory
	}

	[Token(Token = "0x20003E0")]
	public enum MicAudioSourceType
	{
		[Token(Token = "0x4001BCC")]
		Settings,
		[Token(Token = "0x4001BCD")]
		Unity,
		[Token(Token = "0x4001BCE")]
		Photon
	}

	[Token(Token = "0x20003E1")]
	public enum SampleTypeConv
	{
		[Token(Token = "0x4001BD0")]
		None,
		[Token(Token = "0x4001BD1")]
		Short,
		[Token(Token = "0x4001BD2")]
		ShortAuto
	}

	[Token(Token = "0x20003E2")]
	public class PhotonVoiceCreatedParams
	{
		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8CF94", Offset = "0xD8CF94")]
		private LocalVoice <Voice>k__BackingField;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8CFA4", Offset = "0xD8CFA4")]
		private IAudioSource <AudioSource>k__BackingField;

		[Token(Token = "0x1700039A")]
		public LocalVoice Voice
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x1592564", Offset = "0x1592564", VA = "0x1592564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9674C", Offset = "0xD9674C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x159256C", Offset = "0x159256C", VA = "0x159256C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9675C", Offset = "0xD9675C")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public IAudioSource AudioSource
		{
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0x1592574", Offset = "0x1592574", VA = "0x1592574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9676C", Offset = "0xD9676C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0x159257C", Offset = "0x159257C", VA = "0x159257C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9677C", Offset = "0xD9677C")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x1591DE0", Offset = "0x1591DE0", VA = "0x1591DE0")]
		public PhotonVoiceCreatedParams()
		{
		}
	}

	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8079C", Offset = "0xD8079C")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalVoiceAudio<float> localVoice;

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x1591D20", Offset = "0x1591D20", VA = "0x1591D20")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x1592494", Offset = "0x1592494", VA = "0x1592494")]
		internal void <createLocalVoiceAudio>b__0(float[] buf)
		{
		}
	}

	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD807AC", Offset = "0xD807AC")]
	private sealed class <>c__DisplayClass33_1
	{
		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalVoiceAudio<short> localVoice;

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x1591D28", Offset = "0x1591D28", VA = "0x1591D28")]
		public <>c__DisplayClass33_1()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x15924FC", Offset = "0x15924FC", VA = "0x15924FC")]
		internal void <createLocalVoiceAudio>b__1(short[] buf)
		{
		}
	}

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocalVoice voice;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string microphoneDevice;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int photonMicrophoneDeviceID;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IAudioSource audioSource;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource Source;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MicAudioSourceType MicrophoneType;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SampleTypeConv TypeConvert;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool forceShort;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip AudioClip;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool LoopAudioClip;

	[Token(Token = "0x1700000F")]
	protected ILocalVoiceAudio voiceAudio
	{
		[Token(Token = "0x6000044")]
		[Address(RVA = "0x1590108", Offset = "0x1590108", VA = "0x1590108")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	public AudioUtil.IVoiceDetector VoiceDetector
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0x159017C", Offset = "0x159017C", VA = "0x159017C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000011")]
	public string MicrophoneDevice
	{
		[Token(Token = "0x6000046")]
		[Address(RVA = "0x159025C", Offset = "0x159025C", VA = "0x159025C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x158F1E8", Offset = "0x158F1E8", VA = "0x158F1E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public int PhotonMicrophoneDeviceID
	{
		[Token(Token = "0x6000048")]
		[Address(RVA = "0x15907B0", Offset = "0x15907B0", VA = "0x15907B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000049")]
		[Address(RVA = "0x158F5F0", Offset = "0x158F5F0", VA = "0x158F5F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public byte AudioGroup
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x1591074", Offset = "0x1591074", VA = "0x1591074")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x1591090", Offset = "0x1591090", VA = "0x1591090")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool IsTransmitting
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x15910AC", Offset = "0x15910AC", VA = "0x15910AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000015")]
	public AudioUtil.ILevelMeter LevelMeter
	{
		[Token(Token = "0x600004E")]
		[Address(RVA = "0x15910C8", Offset = "0x15910C8", VA = "0x15910C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000016")]
	public bool Transmit
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0x1591EF4", Offset = "0x1591EF4", VA = "0x1591EF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x1591F10", Offset = "0x1591F10", VA = "0x1591F10")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool Detect
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x1591F30", Offset = "0x1591F30", VA = "0x1591F30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x1592058", Offset = "0x1592058", VA = "0x1592058")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public bool DebugEchoMode
	{
		[Token(Token = "0x6000059")]
		[Address(RVA = "0x15907B8", Offset = "0x15907B8", VA = "0x15907B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600005A")]
		[Address(RVA = "0x15907D4", Offset = "0x15907D4", VA = "0x15907D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public bool VoiceDetectorCalibrating
	{
		[Token(Token = "0x600005C")]
		[Address(RVA = "0x1592288", Offset = "0x1592288", VA = "0x1592288")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1590264", Offset = "0x1590264", VA = "0x1590264")]
	public void UpdateAudioSource()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1591184", Offset = "0x1591184", VA = "0x1591184")]
	private void Start()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x15907F4", Offset = "0x15907F4", VA = "0x15907F4")]
	private LocalVoice createLocalVoiceAudioAndSource()
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x159152C", Offset = "0x159152C", VA = "0x159152C", Slot = "4")]
	protected virtual LocalVoice createLocalVoiceAudio(VoiceInfo voiceInfo, IAudioSource source)
	{
		return null;
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1591D30", Offset = "0x1591D30", VA = "0x1591D30", Slot = "5")]
	protected virtual void sendPhotonVoiceCreatedMessage()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1591DE8", Offset = "0x1591DE8", VA = "0x1591DE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1591EF0", Offset = "0x1591EF0", VA = "0x1591EF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1592194", Offset = "0x1592194", VA = "0x1592194")]
	public void VoiceDetectorCalibrate(int durationMs)
	{
	}

	[Token(Token = "0x600005D")]
	private string tostr<T>(T[] x, int lim = 10)
	{
		return null;
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1592344", Offset = "0x1592344", VA = "0x1592344")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x159240C", Offset = "0x159240C", VA = "0x159240C")]
	public PhotonVoiceRecorder()
	{
	}
}
[Token(Token = "0x2000008")]
[DisallowMultipleComponent]
public class PhotonVoiceSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003E5")]
	public enum MicAudioSourceType
	{
		[Token(Token = "0x4001BD8")]
		Unity,
		[Token(Token = "0x4001BD9")]
		Photon
	}

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool WorkInOfflineMode;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool AutoConnect;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AutoDisconnect;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool AutoTransmit;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SamplingRate SamplingRate;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OpusCodec.FrameDuration FrameDuration;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Bitrate;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool VoiceDetection;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float VoiceDetectionThreshold;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int PlayDelayMs;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public MicAudioSourceType MicrophoneType;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int DebugLostPercent;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool DebugInfo;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool Encrypt;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonVoiceSettings instance;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static object instanceLock;

	[Token(Token = "0x1700001A")]
	public static PhotonVoiceSettings Instance
	{
		[Token(Token = "0x6000060")]
		[Address(RVA = "0x158EF9C", Offset = "0x158EF9C", VA = "0x158EF9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000061")]
		[Address(RVA = "0x1592584", Offset = "0x1592584", VA = "0x1592584")]
		private set
		{
		}
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1592884", Offset = "0x1592884", VA = "0x1592884")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x15928E8", Offset = "0x15928E8", VA = "0x15928E8")]
	public PhotonVoiceSettings()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7CF6C", Offset = "0xD7CF6C")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7CF6C", Offset = "0xD7CF6C")]
public class PhotonVoiceSpeaker : Photon.MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IAudioOut player;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool started;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80D54", Offset = "0xD80D54")]
	private long <LastRecvTime>k__BackingField;

	[Token(Token = "0x1700001B")]
	public long LastRecvTime
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0x159298C", Offset = "0x159298C", VA = "0x159298C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90A7C", Offset = "0xD90A7C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000066")]
		[Address(RVA = "0x1592994", Offset = "0x1592994", VA = "0x1592994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90A8C", Offset = "0xD90A8C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000067")]
		[Address(RVA = "0x159299C", Offset = "0x159299C", VA = "0x159299C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001D")]
	public int CurrentBufferLag
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0x1592A4C", Offset = "0x1592A4C", VA = "0x1592A4C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001E")]
	public bool IsVoiceLinked
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0x1592B00", Offset = "0x1592B00", VA = "0x1592B00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1592B20", Offset = "0x1592B20", VA = "0x1592B20")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1592BE8", Offset = "0x1592BE8", VA = "0x1592BE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1592C4C", Offset = "0x1592C4C", VA = "0x1592C4C")]
	internal void OnVoiceLinked(int frequency, int channels, int frameSamplesPerChannel, int playDelayMs)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1592D3C", Offset = "0x1592D3C", VA = "0x1592D3C")]
	internal void OnVoiceUnlinked()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1592DFC", Offset = "0x1592DFC", VA = "0x1592DFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1592EB0", Offset = "0x1592EB0", VA = "0x1592EB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1592F1C", Offset = "0x1592F1C", VA = "0x1592F1C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1592D40", Offset = "0x1592D40", VA = "0x1592D40")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1592F20", Offset = "0x1592F20", VA = "0x1592F20")]
	internal void OnAudioFrame(float[] frame)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1593028", Offset = "0x1593028", VA = "0x1593028")]
	public PhotonVoiceSpeaker()
	{
	}
}
[Token(Token = "0x200000A")]
internal class DelayProcessor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003E6")]
	private abstract class Processor<T> : LocalVoiceFramed<T>.IProcessor, IDisposable
	{
		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float factor;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] prevBuf;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevBufPosWrite;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevBufPosRead;

		[Token(Token = "0x6001E55")]
		public Processor(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6001E56")]
		protected abstract void mix(float factor, T[] buf, T[] prevBuf, ref int prevBufPosRead);

		[Token(Token = "0x6001E57")]
		public T[] Process(T[] buf)
		{
			return null;
		}

		[Token(Token = "0x6001E58")]
		public void Dispose()
		{
		}
	}

	[Token(Token = "0x20003E7")]
	private class ProcessorFloat : Processor<float>
	{
		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x157E040", Offset = "0x157E040", VA = "0x157E040")]
		public ProcessorFloat(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x157E128", Offset = "0x157E128", VA = "0x157E128", Slot = "6")]
		protected override void mix(float factor, float[] buf, float[] prevBuf, ref int prevBufPosRead)
		{
		}
	}

	[Token(Token = "0x20003E8")]
	private class ProcessorShort : Processor<short>
	{
		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x157E0B0", Offset = "0x157E0B0", VA = "0x157E0B0")]
		public ProcessorShort(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x157E1B8", Offset = "0x157E1B8", VA = "0x157E1B8", Slot = "6")]
		protected override void mix(float factor, short[] buf, short[] prevBuf, ref int prevBufPosRead)
		{
		}
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x157DC48", Offset = "0x157DC48", VA = "0x157DC48")]
	private void PhotonVoiceCreated(PhotonVoiceRecorder.PhotonVoiceCreatedParams p)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x157E120", Offset = "0x157E120", VA = "0x157E120")]
	public DelayProcessor()
	{
	}
}
[Token(Token = "0x200000B")]
public class Gui : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD807BC", Offset = "0xD807BC")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<PhotonVoiceRecorder, IAudioSource> <>9__0_0;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<PhotonVoiceRecorder, IAudioSource> <>9__0_1;

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x1708660", Offset = "0x1708660", VA = "0x1708660")]
		public <>c()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x1708668", Offset = "0x1708668", VA = "0x1708668")]
		internal IAudioSource <Start>b__0_0(PhotonVoiceRecorder rec)
		{
			return null;
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x1708744", Offset = "0x1708744", VA = "0x1708744")]
		internal IAudioSource <Start>b__0_1(PhotonVoiceRecorder rec)
		{
			return null;
		}
	}

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float dataRateNextTime;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int prevInBytes;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int prevOutBytes;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int dataRateIn;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int dataRateOut;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1705114", Offset = "0x1705114", VA = "0x1705114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x17053B4", Offset = "0x17053B4", VA = "0x17053B4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x17085F4", Offset = "0x17085F4", VA = "0x17085F4")]
	public Gui()
	{
	}
}
[Token(Token = "0x200000C")]
public class HighlightRecorder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonVoiceRecorder recorder;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rendererComp;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1708A40", Offset = "0x1708A40", VA = "0x1708A40")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1708B58", Offset = "0x1708B58", VA = "0x1708B58")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1708C04", Offset = "0x1708C04", VA = "0x1708C04")]
	public HighlightRecorder()
	{
	}
}
[Token(Token = "0x200000D")]
public class HighlightSpeaker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonVoiceSpeaker speaker;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rendererComp;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1708C0C", Offset = "0x1708C0C", VA = "0x1708C0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1708D24", Offset = "0x1708D24", VA = "0x1708D24")]
	private void Update()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1708DD0", Offset = "0x1708DD0", VA = "0x1708DD0")]
	public HighlightSpeaker()
	{
	}
}
[Token(Token = "0x200000E")]
internal class ToneAudioReader : IAudioReader<float>, IDataReader<float>, IDisposable, IAudioSource
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private double k;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private long timeSamples;

	[Token(Token = "0x1700001F")]
	public int Channels
	{
		[Token(Token = "0x6000080")]
		[Address(RVA = "0x193E2B8", Offset = "0x193E2B8", VA = "0x193E2B8", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000020")]
	public int SamplingRate
	{
		[Token(Token = "0x6000081")]
		[Address(RVA = "0x193E2B0", Offset = "0x193E2B0", VA = "0x193E2B0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x193E278", Offset = "0x193E278", VA = "0x193E278")]
	public ToneAudioReader()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x193E2C0", Offset = "0x193E2C0", VA = "0x193E2C0", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x193E2C4", Offset = "0x193E2C4", VA = "0x193E2C4", Slot = "4")]
	public bool Read(float[] buf)
	{
		return default(bool);
	}
}
[Token(Token = "0x200000F")]
public class ViewDrag : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 hit_position;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 current_position;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 camera_position;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool invert;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool yBecomesZ;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float speed;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x240C220", Offset = "0x240C220", VA = "0x240C220")]
	private void Start()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x240C224", Offset = "0x240C224", VA = "0x240C224")]
	private void Update()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x240C2B4", Offset = "0x240C2B4", VA = "0x240C2B4")]
	private void LeftMouseDrag()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x240C4A0", Offset = "0x240C4A0", VA = "0x240C4A0")]
	public ViewDrag()
	{
	}
}
[Token(Token = "0x2000010")]
public class Demo2DJumpAndRun : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000088")]
	[Address(RVA = "0x157E274", Offset = "0x157E274", VA = "0x157E274")]
	private void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x157E598", Offset = "0x157E598", VA = "0x157E598")]
	public Demo2DJumpAndRun()
	{
	}
}
[Token(Token = "0x2000011")]
public class JumpAndRunMovement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float JumpForce;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator m_Animator;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody2D m_Body;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_IsGrounded;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x18D806C", Offset = "0x18D806C", VA = "0x18D806C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x18D80F4", Offset = "0x18D80F4", VA = "0x18D80F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x18D8448", Offset = "0x18D8448", VA = "0x18D8448")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x18D836C", Offset = "0x18D836C", VA = "0x18D836C")]
	private void UpdateFacingDirection()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x18D8550", Offset = "0x18D8550", VA = "0x18D8550")]
	private void UpdateJumping()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x18D86DC", Offset = "0x18D86DC", VA = "0x18D86DC")]
	[PunRPC]
	private void DoJump()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x18D8494", Offset = "0x18D8494", VA = "0x18D8494")]
	private void UpdateMovement()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x18D82BC", Offset = "0x18D82BC", VA = "0x18D82BC")]
	private void UpdateIsRunning()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x18D8120", Offset = "0x18D8120", VA = "0x18D8120")]
	private void UpdateIsGrounded()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x18D8738", Offset = "0x18D8738", VA = "0x18D8738")]
	public JumpAndRunMovement()
	{
	}
}
[Token(Token = "0x2000012")]
public class ChannelSelector : UnityEngine.MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1575B4C", Offset = "0x1575B4C", VA = "0x1575B4C")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1575BC8", Offset = "0x1575BC8", VA = "0x1575BC8", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1575E6C", Offset = "0x1575E6C", VA = "0x1575E6C")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x2000013")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1575E74", Offset = "0x1575E74", VA = "0x1575E74")]
	public void Update()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1575F44", Offset = "0x1575F44", VA = "0x1575F44")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x2000014")]
public class ChatGui : UnityEngine.MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80D64", Offset = "0xD80D64")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform ChatPanel;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public InputField InputFieldChat;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text CurrentChannelText;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool ShowState;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject Title;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text StateText;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text UserIdText;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int TestLength;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private byte[] testBytes;

	[Token(Token = "0x17000021")]
	public string UserName
	{
		[Token(Token = "0x6000099")]
		[Address(RVA = "0x1575F4C", Offset = "0x1575F4C", VA = "0x1575F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90AAC", Offset = "0xD90AAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x1575F54", Offset = "0x1575F54", VA = "0x1575F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90ABC", Offset = "0xD90ABC")]
		set
		{
		}
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1575F5C", Offset = "0x1575F5C", VA = "0x1575F5C")]
	public void Start()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x15761F8", Offset = "0x15761F8", VA = "0x15761F8")]
	public void Connect()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x157639C", Offset = "0x157639C", VA = "0x157639C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x15763B0", Offset = "0x15763B0", VA = "0x15763B0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x15763C4", Offset = "0x15763C4", VA = "0x15763C4")]
	public void Update()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x15764B8", Offset = "0x15764B8", VA = "0x15764B8")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1576E10", Offset = "0x1576E10", VA = "0x1576E10")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1576554", Offset = "0x1576554", VA = "0x1576554")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1576EC4", Offset = "0x1576EC4", VA = "0x1576EC4")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1576F80", Offset = "0x1576F80", VA = "0x1576F80", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1577068", Offset = "0x1577068", VA = "0x1577068", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x15773A4", Offset = "0x15773A4", VA = "0x15773A4", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x15773C4", Offset = "0x15773C4", VA = "0x15773C4", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1577470", Offset = "0x1577470", VA = "0x1577470", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x15775F4", Offset = "0x15775F4", VA = "0x15775F4")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1577270", Offset = "0x1577270", VA = "0x1577270")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1577780", Offset = "0x1577780", VA = "0x1577780", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1577B50", Offset = "0x1577B50", VA = "0x1577B50", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1577BA0", Offset = "0x1577BA0", VA = "0x1577BA0", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1577CB0", Offset = "0x1577CB0", VA = "0x1577CB0", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1577E3C", Offset = "0x1577E3C", VA = "0x1577E3C", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1577F40", Offset = "0x1577F40", VA = "0x1577F40", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1578044", Offset = "0x1578044", VA = "0x1578044")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1575C44", Offset = "0x1575C44", VA = "0x1575C44")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1578128", Offset = "0x1578128", VA = "0x1578128")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1578174", Offset = "0x1578174", VA = "0x1578174")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x2000015")]
public class FriendItem : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x17000022")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x1701528", Offset = "0x1701528", VA = "0x1701528")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x1701504", Offset = "0x1701504", VA = "0x1701504")]
		set
		{
		}
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x170154C", Offset = "0x170154C", VA = "0x170154C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x17015B8", Offset = "0x17015B8", VA = "0x17015B8")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x17016E0", Offset = "0x17016E0", VA = "0x17016E0")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x2000016")]
public class IgnoreUiRaycastWhenInactive : UnityEngine.MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x170A5E0", Offset = "0x170A5E0", VA = "0x170A5E0", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x170A604", Offset = "0x170A604", VA = "0x170A604")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D014", Offset = "0xD7D014")]
public class NamePickGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000072")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x13D9198", Offset = "0x13D9198", VA = "0x13D9198")]
	public void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x13D9250", Offset = "0x13D9250", VA = "0x13D9250")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x13D929C", Offset = "0x13D929C", VA = "0x13D929C")]
	public void StartChat()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x13D9364", Offset = "0x13D9364", VA = "0x13D9364")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x2000018")]
public class GUICustomAuth : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003EA")]
	private enum GuiState
	{
		[Token(Token = "0x4001BE2")]
		AuthOrNot,
		[Token(Token = "0x4001BE3")]
		AuthInput,
		[Token(Token = "0x4001BE4")]
		AuthHelp,
		[Token(Token = "0x4001BE5")]
		AuthFailed
	}

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect GuiRect;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string authName;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string authToken;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string authDebugMessage;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GuiState guiState;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject RootOf3dButtons;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x17016E8", Offset = "0x17016E8", VA = "0x17016E8")]
	public void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1701780", Offset = "0x1701780", VA = "0x1701780")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x170178C", Offset = "0x170178C", VA = "0x170178C")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1701798", Offset = "0x1701798", VA = "0x1701798")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x17017DC", Offset = "0x17017DC", VA = "0x17017DC")]
	public void SetStateAuthInput()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1701818", Offset = "0x1701818", VA = "0x1701818")]
	public void SetStateAuthHelp()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1701854", Offset = "0x1701854", VA = "0x1701854")]
	public void SetStateAuthOrNot()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x17017A0", Offset = "0x17017A0", VA = "0x17017A0")]
	public void SetStateAuthFailed()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x170188C", Offset = "0x170188C", VA = "0x170188C")]
	public void ConnectWithNickname()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1701970", Offset = "0x1701970", VA = "0x1701970")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x17028FC", Offset = "0x17028FC", VA = "0x17028FC")]
	public GUICustomAuth()
	{
	}
}
[Token(Token = "0x2000019")]
public class GUIFriendFinding : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string[] friendListOfSomeCommunity;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect GuiRect;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string ExpectedUsers;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x170296C", Offset = "0x170296C", VA = "0x170296C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1702AAC", Offset = "0x1702AAC", VA = "0x1702AAC")]
	public static string[] FetchFriendsFromCommunity()
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1702C44", Offset = "0x1702C44", VA = "0x1702C44")]
	public void OnUpdatedFriendList()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1702CB0", Offset = "0x1702CB0", VA = "0x1702CB0")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x17034D4", Offset = "0x17034D4", VA = "0x17034D4")]
	public GUIFriendFinding()
	{
	}
}
[Token(Token = "0x200001A")]
public class GUIFriendsInRoom : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect GuiRect;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x17034DC", Offset = "0x17034DC", VA = "0x17034DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1703574", Offset = "0x1703574", VA = "0x1703574")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1703B34", Offset = "0x1703B34", VA = "0x1703B34")]
	public GUIFriendsInRoom()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D078", Offset = "0xD7D078")]
public class OnClickCallMethod : Photon.MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TargetGameObject;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string TargetMethod;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1BC5A58", Offset = "0x1BC5A58", VA = "0x1BC5A58")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x1BC5B48", Offset = "0x1BC5B48", VA = "0x1BC5B48")]
	public OnClickCallMethod()
	{
	}
}
[Token(Token = "0x200001C")]
public class HubGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003EB")]
	private struct DemoBtn
	{
		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Text;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Link;
	}

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUISkin Skin;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 scrollPos;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string demoDescription;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DemoBtn demoBtn;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DemoBtn webLink;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GUIStyle m_Headline;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x1708DD8", Offset = "0x1708DD8", VA = "0x1708DD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x1708F0C", Offset = "0x1708F0C", VA = "0x1708F0C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x1709C34", Offset = "0x1709C34", VA = "0x1709C34")]
	public HubGui()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D0DC", Offset = "0xD7D0DC")]
public class MoveCam : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 originalPos;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 randomPos;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform camTransform;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform lookAt;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x13D8A30", Offset = "0x13D8A30", VA = "0x13D8A30")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x13D8B74", Offset = "0x13D8B74", VA = "0x13D8B74")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x13D8D48", Offset = "0x13D8D48", VA = "0x13D8D48")]
	public MoveCam()
	{
	}
}
[Token(Token = "0x200001E")]
public class ToHubButton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D ButtonTexture;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rect ButtonRect;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ToHubButton instance;

	[Token(Token = "0x17000023")]
	public static ToHubButton Instance
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x193DD68", Offset = "0x193DD68", VA = "0x193DD68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x193DEA4", Offset = "0x193DEA4", VA = "0x193DEA4")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x193DFA8", Offset = "0x193DFA8", VA = "0x193DFA8")]
	public void Start()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x193E080", Offset = "0x193E080", VA = "0x193E080")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x193E270", Offset = "0x193E270", VA = "0x193E270")]
	public ToHubButton()
	{
	}
}
[Token(Token = "0x200001F")]
public class DemoMecanimGUI : PunBehaviour
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUISkin Skin;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonAnimatorView m_AnimatorView;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator m_RemoteAnimator;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_SlideIn;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_FoundPlayerSlideIn;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_IsOpen;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x157F5AC", Offset = "0x157F5AC", VA = "0x157F5AC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x157F5B0", Offset = "0x157F5B0", VA = "0x157F5B0")]
	public void Update()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x157F6F4", Offset = "0x157F6F4", VA = "0x157F6F4")]
	public void FindRemoteAnimator()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x157F864", Offset = "0x157F864", VA = "0x157F864")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x158100C", Offset = "0x158100C", VA = "0x158100C", Slot = "46")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1581010", Offset = "0x1581010", VA = "0x1581010")]
	private void CreatePlayerObject()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x158117C", Offset = "0x158117C", VA = "0x158117C")]
	public DemoMecanimGUI()
	{
	}
}
[Token(Token = "0x2000020")]
public class MessageOverlay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Objects;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x15C3E48", Offset = "0x15C3E48", VA = "0x15C3E48")]
	public void Start()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x15C3ECC", Offset = "0x15C3ECC", VA = "0x15C3ECC")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x15C3ED4", Offset = "0x15C3ED4", VA = "0x15C3ED4")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x15C3E50", Offset = "0x15C3E50", VA = "0x15C3E50")]
	private void SetActive(bool enable)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x15C3EDC", Offset = "0x15C3EDC", VA = "0x15C3EDC")]
	public MessageOverlay()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D140", Offset = "0xD7D140")]
public class OnCollideSwitchTeam : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PunTeams.Team TeamToSwitchTo;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1BC6ECC", Offset = "0x1BC6ECC", VA = "0x1BC6ECC")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1BC7060", Offset = "0x1BC7060", VA = "0x1BC7060")]
	public OnCollideSwitchTeam()
	{
	}
}
[Token(Token = "0x2000022")]
public class OnPickedUpScript : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1BC7360", Offset = "0x1BC7360", VA = "0x1BC7360")]
	public void OnPickedUp(PickupItem item)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1BC743C", Offset = "0x1BC743C", VA = "0x1BC743C")]
	public OnPickedUpScript()
	{
	}
}
[Token(Token = "0x2000023")]
public class PickupCamera : Photon.MonoBehaviour
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cameraTransform;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _target;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distance;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float height;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float angularSmoothLag;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float angularMaxSpeed;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float heightSmoothLag;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float snapSmoothLag;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float snapMaxSpeed;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float clampHeadPositionScreenSpace;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float lockCameraTimeout;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 headOffset;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 centerOffset;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float heightVelocity;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float angleVelocity;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool snap;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PickupController controller;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float targetHeight;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Camera m_CameraTransformCamera;

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1593030", Offset = "0x1593030", VA = "0x1593030")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x15934E8", Offset = "0x15934E8", VA = "0x15934E8")]
	private void DebugDrawStuff()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x159361C", Offset = "0x159361C", VA = "0x159361C")]
	private float AngleDistance(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x15936C0", Offset = "0x15936C0", VA = "0x15936C0")]
	private void Apply(Transform dummyTarget, Vector3 dummyCenter)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1593EC4", Offset = "0x1593EC4", VA = "0x1593EC4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1593430", Offset = "0x1593430", VA = "0x1593430")]
	private void Cut(Transform dummyTarget, Vector3 dummyCenter)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1593B3C", Offset = "0x1593B3C", VA = "0x1593B3C")]
	private void SetUpRotation(Vector3 centerPos, Vector3 headPos)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1593F3C", Offset = "0x1593F3C", VA = "0x1593F3C")]
	private Vector3 GetCenterOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1593F48", Offset = "0x1593F48", VA = "0x1593F48")]
	public PickupCamera()
	{
	}
}
[Token(Token = "0x2000024")]
public enum PickupCharacterState
{
	[Token(Token = "0x40000AA")]
	Idle,
	[Token(Token = "0x40000AB")]
	Walking,
	[Token(Token = "0x40000AC")]
	Trotting,
	[Token(Token = "0x40000AD")]
	Running,
	[Token(Token = "0x40000AE")]
	Jumping
}
[Token(Token = "0x2000025")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D1A4", Offset = "0xD7D1A4")]
public class PickupController : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationClip idleAnimation;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip walkAnimation;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip runAnimation;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip jumpPoseAnimation;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float walkMaxAnimationSpeed;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float trotMaxAnimationSpeed;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float runMaxAnimationSpeed;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float jumpAnimationSpeed;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float landAnimationSpeed;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animation _animation;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PickupCharacterState _characterState;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float walkSpeed;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float trotSpeed;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float runSpeed;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float inAirControlAcceleration;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float jumpHeight;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float gravity;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float speedSmoothing;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float rotateSpeed;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float trotAfterSeconds;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool canJump;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float jumpRepeatTime;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float jumpTimeout;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float groundedTimeout;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lockCameraTimer;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 moveDirection;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float verticalSpeed;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float moveSpeed;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CollisionFlags collisionFlags;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool jumping;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool jumpingReachedApex;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	private bool movingBack;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	private bool isMoving;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float walkTimeStart;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float lastJumpButtonTime;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float lastJumpTime;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 inAirVelocity;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastGroundedTime;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 velocity;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 lastPos;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 remotePosition;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool isControllable;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool DoRotate;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float RemoteSmoothing;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool AssignAsTagObject;

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1593FFC", Offset = "0x1593FFC", VA = "0x1593FFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x15943E8", Offset = "0x15943E8", VA = "0x15943E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1595298", Offset = "0x1595298", VA = "0x1595298", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1594B98", Offset = "0x1594B98", VA = "0x1594B98")]
	private void UpdateSmoothedMovementDirection()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x15951C4", Offset = "0x15951C4", VA = "0x15951C4")]
	private void ApplyJumping()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x159510C", Offset = "0x159510C", VA = "0x159510C")]
	private void ApplyGravity()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x159547C", Offset = "0x159547C", VA = "0x159547C")]
	private float CalculateJumpVerticalSpeed(float targetJumpHeight)
	{
		return default(float);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1595514", Offset = "0x1595514", VA = "0x1595514")]
	private void DidJump()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1595554", Offset = "0x1595554", VA = "0x1595554")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1595570", Offset = "0x1595570", VA = "0x1595570")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1595578", Offset = "0x1595578", VA = "0x1595578")]
	public bool IsJumping()
	{
		return default(bool);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x159528C", Offset = "0x159528C", VA = "0x159528C")]
	public bool IsGrounded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1595580", Offset = "0x1595580", VA = "0x1595580")]
	public Vector3 GetDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x159558C", Offset = "0x159558C", VA = "0x159558C")]
	public bool IsMovingBackwards()
	{
		return default(bool);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1595594", Offset = "0x1595594", VA = "0x1595594")]
	public float GetLockCameraTimer()
	{
		return default(float);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x159559C", Offset = "0x159559C", VA = "0x159559C")]
	public bool IsMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1595644", Offset = "0x1595644", VA = "0x1595644")]
	public bool HasJumpReachedApex()
	{
		return default(bool);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x159564C", Offset = "0x159564C", VA = "0x159564C")]
	public bool IsGroundedWithTimeout()
	{
		return default(bool);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1595680", Offset = "0x1595680", VA = "0x1595680")]
	public void Reset()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x15956E4", Offset = "0x15956E4", VA = "0x15956E4")]
	public PickupController()
	{
	}
}
[Token(Token = "0x2000026")]
public class PickupDemoGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ShowScores;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool ShowDropButton;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool ShowTeams;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float DropOffset;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x15957E4", Offset = "0x15957E4", VA = "0x15957E4")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x15967A4", Offset = "0x15967A4", VA = "0x15967A4")]
	public PickupDemoGui()
	{
	}
}
[Token(Token = "0x2000027")]
public class PickupTriggerForward : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000110")]
	[Address(RVA = "0x15987D0", Offset = "0x15987D0", VA = "0x15987D0")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x15988A4", Offset = "0x15988A4", VA = "0x15988A4")]
	public PickupTriggerForward()
	{
	}
}
[Token(Token = "0x2000028")]
public class DemoRPGMovement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RPGCamera Camera;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1581184", Offset = "0x1581184", VA = "0x1581184")]
	private void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1581188", Offset = "0x1581188", VA = "0x1581188")]
	private void CreatePlayerObject()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x15812C8", Offset = "0x15812C8", VA = "0x15812C8")]
	public DemoRPGMovement()
	{
	}
}
[Token(Token = "0x2000029")]
public class RPGCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumDistance;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MinimumDistance;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ScrollModifier;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TurnModifier;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_CameraTransform;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_LookAtPoint;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_LocalForwardVector;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_Distance;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1906B18", Offset = "0x1906B18", VA = "0x1906B18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1906CA0", Offset = "0x1906CA0", VA = "0x1906CA0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1906CD4", Offset = "0x1906CD4", VA = "0x1906CD4")]
	private void UpdateDistance()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1906D8C", Offset = "0x1906D8C", VA = "0x1906D8C")]
	private void UpdateZoom()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1906E68", Offset = "0x1906E68", VA = "0x1906E68")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1906F2C", Offset = "0x1906F2C", VA = "0x1906F2C")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x19070F4", Offset = "0x19070F4", VA = "0x19070F4")]
	public RPGCamera()
	{
	}
}
[Token(Token = "0x200002A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D208", Offset = "0xD7D208")]
public class RPGMovement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ForwardSpeed;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float BackwardSpeed;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StrafeSpeed;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotateSpeed;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CharacterController m_CharacterController;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_LastPosition;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator m_Animator;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PhotonTransformView m_TransformView;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_AnimatorSpeed;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 m_CurrentMovement;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_CurrentTurnSpeed;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x19070FC", Offset = "0x19070FC", VA = "0x19070FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x190719C", Offset = "0x190719C", VA = "0x190719C")]
	private void Update()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x19078AC", Offset = "0x19078AC", VA = "0x19078AC")]
	private void UpdateAnimation()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1907214", Offset = "0x1907214", VA = "0x1907214")]
	private void ResetSpeedValues()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1907884", Offset = "0x1907884", VA = "0x1907884")]
	private void ApplySynchronizedValues()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x19077A8", Offset = "0x19077A8", VA = "0x19077A8")]
	private void ApplyGravityToCharacterController()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x19076F8", Offset = "0x19076F8", VA = "0x19076F8")]
	private void MoveCharacterController()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x19073CC", Offset = "0x19073CC", VA = "0x19073CC")]
	private void UpdateForwardMovement()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x19074BC", Offset = "0x19074BC", VA = "0x19074BC")]
	private void UpdateBackwardMovement()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x19075B0", Offset = "0x19075B0", VA = "0x19075B0")]
	private void UpdateStrafeMovement()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1907288", Offset = "0x1907288", VA = "0x1907288")]
	private void UpdateRotateMovement()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1907B5C", Offset = "0x1907B5C", VA = "0x1907B5C")]
	public RPGMovement()
	{
	}
}
[Token(Token = "0x200002B")]
public class RpsCore : PunBehaviour, IPunTurnManagerCallbacks
{
	[Token(Token = "0x20003EC")]
	public enum Hand
	{
		[Token(Token = "0x4001BE9")]
		None,
		[Token(Token = "0x4001BEA")]
		Rock,
		[Token(Token = "0x4001BEB")]
		Paper,
		[Token(Token = "0x4001BEC")]
		Scissors
	}

	[Token(Token = "0x20003ED")]
	public enum ResultType
	{
		[Token(Token = "0x4001BEE")]
		None,
		[Token(Token = "0x4001BEF")]
		Draw,
		[Token(Token = "0x4001BF0")]
		LocalWin,
		[Token(Token = "0x4001BF1")]
		LocalLoss
	}

	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD807CC", Offset = "0xD807CC")]
	private sealed class <ShowResultsBeginNextTurnCoroutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RpsCore <>4__this;

		[Token(Token = "0x1700039C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x1511190", Offset = "0x1511190", VA = "0x1511190", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0x15111F8", Offset = "0x15111F8", VA = "0x15111F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x1510900", Offset = "0x1510900", VA = "0x1510900")]
		[DebuggerHidden]
		public <ShowResultsBeginNextTurnCoroutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x1511054", Offset = "0x1511054", VA = "0x1511054", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x1511058", Offset = "0x1511058", VA = "0x1511058", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x1511198", Offset = "0x1511198", VA = "0x1511198", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD807DC", Offset = "0xD807DC")]
	private sealed class <CycleRemoteHandCoroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RpsCore <>4__this;

		[Token(Token = "0x1700039E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x1510FE4", Offset = "0x1510FE4", VA = "0x1510FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0x151104C", Offset = "0x151104C", VA = "0x151104C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x1510AC4", Offset = "0x1510AC4", VA = "0x1510AC4")]
		[DebuggerHidden]
		public <CycleRemoteHandCoroutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x1510F2C", Offset = "0x1510F2C", VA = "0x1510F2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x1510F30", Offset = "0x1510F30", VA = "0x1510F30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x1510FEC", Offset = "0x1510FEC", VA = "0x1510FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform ConnectUiView;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform GameUiView;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CanvasGroup ButtonCanvasGroup;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform TimerFillImage;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text TurnText;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text TimeText;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text RemotePlayerText;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text LocalPlayerText;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image WinOrLossImage;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image localSelectionImage;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Hand localSelection;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Image remoteSelectionImage;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Hand remoteSelection;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Sprite SelectedRock;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Sprite SelectedPaper;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Sprite SelectedScissors;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Sprite SpriteWin;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Sprite SpriteLose;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Sprite SpriteDraw;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private RectTransform DisconnectedPanel;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ResultType result;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private PunTurnManager turnManager;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Hand randomHand;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool IsShowingResults;

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x150F288", Offset = "0x150F288", VA = "0x150F288")]
	public void Start()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x150F4C4", Offset = "0x150F4C4", VA = "0x150F4C4")]
	public void Update()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x150FE68", Offset = "0x150FE68", VA = "0x150FE68", Slot = "62")]
	public void OnTurnBegins(int turn)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x150FFA0", Offset = "0x150FFA0", VA = "0x150FFA0", Slot = "63")]
	public void OnTurnCompleted(int obj)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x15101B0", Offset = "0x15101B0", VA = "0x15101B0", Slot = "64")]
	public void OnPlayerMove(PhotonPlayer photonPlayer, int turn, object move)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x15103C8", Offset = "0x15103C8", VA = "0x15103C8", Slot = "65")]
	public void OnPlayerFinished(PhotonPlayer photonPlayer, int turn, object move)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1510624", Offset = "0x1510624", VA = "0x1510624", Slot = "66")]
	public void OnTurnTimeEnds(int obj)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x15100D8", Offset = "0x15100D8", VA = "0x15100D8")]
	private void UpdateScores()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1510784", Offset = "0x1510784", VA = "0x1510784")]
	public void StartTurn()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x151080C", Offset = "0x151080C", VA = "0x151080C")]
	public void MakeTurn(Hand selection)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x151015C", Offset = "0x151015C", VA = "0x151015C")]
	public void OnEndTurn()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1510890", Offset = "0x1510890", VA = "0x1510890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD90ACC", Offset = "0xD90ACC")]
	public IEnumerator ShowResultsBeginNextTurnCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x151092C", Offset = "0x151092C", VA = "0x151092C")]
	public void EndGame()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x151006C", Offset = "0x151006C", VA = "0x151006C")]
	private void CalculateWinAndLoss()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x150FE2C", Offset = "0x150FE2C", VA = "0x150FE2C")]
	private Sprite SelectionToSprite(Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x150FC44", Offset = "0x150FC44", VA = "0x150FC44")]
	private void UpdatePlayerTexts()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1510A54", Offset = "0x1510A54", VA = "0x1510A54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD90B30", Offset = "0xD90B30")]
	public IEnumerator CycleRemoteHandCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1510AF0", Offset = "0x1510AF0", VA = "0x1510AF0")]
	public void OnClickRock()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1510AF8", Offset = "0x1510AF8", VA = "0x1510AF8")]
	public void OnClickPaper()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1510B00", Offset = "0x1510B00", VA = "0x1510B00")]
	public void OnClickScissors()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1510B08", Offset = "0x1510B08", VA = "0x1510B08")]
	public void OnClickConnect()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1510B94", Offset = "0x1510B94", VA = "0x1510B94")]
	public void OnClickReConnectAndRejoin()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x150F364", Offset = "0x150F364", VA = "0x150F364")]
	private void RefreshUIViews()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1510C1C", Offset = "0x1510C1C", VA = "0x1510C1C", Slot = "34")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1510C94", Offset = "0x1510C94", VA = "0x1510C94", Slot = "46")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1510D7C", Offset = "0x1510D7C", VA = "0x1510D7C", Slot = "47")]
	public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1510E54", Offset = "0x1510E54", VA = "0x1510E54", Slot = "48")]
	public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1510EF4", Offset = "0x1510EF4", VA = "0x1510EF4", Slot = "43")]
	public override void OnConnectionFail(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1510F24", Offset = "0x1510F24", VA = "0x1510F24")]
	public RpsCore()
	{
	}
}
[Token(Token = "0x200002C")]
public class RpsDebug : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button ConnectionDebugButton;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ShowConnectionDebug;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1511200", Offset = "0x1511200", VA = "0x1511200")]
	public void ToggleConnectionDebug()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1511210", Offset = "0x1511210", VA = "0x1511210")]
	public void Update()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1511330", Offset = "0x1511330", VA = "0x1511330")]
	public RpsDebug()
	{
	}
}
[Token(Token = "0x200002D")]
public class RpsDemoConnect : PunBehaviour
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField InputField;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string UserId;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string previousRoomPlayerPrefKey;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string previousRoom;

	[Token(Token = "0x4000114")]
	private const string MainSceneName = "DemoRPS-Scene";

	[Token(Token = "0x4000115")]
	private const string NickNamePlayerPrefsKey = "NickName";

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1511338", Offset = "0x1511338", VA = "0x1511338")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x15113C8", Offset = "0x15113C8", VA = "0x15113C8")]
	public void ApplyUserIdAndConnect()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x15115CC", Offset = "0x15115CC", VA = "0x15115CC", Slot = "50")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1511770", Offset = "0x1511770", VA = "0x1511770", Slot = "39")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1511780", Offset = "0x1511780", VA = "0x1511780", Slot = "49")]
	public override void OnPhotonRandomJoinFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1511854", Offset = "0x1511854", VA = "0x1511854", Slot = "46")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x151192C", Offset = "0x151192C", VA = "0x151192C", Slot = "37")]
	public override void OnPhotonJoinRoomFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x15119AC", Offset = "0x15119AC", VA = "0x15119AC", Slot = "43")]
	public override void OnConnectionFail(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1511B4C", Offset = "0x1511B4C", VA = "0x1511B4C", Slot = "60")]
	public override void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1511C18", Offset = "0x1511C18", VA = "0x1511C18")]
	public RpsDemoConnect()
	{
	}
}
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D26C", Offset = "0xD7D26C")]
public class CubeExtra : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD80EA4", Offset = "0xD80EA4")]
	public float Factor;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 latestCorrectPos;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 movementVector;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 errorVector;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private double lastTime;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x157933C", Offset = "0x157933C", VA = "0x157933C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1579378", Offset = "0x1579378", VA = "0x1579378", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x157952C", Offset = "0x157952C", VA = "0x157952C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x15796A8", Offset = "0x15796A8", VA = "0x15796A8")]
	public CubeExtra()
	{
	}
}
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D2D0", Offset = "0xD7D2D0")]
public class CubeInter : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x20003F0")]
	internal struct State
	{
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal double timestamp;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal Vector3 pos;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal Quaternion rot;
	}

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private State[] m_BufferedState;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_TimestampCount;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double InterpolationDelay;

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x157974C", Offset = "0x157974C", VA = "0x157974C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1579A9C", Offset = "0x1579A9C", VA = "0x1579A9C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1579E88", Offset = "0x1579E88", VA = "0x1579E88")]
	public CubeInter()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D334", Offset = "0xD7D334")]
public class CubeLerp : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 latestCorrectPos;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 onUpdatePos;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fraction;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1579EF4", Offset = "0x1579EF4", VA = "0x1579EF4")]
	public void Start()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1579F50", Offset = "0x1579F50", VA = "0x1579F50", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x157A104", Offset = "0x157A104", VA = "0x157A104")]
	public void Update()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x157A230", Offset = "0x157A230", VA = "0x157A230")]
	public CubeLerp()
	{
	}
}
[Token(Token = "0x2000031")]
public class DragToMove : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD807EC", Offset = "0xD807EC")]
	private sealed class <RecordMouse>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DragToMove <>4__this;

		[Token(Token = "0x170003A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E70")]
			[Address(RVA = "0x18A2314", Offset = "0x18A2314", VA = "0x18A2314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E72")]
			[Address(RVA = "0x18A237C", Offset = "0x18A237C", VA = "0x18A237C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x18A2028", Offset = "0x18A2028", VA = "0x18A2028")]
		[DebuggerHidden]
		public <RecordMouse>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x18A20D0", Offset = "0x18A20D0", VA = "0x18A20D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x18A20D4", Offset = "0x18A20D4", VA = "0x18A20D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x18A231C", Offset = "0x18A231C", VA = "0x18A231C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] cubes;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector3> PositionsQueue;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] cubeStartPositions;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nextPosIndex;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpTime;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool recording;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x18A1B9C", Offset = "0x18A1B9C", VA = "0x18A1B9C")]
	public void Start()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x18A1C80", Offset = "0x18A1C80", VA = "0x18A1C80")]
	public void Update()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x18A1FB8", Offset = "0x18A1FB8", VA = "0x18A1FB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD90B94", Offset = "0xD90B94")]
	public IEnumerator RecordMouse()
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x18A2054", Offset = "0x18A2054", VA = "0x18A2054")]
	public DragToMove()
	{
	}
}
[Token(Token = "0x2000032")]
public class IELdemo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUISkin Skin;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1709C8C", Offset = "0x1709C8C", VA = "0x1709C8C")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x170A14C", Offset = "0x170A14C", VA = "0x170A14C")]
	public IELdemo()
	{
	}
}
[Token(Token = "0x2000033")]
public class ThirdPersonCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraTransform;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _target;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float height;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float angularSmoothLag;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float angularMaxSpeed;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float heightSmoothLag;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float snapSmoothLag;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float snapMaxSpeed;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float clampHeadPositionScreenSpace;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lockCameraTimeout;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 headOffset;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 centerOffset;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float heightVelocity;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float angleVelocity;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool snap;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ThirdPersonController controller;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float targetHeight;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Camera m_CameraTransformCamera;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x193B3EC", Offset = "0x193B3EC", VA = "0x193B3EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x193B838", Offset = "0x193B838", VA = "0x193B838")]
	private void DebugDrawStuff()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x193B96C", Offset = "0x193B96C", VA = "0x193B96C")]
	private float AngleDistance(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x193BA10", Offset = "0x193BA10", VA = "0x193BA10")]
	private void Apply(Transform dummyTarget, Vector3 dummyCenter)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x193C214", Offset = "0x193C214", VA = "0x193C214")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x193B780", Offset = "0x193B780", VA = "0x193B780")]
	private void Cut(Transform dummyTarget, Vector3 dummyCenter)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x193BE8C", Offset = "0x193BE8C", VA = "0x193BE8C")]
	private void SetUpRotation(Vector3 centerPos, Vector3 headPos)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x193C28C", Offset = "0x193C28C", VA = "0x193C28C")]
	private Vector3 GetCenterOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x193C298", Offset = "0x193C298", VA = "0x193C298")]
	public ThirdPersonCamera()
	{
	}
}
[Token(Token = "0x2000034")]
public enum CharacterState
{
	[Token(Token = "0x400013D")]
	Idle,
	[Token(Token = "0x400013E")]
	Walking,
	[Token(Token = "0x400013F")]
	Trotting,
	[Token(Token = "0x4000140")]
	Running,
	[Token(Token = "0x4000141")]
	Jumping
}
[Token(Token = "0x2000035")]
public class ThirdPersonController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationClip idleAnimation;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip walkAnimation;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip runAnimation;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip jumpPoseAnimation;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float walkMaxAnimationSpeed;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float trotMaxAnimationSpeed;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float runMaxAnimationSpeed;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float jumpAnimationSpeed;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float landAnimationSpeed;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animation _animation;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CharacterState _characterState;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float walkSpeed;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float trotSpeed;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float runSpeed;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float inAirControlAcceleration;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float jumpHeight;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float gravity;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float speedSmoothing;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float rotateSpeed;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float trotAfterSeconds;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool canJump;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float jumpRepeatTime;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float jumpTimeout;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float groundedTimeout;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lockCameraTimer;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 moveDirection;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float verticalSpeed;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float moveSpeed;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CollisionFlags collisionFlags;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool jumping;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool jumpingReachedApex;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	private bool movingBack;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	private bool isMoving;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float walkTimeStart;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float lastJumpButtonTime;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float lastJumpTime;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 inAirVelocity;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastGroundedTime;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool isControllable;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 lastPos;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 velocity;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x193C350", Offset = "0x193C350", VA = "0x193C350")]
	public void Start()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x193C35C", Offset = "0x193C35C", VA = "0x193C35C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x193C620", Offset = "0x193C620", VA = "0x193C620")]
	private void UpdateSmoothedMovementDirection()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x193CB90", Offset = "0x193CB90", VA = "0x193CB90")]
	private void ApplyJumping()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x193CCF0", Offset = "0x193CCF0", VA = "0x193CCF0")]
	private void ApplyGravity()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x193CC58", Offset = "0x193CC58", VA = "0x193CC58")]
	private float CalculateJumpVerticalSpeed(float targetJumpHeight)
	{
		return default(float);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x193CDA8", Offset = "0x193CDA8", VA = "0x193CDA8")]
	private void DidJump()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x193CDE8", Offset = "0x193CDE8", VA = "0x193CDE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x193D484", Offset = "0x193D484", VA = "0x193D484")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x193D4A0", Offset = "0x193D4A0", VA = "0x193D4A0")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x193D4A8", Offset = "0x193D4A8", VA = "0x193D4A8")]
	public bool IsJumping()
	{
		return default(bool);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x193CB84", Offset = "0x193CB84", VA = "0x193CB84")]
	public bool IsGrounded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x193D4B0", Offset = "0x193D4B0", VA = "0x193D4B0")]
	public Vector3 GetDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x193D4BC", Offset = "0x193D4BC", VA = "0x193D4BC")]
	public bool IsMovingBackwards()
	{
		return default(bool);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x193D4C4", Offset = "0x193D4C4", VA = "0x193D4C4")]
	public float GetLockCameraTimer()
	{
		return default(float);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x193D4CC", Offset = "0x193D4CC", VA = "0x193D4CC")]
	public bool IsMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x193D574", Offset = "0x193D574", VA = "0x193D574")]
	public bool HasJumpReachedApex()
	{
		return default(bool);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x193D57C", Offset = "0x193D57C", VA = "0x193D57C")]
	public bool IsGroundedWithTimeout()
	{
		return default(bool);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x193D5B0", Offset = "0x193D5B0", VA = "0x193D5B0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x193D614", Offset = "0x193D614", VA = "0x193D614")]
	public ThirdPersonController()
	{
	}
}
[Token(Token = "0x2000036")]
public class ThirdPersonNetwork : Photon.MonoBehaviour
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ThirdPersonCamera cameraScript;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ThirdPersonController controllerScript;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool firstTake;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 correctPlayerPos;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion correctPlayerRot;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x193D708", Offset = "0x193D708", VA = "0x193D708")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x193D714", Offset = "0x193D714", VA = "0x193D714")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x193D888", Offset = "0x193D888", VA = "0x193D888")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x193DACC", Offset = "0x193DACC", VA = "0x193DACC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x193DCC0", Offset = "0x193DCC0", VA = "0x193DCC0")]
	public ThirdPersonNetwork()
	{
	}
}
[Token(Token = "0x2000037")]
public class WorkerInGame : Photon.MonoBehaviour
{
	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerPrefab;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x240EB04", Offset = "0x240EB04", VA = "0x240EB04")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x240ECC4", Offset = "0x240ECC4", VA = "0x240ECC4")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x240EDD8", Offset = "0x240EDD8", VA = "0x240EDD8")]
	public void OnMasterClientSwitched(PhotonPlayer player)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x240EF18", Offset = "0x240EF18", VA = "0x240EF18")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x240EFE0", Offset = "0x240EFE0", VA = "0x240EFE0")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x240F0A8", Offset = "0x240F0A8", VA = "0x240F0A8")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x240F130", Offset = "0x240F130", VA = "0x240F130")]
	public void OnPhotonPlayerConnected(PhotonPlayer player)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x240F1B8", Offset = "0x240F1B8", VA = "0x240F1B8")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer player)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x240F240", Offset = "0x240F240", VA = "0x240F240")]
	public void OnFailedToConnectToPhoton()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x240F308", Offset = "0x240F308", VA = "0x240F308")]
	public WorkerInGame()
	{
	}
}
[Token(Token = "0x2000038")]
public class WorkerMenu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUISkin Skin;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 WidthAndHeight;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string roomName;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 scrollPos;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool connectFailed;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string SceneNameMenu;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string SceneNameGame;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string errorDialog;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private double timeToClearDialog;

	[Token(Token = "0x17000024")]
	public string ErrorDialog
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x240F310", Offset = "0x240F310", VA = "0x240F310")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x240F318", Offset = "0x240F318", VA = "0x240F318")]
		private set
		{
		}
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x240F360", Offset = "0x240F360", VA = "0x240F360")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x240F4A4", Offset = "0x240F4A4", VA = "0x240F4A4")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x2410BE4", Offset = "0x2410BE4", VA = "0x2410BE4")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x2410C50", Offset = "0x2410C50", VA = "0x2410C50")]
	public void OnPhotonCreateRoomFailed()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x2410CD4", Offset = "0x2410CD4", VA = "0x2410CD4")]
	public void OnPhotonJoinRoomFailed(object[] cause)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x2410D94", Offset = "0x2410D94", VA = "0x2410D94")]
	public void OnPhotonRandomJoinFailed()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x2410E18", Offset = "0x2410E18", VA = "0x2410E18")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x2410EE0", Offset = "0x2410EE0", VA = "0x2410EE0")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x2410F4C", Offset = "0x2410F4C", VA = "0x2410F4C")]
	public void OnFailedToConnectToPhoton(object parameters)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x24110F4", Offset = "0x24110F4", VA = "0x24110F4")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x2411188", Offset = "0x2411188", VA = "0x2411188")]
	public WorkerMenu()
	{
	}
}
[Token(Token = "0x2000039")]
public class AudioRpc : Photon.MonoBehaviour
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip marco;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip polo;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource m_Source;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1A33620", Offset = "0x1A33620", VA = "0x1A33620")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1A33678", Offset = "0x1A33678", VA = "0x1A33678")]
	[PunRPC]
	private void Marco()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1A3372C", Offset = "0x1A3372C", VA = "0x1A3372C")]
	[PunRPC]
	private void Polo()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1A337E0", Offset = "0x1A337E0", VA = "0x1A337E0")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1A337EC", Offset = "0x1A337EC", VA = "0x1A337EC")]
	public AudioRpc()
	{
	}
}
[Token(Token = "0x200003A")]
public class ClickDetector : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1578290", Offset = "0x1578290", VA = "0x1578290")]
	public void Update()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x15784E0", Offset = "0x15784E0", VA = "0x15784E0")]
	private GameObject RaycastObject(Vector2 screenPos)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x15785E8", Offset = "0x15785E8", VA = "0x15785E8")]
	public ClickDetector()
	{
	}
}
[Token(Token = "0x200003B")]
public class GameLogic : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int playerWhoIsIt;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PhotonView ScenePhotonView;

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1703B3C", Offset = "0x1703B3C", VA = "0x1703B3C")]
	public void Start()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1703BC4", Offset = "0x1703BC4", VA = "0x1703BC4")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1703D30", Offset = "0x1703D30", VA = "0x1703D30")]
	public void OnPhotonPlayerConnected(PhotonPlayer player)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1703E20", Offset = "0x1703E20", VA = "0x1703E20")]
	public static void TagPlayer(int playerID)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1703F98", Offset = "0x1703F98", VA = "0x1703F98")]
	[PunRPC]
	public void TaggedPlayer(int playerID)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1704074", Offset = "0x1704074", VA = "0x1704074")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer player)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x17041CC", Offset = "0x17041CC", VA = "0x17041CC")]
	public void OnMasterClientSwitched()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1704238", Offset = "0x1704238", VA = "0x1704238")]
	public GameLogic()
	{
	}
}
[Token(Token = "0x200003C")]
public class myThirdPersonController : ThirdPersonController
{
	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x24112B4", Offset = "0x24112B4", VA = "0x24112B4")]
	public myThirdPersonController()
	{
	}
}
[Token(Token = "0x200003D")]
public class NetworkCharacter : Photon.MonoBehaviour
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 correctPlayerPos;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion correctPlayerRot;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x13D93EC", Offset = "0x13D93EC", VA = "0x13D93EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x13D95E0", Offset = "0x13D95E0", VA = "0x13D95E0")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x13D97F4", Offset = "0x13D97F4", VA = "0x13D97F4")]
	public NetworkCharacter()
	{
	}
}
[Token(Token = "0x200003E")]
public class OnClickLoadSomething : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003F2")]
	public enum ResourceTypeOption : byte
	{
		[Token(Token = "0x4001BFF")]
		Scene,
		[Token(Token = "0x4001C00")]
		Web
	}

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ResourceTypeOption ResourceTypeToLoad;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ResourceToLoad;

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1BC6E28", Offset = "0x1BC6E28", VA = "0x1BC6E28")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x1BC6EC4", Offset = "0x1BC6EC4", VA = "0x1BC6EC4")]
	public OnClickLoadSomething()
	{
	}
}
[Token(Token = "0x200003F")]
public class RandomMatchmaker : PunBehaviour
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonView myPhotonView;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1907CC4", Offset = "0x1907CC4", VA = "0x1907CC4")]
	public void Start()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x1907D30", Offset = "0x1907D30", VA = "0x1907D30", Slot = "39")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1907DC4", Offset = "0x1907DC4", VA = "0x1907DC4", Slot = "50")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x1907E24", Offset = "0x1907E24", VA = "0x1907E24")]
	public void OnPhotonRandomJoinFailed()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1907E88", Offset = "0x1907E88", VA = "0x1907E88", Slot = "46")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1907FE8", Offset = "0x1907FE8", VA = "0x1907FE8")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x190842C", Offset = "0x190842C", VA = "0x190842C")]
	public RandomMatchmaker()
	{
	}
}
[Token(Token = "0x2000040")]
public class IdleRunJump : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Animator animator;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DirectionDampTime;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ApplyGravity;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SynchronizedMaxSpeed;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TurnSpeedModifier;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SynchronizedTurnSpeed;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float SynchronizedSpeedAcceleration;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected PhotonView m_PhotonView;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonTransformView m_TransformView;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_SpeedModifier;

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x170A160", Offset = "0x170A160", VA = "0x170A160")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x170A228", Offset = "0x170A228", VA = "0x170A228")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x170A5C8", Offset = "0x170A5C8", VA = "0x170A5C8")]
	public IdleRunJump()
	{
	}
}
[Token(Token = "0x2000041")]
public class PlayerDiamond : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform HeadTransform;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HeightOffset;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer m_DiamondRenderer;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_Rotation;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_Height;

	[Token(Token = "0x17000025")]
	private PhotonView PhotonView
	{
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x15995A0", Offset = "0x15995A0", VA = "0x15995A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	private Renderer DiamondRenderer
	{
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x1599654", Offset = "0x1599654", VA = "0x1599654")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x15996EC", Offset = "0x15996EC", VA = "0x15996EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1599794", Offset = "0x1599794", VA = "0x1599794")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x15997C0", Offset = "0x15997C0", VA = "0x15997C0")]
	private void UpdateDiamondPosition()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x159997C", Offset = "0x159997C", VA = "0x159997C")]
	private void UpdateDiamondRotation()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1599A50", Offset = "0x1599A50", VA = "0x1599A50")]
	private void UpdateDiamondVisibility()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1599B24", Offset = "0x1599B24", VA = "0x1599B24")]
	public PlayerDiamond()
	{
	}
}
[Token(Token = "0x2000042")]
internal static class CustomTypes
{
	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly byte[] memVector3;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly byte[] memVector2;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly byte[] memQuarternion;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly byte[] memPlayer;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x157CA1C", Offset = "0x157CA1C", VA = "0x157CA1C")]
	internal static void Register()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x157CCA8", Offset = "0x157CCA8", VA = "0x157CCA8")]
	private static short SerializeVector3(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x157CE94", Offset = "0x157CE94", VA = "0x157CE94")]
	private static object DeserializeVector3(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x157D074", Offset = "0x157D074", VA = "0x157D074")]
	private static short SerializeVector2(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x157D230", Offset = "0x157D230", VA = "0x157D230")]
	private static object DeserializeVector2(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x157D3E0", Offset = "0x157D3E0", VA = "0x157D3E0")]
	private static short SerializeQuaternion(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x157D5D8", Offset = "0x157D5D8", VA = "0x157D5D8")]
	private static object DeserializeQuaternion(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x157D7D0", Offset = "0x157D7D0", VA = "0x157D7D0")]
	private static short SerializePhotonPlayer(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x157D988", Offset = "0x157D988", VA = "0x157D988")]
	private static object DeserializePhotonPlayer(StreamBuffer inStream, short length)
	{
		return null;
	}
}
[Token(Token = "0x2000043")]
public enum PhotonNetworkingMessage
{
	[Token(Token = "0x4000199")]
	OnConnectedToPhoton,
	[Token(Token = "0x400019A")]
	OnLeftRoom,
	[Token(Token = "0x400019B")]
	OnMasterClientSwitched,
	[Token(Token = "0x400019C")]
	OnPhotonCreateRoomFailed,
	[Token(Token = "0x400019D")]
	OnPhotonJoinRoomFailed,
	[Token(Token = "0x400019E")]
	OnCreatedRoom,
	[Token(Token = "0x400019F")]
	OnJoinedLobby,
	[Token(Token = "0x40001A0")]
	OnLeftLobby,
	[Token(Token = "0x40001A1")]
	OnDisconnectedFromPhoton,
	[Token(Token = "0x40001A2")]
	OnConnectionFail,
	[Token(Token = "0x40001A3")]
	OnFailedToConnectToPhoton,
	[Token(Token = "0x40001A4")]
	OnReceivedRoomListUpdate,
	[Token(Token = "0x40001A5")]
	OnJoinedRoom,
	[Token(Token = "0x40001A6")]
	OnPhotonPlayerConnected,
	[Token(Token = "0x40001A7")]
	OnPhotonPlayerDisconnected,
	[Token(Token = "0x40001A8")]
	OnPhotonRandomJoinFailed,
	[Token(Token = "0x40001A9")]
	OnConnectedToMaster,
	[Token(Token = "0x40001AA")]
	OnPhotonSerializeView,
	[Token(Token = "0x40001AB")]
	OnPhotonInstantiate,
	[Token(Token = "0x40001AC")]
	OnPhotonMaxCccuReached,
	[Token(Token = "0x40001AD")]
	OnPhotonCustomRoomPropertiesChanged,
	[Token(Token = "0x40001AE")]
	OnPhotonPlayerPropertiesChanged,
	[Token(Token = "0x40001AF")]
	OnUpdatedFriendList,
	[Token(Token = "0x40001B0")]
	OnCustomAuthenticationFailed,
	[Token(Token = "0x40001B1")]
	OnCustomAuthenticationResponse,
	[Token(Token = "0x40001B2")]
	OnWebRpcResponse,
	[Token(Token = "0x40001B3")]
	OnOwnershipRequest,
	[Token(Token = "0x40001B4")]
	OnLobbyStatisticsUpdate,
	[Token(Token = "0x40001B5")]
	OnPhotonPlayerActivityChanged,
	[Token(Token = "0x40001B6")]
	OnOwnershipTransfered
}
[Token(Token = "0x2000044")]
public enum PhotonLogLevel
{
	[Token(Token = "0x40001B8")]
	ErrorsOnly,
	[Token(Token = "0x40001B9")]
	Informational,
	[Token(Token = "0x40001BA")]
	Full
}
[Token(Token = "0x2000045")]
public enum PhotonTargets
{
	[Token(Token = "0x40001BC")]
	All,
	[Token(Token = "0x40001BD")]
	Others,
	[Token(Token = "0x40001BE")]
	MasterClient,
	[Token(Token = "0x40001BF")]
	AllBuffered,
	[Token(Token = "0x40001C0")]
	OthersBuffered,
	[Token(Token = "0x40001C1")]
	AllViaServer,
	[Token(Token = "0x40001C2")]
	AllBufferedViaServer
}
[Token(Token = "0x2000046")]
public enum CloudRegionCode
{
	[Token(Token = "0x40001C4")]
	eu = 0,
	[Token(Token = "0x40001C5")]
	us = 1,
	[Token(Token = "0x40001C6")]
	asia = 2,
	[Token(Token = "0x40001C7")]
	jp = 3,
	[Token(Token = "0x40001C8")]
	au = 5,
	[Token(Token = "0x40001C9")]
	usw = 6,
	[Token(Token = "0x40001CA")]
	sa = 7,
	[Token(Token = "0x40001CB")]
	cae = 8,
	[Token(Token = "0x40001CC")]
	kr = 9,
	[Token(Token = "0x40001CD")]
	@in = 10,
	[Token(Token = "0x40001CE")]
	ru = 11,
	[Token(Token = "0x40001CF")]
	rue = 12,
	[Token(Token = "0x40001D0")]
	none = 4
}
[Token(Token = "0x2000047")]
[Flags]
public enum CloudRegionFlag
{
	[Token(Token = "0x40001D2")]
	eu = 1,
	[Token(Token = "0x40001D3")]
	us = 2,
	[Token(Token = "0x40001D4")]
	asia = 4,
	[Token(Token = "0x40001D5")]
	jp = 8,
	[Token(Token = "0x40001D6")]
	au = 0x10,
	[Token(Token = "0x40001D7")]
	usw = 0x20,
	[Token(Token = "0x40001D8")]
	sa = 0x40,
	[Token(Token = "0x40001D9")]
	cae = 0x80,
	[Token(Token = "0x40001DA")]
	kr = 0x100,
	[Token(Token = "0x40001DB")]
	@in = 0x200,
	[Token(Token = "0x40001DC")]
	ru = 0x400,
	[Token(Token = "0x40001DD")]
	rue = 0x800
}
[Token(Token = "0x2000048")]
public enum ConnectionState
{
	[Token(Token = "0x40001DF")]
	Disconnected,
	[Token(Token = "0x40001E0")]
	Connecting,
	[Token(Token = "0x40001E1")]
	Connected,
	[Token(Token = "0x40001E2")]
	Disconnecting,
	[Token(Token = "0x40001E3")]
	InitializingApplication
}
[Token(Token = "0x2000049")]
public enum EncryptionMode
{
	[Token(Token = "0x40001E5")]
	PayloadEncryption = 0,
	[Token(Token = "0x40001E6")]
	DatagramEncryption = 10
}
[Token(Token = "0x200004A")]
public static class EncryptionDataParameters
{
	[Token(Token = "0x40001E7")]
	public const byte Mode = 0;

	[Token(Token = "0x40001E8")]
	public const byte Secret1 = 1;

	[Token(Token = "0x40001E9")]
	public const byte Secret2 = 2;
}
[Token(Token = "0x200004B")]
public static class Extensions
{
	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<MethodInfo, ParameterInfo[]> ParametersOfMethods;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x16FFC64", Offset = "0x16FFC64", VA = "0x16FFC64")]
	public static ParameterInfo[] GetCachedParemeters(this MethodInfo mo)
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x16FFD64", Offset = "0x16FFD64", VA = "0x16FFD64")]
	public static PhotonView[] GetPhotonViewsInChildren(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x16FFDC0", Offset = "0x16FFDC0", VA = "0x16FFDC0")]
	public static PhotonView GetPhotonView(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x16FFE18", Offset = "0x16FFE18", VA = "0x16FFE18")]
	public static bool AlmostEquals(this Vector3 target, Vector3 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x16FFEFC", Offset = "0x16FFEFC", VA = "0x16FFEFC")]
	public static bool AlmostEquals(this Vector2 target, Vector2 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x16FFFC0", Offset = "0x16FFFC0", VA = "0x16FFFC0")]
	public static bool AlmostEquals(this Quaternion target, Quaternion second, float maxAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1700098", Offset = "0x1700098", VA = "0x1700098")]
	public static bool AlmostEquals(this float target, float second, float floatDiff)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x170011C", Offset = "0x170011C", VA = "0x170011C")]
	public static void Merge(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x17004E8", Offset = "0x17004E8", VA = "0x17004E8")]
	public static void MergeStringKeys(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x17008D0", Offset = "0x17008D0", VA = "0x17008D0")]
	public static string ToStringFull(this IDictionary origin)
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x170093C", Offset = "0x170093C", VA = "0x170093C")]
	public static string ToStringFull(this object[] data)
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1700A90", Offset = "0x1700A90", VA = "0x1700A90")]
	public static ExitGames.Client.Photon.Hashtable StripToStringKeys(this IDictionary original)
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1700E28", Offset = "0x1700E28", VA = "0x1700E28")]
	public static void StripKeysWithNullValues(this IDictionary original)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x17012F4", Offset = "0x17012F4", VA = "0x17012F4")]
	public static bool Contains(this int[] target, int nr)
	{
		return default(bool);
	}
}
[Token(Token = "0x200004C")]
public static class GameObjectExtensions
{
	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x16F5AC8", Offset = "0x16F5AC8", VA = "0x16F5AC8")]
	public static bool GetActive(this GameObject target)
	{
		return default(bool);
	}
}
[Token(Token = "0x200004D")]
public class FriendInfo
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80EC4", Offset = "0xD80EC4")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80ED4", Offset = "0xD80ED4")]
	private bool <IsOnline>k__BackingField;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80EE4", Offset = "0xD80EE4")]
	private string <Room>k__BackingField;

	[Token(Token = "0x17000027")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD97F8C", Offset = "0xD97F8C")]
	public string Name
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x17013F4", Offset = "0x17013F4", VA = "0x17013F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public string UserId
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x17013FC", Offset = "0x17013FC", VA = "0x17013FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90D18", Offset = "0xD90D18")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x1701404", Offset = "0x1701404", VA = "0x1701404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90D28", Offset = "0xD90D28")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public bool IsOnline
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x170140C", Offset = "0x170140C", VA = "0x170140C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90D38", Offset = "0xD90D38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x1701414", Offset = "0x1701414", VA = "0x1701414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90D48", Offset = "0xD90D48")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public string Room
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x1701420", Offset = "0x1701420", VA = "0x1701420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90D58", Offset = "0xD90D58")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x1701428", Offset = "0x1701428", VA = "0x1701428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90D68", Offset = "0xD90D68")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public bool IsInRoom
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x1701430", Offset = "0x1701430", VA = "0x1701430")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x170145C", Offset = "0x170145C", VA = "0x170145C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x17014FC", Offset = "0x17014FC", VA = "0x17014FC")]
	public FriendInfo()
	{
	}
}
[Token(Token = "0x200004E")]
internal class LoadBalancingPeer : PhotonPeer
{
	[Token(Token = "0x20003F3")]
	private enum RoomOptionBit
	{
		[Token(Token = "0x4001C02")]
		CheckUserOnJoin = 1,
		[Token(Token = "0x4001C03")]
		DeleteCacheOnLeave = 2,
		[Token(Token = "0x4001C04")]
		SuppressRoomEvents = 4,
		[Token(Token = "0x4001C05")]
		PublishUserId = 8,
		[Token(Token = "0x4001C06")]
		DeleteNullProps = 0x10,
		[Token(Token = "0x4001C07")]
		BroadcastPropsChangeToAll = 0x20
	}

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly Dictionary<byte, object> opParameters;

	[Token(Token = "0x1700002C")]
	internal bool IsProtocolSecure
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x18D8A38", Offset = "0x18D8A38", VA = "0x18D8A38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x18D8A5C", Offset = "0x18D8A5C", VA = "0x18D8A5C")]
	public LoadBalancingPeer(ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x18D8AFC", Offset = "0x18D8AFC", VA = "0x18D8AFC")]
	public LoadBalancingPeer(IPhotonPeerListener listener, ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x18D8B7C", Offset = "0x18D8B7C", VA = "0x18D8B7C", Slot = "16")]
	public virtual bool OpGetRegions(string appId)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x18D8C54", Offset = "0x18D8C54", VA = "0x18D8C54", Slot = "17")]
	public virtual bool OpJoinLobby([Optional] TypedLobby lobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x18D8E1C", Offset = "0x18D8E1C", VA = "0x18D8E1C", Slot = "18")]
	public virtual bool OpLeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x18D8F3C", Offset = "0x18D8F3C", VA = "0x18D8F3C")]
	private void RoomOptionsToOpParameters(Dictionary<byte, object> op, RoomOptions roomOptions)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x18D9330", Offset = "0x18D9330", VA = "0x18D9330", Slot = "19")]
	public virtual bool OpCreateRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x18D95E0", Offset = "0x18D95E0", VA = "0x18D95E0", Slot = "20")]
	public virtual bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x18D9914", Offset = "0x18D9914", VA = "0x18D9914", Slot = "21")]
	public virtual bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x18D9C6C", Offset = "0x18D9C6C", VA = "0x18D9C6C", Slot = "22")]
	public virtual bool OpLeaveRoom(bool becomeInactive)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x18D9D74", Offset = "0x18D9D74", VA = "0x18D9D74", Slot = "23")]
	public virtual bool OpGetGameList(TypedLobby lobby, string queryData)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x18DA0B4", Offset = "0x18DA0B4", VA = "0x18DA0B4", Slot = "24")]
	public virtual bool OpFindFriends(string[] friendsToFind, [Optional] FindFriendsOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x18DA1F8", Offset = "0x18DA1F8", VA = "0x18DA1F8")]
	public bool OpSetCustomPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x18DA288", Offset = "0x18DA288", VA = "0x18DA288")]
	protected internal bool OpSetPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x18DA574", Offset = "0x18DA574", VA = "0x18DA574")]
	protected internal void OpSetPropertyOfRoom(byte propCode, object value)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x18DA840", Offset = "0x18DA840", VA = "0x18DA840")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD90D78", Offset = "0xD90D78")]
	public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, bool broadcast, byte channelId)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x18DA8C8", Offset = "0x18DA8C8", VA = "0x18DA8C8")]
	public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x18DA630", Offset = "0x18DA630", VA = "0x18DA630")]
	protected internal bool OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x18DA970", Offset = "0x18DA970", VA = "0x18DA970", Slot = "25")]
	public virtual bool OpAuthenticate(string appId, string appVersion, AuthenticationValues authValues, string regionCode, bool getLobbyStatistics)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x18DADC0", Offset = "0x18DADC0", VA = "0x18DADC0", Slot = "26")]
	public virtual bool OpAuthenticateOnce(string appId, string appVersion, AuthenticationValues authValues, string regionCode, EncryptionMode encryptionMode, ConnectionProtocol expectedProtocol)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x18DB1B0", Offset = "0x18DB1B0", VA = "0x18DB1B0", Slot = "27")]
	public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x18DB34C", Offset = "0x18DB34C", VA = "0x18DB34C", Slot = "28")]
	public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x18DB5C0", Offset = "0x18DB5C0", VA = "0x18DB5C0", Slot = "29")]
	public virtual bool OpSettings(bool receiveLobbyStats)
	{
		return default(bool);
	}
}
[Token(Token = "0x200004F")]
internal class OpJoinRandomRoomParams
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ExitGames.Client.Photon.Hashtable ExpectedCustomRoomProperties;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte ExpectedMaxPlayers;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public MatchmakingMode MatchingType;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby TypedLobby;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SqlLobbyFilter;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] ExpectedUsers;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1BC74C8", Offset = "0x1BC74C8", VA = "0x1BC74C8")]
	public OpJoinRandomRoomParams()
	{
	}
}
[Token(Token = "0x2000050")]
internal class EnterRoomParams
{
	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string RoomName;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomOptions RoomOptions;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby Lobby;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExitGames.Client.Photon.Hashtable PlayerProperties;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool OnGameServer;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool CreateIfNotExists;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool RejoinOnly;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] ExpectedUsers;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x18A244C", Offset = "0x18A244C", VA = "0x18A244C")]
	public EnterRoomParams()
	{
	}
}
[Token(Token = "0x2000051")]
public class ErrorCode
{
	[Token(Token = "0x40001FD")]
	public const int Ok = 0;

	[Token(Token = "0x40001FE")]
	public const int OperationNotAllowedInCurrentState = -3;

	[Token(Token = "0x40001FF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD80EF4", Offset = "0xD80EF4")]
	public const int InvalidOperationCode = -2;

	[Token(Token = "0x4000200")]
	public const int InvalidOperation = -2;

	[Token(Token = "0x4000201")]
	public const int InternalServerError = -1;

	[Token(Token = "0x4000202")]
	public const int InvalidAuthentication = 32767;

	[Token(Token = "0x4000203")]
	public const int GameIdAlreadyExists = 32766;

	[Token(Token = "0x4000204")]
	public const int GameFull = 32765;

	[Token(Token = "0x4000205")]
	public const int GameClosed = 32764;

	[Token(Token = "0x4000206")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD80F2C", Offset = "0xD80F2C")]
	public const int AlreadyMatched = 32763;

	[Token(Token = "0x4000207")]
	public const int ServerFull = 32762;

	[Token(Token = "0x4000208")]
	public const int UserBlocked = 32761;

	[Token(Token = "0x4000209")]
	public const int NoRandomMatchFound = 32760;

	[Token(Token = "0x400020A")]
	public const int GameDoesNotExist = 32758;

	[Token(Token = "0x400020B")]
	public const int MaxCcuReached = 32757;

	[Token(Token = "0x400020C")]
	public const int InvalidRegion = 32756;

	[Token(Token = "0x400020D")]
	public const int CustomAuthenticationFailed = 32755;

	[Token(Token = "0x400020E")]
	public const int AuthenticationTicketExpired = 32753;

	[Token(Token = "0x400020F")]
	public const int PluginReportedError = 32752;

	[Token(Token = "0x4000210")]
	public const int PluginMismatch = 32751;

	[Token(Token = "0x4000211")]
	public const int JoinFailedPeerAlreadyJoined = 32750;

	[Token(Token = "0x4000212")]
	public const int JoinFailedFoundInactiveJoiner = 32749;

	[Token(Token = "0x4000213")]
	public const int JoinFailedWithRejoinerNotFound = 32748;

	[Token(Token = "0x4000214")]
	public const int JoinFailedFoundExcludedUserId = 32747;

	[Token(Token = "0x4000215")]
	public const int JoinFailedFoundActiveJoiner = 32746;

	[Token(Token = "0x4000216")]
	public const int HttpLimitReached = 32745;

	[Token(Token = "0x4000217")]
	public const int ExternalHttpCallFailed = 32744;

	[Token(Token = "0x4000218")]
	public const int SlotError = 32742;

	[Token(Token = "0x4000219")]
	public const int InvalidEncryptionParameters = 32741;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x18A245C", Offset = "0x18A245C", VA = "0x18A245C")]
	public ErrorCode()
	{
	}
}
[Token(Token = "0x2000052")]
public class ActorProperties
{
	[Token(Token = "0x400021A")]
	public const byte PlayerName = byte.MaxValue;

	[Token(Token = "0x400021B")]
	public const byte IsInactive = 254;

	[Token(Token = "0x400021C")]
	public const byte UserId = 253;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1A2AF24", Offset = "0x1A2AF24", VA = "0x1A2AF24")]
	public ActorProperties()
	{
	}
}
[Token(Token = "0x2000053")]
public class GamePropertyKey
{
	[Token(Token = "0x400021D")]
	public const byte MaxPlayers = byte.MaxValue;

	[Token(Token = "0x400021E")]
	public const byte IsVisible = 254;

	[Token(Token = "0x400021F")]
	public const byte IsOpen = 253;

	[Token(Token = "0x4000220")]
	public const byte PlayerCount = 252;

	[Token(Token = "0x4000221")]
	public const byte Removed = 251;

	[Token(Token = "0x4000222")]
	public const byte PropsListedInLobby = 250;

	[Token(Token = "0x4000223")]
	public const byte CleanupCacheOnLeave = 249;

	[Token(Token = "0x4000224")]
	public const byte MasterClientId = 248;

	[Token(Token = "0x4000225")]
	public const byte ExpectedUsers = 247;

	[Token(Token = "0x4000226")]
	public const byte PlayerTtl = 246;

	[Token(Token = "0x4000227")]
	public const byte EmptyRoomTtl = 245;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1704244", Offset = "0x1704244", VA = "0x1704244")]
	public GamePropertyKey()
	{
	}
}
[Token(Token = "0x2000054")]
public class EventCode
{
	[Token(Token = "0x4000228")]
	public const byte GameList = 230;

	[Token(Token = "0x4000229")]
	public const byte GameListUpdate = 229;

	[Token(Token = "0x400022A")]
	public const byte QueueState = 228;

	[Token(Token = "0x400022B")]
	public const byte Match = 227;

	[Token(Token = "0x400022C")]
	public const byte AppStats = 226;

	[Token(Token = "0x400022D")]
	public const byte LobbyStats = 224;

	[Token(Token = "0x400022E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD80F64", Offset = "0xD80F64")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x400022F")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x4000230")]
	public const byte Leave = 254;

	[Token(Token = "0x4000231")]
	public const byte PropertiesChanged = 253;

	[Token(Token = "0x4000232")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD80F9C", Offset = "0xD80F9C")]
	public const byte SetProperties = 253;

	[Token(Token = "0x4000233")]
	public const byte ErrorInfo = 251;

	[Token(Token = "0x4000234")]
	public const byte CacheSliceChanged = 250;

	[Token(Token = "0x4000235")]
	public const byte AuthEvent = 223;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x18A2464", Offset = "0x18A2464", VA = "0x18A2464")]
	public EventCode()
	{
	}
}
[Token(Token = "0x2000055")]
public class ParameterCode
{
	[Token(Token = "0x4000236")]
	public const byte SuppressRoomEvents = 237;

	[Token(Token = "0x4000237")]
	public const byte EmptyRoomTTL = 236;

	[Token(Token = "0x4000238")]
	public const byte PlayerTTL = 235;

	[Token(Token = "0x4000239")]
	public const byte EventForward = 234;

	[Token(Token = "0x400023A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD80FD4", Offset = "0xD80FD4")]
	public const byte IsComingBack = 233;

	[Token(Token = "0x400023B")]
	public const byte IsInactive = 233;

	[Token(Token = "0x400023C")]
	public const byte CheckUserOnJoin = 232;

	[Token(Token = "0x400023D")]
	public const byte ExpectedValues = 231;

	[Token(Token = "0x400023E")]
	public const byte Address = 230;

	[Token(Token = "0x400023F")]
	public const byte PeerCount = 229;

	[Token(Token = "0x4000240")]
	public const byte GameCount = 228;

	[Token(Token = "0x4000241")]
	public const byte MasterPeerCount = 227;

	[Token(Token = "0x4000242")]
	public const byte UserId = 225;

	[Token(Token = "0x4000243")]
	public const byte ApplicationId = 224;

	[Token(Token = "0x4000244")]
	public const byte Position = 223;

	[Token(Token = "0x4000245")]
	public const byte MatchMakingType = 223;

	[Token(Token = "0x4000246")]
	public const byte GameList = 222;

	[Token(Token = "0x4000247")]
	public const byte Secret = 221;

	[Token(Token = "0x4000248")]
	public const byte AppVersion = 220;

	[Token(Token = "0x4000249")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8100C", Offset = "0xD8100C")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x400024A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD81044", Offset = "0xD81044")]
	public const byte AzureLocalNodeId = 209;

	[Token(Token = "0x400024B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8107C", Offset = "0xD8107C")]
	public const byte AzureMasterNodeId = 208;

	[Token(Token = "0x400024C")]
	public const byte RoomName = byte.MaxValue;

	[Token(Token = "0x400024D")]
	public const byte Broadcast = 250;

	[Token(Token = "0x400024E")]
	public const byte ActorList = 252;

	[Token(Token = "0x400024F")]
	public const byte ActorNr = 254;

	[Token(Token = "0x4000250")]
	public const byte PlayerProperties = 249;

	[Token(Token = "0x4000251")]
	public const byte CustomEventContent = 245;

	[Token(Token = "0x4000252")]
	public const byte Data = 245;

	[Token(Token = "0x4000253")]
	public const byte Code = 244;

	[Token(Token = "0x4000254")]
	public const byte GameProperties = 248;

	[Token(Token = "0x4000255")]
	public const byte Properties = 251;

	[Token(Token = "0x4000256")]
	public const byte TargetActorNr = 253;

	[Token(Token = "0x4000257")]
	public const byte ReceiverGroup = 246;

	[Token(Token = "0x4000258")]
	public const byte Cache = 247;

	[Token(Token = "0x4000259")]
	public const byte CleanupCacheOnLeave = 241;

	[Token(Token = "0x400025A")]
	public const byte Group = 240;

	[Token(Token = "0x400025B")]
	public const byte Remove = 239;

	[Token(Token = "0x400025C")]
	public const byte PublishUserId = 239;

	[Token(Token = "0x400025D")]
	public const byte Add = 238;

	[Token(Token = "0x400025E")]
	public const byte Info = 218;

	[Token(Token = "0x400025F")]
	public const byte ClientAuthenticationType = 217;

	[Token(Token = "0x4000260")]
	public const byte ClientAuthenticationParams = 216;

	[Token(Token = "0x4000261")]
	public const byte JoinMode = 215;

	[Token(Token = "0x4000262")]
	public const byte ClientAuthenticationData = 214;

	[Token(Token = "0x4000263")]
	public const byte MasterClientId = 203;

	[Token(Token = "0x4000264")]
	public const byte FindFriendsRequestList = 1;

	[Token(Token = "0x4000265")]
	public const byte FindFriendsOptions = 2;

	[Token(Token = "0x4000266")]
	public const byte FindFriendsResponseOnlineList = 1;

	[Token(Token = "0x4000267")]
	public const byte FindFriendsResponseRoomIdList = 2;

	[Token(Token = "0x4000268")]
	public const byte LobbyName = 213;

	[Token(Token = "0x4000269")]
	public const byte LobbyType = 212;

	[Token(Token = "0x400026A")]
	public const byte LobbyStats = 211;

	[Token(Token = "0x400026B")]
	public const byte Region = 210;

	[Token(Token = "0x400026C")]
	public const byte UriPath = 209;

	[Token(Token = "0x400026D")]
	public const byte WebRpcParameters = 208;

	[Token(Token = "0x400026E")]
	public const byte WebRpcReturnCode = 207;

	[Token(Token = "0x400026F")]
	public const byte WebRpcReturnMessage = 206;

	[Token(Token = "0x4000270")]
	public const byte CacheSliceIndex = 205;

	[Token(Token = "0x4000271")]
	public const byte Plugins = 204;

	[Token(Token = "0x4000272")]
	public const byte NickName = 202;

	[Token(Token = "0x4000273")]
	public const byte PluginName = 201;

	[Token(Token = "0x4000274")]
	public const byte PluginVersion = 200;

	[Token(Token = "0x4000275")]
	public const byte Cluster = 196;

	[Token(Token = "0x4000276")]
	public const byte ExpectedProtocol = 195;

	[Token(Token = "0x4000277")]
	public const byte CustomInitData = 194;

	[Token(Token = "0x4000278")]
	public const byte EncryptionMode = 193;

	[Token(Token = "0x4000279")]
	public const byte EncryptionData = 192;

	[Token(Token = "0x400027A")]
	public const byte RoomOptionFlags = 191;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1BCB76C", Offset = "0x1BCB76C", VA = "0x1BCB76C")]
	public ParameterCode()
	{
	}
}
[Token(Token = "0x2000056")]
public class OperationCode
{
	[Token(Token = "0x400027B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD810B4", Offset = "0xD810B4")]
	public const byte ExchangeKeysForEncryption = 250;

	[Token(Token = "0x400027C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD810EC", Offset = "0xD810EC")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x400027D")]
	public const byte AuthenticateOnce = 231;

	[Token(Token = "0x400027E")]
	public const byte Authenticate = 230;

	[Token(Token = "0x400027F")]
	public const byte JoinLobby = 229;

	[Token(Token = "0x4000280")]
	public const byte LeaveLobby = 228;

	[Token(Token = "0x4000281")]
	public const byte CreateGame = 227;

	[Token(Token = "0x4000282")]
	public const byte JoinGame = 226;

	[Token(Token = "0x4000283")]
	public const byte JoinRandomGame = 225;

	[Token(Token = "0x4000284")]
	public const byte Leave = 254;

	[Token(Token = "0x4000285")]
	public const byte RaiseEvent = 253;

	[Token(Token = "0x4000286")]
	public const byte SetProperties = 252;

	[Token(Token = "0x4000287")]
	public const byte GetProperties = 251;

	[Token(Token = "0x4000288")]
	public const byte ChangeGroups = 248;

	[Token(Token = "0x4000289")]
	public const byte FindFriends = 222;

	[Token(Token = "0x400028A")]
	public const byte GetLobbyStats = 221;

	[Token(Token = "0x400028B")]
	public const byte GetRegions = 220;

	[Token(Token = "0x400028C")]
	public const byte WebRpc = 219;

	[Token(Token = "0x400028D")]
	public const byte ServerSettings = 218;

	[Token(Token = "0x400028E")]
	public const byte GetGameList = 217;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1BC74D0", Offset = "0x1BC74D0", VA = "0x1BC74D0")]
	public OperationCode()
	{
	}
}
[Token(Token = "0x2000057")]
public enum JoinMode : byte
{
	[Token(Token = "0x4000290")]
	Default,
	[Token(Token = "0x4000291")]
	CreateIfNotExists,
	[Token(Token = "0x4000292")]
	JoinOrRejoin,
	[Token(Token = "0x4000293")]
	RejoinOnly
}
[Token(Token = "0x2000058")]
public enum MatchmakingMode : byte
{
	[Token(Token = "0x4000295")]
	FillRoom,
	[Token(Token = "0x4000296")]
	SerialMatching,
	[Token(Token = "0x4000297")]
	RandomMatching
}
[Token(Token = "0x2000059")]
public enum ReceiverGroup : byte
{
	[Token(Token = "0x4000299")]
	Others,
	[Token(Token = "0x400029A")]
	All,
	[Token(Token = "0x400029B")]
	MasterClient
}
[Token(Token = "0x200005A")]
public enum EventCaching : byte
{
	[Token(Token = "0x400029D")]
	DoNotCache = 0,
	[Token(Token = "0x400029E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD810FC", Offset = "0xD810FC")]
	MergeCache = 1,
	[Token(Token = "0x400029F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8110C", Offset = "0xD8110C")]
	ReplaceCache = 2,
	[Token(Token = "0x40002A0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8111C", Offset = "0xD8111C")]
	RemoveCache = 3,
	[Token(Token = "0x40002A1")]
	AddToRoomCache = 4,
	[Token(Token = "0x40002A2")]
	AddToRoomCacheGlobal = 5,
	[Token(Token = "0x40002A3")]
	RemoveFromRoomCache = 6,
	[Token(Token = "0x40002A4")]
	RemoveFromRoomCacheForActorsLeft = 7,
	[Token(Token = "0x40002A5")]
	SliceIncreaseIndex = 10,
	[Token(Token = "0x40002A6")]
	SliceSetIndex = 11,
	[Token(Token = "0x40002A7")]
	SlicePurgeIndex = 12,
	[Token(Token = "0x40002A8")]
	SlicePurgeUpToIndex = 13
}
[Token(Token = "0x200005B")]
[Flags]
public enum PropertyTypeFlag : byte
{
	[Token(Token = "0x40002AA")]
	None = 0,
	[Token(Token = "0x40002AB")]
	Game = 1,
	[Token(Token = "0x40002AC")]
	Actor = 2,
	[Token(Token = "0x40002AD")]
	GameAndActor = 3
}
[Token(Token = "0x200005C")]
public class RoomOptions
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isVisibleField;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isOpenField;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public byte MaxPlayers;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int PlayerTtl;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int EmptyRoomTtl;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool cleanupCacheOnLeaveField;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExitGames.Client.Photon.Hashtable CustomRoomProperties;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] CustomRoomPropertiesForLobby;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] Plugins;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool suppressRoomEventsField;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool publishUserIdField;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool deleteNullPropertiesField;

	[Token(Token = "0x1700002D")]
	public bool IsVisible
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x190BBD0", Offset = "0x190BBD0", VA = "0x190BBD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x190BBD8", Offset = "0x190BBD8", VA = "0x190BBD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public bool IsOpen
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x190BBE4", Offset = "0x190BBE4", VA = "0x190BBE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020D")]
		[Address(RVA = "0x190BBEC", Offset = "0x190BBEC", VA = "0x190BBEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public bool CleanupCacheOnLeave
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x190BBF8", Offset = "0x190BBF8", VA = "0x190BBF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x190BC00", Offset = "0x190BC00", VA = "0x190BC00")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool SuppressRoomEvents
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x190BC0C", Offset = "0x190BC0C", VA = "0x190BC0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000031")]
	public bool PublishUserId
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x190BC14", Offset = "0x190BC14", VA = "0x190BC14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000212")]
		[Address(RVA = "0x190BC1C", Offset = "0x190BC1C", VA = "0x190BC1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public bool DeleteNullProperties
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x190BC28", Offset = "0x190BC28", VA = "0x190BC28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000214")]
		[Address(RVA = "0x190BC30", Offset = "0x190BC30", VA = "0x190BC30")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD97FC4", Offset = "0xD97FC4")]
	public bool isVisible
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x190BC3C", Offset = "0x190BC3C", VA = "0x190BC3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x190BC44", Offset = "0x190BC44", VA = "0x190BC44")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD97FFC", Offset = "0xD97FFC")]
	public bool isOpen
	{
		[Token(Token = "0x6000217")]
		[Address(RVA = "0x190BC50", Offset = "0x190BC50", VA = "0x190BC50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000218")]
		[Address(RVA = "0x190BC58", Offset = "0x190BC58", VA = "0x190BC58")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98034", Offset = "0xD98034")]
	public byte maxPlayers
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0x190BC64", Offset = "0x190BC64", VA = "0x190BC64")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x190BC6C", Offset = "0x190BC6C", VA = "0x190BC6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9806C", Offset = "0xD9806C")]
	public bool cleanupCacheOnLeave
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x190BC74", Offset = "0x190BC74", VA = "0x190BC74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x190BC7C", Offset = "0x190BC7C", VA = "0x190BC7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD980A4", Offset = "0xD980A4")]
	public ExitGames.Client.Photon.Hashtable customRoomProperties
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x190BC88", Offset = "0x190BC88", VA = "0x190BC88")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x190BC90", Offset = "0x190BC90", VA = "0x190BC90")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD980DC", Offset = "0xD980DC")]
	public string[] customRoomPropertiesForLobby
	{
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x190BC98", Offset = "0x190BC98", VA = "0x190BC98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x190BCA0", Offset = "0x190BCA0", VA = "0x190BCA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98114", Offset = "0xD98114")]
	public string[] plugins
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x190BCA8", Offset = "0x190BCA8", VA = "0x190BCA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x190BCB0", Offset = "0x190BCB0", VA = "0x190BCB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9814C", Offset = "0xD9814C")]
	public bool suppressRoomEvents
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x190BCB8", Offset = "0x190BCB8", VA = "0x190BCB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98184", Offset = "0xD98184")]
	public bool publishUserId
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x190BCC0", Offset = "0x190BCC0", VA = "0x190BCC0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x190BCC8", Offset = "0x190BCC8", VA = "0x190BCC8")]
		set
		{
		}
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x190A40C", Offset = "0x190A40C", VA = "0x190A40C")]
	public RoomOptions()
	{
	}
}
[Token(Token = "0x200005D")]
public class RaiseEventOptions
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly RaiseEventOptions Default;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EventCaching CachingOption;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public byte InterestGroup;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] TargetActors;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReceiverGroup Receivers;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte SequenceChannel;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool ForwardToWebhook;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool Encrypt;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1907B64", Offset = "0x1907B64", VA = "0x1907B64")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1907C58", Offset = "0x1907C58", VA = "0x1907C58")]
	public RaiseEventOptions()
	{
	}
}
[Token(Token = "0x200005E")]
public enum LobbyType : byte
{
	[Token(Token = "0x40002C3")]
	Default = 0,
	[Token(Token = "0x40002C4")]
	SqlLobby = 2,
	[Token(Token = "0x40002C5")]
	AsyncRandomLobby = 3
}
[Token(Token = "0x200005F")]
public class TypedLobby
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LobbyType Type;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly TypedLobby Default;

	[Token(Token = "0x1700003C")]
	public bool IsDefault
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x193EFA8", Offset = "0x193EFA8", VA = "0x193EFA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x193EFC4", Offset = "0x193EFC4", VA = "0x193EFC4")]
	public TypedLobby()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x193F02C", Offset = "0x193F02C", VA = "0x193F02C")]
	public TypedLobby(string name, LobbyType type)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x193F068", Offset = "0x193F068", VA = "0x193F068", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000060")]
public class TypedLobbyInfo : TypedLobby
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PlayerCount;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RoomCount;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x193F150", Offset = "0x193F150", VA = "0x193F150", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x193F2E8", Offset = "0x193F2E8", VA = "0x193F2E8")]
	public TypedLobbyInfo()
	{
	}
}
[Token(Token = "0x2000061")]
public enum AuthModeOption
{
	[Token(Token = "0x40002CC")]
	Auth,
	[Token(Token = "0x40002CD")]
	AuthOnce,
	[Token(Token = "0x40002CE")]
	AuthOnceWss
}
[Token(Token = "0x2000062")]
public enum CustomAuthenticationType : byte
{
	[Token(Token = "0x40002D0")]
	Custom = 0,
	[Token(Token = "0x40002D1")]
	Steam = 1,
	[Token(Token = "0x40002D2")]
	Facebook = 2,
	[Token(Token = "0x40002D3")]
	Oculus = 3,
	[Token(Token = "0x40002D4")]
	PlayStation = 4,
	[Token(Token = "0x40002D5")]
	Xbox = 5,
	[Token(Token = "0x40002D6")]
	Viveport = 10,
	[Token(Token = "0x40002D7")]
	NintendoSwitch = 11,
	[Token(Token = "0x40002D8")]
	None = byte.MaxValue
}
[Token(Token = "0x2000063")]
public class AuthenticationValues
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomAuthenticationType authType;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8112C", Offset = "0xD8112C")]
	private string <AuthGetParameters>k__BackingField;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8113C", Offset = "0xD8113C")]
	private object <AuthPostData>k__BackingField;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8114C", Offset = "0xD8114C")]
	private string <Token>k__BackingField;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8115C", Offset = "0xD8115C")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x1700003D")]
	public CustomAuthenticationType AuthType
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x1A344F0", Offset = "0x1A344F0", VA = "0x1A344F0")]
		get
		{
			return default(CustomAuthenticationType);
		}
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x1A344F8", Offset = "0x1A344F8", VA = "0x1A344F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public string AuthGetParameters
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x1A34500", Offset = "0x1A34500", VA = "0x1A34500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90DB0", Offset = "0xD90DB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x1A34508", Offset = "0x1A34508", VA = "0x1A34508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90DC0", Offset = "0xD90DC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public object AuthPostData
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x1A34510", Offset = "0x1A34510", VA = "0x1A34510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90DD0", Offset = "0xD90DD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x1A34518", Offset = "0x1A34518", VA = "0x1A34518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90DE0", Offset = "0xD90DE0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public string Token
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x1A34520", Offset = "0x1A34520", VA = "0x1A34520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90DF0", Offset = "0xD90DF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x1A34528", Offset = "0x1A34528", VA = "0x1A34528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90E00", Offset = "0xD90E00")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public string UserId
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x1A34530", Offset = "0x1A34530", VA = "0x1A34530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90E10", Offset = "0xD90E10")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x1A34538", Offset = "0x1A34538", VA = "0x1A34538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90E20", Offset = "0xD90E20")]
		set
		{
		}
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1A34540", Offset = "0x1A34540", VA = "0x1A34540")]
	public AuthenticationValues()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1A34550", Offset = "0x1A34550", VA = "0x1A34550")]
	public AuthenticationValues(string userId)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1A34584", Offset = "0x1A34584", VA = "0x1A34584", Slot = "4")]
	public virtual void SetAuthPostData(string stringData)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1A345C4", Offset = "0x1A345C4", VA = "0x1A345C4", Slot = "5")]
	public virtual void SetAuthPostData(byte[] byteData)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1A345CC", Offset = "0x1A345CC", VA = "0x1A345CC", Slot = "6")]
	public virtual void SetAuthPostData(Dictionary<string, object> dictData)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1A345D4", Offset = "0x1A345D4", VA = "0x1A345D4", Slot = "7")]
	public virtual void AddAuthParameter(string key, string value)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1A34788", Offset = "0x1A34788", VA = "0x1A34788", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000064")]
public class FindFriendsOptions
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool CreatedOnGs;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool Visible;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool Open;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x17013C4", Offset = "0x17013C4", VA = "0x17013C4")]
	internal int ToIntFlags()
	{
		return default(int);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x17013EC", Offset = "0x17013EC", VA = "0x17013EC")]
	public FindFriendsOptions()
	{
	}
}
[Token(Token = "0x2000065")]
public enum ClientState
{
	[Token(Token = "0x40002E2")]
	Uninitialized,
	[Token(Token = "0x40002E3")]
	PeerCreated,
	[Token(Token = "0x40002E4")]
	Queued,
	[Token(Token = "0x40002E5")]
	Authenticated,
	[Token(Token = "0x40002E6")]
	JoinedLobby,
	[Token(Token = "0x40002E7")]
	DisconnectingFromMasterserver,
	[Token(Token = "0x40002E8")]
	ConnectingToGameserver,
	[Token(Token = "0x40002E9")]
	ConnectedToGameserver,
	[Token(Token = "0x40002EA")]
	Joining,
	[Token(Token = "0x40002EB")]
	Joined,
	[Token(Token = "0x40002EC")]
	Leaving,
	[Token(Token = "0x40002ED")]
	DisconnectingFromGameserver,
	[Token(Token = "0x40002EE")]
	ConnectingToMasterserver,
	[Token(Token = "0x40002EF")]
	QueuedComingFromGameserver,
	[Token(Token = "0x40002F0")]
	Disconnecting,
	[Token(Token = "0x40002F1")]
	Disconnected,
	[Token(Token = "0x40002F2")]
	ConnectedToMaster,
	[Token(Token = "0x40002F3")]
	ConnectingToNameServer,
	[Token(Token = "0x40002F4")]
	ConnectedToNameServer,
	[Token(Token = "0x40002F5")]
	DisconnectingFromNameServer,
	[Token(Token = "0x40002F6")]
	Authenticating
}
[Token(Token = "0x2000066")]
internal enum JoinType
{
	[Token(Token = "0x40002F8")]
	CreateRoom,
	[Token(Token = "0x40002F9")]
	JoinRoom,
	[Token(Token = "0x40002FA")]
	JoinRandomRoom,
	[Token(Token = "0x40002FB")]
	JoinOrCreateRoom
}
[Token(Token = "0x2000067")]
public enum DisconnectCause
{
	[Token(Token = "0x40002FD")]
	DisconnectByServerUserLimit = 1042,
	[Token(Token = "0x40002FE")]
	ExceptionOnConnect = 1023,
	[Token(Token = "0x40002FF")]
	DisconnectByServerTimeout = 1041,
	[Token(Token = "0x4000300")]
	DisconnectByServerLogic = 1043,
	[Token(Token = "0x4000301")]
	Exception = 1026,
	[Token(Token = "0x4000302")]
	InvalidAuthentication = 32767,
	[Token(Token = "0x4000303")]
	MaxCcuReached = 32757,
	[Token(Token = "0x4000304")]
	InvalidRegion = 32756,
	[Token(Token = "0x4000305")]
	SecurityExceptionOnConnect = 1022,
	[Token(Token = "0x4000306")]
	DisconnectByClientTimeout = 1040,
	[Token(Token = "0x4000307")]
	InternalReceiveException = 1039,
	[Token(Token = "0x4000308")]
	AuthenticationTicketExpired = 32753
}
[Token(Token = "0x2000068")]
public enum ServerConnection
{
	[Token(Token = "0x400030A")]
	MasterServer,
	[Token(Token = "0x400030B")]
	GameServer,
	[Token(Token = "0x400030C")]
	NameServer
}
[Token(Token = "0x2000069")]
internal class NetworkingPeer : LoadBalancingPeer, IPhotonPeerListener
{
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD807FC", Offset = "0xD807FC")]
	private sealed class <>c__DisplayClass163_0
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CloudRegionCode bestFromPrefs;

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x1BC55E4", Offset = "0x1BC55E4", VA = "0x1BC55E4")]
		public <>c__DisplayClass163_0()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x1BC55EC", Offset = "0x1BC55EC", VA = "0x1BC55EC")]
		internal bool <OnOperationResponse>b__0(Region x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected internal string AppId;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8116C", Offset = "0xD8116C")]
	private AuthenticationValues <AuthValues>k__BackingField;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string tokenCache;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AuthModeOption AuthMode;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public EncryptionMode EncryptionMode;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8117C", Offset = "0xD8117C")]
	private bool <IsUsingNameServer>k__BackingField;

	[Token(Token = "0x4000313")]
	public const string NameServerHost = "ns.exitgames.com";

	[Token(Token = "0x4000314")]
	public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8118C", Offset = "0xD8118C")]
	private string <MasterServerAddress>k__BackingField;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8119C", Offset = "0xD8119C")]
	private string <GameServerAddress>k__BackingField;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD811AC", Offset = "0xD811AC")]
	private ServerConnection <Server>k__BackingField;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD811BC", Offset = "0xD811BC")]
	private ClientState <State>k__BackingField;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool IsInitialConnect;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public bool insideLobby;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD811CC", Offset = "0xD811CC")]
	private TypedLobby <lobby>k__BackingField;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected internal List<TypedLobbyInfo> LobbyStatistics;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Dictionary<string, RoomInfo> mGameList;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public RoomInfo[] mGameListCopy;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string playername;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool mPlayernameHasToBeUpdated;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Room currentRoom;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD811DC", Offset = "0xD811DC")]
	private PhotonPlayer <LocalPlayer>k__BackingField;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD811EC", Offset = "0xD811EC")]
	private int <PlayersOnMasterCount>k__BackingField;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD811FC", Offset = "0xD811FC")]
	private int <PlayersInRoomsCount>k__BackingField;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8120C", Offset = "0xD8120C")]
	private int <RoomsCount>k__BackingField;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private JoinType lastJoinType;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected internal EnterRoomParams enterRoomParamsCache;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool didAuthenticate;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string[] friendListRequested;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int friendListTimestamp;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool isFetchingFriendList;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8121C", Offset = "0xD8121C")]
	private List<Region> <AvailableRegions>k__BackingField;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8122C", Offset = "0xD8122C")]
	private CloudRegionCode <CloudRegion>k__BackingField;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private string cloudCluster;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public string CurrentCluster;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Dictionary<int, PhotonPlayer> mActors;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public PhotonPlayer[] mOtherPlayerListCopy;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public PhotonPlayer[] mPlayerListCopy;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool hasSwitchedMC;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private HashSet<byte> allowedReceivingGroups;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private HashSet<byte> blockSendingGroups;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	protected internal Dictionary<int, PhotonView> photonViewList;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private readonly PhotonStream readStream;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private readonly PhotonStream pStream;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupReliable;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupUnreliable;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected internal short currentLevelPrefix;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x222")]
	protected internal bool loadingLevelAndPausedNetwork;

	[Token(Token = "0x400033E")]
	protected internal const string CurrentSceneProperty = "curScn";

	[Token(Token = "0x400033F")]
	protected internal const string CurrentScenePropertyLoadAsync = "curScnLa";

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool UsePrefabCache;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	internal IPunPrefabPool ObjectPool;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Dictionary<Type, List<MethodInfo>> monoRPCMethodsCache;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private readonly Dictionary<string, int> rpcShortcuts;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string OnPhotonInstantiateString;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private string cachedServerAddress;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private string cachedApplicationName;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private ServerConnection cachedServerType;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private AsyncOperation _AsyncLevelLoadingOperation;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private RaiseEventOptions _levelReloadEventOptions;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private bool _isReconnecting;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private readonly Type typePunRPC;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private readonly Type typePhotonMessageInfo;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private readonly object keyByteZero;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private readonly object keyByteOne;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private readonly object keyByteTwo;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private readonly object keyByteThree;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private readonly object keyByteFour;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private readonly object keyByteFive;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private readonly object[] emptyObjectArray;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private readonly Type[] emptyTypeArray;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Dictionary<int, object[]> tempInstantiationData;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private readonly ExitGames.Client.Photon.Hashtable reusedRpcEvent;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int ObjectsInOneUpdate;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private RaiseEventOptions options;

	[Token(Token = "0x400035A")]
	public const int SyncViewId = 0;

	[Token(Token = "0x400035B")]
	public const int SyncCompressed = 1;

	[Token(Token = "0x400035C")]
	public const int SyncNullValues = 2;

	[Token(Token = "0x400035D")]
	public const int SyncFirstValue = 3;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public bool IsReloadingLevel;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D9")]
	public bool AsynchLevelLoadCall;

	[Token(Token = "0x17000042")]
	protected internal string AppVersion
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x13DA4E4", Offset = "0x13DA4E4", VA = "0x13DA4E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000043")]
	public AuthenticationValues AuthValues
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0x13DA5A4", Offset = "0x13DA5A4", VA = "0x13DA5A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90E30", Offset = "0xD90E30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000246")]
		[Address(RVA = "0x13DA5AC", Offset = "0x13DA5AC", VA = "0x13DA5AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90E40", Offset = "0xD90E40")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	private string TokenForInit
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x13DA5B4", Offset = "0x13DA5B4", VA = "0x13DA5B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000045")]
	public bool IsUsingNameServer
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x13DA5D4", Offset = "0x13DA5D4", VA = "0x13DA5D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90E50", Offset = "0xD90E50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000249")]
		[Address(RVA = "0x13DA5DC", Offset = "0x13DA5DC", VA = "0x13DA5DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90E60", Offset = "0xD90E60")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public string NameServerAddress
	{
		[Token(Token = "0x600024A")]
		[Address(RVA = "0x13DA5E8", Offset = "0x13DA5E8", VA = "0x13DA5E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000047")]
	public string MasterServerAddress
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0x13DA790", Offset = "0x13DA790", VA = "0x13DA790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90E70", Offset = "0xD90E70")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024C")]
		[Address(RVA = "0x13DA798", Offset = "0x13DA798", VA = "0x13DA798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90E80", Offset = "0xD90E80")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public string GameServerAddress
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0x13DA7A0", Offset = "0x13DA7A0", VA = "0x13DA7A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90E90", Offset = "0xD90E90")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x13DA7A8", Offset = "0x13DA7A8", VA = "0x13DA7A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90EA0", Offset = "0xD90EA0")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000049")]
	protected internal ServerConnection Server
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x13DA7B0", Offset = "0x13DA7B0", VA = "0x13DA7B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90EB0", Offset = "0xD90EB0")]
		get
		{
			return default(ServerConnection);
		}
		[Token(Token = "0x6000250")]
		[Address(RVA = "0x13DA7B8", Offset = "0x13DA7B8", VA = "0x13DA7B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90EC0", Offset = "0xD90EC0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public ClientState State
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x13DA7C0", Offset = "0x13DA7C0", VA = "0x13DA7C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90ED0", Offset = "0xD90ED0")]
		get
		{
			return default(ClientState);
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x13DA7C8", Offset = "0x13DA7C8", VA = "0x13DA7C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90EE0", Offset = "0xD90EE0")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public TypedLobby lobby
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x13DA7D0", Offset = "0x13DA7D0", VA = "0x13DA7D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90EF0", Offset = "0xD90EF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x13DA7D8", Offset = "0x13DA7D8", VA = "0x13DA7D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90F00", Offset = "0xD90F00")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	private bool requestLobbyStatistics
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0x13DA7E0", Offset = "0x13DA7E0", VA = "0x13DA7E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004D")]
	public string PlayerName
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x13DA860", Offset = "0x13DA860", VA = "0x13DA860")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x13DA868", Offset = "0x13DA868", VA = "0x13DA868")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public Room CurrentRoom
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x13DA8EC", Offset = "0x13DA8EC", VA = "0x13DA8EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x13DAA04", Offset = "0x13DAA04", VA = "0x13DAA04")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public PhotonPlayer LocalPlayer
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x13DAA0C", Offset = "0x13DAA0C", VA = "0x13DAA0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90F10", Offset = "0xD90F10")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x13DAA14", Offset = "0x13DAA14", VA = "0x13DAA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90F20", Offset = "0xD90F20")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public int PlayersOnMasterCount
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x13DAA1C", Offset = "0x13DAA1C", VA = "0x13DAA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90F30", Offset = "0xD90F30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x13DAA24", Offset = "0x13DAA24", VA = "0x13DAA24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90F40", Offset = "0xD90F40")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public int PlayersInRoomsCount
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x13DAA2C", Offset = "0x13DAA2C", VA = "0x13DAA2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90F50", Offset = "0xD90F50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x13DAA34", Offset = "0x13DAA34", VA = "0x13DAA34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90F60", Offset = "0xD90F60")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public int RoomsCount
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x13DAA3C", Offset = "0x13DAA3C", VA = "0x13DAA3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90F70", Offset = "0xD90F70")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x13DAA44", Offset = "0x13DAA44", VA = "0x13DAA44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90F80", Offset = "0xD90F80")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000053")]
	protected internal int FriendListAge
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x13DAA4C", Offset = "0x13DAA4C", VA = "0x13DAA4C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000054")]
	public bool IsAuthorizeSecretAvailable
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x13DAA90", Offset = "0x13DAA90", VA = "0x13DAA90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000055")]
	public List<Region> AvailableRegions
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x13DAABC", Offset = "0x13DAABC", VA = "0x13DAABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90F90", Offset = "0xD90F90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x13DAAC4", Offset = "0x13DAAC4", VA = "0x13DAAC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90FA0", Offset = "0xD90FA0")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public CloudRegionCode CloudRegion
	{
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x13DAACC", Offset = "0x13DAACC", VA = "0x13DAACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90FB0", Offset = "0xD90FB0")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x13DAAD4", Offset = "0x13DAAD4", VA = "0x13DAAD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90FC0", Offset = "0xD90FC0")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public int mMasterClientId
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x13DAADC", Offset = "0x13DAADC", VA = "0x13DAADC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x13DABC0", Offset = "0x13DABC0", VA = "0x13DABC0")]
		private set
		{
		}
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x13DABD8", Offset = "0x13DABD8", VA = "0x13DABD8")]
	public NetworkingPeer(string playername, ConnectionProtocol connectionProtocol)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x13DA5EC", Offset = "0x13DA5EC", VA = "0x13DA5EC")]
	private string GetNameServerAddress()
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x13DB28C", Offset = "0x13DB28C", VA = "0x13DB28C", Slot = "6")]
	public override bool Connect(string serverAddress, string applicationName)
	{
		return default(bool);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x13DB300", Offset = "0x13DB300", VA = "0x13DB300")]
	public bool ReconnectToMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x13DB5BC", Offset = "0x13DB5BC", VA = "0x13DB5BC")]
	public bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x13DB3B8", Offset = "0x13DB3B8", VA = "0x13DB3B8")]
	public bool Connect(string serverAddress, ServerConnection type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x13DBD44", Offset = "0x13DBD44", VA = "0x13DBD44")]
	private bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x13DBE40", Offset = "0x13DBE40", VA = "0x13DBE40")]
	public bool ConnectToNameServer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x13DBF84", Offset = "0x13DBF84", VA = "0x13DBF84")]
	public bool ConnectToRegionMaster(CloudRegionCode region, [Optional] string specificCluster)
	{
		return default(bool);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x13DB6A8", Offset = "0x13DB6A8", VA = "0x13DB6A8")]
	protected internal void SetupProtocol(ServerConnection serverType)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x13DC304", Offset = "0x13DC304", VA = "0x13DC304", Slot = "8")]
	public override void Disconnect()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x13DC0E8", Offset = "0x13DC0E8", VA = "0x13DC0E8")]
	private bool CallAuthenticate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x13DC41C", Offset = "0x13DC41C", VA = "0x13DC41C")]
	private void DisconnectToReconnect()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x13DC458", Offset = "0x13DC458", VA = "0x13DC458")]
	public bool GetRegions()
	{
		return default(bool);
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x13DC4A8", Offset = "0x13DC4A8", VA = "0x13DC4A8", Slot = "24")]
	public override bool OpFindFriends(string[] friendsToFind, [Optional] FindFriendsOptions findFriendsOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x13DC4CC", Offset = "0x13DC4CC", VA = "0x13DC4CC")]
	public bool OpCreateGame(EnterRoomParams enterRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x13DC634", Offset = "0x13DC634", VA = "0x13DC634", Slot = "20")]
	public override bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x13DC678", Offset = "0x13DC678", VA = "0x13DC678", Slot = "21")]
	public override bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x13DC71C", Offset = "0x13DC71C", VA = "0x13DC71C", Slot = "28")]
	public override bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x13DC824", Offset = "0x13DC824", VA = "0x13DC824")]
	private void ReadoutProperties(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable pActorProperties, int targetActorNr)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x13DCE84", Offset = "0x13DCE84", VA = "0x13DCE84")]
	private ExitGames.Client.Photon.Hashtable ReadoutPropertiesForActorNr(ExitGames.Client.Photon.Hashtable actorProperties, int actorNr)
	{
		return null;
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x13DD52C", Offset = "0x13DD52C", VA = "0x13DD52C")]
	public void ChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x13DD808", Offset = "0x13DD808", VA = "0x13DD808")]
	private void LeftLobbyCleanup()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x13DD954", Offset = "0x13DD954", VA = "0x13DD954")]
	private void LeftRoomCleanup()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x13DDC44", Offset = "0x13DDC44", VA = "0x13DDC44")]
	protected internal void LocalCleanupAnythingInstantiated(bool destroyInstantiatedGameObjects)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x13DE340", Offset = "0x13DE340", VA = "0x13DE340")]
	private void GameEnteredOnGameServer(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x13DB170", Offset = "0x13DB170", VA = "0x13DB170")]
	private void AddNewPlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x13DEE08", Offset = "0x13DEE08", VA = "0x13DEE08")]
	private void RemovePlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x13DD6AC", Offset = "0x13DD6AC", VA = "0x13DD6AC")]
	private void RebuildPlayerListCopies()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x13DEE98", Offset = "0x13DEE98", VA = "0x13DEE98")]
	private void ResetPhotonViewsOnSerialize()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x13DEF9C", Offset = "0x13DEF9C", VA = "0x13DEF9C")]
	private void HandleEventLeave(int actorID, EventData evLeave)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x13DEC00", Offset = "0x13DEC00", VA = "0x13DEC00")]
	private void CheckMasterClient(int leavingPlayerId)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x13DF614", Offset = "0x13DF614", VA = "0x13DF614")]
	protected internal void UpdateMasterClient()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x13DFAF4", Offset = "0x13DFAF4", VA = "0x13DFAF4")]
	private static int ReturnLowestPlayerId(PhotonPlayer[] players, int playerIdToIgnore)
	{
		return default(int);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x13DFB58", Offset = "0x13DFB58", VA = "0x13DFB58")]
	protected internal bool SetMasterClient(int playerId, bool sync)
	{
		return default(bool);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x13DFD40", Offset = "0x13DFD40", VA = "0x13DFD40")]
	public bool SetMasterClient(int nextMasterId)
	{
		return default(bool);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x13DCE0C", Offset = "0x13DCE0C", VA = "0x13DCE0C")]
	protected internal PhotonPlayer GetPlayerWithId(int number)
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x13DA90C", Offset = "0x13DA90C", VA = "0x13DA90C")]
	private void SendPlayerName()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x13DC530", Offset = "0x13DC530", VA = "0x13DC530")]
	private ExitGames.Client.Photon.Hashtable GetLocalActorProperties()
	{
		return null;
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x13DFE9C", Offset = "0x13DFE9C", VA = "0x13DFE9C", Slot = "30")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x13E001C", Offset = "0x13E001C", VA = "0x13E001C", Slot = "31")]
	public void OnOperationResponse(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x13E2F8C", Offset = "0x13E2F8C", VA = "0x13E2F8C", Slot = "32")]
	public void OnStatusChanged(StatusCode statusCode)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x13E3EF4", Offset = "0x13E3EF4", VA = "0x13E3EF4", Slot = "33")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x13E8D64", Offset = "0x13E8D64", VA = "0x13E8D64")]
	public void OnMessage(object messages)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x13E2C88", Offset = "0x13E2C88", VA = "0x13E2C88")]
	private void SetupEncryption(Dictionary<byte, object> encryptionData)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x13DEAD4", Offset = "0x13DEAD4", VA = "0x13DEAD4")]
	protected internal void UpdatedActorList(int[] actorsInRoom)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x13E8D68", Offset = "0x13E8D68", VA = "0x13E8D68")]
	private void SendVacantViewIds()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x13DCF74", Offset = "0x13DCF74", VA = "0x13DCF74")]
	public static void SendMonoMessage(PhotonNetworkingMessage methodString, params object[] parameters)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x13E6258", Offset = "0x13E6258", VA = "0x13E6258")]
	protected internal void ExecuteRpc(ExitGames.Client.Photon.Hashtable rpcData, int senderID = 0)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x13E9178", Offset = "0x13E9178", VA = "0x13E9178")]
	private bool CheckTypeMatch(ParameterInfo[] methodParameters, Type[] callParameterTypes)
	{
		return default(bool);
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x13E933C", Offset = "0x13E933C", VA = "0x13E933C")]
	internal ExitGames.Client.Photon.Hashtable SendInstantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, int[] viewIDs, object[] data, bool isGlobalObject)
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x13E8114", Offset = "0x13E8114", VA = "0x13E8114")]
	internal GameObject DoInstantiate(ExitGames.Client.Photon.Hashtable evData, PhotonPlayer photonPlayer, GameObject resourceGameObject)
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x13E9780", Offset = "0x13E9780", VA = "0x13E9780")]
	private void StoreInstantiationData(int instantiationId, object[] instantiationData)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x13E9858", Offset = "0x13E9858", VA = "0x13E9858")]
	public object[] FetchInstantiationData(int instantiationId)
	{
		return null;
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x13E97F0", Offset = "0x13E97F0", VA = "0x13E97F0")]
	private void RemoveInstantiationData(int instantiationId)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x13DF704", Offset = "0x13DF704", VA = "0x13DF704")]
	public void DestroyPlayerObjects(int playerId, bool localOnly)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x13E8D2C", Offset = "0x13E8D2C", VA = "0x13E8D2C")]
	public void DestroyAll(bool localOnly)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x13DDF04", Offset = "0x13DDF04", VA = "0x13DDF04")]
	protected internal void RemoveInstantiatedGO(GameObject go, bool localOnly)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x13E9CC8", Offset = "0x13E9CC8", VA = "0x13E9CC8")]
	private void ServerCleanInstantiateAndDestroy(int instantiateId, int creatorId, bool isRuntimeInstantiated)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x13E9A74", Offset = "0x13E9A74", VA = "0x13E9A74")]
	private void SendDestroyOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x13E9BEC", Offset = "0x13E9BEC", VA = "0x13E9BEC")]
	private void SendDestroyOfAll()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x13E98DC", Offset = "0x13E98DC", VA = "0x13E98DC")]
	private void OpRemoveFromServerInstantiationsOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x13EA0B0", Offset = "0x13EA0B0", VA = "0x13EA0B0")]
	protected internal void RequestOwnership(int viewID, int fromOwner)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x13EA388", Offset = "0x13EA388", VA = "0x13EA388")]
	protected internal void TransferOwnership(int viewID, int playerID)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x13E9F28", Offset = "0x13E9F28", VA = "0x13E9F28")]
	public bool LocalCleanPhotonView(PhotonView view)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x13E8FAC", Offset = "0x13E8FAC", VA = "0x13E8FAC")]
	public PhotonView GetPhotonView(int viewID)
	{
		return null;
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x13EA660", Offset = "0x13EA660", VA = "0x13EA660")]
	public void RegisterPhotonView(PhotonView netView)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x13E99A8", Offset = "0x13E99A8", VA = "0x13E99A8")]
	public void OpCleanRpcBuffer(int actorNumber)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x13EA8C4", Offset = "0x13EA8C4", VA = "0x13EA8C4")]
	public void OpRemoveCompleteCacheOfPlayer(int actorNumber)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x13E9B58", Offset = "0x13E9B58", VA = "0x13E9B58")]
	public void OpRemoveCompleteCache()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x13EA990", Offset = "0x13EA990", VA = "0x13EA990")]
	private void RemoveCacheOfLeftPlayers()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x13EAAB0", Offset = "0x13EAAB0", VA = "0x13EAAB0")]
	public void CleanRpcBufferIfMine(PhotonView view)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x13E9F9C", Offset = "0x13E9F9C", VA = "0x13E9F9C")]
	public void OpCleanRpcBuffer(PhotonView view)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x13EAC98", Offset = "0x13EAC98", VA = "0x13EAC98")]
	public void RemoveRPCsInGroup(int group)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x13EADC0", Offset = "0x13EADC0", VA = "0x13EADC0")]
	public void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x13EADC8", Offset = "0x13EADC8", VA = "0x13EADC8")]
	internal void RPC(PhotonView view, string methodName, PhotonTargets target, PhotonPlayer player, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x13EB798", Offset = "0x13EB798", VA = "0x13EB798")]
	public void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x13EBAC0", Offset = "0x13EBAC0", VA = "0x13EBAC0")]
	public void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x13EBB50", Offset = "0x13EBB50", VA = "0x13EBB50")]
	public void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x13EBC58", Offset = "0x13EBC58", VA = "0x13EBC58")]
	public void NewSceneLoaded()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x13EBF38", Offset = "0x13EBF38", VA = "0x13EBF38")]
	public void RunViewUpdate()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x13ECC5C", Offset = "0x13ECC5C", VA = "0x13ECC5C")]
	private object[] OnSerializeWrite(PhotonView view)
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x13E7A50", Offset = "0x13E7A50", VA = "0x13E7A50")]
	private void OnSerializeRead(object[] data, PhotonPlayer sender, int networkTime, short correctPrefix)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x13ECF88", Offset = "0x13ECF88", VA = "0x13ECF88")]
	private object[] DeltaCompressionWrite(object[] previousContent, object[] currentContent)
	{
		return null;
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x13ED240", Offset = "0x13ED240", VA = "0x13ED240")]
	private object[] DeltaCompressionRead(object[] lastOnSerializeDataReceived, object[] incomingData)
	{
		return null;
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x13ECED0", Offset = "0x13ECED0", VA = "0x13ECED0")]
	private bool AlmostEquals(object[] lastData, object[] currentContent)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x13ED3EC", Offset = "0x13ED3EC", VA = "0x13ED3EC")]
	private bool AlmostEquals(object one, object two)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x13ED7E4", Offset = "0x13ED7E4", VA = "0x13ED7E4")]
	protected internal static bool GetMethod(UnityEngine.MonoBehaviour monob, string methodType, out MethodInfo mi)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x13DD1B4", Offset = "0x13DD1B4", VA = "0x13DD1B4")]
	protected internal void LoadLevelIfSynced()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x13ED94C", Offset = "0x13ED94C", VA = "0x13ED94C")]
	protected internal void SetLevelInPropsIfSynced(object levelId, bool initiatingCall, bool asyncLoading = false)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x13EDE34", Offset = "0x13EDE34", VA = "0x13EDE34")]
	private void SendLevelReloadEvent()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x13EDEF0", Offset = "0x13EDEF0", VA = "0x13EDEF0")]
	public void SetApp(string appId, string gameVersion)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x13EDFE8", Offset = "0x13EDFE8", VA = "0x13EDFE8")]
	public bool WebRpc(string uriPath, object parameters)
	{
		return default(bool);
	}
}
[Token(Token = "0x200006A")]
public interface IPunObservable
{
	[Token(Token = "0x60002C8")]
	void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info);
}
[Token(Token = "0x200006B")]
public interface IPunCallbacks
{
	[Token(Token = "0x60002C9")]
	void OnConnectedToPhoton();

	[Token(Token = "0x60002CA")]
	void OnLeftRoom();

	[Token(Token = "0x60002CB")]
	void OnMasterClientSwitched(PhotonPlayer newMasterClient);

	[Token(Token = "0x60002CC")]
	void OnPhotonCreateRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x60002CD")]
	void OnPhotonJoinRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x60002CE")]
	void OnCreatedRoom();

	[Token(Token = "0x60002CF")]
	void OnJoinedLobby();

	[Token(Token = "0x60002D0")]
	void OnLeftLobby();

	[Token(Token = "0x60002D1")]
	void OnFailedToConnectToPhoton(DisconnectCause cause);

	[Token(Token = "0x60002D2")]
	void OnConnectionFail(DisconnectCause cause);

	[Token(Token = "0x60002D3")]
	void OnDisconnectedFromPhoton();

	[Token(Token = "0x60002D4")]
	void OnPhotonInstantiate(PhotonMessageInfo info);

	[Token(Token = "0x60002D5")]
	void OnReceivedRoomListUpdate();

	[Token(Token = "0x60002D6")]
	void OnJoinedRoom();

	[Token(Token = "0x60002D7")]
	void OnPhotonPlayerConnected(PhotonPlayer newPlayer);

	[Token(Token = "0x60002D8")]
	void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer);

	[Token(Token = "0x60002D9")]
	void OnPhotonRandomJoinFailed(object[] codeAndMsg);

	[Token(Token = "0x60002DA")]
	void OnConnectedToMaster();

	[Token(Token = "0x60002DB")]
	void OnPhotonMaxCccuReached();

	[Token(Token = "0x60002DC")]
	void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged);

	[Token(Token = "0x60002DD")]
	void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps);

	[Token(Token = "0x60002DE")]
	void OnUpdatedFriendList();

	[Token(Token = "0x60002DF")]
	void OnCustomAuthenticationFailed(string debugMessage);

	[Token(Token = "0x60002E0")]
	void OnCustomAuthenticationResponse(Dictionary<string, object> data);

	[Token(Token = "0x60002E1")]
	void OnWebRpcResponse(OperationResponse response);

	[Token(Token = "0x60002E2")]
	void OnOwnershipRequest(object[] viewAndPlayer);

	[Token(Token = "0x60002E3")]
	void OnLobbyStatisticsUpdate();

	[Token(Token = "0x60002E4")]
	void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer);

	[Token(Token = "0x60002E5")]
	void OnOwnershipTransfered(object[] viewAndPlayers);
}
[Token(Token = "0x200006C")]
public interface IPunPrefabPool
{
	[Token(Token = "0x60002E6")]
	GameObject Instantiate(string prefabId, Vector3 position, Quaternion rotation);

	[Token(Token = "0x60002E7")]
	void Destroy(GameObject gameObject);
}
[Token(Token = "0x200006D")]
public struct PhotonMessageInfo
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly int timeInt;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly PhotonPlayer sender;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly PhotonView photonView;

	[Token(Token = "0x17000058")]
	public double timestamp
	{
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x1BD7088", Offset = "0x1BD7088", VA = "0x1BD7088")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1BD707C", Offset = "0x1BD707C", VA = "0x1BD707C")]
	public PhotonMessageInfo(PhotonPlayer player, int timestamp, PhotonView view)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1BD70A0", Offset = "0x1BD70A0", VA = "0x1BD70A0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200006E")]
internal class PunEvent
{
	[Token(Token = "0x4000363")]
	public const byte RPC = 200;

	[Token(Token = "0x4000364")]
	public const byte SendSerialize = 201;

	[Token(Token = "0x4000365")]
	public const byte Instantiation = 202;

	[Token(Token = "0x4000366")]
	public const byte CloseConnection = 203;

	[Token(Token = "0x4000367")]
	public const byte Destroy = 204;

	[Token(Token = "0x4000368")]
	public const byte RemoveCachedRPCs = 205;

	[Token(Token = "0x4000369")]
	public const byte SendSerializeReliable = 206;

	[Token(Token = "0x400036A")]
	public const byte DestroyPlayer = 207;

	[Token(Token = "0x400036B")]
	public const byte AssignMaster = 208;

	[Token(Token = "0x400036C")]
	public const byte OwnershipRequest = 209;

	[Token(Token = "0x400036D")]
	public const byte OwnershipTransfer = 210;

	[Token(Token = "0x400036E")]
	public const byte VacantViewIds = 211;

	[Token(Token = "0x400036F")]
	public const byte levelReload = 212;

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1599DF4", Offset = "0x1599DF4", VA = "0x1599DF4")]
	public PunEvent()
	{
	}
}
[Token(Token = "0x200006F")]
public class PhotonStream
{
	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool write;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<object> writeData;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object[] readData;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal byte currentItem;

	[Token(Token = "0x17000059")]
	public bool isWriting
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x1588238", Offset = "0x1588238", VA = "0x1588238")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005A")]
	public bool isReading
	{
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x1588240", Offset = "0x1588240", VA = "0x1588240")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005B")]
	public int Count
	{
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x1588250", Offset = "0x1588250", VA = "0x1588250")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1588134", Offset = "0x1588134", VA = "0x1588134")]
	public PhotonStream(bool write, object[] incomingData)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x15881D0", Offset = "0x15881D0", VA = "0x15881D0")]
	public void SetReadStream(object[] incomingData, byte pos = 0)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x15881E0", Offset = "0x15881E0", VA = "0x15881E0")]
	internal void ResetWriteStream()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x158694C", Offset = "0x158694C", VA = "0x158694C")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x15882B8", Offset = "0x15882B8", VA = "0x15882B8")]
	public object PeekNext()
	{
		return null;
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x158689C", Offset = "0x158689C", VA = "0x158689C")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x158836C", Offset = "0x158836C", VA = "0x158836C")]
	public object[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x15883DC", Offset = "0x15883DC", VA = "0x15883DC")]
	public void Serialize(ref bool myBool)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x15884F0", Offset = "0x15884F0", VA = "0x15884F0")]
	public void Serialize(ref int myInt)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x15885FC", Offset = "0x15885FC", VA = "0x15885FC")]
	public void Serialize(ref string value)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x15886F4", Offset = "0x15886F4", VA = "0x15886F4")]
	public void Serialize(ref char value)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1588800", Offset = "0x1588800", VA = "0x1588800")]
	public void Serialize(ref short value)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x158890C", Offset = "0x158890C", VA = "0x158890C")]
	public void Serialize(ref float obj)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1588A18", Offset = "0x1588A18", VA = "0x1588A18")]
	public void Serialize(ref PhotonPlayer obj)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1588B48", Offset = "0x1588B48", VA = "0x1588B48")]
	public void Serialize(ref Vector3 obj)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1588C6C", Offset = "0x1588C6C", VA = "0x1588C6C")]
	public void Serialize(ref Vector2 obj)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1588D78", Offset = "0x1588D78", VA = "0x1588D78")]
	public void Serialize(ref Quaternion obj)
	{
	}
}
[Token(Token = "0x2000070")]
public class SceneManagerHelper
{
	[Token(Token = "0x1700005C")]
	public static string ActiveSceneName
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x1512C60", Offset = "0x1512C60", VA = "0x1512C60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public static int ActiveSceneBuildIndex
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x1512CD8", Offset = "0x1512CD8", VA = "0x1512CD8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1512D50", Offset = "0x1512D50", VA = "0x1512D50")]
	public SceneManagerHelper()
	{
	}
}
[Token(Token = "0x2000071")]
public class WebRpcResponse
{
	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8123C", Offset = "0xD8123C")]
	private string <Name>k__BackingField;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8124C", Offset = "0xD8124C")]
	private int <ReturnCode>k__BackingField;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8125C", Offset = "0xD8125C")]
	private string <DebugMessage>k__BackingField;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8126C", Offset = "0xD8126C")]
	private Dictionary<string, object> <Parameters>k__BackingField;

	[Token(Token = "0x1700005E")]
	public string Name
	{
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x240E798", Offset = "0x240E798", VA = "0x240E798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90FD0", Offset = "0xD90FD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x240E7A0", Offset = "0x240E7A0", VA = "0x240E7A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90FE0", Offset = "0xD90FE0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public int ReturnCode
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x240E7A8", Offset = "0x240E7A8", VA = "0x240E7A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90FF0", Offset = "0xD90FF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x240E7B0", Offset = "0x240E7B0", VA = "0x240E7B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91000", Offset = "0xD91000")]
		private set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public string DebugMessage
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x240E7B8", Offset = "0x240E7B8", VA = "0x240E7B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91010", Offset = "0xD91010")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000308")]
		[Address(RVA = "0x240E7C0", Offset = "0x240E7C0", VA = "0x240E7C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91020", Offset = "0xD91020")]
		private set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public Dictionary<string, object> Parameters
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x240E7C8", Offset = "0x240E7C8", VA = "0x240E7C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91030", Offset = "0xD91030")]
		get
		{
			return null;
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0x240E7D0", Offset = "0x240E7D0", VA = "0x240E7D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91040", Offset = "0xD91040")]
		private set
		{
		}
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x240E7D8", Offset = "0x240E7D8", VA = "0x240E7D8")]
	public WebRpcResponse(OperationResponse response)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x240E974", Offset = "0x240E974", VA = "0x240E974")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x2000072")]
internal class PhotonHandler : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8080C", Offset = "0xD8080C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction<Scene, LoadSceneMode> <>9__10_0;

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x1BD58E8", Offset = "0x1BD58E8", VA = "0x1BD58E8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x1BD58F0", Offset = "0x1BD58F0", VA = "0x1BD58F0")]
		internal void <Start>b__10_0(Scene scene, LoadSceneMode loadingMode)
		{
		}
	}

	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8081C", Offset = "0xD8081C")]
	private sealed class <PingAvailableRegionsCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool connectToBest;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonPingManager <pingManager>5__2;

		[Token(Token = "0x170003A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x1BD6480", Offset = "0x1BD6480", VA = "0x1BD6480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x1BD64E8", Offset = "0x1BD64E8", VA = "0x1BD64E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x1BD584C", Offset = "0x1BD584C", VA = "0x1BD584C")]
		[DebuggerHidden]
		public <PingAvailableRegionsCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x1BD59AC", Offset = "0x1BD59AC", VA = "0x1BD59AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x1BD59B0", Offset = "0x1BD59B0", VA = "0x1BD59B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x1BD6488", Offset = "0x1BD6488", VA = "0x1BD6488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonHandler SP;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateInterval;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int updateIntervalOnSerialize;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nextSendTickCount;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nextSendTickCountOnSerialize;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected internal static bool AppQuits;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected internal static Type PingImplementation;

	[Token(Token = "0x4000381")]
	private const string PlayerPrefsKey = "PUNCloudBestRegion";

	[Token(Token = "0x17000062")]
	internal static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x1BD5604", Offset = "0x1BD5604", VA = "0x1BD5604")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x1BD5688", Offset = "0x1BD5688", VA = "0x1BD5688")]
		set
		{
		}
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1BD4254", Offset = "0x1BD4254", VA = "0x1BD4254")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1BD469C", Offset = "0x1BD469C", VA = "0x1BD469C")]
	protected void Start()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1BD4798", Offset = "0x1BD4798", VA = "0x1BD4798")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1BD4A00", Offset = "0x1BD4A00", VA = "0x1BD4A00")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1BD4B98", Offset = "0x1BD4B98", VA = "0x1BD4B98")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1BD4BF4", Offset = "0x1BD4BF4", VA = "0x1BD4BF4")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1BD5184", Offset = "0x1BD5184", VA = "0x1BD5184")]
	protected void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1BD51F8", Offset = "0x1BD51F8", VA = "0x1BD51F8")]
	protected void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1BD4590", Offset = "0x1BD4590", VA = "0x1BD4590")]
	public static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1BD4828", Offset = "0x1BD4828", VA = "0x1BD4828")]
	public static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1BD5284", Offset = "0x1BD5284", VA = "0x1BD5284")]
	public static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1BD5754", Offset = "0x1BD5754", VA = "0x1BD5754")]
	protected internal static void PingAvailableRegionsAndConnectToBest()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1BD57D8", Offset = "0x1BD57D8", VA = "0x1BD57D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91050", Offset = "0xD91050")]
	internal IEnumerator PingAvailableRegionsCoroutine(bool connectToBest)
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1BD5878", Offset = "0x1BD5878", VA = "0x1BD5878")]
	public PhotonHandler()
	{
	}
}
[Token(Token = "0x2000073")]
public class PhotonLagSimulationGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect WindowRect;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WindowId;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool Visible;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8127C", Offset = "0xD8127C")]
	private PhotonPeer <Peer>k__BackingField;

	[Token(Token = "0x17000063")]
	public PhotonPeer Peer
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x1BD64F0", Offset = "0x1BD64F0", VA = "0x1BD64F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD910B4", Offset = "0xD910B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x1BD64F8", Offset = "0x1BD64F8", VA = "0x1BD64F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD910C4", Offset = "0xD910C4")]
		set
		{
		}
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1BD6500", Offset = "0x1BD6500", VA = "0x1BD6500")]
	public void Start()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1BD6570", Offset = "0x1BD6570", VA = "0x1BD6570")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1BD66E8", Offset = "0x1BD66E8", VA = "0x1BD66E8")]
	private void NetSimHasNoPeerWindow(int windowId)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1BD67C0", Offset = "0x1BD67C0", VA = "0x1BD67C0")]
	private void NetSimWindow(int windowId)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1BD700C", Offset = "0x1BD700C", VA = "0x1BD700C")]
	public PhotonLagSimulationGui()
	{
	}
}
[Token(Token = "0x2000074")]
public static class PhotonNetwork
{
	[Token(Token = "0x20003F7")]
	public delegate void EventCallback(byte eventCode, object content, int senderId);

	[Serializable]
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8082C", Offset = "0xD8082C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x1BE0830", Offset = "0x1BE0830", VA = "0x1BE0830")]
		public <>c()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x1BE0838", Offset = "0x1BE0838", VA = "0x1BE0838")]
		internal int <.cctor>b__151_0()
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000386")]
	public const string versionPUN = "1.101";

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8128C", Offset = "0xD8128C")]
	private static string <gameVersion>k__BackingField;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static readonly PhotonHandler photonMono;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal static NetworkingPeer networkingPeer;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int MAX_VIEW_IDS;

	[Token(Token = "0x400038B")]
	internal const string serverSettingsAssetFile = "PhotonServerSettings";

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ServerSettings PhotonServerSettings;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool InstantiateInRoomOnly;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static PhotonLogLevel logLevel;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8129C", Offset = "0xD8129C")]
	private static List<FriendInfo> <Friends>k__BackingField;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float precisionForVectorSynchronization;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float precisionForQuaternionSynchronization;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float precisionForFloatSynchronization;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static bool UseRpcMonoBehaviourCache;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public static bool UsePrefabCache;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static HashSet<GameObject> SendMonoMessageTargets;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Type SendMonoMessageTargetType;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool StartRpcsAsCoroutine;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private static bool isOfflineMode;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static Room offlineModeRoom;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD812AC", Offset = "0xD812AC")]
	public static int maxConnections;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static bool _mAutomaticallySyncScene;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private static bool m_autoCleanUpPlayerObjects;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static int sendInterval;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private static int sendIntervalOnSerialize;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static bool m_isMessageQueueRunning;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static Stopwatch startupStopwatch;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static float BackgroundTimeout;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD812E4", Offset = "0xD812E4")]
	private static bool <UseAlternativeUdpPorts>k__BackingField;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	internal static int lastUsedViewSubId;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	internal static int lastUsedViewSubIdStatic;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	internal static List<int> manuallyAllocatedViewIds;

	[Token(Token = "0x17000064")]
	public static string gameVersion
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x1BD7134", Offset = "0x1BD7134", VA = "0x1BD7134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD910D4", Offset = "0xD910D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x1BD719C", Offset = "0x1BD719C", VA = "0x1BD719C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD910E4", Offset = "0xD910E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public static string ServerAddress
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x1BD7208", Offset = "0x1BD7208", VA = "0x1BD7208")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	public static CloudRegionCode CloudRegion
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x1BD72BC", Offset = "0x1BD72BC", VA = "0x1BD72BC")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x17000067")]
	public static string CurrentCluster
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x1BD73A0", Offset = "0x1BD73A0", VA = "0x1BD73A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public static bool connected
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x1BD266C", Offset = "0x1BD266C", VA = "0x1BD266C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000069")]
	public static bool connecting
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x1BD7440", Offset = "0x1BD7440", VA = "0x1BD7440")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006A")]
	public static bool connectedAndReady
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0x1BD7524", Offset = "0x1BD7524", VA = "0x1BD7524")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006B")]
	public static ConnectionState connectionState
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0x1BD7650", Offset = "0x1BD7650", VA = "0x1BD7650")]
		get
		{
			return default(ConnectionState);
		}
	}

	[Token(Token = "0x1700006C")]
	public static ClientState connectionStateDetailed
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0x1BD5048", Offset = "0x1BD5048", VA = "0x1BD5048")]
		get
		{
			return default(ClientState);
		}
	}

	[Token(Token = "0x1700006D")]
	public static ServerConnection Server
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0x1BD61A4", Offset = "0x1BD61A4", VA = "0x1BD61A4")]
		get
		{
			return default(ServerConnection);
		}
	}

	[Token(Token = "0x1700006E")]
	public static AuthenticationValues AuthValues
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x1BD777C", Offset = "0x1BD777C", VA = "0x1BD777C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x1BD781C", Offset = "0x1BD781C", VA = "0x1BD781C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public static Room room
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0x1BD2838", Offset = "0x1BD2838", VA = "0x1BD2838")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000070")]
	public static PhotonPlayer player
	{
		[Token(Token = "0x6000333")]
		[Address(RVA = "0x1BC6FC0", Offset = "0x1BC6FC0", VA = "0x1BC6FC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000071")]
	public static PhotonPlayer masterClient
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x1BD78B8", Offset = "0x1BD78B8", VA = "0x1BD78B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000072")]
	public static string playerName
	{
		[Token(Token = "0x6000335")]
		[Address(RVA = "0x1BD79FC", Offset = "0x1BD79FC", VA = "0x1BD79FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x1BD7A70", Offset = "0x1BD7A70", VA = "0x1BD7A70")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public static PhotonPlayer[] playerList
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x1BD7AEC", Offset = "0x1BD7AEC", VA = "0x1BD7AEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000074")]
	public static PhotonPlayer[] otherPlayers
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x1BD7B9C", Offset = "0x1BD7B9C", VA = "0x1BD7B9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000075")]
	public static List<FriendInfo> Friends
	{
		[Token(Token = "0x6000339")]
		[Address(RVA = "0x1BD7C4C", Offset = "0x1BD7C4C", VA = "0x1BD7C4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD910F4", Offset = "0xD910F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x1BD7CB4", Offset = "0x1BD7CB4", VA = "0x1BD7CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91104", Offset = "0xD91104")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public static int FriendsListAge
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x1BD7D20", Offset = "0x1BD7D20", VA = "0x1BD7D20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000077")]
	public static IPunPrefabPool PrefabPool
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x1BD7DCC", Offset = "0x1BD7DCC", VA = "0x1BD7DCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x1BD7E40", Offset = "0x1BD7E40", VA = "0x1BD7E40")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public static bool offlineMode
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0x1BD7EB8", Offset = "0x1BD7EB8", VA = "0x1BD7EB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x1BD7F20", Offset = "0x1BD7F20", VA = "0x1BD7F20")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public static bool automaticallySyncScene
	{
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x1BD81D0", Offset = "0x1BD81D0", VA = "0x1BD81D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x1BD8238", Offset = "0x1BD8238", VA = "0x1BD8238")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public static bool autoCleanUpPlayerObjects
	{
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x1BD830C", Offset = "0x1BD830C", VA = "0x1BD830C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x1BD8374", Offset = "0x1BD8374", VA = "0x1BD8374")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public static bool autoJoinLobby
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1BD8440", Offset = "0x1BD8440", VA = "0x1BD8440")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x1BD84B4", Offset = "0x1BD84B4", VA = "0x1BD84B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public static bool EnableLobbyStatistics
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x1BD8530", Offset = "0x1BD8530", VA = "0x1BD8530")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x1BD85A4", Offset = "0x1BD85A4", VA = "0x1BD85A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public static List<TypedLobbyInfo> LobbyStatistics
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x1BD8620", Offset = "0x1BD8620", VA = "0x1BD8620")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x1BD8694", Offset = "0x1BD8694", VA = "0x1BD8694")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public static bool insideLobby
	{
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x1BD870C", Offset = "0x1BD870C", VA = "0x1BD870C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007F")]
	public static TypedLobby lobby
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x1BD8780", Offset = "0x1BD8780", VA = "0x1BD8780")]
		get
		{
			return null;
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x1BD87F4", Offset = "0x1BD87F4", VA = "0x1BD87F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public static int sendRate
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x1BD44B0", Offset = "0x1BD44B0", VA = "0x1BD44B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x1BD886C", Offset = "0x1BD886C", VA = "0x1BD886C")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public static int sendRateOnSerialize
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x1BD4520", Offset = "0x1BD4520", VA = "0x1BD4520")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x1BD89B0", Offset = "0x1BD89B0", VA = "0x1BD89B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public static bool isMessageQueueRunning
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x1BD8B10", Offset = "0x1BD8B10", VA = "0x1BD8B10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x1BD8B78", Offset = "0x1BD8B78", VA = "0x1BD8B78")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public static double time
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x1BD8C2C", Offset = "0x1BD8C2C", VA = "0x1BD8C2C")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000084")]
	public static int ServerTimestamp
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x1BD8C9C", Offset = "0x1BD8C9C", VA = "0x1BD8C9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000085")]
	public static bool isMasterClient
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x1BD8DB0", Offset = "0x1BD8DB0", VA = "0x1BD8DB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000086")]
	public static bool inRoom
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1BC6430", Offset = "0x1BC6430", VA = "0x1BC6430")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000087")]
	public static bool isNonMasterClientInRoom
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x1BD8EA8", Offset = "0x1BD8EA8", VA = "0x1BD8EA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000088")]
	public static int countOfPlayersOnMaster
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1BD8F38", Offset = "0x1BD8F38", VA = "0x1BD8F38")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000089")]
	public static int countOfPlayersInRooms
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1BD8FAC", Offset = "0x1BD8FAC", VA = "0x1BD8FAC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008A")]
	public static int countOfPlayers
	{
		[Token(Token = "0x600035A")]
		[Address(RVA = "0x1BD9020", Offset = "0x1BD9020", VA = "0x1BD9020")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008B")]
	public static int countOfRooms
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0x1BD909C", Offset = "0x1BD909C", VA = "0x1BD909C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008C")]
	public static bool NetworkStatisticsEnabled
	{
		[Token(Token = "0x600035C")]
		[Address(RVA = "0x1BD9110", Offset = "0x1BD9110", VA = "0x1BD9110")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600035D")]
		[Address(RVA = "0x1BD9184", Offset = "0x1BD9184", VA = "0x1BD9184")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public static int ResentReliableCommands
	{
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x1BD9200", Offset = "0x1BD9200", VA = "0x1BD9200")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008E")]
	public static bool CrcCheckEnabled
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0x1BD9274", Offset = "0x1BD9274", VA = "0x1BD9274")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x1BD92E8", Offset = "0x1BD92E8", VA = "0x1BD92E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public static int PacketLossByCrcCheck
	{
		[Token(Token = "0x6000361")]
		[Address(RVA = "0x1BD944C", Offset = "0x1BD944C", VA = "0x1BD944C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000090")]
	public static int MaxResendsBeforeDisconnect
	{
		[Token(Token = "0x6000362")]
		[Address(RVA = "0x1BD94C0", Offset = "0x1BD94C0", VA = "0x1BD94C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000363")]
		[Address(RVA = "0x1BD9534", Offset = "0x1BD9534", VA = "0x1BD9534")]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public static int QuickResends
	{
		[Token(Token = "0x6000364")]
		[Address(RVA = "0x1BD95C4", Offset = "0x1BD95C4", VA = "0x1BD95C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000365")]
		[Address(RVA = "0x1BD9640", Offset = "0x1BD9640", VA = "0x1BD9640")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public static bool UseAlternativeUdpPorts
	{
		[Token(Token = "0x6000366")]
		[Address(RVA = "0x1BD96CC", Offset = "0x1BD96CC", VA = "0x1BD96CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91114", Offset = "0xD91114")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x1BD9734", Offset = "0x1BD9734", VA = "0x1BD9734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91124", Offset = "0xD91124")]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event EventCallback OnEventCall
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x1BD97A4", Offset = "0x1BD97A4", VA = "0x1BD97A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91134", Offset = "0xD91134")]
		add
		{
		}
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x1BD9894", Offset = "0x1BD9894", VA = "0x1BD9894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91144", Offset = "0xD91144")]
		remove
		{
		}
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1BD9984", Offset = "0x1BD9984", VA = "0x1BD9984")]
	static PhotonNetwork()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1BD9DCC", Offset = "0x1BD9DCC", VA = "0x1BD9DCC")]
	public static void SwitchToProtocol(ConnectionProtocol cp)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1BD9E44", Offset = "0x1BD9E44", VA = "0x1BD9E44")]
	public static bool ConnectUsingSettings(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1BDA6D0", Offset = "0x1BDA6D0", VA = "0x1BDA6D0")]
	public static bool ConnectToMaster(string masterServerAddress, int port, string appID, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1BDAA6C", Offset = "0x1BDAA6C", VA = "0x1BDAA6C")]
	public static bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1BDADE8", Offset = "0x1BDADE8", VA = "0x1BDADE8")]
	public static bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1BDA444", Offset = "0x1BDA444", VA = "0x1BDA444")]
	public static bool ConnectToBestCloudServer(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1BDB194", Offset = "0x1BDB194", VA = "0x1BDB194")]
	public static bool ConnectToRegion(CloudRegionCode region, string gameVersion, [Optional] string cluster)
	{
		return default(bool);
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1BDB4C0", Offset = "0x1BDB4C0", VA = "0x1BDB4C0")]
	public static void OverrideBestCloudServer(CloudRegionCode region)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1BDB524", Offset = "0x1BDB524", VA = "0x1BDB524")]
	public static void RefreshCloudServerRating()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1BDB590", Offset = "0x1BDB590", VA = "0x1BDB590")]
	public static void NetworkStatisticsReset()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1BDB604", Offset = "0x1BDB604", VA = "0x1BDB604")]
	public static string NetworkStatisticsToString()
	{
		return null;
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1BDB718", Offset = "0x1BDB718", VA = "0x1BDB718")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD91154", Offset = "0xD91154")]
	public static void InitializeSecurity()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1BDB71C", Offset = "0x1BDB71C", VA = "0x1BDB71C")]
	private static bool VerifyCanUseNetwork()
	{
		return default(bool);
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1BD4890", Offset = "0x1BD4890", VA = "0x1BD4890")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1BDB7C0", Offset = "0x1BDB7C0", VA = "0x1BDB7C0")]
	public static bool FindFriends(string[] friendsToFind, [Optional] FindFriendsOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1BDB8B0", Offset = "0x1BDB8B0", VA = "0x1BDB8B0")]
	public static bool CreateRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1BDBBC8", Offset = "0x1BDBBC8", VA = "0x1BDBBC8")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1BDB920", Offset = "0x1BDB920", VA = "0x1BDB920")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1BDBEC4", Offset = "0x1BDBEC4", VA = "0x1BDBEC4")]
	public static bool JoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1BDBF2C", Offset = "0x1BDBF2C", VA = "0x1BDBF2C")]
	public static bool JoinRoom(string roomName, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1BDC19C", Offset = "0x1BDC19C", VA = "0x1BDC19C")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1BDC21C", Offset = "0x1BDC21C", VA = "0x1BDC21C")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1BDC520", Offset = "0x1BDC520", VA = "0x1BDC520")]
	public static bool JoinRandomRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1BDC868", Offset = "0x1BDC868", VA = "0x1BDC868")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1BDC594", Offset = "0x1BDC594", VA = "0x1BDC594")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers, MatchmakingMode matchingType, TypedLobby typedLobby, string sqlLobbyFilter, [Optional] string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1BDC8EC", Offset = "0x1BDC8EC", VA = "0x1BDC8EC")]
	public static bool ReJoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1BDBC48", Offset = "0x1BDBC48", VA = "0x1BDBC48")]
	private static void EnterOfflineRoom(string roomName, RoomOptions roomOptions, bool createdRoom)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1BDCB10", Offset = "0x1BDCB10", VA = "0x1BDCB10")]
	public static bool JoinLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1BDCB70", Offset = "0x1BDCB70", VA = "0x1BDCB70")]
	public static bool JoinLobby(TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1BDCCA4", Offset = "0x1BDCCA4", VA = "0x1BDCCA4")]
	public static bool LeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1BDCD70", Offset = "0x1BDCD70", VA = "0x1BDCD70")]
	public static bool LeaveRoom(bool becomeInactive = true)
	{
		return default(bool);
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1BDD050", Offset = "0x1BDD050", VA = "0x1BDD050")]
	public static bool GetCustomRoomList(TypedLobby typedLobby, string sqlLobbyFilter)
	{
		return default(bool);
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1BDD0E4", Offset = "0x1BDD0E4", VA = "0x1BDD0E4")]
	public static RoomInfo[] GetRoomList()
	{
		return null;
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1BDD1F4", Offset = "0x1BDD1F4", VA = "0x1BDD1F4")]
	public static void SetPlayerCustomProperties(ExitGames.Client.Photon.Hashtable customProperties)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1BDD444", Offset = "0x1BDD444", VA = "0x1BDD444")]
	public static void RemovePlayerCustomProperties(string[] customPropertiesToDelete)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1BDD5EC", Offset = "0x1BDD5EC", VA = "0x1BDD5EC")]
	public static bool RaiseEvent(byte eventCode, object eventContent, bool sendReliable, RaiseEventOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1BDD710", Offset = "0x1BDD710", VA = "0x1BDD710")]
	public static int AllocateViewID()
	{
		return default(int);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1BDDB08", Offset = "0x1BDDB08", VA = "0x1BDDB08")]
	public static int AllocateSceneViewID()
	{
		return default(int);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1BDD7B0", Offset = "0x1BDD7B0", VA = "0x1BDD7B0")]
	private static int AllocateViewID(int ownerId)
	{
		return default(int);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1BDDBFC", Offset = "0x1BDDBFC", VA = "0x1BDDBFC")]
	private static int[] AllocateSceneViewIDs(int countOfNewViews)
	{
		return null;
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1BC5F84", Offset = "0x1BC5F84", VA = "0x1BC5F84")]
	public static void UnAllocateViewID(int viewID)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1BC6498", Offset = "0x1BC6498", VA = "0x1BC6498")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group)
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1BDDCD4", Offset = "0x1BDDCD4", VA = "0x1BDDCD4")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1BC6568", Offset = "0x1BC6568", VA = "0x1BC6568")]
	public static GameObject InstantiateSceneObject(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1BDE29C", Offset = "0x1BDE29C", VA = "0x1BDE29C")]
	public static int GetPing()
	{
		return default(int);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1BDE310", Offset = "0x1BDE310", VA = "0x1BDE310")]
	public static void FetchServerTimestamp()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1BDE3BC", Offset = "0x1BDE3BC", VA = "0x1BDE3BC")]
	public static void SendOutgoingCommands()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1BDE45C", Offset = "0x1BDE45C", VA = "0x1BDE45C")]
	public static bool CloseConnection(PhotonPlayer kickPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1BDE610", Offset = "0x1BDE610", VA = "0x1BDE610")]
	public static bool SetMasterClient(PhotonPlayer masterClientPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1BDE950", Offset = "0x1BDE950", VA = "0x1BDE950")]
	public static void Destroy(PhotonView targetView)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1BC5CA8", Offset = "0x1BC5CA8", VA = "0x1BC5CA8")]
	public static void Destroy(GameObject targetGo)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1BDEA60", Offset = "0x1BDEA60", VA = "0x1BDEA60")]
	public static void DestroyPlayerObjects(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1BDEB24", Offset = "0x1BDEB24", VA = "0x1BDEB24")]
	public static void DestroyPlayerObjects(int targetPlayerId)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1BDECB0", Offset = "0x1BDECB0", VA = "0x1BDECB0")]
	public static void DestroyAll()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1BDED84", Offset = "0x1BDED84", VA = "0x1BDED84")]
	public static void RemoveRPCs(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1BDEE94", Offset = "0x1BDEE94", VA = "0x1BDEE94")]
	public static void RemoveRPCs(PhotonView targetPhotonView)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1BDEF3C", Offset = "0x1BDEF3C", VA = "0x1BDEF3C")]
	public static void RemoveRPCsInGroup(int targetGroup)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1BDEFE4", Offset = "0x1BDEFE4", VA = "0x1BDEFE4")]
	internal static void RPC(PhotonView view, string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1BDF268", Offset = "0x1BDF268", VA = "0x1BDF268")]
	internal static void RPC(PhotonView view, string methodName, PhotonPlayer targetPlayer, bool encrpyt, params object[] parameters)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1BDF498", Offset = "0x1BDF498", VA = "0x1BDF498")]
	public static void CacheSendMonoMessageTargets(Type type)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1BDF568", Offset = "0x1BDF568", VA = "0x1BDF568")]
	public static HashSet<GameObject> FindGameObjectsWithComponent(Type type)
	{
		return null;
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1BDF6EC", Offset = "0x1BDF6EC", VA = "0x1BDF6EC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9118C", Offset = "0xD9118C")]
	public static void SetReceivingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1BDF790", Offset = "0x1BDF790", VA = "0x1BDF790")]
	public static void SetInterestGroups(byte group, bool enabled)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1BDF8B0", Offset = "0x1BDF8B0", VA = "0x1BDF8B0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD911C4", Offset = "0xD911C4")]
	public static void SetReceivingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x1BDF9DC", Offset = "0x1BDF9DC", VA = "0x1BDF9DC")]
	public static void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1BDFA98", Offset = "0x1BDFA98", VA = "0x1BDFA98")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD911FC", Offset = "0xD911FC")]
	public static void SetSendingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1BDFB0C", Offset = "0x1BDFB0C", VA = "0x1BDFB0C")]
	public static void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1BDFBC8", Offset = "0x1BDFBC8", VA = "0x1BDFBC8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD91234", Offset = "0xD91234")]
	public static void SetSendingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1BDFCAC", Offset = "0x1BDFCAC", VA = "0x1BDFCAC")]
	public static void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1BDFD68", Offset = "0x1BDFD68", VA = "0x1BDFD68")]
	public static void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1BDFE00", Offset = "0x1BDFE00", VA = "0x1BDFE00")]
	public static void LoadLevel(int levelNumber)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1BDFF84", Offset = "0x1BDFF84", VA = "0x1BDFF84")]
	public static AsyncOperation LoadLevelAsync(int levelNumber)
	{
		return null;
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1BE0114", Offset = "0x1BE0114", VA = "0x1BE0114")]
	public static void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1BE0278", Offset = "0x1BE0278", VA = "0x1BE0278")]
	public static AsyncOperation LoadLevelAsync(string levelName)
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1BE03E0", Offset = "0x1BE03E0", VA = "0x1BE03E0")]
	public static bool WebRpc(string name, object parameters)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1BE046C", Offset = "0x1BE046C", VA = "0x1BE046C")]
	public static bool CallEvent(byte eventCode, object content, int senderId)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000075")]
public class PhotonPlayer : IComparable<PhotonPlayer>, IComparable<int>, IEquatable<PhotonPlayer>, IEquatable<int>
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int actorID;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string nameField;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD81304", Offset = "0xD81304")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool IsLocal;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD81314", Offset = "0xD81314")]
	private bool <IsInactive>k__BackingField;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD81324", Offset = "0xD81324")]
	private ExitGames.Client.Photon.Hashtable <CustomProperties>k__BackingField;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public object TagObject;

	[Token(Token = "0x17000093")]
	public int ID
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x15854B8", Offset = "0x15854B8", VA = "0x15854B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000094")]
	public string NickName
	{
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x15854C0", Offset = "0x15854C0", VA = "0x15854C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x15854C8", Offset = "0x15854C8", VA = "0x15854C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public string UserId
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x15855C4", Offset = "0x15855C4", VA = "0x15855C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9126C", Offset = "0xD9126C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x15855CC", Offset = "0x15855CC", VA = "0x15855CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9127C", Offset = "0xD9127C")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public bool IsMasterClient
	{
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x15855D4", Offset = "0x15855D4", VA = "0x15855D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000097")]
	public bool IsInactive
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x158565C", Offset = "0x158565C", VA = "0x158565C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9128C", Offset = "0xD9128C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x1585664", Offset = "0x1585664", VA = "0x1585664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9129C", Offset = "0xD9129C")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x1585670", Offset = "0x1585670", VA = "0x1585670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD912AC", Offset = "0xD912AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x1585678", Offset = "0x1585678", VA = "0x1585678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD912BC", Offset = "0xD912BC")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public ExitGames.Client.Photon.Hashtable AllProperties
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x1585680", Offset = "0x1585680", VA = "0x1585680")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD981BC", Offset = "0xD981BC")]
	public string name
	{
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1586664", Offset = "0x1586664", VA = "0x1586664")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x158666C", Offset = "0x158666C", VA = "0x158666C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD981F4", Offset = "0xD981F4")]
	public string userId
	{
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1586670", Offset = "0x1586670", VA = "0x1586670")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1586678", Offset = "0x1586678", VA = "0x1586678")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9822C", Offset = "0xD9822C")]
	public bool isLocal
	{
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x1586680", Offset = "0x1586680", VA = "0x1586680")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98264", Offset = "0xD98264")]
	public bool isMasterClient
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x1586688", Offset = "0x1586688", VA = "0x1586688")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9829C", Offset = "0xD9829C")]
	public bool isInactive
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x158668C", Offset = "0x158668C", VA = "0x158668C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x1586694", Offset = "0x1586694", VA = "0x1586694")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD982D4", Offset = "0xD982D4")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x15866A0", Offset = "0x15866A0", VA = "0x15866A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x15866A8", Offset = "0x15866A8", VA = "0x15866A8")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9830C", Offset = "0xD9830C")]
	public ExitGames.Client.Photon.Hashtable allProperties
	{
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x15866B0", Offset = "0x15866B0", VA = "0x15866B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x1585754", Offset = "0x1585754", VA = "0x1585754")]
	public PhotonPlayer(bool isLocal, int actorID, string name)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1585804", Offset = "0x1585804", VA = "0x1585804")]
	protected internal PhotonPlayer(bool isLocal, int actorID, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1585AEC", Offset = "0x1585AEC", VA = "0x1585AEC", Slot = "0")]
	public override bool Equals(object p)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1585BB0", Offset = "0x1585BB0", VA = "0x1585BB0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1585BB8", Offset = "0x1585BB8", VA = "0x1585BB8")]
	internal void InternalChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x15858B8", Offset = "0x15858B8", VA = "0x15858B8")]
	internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1585C50", Offset = "0x1585C50", VA = "0x1585C50")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x1585F10", Offset = "0x1585F10", VA = "0x1585F10")]
	public static PhotonPlayer Find(int ID)
	{
		return null;
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1585FC4", Offset = "0x1585FC4", VA = "0x1585FC4")]
	public PhotonPlayer Get(int id)
	{
		return null;
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1585FCC", Offset = "0x1585FCC", VA = "0x1585FCC")]
	public PhotonPlayer GetNext()
	{
		return null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x15861FC", Offset = "0x15861FC", VA = "0x15861FC")]
	public PhotonPlayer GetNextFor(PhotonPlayer currentPlayer)
	{
		return null;
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1585FD4", Offset = "0x1585FD4", VA = "0x1585FD4")]
	public PhotonPlayer GetNextFor(int currentPlayerId)
	{
		return null;
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1586210", Offset = "0x1586210", VA = "0x1586210", Slot = "4")]
	public int CompareTo(PhotonPlayer other)
	{
		return default(int);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x158626C", Offset = "0x158626C", VA = "0x158626C", Slot = "5")]
	public int CompareTo(int other)
	{
		return default(int);
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x15862AC", Offset = "0x15862AC", VA = "0x15862AC", Slot = "6")]
	public bool Equals(PhotonPlayer other)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x158630C", Offset = "0x158630C", VA = "0x158630C", Slot = "7")]
	public bool Equals(int other)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x1586350", Offset = "0x1586350", VA = "0x1586350", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x15864AC", Offset = "0x15864AC", VA = "0x15864AC")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x2000076")]
public class PhotonStatsGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool statsWindowOn;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool statsOn;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool healthStatsVisible;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool trafficStatsOn;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool buttonsOn;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect statsRect;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int WindowId;

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1586C20", Offset = "0x1586C20", VA = "0x1586C20")]
	public void Start()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1586C84", Offset = "0x1586C84", VA = "0x1586C84")]
	public void Update()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1586CD4", Offset = "0x1586CD4", VA = "0x1586CD4")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1586EB8", Offset = "0x1586EB8", VA = "0x1586EB8")]
	public void TrafficStatsWindow(int windowID)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x15880C0", Offset = "0x15880C0", VA = "0x15880C0")]
	public PhotonStatsGui()
	{
	}
}
[Token(Token = "0x2000077")]
public class PhotonStreamQueue
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_SampleRate;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int m_SampleCount;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_ObjectsPerSample;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_LastSampleTime;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_LastFrameCount;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_NextObjectIndex;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<object> m_Objects;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_IsWriting;

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1588E8C", Offset = "0x1588E8C", VA = "0x1588E8C")]
	public PhotonStreamQueue(int sampleRate)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1588F20", Offset = "0x1588F20", VA = "0x1588F20")]
	private void BeginWritePackage()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1589274", Offset = "0x1589274", VA = "0x1589274")]
	public void Reset()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x15892DC", Offset = "0x15892DC", VA = "0x15892DC")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1589384", Offset = "0x1589384", VA = "0x1589384")]
	public bool HasQueuedObjects()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1589394", Offset = "0x1589394", VA = "0x1589394")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x158943C", Offset = "0x158943C", VA = "0x158943C")]
	public void Serialize(PhotonStream stream)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1589564", Offset = "0x1589564", VA = "0x1589564")]
	public void Deserialize(PhotonStream stream)
	{
	}
}
[Token(Token = "0x2000078")]
public enum ViewSynchronization
{
	[Token(Token = "0x40003BF")]
	Off,
	[Token(Token = "0x40003C0")]
	ReliableDeltaCompressed,
	[Token(Token = "0x40003C1")]
	Unreliable,
	[Token(Token = "0x40003C2")]
	UnreliableOnChange
}
[Token(Token = "0x2000079")]
public enum OnSerializeTransform
{
	[Token(Token = "0x40003C4")]
	OnlyPosition,
	[Token(Token = "0x40003C5")]
	OnlyRotation,
	[Token(Token = "0x40003C6")]
	OnlyScale,
	[Token(Token = "0x40003C7")]
	PositionAndRotation,
	[Token(Token = "0x40003C8")]
	All
}
[Token(Token = "0x200007A")]
public enum OnSerializeRigidBody
{
	[Token(Token = "0x40003CA")]
	OnlyVelocity,
	[Token(Token = "0x40003CB")]
	OnlyAngularVelocity,
	[Token(Token = "0x40003CC")]
	All
}
[Token(Token = "0x200007B")]
public enum OwnershipOption
{
	[Token(Token = "0x40003CE")]
	Fixed,
	[Token(Token = "0x40003CF")]
	Takeover,
	[Token(Token = "0x40003D0")]
	Request
}
[Token(Token = "0x200007C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7D3D8", Offset = "0xD7D3D8")]
public class PhotonView : Photon.MonoBehaviour
{
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ownerId;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public byte group;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	protected internal bool mixedModeIsReliable;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool OwnerShipWasTransfered;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int prefixBackup;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal object[] instantiationDataField;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected internal object[] lastOnSerializeDataSent;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected internal object[] lastOnSerializeDataReceived;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ViewSynchronization synchronization;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public OnSerializeTransform onSerializeTransformOption;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnSerializeRigidBody onSerializeRigidBodyOption;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public OwnershipOption ownershipTransfer;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Component> ObservedComponents;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<Component, MethodInfo> m_OnSerializeMethodInfos;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private int viewIdField;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int instantiationId;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int currentMasterID;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected internal bool didAwake;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[SerializeField]
	protected internal bool isRuntimeInstantiated;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	protected internal bool removedFromLocalViewList;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal UnityEngine.MonoBehaviour[] RpcMonoBehaviours;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MethodInfo OnSerializeMethodInfo;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool failedToFindOnSerialize;

	[Token(Token = "0x170000A1")]
	public int prefix
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x158B45C", Offset = "0x158B45C", VA = "0x158B45C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x158B510", Offset = "0x158B510", VA = "0x158B510")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public object[] instantiationData
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x158B518", Offset = "0x158B518", VA = "0x158B518")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x158B5AC", Offset = "0x158B5AC", VA = "0x158B5AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public int viewID
	{
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x158B5B4", Offset = "0x158B5B4", VA = "0x158B5B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x158B5BC", Offset = "0x158B5BC", VA = "0x158B5BC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public bool isSceneView
	{
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x158B6A8", Offset = "0x158B6A8", VA = "0x158B6A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A5")]
	public PhotonPlayer owner
	{
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x158B738", Offset = "0x158B738", VA = "0x158B738")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A6")]
	public int OwnerActorNr
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x158B740", Offset = "0x158B740", VA = "0x158B740")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A7")]
	public bool isOwnerActive
	{
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x158B748", Offset = "0x158B748", VA = "0x158B748")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A8")]
	public int CreatorActorNr
	{
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x158B6C4", Offset = "0x158B6C4", VA = "0x158B6C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A9")]
	public bool isMine
	{
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x15899D4", Offset = "0x15899D4", VA = "0x15899D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x158B7EC", Offset = "0x158B7EC", VA = "0x158B7EC")]
	protected internal void Awake()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x158B89C", Offset = "0x158B89C", VA = "0x158B89C")]
	public void RequestOwnership()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x158B91C", Offset = "0x158B91C", VA = "0x158B91C")]
	public void TransferOwnership(PhotonPlayer newOwner)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x158B934", Offset = "0x158B934", VA = "0x158B934")]
	public void TransferOwnership(int newOwnerId)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x158B9C8", Offset = "0x158B9C8", VA = "0x158B9C8")]
	public void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x158BA30", Offset = "0x158BA30", VA = "0x158BA30")]
	protected internal void OnDestroy()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x158BBAC", Offset = "0x158BBAC", VA = "0x158BBAC")]
	public void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x158C10C", Offset = "0x158C10C", VA = "0x158C10C")]
	public void DeserializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x158C1DC", Offset = "0x158C1DC", VA = "0x158C1DC")]
	protected internal void DeserializeComponent(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x158BC7C", Offset = "0x158BC7C", VA = "0x158BC7C")]
	protected internal void SerializeComponent(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x158C7FC", Offset = "0x158C7FC", VA = "0x158C7FC")]
	protected internal void ExecuteComponentOnSerialize(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x158CB94", Offset = "0x158CB94", VA = "0x158CB94")]
	public void RefreshRpcMonoBehaviourCache()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x158CBEC", Offset = "0x158CBEC", VA = "0x158CBEC")]
	public void RPC(string methodName, PhotonTargets target, params object[] parameters)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x158CC80", Offset = "0x158CC80", VA = "0x158CC80")]
	public void RpcSecure(string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x158CD18", Offset = "0x158CD18", VA = "0x158CD18")]
	public void RPC(string methodName, PhotonPlayer targetPlayer, params object[] parameters)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x158CDAC", Offset = "0x158CDAC", VA = "0x158CDAC")]
	public void RpcSecure(string methodName, PhotonPlayer targetPlayer, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x158CE44", Offset = "0x158CE44", VA = "0x158CE44")]
	public static PhotonView Get(Component component)
	{
		return null;
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x158CE9C", Offset = "0x158CE9C", VA = "0x158CE9C")]
	public static PhotonView Get(GameObject gameObj)
	{
		return null;
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x158CEF4", Offset = "0x158CEF4", VA = "0x158CEF4")]
	public static PhotonView Find(int viewID)
	{
		return null;
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x158CF70", Offset = "0x158CF70", VA = "0x158CF70", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x158D194", Offset = "0x158D194", VA = "0x158D194")]
	public PhotonView()
	{
	}
}
[Token(Token = "0x200007D")]
public class PhotonPingManager
{
	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8083C", Offset = "0xD8083C")]
	private sealed class <PingSocket>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Region region;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PhotonPingManager <>4__this;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Photon.Realtime.PhotonPing <ping>5__2;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <rttSum>5__3;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <replyCount>5__4;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <regionAddress>5__5;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__6;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool <overtime>5__7;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch <sw>5__8;

		[Token(Token = "0x170003A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x1585448", Offset = "0x1585448", VA = "0x1585448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0x15854B0", Offset = "0x15854B0", VA = "0x15854B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x1584E0C", Offset = "0x1584E0C", VA = "0x1584E0C")]
		[DebuggerHidden]
		public <PingSocket>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x1584E38", Offset = "0x1584E38", VA = "0x1584E38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x1584E3C", Offset = "0x1584E3C", VA = "0x1584E3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x1585450", Offset = "0x1585450", VA = "0x1585450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseNative;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Attempts;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool IgnoreInitialAttempt;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int MaxMilliseconsPerPing;

	[Token(Token = "0x40003EC")]
	private const string wssProtocolString = "wss://";

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int PingsRunning;

	[Token(Token = "0x170000AA")]
	public Region BestRegion
	{
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x1BD62D8", Offset = "0x1BD62D8", VA = "0x1BD62D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AB")]
	public bool Done
	{
		[Token(Token = "0x600040E")]
		[Address(RVA = "0x1BD62C8", Offset = "0x1BD62C8", VA = "0x1BD62C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1BD624C", Offset = "0x1BD624C", VA = "0x1BD624C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD912CC", Offset = "0xD912CC")]
	public IEnumerator PingSocket(Region region)
	{
		return null;
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1BE0984", Offset = "0x1BE0984", VA = "0x1BE0984")]
	public static string ResolveHost(string hostName)
	{
		return null;
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1BD6244", Offset = "0x1BD6244", VA = "0x1BD6244")]
	public PhotonPingManager()
	{
	}
}
[Token(Token = "0x200007E")]
public class PunRPC : Attribute
{
	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1599E04", Offset = "0x1599E04", VA = "0x1599E04")]
	public PunRPC()
	{
	}
}
[Token(Token = "0x200007F")]
public class Room : RoomInfo
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD81354", Offset = "0xD81354")]
	private string[] <PropertiesListedInLobby>k__BackingField;

	[Token(Token = "0x170000AC")]
	public new string Name
	{
		[Token(Token = "0x6000414")]
		[Address(RVA = "0x19097C8", Offset = "0x19097C8", VA = "0x19097C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000415")]
		[Address(RVA = "0x19097D0", Offset = "0x19097D0", VA = "0x19097D0")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public new bool IsOpen
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0x19097D8", Offset = "0x19097D8", VA = "0x19097D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000417")]
		[Address(RVA = "0x19097E0", Offset = "0x19097E0", VA = "0x19097E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public new bool IsVisible
	{
		[Token(Token = "0x6000418")]
		[Address(RVA = "0x19099DC", Offset = "0x19099DC", VA = "0x19099DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000419")]
		[Address(RVA = "0x19099E4", Offset = "0x19099E4", VA = "0x19099E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public string[] PropertiesListedInLobby
	{
		[Token(Token = "0x600041A")]
		[Address(RVA = "0x1909BE0", Offset = "0x1909BE0", VA = "0x1909BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91330", Offset = "0xD91330")]
		get
		{
			return null;
		}
		[Token(Token = "0x600041B")]
		[Address(RVA = "0x1909BE8", Offset = "0x1909BE8", VA = "0x1909BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91340", Offset = "0xD91340")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public bool AutoCleanUp
	{
		[Token(Token = "0x600041C")]
		[Address(RVA = "0x1909BF0", Offset = "0x1909BF0", VA = "0x1909BF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B1")]
	public new int MaxPlayers
	{
		[Token(Token = "0x600041D")]
		[Address(RVA = "0x1909BF8", Offset = "0x1909BF8", VA = "0x1909BF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1909C00", Offset = "0x1909C00", VA = "0x1909C00")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public new int PlayerCount
	{
		[Token(Token = "0x600041F")]
		[Address(RVA = "0x1909E70", Offset = "0x1909E70", VA = "0x1909E70")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B3")]
	public string[] ExpectedUsers
	{
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x1909F04", Offset = "0x1909F04", VA = "0x1909F04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B4")]
	public int PlayerTtl
	{
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1909F0C", Offset = "0x1909F0C", VA = "0x1909F0C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1909F14", Offset = "0x1909F14", VA = "0x1909F14")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public int EmptyRoomTtl
	{
		[Token(Token = "0x6000423")]
		[Address(RVA = "0x190A0A4", Offset = "0x190A0A4", VA = "0x190A0A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x190A0AC", Offset = "0x190A0AC", VA = "0x190A0AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	protected internal int MasterClientId
	{
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x190A23C", Offset = "0x190A23C", VA = "0x190A23C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x190A244", Offset = "0x190A244", VA = "0x190A244")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98344", Offset = "0xD98344")]
	public new string name
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x190B588", Offset = "0x190B588", VA = "0x190B588")]
		get
		{
			return null;
		}
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x190B590", Offset = "0x190B590", VA = "0x190B590")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9837C", Offset = "0xD9837C")]
	public new bool open
	{
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x190B598", Offset = "0x190B598", VA = "0x190B598")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x190B5A0", Offset = "0x190B5A0", VA = "0x190B5A0")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD983B4", Offset = "0xD983B4")]
	public new bool visible
	{
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x190B5A8", Offset = "0x190B5A8", VA = "0x190B5A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000433")]
		[Address(RVA = "0x190B5B0", Offset = "0x190B5B0", VA = "0x190B5B0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD983EC", Offset = "0xD983EC")]
	public string[] propertiesListedInLobby
	{
		[Token(Token = "0x6000434")]
		[Address(RVA = "0x190B5B8", Offset = "0x190B5B8", VA = "0x190B5B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000435")]
		[Address(RVA = "0x190B5C0", Offset = "0x190B5C0", VA = "0x190B5C0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98424", Offset = "0xD98424")]
	public bool autoCleanUp
	{
		[Token(Token = "0x6000436")]
		[Address(RVA = "0x190B5C8", Offset = "0x190B5C8", VA = "0x190B5C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9845C", Offset = "0xD9845C")]
	public new int maxPlayers
	{
		[Token(Token = "0x6000437")]
		[Address(RVA = "0x190B5D0", Offset = "0x190B5D0", VA = "0x190B5D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000438")]
		[Address(RVA = "0x190B5D8", Offset = "0x190B5D8", VA = "0x190B5D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98494", Offset = "0xD98494")]
	public new int playerCount
	{
		[Token(Token = "0x6000439")]
		[Address(RVA = "0x190B5DC", Offset = "0x190B5DC", VA = "0x190B5DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD984CC", Offset = "0xD984CC")]
	public string[] expectedUsers
	{
		[Token(Token = "0x600043A")]
		[Address(RVA = "0x190B5E0", Offset = "0x190B5E0", VA = "0x190B5E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98504", Offset = "0xD98504")]
	protected internal int masterClientId
	{
		[Token(Token = "0x600043B")]
		[Address(RVA = "0x190B5E8", Offset = "0x190B5E8", VA = "0x190B5E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600043C")]
		[Address(RVA = "0x190B5F0", Offset = "0x190B5F0", VA = "0x190B5F0")]
		set
		{
		}
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x190A24C", Offset = "0x190A24C", VA = "0x190A24C")]
	internal Room(string roomName, RoomOptions options)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x190AAC0", Offset = "0x190AAC0", VA = "0x190AAC0")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x190ADD4", Offset = "0x190ADD4", VA = "0x190ADD4")]
	public void SetPropertiesListedInLobby(string[] propsListedInLobby)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x190AEC4", Offset = "0x190AEC4", VA = "0x190AEC4")]
	public void ClearExpectedUsers()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x190B00C", Offset = "0x190B00C", VA = "0x190B00C")]
	public void SetExpectedUsers(string[] expectedUsers)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x190B13C", Offset = "0x190B13C", VA = "0x190B13C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x190B334", Offset = "0x190B334", VA = "0x190B334")]
	public new string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x2000080")]
public class RoomInfo
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD81364", Offset = "0xD81364")]
	private bool <removedFromList>k__BackingField;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ExitGames.Client.Photon.Hashtable customPropertiesField;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected byte maxPlayersField;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int emptyRoomTtlField;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int playerTtlField;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected string[] expectedUsersField;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool openField;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool visibleField;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	protected bool autoCleanUpField;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected string nameField;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal int masterClientIdField;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD81374", Offset = "0xD81374")]
	private bool <serverSideMasterClient>k__BackingField;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD81384", Offset = "0xD81384")]
	private int <PlayerCount>k__BackingField;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD81394", Offset = "0xD81394")]
	private bool <IsLocalClientInside>k__BackingField;

	[Token(Token = "0x170000C0")]
	public bool removedFromList
	{
		[Token(Token = "0x600043D")]
		[Address(RVA = "0x190B5F8", Offset = "0x190B5F8", VA = "0x190B5F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91350", Offset = "0xD91350")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600043E")]
		[Address(RVA = "0x190B600", Offset = "0x190B600", VA = "0x190B600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91360", Offset = "0xD91360")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	protected internal bool serverSideMasterClient
	{
		[Token(Token = "0x600043F")]
		[Address(RVA = "0x190B60C", Offset = "0x190B60C", VA = "0x190B60C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91370", Offset = "0xD91370")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000440")]
		[Address(RVA = "0x190B614", Offset = "0x190B614", VA = "0x190B614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91380", Offset = "0xD91380")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x6000441")]
		[Address(RVA = "0x190B620", Offset = "0x190B620", VA = "0x190B620")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C3")]
	public string Name
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x190B628", Offset = "0x190B628", VA = "0x190B628")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C4")]
	public int PlayerCount
	{
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x190B630", Offset = "0x190B630", VA = "0x190B630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91390", Offset = "0xD91390")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000444")]
		[Address(RVA = "0x190B638", Offset = "0x190B638", VA = "0x190B638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD913A0", Offset = "0xD913A0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public bool IsLocalClientInside
	{
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x190B640", Offset = "0x190B640", VA = "0x190B640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD913B0", Offset = "0xD913B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000446")]
		[Address(RVA = "0x190B648", Offset = "0x190B648", VA = "0x190B648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD913C0", Offset = "0xD913C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public byte MaxPlayers
	{
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x190B654", Offset = "0x190B654", VA = "0x190B654")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000C7")]
	public bool IsOpen
	{
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x190B65C", Offset = "0x190B65C", VA = "0x190B65C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C8")]
	public bool IsVisible
	{
		[Token(Token = "0x6000449")]
		[Address(RVA = "0x190B664", Offset = "0x190B664", VA = "0x190B664")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9853C", Offset = "0xD9853C")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x6000450")]
		[Address(RVA = "0x190BB84", Offset = "0x190BB84", VA = "0x190BB84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98574", Offset = "0xD98574")]
	public string name
	{
		[Token(Token = "0x6000451")]
		[Address(RVA = "0x190BB8C", Offset = "0x190BB8C", VA = "0x190BB8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD985AC", Offset = "0xD985AC")]
	public int playerCount
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x190BB94", Offset = "0x190BB94", VA = "0x190BB94")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000453")]
		[Address(RVA = "0x190BB9C", Offset = "0x190BB9C", VA = "0x190BB9C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD985E4", Offset = "0xD985E4")]
	public bool isLocalClientInside
	{
		[Token(Token = "0x6000454")]
		[Address(RVA = "0x190BBA4", Offset = "0x190BBA4", VA = "0x190BBA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x190BBAC", Offset = "0x190BBAC", VA = "0x190BBAC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9861C", Offset = "0xD9861C")]
	public byte maxPlayers
	{
		[Token(Token = "0x6000456")]
		[Address(RVA = "0x190BBB8", Offset = "0x190BBB8", VA = "0x190BBB8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000CE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98654", Offset = "0xD98654")]
	public bool open
	{
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x190BBC0", Offset = "0x190BBC0", VA = "0x190BBC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9868C", Offset = "0xD9868C")]
	public bool visible
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x190BBC8", Offset = "0x190BBC8", VA = "0x190BBC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x190A304", Offset = "0x190A304", VA = "0x190A304")]
	protected internal RoomInfo(string roomName, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x190B66C", Offset = "0x190B66C", VA = "0x190B66C", Slot = "0")]
	public override bool Equals(object other)
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x190B720", Offset = "0x190B720", VA = "0x190B720", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x190B740", Offset = "0x190B740", VA = "0x190B740", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x190B934", Offset = "0x190B934", VA = "0x190B934")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x190A4E8", Offset = "0x190A4E8", VA = "0x190A4E8")]
	protected internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
	{
	}
}
[Token(Token = "0x2000081")]
public class Region
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CloudRegionCode Code;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Cluster;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string HostAndPort;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Ping;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x19090E0", Offset = "0x19090E0", VA = "0x19090E0")]
	public Region(CloudRegionCode code)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x190917C", Offset = "0x190917C", VA = "0x190917C")]
	public Region(CloudRegionCode code, string regionCodeString, string address)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x19091BC", Offset = "0x19091BC", VA = "0x19091BC")]
	public static CloudRegionCode Parse(string codeAsString)
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1909360", Offset = "0x1909360", VA = "0x1909360")]
	internal static CloudRegionFlag ParseFlag(CloudRegionCode region)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1909530", Offset = "0x1909530", VA = "0x1909530")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD913D0", Offset = "0xD913D0")]
	internal static CloudRegionFlag ParseFlag(string codeAsString)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x19096A0", Offset = "0x19096A0", VA = "0x19096A0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000082")]
public class ServerSettings : ScriptableObject
{
	[Token(Token = "0x20003FA")]
	public enum HostingOption
	{
		[Token(Token = "0x4001C1C")]
		NotSet,
		[Token(Token = "0x4001C1D")]
		PhotonCloud,
		[Token(Token = "0x4001C1E")]
		SelfHosted,
		[Token(Token = "0x4001C1F")]
		OfflineMode,
		[Token(Token = "0x4001C20")]
		BestRegion
	}

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AppID;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string VoiceAppID;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ChatAppID;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HostingOption HostType;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public CloudRegionCode PreferredRegion;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CloudRegionFlag EnabledRegions;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ConnectionProtocol Protocol;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ServerAddress;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int ServerPort;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VoiceServerPort;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool JoinLobby;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool EnableLobbyStatistics;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public PhotonLogLevel PunLogging;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DebugLevel NetworkLogging;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool RunInBackground;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> RpcList;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool DisableAutoOpenWizard;

	[Token(Token = "0x170000D0")]
	public static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0x1513190", Offset = "0x1513190", VA = "0x1513190")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1513000", Offset = "0x1513000", VA = "0x1513000")]
	public void UseCloudBestRegion(string cloudAppid)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1513010", Offset = "0x1513010", VA = "0x1513010")]
	public void UseCloud(string cloudAppid)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1513020", Offset = "0x1513020", VA = "0x1513020")]
	public void UseCloud(string cloudAppid, CloudRegionCode code)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1513030", Offset = "0x1513030", VA = "0x1513030")]
	public void UseMyServer(string serverAddress, int serverPort, string application)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x15130BC", Offset = "0x15130BC", VA = "0x15130BC")]
	public static bool IsAppId(string val)
	{
		return default(bool);
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x15131F0", Offset = "0x15131F0", VA = "0x15131F0")]
	public static void ResetBestRegionCodeInPreferences()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1513254", Offset = "0x1513254", VA = "0x1513254", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x15133B8", Offset = "0x15133B8", VA = "0x15133B8")]
	public ServerSettings()
	{
	}
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D410", Offset = "0xD7D410")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7D410", Offset = "0xD7D410")]
public class CustomPhotonAnimatorView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x20003FB")]
	public enum ParameterType
	{
		[Token(Token = "0x4001C22")]
		Float = 1,
		[Token(Token = "0x4001C23")]
		Int = 3,
		[Token(Token = "0x4001C24")]
		Bool = 4,
		[Token(Token = "0x4001C25")]
		Trigger = 9
	}

	[Token(Token = "0x20003FC")]
	public enum SynchronizeType
	{
		[Token(Token = "0x4001C27")]
		Disabled,
		[Token(Token = "0x4001C28")]
		Discrete,
		[Token(Token = "0x4001C29")]
		Continuous
	}

	[Serializable]
	[Token(Token = "0x20003FD")]
	public class SynchronizedParameter
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterType Type;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x157BE20", Offset = "0x157BE20", VA = "0x157BE20")]
		public SynchronizedParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003FE")]
	public class SynchronizedLayer
	{
		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int LayerIndex;

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x157BC90", Offset = "0x157BC90", VA = "0x157BC90")]
		public SynchronizedLayer()
		{
		}
	}

	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8084C", Offset = "0xD8084C")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x157B7F8", Offset = "0x157B7F8", VA = "0x157B7F8")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x157C944", Offset = "0x157C944", VA = "0x157C944")]
		internal bool <DoesLayerSynchronizeTypeExist>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8085C", Offset = "0xD8085C")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x157B8D0", Offset = "0x157B8D0", VA = "0x157B8D0")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x157C968", Offset = "0x157C968", VA = "0x157C968")]
		internal bool <DoesParameterSynchronizeTypeExist>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8086C", Offset = "0xD8086C")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x157B9F4", Offset = "0x157B9F4", VA = "0x157B9F4")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x157C98C", Offset = "0x157C98C", VA = "0x157C98C")]
		internal bool <GetLayerSynchronizeType>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8087C", Offset = "0xD8087C")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x157BB08", Offset = "0x157BB08", VA = "0x157BB08")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x157C9B0", Offset = "0x157C9B0", VA = "0x157C9B0")]
		internal bool <GetParameterSynchronizeType>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8088C", Offset = "0xD8088C")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x157BC88", Offset = "0x157BC88", VA = "0x157BC88")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x157C9D4", Offset = "0x157C9D4", VA = "0x157C9D4")]
		internal bool <SetLayerSynchronized>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8089C", Offset = "0xD8089C")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x157BE18", Offset = "0x157BE18", VA = "0x157BE18")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x157C9F8", Offset = "0x157C9F8", VA = "0x157C9F8")]
		internal bool <SetParameterSynchronized>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_Animator;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonStreamQueue m_StreamQueue;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private bool ShowLayerWeightsInspector;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	[SerializeField]
	private bool ShowParameterInspector;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<SynchronizedParameter> m_SynchronizeParameters;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<SynchronizedLayer> m_SynchronizeLayers;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_ReceiverPosition;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_LastDeserializeTime;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_WasSynchronizeTypeChanged;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PhotonView m_PhotonView;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> m_raisedDiscreteTriggersCache;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x157AEB8", Offset = "0x157AEB8", VA = "0x157AEB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x157AF34", Offset = "0x157AF34", VA = "0x157AF34")]
	private void Update()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x157B36C", Offset = "0x157B36C", VA = "0x157B36C")]
	public void CacheDiscreteTriggers()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x157B728", Offset = "0x157B728", VA = "0x157B728")]
	public bool DoesLayerSynchronizeTypeExist(int layerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x157B800", Offset = "0x157B800", VA = "0x157B800")]
	public bool DoesParameterSynchronizeTypeExist(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x157B8D8", Offset = "0x157B8D8", VA = "0x157B8D8")]
	public List<SynchronizedLayer> GetSynchronizedLayers()
	{
		return null;
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x157B8E0", Offset = "0x157B8E0", VA = "0x157B8E0")]
	public List<SynchronizedParameter> GetSynchronizedParameters()
	{
		return null;
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x157B8E8", Offset = "0x157B8E8", VA = "0x157B8E8")]
	public SynchronizeType GetLayerSynchronizeType(int layerIndex)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x157B9FC", Offset = "0x157B9FC", VA = "0x157B9FC")]
	public SynchronizeType GetParameterSynchronizeType(string name)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x157BB10", Offset = "0x157BB10", VA = "0x157BB10")]
	public void SetLayerSynchronized(int layerIndex, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x157BC98", Offset = "0x157BC98", VA = "0x157BC98")]
	public void SetParameterSynchronized(string name, ParameterType type, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x157B0CC", Offset = "0x157B0CC", VA = "0x157B0CC")]
	private void SerializeDataContinuously()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x157B464", Offset = "0x157B464", VA = "0x157B464")]
	private void DeserializeDataContinuously()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x157BE28", Offset = "0x157BE28", VA = "0x157BE28")]
	private void SerializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x157C0B0", Offset = "0x157C0B0", VA = "0x157C0B0")]
	private void DeserializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x157C43C", Offset = "0x157C43C", VA = "0x157C43C")]
	private void SerializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x157C5B8", Offset = "0x157C5B8", VA = "0x157C5B8")]
	private void DeserializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x157C734", Offset = "0x157C734", VA = "0x157C734", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x157C874", Offset = "0x157C874", VA = "0x157C874")]
	public CustomPhotonAnimatorView()
	{
	}
}
[Token(Token = "0x2000084")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D498", Offset = "0xD7D498")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7D498", Offset = "0xD7D498")]
public class PhotonAnimatorView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x2000405")]
	public enum ParameterType
	{
		[Token(Token = "0x4001C36")]
		Float = 1,
		[Token(Token = "0x4001C37")]
		Int = 3,
		[Token(Token = "0x4001C38")]
		Bool = 4,
		[Token(Token = "0x4001C39")]
		Trigger = 9
	}

	[Token(Token = "0x2000406")]
	public enum SynchronizeType
	{
		[Token(Token = "0x4001C3B")]
		Disabled,
		[Token(Token = "0x4001C3C")]
		Discrete,
		[Token(Token = "0x4001C3D")]
		Continuous
	}

	[Serializable]
	[Token(Token = "0x2000407")]
	public class SynchronizedParameter
	{
		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterType Type;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x1BD3658", Offset = "0x1BD3658", VA = "0x1BD3658")]
		public SynchronizedParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000408")]
	public class SynchronizedLayer
	{
		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int LayerIndex;

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x1BD34C8", Offset = "0x1BD34C8", VA = "0x1BD34C8")]
		public SynchronizedLayer()
		{
		}
	}

	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD808AC", Offset = "0xD808AC")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x1BD3030", Offset = "0x1BD3030", VA = "0x1BD3030")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x1BD417C", Offset = "0x1BD417C", VA = "0x1BD417C")]
		internal bool <DoesLayerSynchronizeTypeExist>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200040A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD808BC", Offset = "0xD808BC")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x1BD3108", Offset = "0x1BD3108", VA = "0x1BD3108")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x1BD41A0", Offset = "0x1BD41A0", VA = "0x1BD41A0")]
		internal bool <DoesParameterSynchronizeTypeExist>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200040B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD808CC", Offset = "0xD808CC")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x1BD322C", Offset = "0x1BD322C", VA = "0x1BD322C")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x1BD41C4", Offset = "0x1BD41C4", VA = "0x1BD41C4")]
		internal bool <GetLayerSynchronizeType>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200040C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD808DC", Offset = "0xD808DC")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x1BD3340", Offset = "0x1BD3340", VA = "0x1BD3340")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x1BD41E8", Offset = "0x1BD41E8", VA = "0x1BD41E8")]
		internal bool <GetParameterSynchronizeType>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200040D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD808EC", Offset = "0xD808EC")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x1BD34C0", Offset = "0x1BD34C0", VA = "0x1BD34C0")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x1BD420C", Offset = "0x1BD420C", VA = "0x1BD420C")]
		internal bool <SetLayerSynchronized>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD808FC", Offset = "0xD808FC")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x1BD3650", Offset = "0x1BD3650", VA = "0x1BD3650")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x1BD4230", Offset = "0x1BD4230", VA = "0x1BD4230")]
		internal bool <SetParameterSynchronized>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_Animator;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonStreamQueue m_StreamQueue;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private bool ShowLayerWeightsInspector;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	[SerializeField]
	private bool ShowParameterInspector;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedParameter> m_SynchronizeParameters;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedLayer> m_SynchronizeLayers;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_ReceiverPosition;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_LastDeserializeTime;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_WasSynchronizeTypeChanged;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PhotonView m_PhotonView;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> m_raisedDiscreteTriggersCache;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x1BD2464", Offset = "0x1BD2464", VA = "0x1BD2464")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x1BD24E0", Offset = "0x1BD24E0", VA = "0x1BD24E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x1BD2BA4", Offset = "0x1BD2BA4", VA = "0x1BD2BA4")]
	public void CacheDiscreteTriggers()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1BD2F60", Offset = "0x1BD2F60", VA = "0x1BD2F60")]
	public bool DoesLayerSynchronizeTypeExist(int layerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1BD3038", Offset = "0x1BD3038", VA = "0x1BD3038")]
	public bool DoesParameterSynchronizeTypeExist(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1BD3110", Offset = "0x1BD3110", VA = "0x1BD3110")]
	public List<SynchronizedLayer> GetSynchronizedLayers()
	{
		return null;
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1BD3118", Offset = "0x1BD3118", VA = "0x1BD3118")]
	public List<SynchronizedParameter> GetSynchronizedParameters()
	{
		return null;
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1BD3120", Offset = "0x1BD3120", VA = "0x1BD3120")]
	public SynchronizeType GetLayerSynchronizeType(int layerIndex)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1BD3234", Offset = "0x1BD3234", VA = "0x1BD3234")]
	public SynchronizeType GetParameterSynchronizeType(string name)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1BD3348", Offset = "0x1BD3348", VA = "0x1BD3348")]
	public void SetLayerSynchronized(int layerIndex, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1BD34D0", Offset = "0x1BD34D0", VA = "0x1BD34D0")]
	public void SetParameterSynchronized(string name, ParameterType type, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1BD2904", Offset = "0x1BD2904", VA = "0x1BD2904")]
	private void SerializeDataContinuously()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1BD2C9C", Offset = "0x1BD2C9C", VA = "0x1BD2C9C")]
	private void DeserializeDataContinuously()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1BD3660", Offset = "0x1BD3660", VA = "0x1BD3660")]
	private void SerializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1BD38E8", Offset = "0x1BD38E8", VA = "0x1BD38E8")]
	private void DeserializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1BD3C74", Offset = "0x1BD3C74", VA = "0x1BD3C74")]
	private void SerializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1BD3DF0", Offset = "0x1BD3DF0", VA = "0x1BD3DF0")]
	private void DeserializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1BD3F6C", Offset = "0x1BD3F6C", VA = "0x1BD3F6C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1BD40AC", Offset = "0x1BD40AC", VA = "0x1BD40AC")]
	public PhotonAnimatorView()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D520", Offset = "0xD7D520")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D520", Offset = "0xD7D520")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7D520", Offset = "0xD7D520")]
public class PhotonRigidbody2DView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody2D m_Body;

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x15866B4", Offset = "0x15866B4", VA = "0x15866B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x158670C", Offset = "0x158670C", VA = "0x158670C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1586A08", Offset = "0x1586A08", VA = "0x1586A08")]
	public PhotonRigidbody2DView()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D5D0", Offset = "0xD7D5D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D5D0", Offset = "0xD7D5D0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7D5D0", Offset = "0xD7D5D0")]
public class PhotonRigidbodyView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_Body;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x1586A18", Offset = "0x1586A18", VA = "0x1586A18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1586A70", Offset = "0x1586A70", VA = "0x1586A70", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x1586C10", Offset = "0x1586C10", VA = "0x1586C10")]
	public PhotonRigidbodyView()
	{
	}
}
[Token(Token = "0x2000087")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D680", Offset = "0xD7D680")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7D680", Offset = "0xD7D680")]
public class PhotonTransformView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PhotonTransformViewPositionModel m_PositionModel;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public PhotonTransformViewRotationModel m_RotationModel;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public PhotonTransformViewScaleModel m_ScaleModel;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonTransformViewPositionControl m_PositionControl;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonTransformViewRotationControl m_RotationControl;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonTransformViewScaleControl m_ScaleControl;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_ReceivedNetworkUpdate;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_firstTake;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x15896AC", Offset = "0x15896AC", VA = "0x15896AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x15898F0", Offset = "0x15898F0", VA = "0x15898F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x15898FC", Offset = "0x15898FC", VA = "0x15898FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1589AA0", Offset = "0x1589AA0", VA = "0x1589AA0")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1589B34", Offset = "0x1589B34", VA = "0x1589B34")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1589BC8", Offset = "0x1589BC8", VA = "0x1589BC8")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x158A2C4", Offset = "0x158A2C4", VA = "0x158A2C4")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x158A2F0", Offset = "0x158A2F0", VA = "0x158A2F0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x158A7BC", Offset = "0x158A7BC", VA = "0x158A7BC")]
	private void DoDrawEstimatedPositionError()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x158AADC", Offset = "0x158AADC", VA = "0x158AADC")]
	public PhotonTransformView()
	{
	}
}
[Token(Token = "0x2000088")]
public class PhotonTransformViewPositionControl
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewPositionModel m_Model;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_CurrentSpeed;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double m_LastSerializeTime;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_SynchronizedSpeed;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_SynchronizedTurnSpeed;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_NetworkPosition;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<Vector3> m_OldNetworkPositions;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_UpdatedPositionAfterOnSerialize;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x158977C", Offset = "0x158977C", VA = "0x158977C")]
	public PhotonTransformViewPositionControl(PhotonTransformViewPositionModel model)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x158AE00", Offset = "0x158AE00", VA = "0x158AE00")]
	private Vector3 GetOldestStoredNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x158A2E4", Offset = "0x158A2E4", VA = "0x158A2E4")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1589C5C", Offset = "0x1589C5C", VA = "0x1589C5C")]
	public Vector3 UpdatePosition(Vector3 currentPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x158B178", Offset = "0x158B178", VA = "0x158B178")]
	public Vector3 GetNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x158AE74", Offset = "0x158AE74", VA = "0x158AE74")]
	public Vector3 GetExtrapolatedPositionOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x158A4CC", Offset = "0x158A4CC", VA = "0x158A4CC")]
	public void OnPhotonSerializeView(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x158B184", Offset = "0x158B184", VA = "0x158B184")]
	private void SerializeData(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x158B29C", Offset = "0x158B29C", VA = "0x158B29C")]
	private void DeserializeData(PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000089")]
public class PhotonTransformViewPositionModel
{
	[Token(Token = "0x200040F")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4001C4A")]
		Disabled,
		[Token(Token = "0x4001C4B")]
		FixedSpeed,
		[Token(Token = "0x4001C4C")]
		EstimatedSpeed,
		[Token(Token = "0x4001C4D")]
		SynchronizeValues,
		[Token(Token = "0x4001C4E")]
		Lerp
	}

	[Token(Token = "0x2000410")]
	public enum ExtrapolateOptions
	{
		[Token(Token = "0x4001C50")]
		Disabled,
		[Token(Token = "0x4001C51")]
		SynchronizeValues,
		[Token(Token = "0x4001C52")]
		EstimateSpeedAndTurn,
		[Token(Token = "0x4001C53")]
		FixedSpeed
	}

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool TeleportEnabled;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TeleportIfDistanceGreaterThan;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float InterpolateMoveTowardsAcceleration;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float InterpolateMoveTowardsDeceleration;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve InterpolateSpeedCurve;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExtrapolateOptions ExtrapolateOption;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ExtrapolateSpeed;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ExtrapolateIncludingRoundTripTime;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int ExtrapolateNumberOfStoredPositions;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool DrawErrorGizmo;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x158AB9C", Offset = "0x158AB9C", VA = "0x158AB9C")]
	public PhotonTransformViewPositionModel()
	{
	}
}
[Token(Token = "0x200008A")]
public class PhotonTransformViewRotationControl
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewRotationModel m_Model;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion m_NetworkRotation;

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1589838", Offset = "0x1589838", VA = "0x1589838")]
	public PhotonTransformViewRotationControl(PhotonTransformViewRotationModel model)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x158B444", Offset = "0x158B444", VA = "0x158B444")]
	public Quaternion GetNetworkRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1589FE8", Offset = "0x1589FE8", VA = "0x1589FE8")]
	public Quaternion GetRotation(Quaternion currentRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x158A5AC", Offset = "0x158A5AC", VA = "0x158A5AC")]
	public void OnPhotonSerializeView(Quaternion currentRotation, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x200008B")]
public class PhotonTransformViewRotationModel
{
	[Token(Token = "0x2000411")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4001C55")]
		Disabled,
		[Token(Token = "0x4001C56")]
		RotateTowards,
		[Token(Token = "0x4001C57")]
		Lerp
	}

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateRotateTowardsSpeed;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x158ADD4", Offset = "0x158ADD4", VA = "0x158ADD4")]
	public PhotonTransformViewRotationModel()
	{
	}
}
[Token(Token = "0x200008C")]
public class PhotonTransformViewScaleControl
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewScaleModel m_Model;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_NetworkScale;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1589864", Offset = "0x1589864", VA = "0x1589864")]
	public PhotonTransformViewScaleControl(PhotonTransformViewScaleModel model)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x158B450", Offset = "0x158B450", VA = "0x158B450")]
	public Vector3 GetNetworkScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x158A170", Offset = "0x158A170", VA = "0x158A170")]
	public Vector3 GetScale(Vector3 currentScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x158A6B4", Offset = "0x158A6B4", VA = "0x158A6B4")]
	public void OnPhotonSerializeView(Vector3 currentScale, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x200008D")]
public class PhotonTransformViewScaleModel
{
	[Token(Token = "0x2000412")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x4001C59")]
		Disabled,
		[Token(Token = "0x4001C5A")]
		MoveTowards,
		[Token(Token = "0x4001C5B")]
		Lerp
	}

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x158ADF0", Offset = "0x158ADF0", VA = "0x158ADF0")]
	public PhotonTransformViewScaleModel()
	{
	}
}
[Token(Token = "0x200008E")]
public class ConnectAndJoinRandom : Photon.MonoBehaviour
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AutoConnect;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte Version;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool ConnectInUpdate;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1578E68", Offset = "0x1578E68", VA = "0x1578E68", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1578ECC", Offset = "0x1578ECC", VA = "0x1578ECC", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1579014", Offset = "0x1579014", VA = "0x1579014", Slot = "6")]
	public virtual void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x15790A8", Offset = "0x15790A8", VA = "0x15790A8", Slot = "7")]
	public virtual void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x157913C", Offset = "0x157913C", VA = "0x157913C", Slot = "8")]
	public virtual void OnPhotonRandomJoinFailed()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1579208", Offset = "0x1579208", VA = "0x1579208", Slot = "9")]
	public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x15792B8", Offset = "0x15792B8", VA = "0x15792B8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1579324", Offset = "0x1579324", VA = "0x1579324")]
	public ConnectAndJoinRandom()
	{
	}
}
[Token(Token = "0x200008F")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7D708", Offset = "0xD7D708")]
public class CullArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400045C")]
	private const int MAX_NUMBER_OF_ALLOWED_CELLS = 250;

	[Token(Token = "0x400045D")]
	public const int MAX_NUMBER_OF_SUBDIVISIONS = 3;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly byte FIRST_GROUP_ID;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly int[] SUBDIVISION_FIRST_LEVEL_ORDER;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly int[] SUBDIVISION_SECOND_LEVEL_ORDER;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly int[] SUBDIVISION_THIRD_LEVEL_ORDER;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 Center;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 Size;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2[] Subdivisions;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumberOfSubdivisions;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD81594", Offset = "0xD81594")]
	private int <CellCount>k__BackingField;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD815A4", Offset = "0xD815A4")]
	private CellTree <CellTree>k__BackingField;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD815B4", Offset = "0xD815B4")]
	private Dictionary<int, GameObject> <Map>k__BackingField;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool YIsUpAxis;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool RecreateCellHierarchy;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private byte idCounter;

	[Token(Token = "0x170000D1")]
	public int CellCount
	{
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x157A238", Offset = "0x157A238", VA = "0x157A238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD913E0", Offset = "0xD913E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x157A240", Offset = "0x157A240", VA = "0x157A240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD913F0", Offset = "0xD913F0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public CellTree CellTree
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x157A248", Offset = "0x157A248", VA = "0x157A248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91400", Offset = "0xD91400")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x157A250", Offset = "0x157A250", VA = "0x157A250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91410", Offset = "0xD91410")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public Dictionary<int, GameObject> Map
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x157A258", Offset = "0x157A258", VA = "0x157A258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91420", Offset = "0xD91420")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x157A260", Offset = "0x157A260", VA = "0x157A260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91430", Offset = "0xD91430")]
		private set
		{
		}
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x157A268", Offset = "0x157A268", VA = "0x157A268")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x157A7F0", Offset = "0x157A7F0", VA = "0x157A7F0")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x157A274", Offset = "0x157A274", VA = "0x157A274")]
	private void CreateCellHierarchy()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x157A928", Offset = "0x157A928", VA = "0x157A928")]
	private void CreateChildCells(CellTreeNode parent, int cellLevelInHierarchy)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x157A83C", Offset = "0x157A83C", VA = "0x157A83C")]
	private void DrawCells()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x157A85C", Offset = "0x157A85C", VA = "0x157A85C")]
	private bool IsCellCountAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x157ACF0", Offset = "0x157ACF0", VA = "0x157ACF0")]
	public List<byte> GetActiveCells(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x157ADA4", Offset = "0x157ADA4", VA = "0x157ADA4")]
	public CullArea()
	{
	}
}
[Token(Token = "0x2000090")]
public class CellTree
{
	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD815C4", Offset = "0xD815C4")]
	private CellTreeNode <RootNode>k__BackingField;

	[Token(Token = "0x170000D4")]
	public CellTreeNode RootNode
	{
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x15756DC", Offset = "0x15756DC", VA = "0x15756DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91440", Offset = "0xD91440")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x15756E4", Offset = "0x15756E4", VA = "0x15756E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91450", Offset = "0xD91450")]
		private set
		{
		}
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x15756EC", Offset = "0x15756EC", VA = "0x15756EC")]
	public CellTree()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x15756F4", Offset = "0x15756F4", VA = "0x15756F4")]
	public CellTree(CellTreeNode root)
	{
	}
}
[Token(Token = "0x2000091")]
public class CellTreeNode
{
	[Token(Token = "0x2000413")]
	public enum ENodeType
	{
		[Token(Token = "0x4001C5D")]
		Root,
		[Token(Token = "0x4001C5E")]
		Node,
		[Token(Token = "0x4001C5F")]
		Leaf
	}

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public byte Id;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 Center;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Size;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 TopLeft;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 BottomRight;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ENodeType NodeType;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellTreeNode Parent;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<CellTreeNode> Childs;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float maxDistance;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1575720", Offset = "0x1575720", VA = "0x1575720")]
	public CellTreeNode()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1575728", Offset = "0x1575728", VA = "0x1575728")]
	public CellTreeNode(byte id, ENodeType nodeType, CellTreeNode parent)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x157576C", Offset = "0x157576C", VA = "0x157576C")]
	public void AddChild(CellTreeNode child)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1575808", Offset = "0x1575808", VA = "0x1575808")]
	public void Draw()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x157580C", Offset = "0x157580C", VA = "0x157580C")]
	public void GetActiveCells(List<byte> activeCells, bool yIsUpAxis, Vector3 position)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1575AEC", Offset = "0x1575AEC", VA = "0x1575AEC")]
	public bool IsPointInsideCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x15759E4", Offset = "0x15759E4", VA = "0x15759E4")]
	public bool IsPointNearCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000092")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D740", Offset = "0xD7D740")]
public class InRoomChat : Photon.MonoBehaviour
{
	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect GuiRect;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsVisible;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool AlignBottom;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> messages;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string inputLine;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 scrollPos;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string ChatRPC;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x170A60C", Offset = "0x170A60C", VA = "0x170A60C")]
	public void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x170A65C", Offset = "0x170A65C", VA = "0x170A65C")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x170ACD8", Offset = "0x170ACD8", VA = "0x170ACD8")]
	[PunRPC]
	public void Chat(string newLine, PhotonMessageInfo mi)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x170ADE0", Offset = "0x170ADE0", VA = "0x170ADE0")]
	public void AddLine(string newLine)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x170AE48", Offset = "0x170AE48", VA = "0x170AE48")]
	public InRoomChat()
	{
	}
}
[Token(Token = "0x2000093")]
public class InputToEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject lastGo;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 inputHitPos;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DetectPointedAtGameObject;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD815D4", Offset = "0xD815D4")]
	private static GameObject <goPointedAt>k__BackingField;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 pressedPosition;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currentPos;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Dragging;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera m_Camera;

	[Token(Token = "0x170000D5")]
	public static GameObject goPointedAt
	{
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x170C4B0", Offset = "0x170C4B0", VA = "0x170C4B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91470", Offset = "0xD91470")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x170C500", Offset = "0x170C500", VA = "0x170C500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91480", Offset = "0xD91480")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public Vector2 DragVector
	{
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x170C554", Offset = "0x170C554", VA = "0x170C554")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x170C620", Offset = "0x170C620", VA = "0x170C620")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x170C678", Offset = "0x170C678", VA = "0x170C678")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x170CAEC", Offset = "0x170CAEC", VA = "0x170CAEC")]
	private void Press(Vector2 screenPos)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x170CBC4", Offset = "0x170CBC4", VA = "0x170CBC4")]
	private void Release(Vector2 screenPos)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x170C9C8", Offset = "0x170C9C8", VA = "0x170C9C8")]
	private GameObject RaycastObject(Vector2 screenPos)
	{
		return null;
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x170CD14", Offset = "0x170CD14", VA = "0x170CD14")]
	public InputToEvent()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D7A4", Offset = "0xD7D7A4")]
public class ManualPhotonViewAllocator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x18DBA9C", Offset = "0x18DBA9C", VA = "0x18DBA9C")]
	public void AllocateManualPhotonView()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x18DBC6C", Offset = "0x18DBC6C", VA = "0x18DBC6C")]
	[PunRPC]
	public void InstantiateRpc(int viewID)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x18DBE58", Offset = "0x18DBE58", VA = "0x18DBE58")]
	public ManualPhotonViewAllocator()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D808", Offset = "0xD7D808")]
public class MoveByKeys : Photon.MonoBehaviour
{
	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float JumpForce;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float JumpTimeout;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isSprite;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float jumpingTime;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody body;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody2D body2d;

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x13D84E0", Offset = "0x13D84E0", VA = "0x13D84E0")]
	public void Start()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x13D85A4", Offset = "0x13D85A4", VA = "0x13D85A4")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x13D8A14", Offset = "0x13D8A14", VA = "0x13D8A14")]
	public MoveByKeys()
	{
	}
}
[Token(Token = "0x2000096")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D86C", Offset = "0xD7D86C")]
public class NetworkCullingHandler : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int orderIndex;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CullArea cullArea;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> previousActiveCells;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> activeCells;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonView pView;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 currentPosition;

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x13D989C", Offset = "0x13D989C", VA = "0x13D989C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x13D9A10", Offset = "0x13D9A10", VA = "0x13D9A10")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x13D9B18", Offset = "0x13D9B18", VA = "0x13D9B18")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x13D9F98", Offset = "0x13D9F98", VA = "0x13D9F98")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x13D9C38", Offset = "0x13D9C38", VA = "0x13D9C38")]
	private bool HaveActiveCellsChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x13D9DB4", Offset = "0x13D9DB4", VA = "0x13D9DB4")]
	private void UpdateInterestGroups()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x13DA360", Offset = "0x13DA360", VA = "0x13DA360", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x13DA4DC", Offset = "0x13DA4DC", VA = "0x13DA4DC")]
	public NetworkCullingHandler()
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D8D0", Offset = "0xD7D8D0")]
public class OnClickDestroy : Photon.MonoBehaviour
{
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8090C", Offset = "0xD8090C")]
	private sealed class <DestroyRpc>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnClickDestroy <>4__this;

		[Token(Token = "0x170003A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x1BC60FC", Offset = "0x1BC60FC", VA = "0x1BC60FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x1BC6164", Offset = "0x1BC6164", VA = "0x1BC6164", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x1BC5E34", Offset = "0x1BC5E34", VA = "0x1BC5E34")]
		[DebuggerHidden]
		public <DestroyRpc>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x1BC5E68", Offset = "0x1BC5E68", VA = "0x1BC5E68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x1BC5E6C", Offset = "0x1BC5E6C", VA = "0x1BC5E6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x1BC6104", Offset = "0x1BC6104", VA = "0x1BC6104", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DestroyByRpc;

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1BC5B58", Offset = "0x1BC5B58", VA = "0x1BC5B58")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1BC5DC4", Offset = "0x1BC5DC4", VA = "0x1BC5DC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD914A0", Offset = "0xD914A0")]
	[PunRPC]
	public IEnumerator DestroyRpc()
	{
		return null;
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1BC5E60", Offset = "0x1BC5E60", VA = "0x1BC5E60")]
	public OnClickDestroy()
	{
	}
}
[Token(Token = "0x2000098")]
public class OnClickInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int InstantiateType;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] InstantiateTypeNames;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showGui;

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1BC616C", Offset = "0x1BC616C", VA = "0x1BC616C")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x1BC6BE4", Offset = "0x1BC6BE4", VA = "0x1BC6BE4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x1BC6D38", Offset = "0x1BC6D38", VA = "0x1BC6D38")]
	public OnClickInstantiate()
	{
	}
}
[Token(Token = "0x2000099")]
public class OnJoinedInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SpawnPosition;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PositionOffset;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] PrefabsToInstantiate;

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1BC7068", Offset = "0x1BC7068", VA = "0x1BC7068")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1BC7350", Offset = "0x1BC7350", VA = "0x1BC7350")]
	public OnJoinedInstantiate()
	{
	}
}
[Token(Token = "0x200009A")]
public class OnStartDelete : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1BC7444", Offset = "0x1BC7444", VA = "0x1BC7444")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1BC74C0", Offset = "0x1BC74C0", VA = "0x1BC74C0")]
	public OnStartDelete()
	{
	}
}
[Token(Token = "0x200009B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D934", Offset = "0xD7D934")]
public class PickupItem : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnTrigger;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool PickupIsMine;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.MonoBehaviour OnPickedUpCall;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool SentPickup;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double TimeOfRespawn;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HashSet<PickupItem> DisabledPickupItems;

	[Token(Token = "0x170000D7")]
	public int ViewID
	{
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x15967B4", Offset = "0x15967B4", VA = "0x15967B4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x15967D8", Offset = "0x15967D8", VA = "0x15967D8")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x15969C4", Offset = "0x15969C4", VA = "0x15969C4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x15968A4", Offset = "0x15968A4", VA = "0x15968A4")]
	public void Pickup()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1596568", Offset = "0x1596568", VA = "0x1596568")]
	public void Drop()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1596680", Offset = "0x1596680", VA = "0x1596680")]
	public void Drop(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1596B14", Offset = "0x1596B14", VA = "0x1596B14")]
	[PunRPC]
	public void PunPickup(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1596EF8", Offset = "0x1596EF8", VA = "0x1596EF8")]
	internal void PickedUp(float timeUntilRespawn)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1597010", Offset = "0x1597010", VA = "0x1597010")]
	[PunRPC]
	internal void PunRespawn(Vector3 pos)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x15970D8", Offset = "0x15970D8", VA = "0x15970D8")]
	[PunRPC]
	internal void PunRespawn()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x15971D4", Offset = "0x15971D4", VA = "0x15971D4")]
	public PickupItem()
	{
	}
}
[Token(Token = "0x200009C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D998", Offset = "0xD7D998")]
public class PickupItemSimple : Photon.MonoBehaviour
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnCollide;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool SentPickup;

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x1597258", Offset = "0x1597258", VA = "0x1597258")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1597324", Offset = "0x1597324", VA = "0x1597324")]
	public void Pickup()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1597444", Offset = "0x1597444", VA = "0x1597444")]
	[PunRPC]
	public void PunPickupSimple(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x15975E8", Offset = "0x15975E8", VA = "0x15975E8")]
	public void RespawnAfter()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1597698", Offset = "0x1597698", VA = "0x1597698")]
	public PickupItemSimple()
	{
	}
}
[Token(Token = "0x200009D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7D9FC", Offset = "0xD7D9FC")]
public class PickupItemSyncer : Photon.MonoBehaviour
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsWaitingForPickupInit;

	[Token(Token = "0x40004A7")]
	private const float TimeDeltaToIgnore = 0.2f;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x15976A8", Offset = "0x15976A8", VA = "0x15976A8")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1597EB8", Offset = "0x1597EB8", VA = "0x1597EB8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x15980E4", Offset = "0x15980E4", VA = "0x15980E4")]
	public void AskForPickupItemSpawnTimes()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x1598360", Offset = "0x1598360", VA = "0x1598360")]
	[PunRPC]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD91554", Offset = "0xD91554")]
	public void RequestForPickupTimes(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x1598390", Offset = "0x1598390", VA = "0x1598390")]
	[PunRPC]
	public void RequestForPickupItems(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1597738", Offset = "0x1597738", VA = "0x1597738")]
	private void SendPickedUpItems(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x1598428", Offset = "0x1598428", VA = "0x1598428")]
	[PunRPC]
	public void PickupItemInit(double timeBase, float[] inactivePickupsAndTimes)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x15987C8", Offset = "0x15987C8", VA = "0x15987C8")]
	public PickupItemSyncer()
	{
	}
}
[Token(Token = "0x200009E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7DA60", Offset = "0xD7DA60")]
public class PointedAtGameObjectInfo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000513")]
	[Address(RVA = "0x1599B34", Offset = "0x1599B34", VA = "0x1599B34")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x1599DEC", Offset = "0x1599DEC", VA = "0x1599DEC")]
	public PointedAtGameObjectInfo()
	{
	}
}
[Token(Token = "0x200009F")]
public class PunPlayerScores : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004A8")]
	public const string PlayerScoreProp = "score";

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1599DFC", Offset = "0x1599DFC", VA = "0x1599DFC")]
	public PunPlayerScores()
	{
	}
}
[Token(Token = "0x20000A0")]
public static class ScoreExtensions
{
	[Token(Token = "0x6000516")]
	[Address(RVA = "0x1512D58", Offset = "0x1512D58", VA = "0x1512D58")]
	public static void SetScore(this PhotonPlayer player, int newScore)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x15106B4", Offset = "0x15106B4", VA = "0x15106B4")]
	public static void AddScore(this PhotonPlayer player, int scoreToAddToCurrent)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1510998", Offset = "0x1510998", VA = "0x1510998")]
	public static int GetScore(this PhotonPlayer player)
	{
		return default(int);
	}
}
[Token(Token = "0x20000A1")]
public class PunTeams : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000415")]
	public enum Team : byte
	{
		[Token(Token = "0x4001C64")]
		none,
		[Token(Token = "0x4001C65")]
		red,
		[Token(Token = "0x4001C66")]
		blue
	}

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Team, List<PhotonPlayer>> PlayersPerTeam;

	[Token(Token = "0x40004AA")]
	public const string TeamPlayerProp = "team";

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1599E0C", Offset = "0x1599E0C", VA = "0x1599E0C")]
	public void Start()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x159A148", Offset = "0x159A148", VA = "0x159A148")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x159A1BC", Offset = "0x159A1BC", VA = "0x159A1BC")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x159A584", Offset = "0x159A584", VA = "0x159A584")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x159A588", Offset = "0x159A588", VA = "0x159A588")]
	public void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x159A58C", Offset = "0x159A58C", VA = "0x159A58C")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x159A590", Offset = "0x159A590", VA = "0x159A590")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x159A1C0", Offset = "0x159A1C0", VA = "0x159A1C0")]
	public void UpdateTeams()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x159A594", Offset = "0x159A594", VA = "0x159A594")]
	public PunTeams()
	{
	}
}
[Token(Token = "0x20000A2")]
public static class TeamExtensions
{
	[Token(Token = "0x6000522")]
	[Address(RVA = "0x193B18C", Offset = "0x193B18C", VA = "0x193B18C")]
	public static PunTeams.Team GetTeam(this PhotonPlayer player)
	{
		return default(PunTeams.Team);
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x193B248", Offset = "0x193B248", VA = "0x193B248")]
	public static void SetTeam(this PhotonPlayer player, PunTeams.Team team)
	{
	}
}
[Token(Token = "0x20000A3")]
public class PunTurnManager : PunBehaviour
{
	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TurnDuration;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IPunTurnManagerCallbacks TurnManagerListener;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly HashSet<PhotonPlayer> finishedPlayers;

	[Token(Token = "0x40004AE")]
	public const byte TurnManagerEventOffset = 0;

	[Token(Token = "0x40004AF")]
	public const byte EvMove = 1;

	[Token(Token = "0x40004B0")]
	public const byte EvFinalMove = 2;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOverCallProcessed;

	[Token(Token = "0x170000D8")]
	public int Turn
	{
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x159A59C", Offset = "0x159A59C", VA = "0x159A59C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x159A630", Offset = "0x159A630", VA = "0x159A630")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public float ElapsedTimeInTurn
	{
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x159A6E0", Offset = "0x159A6E0", VA = "0x159A6E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000DA")]
	public float RemainingSecondsInTurn
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x159A798", Offset = "0x159A798", VA = "0x159A798")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000DB")]
	public bool IsCompletedByAll
	{
		[Token(Token = "0x6000528")]
		[Address(RVA = "0x159A818", Offset = "0x159A818", VA = "0x159A818")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DC")]
	public bool IsFinishedByMe
	{
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x159A8DC", Offset = "0x159A8DC", VA = "0x159A8DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DD")]
	public bool IsOver
	{
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x159A964", Offset = "0x159A964", VA = "0x159A964")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x159A980", Offset = "0x159A980", VA = "0x159A980")]
	private void Start()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x159AA14", Offset = "0x159AA14", VA = "0x159AA14")]
	private void Update()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x159AB0C", Offset = "0x159AB0C", VA = "0x159AB0C")]
	public void BeginTurn()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x159AB34", Offset = "0x159AB34", VA = "0x159AB34")]
	public void SendMove(object move, bool finished)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x159B0FC", Offset = "0x159B0FC", VA = "0x159B0FC")]
	public bool GetPlayerFinishedTurn(PhotonPlayer player)
	{
		return default(bool);
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x159AD74", Offset = "0x159AD74", VA = "0x159AD74")]
	public void OnEvent(byte eventCode, object content, int senderId)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x159B178", Offset = "0x159B178", VA = "0x159B178", Slot = "52")]
	public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x159B294", Offset = "0x159B294", VA = "0x159B294")]
	public PunTurnManager()
	{
	}
}
[Token(Token = "0x20000A4")]
public interface IPunTurnManagerCallbacks
{
	[Token(Token = "0x6000533")]
	void OnTurnBegins(int turn);

	[Token(Token = "0x6000534")]
	void OnTurnCompleted(int turn);

	[Token(Token = "0x6000535")]
	void OnPlayerMove(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x6000536")]
	void OnPlayerFinished(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x6000537")]
	void OnTurnTimeEnds(int turn);
}
[Token(Token = "0x20000A5")]
public static class TurnExtensions
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string TurnPropKey;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string TurnStartPropKey;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string FinishedTurnPropKey;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x193E8D0", Offset = "0x193E8D0", VA = "0x193E8D0")]
	public static void SetTurn(this Room room, int turn, bool setStartTime = false)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x193EA4C", Offset = "0x193EA4C", VA = "0x193EA4C")]
	public static int GetTurn(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x193EB58", Offset = "0x193EB58", VA = "0x193EB58")]
	public static int GetTurnStart(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x193EC64", Offset = "0x193EC64", VA = "0x193EC64")]
	public static int GetFinishedTurn(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x193EDD0", Offset = "0x193EDD0", VA = "0x193EDD0")]
	public static void SetFinishedTurn(this PhotonPlayer player, int turn)
	{
	}
}
[Token(Token = "0x20000A6")]
public class QuitOnEscapeOrBack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1906AE4", Offset = "0x1906AE4", VA = "0x1906AE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1906B10", Offset = "0x1906B10", VA = "0x1906B10")]
	public QuitOnEscapeOrBack()
	{
	}
}
[Token(Token = "0x20000A7")]
public class ShowStatusWhenConnecting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUISkin Skin;

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1513D68", Offset = "0x1513D68", VA = "0x1513D68")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x15140D8", Offset = "0x15140D8", VA = "0x15140D8")]
	private string GetConnectingDots()
	{
		return null;
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x15141A8", Offset = "0x15141A8", VA = "0x15141A8")]
	public ShowStatusWhenConnecting()
	{
	}
}
[Token(Token = "0x20000A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7DAF4", Offset = "0xD7DAF4")]
public class SmoothSyncMovement : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SmoothingDelay;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 correctPlayerPos;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion correctPlayerRot;

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x151C9A4", Offset = "0x151C9A4", VA = "0x151C9A4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x151CB38", Offset = "0x151CB38", VA = "0x151CB38", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x151CCB0", Offset = "0x151CCB0", VA = "0x151CCB0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x151CE9C", Offset = "0x151CE9C", VA = "0x151CE9C")]
	public SmoothSyncMovement()
	{
	}
}
[Token(Token = "0x20000A9")]
public class SupportLogger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x151D258", Offset = "0x151D258", VA = "0x151D258")]
	public void Start()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x151D35C", Offset = "0x151D35C", VA = "0x151D35C")]
	public SupportLogger()
	{
	}
}
[Token(Token = "0x20000AA")]
public class SupportLogging : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x151D36C", Offset = "0x151D36C", VA = "0x151D36C")]
	public void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x151D3DC", Offset = "0x151D3DC", VA = "0x151D3DC")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x151D4D4", Offset = "0x151D4D4", VA = "0x151D4D4")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x151D4DC", Offset = "0x151D4DC", VA = "0x151D4DC")]
	public void LogStats()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x151D5A4", Offset = "0x151D5A4", VA = "0x151D5A4")]
	private void LogBasics()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x151D7C8", Offset = "0x151D7C8", VA = "0x151D7C8")]
	public void OnConnectedToPhoton()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x151D87C", Offset = "0x151D87C", VA = "0x151D87C")]
	public void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x151D93C", Offset = "0x151D93C", VA = "0x151D93C")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x151D9F8", Offset = "0x151D9F8", VA = "0x151D9F8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x151DBFC", Offset = "0x151DBFC", VA = "0x151DBFC")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x151DE00", Offset = "0x151DE00", VA = "0x151DE00")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x151DE6C", Offset = "0x151DE6C", VA = "0x151DE6C")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x151DED8", Offset = "0x151DED8", VA = "0x151DED8")]
	public SupportLogging()
	{
	}
}
[Token(Token = "0x20000AB")]
public class AndroidAudioInAEC : IAudioPusher<short>, IAudioSource, IDisposable
{
	[Token(Token = "0x2000416")]
	private class DataCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<short[]> callback;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IntPtr javaBuf;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int cntFrame;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int cntShort;

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x1A3317C", Offset = "0x1A3317C", VA = "0x1A3317C")]
		public DataCallback(Action<short[]> callback, IntPtr javaBuf)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x1A33218", Offset = "0x1A33218", VA = "0x1A33218")]
		public void OnData()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x1A332A0", Offset = "0x1A332A0", VA = "0x1A332A0")]
		public void OnStop()
		{
		}
	}

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject audioIn;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr javaBuf;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DataCallback callback;

	[Token(Token = "0x170000DE")]
	public int Channels
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x1A33210", Offset = "0x1A33210", VA = "0x1A33210", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DF")]
	public int SamplingRate
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1A33208", Offset = "0x1A33208", VA = "0x1A33208", Slot = "5")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1A32810", Offset = "0x1A32810", VA = "0x1A32810")]
	public AndroidAudioInAEC()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1A32818", Offset = "0x1A32818", VA = "0x1A32818", Slot = "4")]
	public void SetCallback(Action<short[]> callback, LocalVoice localVoice)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x1A33080", Offset = "0x1A33080", VA = "0x1A33080", Slot = "7")]
	public void Dispose()
	{
	}
}
[Token(Token = "0x20000AC")]
public class AudioClipWrapper : IAudioReader<float>, IDataReader<float>, IDisposable, IAudioSource
{
	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioClip audioClip;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int readPos;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD815E4", Offset = "0xD815E4")]
	private bool <Loop>k__BackingField;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool playing;

	[Token(Token = "0x170000E0")]
	public bool Loop
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x1A332AC", Offset = "0x1A332AC", VA = "0x1A332AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91660", Offset = "0xD91660")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x1A332B4", Offset = "0x1A332B4", VA = "0x1A332B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91670", Offset = "0xD91670")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public int SamplingRate
	{
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1A33418", Offset = "0x1A33418", VA = "0x1A33418", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E2")]
	public int Channels
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x1A33434", Offset = "0x1A33434", VA = "0x1A33434", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x1A332C0", Offset = "0x1A332C0", VA = "0x1A332C0")]
	public AudioClipWrapper(AudioClip audioClip)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x1A33300", Offset = "0x1A33300", VA = "0x1A33300", Slot = "4")]
	public bool Read(float[] buffer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x1A33450", Offset = "0x1A33450", VA = "0x1A33450", Slot = "5")]
	public void Dispose()
	{
	}
}
[Token(Token = "0x20000AD")]
public class AudioOutCapture : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x14000002")]
	public event Action<float[], int> OnAudioFrame
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1A33454", Offset = "0x1A33454", VA = "0x1A33454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91680", Offset = "0xD91680")]
		add
		{
		}
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x1A334F8", Offset = "0x1A334F8", VA = "0x1A334F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91690", Offset = "0xD91690")]
		remove
		{
		}
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x1A3359C", Offset = "0x1A3359C", VA = "0x1A3359C")]
	private void OnAudioFilterRead(float[] frame, int channels)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x1A33618", Offset = "0x1A33618", VA = "0x1A33618")]
	public AudioOutCapture()
	{
	}
}
[Token(Token = "0x20000AE")]
public class AudioStreamPlayer : IAudioOut
{
	[Token(Token = "0x40004C4")]
	private const int maxPlayLagMs = 100;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int maxPlayLagSamples;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int playDelaySamples;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int bufferSamples;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int channels;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frameSize;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int frameSamples;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int streamSamplePos;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD81604", Offset = "0xD81604")]
	private int <CurrentBufferLag>k__BackingField;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int streamSamplePosAvg;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource source;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string logPrefix;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool debugInfo;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int sourceTimeSamplesPrev;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int playLoopCount;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Queue<float[]> frameQueue;

	[Token(Token = "0x40004D4")]
	public const int FRAME_POOL_CAPACITY = 50;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PrimitiveArrayPool<float> framePool;

	[Token(Token = "0x170000E3")]
	public int CurrentBufferLag
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x1A337F4", Offset = "0x1A337F4", VA = "0x1A337F4", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD916A0", Offset = "0xD916A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x1A337FC", Offset = "0x1A337FC", VA = "0x1A337FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD916B0", Offset = "0xD916B0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public AudioSource AudioSource
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x1A33804", Offset = "0x1A33804", VA = "0x1A33804")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E5")]
	private int playSamplePos
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x1A338E0", Offset = "0x1A338E0", VA = "0x1A338E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x1A33994", Offset = "0x1A33994", VA = "0x1A33994")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public bool IsPlaying
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x1A33A78", Offset = "0x1A33A78", VA = "0x1A33A78", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x1A3380C", Offset = "0x1A3380C", VA = "0x1A3380C")]
	public AudioStreamPlayer(AudioSource audioSource, string logPrefix, bool debugInfo)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1A33A94", Offset = "0x1A33A94", VA = "0x1A33A94", Slot = "5")]
	public void Start(int frequency, int channels, int frameSamples, int playDelayMs)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1A33C00", Offset = "0x1A33C00", VA = "0x1A33C00", Slot = "8")]
	public void Service()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1A34264", Offset = "0x1A34264", VA = "0x1A34264", Slot = "7")]
	public void OnAudioFrame(float[] frame)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x1A344B0", Offset = "0x1A344B0", VA = "0x1A344B0", Slot = "6")]
	public void Stop()
	{
	}
}
[Token(Token = "0x20000AF")]
public class IOSAudioForceToSpeaker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000571")]
	[Address(RVA = "0x170A154", Offset = "0x170A154", VA = "0x170A154")]
	private void PhotonVoiceCreated()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x170A158", Offset = "0x170A158", VA = "0x170A158")]
	public IOSAudioForceToSpeaker()
	{
	}
}
[Token(Token = "0x20000B0")]
public class MicWrapper : IAudioReader<float>, IDataReader<float>, IDisposable, IAudioSource
{
	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioClip mic;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string device;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int micPrevPos;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int micLoopCnt;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int readAbsPos;

	[Token(Token = "0x170000E7")]
	public int SamplingRate
	{
		[Token(Token = "0x6000574")]
		[Address(RVA = "0x15C40F0", Offset = "0x15C40F0", VA = "0x15C40F0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E8")]
	public int Channels
	{
		[Token(Token = "0x6000575")]
		[Address(RVA = "0x15C410C", Offset = "0x15C410C", VA = "0x15C410C", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x15C3EE4", Offset = "0x15C3EE4", VA = "0x15C3EE4")]
	public MicWrapper(string device, int suggestedFrequency)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x15C4128", Offset = "0x15C4128", VA = "0x15C4128", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x15C4134", Offset = "0x15C4134", VA = "0x15C4134", Slot = "4")]
	public bool Read(float[] buffer)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000B1")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7DB58", Offset = "0xD7DB58")]
[ImageEffectAllowedInSceneView]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7DB58", Offset = "0xD7DB58")]
public class AmplifyOcclusionEffect : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000417")]
	public enum ApplicationMethod
	{
		[Token(Token = "0x4001C6C")]
		PostEffect,
		[Token(Token = "0x4001C6D")]
		Deferred,
		[Token(Token = "0x4001C6E")]
		Debug
	}

	[Token(Token = "0x2000418")]
	public enum PerPixelNormalSource
	{
		[Token(Token = "0x4001C70")]
		None,
		[Token(Token = "0x4001C71")]
		Camera,
		[Token(Token = "0x4001C72")]
		GBuffer,
		[Token(Token = "0x4001C73")]
		GBufferOctaEncoded
	}

	[Token(Token = "0x2000419")]
	private struct CmdBuffer
	{
		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CommandBuffer cmdBuffer;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CameraEvent cmdBufferEvent;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string cmdBufferName;
	}

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int m_nextID;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_myID;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_myIDstring;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_oneOverDepthScale;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD81614", Offset = "0xD81614")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81614", Offset = "0xD81614")]
	public ApplicationMethod ApplyMethod;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81674", Offset = "0xD81674")]
	public SampleCountLevel SampleCount;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD816AC", Offset = "0xD816AC")]
	public PerPixelNormalSource PerPixelNormals;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD816E4", Offset = "0xD816E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD816E4", Offset = "0xD816E4")]
	public float Intensity;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81738", Offset = "0xD81738")]
	public Color Tint;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81770", Offset = "0xD81770")]
	public float Radius;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD817A8", Offset = "0xD817A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD817A8", Offset = "0xD817A8")]
	public float PowerExponent;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD817FC", Offset = "0xD817FC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD817FC", Offset = "0xD817FC")]
	public float Bias;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81854", Offset = "0xD81854")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD81854", Offset = "0xD81854")]
	public float Thickness;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD818A8", Offset = "0xD818A8")]
	public bool Downsample;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD818E0", Offset = "0xD818E0")]
	public bool CacheAware;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD81918", Offset = "0xD81918")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81918", Offset = "0xD81918")]
	public bool FadeEnabled;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81978", Offset = "0xD81978")]
	public float FadeStart;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD819B0", Offset = "0xD819B0")]
	public float FadeLength;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD819E8", Offset = "0xD819E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD819E8", Offset = "0xD819E8")]
	public float FadeToIntensity;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color FadeToTint;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81A3C", Offset = "0xD81A3C")]
	public float FadeToRadius;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81A74", Offset = "0xD81A74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD81A74", Offset = "0xD81A74")]
	public float FadeToPowerExponent;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81AC8", Offset = "0xD81AC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD81AC8", Offset = "0xD81AC8")]
	public float FadeToThickness;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD81B1C", Offset = "0xD81B1C")]
	public bool BlurEnabled;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81B54", Offset = "0xD81B54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD81B54", Offset = "0xD81B54")]
	public int BlurRadius;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81BA8", Offset = "0xD81BA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD81BA8", Offset = "0xD81BA8")]
	public int BlurPasses;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81BFC", Offset = "0xD81BFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD81BFC", Offset = "0xD81BFC")]
	public float BlurSharpness;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD81C50", Offset = "0xD81C50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81C50", Offset = "0xD81C50")]
	public bool FilterEnabled;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool FilterDownsample;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81CB0", Offset = "0xD81CB0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD81CB0", Offset = "0xD81CB0")]
	public float FilterBlending;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD81D04", Offset = "0xD81D04")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD81D04", Offset = "0xD81D04")]
	public float FilterResponse;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool m_HDR;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool m_MSAA;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PerPixelNormalSource m_prevPerPixelNormals;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ApplicationMethod m_prevApplyMethod;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool m_prevDeferredReflections;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private SampleCountLevel m_prevSampleCount;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool m_prevDownsample;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool m_prevCacheAware;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool m_prevBlurEnabled;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int m_prevBlurRadius;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int m_prevBlurPasses;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool m_prevFilterEnabled;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	private bool m_prevFilterDownsample;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
	private bool m_prevHDR;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC7")]
	private bool m_prevMSAA;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Camera m_targetCamera;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RenderTargetIdentifier[] applyDebugTargetsTemporal;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTargetIdentifier[] applyDeferredTargets_Log_Temporal;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RenderTargetIdentifier[] applyDeferredTargetsTemporal;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private RenderTargetIdentifier[] applyOcclusionTemporal;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private RenderTargetIdentifier[] applyPostEffectTargetsTemporal;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool useMRTBlendingFallback;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool checkedforMRTBlendingFallback;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private CmdBuffer m_commandBuffer_Parameters;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private CmdBuffer m_commandBuffer_Occlusion;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private CmdBuffer m_commandBuffer_Apply;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Mesh m_quadMesh;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Material m_occlusionMat;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Material m_blurMat;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Material m_applyOcclusionMat;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private RenderTextureFormat m_occlusionRTFormat;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private RenderTextureFormat m_accumTemporalRTFormat;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private RenderTextureFormat m_temporaryEmissionRTFormat;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private RenderTextureFormat m_motionIntensityRTFormat;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool m_paramsChanged;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool m_clearHistory;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private RenderTexture m_occlusionDepthRT;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private RenderTexture[] m_temporalAccumRT;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private RenderTexture m_depthMipmap;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private uint m_sampleStep;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private uint m_curTemporalIdx;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private uint m_prevTemporalIdx;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] m_tmpMipString;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int m_numberMips;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private readonly RenderTargetIdentifier[] m_applyDeferredTargets;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private readonly RenderTargetIdentifier[] m_applyDeferredTargets_Log;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private TargetDesc m_target;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private AmplifyOcclusionViewProjMatrix m_viewProjMatrix;

	[Token(Token = "0x170000E9")]
	private bool UsingTemporalFilter
	{
		[Token(Token = "0x6000578")]
		[Address(RVA = "0x1A2D2C8", Offset = "0x1A2D2C8", VA = "0x1A2D2C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EA")]
	private bool UsingMotionVectors
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1A2D30C", Offset = "0x1A2D30C", VA = "0x1A2D30C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EB")]
	private bool UsingFilterDownsample
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1A2D344", Offset = "0x1A2D344", VA = "0x1A2D344")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1A2D360", Offset = "0x1A2D360", VA = "0x1A2D360")]
	private void createCommandBuffer(ref CmdBuffer aCmdBuffer, string aCmdBufferName, CameraEvent aCameraEvent)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1A2D424", Offset = "0x1A2D424", VA = "0x1A2D424")]
	private void cleanupCommandBuffer(ref CmdBuffer aCmdBuffer)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1A2D4FC", Offset = "0x1A2D4FC", VA = "0x1A2D4FC")]
	private void createQuadMesh()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1A2D91C", Offset = "0x1A2D91C", VA = "0x1A2D91C")]
	private void PerformBlit(CommandBuffer cb, Material mat, int pass)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1A2DA08", Offset = "0x1A2DA08", VA = "0x1A2DA08")]
	private void checkMaterials(bool aThroughErrorMsg)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x1A2DD64", Offset = "0x1A2DD64", VA = "0x1A2DD64")]
	private bool checkRenderTextureFormats()
	{
		return default(bool);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x1A2DDEC", Offset = "0x1A2DDEC", VA = "0x1A2DDEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1A2E0A8", Offset = "0x1A2E0A8", VA = "0x1A2E0A8")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1A2E22C", Offset = "0x1A2E22C", VA = "0x1A2E22C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1A2E164", Offset = "0x1A2E164", VA = "0x1A2E164")]
	private void releaseTemporalRT()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1A2E230", Offset = "0x1A2E230", VA = "0x1A2E230")]
	private void ClearHistory(CommandBuffer cb)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1A2E378", Offset = "0x1A2E378", VA = "0x1A2E378")]
	private void checkParamsChanged()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1A2EBD0", Offset = "0x1A2EBD0", VA = "0x1A2EBD0")]
	private void updateParams()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1A2EC4C", Offset = "0x1A2EC4C", VA = "0x1A2EC4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1A2EEEC", Offset = "0x1A2EEEC", VA = "0x1A2EEEC")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1A31C24", Offset = "0x1A31C24", VA = "0x1A31C24")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1A2F764", Offset = "0x1A2F764", VA = "0x1A2F764")]
	private void commandBuffer_FillComputeOcclusion(CommandBuffer cb)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1A31FC8", Offset = "0x1A31FC8", VA = "0x1A31FC8")]
	private int commandBuffer_NeighborMotionIntensity(CommandBuffer cb, int aSourceWidth, int aSourceHeight)
	{
		return default(int);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1A31D08", Offset = "0x1A31D08", VA = "0x1A31D08")]
	private void commandBuffer_Blur(CommandBuffer cb, RenderTargetIdentifier aSourceRT, int aSourceWidth, int aSourceHeight)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1A32328", Offset = "0x1A32328", VA = "0x1A32328")]
	private int getTemporalPass()
	{
		return default(int);
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1A3236C", Offset = "0x1A3236C", VA = "0x1A3236C")]
	private void commandBuffer_TemporalFilter(CommandBuffer cb)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1A30C7C", Offset = "0x1A30C7C", VA = "0x1A30C7C")]
	private void commandBuffer_FillApplyDeferred(CommandBuffer cb, bool logTarget)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1A3060C", Offset = "0x1A3060C", VA = "0x1A3060C")]
	private void commandBuffer_FillApplyPostEffect(CommandBuffer cb)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1A3011C", Offset = "0x1A3011C", VA = "0x1A3011C")]
	private void commandBuffer_FillApplyDebug(CommandBuffer cb)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1A2F218", Offset = "0x1A2F218", VA = "0x1A2F218")]
	private void UpdateGlobalShaderConstants(CommandBuffer cb)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1A2F318", Offset = "0x1A2F318", VA = "0x1A2F318")]
	private void UpdateGlobalShaderConstants_AmbientOcclusion(CommandBuffer cb)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1A2F2D0", Offset = "0x1A2F2D0", VA = "0x1A2F2D0")]
	private void UpdateGlobalShaderConstants_Matrices(CommandBuffer cb)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1A3253C", Offset = "0x1A3253C", VA = "0x1A3253C")]
	public AmplifyOcclusionEffect()
	{
	}
}
[Token(Token = "0x20000B2")]
public class MeshSimplify : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float m_fVertexAmount;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	[HideInInspector]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseCurvature;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[HideInInspector]
	private bool m_bProtectTexture;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLockBorder;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[SerializeField]
	[HideInInspector]
	private bool m_bDataDirty;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[SerializeField]
	[HideInInspector]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x170000EC")]
	public bool RecurseIntoChildren
	{
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x15C1314", Offset = "0x15C1314", VA = "0x15C1314")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000ED")]
	public Simplifier MeshSimplifier
	{
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x15C131C", Offset = "0x15C131C", VA = "0x15C131C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600059A")]
		[Address(RVA = "0x15C1324", Offset = "0x15C1324", VA = "0x15C1324")]
		set
		{
		}
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x15C132C", Offset = "0x15C132C", VA = "0x15C132C")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x15C1420", Offset = "0x15C1420", VA = "0x15C1420")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x15C1588", Offset = "0x15C1588", VA = "0x15C1588")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x15C1590", Offset = "0x15C1590", VA = "0x15C1590")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x15C15EC", Offset = "0x15C15EC", VA = "0x15C15EC")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x15C15F4", Offset = "0x15C15F4", VA = "0x15C15F4")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x15C1604", Offset = "0x15C1604", VA = "0x15C1604")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x15C1634", Offset = "0x15C1634", VA = "0x15C1634")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x15C1768", Offset = "0x15C1768", VA = "0x15C1768")]
	public void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x15C1914", Offset = "0x15C1914", VA = "0x15C1914")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x15C191C", Offset = "0x15C191C", VA = "0x15C191C")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x15C1960", Offset = "0x15C1960", VA = "0x15C1960")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x15C2244", Offset = "0x15C2244", VA = "0x15C2244")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x15C2318", Offset = "0x15C2318", VA = "0x15C2318")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x15C23B4", Offset = "0x15C23B4", VA = "0x15C23B4")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x15C23F8", Offset = "0x15C23F8", VA = "0x15C23F8")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x15C2968", Offset = "0x15C2968", VA = "0x15C2968")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x15C299C", Offset = "0x15C299C", VA = "0x15C299C")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x15C2BC4", Offset = "0x15C2BC4", VA = "0x15C2BC4")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x15C2C08", Offset = "0x15C2C08", VA = "0x15C2C08")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x15C2E78", Offset = "0x15C2E78", VA = "0x15C2E78")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x15C2EAC", Offset = "0x15C2EAC", VA = "0x15C2EAC")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x15C3128", Offset = "0x15C3128", VA = "0x15C3128")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x15C315C", Offset = "0x15C315C", VA = "0x15C315C")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x15C32F4", Offset = "0x15C32F4", VA = "0x15C32F4")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x15C3340", Offset = "0x15C3340", VA = "0x15C3340")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x15C34CC", Offset = "0x15C34CC", VA = "0x15C34CC")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x15C3518", Offset = "0x15C3518", VA = "0x15C3518")]
	private static void GetOriginalTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x15C36C4", Offset = "0x15C36C4", VA = "0x15C36C4")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x15C3710", Offset = "0x15C3710", VA = "0x15C3710")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x15C389C", Offset = "0x15C389C", VA = "0x15C389C")]
	public int GetSimplifiedTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x15C38E8", Offset = "0x15C38E8", VA = "0x15C38E8")]
	private static void GetSimplifiedTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x15C3A94", Offset = "0x15C3A94", VA = "0x15C3A94")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x15C2210", Offset = "0x15C2210", VA = "0x15C2210")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x15C3B5C", Offset = "0x15C3B5C", VA = "0x15C3B5C")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x15C287C", Offset = "0x15C287C", VA = "0x15C287C")]
	private static Mesh CreateNewEmptyMesh(MeshSimplify meshSimplify)
	{
		return null;
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x15C3DB8", Offset = "0x15C3DB8", VA = "0x15C3DB8")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x20000B3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7DC00", Offset = "0xD7DC00")]
public class RuntimeMeshSimplifier : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8091C", Offset = "0xD8091C")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeMeshSimplifier <>4__this;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private KeyValuePair<GameObject, Material[]> <pair>5__3;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshSimplify <meshSimplify>5__4;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshFilter <meshFilter>5__5;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SkinnedMeshRenderer <skin>5__6;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Mesh <newMesh>5__7;

		[Token(Token = "0x170003A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x1512BE0", Offset = "0x1512BE0", VA = "0x1512BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x1512C48", Offset = "0x1512C48", VA = "0x1512C48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x15120FC", Offset = "0x15120FC", VA = "0x15120FC")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x1512188", Offset = "0x1512188", VA = "0x1512188", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x151220C", Offset = "0x151220C", VA = "0x151220C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x15121B4", Offset = "0x15121B4", VA = "0x15121B4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x1512BE8", Offset = "0x1512BE8", VA = "0x1512BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_bFinished;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh m_newMesh;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nLastProgress;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_strLastTitle;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_strLastMessage;

	[Token(Token = "0x170000EE")]
	public string ProgressTitle
	{
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x1511C70", Offset = "0x1511C70", VA = "0x1511C70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EF")]
	public string ProgressMessage
	{
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x1511C78", Offset = "0x1511C78", VA = "0x1511C78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F0")]
	public int ProgressPercent
	{
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x1511C80", Offset = "0x1511C80", VA = "0x1511C80")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F1")]
	public bool Finished
	{
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x1511C88", Offset = "0x1511C88", VA = "0x1511C88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1511C90", Offset = "0x1511C90", VA = "0x1511C90")]
	public void Simplify(float percent)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1511DBC", Offset = "0x1511DBC", VA = "0x1511DBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x1511E64", Offset = "0x1511E64", VA = "0x1511E64")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x151202C", Offset = "0x151202C", VA = "0x151202C")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1511D3C", Offset = "0x1511D3C", VA = "0x1511D3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD916C0", Offset = "0xD916C0")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x1512128", Offset = "0x1512128", VA = "0x1512128")]
	public RuntimeMeshSimplifier()
	{
	}
}
[Token(Token = "0x20000B4")]
public class AlienMove : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8092C", Offset = "0xD8092C")]
	private sealed class <StartMoving>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlienMove <>4__this;

		[Token(Token = "0x170003AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x1A2B590", Offset = "0x1A2B590", VA = "0x1A2B590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x1A2B5F8", Offset = "0x1A2B5F8", VA = "0x1A2B5F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x1A2B0D4", Offset = "0x1A2B0D4", VA = "0x1A2B0D4")]
		[DebuggerHidden]
		public <StartMoving>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x1A2B444", Offset = "0x1A2B444", VA = "0x1A2B444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x1A2B448", Offset = "0x1A2B448", VA = "0x1A2B448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x1A2B598", Offset = "0x1A2B598", VA = "0x1A2B598", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8093C", Offset = "0xD8093C")]
	private sealed class <GoToPosition>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlienMove <>4__this;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 from;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 to;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float time;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float waitTime;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170003AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x1A2B3D4", Offset = "0x1A2B3D4", VA = "0x1A2B3D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0x1A2B43C", Offset = "0x1A2B43C", VA = "0x1A2B43C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x1A2B1C0", Offset = "0x1A2B1C0", VA = "0x1A2B1C0")]
		[DebuggerHidden]
		public <GoToPosition>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x1A2B208", Offset = "0x1A2B208", VA = "0x1A2B208", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x1A2B20C", Offset = "0x1A2B20C", VA = "0x1A2B20C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x1A2B3DC", Offset = "0x1A2B3DC", VA = "0x1A2B3DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 m_TopLeftBound;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 m_BottomRightBound;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_MinMoveTime;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_MaxMoveTime;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_MinWaitTime;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_MaxWaitTime;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator m_Animator;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform m_Transform;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_Position;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1A2AF2C", Offset = "0x1A2AF2C", VA = "0x1A2AF2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1A2AF84", Offset = "0x1A2AF84", VA = "0x1A2AF84")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x1A2B040", Offset = "0x1A2B040", VA = "0x1A2B040")]
	private Vector3 GetRandomPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1A2AFD0", Offset = "0x1A2AFD0", VA = "0x1A2AFD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91724", Offset = "0xD91724")]
	private IEnumerator StartMoving()
	{
		return null;
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1A2B100", Offset = "0x1A2B100", VA = "0x1A2B100")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91788", Offset = "0xD91788")]
	private IEnumerator GoToPosition(float time, float waitTime, Vector3 from, Vector3 to)
	{
		return null;
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1A2B1EC", Offset = "0x1A2B1EC", VA = "0x1A2B1EC")]
	public AlienMove()
	{
	}
}
[Token(Token = "0x20000B5")]
public class GuardiansBhapticsPlayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200041D")]
	public enum Effect
	{
		[Token(Token = "0x4001C8D")]
		Test,
		[Token(Token = "0x4001C8E")]
		Recoil,
		[Token(Token = "0x4001C8F")]
		Spawn,
		[Token(Token = "0x4001C90")]
		Reload,
		[Token(Token = "0x4001C91")]
		ExplosiveDamage,
		[Token(Token = "0x4001C92")]
		BulletDamage,
		[Token(Token = "0x4001C93")]
		FireDamage,
		[Token(Token = "0x4001C94")]
		RangedDamage,
		[Token(Token = "0x4001C95")]
		MeleeDamage,
		[Token(Token = "0x4001C96")]
		BigMeleeDamage,
		[Token(Token = "0x4001C97")]
		Death,
		[Token(Token = "0x4001C98")]
		Flying,
		[Token(Token = "0x4001C99")]
		JetPackStart,
		[Token(Token = "0x4001C9A")]
		DrivingVehicle,
		[Token(Token = "0x4001C9B")]
		VehicleIdle,
		[Token(Token = "0x4001C9C")]
		VehicleStart,
		[Token(Token = "0x4001C9D")]
		ArrowPulling,
		[Token(Token = "0x4001C9E")]
		JetPackFlying,
		[Token(Token = "0x4001C9F")]
		Slash,
		[Token(Token = "0x4001CA0")]
		InteractSaber,
		[Token(Token = "0x4001CA1")]
		Healing
	}

	[Token(Token = "0x200041E")]
	public enum Hand
	{
		[Token(Token = "0x4001CA3")]
		Right,
		[Token(Token = "0x4001CA4")]
		Left
	}

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GuardiansBhapticsPlayer instance;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD82040", Offset = "0xD82040")]
	public HapticClip testVest;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip flamethrowerVestRecoilR;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HapticClip flamethrowerVestRecoilL;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HapticClip AK2_AK5_VestRecoilR;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HapticClip AK2_AK5_VestRecoilL;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HapticClip GravityGunVestRecoilL;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HapticClip GravityGunVestRecoilR;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HapticClip AK9_VestRecoil_L;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HapticClip AK9_VestRecoil_R;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HapticClip Explosion;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HapticClip BigCreatureMeleeLeft1;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HapticClip BigCreatureMeleeLeft2;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HapticClip BigCreatureMeleeRight1;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HapticClip BigCreatureMeleeRight2;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HapticClip BulletHit_Level1;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public HapticClip BulletHit_Level2;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HapticClip DeathCollapse;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public HapticClip FlamethrowerDamage;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public HapticClip EnvironmentFire_1;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public HapticClip EnvironmentFire_2;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public HapticClip Jetpack_Startup;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public HapticClip Vehicle_Driving;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public HapticClip Vehicle_Idle;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public HapticClip Vehicle_Start;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public HapticClip ArrowPulling_L;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public HapticClip ArrowPulling_R;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public HapticClip[] FlyingAir_Back;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public HapticClip[] FlyingAir_Front;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public HapticClip Healing;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD82078", Offset = "0xD82078")]
	public HapticClip DMG_Explosion;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public HapticClip DMG_Melee_L;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public HapticClip DMG_Melee_R;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD820B0", Offset = "0xD820B0")]
	public HapticClip reloadR;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public HapticClip reloadL;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public HapticClip spawnItemR;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public HapticClip spawnItemL;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public HapticClip recoil_AK2_L;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public HapticClip recoil_AK2_R;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public HapticClip recoil_AK5_L;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public HapticClip recoil_AK5_R;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public HapticClip recoil_AK9_L;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public HapticClip recoil_AK9_R;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public HapticClip recoil_Flamethrower_L;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public HapticClip recoil_Flamethrower_R;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public HapticClip recoil_GravityGun_L;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public HapticClip recoil_GravityGun_R;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public HapticClip arrowL;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public HapticClip arrowR;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public HapticClip arrowLVest;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public HapticClip arrowRVest;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public HapticClip Slash_L;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public HapticClip Slash_R;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public HapticClip MeleeSlice_L;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public HapticClip MeleeSlice_R;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD820E8", Offset = "0xD820E8")]
	public HapticSource RArmSource;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public HapticSource LArmSource;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public HapticSource HeadSource;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public HapticSource LVestSource;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public HapticSource RVestSource;

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1704518", Offset = "0x1704518", VA = "0x1704518")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x17045B4", Offset = "0x17045B4", VA = "0x17045B4")]
	public void PlayEffect(Effect newEffect, bool leftHand, bool bothHands)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x1704A64", Offset = "0x1704A64", VA = "0x1704A64")]
	public void PlayWeaponEffect(Effect effect, string weapon, bool leftHand, bool bothHands)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x170510C", Offset = "0x170510C", VA = "0x170510C")]
	public GuardiansBhapticsPlayer()
	{
	}
}
[Token(Token = "0x20000B6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD7DC64", Offset = "0xD7DC64")]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD82120", Offset = "0xD82120")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD82158", Offset = "0xD82158")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD82190", Offset = "0xD82190")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x15710B4", Offset = "0x15710B4", VA = "0x15710B4")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x20000B7")]
public class BhapticsLogger
{
	[Token(Token = "0x200041F")]
	public enum LogLevel
	{
		[Token(Token = "0x4001CA6")]
		Debug,
		[Token(Token = "0x4001CA7")]
		Info,
		[Token(Token = "0x4001CA8")]
		Error
	}

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x15710C4", Offset = "0x15710C4", VA = "0x15710C4")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x156D4F8", Offset = "0x156D4F8", VA = "0x156D4F8")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x156E244", Offset = "0x156E244", VA = "0x156E244")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x157119C", Offset = "0x157119C", VA = "0x157119C")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x20000B8")]
public class BhapticsManager
{
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x156AE24", Offset = "0x156AE24", VA = "0x156AE24")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x156ADC8", Offset = "0x156ADC8", VA = "0x156ADC8")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x15711F8", Offset = "0x15711F8", VA = "0x15711F8")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x157144C", Offset = "0x157144C", VA = "0x157144C")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x20000B9")]
public class BhapticsVisualizer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1571458", Offset = "0x1571458", VA = "0x1571458")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x15714B0", Offset = "0x15714B0", VA = "0x15714B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1571630", Offset = "0x1571630", VA = "0x1571630")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x20000BA")]
public class Bhaptics_Setup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BhapticsConfig Config;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1571638", Offset = "0x1571638", VA = "0x1571638")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1571B50", Offset = "0x1571B50", VA = "0x1571B50")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1571740", Offset = "0x1571740", VA = "0x1571740")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1571BAC", Offset = "0x1571BAC", VA = "0x1571BAC")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x20000BB")]
public class DirectionPointer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x18A1AC8", Offset = "0x18A1AC8", VA = "0x18A1AC8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x18A1B94", Offset = "0x18A1B94", VA = "0x18A1B94")]
	public DirectionPointer()
	{
	}
}
[Token(Token = "0x20000BC")]
[ExecuteInEditMode]
public class Generator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2Int castRows;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shaftSpacing;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool meshCast;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh castMesh;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lightShaftPrefab;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string savePath;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool shaftSettings;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material shaftMat;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xD821D8", Offset = "0xD821D8")]
	public Color pointer_shaftColor;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float pointer_shaftIntensity;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 pointer_noiseDirection;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float pointer_noiseScale;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float pointer_noiseUpdateSpeed;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float pointer_maxLength;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LayerMask pointer_layerMask;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float pointer_shaftWidth;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector2 pointer_shaftWidthMinMax;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture pointer_shaftTexture;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform pointer_shaftDirection;

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x170424C", Offset = "0x170424C", VA = "0x170424C")]
	public Generator()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BD")]
public class SaveVariables
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float pointer_shaftIntensity;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pointer_shaftColorR;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float pointer_shaftColorG;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pointer_shaftColorB;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pointer_shaftColorA;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pointer_noiseDirectionX;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pointer_noiseDirectionY;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pointer_noiseScale;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pointer_noiseUpdateSpeed;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pointer_maxLength;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pointer_shaftWidth;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float pointer_shaftWidthMinMaxX;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pointer_shaftWidthMinMaxY;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float pointer_shaftDirectionX;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float pointer_shaftDirectionY;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float pointer_shaftDirectionZ;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int castRowsX;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int castRowsY;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float shaftSpacing;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool meshCast;

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1512C58", Offset = "0x1512C58", VA = "0x1512C58")]
	public SaveVariables()
	{
	}
}
[Token(Token = "0x20000BE")]
public class Shaft_Behavior : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color shaftColor;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shaftIntensity;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 noiseDirection;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float noiseScale;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float noiseUpdateSpeed;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxLength;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask layerMask;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 shaftWidthMinMax;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float shaftAdjustY;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture shaftTexture;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform shaftDirection;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material shaftMat;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float randomRotZ;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float randomWidth;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1513478", Offset = "0x1513478", VA = "0x1513478")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x1513BB8", Offset = "0x1513BB8", VA = "0x1513BB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x15138EC", Offset = "0x15138EC", VA = "0x15138EC")]
	private void ShaftLength_and_Width()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1513AA4", Offset = "0x1513AA4", VA = "0x1513AA4")]
	private void Shaft_Color_Intensity_TexOffset()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x151370C", Offset = "0x151370C", VA = "0x151370C")]
	private void OrientShaft()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x15135CC", Offset = "0x15135CC", VA = "0x15135CC")]
	private void SyncVariables()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1513BEC", Offset = "0x1513BEC", VA = "0x1513BEC")]
	public Shaft_Behavior()
	{
	}
}
[Token(Token = "0x20000BF")]
public class LookAtTarget : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform _target;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _lookAtTarget;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x18DB8C0", Offset = "0x18DB8C0", VA = "0x18DB8C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x18DBA14", Offset = "0x18DBA14", VA = "0x18DBA14")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x20000C0")]
public class MouseMove : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _sensitivity;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _originalPos;

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x13D837C", Offset = "0x13D837C", VA = "0x13D837C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x13D83B8", Offset = "0x13D83B8", VA = "0x13D83B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x13D84D0", Offset = "0x13D84D0", VA = "0x13D84D0")]
	public MouseMove()
	{
	}
}
[Token(Token = "0x20000C1")]
public class SwooshTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationClip _animation;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationState _animationState;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int _start;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int _end;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _startN;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _endN;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _time;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _prevTime;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _prevAnimTime;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MeleeWeaponTrail _trail;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _firstFrame;

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x151DEE0", Offset = "0x151DEE0", VA = "0x151DEE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x151DFB8", Offset = "0x151DFB8", VA = "0x151DFB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x151E098", Offset = "0x151E098", VA = "0x151E098")]
	public SwooshTest()
	{
	}
}
[Token(Token = "0x20000C2")]
public class Interpolate
{
	[Token(Token = "0x2000420")]
	public enum EaseType
	{
		[Token(Token = "0x4001CAA")]
		Linear,
		[Token(Token = "0x4001CAB")]
		EaseInQuad,
		[Token(Token = "0x4001CAC")]
		EaseOutQuad,
		[Token(Token = "0x4001CAD")]
		EaseInOutQuad,
		[Token(Token = "0x4001CAE")]
		EaseInCubic,
		[Token(Token = "0x4001CAF")]
		EaseOutCubic,
		[Token(Token = "0x4001CB0")]
		EaseInOutCubic,
		[Token(Token = "0x4001CB1")]
		EaseInQuart,
		[Token(Token = "0x4001CB2")]
		EaseOutQuart,
		[Token(Token = "0x4001CB3")]
		EaseInOutQuart,
		[Token(Token = "0x4001CB4")]
		EaseInQuint,
		[Token(Token = "0x4001CB5")]
		EaseOutQuint,
		[Token(Token = "0x4001CB6")]
		EaseInOutQuint,
		[Token(Token = "0x4001CB7")]
		EaseInSine,
		[Token(Token = "0x4001CB8")]
		EaseOutSine,
		[Token(Token = "0x4001CB9")]
		EaseInOutSine,
		[Token(Token = "0x4001CBA")]
		EaseInExpo,
		[Token(Token = "0x4001CBB")]
		EaseOutExpo,
		[Token(Token = "0x4001CBC")]
		EaseInOutExpo,
		[Token(Token = "0x4001CBD")]
		EaseInCirc,
		[Token(Token = "0x4001CBE")]
		EaseOutCirc,
		[Token(Token = "0x4001CBF")]
		EaseInOutCirc
	}

	[Token(Token = "0x2000421")]
	public delegate Vector3 ToVector3<T>(T v);

	[Token(Token = "0x2000422")]
	public delegate float Function(float a, float b, float c, float d);

	[Token(Token = "0x2000423")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8094C", Offset = "0xD8094C")]
	private sealed class <NewTimer>d__3 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float duration;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float <>3__duration;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170003AE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x18D7B2C", Offset = "0x18D7B2C", VA = "0x18D7B2C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x18D7B94", Offset = "0x18D7B94", VA = "0x18D7B94", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x18D7A34", Offset = "0x18D7A34", VA = "0x18D7A34")]
		[DebuggerHidden]
		public <NewTimer>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x18D7A6C", Offset = "0x18D7A6C", VA = "0x18D7A6C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x18D7A70", Offset = "0x18D7A70", VA = "0x18D7A70", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x18D7B34", Offset = "0x18D7B34", VA = "0x18D7B34", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x18D7BF8", Offset = "0x18D7BF8", VA = "0x18D7BF8", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x18D7CA4", Offset = "0x18D7CA4", VA = "0x18D7CA4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8095C", Offset = "0xD8095C")]
	private sealed class <NewCounter>d__6 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int start;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int <>3__start;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int step;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int <>3__step;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int end;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int <>3__end;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__2;

		[Token(Token = "0x170003B0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x18D7410", Offset = "0x18D7410", VA = "0x18D7410", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0x18D7478", Offset = "0x18D7478", VA = "0x18D7478", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x18D7370", Offset = "0x18D7370", VA = "0x18D7370")]
		[DebuggerHidden]
		public <NewCounter>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x18D73A8", Offset = "0x18D73A8", VA = "0x18D73A8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x18D73AC", Offset = "0x18D73AC", VA = "0x18D73AC", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x18D7418", Offset = "0x18D7418", VA = "0x18D7418", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x18D74DC", Offset = "0x18D74DC", VA = "0x18D74DC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x18D7598", Offset = "0x18D7598", VA = "0x18D7598", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8096C", Offset = "0xD8096C")]
	private sealed class <NewEase>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 end;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 start;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IEnumerable<float> driver;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Function ease;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float total;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <distance>5__2;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IEnumerator<float> <>7__wrap2;

		[Token(Token = "0x170003B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x18D79C4", Offset = "0x18D79C4", VA = "0x18D79C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x18D7A2C", Offset = "0x18D7A2C", VA = "0x18D7A2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x18D759C", Offset = "0x18D759C", VA = "0x18D759C")]
		[DebuggerHidden]
		public <NewEase>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x18D75C8", Offset = "0x18D75C8", VA = "0x18D75C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x18D76A4", Offset = "0x18D76A4", VA = "0x18D76A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x18D75E4", Offset = "0x18D75E4", VA = "0x18D75E4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x18D79CC", Offset = "0x18D79CC", VA = "0x18D79CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8097C", Offset = "0xD8097C")]
	private sealed class <NewBezier>d__16<T> : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 <>2__current;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IList nodes;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IList <>3__nodes;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerable<float> steps;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerable<float> <>3__steps;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ToVector3<T> toVector3;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToVector3<T> <>3__toVector3;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Function ease;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Function <>3__ease;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float maxStep;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float <>3__maxStep;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3[] <points>5__2;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<float> <>7__wrap2;

		[Token(Token = "0x170003B4")]
		private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
		{
			[Token(Token = "0x6001EE6")]
			[DebuggerHidden]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EE8")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EE2")]
		[DebuggerHidden]
		public <NewBezier>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001EE3")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EE4")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE5")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001EE7")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001EE9")]
		[DebuggerHidden]
		private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001EEA")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8098C", Offset = "0xD8098C")]
	private sealed class <NewCatmullRom>d__20<T> : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 <>2__current;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IList nodes;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IList <>3__nodes;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ToVector3<T> toVector3;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ToVector3<T> <>3__toVector3;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool loop;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool <>3__loop;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int slices;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>3__slices;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <last>5__2;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <current>5__3;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <previous>5__4;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <start>5__5;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <end>5__6;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <next>5__7;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <stepCount>5__8;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <step>5__9;

		[Token(Token = "0x170003B6")]
		private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
		{
			[Token(Token = "0x6001EEE")]
			[DebuggerHidden]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EF0")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EEB")]
		[DebuggerHidden]
		public <NewCatmullRom>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001EEC")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EED")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEF")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001EF1")]
		[DebuggerHidden]
		private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001EF2")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x170CD94", Offset = "0x170CD94", VA = "0x170CD94")]
	private static Vector3 Identity(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x170CD98", Offset = "0x170CD98", VA = "0x170CD98")]
	private static Vector3 TransformDotPosition(Transform t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x170CDB0", Offset = "0x170CDB0", VA = "0x170CDB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD917EC", Offset = "0xD917EC")]
	private static IEnumerable<float> NewTimer(float duration)
	{
		return null;
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x170CE28", Offset = "0x170CE28", VA = "0x170CE28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91850", Offset = "0xD91850")]
	private static IEnumerable<float> NewCounter(int start, int end, int step)
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x170CEB0", Offset = "0x170CEB0", VA = "0x170CEB0")]
	public static IEnumerator NewEase(Function ease, Vector3 start, Vector3 end, float duration)
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x170CFFC", Offset = "0x170CFFC", VA = "0x170CFFC")]
	public static IEnumerator NewEase(Function ease, Vector3 start, Vector3 end, int slices)
	{
		return null;
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x170CF34", Offset = "0x170CF34", VA = "0x170CF34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD918B4", Offset = "0xD918B4")]
	private static IEnumerator NewEase(Function ease, Vector3 start, Vector3 end, float total, IEnumerable<float> driver)
	{
		return null;
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x170D080", Offset = "0x170D080", VA = "0x170D080")]
	private static Vector3 Ease(Function ease, Vector3 start, Vector3 distance, float elapsedTime, float duration)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x170D13C", Offset = "0x170D13C", VA = "0x170D13C")]
	public static Function Ease(EaseType type)
	{
		return null;
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x170D420", Offset = "0x170D420", VA = "0x170D420")]
	public static IEnumerable<Vector3> NewBezier(Function ease, Transform[] nodes, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x170D4DC", Offset = "0x170D4DC", VA = "0x170D4DC")]
	public static IEnumerable<Vector3> NewBezier(Function ease, Transform[] nodes, int slices)
	{
		return null;
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x170D5A4", Offset = "0x170D5A4", VA = "0x170D5A4")]
	public static IEnumerable<Vector3> NewBezier(Function ease, Vector3[] points, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x170D660", Offset = "0x170D660", VA = "0x170D660")]
	public static IEnumerable<Vector3> NewBezier(Function ease, Vector3[] points, int slices)
	{
		return null;
	}

	[Token(Token = "0x6000606")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91918", Offset = "0xD91918")]
	private static IEnumerable<Vector3> NewBezier<T>(Function ease, IList nodes, ToVector3<T> toVector3, float maxStep, IEnumerable<float> steps)
	{
		return null;
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x170D728", Offset = "0x170D728", VA = "0x170D728")]
	private static Vector3 Bezier(Function ease, Vector3[] points, float elapsedTime, float duration)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x170D898", Offset = "0x170D898", VA = "0x170D898")]
	public static IEnumerable<Vector3> NewCatmullRom(Transform[] nodes, int slices, bool loop)
	{
		return null;
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x170D938", Offset = "0x170D938", VA = "0x170D938")]
	public static IEnumerable<Vector3> NewCatmullRom(Vector3[] points, int slices, bool loop)
	{
		return null;
	}

	[Token(Token = "0x600060A")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD9197C", Offset = "0xD9197C")]
	private static IEnumerable<Vector3> NewCatmullRom<T>(IList nodes, ToVector3<T> toVector3, int slices, bool loop)
	{
		return null;
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x170D9D8", Offset = "0x170D9D8", VA = "0x170D9D8")]
	private static Vector3 CatmullRom(Vector3 previous, Vector3 start, Vector3 end, Vector3 next, float elapsedTime, float duration)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x170DBC0", Offset = "0x170DBC0", VA = "0x170DBC0")]
	private static float Linear(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x170DBD8", Offset = "0x170DBD8", VA = "0x170DBD8")]
	private static float EaseInQuad(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x170DBF8", Offset = "0x170DBF8", VA = "0x170DBF8")]
	private static float EaseOutQuad(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x170DC20", Offset = "0x170DC20", VA = "0x170DC20")]
	private static float EaseInOutQuad(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x170DC84", Offset = "0x170DC84", VA = "0x170DC84")]
	private static float EaseInCubic(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x170DCA8", Offset = "0x170DCA8", VA = "0x170DCA8")]
	private static float EaseOutCubic(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x170DCDC", Offset = "0x170DCDC", VA = "0x170DCDC")]
	private static float EaseInOutCubic(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x170DD40", Offset = "0x170DD40", VA = "0x170DD40")]
	private static float EaseInQuart(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x170DD68", Offset = "0x170DD68", VA = "0x170DD68")]
	private static float EaseOutQuart(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x170DD9C", Offset = "0x170DD9C", VA = "0x170DD9C")]
	private static float EaseInOutQuart(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x170DE08", Offset = "0x170DE08", VA = "0x170DE08")]
	private static float EaseInQuint(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x170DE34", Offset = "0x170DE34", VA = "0x170DE34")]
	private static float EaseOutQuint(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x170DE70", Offset = "0x170DE70", VA = "0x170DE70")]
	private static float EaseInOutQuint(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x170DEE4", Offset = "0x170DEE4", VA = "0x170DEE4")]
	private static float EaseInSine(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x170DF88", Offset = "0x170DF88", VA = "0x170DF88")]
	private static float EaseOutSine(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x170E028", Offset = "0x170E028", VA = "0x170E028")]
	private static float EaseInOutSine(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x170E0D8", Offset = "0x170E0D8", VA = "0x170E0D8")]
	private static float EaseInExpo(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x170E17C", Offset = "0x170E17C", VA = "0x170E17C")]
	private static float EaseOutExpo(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x170E220", Offset = "0x170E220", VA = "0x170E220")]
	private static float EaseInOutExpo(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x170E334", Offset = "0x170E334", VA = "0x170E334")]
	private static float EaseInCirc(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x170E3EC", Offset = "0x170E3EC", VA = "0x170E3EC")]
	private static float EaseOutCirc(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x170E4A8", Offset = "0x170E4A8", VA = "0x170E4A8")]
	private static float EaseInOutCirc(float start, float distance, float elapsedTime, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x170E5BC", Offset = "0x170E5BC", VA = "0x170E5BC")]
	public Interpolate()
	{
	}
}
[Token(Token = "0x20000C3")]
public class MeleeWeaponTrail : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000428")]
	public class Point
	{
		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeCreated;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 basePosition;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 tipPosition;

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x18DD7D0", Offset = "0x18DD7D0", VA = "0x18DD7D0")]
		public Point()
		{
		}
	}

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _emit;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _use;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _emitTime;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material _material;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _lifeTime;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color[] _colors;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float[] _sizes;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _minVertexDistance;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _maxVertexDistance;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _minVertexDistanceSqr;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _maxVertexDistanceSqr;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float _maxAngle;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool _autoDestruct;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int subdivisions;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _base;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform _tip;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Point> _points;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Point> _smoothedPoints;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject _trailObject;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Mesh _trailMesh;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 _lastPosition;

	[Token(Token = "0x170000F2")]
	public bool Emit
	{
		[Token(Token = "0x6000623")]
		[Address(RVA = "0x18DC1D8", Offset = "0x18DC1D8", VA = "0x18DC1D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public bool Use
	{
		[Token(Token = "0x6000624")]
		[Address(RVA = "0x18DC1E4", Offset = "0x18DC1E4", VA = "0x18DC1E4")]
		set
		{
		}
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x18DC1F0", Offset = "0x18DC1F0", VA = "0x18DC1F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x18DC4A0", Offset = "0x18DC4A0", VA = "0x18DC4A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x18DC538", Offset = "0x18DC538", VA = "0x18DC538")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x18DC5D0", Offset = "0x18DC5D0", VA = "0x18DC5D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x18DD7D8", Offset = "0x18DD7D8", VA = "0x18DD7D8")]
	private void RemoveOldPoints(List<Point> pointList)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x18DD9FC", Offset = "0x18DD9FC", VA = "0x18DD9FC")]
	public MeleeWeaponTrail()
	{
	}
}
[Token(Token = "0x20000C4")]
[ExecuteInEditMode]
public class ListMeshVertCount : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool includeInActive;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool listVertCount;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x18D8740", Offset = "0x18D8740", VA = "0x18D8740")]
	private void Update()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x18D8754", Offset = "0x18D8754", VA = "0x18D8754")]
	private void ListVertCount()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x18D8A30", Offset = "0x18D8A30", VA = "0x18D8A30")]
	public ListMeshVertCount()
	{
	}
}
[Token(Token = "0x20000C5")]
[ExecuteInEditMode]
public class RaycastTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mr;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider collider;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask layerMask;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool createTriangle;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int triangleIndex;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private RaycastHit hitInfo;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool step2;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool drawTriangle;

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x190866C", Offset = "0x190866C", VA = "0x190866C")]
	private void Update()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x1908680", Offset = "0x1908680", VA = "0x1908680")]
	private void CreateTriangle()
	{
	}

	[Token(Token = "0x6000630")]
	private void Swap<T>(ref T v1, ref T v2)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x190892C", Offset = "0x190892C", VA = "0x190892C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x19090D8", Offset = "0x19090D8", VA = "0x19090D8")]
	public RaycastTest()
	{
	}
}
[Token(Token = "0x20000C6")]
public struct TriangleTest
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 a;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 b;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 c;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 dirAb;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 dirAc;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 dirBc;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 h1;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float ab;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float ac;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float bc;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float area;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float h;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float ah;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float hb;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x193E550", Offset = "0x193E550", VA = "0x193E550")]
	public void Calc()
	{
	}

	[Token(Token = "0x6000634")]
	private void Swap<T>(ref T v1, ref T v2)
	{
	}
}
[Token(Token = "0x20000C7")]
public class VisualizeMesh : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sphereRadius;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter mf;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh m;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x240C740", Offset = "0x240C740", VA = "0x240C740")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x240CB70", Offset = "0x240CB70", VA = "0x240CB70")]
	public VisualizeMesh()
	{
	}
}
[Token(Token = "0x20000C8")]
[ExecuteInEditMode]
public class Voxelize : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000429")]
	public class VoxelizedMesh
	{
		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[,,] volume;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bounds bounds;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Int3 voxels;

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x240D9E8", Offset = "0x240D9E8", VA = "0x240D9E8")]
		public VoxelizedMesh()
		{
		}
	}

	[Token(Token = "0x200042A")]
	public struct Int3
	{
		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int z;

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x240D9F0", Offset = "0x240D9F0", VA = "0x240D9F0")]
		public Int3(int x, int y, int z)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x240D9FC", Offset = "0x240D9FC", VA = "0x240D9FC")]
		public static Int3 operator +(Int3 a, Int3 b)
		{
			return default(Int3);
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x240DC44", Offset = "0x240DC44", VA = "0x240DC44", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly byte[] bits;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<Mesh, VoxelizedMesh> voxelizedLookup;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<float> intersectList;

	[Token(Token = "0x4000609")]
	private const byte insideVoxel = 1;

	[Token(Token = "0x400060A")]
	private const byte outsideVoxel = 2;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int voxelizeLayer;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float voxelResolution;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool voxelize;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x240CB84", Offset = "0x240CB84", VA = "0x240CB84")]
	public void Update()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x240CBC4", Offset = "0x240CBC4", VA = "0x240CBC4")]
	private VoxelizedMesh VoxelizeMesh(Transform t, float voxelResolution, int voxelizeLayer)
	{
		return null;
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x240DA18", Offset = "0x240DA18", VA = "0x240DA18")]
	private static string PrintVector3(Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x240DE6C", Offset = "0x240DE6C", VA = "0x240DE6C")]
	private static void MultiCast(Ray ray, List<float> points, float hitOffset, float maxDistance, LayerMask voxelizeLayerMask)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x240E000", Offset = "0x240E000", VA = "0x240E000")]
	private static void Report(VoxelizedMesh vm, float voxelResolution)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x240E174", Offset = "0x240E174", VA = "0x240E174")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x240E1C4", Offset = "0x240E1C4", VA = "0x240E1C4")]
	public void DrawVolume(Transform t, float voxelResolution)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x240E6B4", Offset = "0x240E6B4", VA = "0x240E6B4")]
	public Voxelize()
	{
	}
}
[Token(Token = "0x20000C9")]
[ExecuteInEditMode]
public class EnableChildrenMeshRenderers : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool execute;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x18A2384", Offset = "0x18A2384", VA = "0x18A2384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x18A2398", Offset = "0x18A2398", VA = "0x18A2398")]
	private void Execute()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x18A2444", Offset = "0x18A2444", VA = "0x18A2444")]
	public EnableChildrenMeshRenderers()
	{
	}
}
[Token(Token = "0x20000CA")]
public class ShadowDistance : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float shadowDistance;

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x151345C", Offset = "0x151345C", VA = "0x151345C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1513468", Offset = "0x1513468", VA = "0x1513468")]
	public ShadowDistance()
	{
	}
}
[Token(Token = "0x20000CB")]
public class MCS_RemoveOverlappingTris : MCS_RemoveTris
{
	[Token(Token = "0x6000645")]
	[Address(RVA = "0x18DBA24", Offset = "0x18DBA24", VA = "0x18DBA24")]
	public MCS_RemoveOverlappingTris()
	{
	}
}
[Token(Token = "0x20000CC")]
public class MCS_RemoveTrisBelowSurface : MCS_RemoveTris
{
	[Token(Token = "0x6000646")]
	[Address(RVA = "0x18DBA98", Offset = "0x18DBA98", VA = "0x18DBA98")]
	public MCS_RemoveTrisBelowSurface()
	{
	}
}
[Token(Token = "0x20000CD")]
public class NavMeshCleaner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> m_WalkablePoint;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_Height;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_Offset;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_MidLayerCount;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _HighlightMeshes;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool _HighlightInsideMeshes;

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x13D936C", Offset = "0x13D936C", VA = "0x13D936C")]
	public NavMeshCleaner()
	{
	}
}
[Token(Token = "0x20000CE")]
public class AchievementSample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1A27CE8", Offset = "0x1A27CE8", VA = "0x1A27CE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1A27D48", Offset = "0x1A27D48", VA = "0x1A27D48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1A27DA8", Offset = "0x1A27DA8", VA = "0x1A27DA8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x1A27F80", Offset = "0x1A27F80", VA = "0x1A27F80")]
	private void Update()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x1A27F8C", Offset = "0x1A27F8C", VA = "0x1A27F8C")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1A2800C", Offset = "0x1A2800C", VA = "0x1A2800C")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1A281EC", Offset = "0x1A281EC", VA = "0x1A281EC")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1A283CC", Offset = "0x1A283CC", VA = "0x1A283CC")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1A284F4", Offset = "0x1A284F4", VA = "0x1A284F4")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1A2861C", Offset = "0x1A2861C", VA = "0x1A2861C")]
	public void UnLock()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1A287B4", Offset = "0x1A287B4", VA = "0x1A287B4")]
	public void AddCount()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1A28AB0", Offset = "0x1A28AB0", VA = "0x1A28AB0")]
	public void AddFields()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x1A27ED8", Offset = "0x1A27ED8", VA = "0x1A27ED8")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1A2844C", Offset = "0x1A2844C", VA = "0x1A2844C")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x1A28574", Offset = "0x1A28574", VA = "0x1A28574")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x1A28BF0", Offset = "0x1A28BF0", VA = "0x1A28BF0")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x1A289CC", Offset = "0x1A289CC", VA = "0x1A289CC")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1A28704", Offset = "0x1A28704", VA = "0x1A28704")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x1A2831C", Offset = "0x1A2831C", VA = "0x1A2831C")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1A2813C", Offset = "0x1A2813C", VA = "0x1A2813C")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1A27E20", Offset = "0x1A27E20", VA = "0x1A27E20")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1A28CA8", Offset = "0x1A28CA8", VA = "0x1A28CA8")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x1A2949C", Offset = "0x1A2949C", VA = "0x1A2949C")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x1A29AA4", Offset = "0x1A29AA4", VA = "0x1A29AA4")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x1A29CFC", Offset = "0x1A29CFC", VA = "0x1A29CFC")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x1A29F54", Offset = "0x1A29F54", VA = "0x1A29F54")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x1A2A1AC", Offset = "0x1A2A1AC", VA = "0x1A2A1AC")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x1A2A6A0", Offset = "0x1A2A6A0", VA = "0x1A2A6A0")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x1A2AC0C", Offset = "0x1A2AC0C", VA = "0x1A2AC0C")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x1A2AE64", Offset = "0x1A2AE64", VA = "0x1A2AE64")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1A2AF1C", Offset = "0x1A2AF1C", VA = "0x1A2AF1C")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x20000CF")]
public class Pvr_Controller : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200042B")]
	public enum UserHandNess
	{
		[Token(Token = "0x4001D05")]
		Right,
		[Token(Token = "0x4001D06")]
		Left
	}

	[Token(Token = "0x200042C")]
	public enum GazeType
	{
		[Token(Token = "0x4001D08")]
		Never,
		[Token(Token = "0x4001D09")]
		DuringMotion,
		[Token(Token = "0x4001D0A")]
		Always
	}

	[Token(Token = "0x200042D")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4001D0C")]
		Controller,
		[Token(Token = "0x4001D0D")]
		Wrist,
		[Token(Token = "0x4001D0E")]
		Elbow,
		[Token(Token = "0x4001D0F")]
		Shoulder
	}

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD82330", Offset = "0xD82330")]
	public float ElbowHeight;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8234C", Offset = "0xD8234C")]
	public float ElbowDepth;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD82368", Offset = "0xD82368")]
	public float PointerTiltAngle;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82380", Offset = "0xD82380")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82390", Offset = "0xD82390")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD823A0", Offset = "0xD823A0")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD823B0", Offset = "0xD823B0")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD823C0", Offset = "0xD823C0")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD823D0", Offset = "0xD823D0")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD823E0", Offset = "0xD823E0")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD823F0", Offset = "0xD823F0")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82400", Offset = "0xD82400")]
	private static Vector3 <originOffsetL>k__BackingField;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82410", Offset = "0xD82410")]
	private static Vector3 <originOffsetR>k__BackingField;

	[Token(Token = "0x170000F4")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x600067A")]
		[Address(RVA = "0x159D2B0", Offset = "0x159D2B0", VA = "0x159D2B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD919E0", Offset = "0xD919E0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x159D304", Offset = "0x159D304", VA = "0x159D304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD919F0", Offset = "0xD919F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x600067C")]
		[Address(RVA = "0x159D374", Offset = "0x159D374", VA = "0x159D374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91A00", Offset = "0xD91A00")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600067D")]
		[Address(RVA = "0x159D3C8", Offset = "0x159D3C8", VA = "0x159D3C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91A10", Offset = "0xD91A10")]
		set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x600067E")]
		[Address(RVA = "0x159D43C", Offset = "0x159D43C", VA = "0x159D43C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91A20", Offset = "0xD91A20")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x159D490", Offset = "0x159D490", VA = "0x159D490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91A30", Offset = "0xD91A30")]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x159D500", Offset = "0x159D500", VA = "0x159D500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91A40", Offset = "0xD91A40")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x159D554", Offset = "0x159D554", VA = "0x159D554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91A50", Offset = "0xD91A50")]
		set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x159D5C8", Offset = "0x159D5C8", VA = "0x159D5C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91A60", Offset = "0xD91A60")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x159D61C", Offset = "0x159D61C", VA = "0x159D61C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91A70", Offset = "0xD91A70")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x159D68C", Offset = "0x159D68C", VA = "0x159D68C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91A80", Offset = "0xD91A80")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x159D6E0", Offset = "0x159D6E0", VA = "0x159D6E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91A90", Offset = "0xD91A90")]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000686")]
		[Address(RVA = "0x159D754", Offset = "0x159D754", VA = "0x159D754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91AA0", Offset = "0xD91AA0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x159D7A8", Offset = "0x159D7A8", VA = "0x159D7A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91AB0", Offset = "0xD91AB0")]
		set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x159D818", Offset = "0x159D818", VA = "0x159D818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91AC0", Offset = "0xD91AC0")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000689")]
		[Address(RVA = "0x159D86C", Offset = "0x159D86C", VA = "0x159D86C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91AD0", Offset = "0xD91AD0")]
		set
		{
		}
	}

	[Token(Token = "0x170000FC")]
	public static Vector3 originOffsetL
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x159D8E0", Offset = "0x159D8E0", VA = "0x159D8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91AE0", Offset = "0xD91AE0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x159D934", Offset = "0x159D934", VA = "0x159D934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91AF0", Offset = "0xD91AF0")]
		set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public static Vector3 originOffsetR
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0x159D9A4", Offset = "0x159D9A4", VA = "0x159D9A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91B00", Offset = "0xD91B00")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600068D")]
		[Address(RVA = "0x159D9F8", Offset = "0x159D9F8", VA = "0x159D9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91B10", Offset = "0xD91B10")]
		set
		{
		}
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x159B384", Offset = "0x159B384", VA = "0x159B384")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x159B4C0", Offset = "0x159B4C0", VA = "0x159B4C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x159B530", Offset = "0x159B530", VA = "0x159B530")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x159B66C", Offset = "0x159B66C", VA = "0x159B66C")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x159B714", Offset = "0x159B714", VA = "0x159B714")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x159B718", Offset = "0x159B718", VA = "0x159B718")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x159B670", Offset = "0x159B670", VA = "0x159B670")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x159B778", Offset = "0x159B778", VA = "0x159B778")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x159B8FC", Offset = "0x159B8FC", VA = "0x159B8FC")]
	private void ShowController()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x159BA5C", Offset = "0x159BA5C", VA = "0x159BA5C")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x159BB30", Offset = "0x159BB30", VA = "0x159BB30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x159B71C", Offset = "0x159B71C", VA = "0x159B71C")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x159BF48", Offset = "0x159BF48", VA = "0x159BF48")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x159BFC4", Offset = "0x159BFC4", VA = "0x159BFC4")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x159C048", Offset = "0x159C048", VA = "0x159C048")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x159D0CC", Offset = "0x159D0CC", VA = "0x159D0CC")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x159C19C", Offset = "0x159C19C", VA = "0x159C19C")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x159C1AC", Offset = "0x159C1AC", VA = "0x159C1AC")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x159C688", Offset = "0x159C688", VA = "0x159C688")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x159DA68", Offset = "0x159DA68", VA = "0x159DA68")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x20000D0")]
public class Pvr_ControllerDemo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x159DAD0", Offset = "0x159DAD0", VA = "0x159DAD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x159DC5C", Offset = "0x159DC5C", VA = "0x159DC5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x159DD74", Offset = "0x159DD74", VA = "0x159DD74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x159F654", Offset = "0x159F654", VA = "0x159F654")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x159F6EC", Offset = "0x159F6EC", VA = "0x159F6EC")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x159F784", Offset = "0x159F784", VA = "0x159F784")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x159F81C", Offset = "0x159F81C", VA = "0x159F81C")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x159F820", Offset = "0x159F820", VA = "0x159F820")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x20000D1")]
public class Pvr_ControllerEventsExamples : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000697")]
	[Address(RVA = "0x159F830", Offset = "0x159F830", VA = "0x159F830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x159FA68", Offset = "0x159FA68", VA = "0x159FA68")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x159FB08", Offset = "0x159FB08", VA = "0x159FB08")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x159FBA8", Offset = "0x159FBA8", VA = "0x159FBA8")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x159FC48", Offset = "0x159FC48", VA = "0x159FC48")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x159FCE8", Offset = "0x159FCE8", VA = "0x159FCE8")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x159FD88", Offset = "0x159FD88", VA = "0x159FD88")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x20000D2")]
public class Pvr_ControllerInit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8099C", Offset = "0xD8099C")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x170003B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0x15A1B8C", Offset = "0x15A1B8C", VA = "0x15A1B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x15A1BF4", Offset = "0x15A1BF4", VA = "0x15A1BF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x15A0B88", Offset = "0x15A0B88", VA = "0x15A0B88")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x15A17F8", Offset = "0x15A17F8", VA = "0x15A17F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x15A17FC", Offset = "0x15A17FC", VA = "0x15A17FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x15A1B94", Offset = "0x15A1B94", VA = "0x15A1B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x400065B")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x400065C")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x400065D")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x400065E")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x159FD90", Offset = "0x159FD90", VA = "0x159FD90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x159FF08", Offset = "0x159FF08", VA = "0x159FF08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x15A000C", Offset = "0x15A000C", VA = "0x15A000C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x15A029C", Offset = "0x15A029C", VA = "0x15A029C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x15A0494", Offset = "0x15A0494", VA = "0x15A0494")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x15A0680", Offset = "0x15A0680", VA = "0x15A0680")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x15A0A24", Offset = "0x15A0A24", VA = "0x15A0A24")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x15A0018", Offset = "0x15A0018", VA = "0x15A0018")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x15A076C", Offset = "0x15A076C", VA = "0x15A076C")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x15A0600", Offset = "0x15A0600", VA = "0x15A0600")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91B20", Offset = "0xD91B20")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x15A0BB4", Offset = "0x15A0BB4", VA = "0x15A0BB4")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x15A1158", Offset = "0x15A1158", VA = "0x15A1158")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x15A0E64", Offset = "0x15A0E64", VA = "0x15A0E64")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x15A156C", Offset = "0x15A156C", VA = "0x15A156C")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x15A1678", Offset = "0x15A1678", VA = "0x15A1678")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x15A1784", Offset = "0x15A1784", VA = "0x15A1784")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x20000D3")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x4000677")]
	private const float SWITCH_METER = 1000f;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float[] predictData;

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x15A1BFC", Offset = "0x15A1BFC", VA = "0x15A1BFC")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x15A1F90", Offset = "0x15A1F90", VA = "0x15A1F90")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x15A2990", Offset = "0x15A2990", VA = "0x15A2990")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x15A2734", Offset = "0x15A2734", VA = "0x15A2734")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x15A2844", Offset = "0x15A2844", VA = "0x15A2844")]
	public void BindService()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x15A2B18", Offset = "0x15A2B18", VA = "0x15A2B18")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x15A2C64", Offset = "0x15A2C64", VA = "0x15A2C64")]
	public void StopReceiver()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x15A2D5C", Offset = "0x15A2D5C", VA = "0x15A2D5C")]
	public void StartReceiver()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x15A2E80", Offset = "0x15A2E80", VA = "0x15A2E80")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x15A3090", Offset = "0x15A3090", VA = "0x15A3090")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x15A31E8", Offset = "0x15A31E8", VA = "0x15A31E8")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x15A3300", Offset = "0x15A3300", VA = "0x15A3300")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x15A25C0", Offset = "0x15A25C0", VA = "0x15A25C0")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x15A341C", Offset = "0x15A341C", VA = "0x15A341C")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x15A3620", Offset = "0x15A3620", VA = "0x15A3620")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x15A375C", Offset = "0x15A375C", VA = "0x15A375C")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x15A387C", Offset = "0x15A387C", VA = "0x15A387C")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x15A39B8", Offset = "0x15A39B8", VA = "0x15A39B8")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x15A3B30", Offset = "0x15A3B30", VA = "0x15A3B30")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x15A3C94", Offset = "0x15A3C94", VA = "0x15A3C94")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x15A3DFC", Offset = "0x15A3DFC", VA = "0x15A3DFC")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x15A3F60", Offset = "0x15A3F60", VA = "0x15A3F60")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x15A40C8", Offset = "0x15A40C8", VA = "0x15A40C8")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x15A4408", Offset = "0x15A4408", VA = "0x15A4408")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x15A45F0", Offset = "0x15A45F0", VA = "0x15A45F0")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x15A476C", Offset = "0x15A476C", VA = "0x15A476C")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x15A48E8", Offset = "0x15A48E8", VA = "0x15A48E8")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x15A4CB0", Offset = "0x15A4CB0", VA = "0x15A4CB0")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x15A4E78", Offset = "0x15A4E78", VA = "0x15A4E78")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x15A4F7C", Offset = "0x15A4F7C", VA = "0x15A4F7C")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x15A56F4", Offset = "0x15A56F4", VA = "0x15A56F4")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x15A5884", Offset = "0x15A5884", VA = "0x15A5884")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x15A5E2C", Offset = "0x15A5E2C", VA = "0x15A5E2C")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x15A63FC", Offset = "0x15A63FC", VA = "0x15A63FC")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x15A7710", Offset = "0x15A7710", VA = "0x15A7710")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x15A78B0", Offset = "0x15A78B0", VA = "0x15A78B0")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x15A9358", Offset = "0x15A9358", VA = "0x15A9358")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x15A9510", Offset = "0x15A9510", VA = "0x15A9510")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x15A9688", Offset = "0x15A9688", VA = "0x15A9688")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x15A984C", Offset = "0x15A984C", VA = "0x15A984C")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x15A9A10", Offset = "0x15A9A10", VA = "0x15A9A10")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x15A9B30", Offset = "0x15A9B30", VA = "0x15A9B30")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x15A9ED4", Offset = "0x15A9ED4", VA = "0x15A9ED4")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x15AA384", Offset = "0x15AA384", VA = "0x15AA384")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x15AA80C", Offset = "0x15AA80C", VA = "0x15AA80C")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x15AA970", Offset = "0x15AA970", VA = "0x15AA970")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x15AAC4C", Offset = "0x15AAC4C", VA = "0x15AAC4C")]
	public void VibrateController(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x15AAF28", Offset = "0x15AAF28", VA = "0x15AAF28")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x15AB0A0", Offset = "0x15AB0A0", VA = "0x15AB0A0")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x15AB1F4", Offset = "0x15AB1F4", VA = "0x15AB1F4")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x15AB31C", Offset = "0x15AB31C", VA = "0x15AB31C")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x15AB478", Offset = "0x15AB478", VA = "0x15AB478")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x15AB5D4", Offset = "0x15AB5D4", VA = "0x15AB5D4")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x15AB730", Offset = "0x15AB730", VA = "0x15AB730")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x15AB858", Offset = "0x15AB858", VA = "0x15AB858")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x15AB980", Offset = "0x15AB980", VA = "0x15AB980")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x15ABB3C", Offset = "0x15ABB3C", VA = "0x15ABB3C")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x15ABC98", Offset = "0x15ABC98", VA = "0x15ABC98")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x15ABDF4", Offset = "0x15ABDF4", VA = "0x15ABDF4")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x15ABF70", Offset = "0x15ABF70", VA = "0x15ABF70")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x15AC0EC", Offset = "0x15AC0EC", VA = "0x15AC0EC")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x15AC268", Offset = "0x15AC268", VA = "0x15AC268")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x15AC3C4", Offset = "0x15AC3C4", VA = "0x15AC3C4")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x15AC4EC", Offset = "0x15AC4EC", VA = "0x15AC4EC")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x15AC614", Offset = "0x15AC614", VA = "0x15AC614")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x15AC78C", Offset = "0x15AC78C", VA = "0x15AC78C")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x15AC840", Offset = "0x15AC840", VA = "0x15AC840")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x15AC960", Offset = "0x15AC960", VA = "0x15AC960")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x15ACAD4", Offset = "0x15ACAD4", VA = "0x15ACAD4")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x15ACC48", Offset = "0x15ACC48", VA = "0x15ACC48")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x15ACD50", Offset = "0x15ACD50", VA = "0x15ACD50")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x15ACEAC", Offset = "0x15ACEAC", VA = "0x15ACEAC")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x15AD008", Offset = "0x15AD008", VA = "0x15AD008")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x15AD168", Offset = "0x15AD168", VA = "0x15AD168")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x15AD2C4", Offset = "0x15AD2C4", VA = "0x15AD2C4")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x15AD420", Offset = "0x15AD420", VA = "0x15AD420")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x15AD588", Offset = "0x15AD588", VA = "0x15AD588")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x15AD6D4", Offset = "0x15AD6D4", VA = "0x15AD6D4")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x15AD83C", Offset = "0x15AD83C", VA = "0x15AD83C")]
	public float[] GetControllerPredictSensorData(int controllerID, float predictTime)
	{
		return null;
	}
}
[Token(Token = "0x20000D4")]
public class Pvr_ControllerManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200042F")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x2000430")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x2000431")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x2000432")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x2000433")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x2000434")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x2000435")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x2000436")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x2000437")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x2000438")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x2000439")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x200043A")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x200043B")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x200043C")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x200043D")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x200043E")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x200043F")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x2000440")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x2000441")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x2000442")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x170000FE")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x1B34E08", Offset = "0x1B34E08", VA = "0x1B34E08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000003")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x1B35038", Offset = "0x1B35038", VA = "0x1B35038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91B84", Offset = "0xD91B84")]
		add
		{
		}
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x1B35128", Offset = "0x1B35128", VA = "0x1B35128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91B94", Offset = "0xD91B94")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1B35218", Offset = "0x1B35218", VA = "0x1B35218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91BA4", Offset = "0xD91BA4")]
		add
		{
		}
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1B35308", Offset = "0x1B35308", VA = "0x1B35308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91BB4", Offset = "0xD91BB4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1B353F8", Offset = "0x1B353F8", VA = "0x1B353F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91BC4", Offset = "0xD91BC4")]
		add
		{
		}
		[Token(Token = "0x6000703")]
		[Address(RVA = "0x1B354E8", Offset = "0x1B354E8", VA = "0x1B354E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91BD4", Offset = "0xD91BD4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1B355D8", Offset = "0x1B355D8", VA = "0x1B355D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91BE4", Offset = "0xD91BE4")]
		add
		{
		}
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x1B356C8", Offset = "0x1B356C8", VA = "0x1B356C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91BF4", Offset = "0xD91BF4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1B357B8", Offset = "0x1B357B8", VA = "0x1B357B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91C04", Offset = "0xD91C04")]
		add
		{
		}
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x1B358A8", Offset = "0x1B358A8", VA = "0x1B358A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91C14", Offset = "0xD91C14")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x1B35998", Offset = "0x1B35998", VA = "0x1B35998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91C24", Offset = "0xD91C24")]
		add
		{
		}
		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1B35A88", Offset = "0x1B35A88", VA = "0x1B35A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91C34", Offset = "0xD91C34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x1B35B78", Offset = "0x1B35B78", VA = "0x1B35B78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91C44", Offset = "0xD91C44")]
		add
		{
		}
		[Token(Token = "0x600070B")]
		[Address(RVA = "0x1B35C68", Offset = "0x1B35C68", VA = "0x1B35C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91C54", Offset = "0xD91C54")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1B35D58", Offset = "0x1B35D58", VA = "0x1B35D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91C64", Offset = "0xD91C64")]
		add
		{
		}
		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1B35E48", Offset = "0x1B35E48", VA = "0x1B35E48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91C74", Offset = "0xD91C74")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x600070E")]
		[Address(RVA = "0x1B35F38", Offset = "0x1B35F38", VA = "0x1B35F38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91C84", Offset = "0xD91C84")]
		add
		{
		}
		[Token(Token = "0x600070F")]
		[Address(RVA = "0x1B36028", Offset = "0x1B36028", VA = "0x1B36028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91C94", Offset = "0xD91C94")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x6000710")]
		[Address(RVA = "0x1B36118", Offset = "0x1B36118", VA = "0x1B36118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91CA4", Offset = "0xD91CA4")]
		add
		{
		}
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x1B36208", Offset = "0x1B36208", VA = "0x1B36208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91CB4", Offset = "0xD91CB4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1B362F8", Offset = "0x1B362F8", VA = "0x1B362F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91CC4", Offset = "0xD91CC4")]
		add
		{
		}
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x1B363E8", Offset = "0x1B363E8", VA = "0x1B363E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91CD4", Offset = "0xD91CD4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000714")]
		[Address(RVA = "0x1B364D8", Offset = "0x1B364D8", VA = "0x1B364D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91CE4", Offset = "0xD91CE4")]
		add
		{
		}
		[Token(Token = "0x6000715")]
		[Address(RVA = "0x1B365C8", Offset = "0x1B365C8", VA = "0x1B365C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91CF4", Offset = "0xD91CF4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x1B366B8", Offset = "0x1B366B8", VA = "0x1B366B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91D04", Offset = "0xD91D04")]
		add
		{
		}
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x1B367A8", Offset = "0x1B367A8", VA = "0x1B367A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91D14", Offset = "0xD91D14")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x1B36898", Offset = "0x1B36898", VA = "0x1B36898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91D24", Offset = "0xD91D24")]
		add
		{
		}
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x1B36988", Offset = "0x1B36988", VA = "0x1B36988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91D34", Offset = "0xD91D34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1B36A78", Offset = "0x1B36A78", VA = "0x1B36A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91D44", Offset = "0xD91D44")]
		add
		{
		}
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x1B36B68", Offset = "0x1B36B68", VA = "0x1B36B68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91D54", Offset = "0xD91D54")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1B36C58", Offset = "0x1B36C58", VA = "0x1B36C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91D64", Offset = "0xD91D64")]
		add
		{
		}
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x1B36D48", Offset = "0x1B36D48", VA = "0x1B36D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91D74", Offset = "0xD91D74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x1B36E38", Offset = "0x1B36E38", VA = "0x1B36E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91D84", Offset = "0xD91D84")]
		add
		{
		}
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x1B36F28", Offset = "0x1B36F28", VA = "0x1B36F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91D94", Offset = "0xD91D94")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x1B37018", Offset = "0x1B37018", VA = "0x1B37018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91DA4", Offset = "0xD91DA4")]
		add
		{
		}
		[Token(Token = "0x6000721")]
		[Address(RVA = "0x1B37108", Offset = "0x1B37108", VA = "0x1B37108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91DB4", Offset = "0xD91DB4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x1B371F8", Offset = "0x1B371F8", VA = "0x1B371F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91DC4", Offset = "0xD91DC4")]
		add
		{
		}
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x1B372E8", Offset = "0x1B372E8", VA = "0x1B372E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91DD4", Offset = "0xD91DD4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1B373D8", Offset = "0x1B373D8", VA = "0x1B373D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91DE4", Offset = "0xD91DE4")]
		add
		{
		}
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1B374C8", Offset = "0x1B374C8", VA = "0x1B374C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91DF4", Offset = "0xD91DF4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1B375B8", Offset = "0x1B375B8", VA = "0x1B375B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1B378B0", Offset = "0x1B378B0", VA = "0x1B378B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1B37958", Offset = "0x1B37958", VA = "0x1B37958")]
	private void Update()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x1B39410", Offset = "0x1B39410", VA = "0x1B39410")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1B39A90", Offset = "0x1B39A90", VA = "0x1B39A90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1B39B70", Offset = "0x1B39B70", VA = "0x1B39B70")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1B39CB8", Offset = "0x1B39CB8", VA = "0x1B39CB8")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x1B39D9C", Offset = "0x1B39D9C", VA = "0x1B39D9C")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x1B37808", Offset = "0x1B37808", VA = "0x1B37808")]
	public void BindService()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x1B39E80", Offset = "0x1B39E80", VA = "0x1B39E80")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x1B39F28", Offset = "0x1B39F28", VA = "0x1B39F28")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x1B39FD0", Offset = "0x1B39FD0", VA = "0x1B39FD0")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1B39808", Offset = "0x1B39808", VA = "0x1B39808")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1B3A080", Offset = "0x1B3A080", VA = "0x1B3A080")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1B3A128", Offset = "0x1B3A128", VA = "0x1B3A128")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x1B3A1D0", Offset = "0x1B3A1D0", VA = "0x1B3A1D0")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1B3A294", Offset = "0x1B3A294", VA = "0x1B3A294")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1B3A33C", Offset = "0x1B3A33C", VA = "0x1B3A33C")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x1B3A3B0", Offset = "0x1B3A3B0", VA = "0x1B3A3B0")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1B3A424", Offset = "0x1B3A424", VA = "0x1B3A424")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1B3A498", Offset = "0x1B3A498", VA = "0x1B3A498")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1B3A50C", Offset = "0x1B3A50C", VA = "0x1B3A50C")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x1B3A5BC", Offset = "0x1B3A5BC", VA = "0x1B3A5BC")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x1B3A674", Offset = "0x1B3A674", VA = "0x1B3A674")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1B3ABC0", Offset = "0x1B3ABC0", VA = "0x1B3ABC0")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x1B3AC34", Offset = "0x1B3AC34", VA = "0x1B3AC34")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x1B3B0CC", Offset = "0x1B3B0CC", VA = "0x1B3B0CC")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x1B3B564", Offset = "0x1B3B564", VA = "0x1B3B564")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1B3BF24", Offset = "0x1B3BF24", VA = "0x1B3BF24")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1B3C854", Offset = "0x1B3C854", VA = "0x1B3C854")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1B3CCE0", Offset = "0x1B3CCE0", VA = "0x1B3CCE0")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1B3D32C", Offset = "0x1B3D32C", VA = "0x1B3D32C")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1B3D7B8", Offset = "0x1B3D7B8", VA = "0x1B3D7B8")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1B3DC44", Offset = "0x1B3DC44", VA = "0x1B3DC44")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1B3E0D0", Offset = "0x1B3E0D0", VA = "0x1B3E0D0")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x1B3E55C", Offset = "0x1B3E55C", VA = "0x1B3E55C")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1B3E9E8", Offset = "0x1B3E9E8", VA = "0x1B3E9E8")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x1B3EE74", Offset = "0x1B3EE74", VA = "0x1B3EE74")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x1B3F300", Offset = "0x1B3F300", VA = "0x1B3F300")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1B3F78C", Offset = "0x1B3F78C", VA = "0x1B3F78C")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x1B3FBCC", Offset = "0x1B3FBCC", VA = "0x1B3FBCC")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x1B3FBD0", Offset = "0x1B3FBD0", VA = "0x1B3FBD0")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x1B3FBD4", Offset = "0x1B3FBD4", VA = "0x1B3FBD4")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x1B3FBD8", Offset = "0x1B3FBD8", VA = "0x1B3FBD8")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1B3FEF4", Offset = "0x1B3FEF4", VA = "0x1B3FEF4")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1B40050", Offset = "0x1B40050", VA = "0x1B40050")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x1B40530", Offset = "0x1B40530", VA = "0x1B40530")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x1B3FD2C", Offset = "0x1B3FD2C", VA = "0x1B3FD2C")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x1B40A10", Offset = "0x1B40A10", VA = "0x1B40A10")]
	private void HideToast()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x1B40AB8", Offset = "0x1B40AB8", VA = "0x1B40AB8")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x1B3CE18", Offset = "0x1B3CE18", VA = "0x1B3CE18")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1B38CF4", Offset = "0x1B38CF4", VA = "0x1B38CF4")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1B38918", Offset = "0x1B38918", VA = "0x1B38918")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x1B40ACC", Offset = "0x1B40ACC", VA = "0x1B40ACC")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x1B40C1C", Offset = "0x1B40C1C", VA = "0x1B40C1C")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x1B40CC0", Offset = "0x1B40CC0", VA = "0x1B40CC0")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1B40DC0", Offset = "0x1B40DC0", VA = "0x1B40DC0")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x20000D5")]
public class Pvr_ControllerModuleInit : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD809AC", Offset = "0xD809AC")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x170003BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x1B41BAC", Offset = "0x1B41BAC", VA = "0x1B41BAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0x1B41C14", Offset = "0x1B41C14", VA = "0x1B41C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x1B41798", Offset = "0x1B41798", VA = "0x1B41798")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x1B41ADC", Offset = "0x1B41ADC", VA = "0x1B41ADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x1B41AE0", Offset = "0x1B41AE0", VA = "0x1B41AE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x1B41BB4", Offset = "0x1B41BB4", VA = "0x1B41BB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x1B41394", Offset = "0x1B41394", VA = "0x1B41394")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1B4151C", Offset = "0x1B4151C", VA = "0x1B4151C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1B41604", Offset = "0x1B41604", VA = "0x1B41604")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x1B4160C", Offset = "0x1B4160C", VA = "0x1B4160C")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1B41714", Offset = "0x1B41714", VA = "0x1B41714")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1B41608", Offset = "0x1B41608", VA = "0x1B41608")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1B41718", Offset = "0x1B41718", VA = "0x1B41718")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91E04", Offset = "0xD91E04")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1B417C4", Offset = "0x1B417C4", VA = "0x1B417C4")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1B418C0", Offset = "0x1B418C0", VA = "0x1B418C0")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1B41ACC", Offset = "0x1B41ACC", VA = "0x1B41ACC")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x20000D6")]
public class Pvr_ControllerPower : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1B41C1C", Offset = "0x1B41C1C", VA = "0x1B41C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x1B41CE4", Offset = "0x1B41CE4", VA = "0x1B41CE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x1B41D04", Offset = "0x1B41D04", VA = "0x1B41D04")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x1B41E24", Offset = "0x1B41E24", VA = "0x1B41E24")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x20000D7")]
public class Pvr_ControllerVisual : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x1B41E2C", Offset = "0x1B41E2C", VA = "0x1B41E2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x1B41E84", Offset = "0x1B41E84", VA = "0x1B41E84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1B41EF4", Offset = "0x1B41EF4", VA = "0x1B41EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x1B41F14", Offset = "0x1B41F14", VA = "0x1B41F14")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x1B42240", Offset = "0x1B42240", VA = "0x1B42240")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x20000D8")]
public class Pvr_ToolTips : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000444")]
	public enum TipBtn
	{
		[Token(Token = "0x4001D19")]
		app,
		[Token(Token = "0x4001D1A")]
		touchpad,
		[Token(Token = "0x4001D1B")]
		home,
		[Token(Token = "0x4001D1C")]
		volup,
		[Token(Token = "0x4001D1D")]
		voldown,
		[Token(Token = "0x4001D1E")]
		trigger,
		[Token(Token = "0x4001D1F")]
		grip
	}

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x1B47A74", Offset = "0x1B47A74", VA = "0x1B47A74")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1B47BEC", Offset = "0x1B47BEC", VA = "0x1B47BEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1B47C64", Offset = "0x1B47C64", VA = "0x1B47C64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x1B47E68", Offset = "0x1B47E68", VA = "0x1B47E68")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x1B482B4", Offset = "0x1B482B4", VA = "0x1B482B4")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1B48358", Offset = "0x1B48358", VA = "0x1B48358")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x20000D9")]
public class Pvr_TouchPadScroll : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x1B48360", Offset = "0x1B48360", VA = "0x1B48360")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x1B483F0", Offset = "0x1B483F0", VA = "0x1B483F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x1B48898", Offset = "0x1B48898", VA = "0x1B48898")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x1B48538", Offset = "0x1B48538", VA = "0x1B48538")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x1B48A54", Offset = "0x1B48A54", VA = "0x1B48A54")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x1B48DA4", Offset = "0x1B48DA4", VA = "0x1B48DA4")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x1B49128", Offset = "0x1B49128", VA = "0x1B49128")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x1B4868C", Offset = "0x1B4868C", VA = "0x1B4868C")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x1B48978", Offset = "0x1B48978", VA = "0x1B48978")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x1B4841C", Offset = "0x1B4841C", VA = "0x1B4841C")]
	private void Process()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x1B49164", Offset = "0x1B49164", VA = "0x1B49164")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x1B49354", Offset = "0x1B49354", VA = "0x1B49354")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1B49440", Offset = "0x1B49440", VA = "0x1B49440")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x20000DA")]
public class Pvr_TouchVisual : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x1B494FC", Offset = "0x1B494FC", VA = "0x1B494FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1B495A4", Offset = "0x1B495A4", VA = "0x1B495A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1B495C4", Offset = "0x1B495C4", VA = "0x1B495C4")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x1B496D4", Offset = "0x1B496D4", VA = "0x1B496D4")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x20000DB")]
public class DemoController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000445")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x2000446")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD809BC", Offset = "0xD809BC")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x157ED30", Offset = "0x157ED30", VA = "0x157ED30")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x157F554", Offset = "0x157F554", VA = "0x157F554")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x157E5A0", Offset = "0x157E5A0", VA = "0x157E5A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x157E750", Offset = "0x157E750", VA = "0x157E750")]
	private void Start()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x157EBCC", Offset = "0x157EBCC", VA = "0x157EBCC")]
	private void Update()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x157E814", Offset = "0x157E814", VA = "0x157E814")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x157ED38", Offset = "0x157ED38", VA = "0x157ED38")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x157F068", Offset = "0x157F068", VA = "0x157F068")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x157F024", Offset = "0x157F024", VA = "0x157F024")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x157F0AC", Offset = "0x157F0AC", VA = "0x157F0AC")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x157F1BC", Offset = "0x157F1BC", VA = "0x157F1BC")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x157F47C", Offset = "0x157F47C", VA = "0x157F47C")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x157F54C", Offset = "0x157F54C", VA = "0x157F54C")]
	public DemoController()
	{
	}
}
[Token(Token = "0x20000DC")]
public class LoadingRatation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000795")]
	[Address(RVA = "0x18DB778", Offset = "0x18DB778", VA = "0x18DB778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x18DB77C", Offset = "0x18DB77C", VA = "0x18DB77C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x18DB7F0", Offset = "0x18DB7F0", VA = "0x18DB7F0")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x20000DD")]
public class InputManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000447")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD809CC", Offset = "0xD809CC")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x170B870", Offset = "0x170B870", VA = "0x170B870")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x170C448", Offset = "0x170C448", VA = "0x170C448")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x170AF94", Offset = "0x170AF94", VA = "0x170AF94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x170B868", Offset = "0x170B868", VA = "0x170B868")]
	private void Start()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x170B86C", Offset = "0x170B86C", VA = "0x170B86C")]
	private void Update()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x170AF98", Offset = "0x170AF98", VA = "0x170AF98")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x170B878", Offset = "0x170B878", VA = "0x170B878")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x170C2D4", Offset = "0x170C2D4", VA = "0x170C2D4")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x170BAAC", Offset = "0x170BAAC", VA = "0x170BAAC")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x170C058", Offset = "0x170C058", VA = "0x170C058")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x170C3C0", Offset = "0x170C3C0", VA = "0x170C3C0")]
	public InputManager()
	{
	}
}
[Token(Token = "0x20000DE")]
public class Callback : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x1574C58", Offset = "0x1574C58", VA = "0x1574C58")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x15751FC", Offset = "0x15751FC", VA = "0x15751FC")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x157540C", Offset = "0x157540C", VA = "0x157540C")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x1574E64", Offset = "0x1574E64", VA = "0x1574E64")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x15754D8", Offset = "0x15754D8", VA = "0x15754D8")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1575524", Offset = "0x1575524", VA = "0x1575524")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x157564C", Offset = "0x157564C", VA = "0x157564C")]
	public Callback()
	{
	}
}
[Token(Token = "0x20000DF")]
public class CommonDic
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x170000FF")]
	public string subject
	{
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x1578CF8", Offset = "0x1578CF8", VA = "0x1578CF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x1578D00", Offset = "0x1578D00", VA = "0x1578D00")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public string body
	{
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x1578D08", Offset = "0x1578D08", VA = "0x1578D08")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x1578D10", Offset = "0x1578D10", VA = "0x1578D10")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public string order_id
	{
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x1578D18", Offset = "0x1578D18", VA = "0x1578D18")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x1578D20", Offset = "0x1578D20", VA = "0x1578D20")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public string total
	{
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x1578D28", Offset = "0x1578D28", VA = "0x1578D28")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x1578D30", Offset = "0x1578D30", VA = "0x1578D30")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public string goods_tag
	{
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x1578D38", Offset = "0x1578D38", VA = "0x1578D38")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x1578D40", Offset = "0x1578D40", VA = "0x1578D40")]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public string notify_url
	{
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x1578D48", Offset = "0x1578D48", VA = "0x1578D48")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1578D50", Offset = "0x1578D50", VA = "0x1578D50")]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public string pay_code
	{
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1578D58", Offset = "0x1578D58", VA = "0x1578D58")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1578D60", Offset = "0x1578D60", VA = "0x1578D60")]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public string trade_type
	{
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1578D68", Offset = "0x1578D68", VA = "0x1578D68")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x1578D70", Offset = "0x1578D70", VA = "0x1578D70")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public string user_token
	{
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x1578D78", Offset = "0x1578D78", VA = "0x1578D78")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x1578D80", Offset = "0x1578D80", VA = "0x1578D80")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public string access_token
	{
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x1578D88", Offset = "0x1578D88", VA = "0x1578D88")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x1578D90", Offset = "0x1578D90", VA = "0x1578D90")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public string open_id
	{
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x1578D98", Offset = "0x1578D98", VA = "0x1578D98")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x1578DA0", Offset = "0x1578DA0", VA = "0x1578DA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public string refresh_token
	{
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x1578DA8", Offset = "0x1578DA8", VA = "0x1578DA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1578DB0", Offset = "0x1578DB0", VA = "0x1578DB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public string expires_in
	{
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x1578DB8", Offset = "0x1578DB8", VA = "0x1578DB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x1578DC0", Offset = "0x1578DC0", VA = "0x1578DC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public string isSuccess
	{
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x1578DC8", Offset = "0x1578DC8", VA = "0x1578DC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x1578DD0", Offset = "0x1578DD0", VA = "0x1578DD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public string loginMsg
	{
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x1578DD8", Offset = "0x1578DD8", VA = "0x1578DD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x1578DE0", Offset = "0x1578DE0", VA = "0x1578DE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public string user_info
	{
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x1578DE8", Offset = "0x1578DE8", VA = "0x1578DE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x1578DF0", Offset = "0x1578DF0", VA = "0x1578DF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public string order_info
	{
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x1578DF8", Offset = "0x1578DF8", VA = "0x1578DF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x1578E00", Offset = "0x1578E00", VA = "0x1578E00")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public string code
	{
		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x1578E08", Offset = "0x1578E08", VA = "0x1578E08")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x1578E10", Offset = "0x1578E10", VA = "0x1578E10")]
		set
		{
		}
	}

	[Token(Token = "0x17000111")]
	public string msg
	{
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x1578E18", Offset = "0x1578E18", VA = "0x1578E18")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x1578E20", Offset = "0x1578E20", VA = "0x1578E20")]
		set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public string app_ID
	{
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x1578E28", Offset = "0x1578E28", VA = "0x1578E28")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x1578E30", Offset = "0x1578E30", VA = "0x1578E30")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public string app_Key
	{
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x1578E38", Offset = "0x1578E38", VA = "0x1578E38")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1578E40", Offset = "0x1578E40", VA = "0x1578E40")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public string merchant_ID
	{
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x1578E48", Offset = "0x1578E48", VA = "0x1578E48")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x1578E50", Offset = "0x1578E50", VA = "0x1578E50")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public string paykey
	{
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1578E58", Offset = "0x1578E58", VA = "0x1578E58")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1578E60", Offset = "0x1578E60", VA = "0x1578E60")]
		set
		{
		}
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x1575138", Offset = "0x1575138", VA = "0x1575138")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x1578AE0", Offset = "0x1578AE0", VA = "0x1578AE0")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1578B30", Offset = "0x1578B30", VA = "0x1578B30")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1578C88", Offset = "0x1578C88", VA = "0x1578C88")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x157865C", Offset = "0x157865C", VA = "0x157865C")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x15785F0", Offset = "0x15785F0", VA = "0x15785F0")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x20000E0")]
public class LoginSDK
{
	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x18DB7F8", Offset = "0x18DB7F8", VA = "0x18DB7F8")]
	public static void Login()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x18DB858", Offset = "0x18DB858", VA = "0x18DB858")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x18DB8B8", Offset = "0x18DB8B8", VA = "0x18DB8B8")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x20000E1")]
public class PicoPaymentSDK
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000116")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1598A94", Offset = "0x1598A94", VA = "0x1598A94")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x1598AFC", Offset = "0x1598AFC", VA = "0x1598AFC")]
		set
		{
		}
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1598B68", Offset = "0x1598B68", VA = "0x1598B68")]
	public static void Login()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1598DD4", Offset = "0x1598DD4", VA = "0x1598DD4")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1598FFC", Offset = "0x1598FFC", VA = "0x1598FFC")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1599224", Offset = "0x1599224", VA = "0x1599224")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1599490", Offset = "0x1599490", VA = "0x1599490")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x20000E2")]
public class Pvr_ToBService : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1B47548", Offset = "0x1B47548", VA = "0x1B47548")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x1B47580", Offset = "0x1B47580", VA = "0x1B47580")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x1B47590", Offset = "0x1B47590", VA = "0x1B47590")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1B4754C", Offset = "0x1B4754C", VA = "0x1B4754C")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1B47588", Offset = "0x1B47588", VA = "0x1B47588")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1B47598", Offset = "0x1B47598", VA = "0x1B47598")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1B475A0", Offset = "0x1B475A0", VA = "0x1B475A0")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1B47650", Offset = "0x1B47650", VA = "0x1B47650")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1B476E4", Offset = "0x1B476E4", VA = "0x1B476E4")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1B47778", Offset = "0x1B47778", VA = "0x1B47778")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1B47800", Offset = "0x1B47800", VA = "0x1B47800")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1B47880", Offset = "0x1B47880", VA = "0x1B47880")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1B47930", Offset = "0x1B47930", VA = "0x1B47930")]
	public void AppManager()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1B479BC", Offset = "0x1B479BC", VA = "0x1B479BC")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1B47A6C", Offset = "0x1B47A6C", VA = "0x1B47A6C")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x20000E3")]
public class PLOG : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1BC910C", Offset = "0x1BC910C", VA = "0x1BC910C")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1BC9178", Offset = "0x1BC9178", VA = "0x1BC9178")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1BC9220", Offset = "0x1BC9220", VA = "0x1BC9220")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1BC92C8", Offset = "0x1BC92C8", VA = "0x1BC92C8")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1BC9370", Offset = "0x1BC9370", VA = "0x1BC9370")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1BC93D8", Offset = "0x1BC93D8", VA = "0x1BC93D8")]
	public PLOG()
	{
	}
}
[Token(Token = "0x20000E4")]
public class PicoDevice : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000449")]
	public enum DeviceType
	{
		[Token(Token = "0x4001D25")]
		HMD,
		[Token(Token = "0x4001D26")]
		LeftController,
		[Token(Token = "0x4001D27")]
		RightController
	}

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DeviceType deviceType;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 devicePos;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion deviceRot;

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x15988AC", Offset = "0x15988AC", VA = "0x15988AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x15988B0", Offset = "0x15988B0", VA = "0x15988B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1598A8C", Offset = "0x1598A8C", VA = "0x1598A8C")]
	public PicoDevice()
	{
	}
}
[Token(Token = "0x20000E5")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x1574C50", Offset = "0x1574C50", VA = "0x1574C50")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E6")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x18F7DD4", Offset = "0x18F7DD4", VA = "0x18F7DD4")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x18FF1DC", Offset = "0x18FF1DC", VA = "0x18FF1DC")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x20000E7")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x200044A")]
	public enum simulationType
	{
		[Token(Token = "0x4001D29")]
		Null,
		[Token(Token = "0x4001D2A")]
		Invalid,
		[Token(Token = "0x4001D2B")]
		Valid
	}

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000117")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x18FE504", Offset = "0x18FE504", VA = "0x18FE504")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x18FE524", Offset = "0x18FE524", VA = "0x18FE524")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x18FE16C", Offset = "0x18FE16C", VA = "0x18FE16C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x18FE570", Offset = "0x18FE570", VA = "0x18FE570")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x18FE18C", Offset = "0x18FE18C", VA = "0x18FE18C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x18FE5BC", Offset = "0x18FE5BC", VA = "0x18FE5BC")]
		set
		{
		}
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x18FE610", Offset = "0x18FE610", VA = "0x18FE610")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x20000E8")]
public class Pvr_UnitySDKManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200044B")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD809DC", Offset = "0xD809DC")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x170003BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x18FE3EC", Offset = "0x18FE3EC", VA = "0x18FE3EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x18FE454", Offset = "0x18FE454", VA = "0x18FE454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x18F9218", Offset = "0x18F9218", VA = "0x18F9218")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x18FE2B4", Offset = "0x18FE2B4", VA = "0x18FE2B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x18FE2B8", Offset = "0x18FE2B8", VA = "0x18FE2B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x18FE3F4", Offset = "0x18FE3F4", VA = "0x18FE3F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD809EC", Offset = "0xD809EC")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x18FA5F8", Offset = "0x18FA5F8", VA = "0x18FA5F8")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x18FD2D0", Offset = "0x18FD2D0", VA = "0x18FD2D0")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD809FC", Offset = "0xD809FC")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x170003BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x18FD3DC", Offset = "0x18FD3DC", VA = "0x18FD3DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F71")]
			[Address(RVA = "0x18FD444", Offset = "0x18FD444", VA = "0x18FD444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x18FA930", Offset = "0x18FA930", VA = "0x18FA930")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x18FD320", Offset = "0x18FD320", VA = "0x18FD320", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x18FD324", Offset = "0x18FD324", VA = "0x18FD324", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x18FD3E4", Offset = "0x18FD3E4", VA = "0x18FD3E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80A0C", Offset = "0xD80A0C")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x170003C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x18FE244", Offset = "0x18FE244", VA = "0x18FE244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x18FE2AC", Offset = "0x18FE2AC", VA = "0x18FE2AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x18FC5A4", Offset = "0x18FC5A4", VA = "0x18FC5A4")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x18FDF28", Offset = "0x18FDF28", VA = "0x18FDF28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x18FDF2C", Offset = "0x18FDF2C", VA = "0x18FDF2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x18FE24C", Offset = "0x18FE24C", VA = "0x18FE24C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000450")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80A1C", Offset = "0xD80A1C")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x170003C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x18FD744", Offset = "0x18FD744", VA = "0x18FD744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x18FD7AC", Offset = "0x18FD7AC", VA = "0x18FD7AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x18FC630", Offset = "0x18FC630", VA = "0x18FC630")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x18FD44C", Offset = "0x18FD44C", VA = "0x18FD44C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x18FD450", Offset = "0x18FD450", VA = "0x18FD450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x18FD74C", Offset = "0x18FD74C", VA = "0x18FD74C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000451")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80A2C", Offset = "0xD80A2C")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x170003C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x18FDEB8", Offset = "0x18FDEB8", VA = "0x18FDEB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x18FDF20", Offset = "0x18FDF20", VA = "0x18FDF20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x18FD1C0", Offset = "0x18FD1C0", VA = "0x18FD1C0")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x18FD7B4", Offset = "0x18FD7B4", VA = "0x18FD7B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x18FD7B8", Offset = "0x18FD7B8", VA = "0x18FD7B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x18FDEC0", Offset = "0x18FDEC0", VA = "0x18FDEC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82880", Offset = "0xD82880")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x1700011A")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x18F1DD0", Offset = "0x18F1DD0", VA = "0x18F1DD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011B")]
	public bool Rotfoldout
	{
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x18F7CDC", Offset = "0x18F7CDC", VA = "0x18F7CDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x18F7CE4", Offset = "0x18F7CE4", VA = "0x18F7CE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x18F7D04", Offset = "0x18F7D04", VA = "0x18F7D04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600080F")]
		[Address(RVA = "0x18F7D0C", Offset = "0x18F7D0C", VA = "0x18F7D0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x6000810")]
		[Address(RVA = "0x18F7D2C", Offset = "0x18F7D2C", VA = "0x18F7D2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x18F7D34", Offset = "0x18F7D34", VA = "0x18F7D34")]
		set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x18F7D54", Offset = "0x18F7D54", VA = "0x18F7D54")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x18F7D5C", Offset = "0x18F7D5C", VA = "0x18F7D5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x18F7E64", Offset = "0x18F7E64", VA = "0x18F7E64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x18F7E6C", Offset = "0x18F7E6C", VA = "0x18F7E6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x18F7E8C", Offset = "0x18F7E8C", VA = "0x18F7E8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91E68", Offset = "0xD91E68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600081A")]
		[Address(RVA = "0x18F7E94", Offset = "0x18F7E94", VA = "0x18F7E94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91E78", Offset = "0xD91E78")]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public bool ShowFPS
	{
		[Token(Token = "0x600081B")]
		[Address(RVA = "0x18F7EA0", Offset = "0x18F7EA0", VA = "0x18F7EA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600081C")]
		[Address(RVA = "0x18F7EA8", Offset = "0x18F7EA8", VA = "0x18F7EA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public bool PVRNeck
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x18F7EC8", Offset = "0x18F7EC8", VA = "0x18F7EC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x18F7ED0", Offset = "0x18F7ED0", VA = "0x18F7ED0")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x18F7EF0", Offset = "0x18F7EF0", VA = "0x18F7EF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000820")]
		[Address(RVA = "0x18F7EF8", Offset = "0x18F7EF8", VA = "0x18F7EF8")]
		set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x18F7F24", Offset = "0x18F7F24", VA = "0x18F7F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91E88", Offset = "0xD91E88")]
		add
		{
		}
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x18F8014", Offset = "0x18F8014", VA = "0x18F8014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD91E98", Offset = "0xD91E98")]
		remove
		{
		}
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x18F7D7C", Offset = "0x18F7D7C", VA = "0x18F7D7C")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x18F1EF8", Offset = "0x18F1EF8", VA = "0x18F1EF8")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x18F7E28", Offset = "0x18F7E28", VA = "0x18F7E28")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x18F8104", Offset = "0x18F8104", VA = "0x18F8104")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x18F8254", Offset = "0x18F8254", VA = "0x18F8254")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x18F838C", Offset = "0x18F838C", VA = "0x18F838C")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x18F8AAC", Offset = "0x18F8AAC", VA = "0x18F8AAC")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x18F8E2C", Offset = "0x18F8E2C", VA = "0x18F8E2C")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x18F90DC", Offset = "0x18F90DC", VA = "0x18F90DC")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x18F870C", Offset = "0x18F870C", VA = "0x18F870C")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x18F9214", Offset = "0x18F9214", VA = "0x18F9214")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x18F8A10", Offset = "0x18F8A10", VA = "0x18F8A10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91EA8", Offset = "0xD91EA8")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x18F9244", Offset = "0x18F9244", VA = "0x18F9244")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x18F93F0", Offset = "0x18F93F0", VA = "0x18F93F0")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x18FA368", Offset = "0x18FA368", VA = "0x18FA368")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x18FA4B4", Offset = "0x18FA4B4", VA = "0x18FA4B4")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x18F9778", Offset = "0x18F9778", VA = "0x18F9778")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x18F9C74", Offset = "0x18F9C74", VA = "0x18F9C74")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x18FA050", Offset = "0x18FA050", VA = "0x18FA050")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x18FA600", Offset = "0x18FA600", VA = "0x18FA600")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x18FA2E8", Offset = "0x18FA2E8", VA = "0x18FA2E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91F0C", Offset = "0xD91F0C")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x18FA8B4", Offset = "0x18FA8B4", VA = "0x18FA8B4")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x18FA95C", Offset = "0x18FA95C", VA = "0x18FA95C")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x18F81E0", Offset = "0x18F81E0", VA = "0x18F81E0")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x18FAB18", Offset = "0x18FAB18", VA = "0x18FAB18")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x18FABC4", Offset = "0x18FABC4", VA = "0x18FABC4")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x18FABCC", Offset = "0x18FABCC", VA = "0x18FABCC")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x18FACC8", Offset = "0x18FACC8", VA = "0x18FACC8")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x18FB09C", Offset = "0x18FB09C", VA = "0x18FB09C")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x18FB434", Offset = "0x18FB434", VA = "0x18FB434")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x18FB564", Offset = "0x18FB564", VA = "0x18FB564")]
	private void Awake()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x18FC534", Offset = "0x18FC534", VA = "0x18FC534")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91F70", Offset = "0xD91F70")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x18FC5D0", Offset = "0x18FC5D0", VA = "0x18FC5D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD91FD4", Offset = "0xD91FD4")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x18FC65C", Offset = "0x18FC65C", VA = "0x18FC65C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x18FC928", Offset = "0x18FC928", VA = "0x18FC928")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x18FCA88", Offset = "0x18FCA88", VA = "0x18FCA88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x18FCBB8", Offset = "0x18FCBB8", VA = "0x18FCBB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x18FCBC0", Offset = "0x18FCBC0", VA = "0x18FCBC0")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x18FCE1C", Offset = "0x18FCE1C", VA = "0x18FCE1C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x18FD0C8", Offset = "0x18FD0C8", VA = "0x18FD0C8")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x18FCC68", Offset = "0x18FCC68", VA = "0x18FCC68")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x18FD1B8", Offset = "0x18FD1B8", VA = "0x18FD1B8")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x18FBF70", Offset = "0x18FBF70", VA = "0x18FBF70")]
	private void InitUI()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x18FC16C", Offset = "0x18FC16C", VA = "0x18FC16C")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x18FBB98", Offset = "0x18FBB98", VA = "0x18FBB98")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x18FD058", Offset = "0x18FD058", VA = "0x18FD058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD92038", Offset = "0xD92038")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x18FD1EC", Offset = "0x18FD1EC", VA = "0x18FD1EC")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x20000E9")]
public class QuitGame : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000850")]
	[Address(RVA = "0x1906AAC", Offset = "0x1906AAC", VA = "0x1906AAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x1906AB0", Offset = "0x1906AB0", VA = "0x1906AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1906ADC", Offset = "0x1906ADC", VA = "0x1906ADC")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x20000EA")]
public class Pvr_UnityEyeMask : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000452")]
	private class EyeMaskData
	{
		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x21C3EA4", Offset = "0x21C3EA4", VA = "0x21C3EA4")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1B4D048", Offset = "0x1B4D048", VA = "0x1B4D048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x1B4D100", Offset = "0x1B4D100", VA = "0x1B4D100")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1B4DC58", Offset = "0x1B4DC58", VA = "0x1B4DC58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1B4D694", Offset = "0x1B4D694", VA = "0x1B4D694")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1B4E758", Offset = "0x1B4E758", VA = "0x1B4E758")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1B4DFCC", Offset = "0x1B4DFCC", VA = "0x1B4DFCC")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x1B4E324", Offset = "0x1B4E324", VA = "0x1B4E324")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x1B4DEBC", Offset = "0x1B4DEBC", VA = "0x1B4DEBC")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x1B4D354", Offset = "0x1B4D354", VA = "0x1B4D354")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x1B4E8F4", Offset = "0x1B4E8F4", VA = "0x1B4E8F4")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x1B4DE24", Offset = "0x1B4DE24", VA = "0x1B4DE24")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1B4DE50", Offset = "0x1B4DE50", VA = "0x1B4DE50")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x1B4E920", Offset = "0x1B4E920", VA = "0x1B4E920")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x20000EB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7DD08", Offset = "0xD7DD08")]
public class Pvr_UnitySDKEye : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82930", Offset = "0xD82930")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000762")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x17000124")]
	public Camera eyecamera
	{
		[Token(Token = "0x6000860")]
		[Address(RVA = "0x18F09E0", Offset = "0x18F09E0", VA = "0x18F09E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9209C", Offset = "0xD9209C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000861")]
		[Address(RVA = "0x18F09E8", Offset = "0x18F09E8", VA = "0x18F09E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD920AC", Offset = "0xD920AC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x18F09F0", Offset = "0x18F09F0", VA = "0x18F09F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x18F0A90", Offset = "0x18F0A90", VA = "0x18F0A90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x18F0FE4", Offset = "0x18F0FE4", VA = "0x18F0FE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x18F1218", Offset = "0x18F1218", VA = "0x18F1218")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x18F1340", Offset = "0x18F1340", VA = "0x18F1340")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x18F1468", Offset = "0x18F1468", VA = "0x18F1468")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x18F14EC", Offset = "0x18F14EC", VA = "0x18F14EC")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x18F16D4", Offset = "0x18F16D4", VA = "0x18F16D4")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x18F1794", Offset = "0x18F1794", VA = "0x18F1794")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x18F15AC", Offset = "0x18F15AC", VA = "0x18F15AC")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x18F1854", Offset = "0x18F1854", VA = "0x18F1854")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x18F1C60", Offset = "0x18F1C60", VA = "0x18F1C60")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x18F0B68", Offset = "0x18F0B68", VA = "0x18F0B68")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x18F0D74", Offset = "0x18F0D74", VA = "0x18F0D74")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x18F1F30", Offset = "0x18F1F30", VA = "0x18F1F30")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x18F20D4", Offset = "0x18F20D4", VA = "0x18F20D4")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x18F2200", Offset = "0x18F2200", VA = "0x18F2200")]
	private void vignette()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x18F1AB4", Offset = "0x18F1AB4", VA = "0x18F1AB4")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x18F2578", Offset = "0x18F2578", VA = "0x18F2578")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x20000EC")]
public class Pvr_UnitySDKEyeManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000453")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80A3C", Offset = "0xD80A3C")]
	private sealed class <EndOfFrame>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x170003C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x18F650C", Offset = "0x18F650C", VA = "0x18F650C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x18F6574", Offset = "0x18F6574", VA = "0x18F6574", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x18F45EC", Offset = "0x18F45EC", VA = "0x18F45EC")]
		[DebuggerHidden]
		public <EndOfFrame>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x18F5354", Offset = "0x18F5354", VA = "0x18F5354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x18F5358", Offset = "0x18F5358", VA = "0x18F5358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x18F6514", Offset = "0x18F6514", VA = "0x18F6514", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80A4C", Offset = "0xD80A4C")]
	private sealed class <ScreenFade>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170003C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x18F66B0", Offset = "0x18F66B0", VA = "0x18F66B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x18F6718", Offset = "0x18F6718", VA = "0x18F6718", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x18F52A0", Offset = "0x18F52A0", VA = "0x18F52A0")]
		[DebuggerHidden]
		public <ScreenFade>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x18F657C", Offset = "0x18F657C", VA = "0x18F657C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x18F6580", Offset = "0x18F6580", VA = "0x18F6580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x18F66B8", Offset = "0x18F66B8", VA = "0x18F66B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD82A20", Offset = "0xD82A20")]
	public bool screenFade;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD82A58", Offset = "0xD82A58")]
	public float fadeTime;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD82A90", Offset = "0xD82A90")]
	public Color fadeColor;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000125")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000876")]
		[Address(RVA = "0x18F2480", Offset = "0x18F2480", VA = "0x18F2480")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000126")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0x18F2690", Offset = "0x18F2690", VA = "0x18F2690")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000127")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x18F2720", Offset = "0x18F2720", VA = "0x18F2720")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x18F2728", Offset = "0x18F2728", VA = "0x18F2728")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x600087A")]
		[Address(RVA = "0x18F2794", Offset = "0x18F2794", VA = "0x18F2794")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x18F279C", Offset = "0x18F279C", VA = "0x18F279C")]
		set
		{
		}
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x18F27B0", Offset = "0x18F27B0", VA = "0x18F27B0")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x18F29C0", Offset = "0x18F29C0", VA = "0x18F29C0")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x18F2A80", Offset = "0x18F2A80", VA = "0x18F2A80")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x18F2B94", Offset = "0x18F2B94", VA = "0x18F2B94")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x18F2C68", Offset = "0x18F2C68", VA = "0x18F2C68")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x18F2DD8", Offset = "0x18F2DD8", VA = "0x18F2DD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x18F3588", Offset = "0x18F3588", VA = "0x18F3588")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x18F3E04", Offset = "0x18F3E04", VA = "0x18F3E04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x18F3E28", Offset = "0x18F3E28", VA = "0x18F3E28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x18F407C", Offset = "0x18F407C", VA = "0x18F407C")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x18F4160", Offset = "0x18F4160", VA = "0x18F4160")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x18F431C", Offset = "0x18F431C", VA = "0x18F431C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x18F4414", Offset = "0x18F4414", VA = "0x18F4414")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x18F421C", Offset = "0x18F421C", VA = "0x18F421C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x18F457C", Offset = "0x18F457C", VA = "0x18F457C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD920BC", Offset = "0xD920BC")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x18F4618", Offset = "0x18F4618", VA = "0x18F4618")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x18F4A04", Offset = "0x18F4A04", VA = "0x18F4A04")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x18F4CC4", Offset = "0x18F4CC4", VA = "0x18F4CC4")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x18F4EF4", Offset = "0x18F4EF4", VA = "0x18F4EF4")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x18F311C", Offset = "0x18F311C", VA = "0x18F311C")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x18F4418", Offset = "0x18F4418", VA = "0x18F4418")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x18F3580", Offset = "0x18F3580", VA = "0x18F3580")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x18F3D80", Offset = "0x18F3D80", VA = "0x18F3D80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD92120", Offset = "0xD92120")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x18F5148", Offset = "0x18F5148", VA = "0x18F5148")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x18F3C30", Offset = "0x18F3C30", VA = "0x18F3C30")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x18F52CC", Offset = "0x18F52CC", VA = "0x18F52CC")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x20000ED")]
public class Pvr_UnitySDKEyeOverlay : UnityEngine.MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x2000455")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x2000456")]
	public enum OverlayShape
	{
		[Token(Token = "0x4001D52")]
		Quad,
		[Token(Token = "0x4001D53")]
		Cylinder,
		[Token(Token = "0x4001D54")]
		Equirect
	}

	[Token(Token = "0x2000457")]
	public enum OverlayType
	{
		[Token(Token = "0x4001D56")]
		Overlay,
		[Token(Token = "0x4001D57")]
		Underlay
	}

	[Token(Token = "0x2000458")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x4001D59")]
		NotCare,
		[Token(Token = "0x4001D5A")]
		Nearest,
		[Token(Token = "0x4001D5B")]
		Linear,
		[Token(Token = "0x4001D5C")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x4001D5D")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x4001D5E")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x4001D5F")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x18F6720", Offset = "0x18F6720", VA = "0x18F6720", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x18F6740", Offset = "0x18F6740", VA = "0x18F6740")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x18F6C20", Offset = "0x18F6C20", VA = "0x18F6C20")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x18F70CC", Offset = "0x18F70CC", VA = "0x18F70CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x18F39FC", Offset = "0x18F39FC", VA = "0x18F39FC")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x18F6A6C", Offset = "0x18F6A6C", VA = "0x18F6A6C")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x18F6C24", Offset = "0x18F6C24", VA = "0x18F6C24")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x18F735C", Offset = "0x18F735C", VA = "0x18F735C")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x18F73F4", Offset = "0x18F73F4", VA = "0x18F73F4")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x18F648C", Offset = "0x18F648C", VA = "0x18F648C")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x18F64CC", Offset = "0x18F64CC", VA = "0x18F64CC")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x18F7408", Offset = "0x18F7408", VA = "0x18F7408")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x20000EE")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82AC8", Offset = "0xD82AC8")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x17000129")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x18F19F4", Offset = "0x18F19F4", VA = "0x18F19F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x18FF2F4", Offset = "0x18FF2F4", VA = "0x18FF2F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x18FFC84", Offset = "0x18FFC84", VA = "0x18FFC84")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x1700012B")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x18FFC8C", Offset = "0x18FFC8C", VA = "0x18FFC8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92184", Offset = "0xD92184")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x18FFC94", Offset = "0x18FFC94", VA = "0x18FFC94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92194", Offset = "0xD92194")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public float RtScaleFactor
	{
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x18FFC9C", Offset = "0x18FFC9C", VA = "0x18FFC9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x18FFCA4", Offset = "0x18FFCA4", VA = "0x18FFCA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public float EyeVFoV
	{
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x18FFE04", Offset = "0x18FFE04", VA = "0x18FFE04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x18FFE0C", Offset = "0x18FFE0C", VA = "0x18FFE0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public float EyeHFoV
	{
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x18FFE20", Offset = "0x18FFE20", VA = "0x18FFE20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x18FFE28", Offset = "0x18FFE28", VA = "0x18FFE28")]
		set
		{
		}
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x18FF1E4", Offset = "0x18FF1E4", VA = "0x18FF1E4")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x18FF360", Offset = "0x18FF360", VA = "0x18FF360")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x18FFC04", Offset = "0x18FFC04", VA = "0x18FFC04")]
	public void Init()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1900280", Offset = "0x1900280", VA = "0x1900280")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1900394", Offset = "0x1900394", VA = "0x1900394")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x190043C", Offset = "0x190043C", VA = "0x190043C")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1900DBC", Offset = "0x1900DBC", VA = "0x1900DBC")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1900798", Offset = "0x1900798", VA = "0x1900798")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x19008F8", Offset = "0x19008F8", VA = "0x19008F8")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1900FFC", Offset = "0x1900FFC", VA = "0x1900FFC")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x18FFCBC", Offset = "0x18FFCBC", VA = "0x18FFCBC")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x18FE154", Offset = "0x18FE154", VA = "0x18FE154")]
	public void ReInit()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x18FD5F4", Offset = "0x18FD5F4", VA = "0x18FD5F4")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1901540", Offset = "0x1901540", VA = "0x1901540")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1900A58", Offset = "0x1900A58", VA = "0x1900A58")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1901768", Offset = "0x1901768", VA = "0x1901768")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x18FFE3C", Offset = "0x18FFE3C", VA = "0x18FFE3C")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000EF")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1904464", Offset = "0x1904464", VA = "0x1904464", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1904CDC", Offset = "0x1904CDC", VA = "0x1904CDC", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1904E04", Offset = "0x1904E04", VA = "0x1904E04", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1905628", Offset = "0x1905628", VA = "0x1905628", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1904CE0", Offset = "0x1904CE0", VA = "0x1904CE0")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x19056E0", Offset = "0x19056E0", VA = "0x19056E0")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1904780", Offset = "0x1904780", VA = "0x1904780")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1904B94", Offset = "0x1904B94", VA = "0x1904B94")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x19057E8", Offset = "0x19057E8", VA = "0x19057E8")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1905A00", Offset = "0x1905A00", VA = "0x1905A00")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x19058BC", Offset = "0x19058BC", VA = "0x19058BC")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1905630", Offset = "0x1905630", VA = "0x1905630")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x18F7150", Offset = "0x18F7150", VA = "0x18F7150")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1904E08", Offset = "0x1904E08", VA = "0x1904E08")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x1905C7C", Offset = "0x1905C7C", VA = "0x1905C7C")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x1905BDC", Offset = "0x1905BDC", VA = "0x1905BDC")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x1901498", Offset = "0x1901498", VA = "0x1901498")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x20000F0")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x60008D3")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x60008D4")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x60008D5")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x60008D6")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x1512C50", Offset = "0x1512C50", VA = "0x1512C50")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x20000F1")]
public class HighlightAtGaze : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x17087A0", Offset = "0x17087A0", VA = "0x17087A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x1708824", Offset = "0x1708824", VA = "0x1708824")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x1708A00", Offset = "0x1708A00", VA = "0x1708A00")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x20000F2")]
public class RayVisualizer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1908434", Offset = "0x1908434", VA = "0x1908434")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x19084CC", Offset = "0x19084CC", VA = "0x19084CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1908664", Offset = "0x1908664", VA = "0x1908664")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x20000F3")]
public class GetSeeThroughImage : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1704354", Offset = "0x1704354", VA = "0x1704354")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x170446C", Offset = "0x170446C", VA = "0x170446C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x17044F8", Offset = "0x17044F8", VA = "0x17044F8")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x1704358", Offset = "0x1704358", VA = "0x1704358")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x17044A8", Offset = "0x17044A8", VA = "0x17044A8")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1704510", Offset = "0x1704510", VA = "0x1704510")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x20000F4")]
public class OverlayExternalSurfaceDemo : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000459")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80A5C", Offset = "0xD80A5C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x1BC9098", Offset = "0x1BC9098", VA = "0x1BC9098")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x1BC90A0", Offset = "0x1BC90A0", VA = "0x1BC90A0")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x40007D8")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x1BC8C94", Offset = "0x1BC8C94", VA = "0x1BC8C94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x1BC8DB8", Offset = "0x1BC8DB8", VA = "0x1BC8DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1BC8E3C", Offset = "0x1BC8E3C", VA = "0x1BC8E3C")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1BC902C", Offset = "0x1BC902C", VA = "0x1BC902C")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x20000F5")]
public class MoveCylinder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x13D8D50", Offset = "0x13D8D50", VA = "0x13D8D50")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x13D8DAC", Offset = "0x13D8DAC", VA = "0x13D8DAC")]
	public void Reset()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x13D8E04", Offset = "0x13D8E04", VA = "0x13D8E04")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x20000F6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7DD6C", Offset = "0xD7DD6C")]
public class MoveSphere : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x13D8E0C", Offset = "0x13D8E0C", VA = "0x13D8E0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x13D8F80", Offset = "0x13D8F80", VA = "0x13D8F80")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x13D8EE8", Offset = "0x13D8EE8", VA = "0x13D8EE8")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x13D8F84", Offset = "0x13D8F84", VA = "0x13D8F84")]
	public void Reset()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x13D9084", Offset = "0x13D9084", VA = "0x13D9084")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x13D9190", Offset = "0x13D9190", VA = "0x13D9190")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x20000F7")]
public class Resetbutton : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x190972C", Offset = "0x190972C", VA = "0x190972C")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x19097C0", Offset = "0x19097C0", VA = "0x19097C0")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x20000F8")]
public class UserEntitlementCheck : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x240A224", Offset = "0x240A224", VA = "0x240A224")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x240A2B8", Offset = "0x240A2B8", VA = "0x240A2B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x240A34C", Offset = "0x240A34C", VA = "0x240A34C")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x240A618", Offset = "0x240A618", VA = "0x240A618")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x20000F9")]
public class Pvr_SQPLoader : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200045A")]
	private struct SceneInfo
	{
		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<string> scenes;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long version;

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x1B47540", Offset = "0x1B47540", VA = "0x1B47540")]
		public SceneInfo(List<string> sceneList, long currentSceneEpochVersion)
		{
		}
	}

	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80A6C", Offset = "0xD80A6C")]
	private sealed class <onCheckNewSceneCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_SQPLoader <>4__this;

		[Token(Token = "0x170003CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x1B474D0", Offset = "0x1B474D0", VA = "0x1B474D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x1B47538", Offset = "0x1B47538", VA = "0x1B47538", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x1B470B8", Offset = "0x1B470B8", VA = "0x1B470B8")]
		[DebuggerHidden]
		public <onCheckNewSceneCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x1B47164", Offset = "0x1B47164", VA = "0x1B47164", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x1B47168", Offset = "0x1B47168", VA = "0x1B47168", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1B474D8", Offset = "0x1B474D8", VA = "0x1B474D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007DC")]
	public const string RESOURCE_BUNDLE_NAME = "asset_resources";

	[Token(Token = "0x40007DD")]
	public const string EXTERNAL_STORAGE_PATH = "/sdcard/Android/data";

	[Token(Token = "0x40007DE")]
	public const string SCENE_LOAD_DATA_NAME = "SceneLoadData.txt";

	[Token(Token = "0x40007DF")]
	private const string SQP_INDEX_NAME = "PvrSQPIndex";

	[Token(Token = "0x40007E0")]
	private const string CACHE_SCENES_PATH = "cache/scenes";

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AsyncOperation loadSceneOperation;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string scenePath;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string sceneLoadDataPath;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AssetBundle> loadedAssetBundles;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SceneInfo currentSceneInfo;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1B46850", Offset = "0x1B46850", VA = "0x1B46850")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1B468CC", Offset = "0x1B468CC", VA = "0x1B468CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x1B47018", Offset = "0x1B47018", VA = "0x1B47018")]
	public void Update()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1B469D8", Offset = "0x1B469D8", VA = "0x1B469D8")]
	private SceneInfo GetSceneInfo()
	{
		return default(SceneInfo);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1B46B9C", Offset = "0x1B46B9C", VA = "0x1B46B9C")]
	private void LoadScene(SceneInfo sceneInfo)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x1B4701C", Offset = "0x1B4701C", VA = "0x1B4701C")]
	private void LoadSceneOperation_completed(AsyncOperation obj)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x1B47048", Offset = "0x1B47048", VA = "0x1B47048")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD921A4", Offset = "0xD921A4")]
	private IEnumerator onCheckNewSceneCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x1B470E4", Offset = "0x1B470E4", VA = "0x1B470E4")]
	public Pvr_SQPLoader()
	{
	}
}
[Token(Token = "0x20000FA")]
public class Pvr_UnitySDKHeadTrack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD82AD8", Offset = "0xD82AD8")]
	public bool trackRotation;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD82B10", Offset = "0xD82B10")]
	public bool trackPosition;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x1700012F")]
	public Ray Gaze
	{
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x18F77D8", Offset = "0x18F77D8", VA = "0x18F77D8")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x18F7CC4", Offset = "0x18F7CC4", VA = "0x18F7CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x18F7874", Offset = "0x18F7874", VA = "0x18F7874")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x18F7CCC", Offset = "0x18F7CCC", VA = "0x18F7CCC")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x20000FB")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82B48", Offset = "0xD82B48")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82B58", Offset = "0xD82B58")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82B68", Offset = "0xD82B68")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x17000130")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x18FEB10", Offset = "0x18FEB10", VA = "0x18FEB10")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x17000131")]
	public Vector3 Position
	{
		[Token(Token = "0x6000904")]
		[Address(RVA = "0x18FEC54", Offset = "0x18FEC54", VA = "0x18FEC54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92208", Offset = "0xD92208")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000905")]
		[Address(RVA = "0x18FEC60", Offset = "0x18FEC60", VA = "0x18FEC60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92218", Offset = "0xD92218")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000906")]
		[Address(RVA = "0x18FEC6C", Offset = "0x18FEC6C", VA = "0x18FEC6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92228", Offset = "0xD92228")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000907")]
		[Address(RVA = "0x18FEC78", Offset = "0x18FEC78", VA = "0x18FEC78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92238", Offset = "0xD92238")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000133")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000908")]
		[Address(RVA = "0x18FEC84", Offset = "0x18FEC84", VA = "0x18FEC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92248", Offset = "0xD92248")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x18FECA0", Offset = "0x18FECA0", VA = "0x18FECA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92258", Offset = "0xD92258")]
		protected set
		{
		}
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x18FECBC", Offset = "0x18FECBC", VA = "0x18FECBC")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x18FEE74", Offset = "0x18FEE74", VA = "0x18FEE74")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x18FEEF4", Offset = "0x18FEEF4", VA = "0x18FEEF4")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x18FED08", Offset = "0x18FED08", VA = "0x18FED08")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x18FF024", Offset = "0x18FF024", VA = "0x18FF024")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20000FC")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x200045C")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x200045D")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x17000134")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000910")]
		[Address(RVA = "0x18F61E4", Offset = "0x18F61E4", VA = "0x18F61E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1901830", Offset = "0x1901830", VA = "0x1901830")]
		set
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0x19019D0", Offset = "0x19019D0", VA = "0x19019D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92268", Offset = "0xD92268")]
		add
		{
		}
		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1901AC0", Offset = "0x1901AC0", VA = "0x1901AC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92278", Offset = "0xD92278")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1901BB0", Offset = "0x1901BB0", VA = "0x1901BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92288", Offset = "0xD92288")]
		add
		{
		}
		[Token(Token = "0x6000916")]
		[Address(RVA = "0x1901CA0", Offset = "0x1901CA0", VA = "0x1901CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92298", Offset = "0xD92298")]
		remove
		{
		}
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1901774", Offset = "0x1901774", VA = "0x1901774")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x190189C", Offset = "0x190189C", VA = "0x190189C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x18FC8DC", Offset = "0x18FC8DC", VA = "0x18FC8DC")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x1901FD0", Offset = "0x1901FD0", VA = "0x1901FD0")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x1901D90", Offset = "0x1901D90", VA = "0x1901D90")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x18FDD7C", Offset = "0x18FDD7C", VA = "0x18FDD7C")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x18FCCE0", Offset = "0x18FCCE0", VA = "0x18FCCE0")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x18FAF20", Offset = "0x18FAF20", VA = "0x18FAF20")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x18F62A4", Offset = "0x18F62A4", VA = "0x18F62A4")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x190210C", Offset = "0x190210C", VA = "0x190210C")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x1903688", Offset = "0x1903688", VA = "0x1903688")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1903504", Offset = "0x1903504", VA = "0x1903504")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x20000FD")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1574BE0", Offset = "0x1574BE0", VA = "0x1574BE0")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FE")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x200045E")]
	public struct Lenses
	{
		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4001D6B")]
		public const int AlignTop = -1;

		[Token(Token = "0x4001D6C")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4001D6D")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x200045F")]
	public struct MaxFOV
	{
		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x2000460")]
	public struct Distortion
	{
		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x21DF5E4", Offset = "0x21DF5E4", VA = "0x21DF5E4")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x21DF110", Offset = "0x21DF110", VA = "0x21DF110")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x21DF5EC", Offset = "0x21DF5EC", VA = "0x21DF5EC")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000461")]
	public struct Device
	{
		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x21DED90", Offset = "0x21DED90", VA = "0x21DED90")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x21DEE28", Offset = "0x21DEE28", VA = "0x21DEE28")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x21DEED0", Offset = "0x21DEED0", VA = "0x21DEED0")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x21DF21C", Offset = "0x21DF21C", VA = "0x21DF21C")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x21DF448", Offset = "0x21DF448", VA = "0x21DF448")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x21DEE20", Offset = "0x21DEE20", VA = "0x21DEE20")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x20000FF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7DDD0", Offset = "0xD7DDD0")]
public class Pvr_UnitySDKFPS : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x18F7638", Offset = "0x18F7638", VA = "0x18F7638")]
	private void Update()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x18F76C0", Offset = "0x18F76C0", VA = "0x18F76C0")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x18F77C8", Offset = "0x18F77C8", VA = "0x18F77C8")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x2000100")]
public class Pvr_GazeFuse : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1B42250", Offset = "0x1B42250", VA = "0x1B42250")]
	private void Start()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1B422A8", Offset = "0x1B422A8", VA = "0x1B422A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1B423DC", Offset = "0x1B423DC", VA = "0x1B423DC")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1B42484", Offset = "0x1B42484", VA = "0x1B42484")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x2000101")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000462")]
	public enum Mode
	{
		[Token(Token = "0x4001D7D")]
		Click,
		[Token(Token = "0x4001D7E")]
		Gaze
	}

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD82B98", Offset = "0xD82B98")]
	public string ClickInputName;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD82BD0", Offset = "0xD82BD0")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82C08", Offset = "0xD82C08")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82C18", Offset = "0xD82C18")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x17000135")]
	public static float gazeFraction
	{
		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1B4248C", Offset = "0x1B4248C", VA = "0x1B4248C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD922A8", Offset = "0xD922A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000933")]
		[Address(RVA = "0x1B424DC", Offset = "0x1B424DC", VA = "0x1B424DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD922B8", Offset = "0xD922B8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000136")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6000934")]
		[Address(RVA = "0x1B42538", Offset = "0x1B42538", VA = "0x1B42538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD922C8", Offset = "0xD922C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000935")]
		[Address(RVA = "0x1B42588", Offset = "0x1B42588", VA = "0x1B42588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD922D8", Offset = "0xD922D8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1B425DC", Offset = "0x1B425DC", VA = "0x1B425DC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1B42600", Offset = "0x1B42600", VA = "0x1B42600")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1B427C4", Offset = "0x1B427C4", VA = "0x1B427C4")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x1B42C70", Offset = "0x1B42C70", VA = "0x1B42C70")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x2000102")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7DE34", Offset = "0xD7DE34")]
public class Pvr_GazeInputModuleCrosshair : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD82C28", Offset = "0xD82C28")]
	public Transform Crosshair;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x1B42CD0", Offset = "0x1B42CD0", VA = "0x1B42CD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x1B42D28", Offset = "0x1B42D28", VA = "0x1B42D28")]
	private void Start()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x1B42D90", Offset = "0x1B42D90", VA = "0x1B42D90")]
	private void Update()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1B42EA0", Offset = "0x1B42EA0", VA = "0x1B42EA0")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x1B42F98", Offset = "0x1B42F98", VA = "0x1B42F98")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x2000103")]
public enum RenderEventType
{
	[Token(Token = "0x400082B")]
	InitRenderThread = 1024,
	[Token(Token = "0x400082C")]
	Pause,
	[Token(Token = "0x400082D")]
	Resume,
	[Token(Token = "0x400082E")]
	LeftEyeEndFrame,
	[Token(Token = "0x400082F")]
	RightEyeEndFrame,
	[Token(Token = "0x4000830")]
	TimeWarp,
	[Token(Token = "0x4000831")]
	ResetVrModeParms,
	[Token(Token = "0x4000832")]
	ShutdownRenderThread,
	[Token(Token = "0x4000833")]
	BeginEye,
	[Token(Token = "0x4000834")]
	EndEye,
	[Token(Token = "0x4000835")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000836")]
	BoundaryRenderRight,
	[Token(Token = "0x4000837")]
	BothEyeEndFrame,
	[Token(Token = "0x4000838")]
	CameraFrameLeft,
	[Token(Token = "0x4000839")]
	CameraFrameRight,
	[Token(Token = "0x400083A")]
	StartCameraFrame,
	[Token(Token = "0x400083B")]
	StopCameraFrame
}
[Token(Token = "0x2000104")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x2000463")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x400083C")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x400083D")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x400083E")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x400083F")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x4000840")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x4000841")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x4000842")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x18F1C34", Offset = "0x18F1C34", VA = "0x18F1C34")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x18FE688", Offset = "0x18FE688", VA = "0x18FE688")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x18FE690", Offset = "0x18FE690", VA = "0x18FE690")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x18FE6B0", Offset = "0x18FE6B0", VA = "0x18FE6B0")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x18FE680", Offset = "0x18FE680", VA = "0x18FE680")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD922E8", Offset = "0xD922E8")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x18FE6C4", Offset = "0x18FE6C4", VA = "0x18FE6C4")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000105")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD82C60", Offset = "0xD82C60")]
	public GameObject cursor;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x1903858", Offset = "0x1903858", VA = "0x1903858", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x19038E8", Offset = "0x19038E8", VA = "0x19038E8", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x1903BD0", Offset = "0x1903BD0", VA = "0x1903BD0", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x1903C58", Offset = "0x1903C58", VA = "0x1903C58", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1903C94", Offset = "0x1903C94", VA = "0x1903C94")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x1903DD8", Offset = "0x1903DD8", VA = "0x1903DD8")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1903F78", Offset = "0x1903F78", VA = "0x1903F78")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x19039E4", Offset = "0x19039E4", VA = "0x19039E4")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x19041A0", Offset = "0x19041A0", VA = "0x19041A0")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x1904410", Offset = "0x1904410", VA = "0x1904410")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x2000106")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x4000851")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4000852")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000853")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x17000137")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x1B455B8", Offset = "0x1B455B8", VA = "0x1B455B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x1B45664", Offset = "0x1B45664", VA = "0x1B45664")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x1B45A88", Offset = "0x1B45A88", VA = "0x1B45A88")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x1B4615C", Offset = "0x1B4615C", VA = "0x1B4615C")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x1B462D4", Offset = "0x1B462D4", VA = "0x1B462D4")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1B466DC", Offset = "0x1B466DC", VA = "0x1B466DC")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x1B46414", Offset = "0x1B46414", VA = "0x1B46414")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1B46650", Offset = "0x1B46650", VA = "0x1B46650")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1B4565C", Offset = "0x1B4565C", VA = "0x1B4565C")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x2000107")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82CB8", Offset = "0xD82CB8")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82CC8", Offset = "0xD82CC8")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD82CD8", Offset = "0xD82CD8")]
	private int <z>k__BackingField;

	[Token(Token = "0x17000138")]
	public int x
	{
		[Token(Token = "0x600095B")]
		[Address(RVA = "0x159B30C", Offset = "0x159B30C", VA = "0x159B30C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9234C", Offset = "0xD9234C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095C")]
		[Address(RVA = "0x159B314", Offset = "0x159B314", VA = "0x159B314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9235C", Offset = "0xD9235C")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public int y
	{
		[Token(Token = "0x600095D")]
		[Address(RVA = "0x159B31C", Offset = "0x159B31C", VA = "0x159B31C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9236C", Offset = "0xD9236C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095E")]
		[Address(RVA = "0x159B324", Offset = "0x159B324", VA = "0x159B324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9237C", Offset = "0xD9237C")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	public int z
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0x159B32C", Offset = "0x159B32C", VA = "0x159B32C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9238C", Offset = "0xD9238C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000960")]
		[Address(RVA = "0x159B334", Offset = "0x159B334", VA = "0x159B334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9239C", Offset = "0xD9239C")]
		set
		{
		}
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x159B33C", Offset = "0x159B33C", VA = "0x159B33C")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x159B344", Offset = "0x159B344", VA = "0x159B344")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000108")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000963")]
	[Address(RVA = "0x1B42248", Offset = "0x1B42248", VA = "0x1B42248")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000109")]
public enum ConfirmBtn
{
	[Token(Token = "0x4000859")]
	App = 1,
	[Token(Token = "0x400085A")]
	TouchPad = 2,
	[Token(Token = "0x400085B")]
	Trigger = 4
}
[Token(Token = "0x200010A")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x1B42FF4", Offset = "0x1B42FF4", VA = "0x1B42FF4", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1B43070", Offset = "0x1B43070", VA = "0x1B43070")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1B43140", Offset = "0x1B43140", VA = "0x1B43140")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x1B43210", Offset = "0x1B43210", VA = "0x1B43210", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1B43584", Offset = "0x1B43584", VA = "0x1B43584", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x1B43634", Offset = "0x1B43634", VA = "0x1B43634", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1B43724", Offset = "0x1B43724", VA = "0x1B43724", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1B437E4", Offset = "0x1B437E4", VA = "0x1B437E4", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1B439EC", Offset = "0x1B439EC", VA = "0x1B439EC", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1B43A9C", Offset = "0x1B43A9C", VA = "0x1B43A9C", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1B43B38", Offset = "0x1B43B38", VA = "0x1B43B38", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1B446B4", Offset = "0x1B446B4", VA = "0x1B446B4", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1B446FC", Offset = "0x1B446FC", VA = "0x1B446FC", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1B4479C", Offset = "0x1B4479C", VA = "0x1B4479C", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x1B44858", Offset = "0x1B44858", VA = "0x1B44858", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x1B44B2C", Offset = "0x1B44B2C", VA = "0x1B44B2C", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x1B44DF8", Offset = "0x1B44DF8", VA = "0x1B44DF8", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1B454CC", Offset = "0x1B454CC", VA = "0x1B454CC")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x200010B")]
public class Pvr_UICanvas : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80A7C", Offset = "0xD80A7C")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x170003CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x1B4A1A4", Offset = "0x1B4A1A4", VA = "0x1B4A1A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x1B4A20C", Offset = "0x1B4A20C", VA = "0x1B4A20C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x1B49B0C", Offset = "0x1B49B0C", VA = "0x1B49B0C")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x1B49E20", Offset = "0x1B49E20", VA = "0x1B49E20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x1B49E24", Offset = "0x1B49E24", VA = "0x1B49E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x1B4A1AC", Offset = "0x1B4A1AC", VA = "0x1B4A1AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000865")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1B496DC", Offset = "0x1B496DC", VA = "0x1B496DC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1B496E8", Offset = "0x1B496E8", VA = "0x1B496E8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1B496F4", Offset = "0x1B496F4", VA = "0x1B496F4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x1B49700", Offset = "0x1B49700", VA = "0x1B49700", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1B49A88", Offset = "0x1B49A88", VA = "0x1B49A88", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD923AC", Offset = "0xD923AC")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1B49B38", Offset = "0x1B49B38", VA = "0x1B49B38", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1B49E18", Offset = "0x1B49E18", VA = "0x1B49E18")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x200010C")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x200010D")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x200010E")]
public class Pvr_UIDraggableItem : UnityEngine.MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x1400001A")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6000982")]
		[Address(RVA = "0x1B4A214", Offset = "0x1B4A214", VA = "0x1B4A214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92410", Offset = "0xD92410")]
		add
		{
		}
		[Token(Token = "0x6000983")]
		[Address(RVA = "0x1B4A2B8", Offset = "0x1B4A2B8", VA = "0x1B4A2B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92420", Offset = "0xD92420")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000984")]
		[Address(RVA = "0x1B4A35C", Offset = "0x1B4A35C", VA = "0x1B4A35C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92430", Offset = "0xD92430")]
		add
		{
		}
		[Token(Token = "0x6000985")]
		[Address(RVA = "0x1B4A400", Offset = "0x1B4A400", VA = "0x1B4A400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92440", Offset = "0xD92440")]
		remove
		{
		}
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1B4A4A4", Offset = "0x1B4A4A4", VA = "0x1B4A4A4", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1B4A4C4", Offset = "0x1B4A4C4", VA = "0x1B4A4C4", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1B4A4E4", Offset = "0x1B4A4E4", VA = "0x1B4A4E4", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1B4A6F8", Offset = "0x1B4A6F8", VA = "0x1B4A6F8", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x1B4A704", Offset = "0x1B4A704", VA = "0x1B4A704", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1B4AB44", Offset = "0x1B4AB44", VA = "0x1B4AB44", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1B4AC38", Offset = "0x1B4AC38", VA = "0x1B4AC38", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1B4ADBC", Offset = "0x1B4ADBC", VA = "0x1B4ADBC", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1B4B080", Offset = "0x1B4B080", VA = "0x1B4B080", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1B4B130", Offset = "0x1B4B130", VA = "0x1B4B130", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1B4B138", Offset = "0x1B4B138", VA = "0x1B4B138")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x200010F")]
public class Pvr_UIDropZone : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1B4B14C", Offset = "0x1B4B14C", VA = "0x1B4B14C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x1B4B23C", Offset = "0x1B4B23C", VA = "0x1B4B23C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x1B4B2C4", Offset = "0x1B4B2C4", VA = "0x1B4B2C4")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x2000110")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x2000465")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80A8C", Offset = "0xD80A8C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x1B4C1D4", Offset = "0x1B4C1D4", VA = "0x1B4C1D4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x1B4C1DC", Offset = "0x1B4C1DC", VA = "0x1B4C1DC")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x4000878")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x1700013B")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x6000998")]
		[Address(RVA = "0x1B4BFEC", Offset = "0x1B4BFEC", VA = "0x1B4BFEC", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1B4B2CC", Offset = "0x1B4B2CC", VA = "0x1B4B2CC", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x1B4B47C", Offset = "0x1B4B47C", VA = "0x1B4B47C", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1B4B700", Offset = "0x1B4B700", VA = "0x1B4B700", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x1B4BA20", Offset = "0x1B4BA20", VA = "0x1B4BA20", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x1B4C094", Offset = "0x1B4C094", VA = "0x1B4C094")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x2000111")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x2000112")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x2000113")]
public class Pvr_UIPointer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000466")]
	public enum ClickMethods
	{
		[Token(Token = "0x4001D86")]
		ClickOnButtonUp,
		[Token(Token = "0x4001D87")]
		ClickOnButtonDown
	}

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400001C")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x600099F")]
		[Address(RVA = "0x1B4C1EC", Offset = "0x1B4C1EC", VA = "0x1B4C1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92450", Offset = "0xD92450")]
		add
		{
		}
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x1B4C290", Offset = "0x1B4C290", VA = "0x1B4C290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92460", Offset = "0xD92460")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x1B4C334", Offset = "0x1B4C334", VA = "0x1B4C334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92470", Offset = "0xD92470")]
		add
		{
		}
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x1B4C3D8", Offset = "0x1B4C3D8", VA = "0x1B4C3D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92480", Offset = "0xD92480")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x1B4C47C", Offset = "0x1B4C47C", VA = "0x1B4C47C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92490", Offset = "0xD92490")]
		add
		{
		}
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x1B4C520", Offset = "0x1B4C520", VA = "0x1B4C520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD924A0", Offset = "0xD924A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x1B4C5C4", Offset = "0x1B4C5C4", VA = "0x1B4C5C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD924B0", Offset = "0xD924B0")]
		add
		{
		}
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x1B4C668", Offset = "0x1B4C668", VA = "0x1B4C668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD924C0", Offset = "0xD924C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1B4C70C", Offset = "0x1B4C70C", VA = "0x1B4C70C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD924D0", Offset = "0xD924D0")]
		add
		{
		}
		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1B4C7B0", Offset = "0x1B4C7B0", VA = "0x1B4C7B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD924E0", Offset = "0xD924E0")]
		remove
		{
		}
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1B4C854", Offset = "0x1B4C854", VA = "0x1B4C854", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x1B4C85C", Offset = "0x1B4C85C", VA = "0x1B4C85C", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x1B4C93C", Offset = "0x1B4C93C", VA = "0x1B4C93C", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1B4C9D0", Offset = "0x1B4C9D0", VA = "0x1B4C9D0", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x1B4CA64", Offset = "0x1B4CA64", VA = "0x1B4CA64", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1B4CA80", Offset = "0x1B4CA80", VA = "0x1B4CA80", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x1B4CA8C", Offset = "0x1B4CA8C", VA = "0x1B4CA8C", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x1B4CB60", Offset = "0x1B4CB60", VA = "0x1B4CB60", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x1B4CC2C", Offset = "0x1B4CC2C", VA = "0x1B4CC2C", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1B4CCF8", Offset = "0x1B4CCF8", VA = "0x1B4CCF8", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x1B4CD44", Offset = "0x1B4CD44", VA = "0x1B4CD44", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1B4CD90", Offset = "0x1B4CD90", VA = "0x1B4CD90", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1B4CDF4", Offset = "0x1B4CDF4", VA = "0x1B4CDF4", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1B4CE00", Offset = "0x1B4CE00", VA = "0x1B4CE00", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1B4CE38", Offset = "0x1B4CE38", VA = "0x1B4CE38", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1B4CE9C", Offset = "0x1B4CE9C", VA = "0x1B4CE9C", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1B4D03C", Offset = "0x1B4D03C", VA = "0x1B4D03C")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x2000114")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x40008A3")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x21DF5F4", Offset = "0x21DF5F4", VA = "0x21DF5F4")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x21DF618", Offset = "0x21DF618", VA = "0x21DF618")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x21DF63C", Offset = "0x21DF63C", VA = "0x21DF63C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x21DF838", Offset = "0x21DF838", VA = "0x21DF838")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x21DF650", Offset = "0x21DF650", VA = "0x21DF650")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x21DF7A4", Offset = "0x21DF7A4", VA = "0x21DF7A4")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x21E00DC", Offset = "0x21E00DC", VA = "0x21E00DC")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x21E0280", Offset = "0x21E0280", VA = "0x21E0280")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x21DF9E0", Offset = "0x21DF9E0", VA = "0x21DF9E0")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x21E0704", Offset = "0x21E0704", VA = "0x21E0704")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x21DF8D8", Offset = "0x21DF8D8", VA = "0x21DF8D8")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x21E0024", Offset = "0x21E0024", VA = "0x21E0024")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x21E079C", Offset = "0x21E079C", VA = "0x21E079C")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x21E0298", Offset = "0x21E0298", VA = "0x21E0298")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x21DFEB4", Offset = "0x21DFEB4", VA = "0x21DFEB4")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x21E0718", Offset = "0x21E0718", VA = "0x21E0718")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x21E08CC", Offset = "0x21E08CC", VA = "0x21E08CC")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x2000115")]
public class Pvr_VolumePowerBrightness : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x1906348", Offset = "0x1906348", VA = "0x1906348")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x1906418", Offset = "0x1906418", VA = "0x1906418")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x190646C", Offset = "0x190646C", VA = "0x190646C")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x190650C", Offset = "0x190650C", VA = "0x190650C")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x19065AC", Offset = "0x19065AC", VA = "0x19065AC")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1906630", Offset = "0x1906630", VA = "0x1906630")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x19066B4", Offset = "0x19066B4", VA = "0x19066B4")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x19067CC", Offset = "0x19067CC", VA = "0x19067CC")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x19068E4", Offset = "0x19068E4", VA = "0x19068E4")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x1906984", Offset = "0x1906984", VA = "0x1906984")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x1906A14", Offset = "0x1906A14", VA = "0x1906A14")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x19063B0", Offset = "0x19063B0", VA = "0x19063B0")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x19063B8", Offset = "0x19063B8", VA = "0x19063B8")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x1906464", Offset = "0x1906464", VA = "0x1906464")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x19063E8", Offset = "0x19063E8", VA = "0x19063E8")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x190645C", Offset = "0x190645C", VA = "0x190645C")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x1906AA4", Offset = "0x1906AA4", VA = "0x1906AA4")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x2000116")]
public class MapDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer textureRender;

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x18DBE60", Offset = "0x18DBE60", VA = "0x18DBE60")]
	public void DrawNoiseMap(float[,] noiseMap)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x18DC0F0", Offset = "0x18DC0F0", VA = "0x18DC0F0")]
	public MapDisplay()
	{
	}
}
[Token(Token = "0x2000117")]
public class MapGenerator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int mapWidth;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int mapHeight;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float noiseScale;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int octaves;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD82E38", Offset = "0xD82E38")]
	public float persistance;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lacunarity;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int seed;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 offset;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool autoUpdate;

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x18DC0F8", Offset = "0x18DC0F8", VA = "0x18DC0F8")]
	public void GenerateMap()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x18DC17C", Offset = "0x18DC17C", VA = "0x18DC17C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x18DC1D0", Offset = "0x18DC1D0", VA = "0x18DC1D0")]
	public MapGenerator()
	{
	}
}
[Token(Token = "0x2000118")]
public static class Noise
{
	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x1BC5610", Offset = "0x1BC5610", VA = "0x1BC5610")]
	public static float[,] GenerateNoiseMap(int mapWidth, int mapHeight, int seed, float scale, int octaves, float persistance, float lacunarity, Vector2 offset)
	{
		return null;
	}
}
[Token(Token = "0x2000119")]
public class VegetationGenerator : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000467")]
	public class VegetationConfiguration
	{
		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int biome;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetReference _item;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int instances;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int baseScale;

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x240C210", Offset = "0x240C210", VA = "0x240C210")]
		public VegetationConfiguration()
		{
		}
	}

	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80A9C", Offset = "0xD80A9C")]
	private sealed class <GenerateVegetationCor>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh terrainMesh;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D splatMap;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject terrainGo;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VegetationGenerator <>4__this;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <scaleMin>5__2;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <scaleMax>5__3;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <xMeshSize>5__4;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <zMeshSize>5__5;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <xOffset>5__6;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int <zOffset>5__7;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <zMeshCoord>5__8;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int <xMeshCoord>5__9;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <i>5__10;

		[Token(Token = "0x170003CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x240C1A0", Offset = "0x240C1A0", VA = "0x240C1A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x240C208", Offset = "0x240C208", VA = "0x240C208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x240B784", Offset = "0x240B784", VA = "0x240B784")]
		[DebuggerHidden]
		public <GenerateVegetationCor>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x240B828", Offset = "0x240B828", VA = "0x240B828", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x240B82C", Offset = "0x240B82C", VA = "0x240B82C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x240C1A8", Offset = "0x240C1A8", VA = "0x240C1A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isEnabled;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool splatMapFilter;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VegetationConfiguration[] config;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] trees;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float terrainScale;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minHeight;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int density;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD82E50", Offset = "0xD82E50")]
	public float heightMultiplier;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numVertsPerLine;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string currentBiome;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currentBiomeId;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool biomeConfigured;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent vegetationReady;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GameObject> vegetation;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MapGenerator noiseGenerator;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MapDisplay display;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D noiseTexture;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int terrainNum;

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x240A620", Offset = "0x240A620", VA = "0x240A620")]
	public void ConfigureBiome(string biome, GameObject terrainGo, Mesh terrainMesh, Texture2D splatMap, Texture2D heightMap)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x240B3FC", Offset = "0x240B3FC", VA = "0x240B3FC")]
	public void DestroyGenerator()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x240A864", Offset = "0x240A864", VA = "0x240A864")]
	private GameObject LoadItem(AssetReference assetRef)
	{
		return null;
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x240B4CC", Offset = "0x240B4CC", VA = "0x240B4CC")]
	public void GenerateVegetation(TerrainChunk chunk)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x240B69C", Offset = "0x240B69C", VA = "0x240B69C")]
	private GameObject GetRandomTreeTemplate()
	{
		return null;
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x240B6F4", Offset = "0x240B6F4", VA = "0x240B6F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD924F0", Offset = "0xD924F0")]
	private IEnumerator GenerateVegetationCor(GameObject terrainGo, Mesh terrainMesh, Texture2D splatMap, Texture2D heightMap)
	{
		return null;
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x240B7B0", Offset = "0x240B7B0", VA = "0x240B7B0")]
	public void GenerateVegetationBiome(GameObject terrainGo, Mesh terrainMesh, Texture2D splatMap, Texture2D heightMap, string biome)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x240A930", Offset = "0x240A930", VA = "0x240A930")]
	public void GenerateVegetation(GameObject terrainGo, Mesh terrainMesh, Texture2D splatMap, Texture2D heightMap, string biome)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x240B818", Offset = "0x240B818", VA = "0x240B818")]
	public VegetationGenerator()
	{
	}
}
[Token(Token = "0x200011A")]
[DisallowMultipleComponent]
public class Outline : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000469")]
	public enum Mode
	{
		[Token(Token = "0x4001D9C")]
		OutlineAll,
		[Token(Token = "0x4001D9D")]
		OutlineVisible,
		[Token(Token = "0x4001D9E")]
		OutlineHidden,
		[Token(Token = "0x4001D9F")]
		OutlineAndSilhouette,
		[Token(Token = "0x4001DA0")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x200046A")]
	private class ListVector3
	{
		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x1BC8A04", Offset = "0x1BC8A04", VA = "0x1BC8A04")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80AAC", Offset = "0xD80AAC")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__30_0;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__30_1;

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x1BC8B94", Offset = "0x1BC8B94", VA = "0x1BC8B94")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x1BC8B9C", Offset = "0x1BC8B9C", VA = "0x1BC8B9C")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__30_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x1BC8C2C", Offset = "0x1BC8C2C", VA = "0x1BC8C2C")]
		internal Vector3 <SmoothNormals>b__30_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD82EA8", Offset = "0xD82EA8")]
	private float outlineWidth;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD82EE8", Offset = "0xD82EE8")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD82EE8", Offset = "0xD82EE8")]
	private bool precomputeOutline;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x1700013C")]
	public Mode OutlineMode
	{
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x1BC74D8", Offset = "0x1BC74D8", VA = "0x1BC74D8")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x1BC74E0", Offset = "0x1BC74E0", VA = "0x1BC74E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public Color OutlineColor
	{
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x1BC74F0", Offset = "0x1BC74F0", VA = "0x1BC74F0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x1BC74FC", Offset = "0x1BC74FC", VA = "0x1BC74FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public float OutlineWidth
	{
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x1BC7510", Offset = "0x1BC7510", VA = "0x1BC7510")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x1BC7518", Offset = "0x1BC7518", VA = "0x1BC7518")]
		set
		{
		}
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1BC7528", Offset = "0x1BC7528", VA = "0x1BC7528")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1BC7908", Offset = "0x1BC7908", VA = "0x1BC7908")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1BC7A18", Offset = "0x1BC7A18", VA = "0x1BC7A18")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x1BC7C88", Offset = "0x1BC7C88", VA = "0x1BC7C88")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1BC7E54", Offset = "0x1BC7E54", VA = "0x1BC7E54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x1BC7F64", Offset = "0x1BC7F64", VA = "0x1BC7F64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x1BC7AF0", Offset = "0x1BC7AF0", VA = "0x1BC7AF0")]
	private void Bake()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x1BC7654", Offset = "0x1BC7654", VA = "0x1BC7654")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x1BC7FDC", Offset = "0x1BC7FDC", VA = "0x1BC7FDC")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x1BC7C9C", Offset = "0x1BC7C9C", VA = "0x1BC7C9C")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x1BC8A0C", Offset = "0x1BC8A0C", VA = "0x1BC8A0C")]
	public Outline()
	{
	}
}
[Token(Token = "0x200011B")]
public class ShowApplicationVersion : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x1513C84", Offset = "0x1513C84", VA = "0x1513C84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x1513D60", Offset = "0x1513D60", VA = "0x1513D60")]
	public ShowApplicationVersion()
	{
	}
}
[Token(Token = "0x200011C")]
public class URLOpener : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x193FE3C", Offset = "0x193FE3C", VA = "0x193FE3C")]
	public void OpenURL(string url)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x193FE48", Offset = "0x193FE48", VA = "0x193FE48")]
	public URLOpener()
	{
	}
}
[Token(Token = "0x200011D")]
public class SerializableDictionaryExample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StringStringDictionary m_stringStringDictionary;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectColorDictionary m_objectColorDictionary;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StringColorArrayDictionary m_stringColorArrayDictionary;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StringHashSet m_stringHashSet;

	[Token(Token = "0x1700013F")]
	public IDictionary<string, string> StringStringDictionary
	{
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1512E18", Offset = "0x1512E18", VA = "0x1512E18")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1512E20", Offset = "0x1512E20", VA = "0x1512E20")]
		set
		{
		}
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x1512E88", Offset = "0x1512E88", VA = "0x1512E88")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x1512FE8", Offset = "0x1512FE8", VA = "0x1512FE8")]
	public SerializableDictionaryExample()
	{
	}
}
[Token(Token = "0x200011E")]
public abstract class SerializableHashSetBase
{
	[Token(Token = "0x200046C")]
	public abstract class Storage
	{
		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x1512FF8", Offset = "0x1512FF8", VA = "0x1512FF8")]
		protected Storage()
		{
		}
	}

	[Token(Token = "0x200046D")]
	protected class HashSet<TValue> : System.Collections.Generic.HashSet<TValue>
	{
		[Token(Token = "0x6001FC4")]
		public HashSet()
		{
		}

		[Token(Token = "0x6001FC5")]
		public HashSet(ISet<TValue> set)
		{
		}

		[Token(Token = "0x6001FC6")]
		public HashSet(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x1512FF0", Offset = "0x1512FF0", VA = "0x1512FF0")]
	protected SerializableHashSetBase()
	{
	}
}
[Serializable]
[Token(Token = "0x200011F")]
public abstract class SerializableHashSet<T> : SerializableHashSetBase, ISet<T>, ICollection<T>, IEnumerable<T>, IEnumerable, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private HashSet<T> m_hashSet;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private T[] m_keys;

	[Token(Token = "0x17000140")]
	public int Count
	{
		[Token(Token = "0x6000A0D")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000141")]
	public bool IsReadOnly
	{
		[Token(Token = "0x6000A0E")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A08")]
	public SerializableHashSet()
	{
	}

	[Token(Token = "0x6000A09")]
	public SerializableHashSet(ISet<T> set)
	{
	}

	[Token(Token = "0x6000A0A")]
	public void CopyFrom(ISet<T> set)
	{
	}

	[Token(Token = "0x6000A0B")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000A0C")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000A0F")]
	public bool Add(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A10")]
	public void ExceptWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x6000A11")]
	public void IntersectWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x6000A12")]
	public bool IsProperSubsetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A13")]
	public bool IsProperSupersetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A14")]
	public bool IsSubsetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A15")]
	public bool IsSupersetOf(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A16")]
	public bool Overlaps(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A17")]
	public bool SetEquals(IEnumerable<T> other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A18")]
	public void SymmetricExceptWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x6000A19")]
	public void UnionWith(IEnumerable<T> other)
	{
	}

	[Token(Token = "0x6000A1A")]
	private void System.Collections.Generic.ICollection<T>.Add(T item)
	{
	}

	[Token(Token = "0x6000A1B")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A1C")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1D")]
	public void CopyTo(T[] array, int arrayIndex)
	{
	}

	[Token(Token = "0x6000A1E")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1F")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000A20")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000A21")]
	public void OnDeserialization(object sender)
	{
	}

	[Token(Token = "0x6000A22")]
	protected SerializableHashSet(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000A23")]
	public void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Token(Token = "0x2000120")]
internal enum SaveFormat
{
	[Token(Token = "0x40008D9")]
	Triangles,
	[Token(Token = "0x40008DA")]
	Quads
}
[Token(Token = "0x2000121")]
internal enum SaveResolution
{
	[Token(Token = "0x40008DC")]
	Full,
	[Token(Token = "0x40008DD")]
	Half,
	[Token(Token = "0x40008DE")]
	Quarter,
	[Token(Token = "0x40008DF")]
	Eighth,
	[Token(Token = "0x40008E0")]
	Sixteenth
}
namespace nTools.PrefabPainter
{
	[Token(Token = "0x2000122")]
	public class PrefabPainterSceneSettings : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject parentForPrefabs;

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x24112BC", Offset = "0x24112BC", VA = "0x24112BC")]
		public PrefabPainterSceneSettings()
		{
		}
	}
}
namespace Sigtrap.VrTunnellingPro
{
	[Token(Token = "0x2000123")]
	public class Tunnelling : TunnellingImageBase
	{
		[Token(Token = "0x17000142")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x151574C", Offset = "0x151574C", VA = "0x151574C", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1515754", Offset = "0x1515754", VA = "0x1515754")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1515C24", Offset = "0x1515C24", VA = "0x1515C24")]
		public Tunnelling()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public abstract class TunnellingBase : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200046E")]
		public enum BackgroundMode
		{
			[Token(Token = "0x4001DA6")]
			COLOR,
			[Token(Token = "0x4001DA7")]
			SKYBOX,
			[Token(Token = "0x4001DA8")]
			CAGE_COLOR,
			[Token(Token = "0x4001DA9")]
			CAGE_SKYBOX,
			[Token(Token = "0x4001DAA")]
			CAGE_ONLY,
			[Token(Token = "0x4001DAB")]
			BLUR
		}

		[Token(Token = "0x200046F")]
		public enum MaskMode
		{
			[Token(Token = "0x4001DAD")]
			OFF,
			[Token(Token = "0x4001DAE")]
			MASK,
			[Token(Token = "0x4001DAF")]
			WINDOW,
			[Token(Token = "0x4001DB0")]
			PORTAL
		}

		[Token(Token = "0x2000470")]
		public enum MSAA
		{
			[Token(Token = "0x4001DB2")]
			AUTO,
			[Token(Token = "0x4001DB3")]
			OFF,
			[Token(Token = "0x4001DB4")]
			X2,
			[Token(Token = "0x4001DB5")]
			X4,
			[Token(Token = "0x4001DB6")]
			X8
		}

		[Token(Token = "0x40008E2")]
		public const string VRTP_VERSION = "1.2.1";

		[Token(Token = "0x40008E3")]
		public const int VRTP_VERSION_MAJOR = 1;

		[Token(Token = "0x40008E4")]
		public const int VRTP_VERSION_MINOR = 2;

		[Token(Token = "0x40008E5")]
		public const int VRTP_VERSION_PATCH = 1;

		[Token(Token = "0x40008E6")]
		public const string VRTP_VERSION_BETA = "";

		[Token(Token = "0x40008E7")]
		public const string GLOBAL_PROP_FOGCOLOR = "_VRTP_Cage_FogColor";

		[Token(Token = "0x40008E8")]
		public const string GLOBAL_PROP_FOGDENSITY = "_VRTP_Cage_FogDensity";

		[Token(Token = "0x40008E9")]
		public const string GLOBAL_PROP_FOGPOWER = "_VRTP_Cage_FogPower";

		[Token(Token = "0x40008EA")]
		public const string GLOBAL_PROP_FOGBLEND = "_VRTP_Cage_FogBlend";

		[Token(Token = "0x40008EB")]
		protected const string PATH_SHADERS = "Hidden/VrTunnellingPro/";

		[Token(Token = "0x40008EC")]
		protected const string PATH_MESHES = "Meshes/";

		[Token(Token = "0x40008ED")]
		protected const string PATH_IRISMESH = "Iris";

		[Token(Token = "0x40008EE")]
		protected const string PROP_OUTER = "_FxOuter";

		[Token(Token = "0x40008EF")]
		protected const string PROP_INNER = "_FxInner";

		[Token(Token = "0x40008F0")]
		protected const string PROP_COLOR = "_Color";

		[Token(Token = "0x40008F1")]
		protected const string PROP_SKYBOX = "_Skybox";

		[Token(Token = "0x40008F2")]
		protected const string PROP_EYEPRJ = "_EyeProjection";

		[Token(Token = "0x40008F3")]
		protected const string PROP_EYEMAT = "_EyeToWorld";

		[Token(Token = "0x40008F4")]
		protected const string KEYWORD_BKG = "TUNNEL_BKG";

		[Token(Token = "0x40008F5")]
		protected const string KEYWORD_SKYBOX = "TUNNEL_SKYBOX";

		[Token(Token = "0x40008F6")]
		protected const string KEYWORD_OVERLAY = "TUNNEL_OVERLAY";

		[Token(Token = "0x40008F7")]
		public const float FEATHER_MAX = 0.5f;

		[Token(Token = "0x40008F8")]
		public const float MOTION_STRENGTH_MAX = 2f;

		[Token(Token = "0x40008F9")]
		public const float COUNTER_STRENGTH_MAX = 2f;

		[Token(Token = "0x40008FA")]
		public const int FPSDIV_MAX = 60;

		[Token(Token = "0x40008FB")]
		private const float COVERAGE_MIN = 0.65f;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int _propFxInner;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int _propFxOuter;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _propEyeProjection;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _propEyeToWorld;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int _globPropFogColor;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int _globPropFogDensity;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int _globPropFogPower;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int _globPropFogBlend;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Matrix4x4[] _eyeToWorld;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Matrix4x4[] _eyeProjection;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD82FE8", Offset = "0xD82FE8")]
		public Transform motionTarget;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83020", Offset = "0xD83020")]
		public Color effectColor;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83058", Offset = "0xD83058")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83058", Offset = "0xD83058")]
		public float effectCoverage;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD830AC", Offset = "0xD830AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD830AC", Offset = "0xD830AC")]
		public float effectFeather;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Cubemap effectSkybox;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool applyColorToBackground;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83100", Offset = "0xD83100")]
		public bool useAngularVelocity;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83138", Offset = "0xD83138")]
		public float angularVelocityStrength;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float angularVelocityMin;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float angularVelocityMax;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float angularVelocitySmoothing;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83150", Offset = "0xD83150")]
		public bool useAcceleration;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83188", Offset = "0xD83188")]
		public float accelerationStrength;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float accelerationMin;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float accelerationMax;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float accelerationSmoothing;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD831A0", Offset = "0xD831A0")]
		public bool useVelocity;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD831D8", Offset = "0xD831D8")]
		public float velocityStrength;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float velocityMin;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float velocityMax;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float velocitySmoothing;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD831F0", Offset = "0xD831F0")]
		public Transform motionEffectTarget;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83228", Offset = "0xD83228")]
		public bool useCounterMotion;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83260", Offset = "0xD83260")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83260", Offset = "0xD83260")]
		public float counterRotationStrength;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD832B4", Offset = "0xD832B4")]
		public Vector3 counterRotationPerAxis;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD832EC", Offset = "0xD832EC")]
		public bool useArtificialTilt;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83324", Offset = "0xD83324")]
		public float tiltStrength;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8335C", Offset = "0xD8335C")]
		public Vector2 tiltMaxAngles;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83394", Offset = "0xD83394")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83394", Offset = "0xD83394")]
		public float tiltSmoothTime;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD833E8", Offset = "0xD833E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD833E8", Offset = "0xD833E8")]
		public int framerateDivision;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool divideTranslation;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		public bool divideRotation;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion _lastRot;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 _lastFwd;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 _lastPos;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _lastSpeed;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _lastVel;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Quaternion _cmRot;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _avSmoothed;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float _avSlew;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float _speedSmoothed;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float _speedSlew;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float _accelSmoothed;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float _accelSlew;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform _prevMotionEffectTarget;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool _prevUseTilt;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 _tiltAccelSmoothed;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 _tiltAccelSlew;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Angle3 _tiltInit;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int _lastFpsDivision;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Vector3 _mfxTgtLocalPosInit;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Quaternion _mfxTgtLocalRotInit;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected Camera _cam;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected bool _hasDrawnThisFrame;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 _fpsPosition;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion _fpsRotation;

		[Token(Token = "0x17000143")]
		public bool usingMotionEffectTarget
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x1515DA4", Offset = "0x1515DA4", VA = "0x1515DA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1515DC4", Offset = "0x1515DC4", VA = "0x1515DC4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1515EDC", Offset = "0x1515EDC", VA = "0x1515EDC", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x1515F4C", Offset = "0x1515F4C", VA = "0x1515F4C")]
		protected void ApplyPresetBase(TunnellingPresetBase p)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x1516354", Offset = "0x1516354", VA = "0x1516354")]
		protected void FillMaskBuffer(CommandBuffer cb, List<Renderer> rs, Material m)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1515EE0", Offset = "0x1515EE0", VA = "0x1515EE0")]
		protected void ResetMotion()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x15164F8", Offset = "0x15164F8", VA = "0x15164F8", Slot = "6")]
		public virtual void ResetCounterMotion()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x151658C", Offset = "0x151658C", VA = "0x151658C")]
		private float RemapRadius(float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1516608", Offset = "0x1516608", VA = "0x1516608")]
		protected float CalculateMotion(float dT)
		{
			return default(float);
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x151713C", Offset = "0x151713C", VA = "0x151713C")]
		public static Vector3 SmoothDampAngle(Vector3 current, Vector3 target, ref Vector3 vel, float smoothTime, float maxSpeed, float dT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x151728C", Offset = "0x151728C", VA = "0x151728C", Slot = "7")]
		protected virtual void UpdateCounterMotion(Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x1517398", Offset = "0x1517398", VA = "0x1517398")]
		protected Quaternion GetCounterRotationDelta(Quaternion deltaRot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x15174C4", Offset = "0x15174C4", VA = "0x15174C4")]
		protected void UpdateEyeMatrices()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1517A3C", Offset = "0x1517A3C", VA = "0x1517A3C", Slot = "8")]
		protected virtual void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1517A40", Offset = "0x1517A40", VA = "0x1517A40")]
		protected void ApplyEyeMatrices(Material m)
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1517A8C", Offset = "0x1517A8C", VA = "0x1517A8C")]
		protected TunnellingBase()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public struct Angle
	{
		[Token(Token = "0x2000471")]
		public enum AngleType
		{
			[Token(Token = "0x4001DB8")]
			ANGLE,
			[Token(Token = "0x4001DB9")]
			ACUTE,
			[Token(Token = "0x4001DBA")]
			REFLEX
		}

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _angle;

		[Token(Token = "0x17000144")]
		public float angle
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x15141B0", Offset = "0x15141B0", VA = "0x15141B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000145")]
		public float acute
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x15141B8", Offset = "0x15141B8", VA = "0x15141B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000146")]
		public float reflex
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x1514290", Offset = "0x1514290", VA = "0x1514290")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x151429C", Offset = "0x151429C", VA = "0x151429C")]
		public Angle(float a)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x15142C4", Offset = "0x15142C4", VA = "0x15142C4")]
		public Angle(Angle a)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x15142EC", Offset = "0x15142EC", VA = "0x15142EC")]
		public float ToFloat(AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x15141C4", Offset = "0x15141C4", VA = "0x15141C4")]
		public static float ToAngle(float a, AngleType type)
		{
			return default(float);
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x15142F8", Offset = "0x15142F8", VA = "0x15142F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1514378", Offset = "0x1514378", VA = "0x1514378")]
		public static bool operator <(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x1514384", Offset = "0x1514384", VA = "0x1514384")]
		public static bool operator >(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x1514390", Offset = "0x1514390", VA = "0x1514390")]
		public static bool operator <=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x151439C", Offset = "0x151439C", VA = "0x151439C")]
		public static bool operator >=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x15143A8", Offset = "0x15143A8", VA = "0x15143A8")]
		public static Angle operator +(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x15143B4", Offset = "0x15143B4", VA = "0x15143B4")]
		public static Angle operator -(Angle a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x15143C0", Offset = "0x15143C0", VA = "0x15143C0")]
		public static bool operator ==(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x15143CC", Offset = "0x15143CC", VA = "0x15143CC")]
		public static bool operator !=(Angle a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x15143D8", Offset = "0x15143D8", VA = "0x15143D8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x1514494", Offset = "0x1514494", VA = "0x1514494", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x151449C", Offset = "0x151449C", VA = "0x151449C")]
		public static bool operator <(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x15144CC", Offset = "0x15144CC", VA = "0x15144CC")]
		public static bool operator >(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x15144FC", Offset = "0x15144FC", VA = "0x15144FC")]
		public static bool operator <=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x151452C", Offset = "0x151452C", VA = "0x151452C")]
		public static bool operator >=(Angle a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x151455C", Offset = "0x151455C", VA = "0x151455C")]
		public static Angle operator +(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x151458C", Offset = "0x151458C", VA = "0x151458C")]
		public static Angle operator -(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x15145BC", Offset = "0x15145BC", VA = "0x15145BC")]
		public static Angle operator *(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x15145C8", Offset = "0x15145C8", VA = "0x15145C8")]
		public static Angle operator /(Angle a, float b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x15145D4", Offset = "0x15145D4", VA = "0x15145D4")]
		public static bool operator <(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x15145E8", Offset = "0x15145E8", VA = "0x15145E8")]
		public static bool operator >(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x15145FC", Offset = "0x15145FC", VA = "0x15145FC")]
		public static bool operator <=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1514610", Offset = "0x1514610", VA = "0x1514610")]
		public static bool operator >=(float a, Angle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1514624", Offset = "0x1514624", VA = "0x1514624")]
		public static Angle operator +(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1514650", Offset = "0x1514650", VA = "0x1514650")]
		public static Angle operator -(float a, Angle b)
		{
			return default(Angle);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x151467C", Offset = "0x151467C", VA = "0x151467C")]
		public static implicit operator Angle(float f)
		{
			return default(Angle);
		}
	}
	[Token(Token = "0x2000126")]
	public struct Angle3
	{
		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Angle x;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Angle y;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Angle z;

		[Token(Token = "0x17000147")]
		public Vector3 eulerAngles
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x1514684", Offset = "0x1514684", VA = "0x1514684")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000148")]
		public Vector3 eulerAcute
		{
			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0x15146C0", Offset = "0x15146C0", VA = "0x15146C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000149")]
		public Vector3 eulerReflex
		{
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x1514748", Offset = "0x1514748", VA = "0x1514748")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700014A")]
		public Angle angle
		{
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x15147D0", Offset = "0x15147D0", VA = "0x15147D0")]
			get
			{
				return default(Angle);
			}
		}

		[Token(Token = "0x1700014B")]
		public Vector3 axis
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x15148F8", Offset = "0x15148F8", VA = "0x15148F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x1514930", Offset = "0x1514930", VA = "0x1514930")]
		public Angle3(float x, float y, float z)
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x1514988", Offset = "0x1514988", VA = "0x1514988")]
		public Angle3(Angle x, Angle y, Angle z)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x151498C", Offset = "0x151498C", VA = "0x151498C")]
		public Angle3(Vector3 euler)
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x1514990", Offset = "0x1514990", VA = "0x1514990")]
		public Angle3(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1514804", Offset = "0x1514804", VA = "0x1514804")]
		public void ToAxisAngle(out Vector3 axis, out Angle angle)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x15149D0", Offset = "0x15149D0", VA = "0x15149D0")]
		public Vector3 ToEuler(Angle.AngleType type)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x1514A5C", Offset = "0x1514A5C", VA = "0x1514A5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x1514B1C", Offset = "0x1514B1C", VA = "0x1514B1C")]
		public static Angle3 operator +(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x1514BAC", Offset = "0x1514BAC", VA = "0x1514BAC")]
		public static Angle3 operator -(Angle3 a, Angle3 b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x1514C3C", Offset = "0x1514C3C", VA = "0x1514C3C")]
		public static Angle3 operator *(Angle3 a, float b)
		{
			return default(Angle3);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x1514CC0", Offset = "0x1514CC0", VA = "0x1514CC0")]
		public static bool operator ==(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1514CE4", Offset = "0x1514CE4", VA = "0x1514CE4")]
		public static bool operator !=(Angle3 a, Angle3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x1514D08", Offset = "0x1514D08", VA = "0x1514D08", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x1514DF0", Offset = "0x1514DF0", VA = "0x1514DF0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1514E40", Offset = "0x1514E40", VA = "0x1514E40")]
		public static implicit operator Angle3(Vector3 v)
		{
			return default(Angle3);
		}
	}
	[Token(Token = "0x2000127")]
	public abstract class TunnellingImageBase : TunnellingBase
	{
		[Token(Token = "0x2000472")]
		public enum BlurKernel
		{
			[Token(Token = "0x4001DBC")]
			FIVE,
			[Token(Token = "0x4001DBD")]
			NINE,
			[Token(Token = "0x4001DBE")]
			THIRTEEN
		}

		[Token(Token = "0x2000473")]
		public enum CounterVelocityMode
		{
			[Token(Token = "0x4001DC0")]
			OFF,
			[Token(Token = "0x4001DC1")]
			SHADER,
			[Token(Token = "0x4001DC2")]
			REAL
		}

		[Token(Token = "0x4000942")]
		private const string KEYWORD_MASK = "TUNNEL_MASK";

		[Token(Token = "0x4000943")]
		private const string KEYWORD_CONSTANT = "TUNNEL_CONSTANT";

		[Token(Token = "0x4000944")]
		private const string KEYWORD_INVERT = "TUNNEL_INVERT_MASK";

		[Token(Token = "0x4000945")]
		private const string KEYWORD_BLUR = "TUNNEL_BLUR";

		[Token(Token = "0x4000946")]
		private const string PATH_TUNNELSHADER = "Tunnelling";

		[Token(Token = "0x4000947")]
		private const string PATH_MASKSHADER = "Mask";

		[Token(Token = "0x4000948")]
		private const string PATH_WINDOWSHADER = "Window";

		[Token(Token = "0x4000949")]
		private const string PATH_COPYSHADER = "BlitA";

		[Token(Token = "0x400094A")]
		private const string PATH_BLURSHADER = "SeparableBlur";

		[Token(Token = "0x400094B")]
		private const string PATH_IRISSHADER = "TunnellingVertexZ";

		[Token(Token = "0x400094C")]
		private const string PATH_SKYSPHERESHADER = "Skysphere";

		[Token(Token = "0x400094D")]
		private const string PATH_SKYSPHEREMESH = "Skysphere";

		[Token(Token = "0x400094E")]
		private const string PROP_FEATHER = "_Feather";

		[Token(Token = "0x400094F")]
		private const string PROP_BKGRT = "_BkgTex";

		[Token(Token = "0x4000950")]
		private const string PROP_MASKRT = "_MaskTex";

		[Token(Token = "0x4000951")]
		private const string PROP_BLUR = "_Blur";

		[Token(Token = "0x4000952")]
		private const string PROP_OVERLAY = "_Overlay";

		[Token(Token = "0x4000953")]
		private const string PROP_BLUR_OFFSETS = "_Offsets";

		[Token(Token = "0x4000954")]
		private const float BLUR_OFFSET_1 = 1.3333334f;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] BLUR_OFFSETS_9;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] BLUR_OFFSETS_13;

		[Token(Token = "0x4000957")]
		public const string GLOBAL_PROP_WORLD2CAGE = "_VRTP_WorldToCage";

		[Token(Token = "0x4000958")]
		public const string GLOBAL_PROP_WORLD2CAGE_NORMAL = "_VRTP_WorldToCageNormal";

		[Token(Token = "0x4000959")]
		public const string GLOBAL_PROP_CAGEPOS = "_VRTP_CagePos";

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD83440", Offset = "0xD83440")]
		private static TunnellingImageBase <instance>k__BackingField;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83450", Offset = "0xD83450")]
		public BackgroundMode backgroundMode;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83488", Offset = "0xD83488")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83488", Offset = "0xD83488")]
		public float effectOverlay;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD834DC", Offset = "0xD834DC")]
		private GameObject _cageParent;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83528", Offset = "0xD83528")]
		public int cageDownsample;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public MSAA cageAntiAliasing;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public bool cageUpdateEveryFrame;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83540", Offset = "0xD83540")]
		public float cageFogDensity;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83560", Offset = "0xD83560")]
		public float cageFogPower;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83578", Offset = "0xD83578")]
		public float cageFogBlend;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public MaskMode maskMode;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83590", Offset = "0xD83590")]
		public int blurDownsample;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD835A8", Offset = "0xD835A8")]
		public float blurDistance;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD835C0", Offset = "0xD835C0")]
		public int blurPasses;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public BlurKernel blurSamples;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD835D8", Offset = "0xD835D8")]
		public bool irisZRejection;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public CounterVelocityMode counterVelocityMode;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83610", Offset = "0xD83610")]
		public float counterVelocityResetDistance;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83648", Offset = "0xD83648")]
		public float counterVelocityResetTime;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83680", Offset = "0xD83680")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83680", Offset = "0xD83680")]
		public float counterVelocityStrength;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD836D4", Offset = "0xD836D4")]
		public Vector3 counterVelocityPerAxis;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private CommandBuffer _maskCmd;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Material _matTunnel;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Material _matMask;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Material _matWindow;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Material _matCopyAlpha;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Material _matBlur;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Material _matSkysphere;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Mesh _meshSkysphere;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private MeshRenderer[] _cageMrs;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private List<MeshFilter> _cageMfs;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private List<Renderer> _maskObjects;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private RenderTexture _cageRt;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private RenderTexture _maskRt;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private RenderTexture _blurRt0;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private RenderTexture _blurRt1;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private int _rtX;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private int _rtY;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _rtA;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private CommandBuffer _irisCmd;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Material _matIris;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Mesh _meshIris;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Vector4[] _blurOffsets;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private MaskMode _lastMaskMode;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private MSAA _lastCageMsaa;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private bool _camHasMaskBuffer;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private int _lastCageDownsample;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private int _lastBlurDownsample;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float _lastBlurRadius;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private BlurKernel _lastBlurKernel;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private bool _wasDrawingIrisEarly;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E5")]
		private bool _camHasIrisBuffer;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private CounterVelocityMode _lastCvMode;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private Vector3 _cmPos;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Vector3 _cageInitialPosLocal;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private float _timeToResetCounterVelocity;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private int _propColor;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private int _propBkgRt;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private int _propMaskRt;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private int _propSkybox;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private int _propOverlay;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private int _propBlur;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private int _propBlurOffsets;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private int _globPropWorld2Cage;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private int _globPropWorld2CageNormal;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private int _globPropCagePos;

		[Token(Token = "0x1700014C")]
		public static TunnellingImageBase instance
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0x1517BDC", Offset = "0x1517BDC", VA = "0x1517BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92554", Offset = "0xD92554")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0x1517C44", Offset = "0x1517C44", VA = "0x1517C44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92564", Offset = "0xD92564")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public bool usingMask
		{
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0x1517CB0", Offset = "0x1517CB0", VA = "0x1517CB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014E")]
		public bool usingCage
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0x1517CC0", Offset = "0x1517CC0", VA = "0x1517CC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014F")]
		private bool _usingCageRt
		{
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x1517CE4", Offset = "0x1517CE4", VA = "0x1517CE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000150")]
		private bool _canDrawIris
		{
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x1517CF8", Offset = "0x1517CF8", VA = "0x1517CF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000151")]
		private bool _drawIris
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x1517D2C", Offset = "0x1517D2C", VA = "0x1517D2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000152")]
		protected abstract CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6000A74")]
			get;
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x1517D68", Offset = "0x1517D68", VA = "0x1517D68", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x1518570", Offset = "0x1518570", VA = "0x1518570", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x15188D4", Offset = "0x15188D4", VA = "0x15188D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x1518958", Offset = "0x1518958", VA = "0x1518958")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x1518B64", Offset = "0x1518B64", VA = "0x1518B64")]
		private void ReleaseRT(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x1518BF4", Offset = "0x1518BF4", VA = "0x1518BF4")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x1518EB8", Offset = "0x1518EB8", VA = "0x1518EB8")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x1518600", Offset = "0x1518600", VA = "0x1518600")]
		public void UpdateCage()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x1518FA8", Offset = "0x1518FA8", VA = "0x1518FA8", Slot = "6")]
		public override void ResetCounterMotion()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x1515544", Offset = "0x1515544", VA = "0x1515544")]
		public void ApplyPreset(TunnellingPreset p)
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x15192D0", Offset = "0x15192D0", VA = "0x15192D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x1519968", Offset = "0x1519968", VA = "0x1519968")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x1515758", Offset = "0x1515758", VA = "0x1515758")]
		protected void Draw(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x151A180", Offset = "0x151A180", VA = "0x151A180", Slot = "8")]
		protected override void CorrectEyeMatrices(Matrix4x4[] eyePrj, Matrix4x4[] eyeToWorld)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x151A200", Offset = "0x151A200", VA = "0x151A200", Slot = "7")]
		protected override void UpdateCounterMotion(Vector3 deltaPos, Quaternion deltaRot)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x15182D0", Offset = "0x15182D0", VA = "0x15182D0")]
		private void UpdateKeywords()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1519684", Offset = "0x1519684", VA = "0x1519684")]
		private void UpdateBlurKernel()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x151A4FC", Offset = "0x151A4FC", VA = "0x151A4FC")]
		private int GetMsaa(MSAA m, int srcMsaa)
		{
			return default(int);
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x1519BA0", Offset = "0x1519BA0", VA = "0x1519BA0")]
		private void UpdateRenderTextures(int srcX, int srcY, int srcMsaa)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x1518CE4", Offset = "0x1518CE4", VA = "0x1518CE4")]
		private void ResetMaskCommandBuffer()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x151880C", Offset = "0x151880C", VA = "0x151880C")]
		private void ToggleMaskCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x151887C", Offset = "0x151887C", VA = "0x151887C")]
		private void ToggleIrisCommandBuffer(bool on)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x1515C88", Offset = "0x1515C88", VA = "0x1515C88")]
		protected TunnellingImageBase()
		{
		}
	}
	[Token(Token = "0x2000128")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7DEB8", Offset = "0xD7DEB8")]
	public class TunnellingMaskObject : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x151A5F0", Offset = "0x151A5F0", VA = "0x151A5F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x151A648", Offset = "0x151A648", VA = "0x151A648")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x151A654", Offset = "0x151A654", VA = "0x151A654")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x151A7FC", Offset = "0x151A7FC", VA = "0x151A7FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x151A98C", Offset = "0x151A98C", VA = "0x151A98C")]
		public TunnellingMaskObject()
		{
		}
	}
	[Token(Token = "0x2000129")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7DF1C", Offset = "0xD7DF1C")]
	public class TunnellingMaskObjectMobile : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoAddChildren;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _r;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _started;

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x151A994", Offset = "0x151A994", VA = "0x151A994")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x151A9EC", Offset = "0x151A9EC", VA = "0x151A9EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x151A9F8", Offset = "0x151A9F8", VA = "0x151A9F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x151AEC0", Offset = "0x151AEC0", VA = "0x151AEC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x151B158", Offset = "0x151B158", VA = "0x151B158")]
		public TunnellingMaskObjectMobile()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class TunnellingMobile : TunnellingBase
	{
		[Token(Token = "0x40009A2")]
		public const string GLOBAL_PROP_STENCILREF = "_VRTP_Stencil_Ref";

		[Token(Token = "0x40009A3")]
		public const string GLOBAL_PROP_STENCILMASK = "_VRTP_Stencil_Mask";

		[Token(Token = "0x40009A4")]
		public const string GLOBAL_PROP_STENCILBIAS = "_VRTP_Stencil_Bias";

		[Token(Token = "0x40009A5")]
		private const string PROP_WRITEZ = "_WriteZ";

		[Token(Token = "0x40009A6")]
		private const string PATH_SHADER = "TunnellingVertex";

		[Token(Token = "0x40009A7")]
		private const string PATH_STENCILSHADER = "TunnellingMobileStencil";

		[Token(Token = "0x40009A8")]
		private const CameraEvent CEVENT_FX = CameraEvent.BeforeImageEffects;

		[Token(Token = "0x40009A9")]
		private const CameraEvent CEVENT_Z = CameraEvent.BeforeForwardOpaque;

		[Token(Token = "0x40009AA")]
		private const int RQUEUE_FIRST = 1;

		[Token(Token = "0x40009AB")]
		private const int RQUEUE_MASK = 2499;

		[Token(Token = "0x40009AC")]
		private const int RQUEUE_OPAQUE = 2501;

		[Token(Token = "0x40009AD")]
		private const int RQUEUE_LAST = 5000;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8370C", Offset = "0xD8370C")]
		private static TunnellingMobile <instance>k__BackingField;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material _stencilMat;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8371C", Offset = "0xD8371C")]
		public bool drawSkybox;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83754", Offset = "0xD83754")]
		public bool useMask;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8378C", Offset = "0xD8378C")]
		public bool drawBeforeTransparent;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD837C4", Offset = "0xD837C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD837C4", Offset = "0xD837C4")]
		public int stencilReference;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8381C", Offset = "0xD8381C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8381C", Offset = "0xD8381C")]
		public int stencilMask;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD83874", Offset = "0xD83874")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83874", Offset = "0xD83874")]
		public float stencilBias;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private int _propColor;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int _propSkybox;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int _propWriteZ;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int _globPropStencilRef;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int _globPropStencilMask;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private int _globPropStencilBias;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Material _irisMatOuter;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Material _irisMatInner;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Mesh _irisMesh;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Dictionary<Renderer, MeshFilter> _maskObjects;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Stack<Mesh> _skinnedMeshPool;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Stack<Mesh> _skinnedMeshesRendering;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private List<UnityEngine.Object> _toDestroy;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private List<MeshRenderer> _tempMeshChildren;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private List<SkinnedMeshRenderer> _tempSkinnedMeshChildren;

		[Token(Token = "0x17000153")]
		public static TunnellingMobile instance
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x151B160", Offset = "0x151B160", VA = "0x151B160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92574", Offset = "0xD92574")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x151B1B0", Offset = "0x151B1B0", VA = "0x151B1B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92584", Offset = "0xD92584")]
			private set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public static Material stencilMat
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x151B204", Offset = "0x151B204", VA = "0x151B204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		public bool irisZRejectionEnabled
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0x151B2EC", Offset = "0x151B2EC", VA = "0x151B2EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x151B30C", Offset = "0x151B30C", VA = "0x151B30C")]
		public void ApplyPreset(TunnellingPresetMobile p)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x151AB3C", Offset = "0x151AB3C", VA = "0x151AB3C")]
		public void AddObjectToMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x151AFEC", Offset = "0x151AFEC", VA = "0x151AFEC")]
		public void RemoveObjectFromMask(Renderer r, bool includeChildren = false)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x151B3C4", Offset = "0x151B3C4", VA = "0x151B3C4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x151B6A0", Offset = "0x151B6A0", VA = "0x151B6A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x151B9A0", Offset = "0x151B9A0", VA = "0x151B9A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x151C0E8", Offset = "0x151C0E8", VA = "0x151C0E8")]
		private void DrawIris(Material m, int submesh, int opaqueQueue, int camLayer)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x151C3C4", Offset = "0x151C3C4", VA = "0x151C3C4")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x151C3F8", Offset = "0x151C3F8", VA = "0x151C3F8")]
		public TunnellingMobile()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class TunnellingOpaque : TunnellingImageBase
	{
		[Token(Token = "0x17000156")]
		protected override CameraEvent _maskCmdEvt
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x151C53C", Offset = "0x151C53C", VA = "0x151C53C", Slot = "9")]
			get
			{
				return default(CameraEvent);
			}
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x151C544", Offset = "0x151C544", VA = "0x151C544")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x151C548", Offset = "0x151C548", VA = "0x151C548")]
		public TunnellingOpaque()
		{
		}
	}
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD7DF80", Offset = "0xD7DF80")]
	public class TunnellingPreset : TunnellingPresetBase
	{
		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD838C8", Offset = "0xD838C8")]
		private float _effectOverlay;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private bool _overrideEffectOverlay;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TunnellingBase.BackgroundMode _backgroundMode;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool _overrideBackgroundMode;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83938", Offset = "0xD83938")]
		private int _cageDownsample;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private bool _overrideCageDownsample;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TunnellingBase.MSAA _cageAntiAliasing;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private bool _overrideCageAntiAliasing;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		[SerializeField]
		private bool _cageUpdateEveryFrame;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		[SerializeField]
		private bool _overrideCageUpdateEveryFrame;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD839C8", Offset = "0xD839C8")]
		private float _cageFogDensity;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private bool _overrideCageFogDensity;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83A20", Offset = "0xD83A20")]
		private float _cageFogPower;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool _overrideCageFogPower;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83A70", Offset = "0xD83A70")]
		private float _cageFogBlend;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool _overrideCageFogBlend;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TunnellingBase.MaskMode _maskMode;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool _overrideMaskMode;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83AE0", Offset = "0xD83AE0")]
		private int _blurDownsample;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private bool _overrideBlurDownsample;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83B30", Offset = "0xD83B30")]
		private float _blurDistance;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _overrideBlurDistance;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83B80", Offset = "0xD83B80")]
		private int _blurPasses;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool _overrideBlurPasses;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TunnellingImageBase.BlurKernel _blurSamples;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private bool _overrideBlurSamples;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TunnellingImageBase.CounterVelocityMode _counterVelocityMode;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private bool _overrideCounterVelocityMode;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float _counterVelocityResetDistance;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private bool _overrideCounterVelocityResetDistance;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private float _counterVelocityResetTime;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool _overrideCounterVelocityResetTime;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83C50", Offset = "0xD83C50")]
		private float _counterVelocityStrength;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool _overrideCounterVelocityStrength;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Vector3 _counterVelocityPerAxis;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private bool _overrideCounterVelocityPerAxis;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		[SerializeField]
		private bool _irisZRejection;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
		[SerializeField]
		private bool _overrideIrisZRejection;

		[Token(Token = "0x17000157")]
		public float effectOverlay
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x151C5AC", Offset = "0x151C5AC", VA = "0x151C5AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000158")]
		public bool overrideEffectOverlay
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x151C5B4", Offset = "0x151C5B4", VA = "0x151C5B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000159")]
		public TunnellingBase.BackgroundMode backgroundMode
		{
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x151C5BC", Offset = "0x151C5BC", VA = "0x151C5BC")]
			get
			{
				return default(TunnellingBase.BackgroundMode);
			}
		}

		[Token(Token = "0x1700015A")]
		public bool overrideBackgroundMode
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0x1519090", Offset = "0x1519090", VA = "0x1519090")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015B")]
		public int cageDownsample
		{
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x151C5C4", Offset = "0x151C5C4", VA = "0x151C5C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015C")]
		public bool overrideCageDownsample
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0x15190B0", Offset = "0x15190B0", VA = "0x15190B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015D")]
		public TunnellingBase.MSAA cageAntiAliasing
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x151C5CC", Offset = "0x151C5CC", VA = "0x151C5CC")]
			get
			{
				return default(TunnellingBase.MSAA);
			}
		}

		[Token(Token = "0x1700015E")]
		public bool overrideCageAntiAliasing
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x15190D0", Offset = "0x15190D0", VA = "0x15190D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015F")]
		public bool cageUpdateEveryFrame
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x151C5D4", Offset = "0x151C5D4", VA = "0x151C5D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000160")]
		public bool overrideCageUpdateEveryFrame
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x15190F0", Offset = "0x15190F0", VA = "0x15190F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000161")]
		public float cageFogDensity
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x151C5DC", Offset = "0x151C5DC", VA = "0x151C5DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000162")]
		public bool overrideCageFogDensity
		{
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x1519110", Offset = "0x1519110", VA = "0x1519110")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000163")]
		public float cageFogPower
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x151C5E4", Offset = "0x151C5E4", VA = "0x151C5E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000164")]
		public bool overrideCageFogPower
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x1519130", Offset = "0x1519130", VA = "0x1519130")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		public float cageFogBlend
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x151C5EC", Offset = "0x151C5EC", VA = "0x151C5EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000166")]
		public bool overrideCageFogBlend
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x1519150", Offset = "0x1519150", VA = "0x1519150")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000167")]
		public TunnellingBase.MaskMode maskMode
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x151C5F4", Offset = "0x151C5F4", VA = "0x151C5F4")]
			get
			{
				return default(TunnellingBase.MaskMode);
			}
		}

		[Token(Token = "0x17000168")]
		public bool overrideMaskMode
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0x1519170", Offset = "0x1519170", VA = "0x1519170")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000169")]
		public int blurDownsample
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0x151C5FC", Offset = "0x151C5FC", VA = "0x151C5FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016A")]
		public bool overrideBlurDownsample
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0x1519190", Offset = "0x1519190", VA = "0x1519190")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016B")]
		public float blurDistance
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x151C604", Offset = "0x151C604", VA = "0x151C604")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016C")]
		public bool overrideBlurDistance
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x15191B0", Offset = "0x15191B0", VA = "0x15191B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016D")]
		public int blurPasses
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x151C60C", Offset = "0x151C60C", VA = "0x151C60C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016E")]
		public bool overrideBlurPasses
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x15191D0", Offset = "0x15191D0", VA = "0x15191D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016F")]
		public TunnellingImageBase.BlurKernel blurSamples
		{
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0x151C614", Offset = "0x151C614", VA = "0x151C614")]
			get
			{
				return default(TunnellingImageBase.BlurKernel);
			}
		}

		[Token(Token = "0x17000170")]
		public bool overrideBlurSamples
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x15191F0", Offset = "0x15191F0", VA = "0x15191F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000171")]
		public TunnellingImageBase.CounterVelocityMode counterVelocityMode
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x151C61C", Offset = "0x151C61C", VA = "0x151C61C")]
			get
			{
				return default(TunnellingImageBase.CounterVelocityMode);
			}
		}

		[Token(Token = "0x17000172")]
		public bool overrideCounterVelocityMode
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x1519210", Offset = "0x1519210", VA = "0x1519210")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000173")]
		public float counterVelocityResetDistance
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x151C624", Offset = "0x151C624", VA = "0x151C624")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000174")]
		public bool overrideCounterVelocityResetDistance
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0x1519230", Offset = "0x1519230", VA = "0x1519230")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000175")]
		public float counterVelocityResetTime
		{
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0x151C62C", Offset = "0x151C62C", VA = "0x151C62C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000176")]
		public bool overrideCounterVelocityResetTime
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x1519250", Offset = "0x1519250", VA = "0x1519250")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		public float counterVelocityStrength
		{
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0x151C634", Offset = "0x151C634", VA = "0x151C634")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000178")]
		public bool overrideCounterVelocityStrength
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x1519270", Offset = "0x1519270", VA = "0x1519270")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000179")]
		public Vector3 counterVelocityPerAxis
		{
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0x151C63C", Offset = "0x151C63C", VA = "0x151C63C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700017A")]
		public bool overrideCounterVelocityPerAxis
		{
			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0x1519290", Offset = "0x1519290", VA = "0x1519290")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017B")]
		public bool irisZRejection
		{
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x151C64C", Offset = "0x151C64C", VA = "0x151C64C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public bool overrideIrisZRejection
		{
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0x15192B0", Offset = "0x15192B0", VA = "0x15192B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x151C654", Offset = "0x151C654", VA = "0x151C654")]
		public TunnellingPreset()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public abstract class TunnellingPresetBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000474")]
		public class MotionSettings
		{
			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private bool _use;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8CFC4", Offset = "0xD8CFC4")]
			private float _strength;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private float _min;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private float _max;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private float _smoothing;

			[Token(Token = "0x170003D0")]
			public bool use
			{
				[Token(Token = "0x6001FC7")]
				[Address(RVA = "0x151C8E4", Offset = "0x151C8E4", VA = "0x151C8E4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170003D1")]
			public float strength
			{
				[Token(Token = "0x6001FC8")]
				[Address(RVA = "0x151C8EC", Offset = "0x151C8EC", VA = "0x151C8EC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003D2")]
			public float min
			{
				[Token(Token = "0x6001FC9")]
				[Address(RVA = "0x151C8F4", Offset = "0x151C8F4", VA = "0x151C8F4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003D3")]
			public float max
			{
				[Token(Token = "0x6001FCA")]
				[Address(RVA = "0x151C8FC", Offset = "0x151C8FC", VA = "0x151C8FC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003D4")]
			public float smoothing
			{
				[Token(Token = "0x6001FCB")]
				[Address(RVA = "0x151C904", Offset = "0x151C904", VA = "0x151C904")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x151C90C", Offset = "0x151C90C", VA = "0x151C90C")]
			public MotionSettings()
			{
			}
		}

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _overrideAll;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83CF0", Offset = "0xD83CF0")]
		private float _effectCoverage;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _overrideEffectCoverage;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _effectColor;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _overrideEffectColor;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83D60", Offset = "0xD83D60")]
		private float _effectFeather;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _overrideEffectFeather;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool _applyColorToBackground;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		private bool _overrideApplyColorToBackground;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Cubemap _skybox;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _overrideSkybox;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MotionSettings _angularVelocity;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _overrideAngularVelocity;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MotionSettings _acceleration;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _overrideAcceleration;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MotionSettings _velocity;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _overrideVelocity;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool _useCounterMotion;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool _overrideUseCounterMotion;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83E70", Offset = "0xD83E70")]
		private float _counterRotationStrength;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool _overrideCounterRotationStrength;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Vector3 _counterRotationPerAxis;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _overrideCounterRotationPerAxis;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool _useArtificialTilt;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[SerializeField]
		private bool _overrideUseArtificialTilt;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83F00", Offset = "0xD83F00")]
		private int _framerateDivision;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _overrideFramerateDivision;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool _divideTranslation;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[SerializeField]
		private bool _overrideDivideTranslation;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		[SerializeField]
		private bool _divideRotation;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private bool _overrideDivideRotation;

		[Token(Token = "0x1700017D")]
		protected bool overrideAll
		{
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x151C83C", Offset = "0x151C83C", VA = "0x151C83C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017E")]
		public float effectCoverage
		{
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x151C844", Offset = "0x151C844", VA = "0x151C844")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017F")]
		public bool overrideEffectCoverage
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x1516194", Offset = "0x1516194", VA = "0x1516194")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000180")]
		public Color effectColor
		{
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0x151C84C", Offset = "0x151C84C", VA = "0x151C84C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000181")]
		public bool overrideEffectColor
		{
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0x15161B4", Offset = "0x15161B4", VA = "0x15161B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000182")]
		public float effectFeather
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0x151C858", Offset = "0x151C858", VA = "0x151C858")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000183")]
		public bool overrideEffectFeather
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x15161D4", Offset = "0x15161D4", VA = "0x15161D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000184")]
		public bool applyColorToBackground
		{
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x151C860", Offset = "0x151C860", VA = "0x151C860")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000185")]
		public bool overrideApplyColorToBackground
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0x15161F4", Offset = "0x15161F4", VA = "0x15161F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000186")]
		public Cubemap skybox
		{
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0x151C868", Offset = "0x151C868", VA = "0x151C868")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public bool overrideSkybox
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0x1516214", Offset = "0x1516214", VA = "0x1516214")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000188")]
		public MotionSettings angularVelocity
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x151C870", Offset = "0x151C870", VA = "0x151C870")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public bool overrideAngularVelocity
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x1516234", Offset = "0x1516234", VA = "0x1516234")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018A")]
		public MotionSettings acceleration
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x151C878", Offset = "0x151C878", VA = "0x151C878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public bool overrideAcceleration
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x1516254", Offset = "0x1516254", VA = "0x1516254")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018C")]
		public MotionSettings velocity
		{
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x151C880", Offset = "0x151C880", VA = "0x151C880")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public bool overrideVelocity
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0x1516274", Offset = "0x1516274", VA = "0x1516274")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018E")]
		public bool useCounterMotion
		{
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x151C888", Offset = "0x151C888", VA = "0x151C888")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018F")]
		public bool overrideUseCounterMotion
		{
			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0x1516294", Offset = "0x1516294", VA = "0x1516294")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000190")]
		public float counterRotationStrength
		{
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x151C890", Offset = "0x151C890", VA = "0x151C890")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000191")]
		public bool overrideCounterRotationStrength
		{
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x151C898", Offset = "0x151C898", VA = "0x151C898")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000192")]
		public Vector3 counterRotationPerAxis
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x151C8B8", Offset = "0x151C8B8", VA = "0x151C8B8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000193")]
		public bool overrideCounterRotationPerAxis
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x15162B4", Offset = "0x15162B4", VA = "0x15162B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000194")]
		public bool useArtificialTilt
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0x151C8C4", Offset = "0x151C8C4", VA = "0x151C8C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000195")]
		public bool overrideUseArtificialTilt
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x15162D4", Offset = "0x15162D4", VA = "0x15162D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000196")]
		public int framerateDivision
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x151C8CC", Offset = "0x151C8CC", VA = "0x151C8CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000197")]
		public bool overrideFramerateDivision
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x15162F4", Offset = "0x15162F4", VA = "0x15162F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000198")]
		public bool divideTranslation
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x151C8D4", Offset = "0x151C8D4", VA = "0x151C8D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000199")]
		public bool overrideDivideTranslation
		{
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x1516314", Offset = "0x1516314", VA = "0x1516314")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019A")]
		public bool divideRotation
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x151C8DC", Offset = "0x151C8DC", VA = "0x151C8DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019B")]
		public bool overrideDividerotation
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x1516334", Offset = "0x1516334", VA = "0x1516334")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x151C750", Offset = "0x151C750", VA = "0x151C750")]
		protected TunnellingPresetBase()
		{
		}
	}
	[Token(Token = "0x200012E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD7DFC0", Offset = "0xD7DFC0")]
	public class TunnellingPresetMobile : TunnellingPresetBase
	{
		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[SerializeField]
		private bool _drawSkybox;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		[SerializeField]
		private bool _overrideDrawSkybox;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		[SerializeField]
		private bool _drawBeforeTransparent;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool _overrideDrawBeforeTransparent;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[SerializeField]
		private bool _useMask;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[SerializeField]
		private bool _overrideUseMask;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD83FF4", Offset = "0xD83FF4")]
		private int _stencilReference;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _overrideStencilReference;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD84048", Offset = "0xD84048")]
		private int _stencilMask;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _overrideStencilMask;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8409C", Offset = "0xD8409C")]
		private int _stencilBias;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool _overrideStencilBias;

		[Token(Token = "0x1700019C")]
		public bool drawSkybox
		{
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x151C91C", Offset = "0x151C91C", VA = "0x151C91C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019D")]
		public bool overrideDrawSkybox
		{
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x151B3A4", Offset = "0x151B3A4", VA = "0x151B3A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019E")]
		public bool drawBeforeTransparent
		{
			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x151C924", Offset = "0x151C924", VA = "0x151C924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019F")]
		public bool overrideDrawBeforeTransparent
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x151C92C", Offset = "0x151C92C", VA = "0x151C92C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		public bool useMask
		{
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x151C934", Offset = "0x151C934", VA = "0x151C934")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		public bool overrideUseMask
		{
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x151C93C", Offset = "0x151C93C", VA = "0x151C93C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A2")]
		public int stencilReference
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0x151C944", Offset = "0x151C944", VA = "0x151C944")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A3")]
		public bool overrideStencilReference
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x151C94C", Offset = "0x151C94C", VA = "0x151C94C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		public int stencilMask
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x151C954", Offset = "0x151C954", VA = "0x151C954")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A5")]
		public bool overrideStencilMask
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x151C95C", Offset = "0x151C95C", VA = "0x151C95C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A6")]
		public int stencilBias
		{
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0x151C964", Offset = "0x151C964", VA = "0x151C964")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A7")]
		public bool overrideStencilBias
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x151C96C", Offset = "0x151C96C", VA = "0x151C96C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x151C974", Offset = "0x151C974", VA = "0x151C974")]
		public TunnellingPresetMobile()
		{
		}
	}
}
namespace Sigtrap.VrTunnellingPro.Examples
{
	[Token(Token = "0x200012F")]
	public class VRTP_ExampleMovement : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000475")]
		private struct Preset
		{
			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public KeyCode key;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] worldObjects;

			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TunnellingPreset postPreset;
		}

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _disableModes;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _rotSensitivity;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _movSensitivity;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Cubemap[] _skyboxes;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] _cages;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Preset[] _modePresets;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentMode;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _hasWarnedInput;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tunnelling _tunnelling;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CharacterController _char;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _currentSkybox;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentCage;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _speedCurrent;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _speedSlew;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _speedSmoothing;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _rotCurrent;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _rotSlew;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float _rotSmoothing;

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1514E70", Offset = "0x1514E70", VA = "0x1514E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x1514EE0", Offset = "0x1514EE0", VA = "0x1514EE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x15153F0", Offset = "0x15153F0", VA = "0x15153F0")]
		private void SetPreset(int i)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x1515738", Offset = "0x1515738", VA = "0x1515738")]
		public VRTP_ExampleMovement()
		{
		}
	}
}
namespace DigitalRuby.Tween
{
	[Token(Token = "0x2000130")]
	public class TweenDemo : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000476")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80ABC", Offset = "0xD80ABC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<ITween<Vector3>> <>9__3_1;

			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0x1583064", Offset = "0x1583064", VA = "0x1583064")]
			public <>c()
			{
			}

			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0x158306C", Offset = "0x158306C", VA = "0x158306C")]
			internal void <TweenMove>b__3_1(ITween<Vector3> t)
			{
			}
		}

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Circle;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light Light;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpriteRenderer spriteRenderer;

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x1582524", Offset = "0x1582524", VA = "0x1582524")]
		private void TweenMove()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x15828BC", Offset = "0x15828BC", VA = "0x15828BC")]
		private void TweenColor()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1582A44", Offset = "0x1582A44", VA = "0x1582A44")]
		private void TweenRotate()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1582B84", Offset = "0x1582B84", VA = "0x1582B84")]
		private void TweenReset()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x1582BEC", Offset = "0x1582BEC", VA = "0x1582BEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x1582C4C", Offset = "0x1582C4C", VA = "0x1582C4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1582CCC", Offset = "0x1582CCC", VA = "0x1582CCC")]
		public TweenDemo()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x1582CD4", Offset = "0x1582CD4", VA = "0x1582CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD925A4", Offset = "0xD925A4")]
		private void <TweenMove>b__3_0(ITween<Vector3> t)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1582DBC", Offset = "0x1582DBC", VA = "0x1582DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD925B4", Offset = "0xD925B4")]
		private void <TweenColor>b__4_0(ITween<Color> t)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x1582E88", Offset = "0x1582E88", VA = "0x1582E88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD925C4", Offset = "0xD925C4")]
		private void <TweenRotate>b__5_0(ITween<float> t)
		{
		}
	}
	[Token(Token = "0x2000131")]
	public enum TweenState
	{
		[Token(Token = "0x4000A2C")]
		Running,
		[Token(Token = "0x4000A2D")]
		Paused,
		[Token(Token = "0x4000A2E")]
		Stopped
	}
	[Token(Token = "0x2000132")]
	public enum TweenStopBehavior
	{
		[Token(Token = "0x4000A30")]
		DoNotModify,
		[Token(Token = "0x4000A31")]
		Complete
	}
	[Token(Token = "0x2000133")]
	public class TweenFactory : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject root;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<ITween> tweens;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static GameObject toDestroy;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static TweenStopBehavior AddKeyStopBehavior;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static bool ClearTweensOnLevelLoad;

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x15830D8", Offset = "0x15830D8", VA = "0x15830D8")]
		private static void EnsureCreated()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x15833E8", Offset = "0x15833E8", VA = "0x15833E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x158354C", Offset = "0x158354C", VA = "0x158354C")]
		private void SceneManagerSceneLoaded(Scene s, LoadSceneMode m)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x15835F8", Offset = "0x15835F8", VA = "0x15835F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x15815DC", Offset = "0x15815DC", VA = "0x15815DC")]
		public static FloatTween Tween(object key, float start, float end, float duration, Func<float, float> scaleFunc, Action<ITween<float>> progress, [Optional] Action<ITween<float>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x15817E8", Offset = "0x15817E8", VA = "0x15817E8")]
		public static Vector2Tween Tween(object key, Vector2 start, Vector2 end, float duration, Func<float, float> scaleFunc, Action<ITween<Vector2>> progress, [Optional] Action<ITween<Vector2>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x1581A28", Offset = "0x1581A28", VA = "0x1581A28")]
		public static Vector3Tween Tween(object key, Vector3 start, Vector3 end, float duration, Func<float, float> scaleFunc, Action<ITween<Vector3>> progress, [Optional] Action<ITween<Vector3>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1581CA0", Offset = "0x1581CA0", VA = "0x1581CA0")]
		public static Vector4Tween Tween(object key, Vector4 start, Vector4 end, float duration, Func<float, float> scaleFunc, Action<ITween<Vector4>> progress, [Optional] Action<ITween<Vector4>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x1581F30", Offset = "0x1581F30", VA = "0x1581F30")]
		public static ColorTween Tween(object key, Color start, Color end, float duration, Func<float, float> scaleFunc, Action<ITween<Color>> progress, [Optional] Action<ITween<Color>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x15821BC", Offset = "0x15821BC", VA = "0x15821BC")]
		public static QuaternionTween Tween(object key, Quaternion start, Quaternion end, float duration, Func<float, float> scaleFunc, Action<ITween<Quaternion>> progress, [Optional] Action<ITween<Quaternion>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x158382C", Offset = "0x158382C", VA = "0x158382C")]
		public static void AddTween(ITween tween)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x1583C08", Offset = "0x1583C08", VA = "0x1583C08")]
		public static bool RemoveTween(ITween tween, TweenStopBehavior stopBehavior)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x15839D8", Offset = "0x15839D8", VA = "0x15839D8")]
		public static bool RemoveTweenKey(object key, TweenStopBehavior stopBehavior)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x1583D0C", Offset = "0x1583D0C", VA = "0x1583D0C")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x1583D88", Offset = "0x1583D88", VA = "0x1583D88")]
		public TweenFactory()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public static class GameObjectTweenExtensions
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x15814F0", Offset = "0x15814F0", VA = "0x15814F0")]
		public static FloatTween Tween(this GameObject obj, object key, float start, float end, float duration, Func<float, float> scaleFunc, Action<ITween<float>> progress, [Optional] Action<ITween<float>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x15816E4", Offset = "0x15816E4", VA = "0x15816E4")]
		public static Vector2Tween Tween(this GameObject obj, object key, Vector2 start, Vector2 end, float duration, Func<float, float> scaleFunc, Action<ITween<Vector2>> progress, [Optional] Action<ITween<Vector2>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x158190C", Offset = "0x158190C", VA = "0x158190C")]
		public static Vector3Tween Tween(this GameObject obj, object key, Vector3 start, Vector3 end, float duration, Func<float, float> scaleFunc, Action<ITween<Vector3>> progress, [Optional] Action<ITween<Vector3>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1581B64", Offset = "0x1581B64", VA = "0x1581B64")]
		public static Vector4Tween Tween(this GameObject obj, object key, Vector4 start, Vector4 end, float duration, Func<float, float> scaleFunc, Action<ITween<Vector4>> progress, [Optional] Action<ITween<Vector4>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1581DF4", Offset = "0x1581DF4", VA = "0x1581DF4")]
		public static ColorTween Tween(this GameObject obj, object key, Color start, Color end, float duration, Func<float, float> scaleFunc, Action<ITween<Color>> progress, [Optional] Action<ITween<Color>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1582080", Offset = "0x1582080", VA = "0x1582080")]
		public static QuaternionTween Tween(this GameObject obj, object key, Quaternion start, Quaternion end, float duration, Func<float, float> scaleFunc, Action<ITween<Quaternion>> progress, [Optional] Action<ITween<Quaternion>> completion)
		{
			return null;
		}
	}
	[Token(Token = "0x2000135")]
	public interface ITween
	{
		[Token(Token = "0x170001A8")]
		object Key
		{
			[Token(Token = "0x6000B1F")]
			get;
		}

		[Token(Token = "0x170001A9")]
		TweenState State
		{
			[Token(Token = "0x6000B20")]
			get;
		}

		[Token(Token = "0x6000B21")]
		void Start();

		[Token(Token = "0x6000B22")]
		void Pause();

		[Token(Token = "0x6000B23")]
		void Resume();

		[Token(Token = "0x6000B24")]
		void Stop(TweenStopBehavior stopBehavior);

		[Token(Token = "0x6000B25")]
		bool Update(float elapsedTime);
	}
	[Token(Token = "0x2000136")]
	public interface ITween<T> : ITween where T : struct
	{
		[Token(Token = "0x170001AA")]
		T CurrentValue
		{
			[Token(Token = "0x6000B26")]
			get;
		}

		[Token(Token = "0x170001AB")]
		float CurrentProgress
		{
			[Token(Token = "0x6000B27")]
			get;
		}

		[Token(Token = "0x6000B28")]
		Tween<T> Setup(T start, T end, float duration, Func<float, float> scaleFunc, Action<ITween<T>> progress, [Optional] Action<ITween<T>> completion);
	}
	[Token(Token = "0x2000137")]
	public class Tween<T> : ITween<T>, ITween where T : struct
	{
		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<ITween<T>, T, T, float, T> lerpFunc;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float currentTime;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float duration;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<float, float> scaleFunc;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<ITween<T>> progressCallback;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<ITween<T>> completionCallback;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TweenState state;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T start;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T end;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T value;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ITween continueWith;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8416C", Offset = "0xD8416C")]
		private object <Key>k__BackingField;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8417C", Offset = "0xD8417C")]
		private float <Delay>k__BackingField;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8418C", Offset = "0xD8418C")]
		private GameObject <GameObject>k__BackingField;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8419C", Offset = "0xD8419C")]
		private Renderer <Renderer>k__BackingField;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD841AC", Offset = "0xD841AC")]
		private bool <ForceUpdate>k__BackingField;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD841BC", Offset = "0xD841BC")]
		private float <CurrentProgress>k__BackingField;

		[Token(Token = "0x170001AC")]
		public object Key
		{
			[Token(Token = "0x6000B29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92634", Offset = "0xD92634")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B2A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92644", Offset = "0xD92644")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public float CurrentTime
		{
			[Token(Token = "0x6000B2B")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AE")]
		public float Duration
		{
			[Token(Token = "0x6000B2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AF")]
		public float Delay
		{
			[Token(Token = "0x6000B2D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92654", Offset = "0xD92654")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B2E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92664", Offset = "0xD92664")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public TweenState State
		{
			[Token(Token = "0x6000B2F")]
			get
			{
				return default(TweenState);
			}
		}

		[Token(Token = "0x170001B1")]
		public T StartValue
		{
			[Token(Token = "0x6000B30")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170001B2")]
		public T EndValue
		{
			[Token(Token = "0x6000B31")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170001B3")]
		public T CurrentValue
		{
			[Token(Token = "0x6000B32")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170001B4")]
		public GameObject GameObject
		{
			[Token(Token = "0x6000B33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92674", Offset = "0xD92674")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92684", Offset = "0xD92684")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public Renderer Renderer
		{
			[Token(Token = "0x6000B35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92694", Offset = "0xD92694")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD926A4", Offset = "0xD926A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public bool ForceUpdate
		{
			[Token(Token = "0x6000B37")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD926B4", Offset = "0xD926B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD926C4", Offset = "0xD926C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public float CurrentProgress
		{
			[Token(Token = "0x6000B39")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD926D4", Offset = "0xD926D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B3A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD926E4", Offset = "0xD926E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B3B")]
		public Tween(Func<ITween<T>, T, T, float, T> lerpFunc)
		{
		}

		[Token(Token = "0x6000B3C")]
		public Tween<T> Setup(T start, T end, float duration, Func<float, float> scaleFunc, Action<ITween<T>> progress, [Optional] Action<ITween<T>> completion)
		{
			return null;
		}

		[Token(Token = "0x6000B3D")]
		public void Start()
		{
		}

		[Token(Token = "0x6000B3E")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000B3F")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000B40")]
		public void Stop(TweenStopBehavior stopBehavior)
		{
		}

		[Token(Token = "0x6000B41")]
		public bool Update(float elapsedTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B42")]
		public Tween<TNewTween> ContinueWith<TNewTween>(Tween<TNewTween> tween) where TNewTween : struct
		{
			return null;
		}

		[Token(Token = "0x6000B43")]
		private void UpdateValue()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class FloatTween : Tween<float>
	{
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Func<ITween<float>, float, float, float, float> LerpFunc;

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x15813E0", Offset = "0x15813E0", VA = "0x15813E0")]
		private static float LerpFloat(ITween<float> t, float start, float end, float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x15813F0", Offset = "0x15813F0", VA = "0x15813F0")]
		public FloatTween()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class Vector2Tween : Tween<Vector2>
	{
		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Func<ITween<Vector2>, Vector2, Vector2, float, Vector2> LerpFunc;

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x18A1558", Offset = "0x18A1558", VA = "0x18A1558")]
		private static Vector2 LerpVector2(ITween<Vector2> t, Vector2 start, Vector2 end, float progress)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x18A15F8", Offset = "0x18A15F8", VA = "0x18A15F8")]
		public Vector2Tween()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class Vector3Tween : Tween<Vector3>
	{
		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Func<ITween<Vector3>, Vector3, Vector3, float, Vector3> LerpFunc;

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x18A16F8", Offset = "0x18A16F8", VA = "0x18A16F8")]
		private static Vector3 LerpVector3(ITween<Vector3> t, Vector3 start, Vector3 end, float progress)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x18A17B0", Offset = "0x18A17B0", VA = "0x18A17B0")]
		public Vector3Tween()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class Vector4Tween : Tween<Vector4>
	{
		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Func<ITween<Vector4>, Vector4, Vector4, float, Vector4> LerpFunc;

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x18A18B0", Offset = "0x18A18B0", VA = "0x18A18B0")]
		private static Vector4 LerpVector4(ITween<Vector4> t, Vector4 start, Vector4 end, float progress)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x18A19C8", Offset = "0x18A19C8", VA = "0x18A19C8")]
		public Vector4Tween()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class ColorTween : Tween<Color>
	{
		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Func<ITween<Color>, Color, Color, float, Color> LerpFunc;

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x15812D0", Offset = "0x15812D0", VA = "0x15812D0")]
		private static Color LerpColor(ITween<Color> t, Color start, Color end, float progress)
		{
			return default(Color);
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x15812E0", Offset = "0x15812E0", VA = "0x15812E0")]
		public ColorTween()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class QuaternionTween : Tween<Quaternion>
	{
		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Func<ITween<Quaternion>, Quaternion, Quaternion, float, Quaternion> LerpFunc;

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x158230C", Offset = "0x158230C", VA = "0x158230C")]
		private static Quaternion LerpQuaternion(ITween<Quaternion> t, Quaternion start, Quaternion end, float progress)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x1582424", Offset = "0x1582424", VA = "0x1582424")]
		public QuaternionTween()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public static class TweenScaleFunctions
	{
		[Token(Token = "0x4000A4E")]
		private const float halfPi = (float)Math.PI / 2f;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Func<float, float> Linear;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Func<float, float> QuadraticEaseIn;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Func<float, float> QuadraticEaseOut;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Func<float, float> QuadraticEaseInOut;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Func<float, float> CubicEaseIn;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Func<float, float> CubicEaseOut;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Func<float, float> CubicEaseInOut;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly Func<float, float> QuarticEaseIn;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly Func<float, float> QuarticEaseOut;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly Func<float, float> QuarticEaseInOut;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly Func<float, float> QuinticEaseIn;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly Func<float, float> QuinticEaseOut;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly Func<float, float> QuinticEaseInOut;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly Func<float, float> SineEaseIn;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly Func<float, float> SineEaseOut;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly Func<float, float> SineEaseInOut;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x18A0934", Offset = "0x18A0934", VA = "0x18A0934")]
		private static float linear(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x18A0938", Offset = "0x18A0938", VA = "0x18A0938")]
		private static float quadraticEaseIn(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x18A0A1C", Offset = "0x18A0A1C", VA = "0x18A0A1C")]
		private static float quadraticEaseOut(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x18A0B24", Offset = "0x18A0B24", VA = "0x18A0B24")]
		private static float quadraticEaseInOut(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x18A0C78", Offset = "0x18A0C78", VA = "0x18A0C78")]
		private static float cubicEaseIn(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x18A0CE8", Offset = "0x18A0CE8", VA = "0x18A0CE8")]
		private static float cubicEaseOut(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x18A0D58", Offset = "0x18A0D58", VA = "0x18A0D58")]
		private static float cubicEaseInOut(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x18A0DC8", Offset = "0x18A0DC8", VA = "0x18A0DC8")]
		private static float quarticEaseIn(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x18A0E38", Offset = "0x18A0E38", VA = "0x18A0E38")]
		private static float quarticEaseOut(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x18A0EA8", Offset = "0x18A0EA8", VA = "0x18A0EA8")]
		private static float quarticEaseInOut(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x18A0F18", Offset = "0x18A0F18", VA = "0x18A0F18")]
		private static float quinticEaseIn(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x18A0F88", Offset = "0x18A0F88", VA = "0x18A0F88")]
		private static float quinticEaseOut(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x18A0FF8", Offset = "0x18A0FF8", VA = "0x18A0FF8")]
		private static float quinticEaseInOut(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x18A1068", Offset = "0x18A1068", VA = "0x18A1068")]
		private static float sineEaseIn(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x18A10F4", Offset = "0x18A10F4", VA = "0x18A10F4")]
		private static float sineEaseOut(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x18A1168", Offset = "0x18A1168", VA = "0x18A1168")]
		private static float sineEaseInOut(float progress)
		{
			return default(float);
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x18A09A8", Offset = "0x18A09A8", VA = "0x18A09A8")]
		private static float EaseInPower(float progress, int power)
		{
			return default(float);
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x18A0A8C", Offset = "0x18A0A8C", VA = "0x18A0A8C")]
		private static float EaseOutPower(float progress, int power)
		{
			return default(float);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x18A0B94", Offset = "0x18A0B94", VA = "0x18A0B94")]
		private static float EaseInOutPower(float progress, int power)
		{
			return default(float);
		}
	}
}
namespace Tayx.Graphy
{
	[Token(Token = "0x200013F")]
	public class GraphyDebugger : G_Singleton<GraphyDebugger>
	{
		[Token(Token = "0x2000477")]
		public enum DebugVariable
		{
			[Token(Token = "0x4001DCE")]
			Fps,
			[Token(Token = "0x4001DCF")]
			Fps_Min,
			[Token(Token = "0x4001DD0")]
			Fps_Max,
			[Token(Token = "0x4001DD1")]
			Fps_Avg,
			[Token(Token = "0x4001DD2")]
			Ram_Allocated,
			[Token(Token = "0x4001DD3")]
			Ram_Reserved,
			[Token(Token = "0x4001DD4")]
			Ram_Mono,
			[Token(Token = "0x4001DD5")]
			Audio_DB
		}

		[Token(Token = "0x2000478")]
		public enum DebugComparer
		{
			[Token(Token = "0x4001DD7")]
			Less_than,
			[Token(Token = "0x4001DD8")]
			Equals_or_less_than,
			[Token(Token = "0x4001DD9")]
			Equals,
			[Token(Token = "0x4001DDA")]
			Equals_or_greater_than,
			[Token(Token = "0x4001DDB")]
			Greater_than
		}

		[Token(Token = "0x2000479")]
		public enum ConditionEvaluation
		{
			[Token(Token = "0x4001DDD")]
			All_conditions_must_be_met,
			[Token(Token = "0x4001DDE")]
			Only_one_condition_has_to_be_met
		}

		[Token(Token = "0x200047A")]
		public enum MessageType
		{
			[Token(Token = "0x4001DE0")]
			Log,
			[Token(Token = "0x4001DE1")]
			Warning,
			[Token(Token = "0x4001DE2")]
			Error
		}

		[Serializable]
		[Token(Token = "0x200047B")]
		public struct DebugCondition
		{
			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D034", Offset = "0xD8D034")]
			public DebugVariable Variable;

			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D06C", Offset = "0xD8D06C")]
			public DebugComparer Comparer;

			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D0A4", Offset = "0xD8D0A4")]
			public float Value;
		}

		[Serializable]
		[Token(Token = "0x200047C")]
		public class DebugPacket
		{
			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D0DC", Offset = "0xD8D0DC")]
			public bool Active;

			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D114", Offset = "0xD8D114")]
			public int Id;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D14C", Offset = "0xD8D14C")]
			public bool ExecuteOnce;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D184", Offset = "0xD8D184")]
			public float InitSleepTime;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D1BC", Offset = "0xD8D1BC")]
			public float ExecuteSleepTime;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ConditionEvaluation ConditionEvaluation;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D1F4", Offset = "0xD8D1F4")]
			public List<DebugCondition> DebugConditions;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MessageType MessageType;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[Multiline]
			public string Message;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool TakeScreenshot;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string ScreenshotFileName;

			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D23C", Offset = "0xD8D23C")]
			public bool DebugBreak;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public UnityEvent UnityEvents;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<Action> Callbacks;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bool canBeChecked;

			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
			private bool executed;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float timePassed;

			[Token(Token = "0x170003D5")]
			public bool Check
			{
				[Token(Token = "0x6001FD0")]
				[Address(RVA = "0x193843C", Offset = "0x193843C", VA = "0x193843C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x1937AAC", Offset = "0x1937AAC", VA = "0x1937AAC")]
			public void Update()
			{
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x193834C", Offset = "0x193834C", VA = "0x193834C")]
			public void Executed()
			{
			}

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x1937290", Offset = "0x1937290", VA = "0x1937290")]
			public DebugPacket()
			{
			}
		}

		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80ACC", Offset = "0xD80ACC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int packetId;

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x1937680", Offset = "0x1937680", VA = "0x1937680")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x19383D0", Offset = "0x19383D0", VA = "0x19383D0")]
			internal bool <GetFirstDebugPacketWithId>b__0(DebugPacket x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80ADC", Offset = "0xD80ADC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int packetId;

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x193774C", Offset = "0x193774C", VA = "0x193774C")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x19383F4", Offset = "0x19383F4", VA = "0x19383F4")]
			internal bool <GetAllDebugPacketsWithId>b__0(DebugPacket x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80AEC", Offset = "0xD80AEC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int packetId;

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x19378C8", Offset = "0x19378C8", VA = "0x19378C8")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0x1938418", Offset = "0x1938418", VA = "0x1938418")]
			internal bool <RemoveAllDebugPacketsWithId>b__0(DebugPacket x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80AFC", Offset = "0xD80AFC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<DebugPacket> <>9__24_0;

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x19383BC", Offset = "0x19383BC", VA = "0x19383BC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0x19383C4", Offset = "0x19383C4", VA = "0x19383C4")]
			internal bool <CheckDebugPackets>b__24_0(DebugPacket packet)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<DebugPacket> m_debugPackets;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1936C0C", Offset = "0x1936C0C", VA = "0x1936C0C")]
		protected GraphyDebugger()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1936CA4", Offset = "0x1936CA4", VA = "0x1936CA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1936D2C", Offset = "0x1936D2C", VA = "0x1936D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x1937128", Offset = "0x1937128", VA = "0x1937128")]
		public void AddNewDebugPacket(DebugPacket newDebugPacket)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x193719C", Offset = "0x193719C", VA = "0x193719C")]
		public void AddNewDebugPacket(int newId, DebugCondition newDebugCondition, MessageType newMessageType, string newMessage, bool newDebugBreak, Action newCallback)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x1937364", Offset = "0x1937364", VA = "0x1937364")]
		public void AddNewDebugPacket(int newId, List<DebugCondition> newDebugConditions, MessageType newMessageType, string newMessage, bool newDebugBreak, Action newCallback)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1937430", Offset = "0x1937430", VA = "0x1937430")]
		public void AddNewDebugPacket(int newId, DebugCondition newDebugCondition, MessageType newMessageType, string newMessage, bool newDebugBreak, List<Action> newCallbacks)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x193750C", Offset = "0x193750C", VA = "0x193750C")]
		public void AddNewDebugPacket(int newId, List<DebugCondition> newDebugConditions, MessageType newMessageType, string newMessage, bool newDebugBreak, List<Action> newCallbacks)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x19375C0", Offset = "0x19375C0", VA = "0x19375C0")]
		public DebugPacket GetFirstDebugPacketWithId(int packetId)
		{
			return null;
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x1937688", Offset = "0x1937688", VA = "0x1937688")]
		public List<DebugPacket> GetAllDebugPacketsWithId(int packetId)
		{
			return null;
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x1937754", Offset = "0x1937754", VA = "0x1937754")]
		public void RemoveFirstDebugPacketWithId(int packetId)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x19377F4", Offset = "0x19377F4", VA = "0x19377F4")]
		public void RemoveAllDebugPacketsWithId(int packetId)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x19378D0", Offset = "0x19378D0", VA = "0x19378D0")]
		public void AddCallbackToFirstDebugPacketWithId(Action callback, int id)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x193796C", Offset = "0x193796C", VA = "0x193796C")]
		public void AddCallbackToAllDebugPacketWithId(Action callback, int id)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1936D30", Offset = "0x1936D30", VA = "0x1936D30")]
		private void CheckDebugPackets()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1937B14", Offset = "0x1937B14", VA = "0x1937B14")]
		private bool CheckIfConditionIsMet(DebugCondition debugCondition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1938120", Offset = "0x1938120", VA = "0x1938120")]
		private float GetRequestedValueFromDebugVariable(DebugVariable debugVariable)
		{
			return default(float);
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1937C54", Offset = "0x1937C54", VA = "0x1937C54")]
		private void ExecuteOperationsInDebugPacket(DebugPacket debugPacket)
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class GraphyManager : G_Singleton<GraphyManager>
	{
		[Token(Token = "0x2000481")]
		public enum Mode
		{
			[Token(Token = "0x4001DFD")]
			FULL,
			[Token(Token = "0x4001DFE")]
			LIGHT
		}

		[Token(Token = "0x2000482")]
		public enum ModuleType
		{
			[Token(Token = "0x4001E00")]
			FPS,
			[Token(Token = "0x4001E01")]
			RAM,
			[Token(Token = "0x4001E02")]
			AUDIO,
			[Token(Token = "0x4001E03")]
			ADVANCED
		}

		[Token(Token = "0x2000483")]
		public enum ModuleState
		{
			[Token(Token = "0x4001E05")]
			FULL,
			[Token(Token = "0x4001E06")]
			TEXT,
			[Token(Token = "0x4001E07")]
			BASIC,
			[Token(Token = "0x4001E08")]
			BACKGROUND,
			[Token(Token = "0x4001E09")]
			OFF
		}

		[Token(Token = "0x2000484")]
		public enum ModulePosition
		{
			[Token(Token = "0x4001E0B")]
			TOP_RIGHT,
			[Token(Token = "0x4001E0C")]
			TOP_LEFT,
			[Token(Token = "0x4001E0D")]
			BOTTOM_RIGHT,
			[Token(Token = "0x4001E0E")]
			BOTTOM_LEFT,
			[Token(Token = "0x4001E0F")]
			FREE
		}

		[Token(Token = "0x2000485")]
		public enum LookForAudioListener
		{
			[Token(Token = "0x4001E11")]
			ALWAYS,
			[Token(Token = "0x4001E12")]
			ON_SCENE_LOAD,
			[Token(Token = "0x4001E13")]
			NEVER
		}

		[Token(Token = "0x2000486")]
		public enum ModulePreset
		{
			[Token(Token = "0x4001E15")]
			FPS_BASIC,
			[Token(Token = "0x4001E16")]
			FPS_TEXT,
			[Token(Token = "0x4001E17")]
			FPS_FULL,
			[Token(Token = "0x4001E18")]
			FPS_TEXT_RAM_TEXT,
			[Token(Token = "0x4001E19")]
			FPS_FULL_RAM_TEXT,
			[Token(Token = "0x4001E1A")]
			FPS_FULL_RAM_FULL,
			[Token(Token = "0x4001E1B")]
			FPS_TEXT_RAM_TEXT_AUDIO_TEXT,
			[Token(Token = "0x4001E1C")]
			FPS_FULL_RAM_TEXT_AUDIO_TEXT,
			[Token(Token = "0x4001E1D")]
			FPS_FULL_RAM_FULL_AUDIO_TEXT,
			[Token(Token = "0x4001E1E")]
			FPS_FULL_RAM_FULL_AUDIO_FULL,
			[Token(Token = "0x4001E1F")]
			FPS_FULL_RAM_FULL_AUDIO_FULL_ADVANCED_FULL,
			[Token(Token = "0x4001E20")]
			FPS_BASIC_ADVANCED_FULL
		}

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Mode m_graphyMode;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_enableOnStartup;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool m_keepAlive;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[SerializeField]
		private bool m_background;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_backgroundColor;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_enableHotkeys;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private KeyCode m_toggleModeKeyCode;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_toggleModeCtrl;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool m_toggleModeAlt;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private KeyCode m_toggleActiveKeyCode;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_toggleActiveCtrl;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool m_toggleActiveAlt;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private ModulePosition m_graphModulePosition;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ModuleState m_fpsModuleState;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD842BC", Offset = "0xD842BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD842BC", Offset = "0xD842BC")]
		[SerializeField]
		private int m_timeToResetMinMaxFps;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_goodFpsColor;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int m_goodFpsThreshold;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Color m_cautionFpsColor;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private int m_cautionFpsThreshold;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color m_criticalFpsColor;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD84374", Offset = "0xD84374")]
		[SerializeField]
		private int m_fpsGraphResolution;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD843B8", Offset = "0xD843B8")]
		[SerializeField]
		private int m_fpsTextUpdateRate;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ModuleState m_ramModuleState;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Color m_allocatedRamColor;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private Color m_reservedRamColor;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Color m_monoRamColor;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8443C", Offset = "0xD8443C")]
		[SerializeField]
		private int m_ramGraphResolution;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD84480", Offset = "0xD84480")]
		[SerializeField]
		private int m_ramTextUpdateRate;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private ModuleState m_audioModuleState;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private LookForAudioListener m_findAudioListenerInCameraIfNull;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AudioListener m_audioListener;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Color m_audioGraphColor;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD84504", Offset = "0xD84504")]
		[SerializeField]
		private int m_audioGraphResolution;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD84548", Offset = "0xD84548")]
		[SerializeField]
		private int m_audioTextUpdateRate;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private FFTWindow m_FFTWindow;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8459C", Offset = "0xD8459C")]
		[SerializeField]
		private int m_spectrumSize;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private ModulePosition m_advancedModulePosition;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private ModuleState m_advancedModuleState;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool m_initialized;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool m_active;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		private bool m_focused;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private G_FpsManager m_fpsManager;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private G_RamManager m_ramManager;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private G_AudioManager m_audioManager;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private G_AdvancedData m_advancedData;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private ModulePreset m_modulePresetState;

		[Token(Token = "0x170001B8")]
		public Mode GraphyMode
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0x19386C4", Offset = "0x19386C4", VA = "0x19386C4")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x19317F4", Offset = "0x19317F4", VA = "0x19317F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public bool EnableOnStartup
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x1938720", Offset = "0x1938720", VA = "0x1938720")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BA")]
		public bool KeepAlive
		{
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x1938728", Offset = "0x1938728", VA = "0x1938728")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BB")]
		public bool Background
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x1938730", Offset = "0x1938730", VA = "0x1938730")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0x19315B8", Offset = "0x19315B8", VA = "0x19315B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public Color BackgroundColor
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0x1938738", Offset = "0x1938738", VA = "0x1938738")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0x193174C", Offset = "0x193174C", VA = "0x193174C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public ModulePosition GraphModulePosition
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0x1938744", Offset = "0x1938744", VA = "0x1938744")]
			get
			{
				return default(ModulePosition);
			}
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0x1931814", Offset = "0x1931814", VA = "0x1931814")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public ModuleState FpsModuleState
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x19389E4", Offset = "0x19389E4", VA = "0x19389E4")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x193187C", Offset = "0x193187C", VA = "0x193187C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public int TimeToResetMinMaxFps
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x19389EC", Offset = "0x19389EC", VA = "0x19389EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x1931EE4", Offset = "0x1931EE4", VA = "0x1931EE4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public Color GoodFPSColor
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x19389F4", Offset = "0x19389F4", VA = "0x19389F4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x1931B1C", Offset = "0x1931B1C", VA = "0x1931B1C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public Color CautionFPSColor
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0x1938A00", Offset = "0x1938A00", VA = "0x1938A00")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0x1931CCC", Offset = "0x1931CCC", VA = "0x1931CCC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public Color CriticalFPSColor
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0x1938A0C", Offset = "0x1938A0C", VA = "0x1938A0C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0x1931E7C", Offset = "0x1931E7C", VA = "0x1931E7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public int GoodFPSThreshold
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0x1938A18", Offset = "0x1938A18", VA = "0x1938A18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x19318F8", Offset = "0x19318F8", VA = "0x19318F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public int CautionFPSThreshold
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x1938A20", Offset = "0x1938A20", VA = "0x1938A20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x1931970", Offset = "0x1931970", VA = "0x1931970")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public int FpsGraphResolution
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x1938A28", Offset = "0x1938A28", VA = "0x1938A28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x1931F48", Offset = "0x1931F48", VA = "0x1931F48")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public int FpsTextUpdateRate
		{
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0x1938A30", Offset = "0x1938A30", VA = "0x1938A30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x1931FAC", Offset = "0x1931FAC", VA = "0x1931FAC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public float CurrentFPS
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x1938A38", Offset = "0x1938A38", VA = "0x1938A38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C8")]
		public float AverageFPS
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x1938A54", Offset = "0x1938A54", VA = "0x1938A54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C9")]
		public float MinFPS
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x1938A70", Offset = "0x1938A70", VA = "0x1938A70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CA")]
		public float MaxFPS
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x1938A8C", Offset = "0x1938A8C", VA = "0x1938A8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CB")]
		public ModuleState RamModuleState
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0x1938AA8", Offset = "0x1938AA8", VA = "0x1938AA8")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x1931FE4", Offset = "0x1931FE4", VA = "0x1931FE4")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public Color AllocatedRamColor
		{
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x1938C14", Offset = "0x1938C14", VA = "0x1938C14")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x1932344", Offset = "0x1932344", VA = "0x1932344")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public Color ReservedRamColor
		{
			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0x1938D68", Offset = "0x1938D68", VA = "0x1938D68")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0x1932194", Offset = "0x1932194", VA = "0x1932194")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public Color MonoRamColor
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0x1938D74", Offset = "0x1938D74", VA = "0x1938D74")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x19324F4", Offset = "0x19324F4", VA = "0x19324F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public int RamGraphResolution
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x1938D80", Offset = "0x1938D80", VA = "0x1938D80")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x193255C", Offset = "0x193255C", VA = "0x193255C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public int RamTextUpdateRate
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x1938D88", Offset = "0x1938D88", VA = "0x1938D88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x19325C0", Offset = "0x19325C0", VA = "0x19325C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public float AllocatedRam
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x1938D90", Offset = "0x1938D90", VA = "0x1938D90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D2")]
		public float ReservedRam
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x1938DAC", Offset = "0x1938DAC", VA = "0x1938DAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D3")]
		public float MonoRam
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x1938DC8", Offset = "0x1938DC8", VA = "0x1938DC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D4")]
		public ModuleState AudioModuleState
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x1938DE4", Offset = "0x1938DE4", VA = "0x1938DE4")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x19325F8", Offset = "0x19325F8", VA = "0x19325F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public AudioListener AudioListener
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x1938DEC", Offset = "0x1938DEC", VA = "0x1938DEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x1938DF4", Offset = "0x1938DF4", VA = "0x1938DF4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public LookForAudioListener FindAudioListenerInCameraIfNull
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x1938E18", Offset = "0x1938E18", VA = "0x1938E18")]
			get
			{
				return default(LookForAudioListener);
			}
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x1932800", Offset = "0x1932800", VA = "0x1932800")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public Color AudioGraphColor
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x1938E20", Offset = "0x1938E20", VA = "0x1938E20")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x19327AC", Offset = "0x19327AC", VA = "0x19327AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public int AudioGraphResolution
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x1938E2C", Offset = "0x1938E2C", VA = "0x1938E2C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x1932928", Offset = "0x1932928", VA = "0x1932928")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public int AudioTextUpdateRate
		{
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x1938E34", Offset = "0x1938E34", VA = "0x1938E34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x1932994", Offset = "0x1932994", VA = "0x1932994")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public FFTWindow FftWindow
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x1938E3C", Offset = "0x1938E3C", VA = "0x1938E3C")]
			get
			{
				return default(FFTWindow);
			}
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x1932850", Offset = "0x1932850", VA = "0x1932850")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public int SpectrumSize
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x1938E44", Offset = "0x1938E44", VA = "0x1938E44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x19328BC", Offset = "0x19328BC", VA = "0x19328BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public float[] Spectrum
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x1938E4C", Offset = "0x1938E4C", VA = "0x1938E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		public float MaxDB
		{
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0x1938E68", Offset = "0x1938E68", VA = "0x1938E68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DE")]
		public ModuleState AdvancedModuleState
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x1938E84", Offset = "0x1938E84", VA = "0x1938E84")]
			get
			{
				return default(ModuleState);
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x1932A18", Offset = "0x1932A18", VA = "0x1932A18")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public ModulePosition AdvancedModulePosition
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x1938E8C", Offset = "0x1938E8C", VA = "0x1938E8C")]
			get
			{
				return default(ModulePosition);
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x19329D0", Offset = "0x19329D0", VA = "0x19329D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1938444", Offset = "0x1938444", VA = "0x1938444")]
		protected GraphyManager()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1938E94", Offset = "0x1938E94", VA = "0x1938E94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x1939330", Offset = "0x1939330", VA = "0x1939330")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x19394D0", Offset = "0x19394D0", VA = "0x19394D0")]
		private void OnApplicationFocus(bool isFocused)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x1939540", Offset = "0x1939540", VA = "0x1939540")]
		public void SetModulePosition(ModuleType moduleType, ModulePosition modulePosition)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x19395CC", Offset = "0x19395CC", VA = "0x19395CC")]
		public void SetModuleMode(ModuleType moduleType, ModuleState moduleState)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x1939668", Offset = "0x1939668", VA = "0x1939668")]
		public void ToggleModes()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x1939750", Offset = "0x1939750", VA = "0x1939750")]
		public void SetPreset(ModulePreset modulePreset)
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1939998", Offset = "0x1939998", VA = "0x1939998")]
		public void ToggleActive()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x19399A8", Offset = "0x19399A8", VA = "0x19399A8")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1939A18", Offset = "0x1939A18", VA = "0x1939A18")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1938E98", Offset = "0x1938E98", VA = "0x1938E98")]
		private void Init()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x1939348", Offset = "0x1939348", VA = "0x1939348")]
		private void CheckForHotkeyPresses()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x1939BE0", Offset = "0x1939BE0", VA = "0x1939BE0")]
		private bool CheckFor1KeyPress(KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x1939B70", Offset = "0x1939B70", VA = "0x1939B70")]
		private bool CheckFor2KeyPress(KeyCode key1, KeyCode key2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1939AA0", Offset = "0x1939AA0", VA = "0x1939AA0")]
		private bool CheckFor3KeyPress(KeyCode key1, KeyCode key2, KeyCode key3)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x19386CC", Offset = "0x19386CC", VA = "0x19386CC")]
		private void UpdateAllParameters()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x19394EC", Offset = "0x19394EC", VA = "0x19394EC")]
		private void RefreshAllParameters()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class G_GraphShader
	{
		[Token(Token = "0x4000A94")]
		public const int ArrayMaxSizeFull = 512;

		[Token(Token = "0x4000A95")]
		public const int ArrayMaxSizeLight = 128;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ArrayMaxSize;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Array;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image Image;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Name;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Name_Length;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Average;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int averagePropertyId;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float GoodThreshold;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float CautionThreshold;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int goodThresholdPropertyId;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int cautionThresholdPropertyId;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color GoodColor;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color CautionColor;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color CriticalColor;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int goodColorPropertyId;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int cautionColorPropertyId;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int criticalColorPropertyId;

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1934794", Offset = "0x1934794", VA = "0x1934794")]
		public void InitializeShader()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1934DB0", Offset = "0x1934DB0", VA = "0x1934DB0")]
		public void UpdateArray()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1934B20", Offset = "0x1934B20", VA = "0x1934B20")]
		public void UpdateAverage()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1934B68", Offset = "0x1934B68", VA = "0x1934B68")]
		public void UpdateThresholds()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1934D04", Offset = "0x1934D04", VA = "0x1934D04")]
		public void UpdateColors()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1934AD8", Offset = "0x1934AD8", VA = "0x1934AD8")]
		public void UpdatePoints()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1934E00", Offset = "0x1934E00", VA = "0x1934E00")]
		public G_GraphShader()
		{
		}
	}
}
namespace Tayx.Graphy.Utils
{
	[Token(Token = "0x2000142")]
	public static class G_ExtensionMethods
	{
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1935820", Offset = "0x1935820", VA = "0x1935820")]
		public static List<GameObject> SetAllActive(this List<GameObject> gameObjects, bool active)
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1935978", Offset = "0x1935978", VA = "0x1935978")]
		public static List<Image> SetOneActive(this List<Image> images, int active)
		{
			return null;
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1935A2C", Offset = "0x1935A2C", VA = "0x1935A2C")]
		public static List<Image> SetAllActive(this List<Image> images, bool active)
		{
			return null;
		}
	}
	[Token(Token = "0x2000143")]
	public class G_Singleton<T> : UnityEngine.MonoBehaviour where T : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _applicationIsQuitting;

		[Token(Token = "0x170001E0")]
		public static T Instance
		{
			[Token(Token = "0x6000BDD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BDE")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BDF")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BE0")]
		public G_Singleton()
		{
		}
	}
}
namespace Tayx.Graphy.Utils.NumString
{
	[Token(Token = "0x2000144")]
	public static class G_FloatString
	{
		[Token(Token = "0x4000AAA")]
		private const string floatFormat = "0.0";

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float decimalMultiplier;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] negativeBuffer;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] positiveBuffer;

		[Token(Token = "0x170001E1")]
		public static bool Inited
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x1930278", Offset = "0x1930278", VA = "0x1930278")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E2")]
		public static float MinValue
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x1930328", Offset = "0x1930328", VA = "0x1930328")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E3")]
		public static float MaxValue
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x19303A8", Offset = "0x19303A8", VA = "0x19303A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1930420", Offset = "0x1930420", VA = "0x1930420")]
		public static void Init(float minNegativeValue, float maxPositiveValue, int decimals = 1)
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x19300E8", Offset = "0x19300E8", VA = "0x19300E8")]
		public static string ToStringNonAlloc(this float value)
		{
			return null;
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x19365C4", Offset = "0x19365C4", VA = "0x19365C4")]
		public static string ToStringNonAlloc(this float value, string format)
		{
			return null;
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x193674C", Offset = "0x193674C", VA = "0x193674C")]
		public static int ToInt(this float f)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x193B07C", Offset = "0x193B07C", VA = "0x193B07C")]
		public static float ToFloat(this int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x193AFA4", Offset = "0x193AFA4", VA = "0x193AFA4")]
		private static int Pow(int f, int p)
		{
			return default(int);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x193AFC0", Offset = "0x193AFC0", VA = "0x193AFC0")]
		private static int ToIndex(this float f)
		{
			return default(int);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x193AF30", Offset = "0x193AF30", VA = "0x193AF30")]
		private static float FromIndex(this int i)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000145")]
	public static class G_IntString
	{
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] negativeBuffer;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] positiveBuffer;

		[Token(Token = "0x170001E4")]
		public static bool Inited
		{
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x19367EC", Offset = "0x19367EC", VA = "0x19367EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E5")]
		public static int MinValue
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x193689C", Offset = "0x193689C", VA = "0x193689C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E6")]
		public static int MaxValue
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x1936918", Offset = "0x1936918", VA = "0x1936918")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x1936990", Offset = "0x1936990", VA = "0x1936990")]
		public static void Init(int minNegativeValue, int maxPositiveValue)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x1936480", Offset = "0x1936480", VA = "0x1936480")]
		public static string ToStringNonAlloc(this int value)
		{
			return null;
		}
	}
}
namespace Tayx.Graphy.UI
{
	[Token(Token = "0x2000146")]
	public interface IModifiableState
	{
		[Token(Token = "0x6000BF4")]
		void SetState(GraphyManager.ModuleState newState, bool silentUpdate);
	}
	[Token(Token = "0x2000147")]
	public interface IMovable
	{
		[Token(Token = "0x6000BF5")]
		void SetPosition(GraphyManager.ModulePosition newModulePosition);
	}
}
namespace Tayx.Graphy.Ram
{
	[Token(Token = "0x2000148")]
	public class G_RamGraph : G_Graph
	{
		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_imageAllocated;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_imageReserved;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_imageMono;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader ShaderFull;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Shader ShaderLight;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_resolution;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private G_GraphShader m_shaderGraphAllocated;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private G_GraphShader m_shaderGraphReserved;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private G_GraphShader m_shaderGraphMono;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] m_allocatedArray;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] m_reservedArray;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] m_monoArray;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_highestMemory;

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1939D2C", Offset = "0x1939D2C", VA = "0x1939D2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1939E3C", Offset = "0x1939E3C", VA = "0x1939E3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1939E48", Offset = "0x1939E48", VA = "0x1939E48")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x193A0E4", Offset = "0x193A0E4", VA = "0x193A0E4", Slot = "4")]
		protected override void UpdateGraph()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x193A37C", Offset = "0x193A37C", VA = "0x193A37C", Slot = "5")]
		protected override void CreatePoints()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1939D30", Offset = "0x1939D30", VA = "0x1939D30")]
		private void Init()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x193A6AC", Offset = "0x193A6AC", VA = "0x193A6AC")]
		public G_RamGraph()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class G_RamManager : UnityEngine.MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ramGraphGameObject;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private G_RamGraph m_ramGraph;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_RamText m_ramText;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> m_childrenGameObjects;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x193A6BC", Offset = "0x193A6BC", VA = "0x193A6BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x193AA30", Offset = "0x193AA30", VA = "0x193AA30")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x193874C", Offset = "0x193874C", VA = "0x193874C", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1938AB0", Offset = "0x1938AB0", VA = "0x1938AB0", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1939A94", Offset = "0x1939A94", VA = "0x1939A94")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1938C20", Offset = "0x1938C20", VA = "0x1938C20")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1939BEC", Offset = "0x1939BEC", VA = "0x1939BEC")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x193A6C0", Offset = "0x193A6C0", VA = "0x193A6C0")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x193AA34", Offset = "0x193AA34", VA = "0x193AA34")]
		private void SetGraphActive(bool active)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x193AB28", Offset = "0x193AB28", VA = "0x193AB28")]
		public G_RamManager()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class G_RamMonitor : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_allocatedRam;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_reservedRam;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_monoRam;

		[Token(Token = "0x170001E7")]
		public float AllocatedRam
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x193ABC0", Offset = "0x193ABC0", VA = "0x193ABC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E8")]
		public float ReservedRam
		{
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x193ABC8", Offset = "0x193ABC8", VA = "0x193ABC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E9")]
		public float MonoRam
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x193ABD0", Offset = "0x193ABD0", VA = "0x193ABD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x193ABD8", Offset = "0x193ABD8", VA = "0x193ABD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x193AC40", Offset = "0x193AC40", VA = "0x193AC40")]
		public G_RamMonitor()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class G_RamText : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_allocatedSystemMemorySizeText;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_reservedSystemMemorySizeText;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_monoSystemMemorySizeText;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_RamMonitor m_ramMonitor;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_updateRate;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_deltaTime;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly string m_memoryStringFormat;

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x193AC48", Offset = "0x193AC48", VA = "0x193AC48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x193AD8C", Offset = "0x193AD8C", VA = "0x193AD8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x193AA7C", Offset = "0x193AA7C", VA = "0x193AA7C")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x193AC4C", Offset = "0x193AC4C", VA = "0x193AC4C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x193AED0", Offset = "0x193AED0", VA = "0x193AED0")]
		public G_RamText()
		{
		}
	}
}
namespace Tayx.Graphy.Graph
{
	[Token(Token = "0x200014C")]
	public abstract class G_Graph : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6000C11")]
		protected abstract void UpdateGraph();

		[Token(Token = "0x6000C12")]
		protected abstract void CreatePoints();

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1934EB0", Offset = "0x1934EB0", VA = "0x1934EB0")]
		protected G_Graph()
		{
		}
	}
}
namespace Tayx.Graphy.Fps
{
	[Token(Token = "0x200014D")]
	public class G_FpsGraph : G_Graph
	{
		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_imageGraph;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader ShaderFull;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader ShaderLight;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_resolution;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_GraphShader m_shaderGraph;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] m_fpsArray;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_highestFps;

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x19345A8", Offset = "0x19345A8", VA = "0x19345A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1934664", Offset = "0x1934664", VA = "0x1934664")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1934670", Offset = "0x1934670", VA = "0x1934670")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x19348C0", Offset = "0x19348C0", VA = "0x19348C0", Slot = "4")]
		protected override void UpdateGraph()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x1934BDC", Offset = "0x1934BDC", VA = "0x1934BDC", Slot = "5")]
		protected override void CreatePoints()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x19345AC", Offset = "0x19345AC", VA = "0x19345AC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1934EA0", Offset = "0x1934EA0", VA = "0x1934EA0")]
		public G_FpsGraph()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class G_FpsManager : UnityEngine.MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_fpsGraphGameObject;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GameObject> m_nonBasicTextGameObjects;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_FpsGraph m_fpsGraph;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_FpsText m_fpsText;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> m_childrenGameObjects;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1934EB8", Offset = "0x1934EB8", VA = "0x1934EB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1935244", Offset = "0x1935244", VA = "0x1935244")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x19353C4", Offset = "0x19353C4", VA = "0x19353C4", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x193565C", Offset = "0x193565C", VA = "0x193565C", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x1935B54", Offset = "0x1935B54", VA = "0x1935B54")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1935248", Offset = "0x1935248", VA = "0x1935248")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x1935BA0", Offset = "0x1935BA0", VA = "0x1935BA0")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x1934EBC", Offset = "0x1934EBC", VA = "0x1934EBC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1935930", Offset = "0x1935930", VA = "0x1935930")]
		private void SetGraphActive(bool active)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x1935D04", Offset = "0x1935D04", VA = "0x1935D04")]
		public G_FpsManager()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class G_FpsMonitor : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_averageSamples;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_currentFps;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_avgFps;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_minFps;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_maxFps;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_averageFpsSamples;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_avgFpsSamplesOffset;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_indexMask;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_avgFpsSamplesCapacity;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_avgFpsSamplesCount;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_timeToResetMinMaxFps;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_timeToResetMinFpsPassed;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_timeToResetMaxFpsPassed;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float unscaledDeltaTime;

		[Token(Token = "0x170001EA")]
		public float CurrentFPS
		{
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0x1935DBC", Offset = "0x1935DBC", VA = "0x1935DBC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EB")]
		public float AverageFPS
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0x1935DC4", Offset = "0x1935DC4", VA = "0x1935DC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EC")]
		public float MinFPS
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x1935DCC", Offset = "0x1935DCC", VA = "0x1935DCC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001ED")]
		public float MaxFPS
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x1935DD4", Offset = "0x1935DD4", VA = "0x1935DD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x1935DDC", Offset = "0x1935DDC", VA = "0x1935DDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1935E70", Offset = "0x1935E70", VA = "0x1935E70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x1935B60", Offset = "0x1935B60", VA = "0x1935B60")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1935DE0", Offset = "0x1935DE0", VA = "0x1935DE0")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1935FE0", Offset = "0x1935FE0", VA = "0x1935FE0")]
		private void ResizeSamplesBuffer(int size)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1936080", Offset = "0x1936080", VA = "0x1936080")]
		private int ToBufferIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1936090", Offset = "0x1936090", VA = "0x1936090")]
		public G_FpsMonitor()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class G_FpsText : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_fpsText;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_msText;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_avgFpsText;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_minFpsText;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_maxFpsText;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_FpsMonitor m_fpsMonitor;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_updateRate;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_frameCount;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_deltaTime;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_fps;

		[Token(Token = "0x4000B01")]
		private const int m_minFps = 0;

		[Token(Token = "0x4000B02")]
		private const int m_maxFps = 10000;

		[Token(Token = "0x4000B03")]
		private const string m_msStringFormat = "0.0";

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x19360A8", Offset = "0x19360A8", VA = "0x19360A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x19361E0", Offset = "0x19361E0", VA = "0x19361E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x1935B80", Offset = "0x1935B80", VA = "0x1935B80")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x193676C", Offset = "0x193676C", VA = "0x193676C")]
		private void SetFpsRelatedTextColor(Text text, float fps)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x19360AC", Offset = "0x19360AC", VA = "0x19360AC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x1936BFC", Offset = "0x1936BFC", VA = "0x1936BFC")]
		public G_FpsText()
		{
		}
	}
}
namespace Tayx.Graphy.Audio
{
	[Token(Token = "0x2000151")]
	public class G_AudioGraph : G_Graph
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_imageGraph;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_imageGraphHighestValues;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader ShaderFull;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader ShaderLight;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_resolution;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private G_GraphShader m_shaderGraph;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private G_GraphShader m_shaderGraphHighestValues;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] m_graphArray;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] m_graphArrayHighestValue;

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x151FA60", Offset = "0x151FA60", VA = "0x151FA60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x151FB4C", Offset = "0x151FB4C", VA = "0x151FB4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x151FC04", Offset = "0x151FC04", VA = "0x151FC04")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x151FDEC", Offset = "0x151FDEC", VA = "0x151FDEC", Slot = "4")]
		protected override void UpdateGraph()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x15203A4", Offset = "0x15203A4", VA = "0x15203A4", Slot = "5")]
		protected override void CreatePoints()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x151FA64", Offset = "0x151FA64", VA = "0x151FA64")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1520610", Offset = "0x1520610", VA = "0x1520610")]
		public G_AudioGraph()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class G_AudioManager : UnityEngine.MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_audioGraphGameObject;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_audioDbText;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private G_AudioGraph m_audioGraph;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private G_AudioText m_audioText;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> m_childrenGameObjects;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1520620", Offset = "0x1520620", VA = "0x1520620")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x15209AC", Offset = "0x15209AC", VA = "0x15209AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1520B08", Offset = "0x1520B08", VA = "0x1520B08", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x1520DC8", Offset = "0x1520DC8", VA = "0x1520DC8", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1520F88", Offset = "0x1520F88", VA = "0x1520F88")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x15209B0", Offset = "0x15209B0", VA = "0x15209B0")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1521070", Offset = "0x1521070", VA = "0x1521070")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1520624", Offset = "0x1520624", VA = "0x1520624")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1520F40", Offset = "0x1520F40", VA = "0x1520F40")]
		private void SetGraphActive(bool active)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x15211C0", Offset = "0x15211C0", VA = "0x15211C0")]
		public G_AudioManager()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class G_AudioMonitor : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000B1A")]
		private const float m_refValue = 1f;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioListener m_audioListener;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GraphyManager.LookForAudioListener m_findAudioListenerInCameraIfNull;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private FFTWindow m_FFTWindow;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_spectrumSize;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_spectrum;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] m_spectrumHighestValues;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_maxDB;

		[Token(Token = "0x170001EE")]
		public float[] Spectrum
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x1521258", Offset = "0x1521258", VA = "0x1521258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public float[] SpectrumHighestValues
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x1521260", Offset = "0x1521260", VA = "0x1521260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		public float MaxDB
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x1521268", Offset = "0x1521268", VA = "0x1521268")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F1")]
		public bool SpectrumDataAvailable
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x151FB94", Offset = "0x151FB94", VA = "0x151FB94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1521270", Offset = "0x1521270", VA = "0x1521270")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x152134C", Offset = "0x152134C", VA = "0x152134C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x1521654", Offset = "0x1521654", VA = "0x1521654")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1520F94", Offset = "0x1520F94", VA = "0x1520F94")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1520308", Offset = "0x1520308", VA = "0x1520308")]
		public float lin2dB(float linear)
		{
			return default(float);
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1520390", Offset = "0x1520390", VA = "0x1520390")]
		public float dBNormalized(float db)
		{
			return default(float);
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x15215B0", Offset = "0x15215B0", VA = "0x15215B0")]
		private AudioListener FindAudioListener()
		{
			return null;
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x15216F0", Offset = "0x15216F0", VA = "0x15216F0")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1521274", Offset = "0x1521274", VA = "0x1521274")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1521720", Offset = "0x1521720", VA = "0x1521720")]
		public G_AudioMonitor()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class G_AudioText : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_DBText;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private G_AudioMonitor m_audioMonitor;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_updateRate;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_deltaTimeOffset;

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x192FE70", Offset = "0x192FE70", VA = "0x192FE70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x192FFC0", Offset = "0x192FFC0", VA = "0x192FFC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1930258", Offset = "0x1930258", VA = "0x1930258")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x192FE74", Offset = "0x192FE74", VA = "0x192FE74")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1930728", Offset = "0x1930728", VA = "0x1930728")]
		public G_AudioText()
		{
		}
	}
}
namespace Tayx.Graphy.Advanced
{
	[Token(Token = "0x2000155")]
	public class G_AdvancedData : UnityEngine.MonoBehaviour, IMovable, IModifiableState
	{
		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Image> m_backgroundImages;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_graphicsDeviceVersionText;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_processorTypeText;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_operatingSystemText;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_systemMemoryText;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text m_graphicsDeviceNameText;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text m_graphicsMemorySizeText;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text m_screenResolutionText;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text m_gameWindowResolutionText;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD84878", Offset = "0xD84878")]
		[SerializeField]
		private float m_updateRate;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_deltaTime;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private StringBuilder m_sb;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GraphyManager.ModuleState m_previousModuleState;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private GraphyManager.ModuleState m_currentModuleState;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly string[] m_windowStrings;

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x151E0A8", Offset = "0x151E0A8", VA = "0x151E0A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x151ECA8", Offset = "0x151ECA8", VA = "0x151ECA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x151EF6C", Offset = "0x151EF6C", VA = "0x151EF6C", Slot = "4")]
		public void SetPosition(GraphyManager.ModulePosition newModulePosition)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x151F564", Offset = "0x151F564", VA = "0x151F564", Slot = "5")]
		public void SetState(GraphyManager.ModuleState state, bool silentUpdate = false)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x151F5E4", Offset = "0x151F5E4", VA = "0x151F5E4")]
		public void RestorePreviousState()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x151F5F0", Offset = "0x151F5F0", VA = "0x151F5F0")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x151F734", Offset = "0x151F734", VA = "0x151F734")]
		public void RefreshParameters()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x151E0AC", Offset = "0x151E0AC", VA = "0x151E0AC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x151F870", Offset = "0x151F870", VA = "0x151F870")]
		public G_AdvancedData()
		{
		}
	}
}
namespace Tayx.Graphy.CustomizationScene
{
	[Token(Token = "0x2000156")]
	public class G_CUIColorPicker : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80B0C", Offset = "0xD80B0C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D satvalTex;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color[] satvalColors;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float Hue;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color[] hueColors;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action resetSatValTexture;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float Saturation;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float Value;

			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject result;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public G_CUIColorPicker <>4__this;

			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject hueGO;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action dragH;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public GameObject satvalGO;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Action dragSV;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Vector2 hueSz;

			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Action applyHue;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Action applySaturationValue;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public GameObject hueKnob;

			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Action idle;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Vector2 satvalSz;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public GameObject satvalKnob;

			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0x1933980", Offset = "0x1933980", VA = "0x1933980")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0x1933CEC", Offset = "0x1933CEC", VA = "0x1933CEC")]
			internal void <Setup>b__0()
			{
			}

			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0x1933D8C", Offset = "0x1933D8C", VA = "0x1933D8C")]
			internal void <Setup>b__1()
			{
			}

			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0x1933EE0", Offset = "0x1933EE0", VA = "0x1933EE0")]
			internal void <Setup>b__2()
			{
			}

			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0x19341EC", Offset = "0x19341EC", VA = "0x19341EC")]
			internal void <Setup>b__3()
			{
			}

			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0x1934260", Offset = "0x1934260", VA = "0x1934260")]
			internal void <Setup>b__4()
			{
			}

			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0x19343A0", Offset = "0x19343A0", VA = "0x19343A0")]
			internal void <Setup>b__5()
			{
			}
		}

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider alphaSlider;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image alphaSliderBGImage;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color _color;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<Color> _onValueChange;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action _update;

		[Token(Token = "0x170001F2")]
		public Color Color
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x1932E08", Offset = "0x1932E08", VA = "0x1932E08")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x1931698", Offset = "0x1931698", VA = "0x1931698")]
			set
			{
			}
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x19334F4", Offset = "0x19334F4", VA = "0x19334F4")]
		public void SetOnValueChangeCallback(Action<Color> onValueChange)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x19334FC", Offset = "0x19334FC", VA = "0x19334FC")]
		private static void RGBToHSV(Color color, out float h, out float s, out float v)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x19336C4", Offset = "0x19336C4", VA = "0x19336C4")]
		private static bool GetLocalMouse(GameObject go, out Vector2 result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x19338A4", Offset = "0x19338A4", VA = "0x19338A4")]
		private static Vector2 GetWidgetSize(GameObject go)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1933940", Offset = "0x1933940", VA = "0x1933940")]
		private GameObject GO(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1932E14", Offset = "0x1932E14", VA = "0x1932E14")]
		private void Setup(Color inputColor)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1933988", Offset = "0x1933988", VA = "0x1933988")]
		public void SetRandomColor()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1933ACC", Offset = "0x1933ACC", VA = "0x1933ACC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1933B1C", Offset = "0x1933B1C", VA = "0x1933B1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1933BC0", Offset = "0x1933BC0", VA = "0x1933BC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1933BD4", Offset = "0x1933BD4", VA = "0x1933BD4")]
		public G_CUIColorPicker()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1933C30", Offset = "0x1933C30", VA = "0x1933C30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92794", Offset = "0xD92794")]
		private void <Start>b__16_0(float value)
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class CustomizeGraphy : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD848DC", Offset = "0xD848DC")]
		[SerializeField]
		private G_CUIColorPicker m_colorPicker;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Toggle m_backgroundToggle;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dropdown m_graphyModeDropdown;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button m_backgroundColorButton;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Dropdown m_graphModulePositionDropdown;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84968", Offset = "0xD84968")]
		[SerializeField]
		private Dropdown m_fpsModuleStateDropdown;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private InputField m_goodInputField;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InputField m_cautionInputField;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button m_goodColorButton;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button m_cautionColorButton;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button m_criticalColorButton;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Slider m_timeToResetMinMaxSlider;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Slider m_fpsGraphResolutionSlider;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Slider m_fpsTextUpdateRateSlider;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84A34", Offset = "0xD84A34")]
		[SerializeField]
		private Dropdown m_ramModuleStateDropdown;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button m_reservedColorButton;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button m_allocatedColorButton;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Button m_monoColorButton;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Slider m_ramGraphResolutionSlider;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Slider m_ramTextUpdateRateSlider;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84AD0", Offset = "0xD84AD0")]
		[SerializeField]
		private Dropdown m_audioModuleStateDropdown;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Button m_audioGraphColorButton;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Dropdown m_findAudioListenerDropdown;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Dropdown m_fttWindowDropdown;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Slider m_spectrumSizeSlider;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Slider m_audioGraphResolutionSlider;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Slider m_audioTextUpdateRateSlider;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84B7C", Offset = "0xD84B7C")]
		[SerializeField]
		private Dropdown m_advancedModulePositionDropdown;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Toggle m_advancedModuleToggle;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84BD8", Offset = "0xD84BD8")]
		[SerializeField]
		private Button m_musicButton;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Button m_sfxButton;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Slider m_musicVolumeSlider;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Slider m_sfxVolumeSlider;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private AudioSource m_musicAudioSource;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AudioSource m_sfxAudioSource;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private List<AudioClip> m_sfxAudioClips;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GraphyManager m_graphyManager;

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1930738", Offset = "0x1930738", VA = "0x1930738")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x19307B0", Offset = "0x19307B0", VA = "0x19307B0")]
		private void SetupCallbacks()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1931410", Offset = "0x1931410", VA = "0x1931410")]
		private void ToggleMusic()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1931468", Offset = "0x1931468", VA = "0x1931468")]
		private void PlayRandomSFX()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1931528", Offset = "0x1931528", VA = "0x1931528")]
		public CustomizeGraphy()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1931598", Offset = "0x1931598", VA = "0x1931598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD927A4", Offset = "0xD927A4")]
		private void <SetupCallbacks>b__38_0(bool value)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x19315C4", Offset = "0x19315C4", VA = "0x19315C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD927B4", Offset = "0xD927B4")]
		private void <SetupCallbacks>b__38_1()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x193169C", Offset = "0x193169C", VA = "0x193169C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD927C4", Offset = "0xD927C4")]
		private void <SetupCallbacks>b__38_30(Color color)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1931758", Offset = "0x1931758", VA = "0x1931758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD927D4", Offset = "0xD927D4")]
		private void <SetupCallbacks>b__38_2(int value)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x19317FC", Offset = "0x19317FC", VA = "0x19317FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD927E4", Offset = "0xD927E4")]
		private void <SetupCallbacks>b__38_3(int value)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1931864", Offset = "0x1931864", VA = "0x1931864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD927F4", Offset = "0xD927F4")]
		private void <SetupCallbacks>b__38_4(int value)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x19318A0", Offset = "0x19318A0", VA = "0x19318A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92804", Offset = "0xD92804")]
		private void <SetupCallbacks>b__38_5(string value)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1931918", Offset = "0x1931918", VA = "0x1931918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92814", Offset = "0xD92814")]
		private void <SetupCallbacks>b__38_6(string value)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1931990", Offset = "0x1931990", VA = "0x1931990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92824", Offset = "0xD92824")]
		private void <SetupCallbacks>b__38_7()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1931A64", Offset = "0x1931A64", VA = "0x1931A64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92834", Offset = "0xD92834")]
		private void <SetupCallbacks>b__38_31(Color color)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1931B40", Offset = "0x1931B40", VA = "0x1931B40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92844", Offset = "0xD92844")]
		private void <SetupCallbacks>b__38_8()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x1931C14", Offset = "0x1931C14", VA = "0x1931C14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92854", Offset = "0xD92854")]
		private void <SetupCallbacks>b__38_32(Color color)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1931CF0", Offset = "0x1931CF0", VA = "0x1931CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92864", Offset = "0xD92864")]
		private void <SetupCallbacks>b__38_9()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1931DC4", Offset = "0x1931DC4", VA = "0x1931DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92874", Offset = "0xD92874")]
		private void <SetupCallbacks>b__38_33(Color color)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1931EA0", Offset = "0x1931EA0", VA = "0x1931EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92884", Offset = "0xD92884")]
		private void <SetupCallbacks>b__38_10(float value)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1931F04", Offset = "0x1931F04", VA = "0x1931F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92894", Offset = "0xD92894")]
		private void <SetupCallbacks>b__38_11(float value)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1931F68", Offset = "0x1931F68", VA = "0x1931F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD928A4", Offset = "0xD928A4")]
		private void <SetupCallbacks>b__38_12(float value)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1931FCC", Offset = "0x1931FCC", VA = "0x1931FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD928B4", Offset = "0xD928B4")]
		private void <SetupCallbacks>b__38_13(int value)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1932008", Offset = "0x1932008", VA = "0x1932008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD928C4", Offset = "0xD928C4")]
		private void <SetupCallbacks>b__38_14()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x19320DC", Offset = "0x19320DC", VA = "0x19320DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD928D4", Offset = "0xD928D4")]
		private void <SetupCallbacks>b__38_34(Color color)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x19321B8", Offset = "0x19321B8", VA = "0x19321B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD928E4", Offset = "0xD928E4")]
		private void <SetupCallbacks>b__38_15()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x193228C", Offset = "0x193228C", VA = "0x193228C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD928F4", Offset = "0xD928F4")]
		private void <SetupCallbacks>b__38_35(Color color)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1932368", Offset = "0x1932368", VA = "0x1932368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92904", Offset = "0xD92904")]
		private void <SetupCallbacks>b__38_16()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x193243C", Offset = "0x193243C", VA = "0x193243C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92914", Offset = "0xD92914")]
		private void <SetupCallbacks>b__38_36(Color color)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1932518", Offset = "0x1932518", VA = "0x1932518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92924", Offset = "0xD92924")]
		private void <SetupCallbacks>b__38_17(float value)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x193257C", Offset = "0x193257C", VA = "0x193257C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92934", Offset = "0xD92934")]
		private void <SetupCallbacks>b__38_18(float value)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x19325E0", Offset = "0x19325E0", VA = "0x19325E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92944", Offset = "0xD92944")]
		private void <SetupCallbacks>b__38_19(int value)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x1932620", Offset = "0x1932620", VA = "0x1932620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92954", Offset = "0xD92954")]
		private void <SetupCallbacks>b__38_20()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x19326F4", Offset = "0x19326F4", VA = "0x19326F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92964", Offset = "0xD92964")]
		private void <SetupCallbacks>b__38_37(Color color)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x19327D4", Offset = "0x19327D4", VA = "0x19327D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92974", Offset = "0xD92974")]
		private void <SetupCallbacks>b__38_21(int value)
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x1932824", Offset = "0x1932824", VA = "0x1932824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92984", Offset = "0xD92984")]
		private void <SetupCallbacks>b__38_22(int value)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1932874", Offset = "0x1932874", VA = "0x1932874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92994", Offset = "0xD92994")]
		private void <SetupCallbacks>b__38_23(float value)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x19328E0", Offset = "0x19328E0", VA = "0x19328E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD929A4", Offset = "0xD929A4")]
		private void <SetupCallbacks>b__38_24(float value)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x193294C", Offset = "0x193294C", VA = "0x193294C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD929B4", Offset = "0xD929B4")]
		private void <SetupCallbacks>b__38_25(float value)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x19329B8", Offset = "0x19329B8", VA = "0x19329B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD929C4", Offset = "0xD929C4")]
		private void <SetupCallbacks>b__38_26(int value)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x19329F4", Offset = "0x19329F4", VA = "0x19329F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD929D4", Offset = "0xD929D4")]
		private void <SetupCallbacks>b__38_27(bool value)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1932A40", Offset = "0x1932A40", VA = "0x1932A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD929E4", Offset = "0xD929E4")]
		private void <SetupCallbacks>b__38_28(float value)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1932A68", Offset = "0x1932A68", VA = "0x1932A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD929F4", Offset = "0xD929F4")]
		private void <SetupCallbacks>b__38_29(float value)
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class ForceSliderToMultipleOf3 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1932A90", Offset = "0x1932A90", VA = "0x1932A90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1932B34", Offset = "0x1932B34", VA = "0x1932B34")]
		private void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1932BB4", Offset = "0x1932BB4", VA = "0x1932BB4")]
		public ForceSliderToMultipleOf3()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class ForceSliderToPowerOf2 : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] m_powerOf2Values;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_text;

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1932BBC", Offset = "0x1932BBC", VA = "0x1932BBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1932C60", Offset = "0x1932C60", VA = "0x1932C60")]
		private void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1932D90", Offset = "0x1932D90", VA = "0x1932D90")]
		public ForceSliderToPowerOf2()
		{
		}
	}
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7E044", Offset = "0xD7E044")]
	public class UpdateTextWithSliderValue : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_slider;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_text;

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1934498", Offset = "0x1934498", VA = "0x1934498")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1934554", Offset = "0x1934554", VA = "0x1934554")]
		private void UpdateText(float value)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x19345A0", Offset = "0x19345A0", VA = "0x19345A0")]
		public UpdateTextWithSliderValue()
		{
		}
	}
}
namespace VirtualAge
{
	[Serializable]
	[Token(Token = "0x200015B")]
	public class StringStringDictionary : SerializableDictionary<string, string>
	{
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x240C6F0", Offset = "0x240C6F0", VA = "0x240C6F0")]
		public StringStringDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015C")]
	public class ObjectColorDictionary : SerializableDictionary<UnityEngine.Object, Color>
	{
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x240C5A0", Offset = "0x240C5A0", VA = "0x240C5A0")]
		public ObjectColorDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015D")]
	public class ColorArrayStorage : SerializableDictionary.Storage<Color[]>
	{
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x240C548", Offset = "0x240C548", VA = "0x240C548")]
		public ColorArrayStorage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015E")]
	public class StringColorArrayDictionary : SerializableDictionary<string, Color[], ColorArrayStorage>
	{
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x240C650", Offset = "0x240C650", VA = "0x240C650")]
		public StringColorArrayDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015F")]
	public class MyClass
	{
		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string str;

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x240C598", Offset = "0x240C598", VA = "0x240C598")]
		public MyClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000160")]
	public class QuaternionMyClassDictionary : SerializableDictionary<Quaternion, MyClass>
	{
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x240C5F0", Offset = "0x240C5F0", VA = "0x240C5F0")]
		public QuaternionMyClassDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000161")]
	public class StringHashSet : SerializableHashSet<string>
	{
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x240C6A0", Offset = "0x240C6A0", VA = "0x240C6A0")]
		public StringHashSet()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public abstract class SerializableDictionaryBase
	{
		[Token(Token = "0x2000488")]
		public abstract class Storage
		{
			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0x240C648", Offset = "0x240C648", VA = "0x240C648")]
			protected Storage()
			{
			}
		}

		[Token(Token = "0x2000489")]
		protected class Dictionary<TKey, TValue> : System.Collections.Generic.Dictionary<TKey, TValue>
		{
			[Token(Token = "0x6001FE5")]
			public Dictionary()
			{
			}

			[Token(Token = "0x6001FE6")]
			public Dictionary(IDictionary<TKey, TValue> dict)
			{
			}

			[Token(Token = "0x6001FE7")]
			public Dictionary(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x240C640", Offset = "0x240C640", VA = "0x240C640")]
		protected SerializableDictionaryBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xD7E0A8", Offset = "0xD7E0A8")]
	public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : SerializableDictionaryBase, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, IDictionary, ICollection, ISerializationCallbackReceiver, IDeserializationCallback, ISerializable
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<TKey, TValue> m_dict;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TKey[] m_keys;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TValueStorage[] m_values;

		[Token(Token = "0x170001F3")]
		public ICollection<TKey> Keys
		{
			[Token(Token = "0x6000CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public ICollection<TValue> Values
		{
			[Token(Token = "0x6000CB5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		public int Count
		{
			[Token(Token = "0x6000CB6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F6")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000CB7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F7")]
		public TValue Item
		{
			[Token(Token = "0x6000CB8")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6000CB9")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public bool IsFixedSize
		{
			[Token(Token = "0x6000CC5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F9")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6000CC6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6000CC7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public bool IsSynchronized
		{
			[Token(Token = "0x6000CC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		public object SyncRoot
		{
			[Token(Token = "0x6000CC9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public object Item
		{
			[Token(Token = "0x6000CCA")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CCB")]
			set
			{
			}
		}

		[Token(Token = "0x6000CAD")]
		public SerializableDictionaryBase()
		{
		}

		[Token(Token = "0x6000CAE")]
		public SerializableDictionaryBase(IDictionary<TKey, TValue> dict)
		{
		}

		[Token(Token = "0x6000CAF")]
		protected abstract void SetValue(TValueStorage[] storage, int i, TValue value);

		[Token(Token = "0x6000CB0")]
		protected abstract TValue GetValue(TValueStorage[] storage, int i);

		[Token(Token = "0x6000CB1")]
		public void CopyFrom(IDictionary<TKey, TValue> dict)
		{
		}

		[Token(Token = "0x6000CB2")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000CB3")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000CBA")]
		public void Add(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6000CBB")]
		public bool ContainsKey(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBC")]
		public bool Remove(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBD")]
		public bool TryGetValue(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBE")]
		public void Add(KeyValuePair<TKey, TValue> item)
		{
		}

		[Token(Token = "0x6000CBF")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000CC0")]
		public bool Contains(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000CC2")]
		public bool Remove(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC3")]
		public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000CC4")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000CCC")]
		public void Add(object key, object value)
		{
		}

		[Token(Token = "0x6000CCD")]
		public bool Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCE")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000CCF")]
		public void Remove(object key)
		{
		}

		[Token(Token = "0x6000CD0")]
		public void CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6000CD1")]
		public void OnDeserialization(object sender)
		{
		}

		[Token(Token = "0x6000CD2")]
		protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000CD3")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}
	[Token(Token = "0x2000164")]
	public static class SerializableDictionary
	{
		[Token(Token = "0x200048A")]
		public class Storage<T> : SerializableDictionaryBase.Storage
		{
			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;

			[Token(Token = "0x6001FE8")]
			public Storage()
			{
			}
		}
	}
	[Serializable]
	[Token(Token = "0x2000165")]
	public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>
	{
		[Token(Token = "0x6000CD4")]
		public SerializableDictionary()
		{
		}

		[Token(Token = "0x6000CD5")]
		public SerializableDictionary(IDictionary<TKey, TValue> dict)
		{
		}

		[Token(Token = "0x6000CD6")]
		protected SerializableDictionary(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000CD7")]
		protected override TValue GetValue(TValue[] storage, int i)
		{
			return (TValue)null;
		}

		[Token(Token = "0x6000CD8")]
		protected override void SetValue(TValue[] storage, int i, TValue value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000166")]
	public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage> where TValueStorage : SerializableDictionary.Storage<TValue>, new()
	{
		[Token(Token = "0x6000CD9")]
		public SerializableDictionary()
		{
		}

		[Token(Token = "0x6000CDA")]
		public SerializableDictionary(IDictionary<TKey, TValue> dict)
		{
		}

		[Token(Token = "0x6000CDB")]
		protected SerializableDictionary(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000CDC")]
		protected override TValue GetValue(TValueStorage[] storage, int i)
		{
			return (TValue)null;
		}

		[Token(Token = "0x6000CDD")]
		protected override void SetValue(TValueStorage[] storage, int i, TValue value)
		{
		}
	}
}
namespace SubjectNerd.Utilities
{
	[Token(Token = "0x2000167")]
	public class EditScriptableAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x151D164", Offset = "0x151D164", VA = "0x151D164")]
		public EditScriptableAttribute()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class ReorderableAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD84CD4", Offset = "0xD84CD4")]
		private string <ElementHeader>k__BackingField;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD84CE4", Offset = "0xD84CE4")]
		private bool <HeaderZeroIndex>k__BackingField;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD84CF4", Offset = "0xD84CF4")]
		private bool <ElementSingleLine>k__BackingField;

		[Token(Token = "0x170001FE")]
		public string ElementHeader
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x151D16C", Offset = "0x151D16C", VA = "0x151D16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92A04", Offset = "0xD92A04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x151D174", Offset = "0x151D174", VA = "0x151D174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92A14", Offset = "0xD92A14")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public bool HeaderZeroIndex
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x151D17C", Offset = "0x151D17C", VA = "0x151D17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92A24", Offset = "0xD92A24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x151D184", Offset = "0x151D184", VA = "0x151D184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92A34", Offset = "0xD92A34")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public bool ElementSingleLine
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x151D190", Offset = "0x151D190", VA = "0x151D190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92A44", Offset = "0xD92A44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x151D198", Offset = "0x151D198", VA = "0x151D198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92A54", Offset = "0xD92A54")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x151D1A4", Offset = "0x151D1A4", VA = "0x151D1A4")]
		public ReorderableAttribute()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x151D20C", Offset = "0x151D20C", VA = "0x151D20C")]
		public ReorderableAttribute(string headerString = "", bool isZeroIndex = true, bool isSingleLine = false)
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x2000169")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4000B71")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x1571BB4", Offset = "0x1571BB4", VA = "0x1571BB4")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1571C24", Offset = "0x1571C24", VA = "0x1571C24")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1571C94", Offset = "0x1571C94", VA = "0x1571C94")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1571D78", Offset = "0x1571D78", VA = "0x1571D78")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1571DEC", Offset = "0x1571DEC", VA = "0x1571DEC")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1571E5C", Offset = "0x1571E5C", VA = "0x1571E5C")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x1571ED8", Offset = "0x1571ED8", VA = "0x1571ED8")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1571F48", Offset = "0x1571F48", VA = "0x1571F48")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1571F54", Offset = "0x1571F54", VA = "0x1571F54")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1571F90", Offset = "0x1571F90", VA = "0x1571F90")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1571F94", Offset = "0x1571F94", VA = "0x1571F94")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x6000CF2")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000CF3")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200016A")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x200048B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD80B1C", Offset = "0xD80B1C")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x200048C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD80B30", Offset = "0xD80B30")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x200048D")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x200048E")]
		public struct GSALine
		{
			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x200048F")]
		public struct GSALineCollection
		{
			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x2000490")]
		public struct GSALegalData
		{
			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000491")]
		public struct GSARect
		{
			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4000B72")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x157222C", Offset = "0x157222C", VA = "0x157222C")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x15722BC", Offset = "0x15722BC", VA = "0x15722BC")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1572330", Offset = "0x1572330", VA = "0x1572330")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x15723B4", Offset = "0x15723B4", VA = "0x15723B4")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x1572438", Offset = "0x1572438", VA = "0x1572438")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x15724B8", Offset = "0x15724B8", VA = "0x15724B8")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1572538", Offset = "0x1572538", VA = "0x1572538")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x15725B4", Offset = "0x15725B4", VA = "0x15725B4")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1572634", Offset = "0x1572634", VA = "0x1572634")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x15726B4", Offset = "0x15726B4", VA = "0x15726B4")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1572744", Offset = "0x1572744", VA = "0x1572744")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x15727EC", Offset = "0x15727EC", VA = "0x15727EC")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x15727F0", Offset = "0x15727F0", VA = "0x15727F0")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x15727F4", Offset = "0x15727F4", VA = "0x15727F4")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x15727F8", Offset = "0x15727F8", VA = "0x15727F8")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x15727FC", Offset = "0x15727FC", VA = "0x15727FC")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1572800", Offset = "0x1572800", VA = "0x1572800")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1572888", Offset = "0x1572888", VA = "0x1572888")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x157288C", Offset = "0x157288C", VA = "0x157288C")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x1572890", Offset = "0x1572890", VA = "0x1572890")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x1572894", Offset = "0x1572894", VA = "0x1572894")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x157289C", Offset = "0x157289C", VA = "0x157289C")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200016B")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4000B74")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x4000B75")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x17000201")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x1571F98", Offset = "0x1571F98", VA = "0x1571F98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1572060", Offset = "0x1572060", VA = "0x1572060")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1572064", Offset = "0x1572064", VA = "0x1572064")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1572068", Offset = "0x1572068", VA = "0x1572068")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x157206C", Offset = "0x157206C", VA = "0x157206C")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1572014", Offset = "0x1572014", VA = "0x1572014")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x2000492")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000493")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x2000494")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x2000495")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x17000202")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x1573CE4", Offset = "0x1573CE4", VA = "0x1573CE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1573D6C", Offset = "0x1573D6C", VA = "0x1573D6C")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1573D74", Offset = "0x1573D74", VA = "0x1573D74")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1573D7C", Offset = "0x1573D7C", VA = "0x1573D7C")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1573E9C", Offset = "0x1573E9C", VA = "0x1573E9C")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1574154", Offset = "0x1574154", VA = "0x1574154")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x15741D8", Offset = "0x15741D8", VA = "0x15741D8")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1574268", Offset = "0x1574268", VA = "0x1574268")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1572F14", Offset = "0x1572F14", VA = "0x1572F14")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD92A64", Offset = "0xD92A64")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x157362C", Offset = "0x157362C", VA = "0x157362C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD92AC8", Offset = "0xD92AC8")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1573D64", Offset = "0x1573D64", VA = "0x1573D64")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x200016D")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x21D1938", Offset = "0x21D1938", VA = "0x21D1938")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class ControllerHand
	{
		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x21D1754", Offset = "0x21D1754", VA = "0x21D1754")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public enum ControllerState
	{
		[Token(Token = "0x4000B9A")]
		Error = -1,
		[Token(Token = "0x4000B9B")]
		DisConnected,
		[Token(Token = "0x4000B9C")]
		Connected
	}
	[Token(Token = "0x2000170")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x4000B9E")]
		None = 0,
		[Token(Token = "0x4000B9F")]
		APP = 1,
		[Token(Token = "0x4000BA0")]
		TOUCHPAD = 2,
		[Token(Token = "0x4000BA1")]
		HOME = 4,
		[Token(Token = "0x4000BA2")]
		VOLUMEUP = 8,
		[Token(Token = "0x4000BA3")]
		VOLUMEDOWN = 16,
		[Token(Token = "0x4000BA4")]
		TRIGGER = 32,
		[Token(Token = "0x4000BA5")]
		A = 64,
		[Token(Token = "0x4000BA6")]
		B = 128,
		[Token(Token = "0x4000BA7")]
		X = 256,
		[Token(Token = "0x4000BA8")]
		Y = 512,
		[Token(Token = "0x4000BA9")]
		Left = 1024,
		[Token(Token = "0x4000BAA")]
		Right = 2048,
		[Token(Token = "0x4000BAB")]
		Thumbrest = 4096,
		[Token(Token = "0x4000BAC")]
		Any = -1
	}
	[Token(Token = "0x2000171")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4000BAE")]
		No,
		[Token(Token = "0x4000BAF")]
		SwipeUp,
		[Token(Token = "0x4000BB0")]
		SwipeDown,
		[Token(Token = "0x4000BB1")]
		SwipeLeft,
		[Token(Token = "0x4000BB2")]
		SwipeRight
	}
	[Token(Token = "0x2000172")]
	public enum TouchPadClick
	{
		[Token(Token = "0x4000BB4")]
		No,
		[Token(Token = "0x4000BB5")]
		ClickUp,
		[Token(Token = "0x4000BB6")]
		ClickDown,
		[Token(Token = "0x4000BB7")]
		ClickLeft,
		[Token(Token = "0x4000BB8")]
		ClickRight
	}
	[Token(Token = "0x2000173")]
	public struct Controller
	{
		[Token(Token = "0x4000BB9")]
		private const float JOYSTICK_THRESHOLD = 0.4f;

		[Token(Token = "0x4000BBA")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x21CBAC8", Offset = "0x21CBAC8", VA = "0x21CBAC8")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x21CBBC4", Offset = "0x21CBBC4", VA = "0x21CBBC4")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x21CBD48", Offset = "0x21CBD48", VA = "0x21CBD48")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x21CBFE0", Offset = "0x21CBFE0", VA = "0x21CBFE0")]
		public static bool UPvr_GetJoystickUp(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x21CC208", Offset = "0x21CC208", VA = "0x21CC208")]
		public static bool UPvr_GetJoystickDown(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x21CC434", Offset = "0x21CC434", VA = "0x21CC434")]
		public static bool UPvr_GetJoystickLeft(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x21CC660", Offset = "0x21CC660", VA = "0x21CC660")]
		public static bool UPvr_GetJoystickRight(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x21CC888", Offset = "0x21CC888", VA = "0x21CC888")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x21CC98C", Offset = "0x21CC98C", VA = "0x21CC98C")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x21CCAA4", Offset = "0x21CCAA4", VA = "0x21CCAA4")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x21CCBB8", Offset = "0x21CCBB8", VA = "0x21CCBB8")]
		public static Quaternion UPvr_GetControllerPredictRotation(int hand, float predictTime)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x21CCCA0", Offset = "0x21CCCA0", VA = "0x21CCCA0")]
		public static Vector3 UPvr_GetControllerPredictPosition(int hand, float predictTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x21CCDA4", Offset = "0x21CCDA4", VA = "0x21CCDA4")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x21CCE74", Offset = "0x21CCE74", VA = "0x21CCE74")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x21CCF44", Offset = "0x21CCF44", VA = "0x21CCF44")]
		public static int UPvr_GetControllerPowerByPercent(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x21CD01C", Offset = "0x21CD01C", VA = "0x21CD01C")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x21CD0EC", Offset = "0x21CD0EC", VA = "0x21CD0EC")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x21CD1BC", Offset = "0x21CD1BC", VA = "0x21CD1BC")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x21CD830", Offset = "0x21CD830", VA = "0x21CD830")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x21CDEA4", Offset = "0x21CDEA4", VA = "0x21CDEA4")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x21CE518", Offset = "0x21CE518", VA = "0x21CE518")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x21CE8DC", Offset = "0x21CE8DC", VA = "0x21CE8DC")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x21CECA0", Offset = "0x21CECA0", VA = "0x21CECA0")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x21CF064", Offset = "0x21CF064", VA = "0x21CF064")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x21CF6D8", Offset = "0x21CF6D8", VA = "0x21CF6D8")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x21CFD4C", Offset = "0x21CFD4C", VA = "0x21CFD4C")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x21CFF18", Offset = "0x21CFF18", VA = "0x21CFF18")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x21CFFD8", Offset = "0x21CFFD8", VA = "0x21CFFD8")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x21D004C", Offset = "0x21D004C", VA = "0x21D004C")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x21D0108", Offset = "0x21D0108", VA = "0x21D0108")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x21D017C", Offset = "0x21D017C", VA = "0x21D017C")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x21D01F0", Offset = "0x21D01F0", VA = "0x21D01F0")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x21D0264", Offset = "0x21D0264", VA = "0x21D0264")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x21D02E0", Offset = "0x21D02E0", VA = "0x21D02E0")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x21D035C", Offset = "0x21D035C", VA = "0x21D035C")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x21D03F8", Offset = "0x21D03F8", VA = "0x21D03F8")]
		public static void UPvr_VibrateController(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x21D0494", Offset = "0x21D0494", VA = "0x21D0494")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x21D0510", Offset = "0x21D0510", VA = "0x21D0510")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x21D058C", Offset = "0x21D058C", VA = "0x21D058C")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x21D0608", Offset = "0x21D0608", VA = "0x21D0608")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x21D0684", Offset = "0x21D0684", VA = "0x21D0684")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x21D06F8", Offset = "0x21D06F8", VA = "0x21D06F8")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x21D076C", Offset = "0x21D076C", VA = "0x21D076C")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x21D0830", Offset = "0x21D0830", VA = "0x21D0830")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x21D08A4", Offset = "0x21D08A4", VA = "0x21D08A4")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x21D0920", Offset = "0x21D0920", VA = "0x21D0920")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x21D0994", Offset = "0x21D0994", VA = "0x21D0994")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x21D0A10", Offset = "0x21D0A10", VA = "0x21D0A10")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x21D0A8C", Offset = "0x21D0A8C", VA = "0x21D0A8C")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x21D0B08", Offset = "0x21D0B08", VA = "0x21D0B08")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x21D0B7C", Offset = "0x21D0B7C", VA = "0x21D0B7C")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x21D0BF0", Offset = "0x21D0BF0", VA = "0x21D0BF0")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x21D0C7C", Offset = "0x21D0C7C", VA = "0x21D0C7C")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x21D0CF8", Offset = "0x21D0CF8", VA = "0x21D0CF8")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x21D0D74", Offset = "0x21D0D74", VA = "0x21D0D74")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x21D0DE8", Offset = "0x21D0DE8", VA = "0x21D0DE8")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x21D0E5C", Offset = "0x21D0E5C", VA = "0x21D0E5C")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x21D0ED0", Offset = "0x21D0ED0", VA = "0x21D0ED0")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x21D0F4C", Offset = "0x21D0F4C", VA = "0x21D0F4C")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x21D0FC0", Offset = "0x21D0FC0", VA = "0x21D0FC0")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x21D1034", Offset = "0x21D1034", VA = "0x21D1034")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x21D10B0", Offset = "0x21D10B0", VA = "0x21D10B0")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x21D112C", Offset = "0x21D112C", VA = "0x21D112C")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x21D11E8", Offset = "0x21D11E8", VA = "0x21D11E8")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x21D129C", Offset = "0x21D129C", VA = "0x21D129C")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x21D1340", Offset = "0x21D1340", VA = "0x21D1340")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x21D13E0", Offset = "0x21D13E0", VA = "0x21D13E0")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x21D1480", Offset = "0x21D1480", VA = "0x21D1480")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x21D1524", Offset = "0x21D1524", VA = "0x21D1524")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x21D15A0", Offset = "0x21D15A0", VA = "0x21D15A0")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x21D161C", Offset = "0x21D161C", VA = "0x21D161C")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x21D1698", Offset = "0x21D1698", VA = "0x21D1698")]
		public static void UPvr_SetControllerOriginOffset(int hand, Vector3 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x21D11EC", Offset = "0x21D11EC", VA = "0x21D11EC")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x21D12A0", Offset = "0x21D12A0", VA = "0x21D12A0")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x21D1344", Offset = "0x21D1344", VA = "0x21D1344")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x21D13E4", Offset = "0x21D13E4", VA = "0x21D13E4")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x21D1484", Offset = "0x21D1484", VA = "0x21D1484")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x21D1130", Offset = "0x21D1130", VA = "0x21D1130")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x2000174")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4000BBC")]
		Controller0,
		[Token(Token = "0x4000BBD")]
		Controller1
	}
	[Token(Token = "0x2000175")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4000BBF")]
		Goblin,
		[Token(Token = "0x4000BC0")]
		Neo,
		[Token(Token = "0x4000BC1")]
		G2,
		[Token(Token = "0x4000BC2")]
		Neo2,
		[Token(Token = "0x4000BC3")]
		Neo3,
		[Token(Token = "0x4000BC4")]
		NewController
	}
	[Token(Token = "0x2000176")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x4000BC6")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x4000BC7")]
		PUI_VERSION,
		[Token(Token = "0x4000BC8")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x4000BC9")]
		EQUIPMENT_SN,
		[Token(Token = "0x4000BCA")]
		CUSTOMER_SN,
		[Token(Token = "0x4000BCB")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4000BCC")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4000BCD")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4000BCE")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4000BCF")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x4000BD0")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x4000BD1")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x4000BD2")]
		DEVICE_IP
	}
	[Token(Token = "0x2000177")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x4000BD4")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x4000BD5")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x2000178")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x4000BD7")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x4000BD8")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x2000179")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x4000BDA")]
		S_ON,
		[Token(Token = "0x4000BDB")]
		S_OFF
	}
	[Token(Token = "0x200017A")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4000BDD")]
		SINGLE_CLICK,
		[Token(Token = "0x4000BDE")]
		DOUBLE_CLICK,
		[Token(Token = "0x4000BDF")]
		LONG_PRESS
	}
	[Token(Token = "0x200017B")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x4000BE1")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x4000BE2")]
		VALUE_HOME_BACK,
		[Token(Token = "0x4000BE3")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x4000BE4")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x4000BE5")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x4000BE6")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4000BE7")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4000BE8")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x200017C")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4000BEA")]
		THREE = 3,
		[Token(Token = "0x4000BEB")]
		TEN = 10,
		[Token(Token = "0x4000BEC")]
		THIRTY = 30,
		[Token(Token = "0x4000BED")]
		SIXTY = 60,
		[Token(Token = "0x4000BEE")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4000BEF")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4000BF0")]
		NEVER = -1
	}
	[Token(Token = "0x200017D")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x4000BF2")]
		FIFTEEN = 15,
		[Token(Token = "0x4000BF3")]
		THIRTY = 30,
		[Token(Token = "0x4000BF4")]
		SIXTY = 60,
		[Token(Token = "0x4000BF5")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4000BF6")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4000BF7")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4000BF8")]
		NEVER = -1
	}
	[Token(Token = "0x200017E")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4000BFA")]
		SFS_USB,
		[Token(Token = "0x4000BFB")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4000BFC")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4000BFD")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4000BFE")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4000BFF")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4000C00")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x4000C01")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x4000C02")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4000C03")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4000C04")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4000C05")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4000C06")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4000C07")]
		SFS_USB_BOOT,
		[Token(Token = "0x4000C08")]
		SFS_VOLUME_UI,
		[Token(Token = "0x4000C09")]
		SFS_CONTROLLER_UI,
		[Token(Token = "0x4000C0A")]
		SFS_NAVGATION_SWITCH
	}
	[Token(Token = "0x200017F")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4000C0C")]
		MTP,
		[Token(Token = "0x4000C0D")]
		CHARGE
	}
	[Token(Token = "0x2000180")]
	public struct ToBService
	{
		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x21DA948", Offset = "0x21DA948", VA = "0x21DA948")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x21DAAF8", Offset = "0x21DAAF8", VA = "0x21DAAF8")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x21DABC4", Offset = "0x21DABC4", VA = "0x21DABC4")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x21DAC98", Offset = "0x21DAC98", VA = "0x21DAC98")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x21DAD6C", Offset = "0x21DAD6C", VA = "0x21DAD6C")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x21DAE68", Offset = "0x21DAE68", VA = "0x21DAE68")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x21DAFC4", Offset = "0x21DAFC4", VA = "0x21DAFC4")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x21DB0C4", Offset = "0x21DB0C4", VA = "0x21DB0C4")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x21DB23C", Offset = "0x21DB23C", VA = "0x21DB23C")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x21DB3A0", Offset = "0x21DB3A0", VA = "0x21DB3A0")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x21DB41C", Offset = "0x21DB41C", VA = "0x21DB41C")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x21DB57C", Offset = "0x21DB57C", VA = "0x21DB57C")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x21DB78C", Offset = "0x21DB78C", VA = "0x21DB78C")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x21DB8D4", Offset = "0x21DB8D4", VA = "0x21DB8D4")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x21DB9D4", Offset = "0x21DB9D4", VA = "0x21DB9D4")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x21DBAC4", Offset = "0x21DBAC4", VA = "0x21DBAC4")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x21DBC4C", Offset = "0x21DBC4C", VA = "0x21DBC4C")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x21DBD80", Offset = "0x21DBD80", VA = "0x21DBD80")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x21DBE74", Offset = "0x21DBE74", VA = "0x21DBE74")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x21DBF68", Offset = "0x21DBF68", VA = "0x21DBF68")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x21DC05C", Offset = "0x21DC05C", VA = "0x21DC05C")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x21DC150", Offset = "0x21DC150", VA = "0x21DC150")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x21DC244", Offset = "0x21DC244", VA = "0x21DC244")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x21DC338", Offset = "0x21DC338", VA = "0x21DC338")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x21DC42C", Offset = "0x21DC42C", VA = "0x21DC42C")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x21DC520", Offset = "0x21DC520", VA = "0x21DC520")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x21DC614", Offset = "0x21DC614", VA = "0x21DC614")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x21DC708", Offset = "0x21DC708", VA = "0x21DC708")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x21DC81C", Offset = "0x21DC81C", VA = "0x21DC81C")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x21DC898", Offset = "0x21DC898", VA = "0x21DC898")]
		public static void UPvr_SetAPPAsHome(PBS_SwitchEnum switchEnum, string packageName)
		{
		}
	}
	[Token(Token = "0x2000181")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4000C16")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4000C17")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4000C18")]
		SEENSOR_COUNT,
		[Token(Token = "0x4000C19")]
		ABILITY6DOF,
		[Token(Token = "0x4000C1A")]
		PLATFORM_TYPE,
		[Token(Token = "0x4000C1B")]
		TRACKING_MODE,
		[Token(Token = "0x4000C1C")]
		LOG_LEVEL,
		[Token(Token = "0x4000C1D")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4000C1E")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4000C1F")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4000C20")]
		iShowFPS,
		[Token(Token = "0x4000C21")]
		SensorMode,
		[Token(Token = "0x4000C22")]
		LOGICFLOW,
		[Token(Token = "0x4000C23")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4000C24")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4000C25")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4000C26")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4000C27")]
		isEnableBoundary,
		[Token(Token = "0x4000C28")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4000C29")]
		GetDisplay_Orientation,
		[Token(Token = "0x4000C2A")]
		GetWaitFrameNum,
		[Token(Token = "0x4000C2B")]
		GetResetFrameNum,
		[Token(Token = "0x4000C2C")]
		EnableFFRBYSYS,
		[Token(Token = "0x4000C2D")]
		RotControllerMode
	}
	[Token(Token = "0x2000182")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4000C2F")]
		IPD,
		[Token(Token = "0x4000C30")]
		VFOV,
		[Token(Token = "0x4000C31")]
		HFOV,
		[Token(Token = "0x4000C32")]
		NECK_MODEL_X,
		[Token(Token = "0x4000C33")]
		NECK_MODEL_Y,
		[Token(Token = "0x4000C34")]
		NECK_MODEL_Z,
		[Token(Token = "0x4000C35")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x2000183")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4000C37")]
		X_1 = 1,
		[Token(Token = "0x4000C38")]
		X_2 = 2,
		[Token(Token = "0x4000C39")]
		X_4 = 4,
		[Token(Token = "0x4000C3A")]
		X_8 = 8
	}
	[Token(Token = "0x2000184")]
	public enum PlatForm
	{
		[Token(Token = "0x4000C3C")]
		Android = 1,
		[Token(Token = "0x4000C3D")]
		IOS,
		[Token(Token = "0x4000C3E")]
		Win,
		[Token(Token = "0x4000C3F")]
		Notsupport
	}
	[Token(Token = "0x2000185")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4000C41")]
		BD_0 = 0,
		[Token(Token = "0x4000C42")]
		BD_16 = 16,
		[Token(Token = "0x4000C43")]
		BD_24 = 24
	}
	[Token(Token = "0x2000186")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4000C45")]
		Normal,
		[Token(Token = "0x4000C46")]
		High
	}
	[Token(Token = "0x2000187")]
	public enum Sensorindex
	{
		[Token(Token = "0x4000C48")]
		Default,
		[Token(Token = "0x4000C49")]
		FirstSensor,
		[Token(Token = "0x4000C4A")]
		SecondSensor
	}
	[Token(Token = "0x2000188")]
	public enum Eye
	{
		[Token(Token = "0x4000C4C")]
		LeftEye,
		[Token(Token = "0x4000C4D")]
		RightEye,
		[Token(Token = "0x4000C4E")]
		BothEye
	}
	[Token(Token = "0x2000189")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4000C50")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4000C51")]
		TYPE_COLOR,
		[Token(Token = "0x4000C52")]
		TYPE_TEXT,
		[Token(Token = "0x4000C53")]
		TYPE_FONT,
		[Token(Token = "0x4000C54")]
		TYPE_VALUE,
		[Token(Token = "0x4000C55")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4000C56")]
		TYPE_OBJECT,
		[Token(Token = "0x4000C57")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x200018A")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4000C59")]
		EyeLevel,
		[Token(Token = "0x4000C5A")]
		FloorLevel,
		[Token(Token = "0x4000C5B")]
		StageLevel
	}
	[Token(Token = "0x200018B")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4000C5D")]
		Low,
		[Token(Token = "0x4000C5E")]
		Med,
		[Token(Token = "0x4000C5F")]
		High,
		[Token(Token = "0x4000C60")]
		Top_High
	}
	[Token(Token = "0x200018C")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x4000C62")]
		MultiPass,
		[Token(Token = "0x4000C63")]
		SinglePass
	}
	[Token(Token = "0x200018D")]
	public enum ExtraLatencyMode
	{
		[Token(Token = "0x4000C65")]
		ExtraLatencyModeOff,
		[Token(Token = "0x4000C66")]
		ExtraLatencyModeOn,
		[Token(Token = "0x4000C67")]
		ExtraLatencyModeDynamic
	}
	[Token(Token = "0x200018E")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4000C69")]
		kGazePointValid = 1,
		[Token(Token = "0x4000C6A")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4000C6B")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4000C6C")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4000C6D")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x200018F")]
	public enum TrackingMode
	{
		[Token(Token = "0x4000C6F")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4000C70")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4000C71")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x2000190")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x2000191")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x2000192")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x2000193")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x2000194")]
	public struct EyeSetting
	{
		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x2000195")]
	public struct Sensor
	{
		[Token(Token = "0x4000C95")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x21D416C", Offset = "0x21D416C", VA = "0x21D416C")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x21D41EC", Offset = "0x21D41EC", VA = "0x21D41EC")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x21D4280", Offset = "0x21D4280", VA = "0x21D4280")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x21D4300", Offset = "0x21D4300", VA = "0x21D4300")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x21D4380", Offset = "0x21D4380", VA = "0x21D4380")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x21D4400", Offset = "0x21D4400", VA = "0x21D4400")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x21D4480", Offset = "0x21D4480", VA = "0x21D4480")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x21D4500", Offset = "0x21D4500", VA = "0x21D4500")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x21D45D8", Offset = "0x21D45D8", VA = "0x21D45D8")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x21D46BC", Offset = "0x21D46BC", VA = "0x21D46BC")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x21D4730", Offset = "0x21D4730", VA = "0x21D4730")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x21D47A4", Offset = "0x21D47A4", VA = "0x21D47A4")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x21D484C", Offset = "0x21D484C", VA = "0x21D484C")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x21D48F4", Offset = "0x21D48F4", VA = "0x21D48F4")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x21D4968", Offset = "0x21D4968", VA = "0x21D4968")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x21D49E4", Offset = "0x21D49E4", VA = "0x21D49E4")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x21D4AD4", Offset = "0x21D4AD4", VA = "0x21D4AD4")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[PreserveSig]
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x21D4B5C", Offset = "0x21D4B5C", VA = "0x21D4B5C")]
		private static extern bool Pvr_GetAcceleration(ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x21D4BFC", Offset = "0x21D4BFC", VA = "0x21D4BFC")]
		private static extern bool Pvr_GetAngularVelocity(ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x21D4C9C", Offset = "0x21D4C9C", VA = "0x21D4C9C")]
		private static extern bool Pvr_GetVelocity(ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x21D4D3C", Offset = "0x21D4D3C", VA = "0x21D4D3C")]
		private static extern bool Pvr_GetAngularAcceleration(ref float x, ref float y, ref float z);

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x21D4DDC", Offset = "0x21D4DDC", VA = "0x21D4DDC")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x21D4DE0", Offset = "0x21D4DE0", VA = "0x21D4DE0")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x21D4DE4", Offset = "0x21D4DE4", VA = "0x21D4DE4")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x21D4FCC", Offset = "0x21D4FCC", VA = "0x21D4FCC")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x21D5228", Offset = "0x21D5228", VA = "0x21D5228")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x21D522C", Offset = "0x21D522C", VA = "0x21D522C")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x21D5424", Offset = "0x21D5424", VA = "0x21D5424")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x21D5428", Offset = "0x21D5428", VA = "0x21D5428")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x21D542C", Offset = "0x21D542C", VA = "0x21D542C")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x21D54A8", Offset = "0x21D54A8", VA = "0x21D54A8")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x21D54AC", Offset = "0x21D54AC", VA = "0x21D54AC")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x21D54B0", Offset = "0x21D54B0", VA = "0x21D54B0")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x21D54BC", Offset = "0x21D54BC", VA = "0x21D54BC")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x21D54C0", Offset = "0x21D54C0", VA = "0x21D54C0")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x21D54C4", Offset = "0x21D54C4", VA = "0x21D54C4")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x21D54C8", Offset = "0x21D54C8", VA = "0x21D54C8")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x21D4DE8", Offset = "0x21D4DE8", VA = "0x21D4DE8")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x21D56E0", Offset = "0x21D56E0", VA = "0x21D56E0")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x21D5020", Offset = "0x21D5020", VA = "0x21D5020")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x21D5230", Offset = "0x21D5230", VA = "0x21D5230")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x21D5900", Offset = "0x21D5900", VA = "0x21D5900")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x21D5904", Offset = "0x21D5904", VA = "0x21D5904")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x21D5D10", Offset = "0x21D5D10", VA = "0x21D5D10")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x21D5D14", Offset = "0x21D5D14", VA = "0x21D5D14")]
		public static Vector3 UPvr_GetAcceleration()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x21D5D70", Offset = "0x21D5D70", VA = "0x21D5D70")]
		public static Vector3 UPvr_AngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x21D5DC4", Offset = "0x21D5DC4", VA = "0x21D5DC4")]
		public static Vector3 UPvr_GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x21D5E20", Offset = "0x21D5E20", VA = "0x21D5E20")]
		public static Vector3 UPvr_GetAngularAcceleration()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000196")]
	public struct Render
	{
		[Token(Token = "0x4000C96")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x21D2924", Offset = "0x21D2924", VA = "0x21D2924")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x21D29F4", Offset = "0x21D29F4", VA = "0x21D29F4")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x21D2A80", Offset = "0x21D2A80", VA = "0x21D2A80")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x21D2B00", Offset = "0x21D2B00", VA = "0x21D2B00")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x21D2B74", Offset = "0x21D2B74", VA = "0x21D2B74")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x21D2C04", Offset = "0x21D2C04", VA = "0x21D2C04")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x21D2C90", Offset = "0x21D2C90", VA = "0x21D2C90")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x21D2D1C", Offset = "0x21D2D1C", VA = "0x21D2D1C")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x21D2DE4", Offset = "0x21D2DE4", VA = "0x21D2DE4")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x21D2EC4", Offset = "0x21D2EC4", VA = "0x21D2EC4")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x21D3000", Offset = "0x21D3000", VA = "0x21D3000")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x21D3088", Offset = "0x21D3088", VA = "0x21D3088")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x21D3160", Offset = "0x21D3160", VA = "0x21D3160")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x21D3208", Offset = "0x21D3208", VA = "0x21D3208")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x21D32AC", Offset = "0x21D32AC", VA = "0x21D32AC")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x21D332C", Offset = "0x21D332C", VA = "0x21D332C")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x21D33A0", Offset = "0x21D33A0", VA = "0x21D33A0")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x21D344C", Offset = "0x21D344C", VA = "0x21D344C")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x21D34CC", Offset = "0x21D34CC", VA = "0x21D34CC")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x21D354C", Offset = "0x21D354C", VA = "0x21D354C")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x21D35DC", Offset = "0x21D35DC", VA = "0x21D35DC")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x21D366C", Offset = "0x21D366C", VA = "0x21D366C")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x21D36EC", Offset = "0x21D36EC", VA = "0x21D36EC")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x21D379C", Offset = "0x21D379C", VA = "0x21D379C")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x21D37A0", Offset = "0x21D37A0", VA = "0x21D37A0")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x21D37A4", Offset = "0x21D37A4", VA = "0x21D37A4")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x21D3858", Offset = "0x21D3858", VA = "0x21D3858")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD92B2C", Offset = "0xD92B2C")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x21D385C", Offset = "0x21D385C", VA = "0x21D385C")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x21D3860", Offset = "0x21D3860", VA = "0x21D3860")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x21D3964", Offset = "0x21D3964", VA = "0x21D3964")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x21D3968", Offset = "0x21D3968", VA = "0x21D3968")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x21D3AA4", Offset = "0x21D3AA4", VA = "0x21D3AA4")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x21D3AA8", Offset = "0x21D3AA8", VA = "0x21D3AA8")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x21D3AAC", Offset = "0x21D3AAC", VA = "0x21D3AAC")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x21D3AB0", Offset = "0x21D3AB0", VA = "0x21D3AB0")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x21D3B3C", Offset = "0x21D3B3C", VA = "0x21D3B3C")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x21D3B40", Offset = "0x21D3B40", VA = "0x21D3B40")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x21D3C80", Offset = "0x21D3C80", VA = "0x21D3C80")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x21D3C84", Offset = "0x21D3C84", VA = "0x21D3C84")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x21D4150", Offset = "0x21D4150", VA = "0x21D4150")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x21D4154", Offset = "0x21D4154", VA = "0x21D4154")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x21D4158", Offset = "0x21D4158", VA = "0x21D4158")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x21D415C", Offset = "0x21D415C", VA = "0x21D415C")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x21D4160", Offset = "0x21D4160", VA = "0x21D4160")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x21D4168", Offset = "0x21D4168", VA = "0x21D4168")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x2000197")]
	public struct System
	{
		[Token(Token = "0x4000C97")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4000C98")]
		public const string UnitySDKVersion = "2.8.10.4";

		[PreserveSig]
		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x21D5E74", Offset = "0x21D5E74", VA = "0x21D5E74")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x21D5F04", Offset = "0x21D5F04", VA = "0x21D5F04")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x21D5F78", Offset = "0x21D5F78", VA = "0x21D5F78")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x21D5FEC", Offset = "0x21D5FEC", VA = "0x21D5FEC")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x21D6060", Offset = "0x21D6060", VA = "0x21D6060")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x21D60D4", Offset = "0x21D60D4", VA = "0x21D60D4")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x21D6148", Offset = "0x21D6148", VA = "0x21D6148")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x21D61B8", Offset = "0x21D61B8", VA = "0x21D61B8")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x21D6238", Offset = "0x21D6238", VA = "0x21D6238")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x21D6428", Offset = "0x21D6428", VA = "0x21D6428")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x21D64B0", Offset = "0x21D64B0", VA = "0x21D64B0")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x21D6524", Offset = "0x21D6524", VA = "0x21D6524")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x21D6598", Offset = "0x21D6598", VA = "0x21D6598")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x21D6618", Offset = "0x21D6618", VA = "0x21D6618")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x21D66A0", Offset = "0x21D66A0", VA = "0x21D66A0")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x21D6720", Offset = "0x21D6720", VA = "0x21D6720")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x21D6790", Offset = "0x21D6790", VA = "0x21D6790")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x21D6810", Offset = "0x21D6810", VA = "0x21D6810")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x21D68A8", Offset = "0x21D68A8", VA = "0x21D68A8")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x21D6938", Offset = "0x21D6938", VA = "0x21D6938")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x21D69C8", Offset = "0x21D69C8", VA = "0x21D69C8")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x21D6A38", Offset = "0x21D6A38", VA = "0x21D6A38")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x21D6AC0", Offset = "0x21D6AC0", VA = "0x21D6AC0")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x21D6B3C", Offset = "0x21D6B3C", VA = "0x21D6B3C")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x21D28B0", Offset = "0x21D28B0", VA = "0x21D28B0")]
		public static extern int PVR_GetHmdAudioStatus();

		[PreserveSig]
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x21D6BC4", Offset = "0x21D6BC4", VA = "0x21D6BC4")]
		private static extern float Pvr_GetPredictedDisplayTime();

		[PreserveSig]
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x21D6C34", Offset = "0x21D6C34", VA = "0x21D6C34")]
		public static extern bool Pvr_SetExtraLatencyMode(int mode);

		[Token(Token = "0x6000E01")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x21D54D0", Offset = "0x21D54D0", VA = "0x21D54D0")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E03")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x21D6CBC", Offset = "0x21D6CBC", VA = "0x21D6CBC")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x21D6ECC", Offset = "0x21D6ECC", VA = "0x21D6ECC")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x21D6F60", Offset = "0x21D6F60", VA = "0x21D6F60")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x21D6FA8", Offset = "0x21D6FA8", VA = "0x21D6FA8")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x21D6FB0", Offset = "0x21D6FB0", VA = "0x21D6FB0")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x21D1B48", Offset = "0x21D1B48", VA = "0x21D1B48")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x21D1F5C", Offset = "0x21D1F5C", VA = "0x21D1F5C")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x21D6FB8", Offset = "0x21D6FB8", VA = "0x21D6FB8")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x21D70A0", Offset = "0x21D70A0", VA = "0x21D70A0")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x21D71AC", Offset = "0x21D71AC", VA = "0x21D71AC")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x21D72B8", Offset = "0x21D72B8", VA = "0x21D72B8")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x21D73C4", Offset = "0x21D73C4", VA = "0x21D73C4")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x21D764C", Offset = "0x21D764C", VA = "0x21D764C")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x21D788C", Offset = "0x21D788C", VA = "0x21D788C")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x21D7998", Offset = "0x21D7998", VA = "0x21D7998")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x21D7AA4", Offset = "0x21D7AA4", VA = "0x21D7AA4")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x21D7BB0", Offset = "0x21D7BB0", VA = "0x21D7BB0")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x21D7CBC", Offset = "0x21D7CBC", VA = "0x21D7CBC")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x21D7DC8", Offset = "0x21D7DC8", VA = "0x21D7DC8")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x21D7ED8", Offset = "0x21D7ED8", VA = "0x21D7ED8")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x21D7FF0", Offset = "0x21D7FF0", VA = "0x21D7FF0")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x21D80B0", Offset = "0x21D80B0", VA = "0x21D80B0")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x21D80B8", Offset = "0x21D80B8", VA = "0x21D80B8")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x21D80BC", Offset = "0x21D80BC", VA = "0x21D80BC")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x21CB628", Offset = "0x21CB628", VA = "0x21CB628")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x21D80C0", Offset = "0x21D80C0", VA = "0x21D80C0")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x21D813C", Offset = "0x21D813C", VA = "0x21D813C")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x21D826C", Offset = "0x21D826C", VA = "0x21D826C")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x21D8270", Offset = "0x21D8270", VA = "0x21D8270")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x21D8304", Offset = "0x21D8304", VA = "0x21D8304")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x21D8398", Offset = "0x21D8398", VA = "0x21D8398")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x21D839C", Offset = "0x21D839C", VA = "0x21D839C")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x21D83A0", Offset = "0x21D83A0", VA = "0x21D83A0")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x21D83A8", Offset = "0x21D83A8", VA = "0x21D83A8")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x21D83AC", Offset = "0x21D83AC", VA = "0x21D83AC")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x21D83B0", Offset = "0x21D83B0", VA = "0x21D83B0")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x21D861C", Offset = "0x21D861C", VA = "0x21D861C")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x21D884C", Offset = "0x21D884C", VA = "0x21D884C")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x21D8B24", Offset = "0x21D8B24", VA = "0x21D8B24")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x21D8C74", Offset = "0x21D8C74", VA = "0x21D8C74")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x21D8D78", Offset = "0x21D8D78", VA = "0x21D8D78")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x21D8EB4", Offset = "0x21D8EB4", VA = "0x21D8EB4")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x21D91D4", Offset = "0x21D91D4", VA = "0x21D91D4")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x21D91DC", Offset = "0x21D91DC", VA = "0x21D91DC")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x21D91E0", Offset = "0x21D91E0", VA = "0x21D91E0")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x21D91E4", Offset = "0x21D91E4", VA = "0x21D91E4")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x21D91E8", Offset = "0x21D91E8", VA = "0x21D91E8")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x21D91EC", Offset = "0x21D91EC", VA = "0x21D91EC")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x21D91F0", Offset = "0x21D91F0", VA = "0x21D91F0")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x21D93D4", Offset = "0x21D93D4", VA = "0x21D93D4")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x21D95B8", Offset = "0x21D95B8", VA = "0x21D95B8")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x21D97A4", Offset = "0x21D97A4", VA = "0x21D97A4")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x21D9990", Offset = "0x21D9990", VA = "0x21D9990")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x21D9B74", Offset = "0x21D9B74", VA = "0x21D9B74")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x21D9D60", Offset = "0x21D9D60", VA = "0x21D9D60")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x21D9FB8", Offset = "0x21D9FB8", VA = "0x21D9FB8")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x21DA208", Offset = "0x21DA208", VA = "0x21DA208")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x21DA3EC", Offset = "0x21DA3EC", VA = "0x21DA3EC")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x21DA644", Offset = "0x21DA644", VA = "0x21DA644")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x21DA828", Offset = "0x21DA828", VA = "0x21DA828")]
		public static bool UPvr_SetExtraLatencyMode(ExtraLatencyMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x21DA82C", Offset = "0x21DA82C", VA = "0x21DA82C")]
		public static float UPvr_GetPredictedDisplayTime()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000198")]
	public struct BoundarySystem
	{
		[Token(Token = "0x2000496")]
		public enum BoundaryType
		{
			[Token(Token = "0x4001E5E")]
			OuterBoundary,
			[Token(Token = "0x4001E5F")]
			PlayArea
		}

		[Token(Token = "0x2000497")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x2000498")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x4001E65")]
			HandLeft,
			[Token(Token = "0x4001E66")]
			HandRight,
			[Token(Token = "0x4001E67")]
			Head
		}

		[Token(Token = "0x2000499")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x4001E69")]
			LostNoReason = 3,
			[Token(Token = "0x4001E6A")]
			LostCamera,
			[Token(Token = "0x4001E6B")]
			LostHighLight,
			[Token(Token = "0x4001E6C")]
			LostLowLight,
			[Token(Token = "0x4001E6D")]
			LostLowFeatureCount,
			[Token(Token = "0x4001E6E")]
			LostReLocation,
			[Token(Token = "0x4001E6F")]
			LostInitialization,
			[Token(Token = "0x4001E70")]
			LostNoCamera,
			[Token(Token = "0x4001E71")]
			LostNoIMU,
			[Token(Token = "0x4001E72")]
			LostIMUJitter,
			[Token(Token = "0x4001E73")]
			LostUnknown
		}

		[Token(Token = "0x4000C99")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x21CA174", Offset = "0x21CA174", VA = "0x21CA174")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x21CA1E4", Offset = "0x21CA1E4", VA = "0x21CA1E4")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x21CA258", Offset = "0x21CA258", VA = "0x21CA258")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x21CA2D8", Offset = "0x21CA2D8", VA = "0x21CA2D8")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x21CA34C", Offset = "0x21CA34C", VA = "0x21CA34C")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x21CA3C8", Offset = "0x21CA3C8", VA = "0x21CA3C8")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x21CA444", Offset = "0x21CA444", VA = "0x21CA444")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x21CA4C0", Offset = "0x21CA4C0", VA = "0x21CA4C0")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x21CA5C4", Offset = "0x21CA5C4", VA = "0x21CA5C4")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x21CA6EC", Offset = "0x21CA6EC", VA = "0x21CA6EC")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x21CA778", Offset = "0x21CA778", VA = "0x21CA778")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x21CA820", Offset = "0x21CA820", VA = "0x21CA820")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x21CA89C", Offset = "0x21CA89C", VA = "0x21CA89C")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x21CA91C", Offset = "0x21CA91C", VA = "0x21CA91C")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x21CA998", Offset = "0x21CA998", VA = "0x21CA998")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x21CAA20", Offset = "0x21CAA20", VA = "0x21CAA20")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x21CAAB8", Offset = "0x21CAAB8", VA = "0x21CAAB8")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x21CAB38", Offset = "0x21CAB38", VA = "0x21CAB38")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x21CABC8", Offset = "0x21CABC8", VA = "0x21CABC8")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x21CAC48", Offset = "0x21CAC48", VA = "0x21CAC48")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x21CACBC", Offset = "0x21CACBC", VA = "0x21CACBC")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x21CACC0", Offset = "0x21CACC0", VA = "0x21CACC0")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x21CACC4", Offset = "0x21CACC4", VA = "0x21CACC4")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x21CACCC", Offset = "0x21CACCC", VA = "0x21CACCC")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x21CACD0", Offset = "0x21CACD0", VA = "0x21CACD0")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x21CACD4", Offset = "0x21CACD4", VA = "0x21CACD4")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x21CACD8", Offset = "0x21CACD8", VA = "0x21CACD8")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x21CACDC", Offset = "0x21CACDC", VA = "0x21CACDC")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x21CAE20", Offset = "0x21CAE20", VA = "0x21CAE20")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x21CAF70", Offset = "0x21CAF70", VA = "0x21CAF70")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x21CB14C", Offset = "0x21CB14C", VA = "0x21CB14C")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x21CB1A8", Offset = "0x21CB1A8", VA = "0x21CB1A8")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x21CB1AC", Offset = "0x21CB1AC", VA = "0x21CB1AC")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x21CB1B4", Offset = "0x21CB1B4", VA = "0x21CB1B4")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x21CB1B8", Offset = "0x21CB1B8", VA = "0x21CB1B8")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x21CB1C0", Offset = "0x21CB1C0", VA = "0x21CB1C0")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x21CB1C4", Offset = "0x21CB1C4", VA = "0x21CB1C4")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x21CB308", Offset = "0x21CB308", VA = "0x21CB308")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x21CB44C", Offset = "0x21CB44C", VA = "0x21CB44C")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x21CB62C", Offset = "0x21CB62C", VA = "0x21CB62C")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x21CB764", Offset = "0x21CB764", VA = "0x21CB764")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x21CB888", Offset = "0x21CB888", VA = "0x21CB888")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x21CB9AC", Offset = "0x21CB9AC", VA = "0x21CB9AC")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000199")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x21D1960", Offset = "0x21D1960", VA = "0x21D1960")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x21D1C7C", Offset = "0x21D1C7C", VA = "0x21D1C7C")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x21D1FE4", Offset = "0x21D1FE4", VA = "0x21D1FE4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD92B64", Offset = "0xD92B64")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x21D22C4", Offset = "0x21D22C4", VA = "0x21D22C4")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x21D25B8", Offset = "0x21D25B8", VA = "0x21D25B8")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x21D28AC", Offset = "0x21D28AC", VA = "0x21D28AC")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200019A")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4000C9B")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x4000C9C")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x200019B")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4000C9E")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4000C9F")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4000CA0")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4000CA1")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4000CA2")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x200019C")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4000CA3")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x21DC9BC", Offset = "0x21DC9BC", VA = "0x21DC9BC")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x21DCA4C", Offset = "0x21DCA4C", VA = "0x21DCA4C")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x21DCAC8", Offset = "0x21DCAC8", VA = "0x21DCAC8")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x21DCB3C", Offset = "0x21DCB3C", VA = "0x21DCB3C")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x21DCBC4", Offset = "0x21DCBC4", VA = "0x21DCBC4")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x21DCBC8", Offset = "0x21DCBC8", VA = "0x21DCBC8")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x21DCBCC", Offset = "0x21DCBCC", VA = "0x21DCBCC")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x21DCBD0", Offset = "0x21DCBD0", VA = "0x21DCBD0")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x21DCE58", Offset = "0x21DCE58", VA = "0x21DCE58")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x21DD074", Offset = "0x21DD074", VA = "0x21DD074")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x21DD274", Offset = "0x21DD274", VA = "0x21DD274")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x21DD4A4", Offset = "0x21DD4A4", VA = "0x21DD4A4")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x21DD5F8", Offset = "0x21DD5F8", VA = "0x21DD5F8")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x21DD728", Offset = "0x21DD728", VA = "0x21DD728")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x21DD928", Offset = "0x21DD928", VA = "0x21DD928")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x21DDBF0", Offset = "0x21DDBF0", VA = "0x21DDBF0")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x21DDE24", Offset = "0x21DDE24", VA = "0x21DDE24")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x21DCC08", Offset = "0x21DCC08", VA = "0x21DCC08")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x21DCE78", Offset = "0x21DCE78", VA = "0x21DCE78")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x21DD078", Offset = "0x21DD078", VA = "0x21DD078")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x21DD278", Offset = "0x21DD278", VA = "0x21DD278")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x21DE010", Offset = "0x21DE010", VA = "0x21DE010")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x21DE244", Offset = "0x21DE244", VA = "0x21DE244")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x21DE430", Offset = "0x21DE430", VA = "0x21DE430")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x21DE618", Offset = "0x21DE618", VA = "0x21DE618")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x21DE800", Offset = "0x21DE800", VA = "0x21DE800")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x21DE9D8", Offset = "0x21DE9D8", VA = "0x21DE9D8")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x21DEBB0", Offset = "0x21DEBB0", VA = "0x21DEBB0")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x21DED80", Offset = "0x21DED80", VA = "0x21DED80")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x21DED88", Offset = "0x21DED88", VA = "0x21DED88")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x21DD5FC", Offset = "0x21DD5FC", VA = "0x21DD5FC")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x21DD4A8", Offset = "0x21DD4A8", VA = "0x21DD4A8")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x200019D")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x21C3EAC", Offset = "0x21C3EAC", VA = "0x21C3EAC")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x21C3F14", Offset = "0x21C3F14", VA = "0x21C3F14")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x21C3F18", Offset = "0x21C3F18", VA = "0x21C3F18")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x21C40B0", Offset = "0x21C40B0", VA = "0x21C40B0")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x21C4224", Offset = "0x21C4224", VA = "0x21C4224")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public static class Achievements
	{
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x21C428C", Offset = "0x21C428C", VA = "0x21C428C")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x21C4844", Offset = "0x21C4844", VA = "0x21C4844")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x21C4AE0", Offset = "0x21C4AE0", VA = "0x21C4AE0")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x21C4D5C", Offset = "0x21C4D5C", VA = "0x21C4D5C")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x21C4FDC", Offset = "0x21C4FDC", VA = "0x21C4FDC")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x21C51E0", Offset = "0x21C51E0", VA = "0x21C51E0")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x21C5468", Offset = "0x21C5468", VA = "0x21C5468")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x21C56A8", Offset = "0x21C56A8", VA = "0x21C56A8")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x21C58E8", Offset = "0x21C58E8", VA = "0x21C58E8")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x21C5C84", Offset = "0x21C5C84", VA = "0x21C5C84")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200019F")]
	public enum AchievementType
	{
		[Token(Token = "0x4000CAB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xD84D04", Offset = "0xD84D04")]
		Unknown,
		[Token(Token = "0x4000CAC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xD84D3C", Offset = "0xD84D3C")]
		Simple,
		[Token(Token = "0x4000CAD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xD84D74", Offset = "0xD84D74")]
		Bitfield,
		[Token(Token = "0x4000CAE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xD84DAC", Offset = "0xD84DAC")]
		Count
	}
	[Token(Token = "0x20001A0")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x21C4394", Offset = "0x21C4394", VA = "0x21C4394")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x21C3F74", Offset = "0x21C3F74", VA = "0x21C3F74")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x21C410C", Offset = "0x21C410C", VA = "0x21C410C")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x21C66DC", Offset = "0x21C66DC", VA = "0x21C66DC")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x21C67FC", Offset = "0x21C67FC", VA = "0x21C67FC")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x21C68F0", Offset = "0x21C68F0", VA = "0x21C68F0")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x21C69E4", Offset = "0x21C69E4", VA = "0x21C69E4")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x21C4964", Offset = "0x21C4964", VA = "0x21C4964")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x21C4C00", Offset = "0x21C4C00", VA = "0x21C4C00")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x21C4E64", Offset = "0x21C4E64", VA = "0x21C4E64")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x21C50E4", Offset = "0x21C50E4", VA = "0x21C50E4")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x21C52F8", Offset = "0x21C52F8", VA = "0x21C52F8")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x21C5580", Offset = "0x21C5580", VA = "0x21C5580")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x21C57C0", Offset = "0x21C57C0", VA = "0x21C57C0")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x21C5A60", Offset = "0x21C5A60", VA = "0x21C5A60")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x21C6AD8", Offset = "0x21C6AD8", VA = "0x21C6AD8")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x21C6C7C", Offset = "0x21C6C7C", VA = "0x21C6C7C")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x21C6D74", Offset = "0x21C6D74", VA = "0x21C6D74")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x21C65E4", Offset = "0x21C65E4", VA = "0x21C65E4")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x21C6E6C", Offset = "0x21C6E6C", VA = "0x21C6E6C")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x21C6F60", Offset = "0x21C6F60", VA = "0x21C6F60")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x21C7054", Offset = "0x21C7054", VA = "0x21C7054")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x21C7148", Offset = "0x21C7148", VA = "0x21C7148")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x21C7290", Offset = "0x21C7290", VA = "0x21C7290")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x21C7384", Offset = "0x21C7384", VA = "0x21C7384")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x21C7478", Offset = "0x21C7478", VA = "0x21C7478")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x21C756C", Offset = "0x21C756C", VA = "0x21C756C")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x21C7660", Offset = "0x21C7660", VA = "0x21C7660")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x21C7754", Offset = "0x21C7754", VA = "0x21C7754")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x21C7884", Offset = "0x21C7884", VA = "0x21C7884")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x21C78F4", Offset = "0x21C78F4", VA = "0x21C78F4")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x21C79E8", Offset = "0x21C79E8", VA = "0x21C79E8")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x21C7B30", Offset = "0x21C7B30", VA = "0x21C7B30")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x21C7C24", Offset = "0x21C7C24", VA = "0x21C7C24")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x21C7DCC", Offset = "0x21C7DCC", VA = "0x21C7DCC")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x21C7EC0", Offset = "0x21C7EC0", VA = "0x21C7EC0")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x21C7FB4", Offset = "0x21C7FB4", VA = "0x21C7FB4")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x21C80A8", Offset = "0x21C80A8", VA = "0x21C80A8")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x21C819C", Offset = "0x21C819C", VA = "0x21C819C")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x21C8290", Offset = "0x21C8290", VA = "0x21C8290")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x21C8384", Offset = "0x21C8384", VA = "0x21C8384")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x21C8478", Offset = "0x21C8478", VA = "0x21C8478")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x21C856C", Offset = "0x21C856C", VA = "0x21C856C")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x21C8660", Offset = "0x21C8660", VA = "0x21C8660")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x21C8964", Offset = "0x21C8964", VA = "0x21C8964")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x21C5F40", Offset = "0x21C5F40", VA = "0x21C5F40")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x21C8A58", Offset = "0x21C8A58", VA = "0x21C8A58")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x21C61C4", Offset = "0x21C61C4", VA = "0x21C61C4")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x21C6448", Offset = "0x21C6448", VA = "0x21C6448")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xD7E0E0", Offset = "0xD7E0E0")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x17000203")]
		public int Count
		{
			[Token(Token = "0x6000ED4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000204")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000ED5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000205")]
		public T Item
		{
			[Token(Token = "0x6000ED7")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000ED8")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000EE3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000207")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000EE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000208")]
		public string NextUrl
		{
			[Token(Token = "0x6000EE5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000EE6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED6")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000ED9")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000EDA")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000EDB")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDC")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000EDD")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000EDE")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000EDF")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE0")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000EE1")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000EE7")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x200049A")]
		private class RequestCallback
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0x21C90D4", Offset = "0x21C90D4", VA = "0x21C90D4")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x21C90DC", Offset = "0x21C90DC", VA = "0x21C90DC")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x21C9108", Offset = "0x21C9108", VA = "0x21C9108", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x200049B")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6001FFC")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6001FFD")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x21C8B10", Offset = "0x21C8B10", VA = "0x21C8B10")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x21C8C80", Offset = "0x21C8C80", VA = "0x21C8C80")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x21C8EFC", Offset = "0x21C8EFC", VA = "0x21C8EFC")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x21C8F94", Offset = "0x21C8F94", VA = "0x21C8F94")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x21C8D5C", Offset = "0x21C8D5C", VA = "0x21C8D5C")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class Pvr_CallbackRunner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x21C94AC", Offset = "0x21C94AC", VA = "0x21C94AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x21C95A8", Offset = "0x21C95A8", VA = "0x21C95A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x21C9634", Offset = "0x21C9634", VA = "0x21C9634")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x21C9690", Offset = "0x21C9690", VA = "0x21C9690")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x200049C")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x1700020A")]
		public T Data
		{
			[Token(Token = "0x6000EF3")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000EF2")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000EF4")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x20001AA")]
	public class Pvr_Message
	{
		[Token(Token = "0x200049D")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x200049E")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001E77")]
			Unknown = 0u,
			[Token(Token = "0x4001E78")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4001E79")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4001E7A")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4001E7B")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4001E7C")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4001E7D")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4001E7E")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4001E7F")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4001E80")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4001E81")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x4001E82")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x200049F")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD84DE4", Offset = "0xD84DE4")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x1700020B")]
		public MessageType Type
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x21C9890", Offset = "0x21C9890", VA = "0x21C9890")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x1700020C")]
		public bool IsError
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x21C9898", Offset = "0x21C9898", VA = "0x21C9898")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020D")]
		public long RequestID
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x21C98A8", Offset = "0x21C98A8", VA = "0x21C98A8")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700020E")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x21C9ACC", Offset = "0x21C9ACC", VA = "0x21C9ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92BAC", Offset = "0xD92BAC")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x21C9A78", Offset = "0x21C9A78", VA = "0x21C9A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92B9C", Offset = "0xD92B9C")]
			set
			{
			}
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x21C96A0", Offset = "0x21C96A0", VA = "0x21C96A0")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x21C98B0", Offset = "0x21C98B0", VA = "0x21C98B0", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x21C98B8", Offset = "0x21C98B8", VA = "0x21C98B8", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x21C98C0", Offset = "0x21C98C0", VA = "0x21C98C0", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x21C98C8", Offset = "0x21C98C8", VA = "0x21C98C8", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x21C98D0", Offset = "0x21C98D0", VA = "0x21C98D0", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x21C98D8", Offset = "0x21C98D8", VA = "0x21C98D8")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x21C8CFC", Offset = "0x21C8CFC", VA = "0x21C8CFC")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20001AB")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x21C5E3C", Offset = "0x21C5E3C", VA = "0x21C5E3C")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x21C5E9C", Offset = "0x21C5E9C", VA = "0x21C5E9C", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x21C5EE0", Offset = "0x21C5EE0", VA = "0x21C5EE0", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AC")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x21C60C0", Offset = "0x21C60C0", VA = "0x21C60C0")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x21C6120", Offset = "0x21C6120", VA = "0x21C6120", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x21C6164", Offset = "0x21C6164", VA = "0x21C6164", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AD")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x21C6344", Offset = "0x21C6344", VA = "0x21C6344")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x21C63A4", Offset = "0x21C63A4", VA = "0x21C63A4", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x21C63E8", Offset = "0x21C63E8", VA = "0x21C63E8", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AE")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x21C64DC", Offset = "0x21C64DC", VA = "0x21C64DC")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x21C653C", Offset = "0x21C653C", VA = "0x21C653C", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x21C6580", Offset = "0x21C6580", VA = "0x21C6580", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AF")]
	public class Error
	{
		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x21C5DFC", Offset = "0x21C5DFC", VA = "0x21C5DFC")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x6000F0F")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x6000F10")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000F11")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class Request
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD84DF4", Offset = "0xD84DF4")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x1700020F")]
		public long RequestID
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x21CA054", Offset = "0x21CA054", VA = "0x21CA054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92BBC", Offset = "0xD92BBC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x21CA05C", Offset = "0x21CA05C", VA = "0x21CA05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92BCC", Offset = "0xD92BCC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x21CA028", Offset = "0x21CA028", VA = "0x21CA028")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x21CA064", Offset = "0x21CA064", VA = "0x21CA064")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x21CA0E0", Offset = "0x21CA0E0", VA = "0x21CA0E0", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x21C95B0", Offset = "0x21C95B0", VA = "0x21C95B0")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace UnityEngine.UI.Michsky.UI.ModernUIPack
{
	[Token(Token = "0x20001B2")]
	public class UIGradient : BaseMeshEffect
	{
		[Token(Token = "0x20004A0")]
		public enum Type
		{
			[Token(Token = "0x4001E84")]
			Horizontal,
			[Token(Token = "0x4001E85")]
			Vertical,
			[Token(Token = "0x4001E86")]
			Radial,
			[Token(Token = "0x4001E87")]
			Diamond
		}

		[Token(Token = "0x20004A1")]
		public enum Blend
		{
			[Token(Token = "0x4001E89")]
			Override,
			[Token(Token = "0x4001E8A")]
			Add,
			[Token(Token = "0x4001E8B")]
			Multiply
		}

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84E04", Offset = "0xD84E04")]
		[SerializeField]
		private Gradient _effectGradient;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84E50", Offset = "0xD84E50")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD84EAC", Offset = "0xD84EAC")]
		private float _offset;

		[Token(Token = "0x17000210")]
		public Blend BlendMode
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x2403CB4", Offset = "0x2403CB4", VA = "0x2403CB4")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x2403CBC", Offset = "0x2403CBC", VA = "0x2403CBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public Gradient EffectGradient
		{
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x2403CEC", Offset = "0x2403CEC", VA = "0x2403CEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x2403CF4", Offset = "0x2403CF4", VA = "0x2403CF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public Type GradientType
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x2403D24", Offset = "0x2403D24", VA = "0x2403D24")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x2403D2C", Offset = "0x2403D2C", VA = "0x2403D2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public float Offset
		{
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0x2403D5C", Offset = "0x2403D5C", VA = "0x2403D5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0x2403D64", Offset = "0x2403D64", VA = "0x2403D64")]
			set
			{
			}
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x2403D94", Offset = "0x2403D94", VA = "0x2403D94", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x2404DA0", Offset = "0x2404DA0", VA = "0x2404DA0")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x2404DF8", Offset = "0x2404DF8", VA = "0x2404DF8")]
		public UIGradient()
		{
		}
	}
}
namespace Michsky.UI.ModernUIPack
{
	[Token(Token = "0x20001B3")]
	public class AnimatedIconHandler : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x20004A2")]
		public enum PlayType
		{
			[Token(Token = "0x4001E8D")]
			CLICK,
			[Token(Token = "0x4001E8E")]
			ON_POINTER_ENTER
		}

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84EEC", Offset = "0xD84EEC")]
		public PlayType playType;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator iconAnimator;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Button eventButton;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isClicked;

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x15C4218", Offset = "0x15C4218", VA = "0x15C4218")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x15C4308", Offset = "0x15C4308", VA = "0x15C4308")]
		public void ClickEvent()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x15C4394", Offset = "0x15C4394", VA = "0x15C4394", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x15C4408", Offset = "0x15C4408", VA = "0x15C4408", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x15C447C", Offset = "0x15C447C", VA = "0x15C447C")]
		public AnimatedIconHandler()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class ButtonManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84F24", Offset = "0xD84F24")]
		public string buttonText;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84F5C", Offset = "0xD84F5C")]
		public bool useCustomContent;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI normalText;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI highlightedText;

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x15C4484", Offset = "0x15C4484", VA = "0x15C4484")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x15C459C", Offset = "0x15C459C", VA = "0x15C459C")]
		public ButtonManager()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class ButtonManagerBasic : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84F94", Offset = "0xD84F94")]
		public string buttonText;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD84FCC", Offset = "0xD84FCC")]
		public bool useCustomContent;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI normalText;

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x15C45F4", Offset = "0x15C45F4", VA = "0x15C45F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x15C46A8", Offset = "0x15C46A8", VA = "0x15C46A8")]
		public ButtonManagerBasic()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class ButtonManagerBasicIcon : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85004", Offset = "0xD85004")]
		public Sprite buttonIcon;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8503C", Offset = "0xD8503C")]
		public bool useCustomContent;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image normalIcon;

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x15C4700", Offset = "0x15C4700", VA = "0x15C4700")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x15C47AC", Offset = "0x15C47AC", VA = "0x15C47AC")]
		public ButtonManagerBasicIcon()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class ButtonManagerBasicWithIcon : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85074", Offset = "0xD85074")]
		public Sprite buttonIcon;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buttonText;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD850AC", Offset = "0xD850AC")]
		public bool useCustomContent;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image normalImage;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI normalText;

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x15C47B4", Offset = "0x15C47B4", VA = "0x15C47B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x15C48CC", Offset = "0x15C48CC", VA = "0x15C48CC")]
		public ButtonManagerBasicWithIcon()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class ButtonManagerIcon : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD850E4", Offset = "0xD850E4")]
		public Sprite buttonIcon;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8511C", Offset = "0xD8511C")]
		public bool useCustomContent;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image normalIcon;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image highlightedIcon;

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x15C4924", Offset = "0x15C4924", VA = "0x15C4924")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x15C4A2C", Offset = "0x15C4A2C", VA = "0x15C4A2C")]
		public ButtonManagerIcon()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class ButtonManagerWithIcon : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85154", Offset = "0xD85154")]
		public Sprite buttonIcon;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buttonText;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8518C", Offset = "0xD8518C")]
		public bool useCustomContent;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image normalIcon;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image highlightedIcon;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI normalText;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI highlightedText;

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x15C4A34", Offset = "0x15C4A34", VA = "0x15C4A34")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x15C4BFC", Offset = "0x15C4BFC", VA = "0x15C4BFC")]
		public void SetText(string newText)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x15C4C50", Offset = "0x15C4C50", VA = "0x15C4C50")]
		public ButtonManagerWithIcon()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class DemoManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD851C4", Offset = "0xD851C4")]
		public List<GameObject> panels;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD851FC", Offset = "0xD851FC")]
		public List<GameObject> buttons;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string panelFadeIn;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string panelFadeOut;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string buttonFadeIn;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string buttonFadeOut;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject currentPanel;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject nextPanel;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject currentButton;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject nextButton;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85234", Offset = "0xD85234")]
		public Scrollbar listScrollbar;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator currentPanelAnimator;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator nextPanelAnimator;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Animator currentButtonAnimator;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator nextButtonAnimator;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public int currentPanelIndex;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public int currentButtonlIndex;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public float animValue;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public bool enabeScrolling;

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x13CB504", Offset = "0x13CB504", VA = "0x13CB504")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x13CB5F4", Offset = "0x13CB5F4", VA = "0x13CB5F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x13CB70C", Offset = "0x13CB70C", VA = "0x13CB70C")]
		public void EnableScrolling()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x13CB718", Offset = "0x13CB718", VA = "0x13CB718")]
		public void DisableScrolling()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x13CB720", Offset = "0x13CB720", VA = "0x13CB720")]
		public void PanelAnim(int newPanel)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x13CB960", Offset = "0x13CB960", VA = "0x13CB960")]
		public DemoManager()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class DemoScrollForMore : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD852AC", Offset = "0xD852AC")]
		public Scrollbar listScrollbar;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator SFMAnimator;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD852E4", Offset = "0xD852E4")]
		public float fadeOutValue;

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x13CBA38", Offset = "0x13CBA38", VA = "0x13CBA38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x13CBABC", Offset = "0x13CBABC", VA = "0x13CBABC")]
		public DemoScrollForMore()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class DemoScrollManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8531C", Offset = "0xD8531C")]
		public DemoManager panelManager;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float topValue;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float bottomValue;

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x13CBAC4", Offset = "0x13CBAC4", VA = "0x13CBAC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x13CBB6C", Offset = "0x13CBB6C", VA = "0x13CBB6C")]
		public void GoToPanel(float panelValue)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x13CBB98", Offset = "0x13CBB98", VA = "0x13CBB98")]
		public DemoScrollManager()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class DemoTopButton : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator buttonAnimator;

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x13CBBA0", Offset = "0x13CBBA0", VA = "0x13CBBA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x13CBBF8", Offset = "0x13CBBF8", VA = "0x13CBBF8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x13CBCFC", Offset = "0x13CBCFC", VA = "0x13CBCFC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x13CBE00", Offset = "0x13CBE00", VA = "0x13CBE00")]
		public DemoTopButton()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class DemoTopListShadow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Scrollbar listScrollbar;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isRight;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool enableAnim;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator shadowAnimator;

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x13CBE08", Offset = "0x13CBE08", VA = "0x13CBE08")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x13CBEB4", Offset = "0x13CBEB4", VA = "0x13CBEB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x13CC134", Offset = "0x13CC134", VA = "0x13CC134")]
		public void ScrollUp()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x13CC140", Offset = "0x13CC140", VA = "0x13CC140")]
		public void ScrollDown()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x13CC14C", Offset = "0x13CC14C", VA = "0x13CC14C")]
		public DemoTopListShadow()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class LaunchURL : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string URL;

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x13CE908", Offset = "0x13CE908", VA = "0x13CE908")]
		public void urlLinkOrWeb()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x13CE914", Offset = "0x13CE914", VA = "0x13CE914")]
		public LaunchURL()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class CustomDropdown : UnityEngine.MonoBehaviour, IPointerExitHandler, IEventSystemHandler
	{
		[Token(Token = "0x20004A3")]
		public enum AnimationType
		{
			[Token(Token = "0x4001E90")]
			FADING,
			[Token(Token = "0x4001E91")]
			SLIDING,
			[Token(Token = "0x4001E92")]
			STYLISH
		}

		[Serializable]
		[Token(Token = "0x20004A4")]
		public class Item
		{
			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sprite itemIcon;

			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent OnItemSelection;

			[Token(Token = "0x600200A")]
			[Address(RVA = "0x15C5A40", Offset = "0x15C5A40", VA = "0x15C5A40")]
			public Item()
			{
			}
		}

		[Token(Token = "0x20004A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80B44", Offset = "0xD80B44")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomDropdown <>4__this;

			[Token(Token = "0x600200B")]
			[Address(RVA = "0x15C5660", Offset = "0x15C5660", VA = "0x15C5660")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x600200C")]
			[Address(RVA = "0x15C5B30", Offset = "0x15C5B30", VA = "0x15C5B30")]
			internal void <SetupDropdown>b__0()
			{
			}
		}

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85354", Offset = "0xD85354")]
		public GameObject triggerObject;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI selectedText;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image selectedImage;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform itemParent;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject itemObject;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject scrollbar;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VerticalLayoutGroup itemList;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform currentListParent;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform listParent;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8538C", Offset = "0xD8538C")]
		public bool enableIcon;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableTrigger;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool enableScrollbar;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool setHighPriorty;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool outOnPointerExit;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool isListItem;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool invokeAtStart;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationType animationType;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int selectedItemIndex;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD853C4", Offset = "0xD853C4")]
		public bool saveSelected;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD853FC", Offset = "0xD853FC")]
		public string dropdownTag;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85434", Offset = "0xD85434")]
		public List<Item> dropdownItems;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator dropdownAnimator;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TextMeshProUGUI setItemText;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Image setItemImage;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Sprite imageHelper;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string textHelper;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string newItemTitle;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Sprite newItemIcon;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isOn;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public int index;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public int siblingIndex;

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x15C4CA8", Offset = "0x15C4CA8", VA = "0x15C4CA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x15C4EA4", Offset = "0x15C4EA4", VA = "0x15C4EA4")]
		public void SetupDropdown()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x15C5570", Offset = "0x15C5570", VA = "0x15C5570")]
		public void ChangeDropdownInfo(int itemIndex)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x15C5668", Offset = "0x15C5668", VA = "0x15C5668")]
		public void Animate()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x15C5898", Offset = "0x15C5898", VA = "0x15C5898", Slot = "4")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x15C5910", Offset = "0x15C5910", VA = "0x15C5910")]
		public void UpdateValues()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x15C59B0", Offset = "0x15C59B0", VA = "0x15C59B0")]
		public void CreateNewItem()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x15C5A98", Offset = "0x15C5A98", VA = "0x15C5A98")]
		public void SetItemTitle(string title)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x15C5AA0", Offset = "0x15C5AA0", VA = "0x15C5AA0")]
		public void SetItemIcon(Sprite icon)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x15C5AA8", Offset = "0x15C5AA8", VA = "0x15C5AA8")]
		public CustomDropdown()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class DropdownMultiSelect : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004A6")]
		public class ToggleEvent : UnityEvent<bool>
		{
			[Token(Token = "0x600200D")]
			[Address(RVA = "0x13CCEF8", Offset = "0x13CCEF8", VA = "0x13CCEF8")]
			public ToggleEvent()
			{
			}
		}

		[Token(Token = "0x20004A7")]
		public enum AnimationType
		{
			[Token(Token = "0x4001E99")]
			FADING,
			[Token(Token = "0x4001E9A")]
			SLIDING,
			[Token(Token = "0x4001E9B")]
			STYLISH
		}

		[Serializable]
		[Token(Token = "0x20004A8")]
		public class Item
		{
			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isOn;

			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public ToggleEvent toggleEvents;

			[Token(Token = "0x600200E")]
			[Address(RVA = "0x13CCE10", Offset = "0x13CCE10", VA = "0x13CCE10")]
			public Item()
			{
			}
		}

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD854A0", Offset = "0xD854A0")]
		public GameObject triggerObject;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform itemParent;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemObject;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject scrollbar;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VerticalLayoutGroup itemList;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform currentListParent;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform listParent;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD854D8", Offset = "0xD854D8")]
		public bool enableIcon;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool enableTrigger;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool enableScrollbar;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool setHighPriorty;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool outOnPointerExit;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool isListItem;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationType animationType;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85510", Offset = "0xD85510")]
		public bool saveSelected;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool invokeAtStart;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string toggleTag;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85548", Offset = "0xD85548")]
		public List<Item> dropdownItems;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator dropdownAnimator;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TextMeshProUGUI setItemText;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string textHelper;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string newItemTitle;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Sprite newItemIcon;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isOn;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public int iHelper;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public int siblingIndex;

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x13CC154", Offset = "0x13CC154", VA = "0x13CC154")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x13CC2AC", Offset = "0x13CC2AC", VA = "0x13CC2AC")]
		public void SetupDropdown()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x13CC9A0", Offset = "0x13CC9A0", VA = "0x13CC9A0")]
		public void UpdateToggle(bool isOn)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x13CC9A4", Offset = "0x13CC9A4", VA = "0x13CC9A4")]
		public void SaveToggle(bool isOn)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x13CCA70", Offset = "0x13CCA70", VA = "0x13CCA70")]
		public void Animate()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x13CCCA0", Offset = "0x13CCCA0", VA = "0x13CCCA0")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x13CCD18", Offset = "0x13CCD18", VA = "0x13CCD18")]
		public void UpdateValues()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x13CCD88", Offset = "0x13CCD88", VA = "0x13CCD88")]
		public void CreateNewItem()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x13CCE68", Offset = "0x13CCE68", VA = "0x13CCE68")]
		public void SetItemTitle(string title)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x13CCE70", Offset = "0x13CCE70", VA = "0x13CCE70")]
		public DropdownMultiSelect()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class LayoutGroupPositionFix : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80B54", Offset = "0xD80B54")]
		private sealed class <ExecuteAfterTime>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LayoutGroupPositionFix <>4__this;

			[Token(Token = "0x170003D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002012")]
				[Address(RVA = "0x13CEB78", Offset = "0x13CEB78", VA = "0x13CEB78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002014")]
				[Address(RVA = "0x13CEBE0", Offset = "0x13CEBE0", VA = "0x13CEBE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600200F")]
			[Address(RVA = "0x13CEA20", Offset = "0x13CEA20", VA = "0x13CEA20")]
			[DebuggerHidden]
			public <ExecuteAfterTime>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002010")]
			[Address(RVA = "0x13CEA54", Offset = "0x13CEA54", VA = "0x13CEA54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002011")]
			[Address(RVA = "0x13CEA58", Offset = "0x13CEA58", VA = "0x13CEA58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002013")]
			[Address(RVA = "0x13CEB80", Offset = "0x13CEB80", VA = "0x13CEB80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LayoutGroup lg;

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x13CE91C", Offset = "0x13CE91C", VA = "0x13CE91C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x13CE9A0", Offset = "0x13CE9A0", VA = "0x13CE9A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD92BDC", Offset = "0xD92BDC")]
		private IEnumerator ExecuteAfterTime(float time)
		{
			return null;
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x13CEA4C", Offset = "0x13CEA4C", VA = "0x13CEA4C")]
		public LayoutGroupPositionFix()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class UIElementInFront : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x13D1F60", Offset = "0x13D1F60", VA = "0x13D1F60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x13D1F84", Offset = "0x13D1F84", VA = "0x13D1F84")]
		public UIElementInFront()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class HorizontalSelector : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004AA")]
		public class Item
		{
			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemTitle;

			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent onValueChanged;

			[Token(Token = "0x6002015")]
			[Address(RVA = "0x13CE1EC", Offset = "0x13CE1EC", VA = "0x13CE1EC")]
			public Item()
			{
			}
		}

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI label;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI labeHelper;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator selectorAnimator;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string newItemTitle;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD855B4", Offset = "0xD855B4")]
		public int defaultIndex;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool invokeAtStart;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool invertAnimation;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool loopSelection;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int index;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD855FC", Offset = "0xD855FC")]
		public bool saveValue;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string selectorTag;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85634", Offset = "0xD85634")]
		public bool enableIndicators;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform indicatorParent;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject indicatorObject;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8566C", Offset = "0xD8566C")]
		public List<Item> itemList;

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x13CD0BC", Offset = "0x13CD0BC", VA = "0x13CD0BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x13CD754", Offset = "0x13CD754", VA = "0x13CD754")]
		public void PreviousClick()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x13CDC5C", Offset = "0x13CDC5C", VA = "0x13CDC5C")]
		public void ForwardClick()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x13CE160", Offset = "0x13CE160", VA = "0x13CE160")]
		public void CreateNewItem(string title)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x13CE244", Offset = "0x13CE244", VA = "0x13CE244")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x13CE72C", Offset = "0x13CE72C", VA = "0x13CE72C")]
		public HorizontalSelector()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class CustomInputField : UnityEngine.MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD856A4", Offset = "0xD856A4")]
		public GameObject fieldTrigger;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_InputField inputText;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator inputFieldAnimator;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isEmpty;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isClicked;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string inAnim;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string outAnim;

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x15C5C0C", Offset = "0x15C5C0C", VA = "0x15C5C0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x15C5CDC", Offset = "0x15C5CDC", VA = "0x15C5CDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x15C5D44", Offset = "0x15C5D44", VA = "0x15C5D44")]
		public void Animate()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x15C5D90", Offset = "0x15C5D90", VA = "0x15C5D90")]
		public void FieldTrigger()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x15C5DE4", Offset = "0x15C5DE4", VA = "0x15C5DE4", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x15C5DE8", Offset = "0x15C5DE8", VA = "0x15C5DE8")]
		public CustomInputField()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class ModalWindowManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD856DC", Offset = "0xD856DC")]
		public Image windowIcon;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI windowTitle;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI windowDescription;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85714", Offset = "0xD85714")]
		public Sprite icon;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string titleText;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xD8574C", Offset = "0xD8574C")]
		public string descriptionText;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8575C", Offset = "0xD8575C")]
		public bool sharpAnimations;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool useCustomValues;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator mwAnimator;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isOn;

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x13CEBE8", Offset = "0x13CEBE8", VA = "0x13CEBE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x13CECAC", Offset = "0x13CECAC", VA = "0x13CECAC")]
		public void OpenWindow()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x13CED38", Offset = "0x13CED38", VA = "0x13CED38")]
		public void CloseWindow()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x13CEDC0", Offset = "0x13CEDC0", VA = "0x13CEDC0")]
		public void AnimateWindow()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x13CEE80", Offset = "0x13CEE80", VA = "0x13CEE80")]
		public ModalWindowManager()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class ModalWindowTabs : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85794", Offset = "0xD85794")]
		public List<GameObject> panels;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD857CC", Offset = "0xD857CC")]
		public List<GameObject> buttons;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string panelFadeIn;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string panelFadeOut;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string buttonFadeIn;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string buttonFadeOut;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject currentPanel;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject nextPanel;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject currentButton;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject nextButton;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85804", Offset = "0xD85804")]
		public int currentPanelIndex;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int currentButtonlIndex;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator currentPanelAnimator;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator nextPanelAnimator;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Animator currentButtonAnimator;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator nextButtonAnimator;

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x13CEEE8", Offset = "0x13CEEE8", VA = "0x13CEEE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x13CEFD8", Offset = "0x13CEFD8", VA = "0x13CEFD8")]
		public void PanelAnim(int newPanel)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x13CF1CC", Offset = "0x13CF1CC", VA = "0x13CF1CC")]
		public ModalWindowTabs()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class NotificationManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator notificationAnimator;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x13CF29C", Offset = "0x13CF29C", VA = "0x13CF29C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x13CF304", Offset = "0x13CF304", VA = "0x13CF304")]
		public void OpenNotification()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x13CF360", Offset = "0x13CF360", VA = "0x13CF360")]
		public void CloseNotification()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x13CF3BC", Offset = "0x13CF3BC", VA = "0x13CF3BC")]
		public NotificationManager()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class PBFilled : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8583C", Offset = "0xD8583C")]
		public TextMeshProUGUI minLabel;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI maxLabel;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85874", Offset = "0xD85874")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD85874", Offset = "0xD85874")]
		public int transitionAfter;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color minColor;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color maxColor;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ProgressBar progressBar;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator barAnimatior;

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x13CF3C4", Offset = "0x13CF3C4", VA = "0x13CF3C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x13CF490", Offset = "0x13CF490", VA = "0x13CF490")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x13CF578", Offset = "0x13CF578", VA = "0x13CF578")]
		public PBFilled()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class ProgressBar : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD858CC", Offset = "0xD858CC")]
		public Transform loadingBar;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform textPercent;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85904", Offset = "0xD85904")]
		public bool isOn;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool restart;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool invert;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8593C", Offset = "0xD8593C")]
		public float currentPercent;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD85958", Offset = "0xD85958")]
		public int speed;

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x13CF610", Offset = "0x13CF610", VA = "0x13CF610")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x13CF724", Offset = "0x13CF724", VA = "0x13CF724")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x13CF8E8", Offset = "0x13CF8E8", VA = "0x13CF8E8")]
		public ProgressBar()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class DropdownSamples : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85974", Offset = "0xD85974")]
		public CustomDropdown dropdownVariable;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD859AC", Offset = "0xD859AC")]
		public Sprite itemIcon;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string itemName;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD859E4", Offset = "0xD859E4")]
		public List<string> itemList;

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x13CCF48", Offset = "0x13CCF48", VA = "0x13CCF48")]
		public void GenerateItem()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x13CCF88", Offset = "0x13CCF88", VA = "0x13CCF88")]
		public void GenerateListItems()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x13CD04C", Offset = "0x13CD04C", VA = "0x13CD04C")]
		public DropdownSamples()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class HorizontalSelectorSamples : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85A1C", Offset = "0xD85A1C")]
		public HorizontalSelector selectorVariable;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85A54", Offset = "0xD85A54")]
		public string itemName;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85A8C", Offset = "0xD85A8C")]
		public List<string> itemList;

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x13CE7B4", Offset = "0x13CE7B4", VA = "0x13CE7B4")]
		public void GenerateItem()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x13CE7EC", Offset = "0x13CE7EC", VA = "0x13CE7EC")]
		public void GenerateListItems()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x13CE898", Offset = "0x13CE898", VA = "0x13CE898")]
		public HorizontalSelectorSamples()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class RadialSlider : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Serializable]
		[Token(Token = "0x20004AB")]
		public class SliderEvent : UnityEvent<float>
		{
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x13D0160", Offset = "0x13D0160", VA = "0x13D0160")]
			public SliderEvent()
			{
			}
		}

		[Token(Token = "0x4000D9D")]
		private const string PREFS_UI_SAVE_NAME = "Radial";

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85AC4", Offset = "0xD85AC4")]
		public Image sliderImage;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform indicatorPivot;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI valueText;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85AFC", Offset = "0xD85AFC")]
		public string sliderTag;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxValue;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float currentValue;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD85B34", Offset = "0xD85B34")]
		public int decimals;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool isPercent;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool rememberValue;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SliderEvent onValueChanged;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform hitRectTransform;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isPointerDown;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float currentAngle;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float currentAngleOnPointerDown;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float valueDisplayPrecision;

		[Token(Token = "0x17000214")]
		public float SliderAngle
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x13CF8F0", Offset = "0x13CF8F0", VA = "0x13CF8F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x13CF8F8", Offset = "0x13CF8F8", VA = "0x13CF8F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public float SliderValue
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x13CF980", Offset = "0x13CF980", VA = "0x13CF980")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x13CF9E4", Offset = "0x13CF9E4", VA = "0x13CF9E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public float SliderValueRaw
		{
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0x13CF9C8", Offset = "0x13CF9C8", VA = "0x13CF9C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x13CF9FC", Offset = "0x13CF9FC", VA = "0x13CF9FC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x13CFA14", Offset = "0x13CFA14", VA = "0x13CFA14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x13CFB4C", Offset = "0x13CFB4C", VA = "0x13CFB4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x13CFDFC", Offset = "0x13CFDFC", VA = "0x13CFDFC", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x13D002C", Offset = "0x13D002C", VA = "0x13D002C", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x13D00E8", Offset = "0x13D00E8", VA = "0x13D00E8", Slot = "6")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x13CFBE4", Offset = "0x13CFBE4", VA = "0x13CFBE4")]
		public void LoadState()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x13D0074", Offset = "0x13D0074", VA = "0x13D0074")]
		public void SaveState()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x13CFC50", Offset = "0x13CFC50", VA = "0x13CFC50")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x13D0064", Offset = "0x13D0064", VA = "0x13D0064")]
		private bool HasValueChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x13CFE88", Offset = "0x13CFE88", VA = "0x13CFE88")]
		private void HandleSliderMouseInput(PointerEventData eventData, bool allowValueWrap)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x13D00F0", Offset = "0x13D00F0", VA = "0x13D00F0")]
		public RadialSlider()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class RangeMaxSlider : Slider
	{
		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public RangeMinSlider minSlider;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string numberFormat;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float realValue;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private bool assignedRealValue;

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x13D01B0", Offset = "0x13D01B0", VA = "0x13D01B0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x13D01C0", Offset = "0x13D01C0", VA = "0x13D01C0", Slot = "53")]
		protected override void Set(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x13D0414", Offset = "0x13D0414", VA = "0x13D0414")]
		public void Refresh(float input)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x13D0428", Offset = "0x13D0428", VA = "0x13D0428")]
		public RangeMaxSlider()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class RangeMinSlider : Slider
	{
		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85B5C", Offset = "0xD85B5C")]
		public RangeMaxSlider maxSlider;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string numberFormat;

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x13D0430", Offset = "0x13D0430", VA = "0x13D0430", Slot = "53")]
		protected override void Set(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x13D0650", Offset = "0x13D0650", VA = "0x13D0650")]
		public void Refresh(float input)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x13D0664", Offset = "0x13D0664", VA = "0x13D0664")]
		public RangeMinSlider()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class RangeSlider : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85B94", Offset = "0xD85B94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD85B94", Offset = "0xD85B94")]
		public int DecimalPlaces;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minValue;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxValue;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool useWholeNumbers;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool showLabels;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85BE8", Offset = "0xD85BE8")]
		public RangeMinSlider minSlider;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI minSliderLabel;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85C20", Offset = "0xD85C20")]
		public RangeMaxSlider maxSlider;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI maxSliderLabel;

		[Token(Token = "0x17000217")]
		public float CurrentLowerValue
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x13D066C", Offset = "0x13D066C", VA = "0x13D066C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000218")]
		public float CurrentUpperValue
		{
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x13D0690", Offset = "0x13D0690", VA = "0x13D0690")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x13D06AC", Offset = "0x13D06AC", VA = "0x13D06AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x13D085C", Offset = "0x13D085C", VA = "0x13D085C")]
		public RangeSlider()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class SliderManager : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85C58", Offset = "0xD85C58")]
		public TextMeshProUGUI valueText;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI popupValueText;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85C90", Offset = "0xD85C90")]
		public bool enableSaving;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string sliderTag;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float defaultValue;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85CC8", Offset = "0xD85CC8")]
		public bool usePercent;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool showValue;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool showPopupValue;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool useRoundValue;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Slider mainSlider;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator sliderAnimator;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float saveValue;

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x13D0874", Offset = "0x13D0874", VA = "0x13D0874")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x13D0A00", Offset = "0x13D0A00", VA = "0x13D0A00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x13D0E70", Offset = "0x13D0E70", VA = "0x13D0E70", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x13D0EE0", Offset = "0x13D0EE0", VA = "0x13D0EE0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x13D0F50", Offset = "0x13D0F50", VA = "0x13D0F50")]
		public SliderManager()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x13D0FB8", Offset = "0x13D0FB8", VA = "0x13D0FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92C40", Offset = "0xD92C40")]
		private void <Start>b__12_0(float <p0>)
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class SwitchManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85D00", Offset = "0xD85D00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD85D00", Offset = "0xD85D00")]
		public string switchTag;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isOn;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool saveValue;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool invokeAtStart;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnEvents;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OffEvents;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator switchAnimator;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button switchButton;

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x13D1038", Offset = "0x13D1038", VA = "0x13D1038")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x13D12E4", Offset = "0x13D12E4", VA = "0x13D12E4")]
		public void AnimateSwitch()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x13D13F4", Offset = "0x13D13F4", VA = "0x13D13F4")]
		public SwitchManager()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class ToggleAnim : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggleObject;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator toggleAnimator;

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x13D145C", Offset = "0x13D145C", VA = "0x13D145C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x13D1580", Offset = "0x13D1580", VA = "0x13D1580")]
		private void TaskOnClick(bool value)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x13D15F8", Offset = "0x13D15F8", VA = "0x13D15F8")]
		public ToggleAnim()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class TooltipContent : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85D60", Offset = "0xD85D60")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xD85D60", Offset = "0xD85D60")]
		public string description;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85DAC", Offset = "0xD85DAC")]
		public GameObject tooltipObject;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI descriptionText;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator tooltipAnimator;

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x13D1600", Offset = "0x13D1600", VA = "0x13D1600")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x13D17C4", Offset = "0x13D17C4", VA = "0x13D17C4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x13D1894", Offset = "0x13D1894", VA = "0x13D1894", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x13D1948", Offset = "0x13D1948", VA = "0x13D1948")]
		public TooltipContent()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class TooltipManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85DE4", Offset = "0xD85DE4")]
		public GameObject tooltipObject;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject tooltipContent;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85E1C", Offset = "0xD85E1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD85E1C", Offset = "0xD85E1C")]
		public float tooltipSmoothness;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85E74", Offset = "0xD85E74")]
		public int vBorderTop;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int vBorderBottom;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int hBorderLeft;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int hBorderRight;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 uiPos;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 cursorPos;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform tooltipRect;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform tooltipZHelper;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 contentPos;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 tooltipVelocity;

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x13D1950", Offset = "0x13D1950", VA = "0x13D1950")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x13D1A18", Offset = "0x13D1A18", VA = "0x13D1A18")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x13D1B90", Offset = "0x13D1B90", VA = "0x13D1B90")]
		public void CheckForBounds()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x13D1E94", Offset = "0x13D1E94", VA = "0x13D1E94")]
		public TooltipManager()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD7E118", Offset = "0xD7E118")]
	public class UIManager : ScriptableObject
	{
		[Token(Token = "0x20004AC")]
		public enum ButtonThemeType
		{
			[Token(Token = "0x4001EA6")]
			BASIC,
			[Token(Token = "0x4001EA7")]
			CUSTOM
		}

		[Token(Token = "0x20004AD")]
		public enum DropdownThemeType
		{
			[Token(Token = "0x4001EA9")]
			BASIC,
			[Token(Token = "0x4001EAA")]
			CUSTOM
		}

		[Token(Token = "0x20004AE")]
		public enum DropdownAnimationType
		{
			[Token(Token = "0x4001EAC")]
			FADING,
			[Token(Token = "0x4001EAD")]
			SLIDING,
			[Token(Token = "0x4001EAE")]
			STYLISH
		}

		[Token(Token = "0x20004AF")]
		public enum ModalWindowThemeType
		{
			[Token(Token = "0x4001EB0")]
			BASIC,
			[Token(Token = "0x4001EB1")]
			CUSTOM
		}

		[Token(Token = "0x20004B0")]
		public enum NotificationThemeType
		{
			[Token(Token = "0x4001EB3")]
			BASIC,
			[Token(Token = "0x4001EB4")]
			CUSTOM
		}

		[Token(Token = "0x20004B1")]
		public enum SliderThemeType
		{
			[Token(Token = "0x4001EB6")]
			BASIC,
			[Token(Token = "0x4001EB7")]
			CUSTOM
		}

		[Token(Token = "0x20004B2")]
		public enum ToggleThemeType
		{
			[Token(Token = "0x4001EB9")]
			BASIC,
			[Token(Token = "0x4001EBA")]
			CUSTOM
		}

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool enableDynamicUpdate;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool enableExtendedColorPicker;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[HideInInspector]
		public bool editorHints;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color animatedIconColor;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ButtonThemeType buttonThemeType;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_FontAsset buttonFont;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float buttonFontSize;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color buttonBorderColor;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color buttonFilledColor;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color buttonTextBasicColor;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Color buttonTextColor;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color buttonTextHighlightedColor;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color buttonIconBasicColor;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color buttonIconColor;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Color buttonIconHighlightedColor;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TMP_FontAsset dropdownItemFont;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public DropdownThemeType dropdownThemeType;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public DropdownAnimationType dropdownAnimationType;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public TMP_FontAsset dropdownFont;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color dropdownColor;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Color dropdownTextColor;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Color dropdownIconColor;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Color dropdownItemColor;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Color dropdownItemTextColor;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Color dropdownItemIconColor;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public TMP_FontAsset selectorFont;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Color selectorColor;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Color selectorHighlightedColor;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool hSelectorInvertAnimation;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		public bool hSelectorLoopSelection;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TMP_FontAsset inputFieldFont;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Color inputFieldColor;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public TMP_FontAsset modalWindowTitleFont;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public TMP_FontAsset modalWindowContentFont;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public DropdownThemeType modalThemeType;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public Color modalWindowTitleColor;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public Color modalWindowDescriptionColor;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public Color modalWindowIconColor;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public Color modalWindowBackgroundColor;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public Color modalWindowContentPanelColor;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public TMP_FontAsset notificationTitleFont;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public TMP_FontAsset notificationDescriptionFont;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public NotificationThemeType notificationThemeType;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public Color notificationBackgroundColor;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public Color notificationTitleColor;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public Color notificationDescriptionColor;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public Color notificationIconColor;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public TMP_FontAsset progressBarLabelFont;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public Color progressBarColor;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public Color progressBarBackgroundColor;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Color progressBarLoopBackgroundColor;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Color progressBarLabelColor;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public Color scrollbarColor;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public Color scrollbarBackgroundColor;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public TMP_FontAsset sliderLabelFont;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public SliderThemeType sliderThemeType;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public Color sliderColor;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public Color sliderBackgroundColor;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		public Color sliderLabelColor;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		public Color sliderPopupLabelColor;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public Color sliderHandleColor;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		public Color switchBorderColor;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public Color switchBackgroundColor;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public Color switchHandleOnColor;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public Color switchHandleOffColor;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public TMP_FontAsset toggleFont;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public ToggleThemeType toggleThemeType;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public Color toggleTextColor;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public Color toggleBorderColor;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		public Color toggleBackgroundColor;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		public Color toggleCheckColor;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public TMP_FontAsset tooltipFont;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public Color tooltipTextColor;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public Color tooltipBackgroundColor;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x13D1F8C", Offset = "0x13D1F8C", VA = "0x13D1F8C")]
		public UIManager()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[ExecuteInEditMode]
	public class UIManagerAnimatedIcon : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85EDC", Offset = "0xD85EDC")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85F14", Offset = "0xD85F14")]
		public List<GameObject> images;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> imagesWithAlpha;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x13D27E8", Offset = "0x13D27E8", VA = "0x13D27E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x13D2928", Offset = "0x13D2928", VA = "0x13D2928")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x13D2AF0", Offset = "0x13D2AF0", VA = "0x13D2AF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x13D2960", Offset = "0x13D2960", VA = "0x13D2960")]
		private void UpdateAnimatedIcon()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x13D2B90", Offset = "0x13D2B90", VA = "0x13D2B90")]
		public UIManagerAnimatedIcon()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	[ExecuteInEditMode]
	public class UIManagerButton : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004B3")]
		public enum ButtonType
		{
			[Token(Token = "0x4001EBC")]
			BASIC,
			[Token(Token = "0x4001EBD")]
			BASIC_ONLY_ICON,
			[Token(Token = "0x4001EBE")]
			BASIC_WITH_ICON,
			[Token(Token = "0x4001EBF")]
			BASIC_OUTLINE,
			[Token(Token = "0x4001EC0")]
			BASIC_OUTLINE_ONLY_ICON,
			[Token(Token = "0x4001EC1")]
			BASIC_OUTLINE_WITH_ICON,
			[Token(Token = "0x4001EC2")]
			RADIAL_ONLY_ICON,
			[Token(Token = "0x4001EC3")]
			RADIAL_OUTLINE_ONLY_ICON,
			[Token(Token = "0x4001EC4")]
			ROUNDED,
			[Token(Token = "0x4001EC5")]
			ROUNDED_OUTLINE
		}

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD85F4C", Offset = "0xD85F4C")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonType buttonType;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Image basicFilled;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public TextMeshProUGUI basicText;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Image basicOnlyIconFilled;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Image basicOnlyIconIcon;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Image basicWithIconFilled;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Image basicWithIconIcon;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public TextMeshProUGUI basicWithIconText;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Image basicOutlineBorder;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Image basicOutlineFilled;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineText;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineTextHighligted;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Image basicOutlineOOBorder;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Image basicOutlineOOFilled;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Image basicOutlineOOIcon;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Image basicOutlineOOIconHighlighted;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Image basicOutlineWOBorder;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Image basicOutlineWOFilled;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Image basicOutlineWOIcon;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Image basicOutlineWOIconHighlighted;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineWOText;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineWOTextHighligted;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Image radialOOBackground;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Image radialOOIcon;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public Image radialOutlineOOBorder;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public Image radialOutlineOOFilled;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public Image radialOutlineOOIcon;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public Image radialOutlineOOIconHighlighted;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public Image roundedBackground;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public TextMeshProUGUI roundedText;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Image roundedOutlineBorder;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Image roundedOutlineFilled;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public TextMeshProUGUI roundedOutlineText;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public TextMeshProUGUI roundedOutlineTextHighligted;

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x13D2C20", Offset = "0x13D2C20", VA = "0x13D2C20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x13D2D60", Offset = "0x13D2D60", VA = "0x13D2D60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x13D4254", Offset = "0x13D4254", VA = "0x13D4254")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x13D2D98", Offset = "0x13D2D98", VA = "0x13D2D98")]
		private void UpdateButton()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x13D42F4", Offset = "0x13D42F4", VA = "0x13D42F4")]
		public UIManagerButton()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	[ExecuteInEditMode]
	public class UIManagerDropdown : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86194", Offset = "0xD86194")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD861CC", Offset = "0xD861CC")]
		public Image background;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image contentBackground;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image mainIcon;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI mainText;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image expandIcon;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image itemBackground;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image itemIcon;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI itemText;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CustomDropdown dropdownMain;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DropdownMultiSelect dropdownMulti;

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x13D42FC", Offset = "0x13D42FC", VA = "0x13D42FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x13D453C", Offset = "0x13D453C", VA = "0x13D453C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x13D4BE8", Offset = "0x13D4BE8", VA = "0x13D4BE8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x13D4574", Offset = "0x13D4574", VA = "0x13D4574")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x13D4C88", Offset = "0x13D4C88", VA = "0x13D4C88")]
		public UIManagerDropdown()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[ExecuteInEditMode]
	public class UIManagerHSelector : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86204", Offset = "0xD86204")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8623C", Offset = "0xD8623C")]
		public List<GameObject> images;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> imagesHighlighted;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> texts;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HorizontalSelector hSelector;

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x13D4C90", Offset = "0x13D4C90", VA = "0x13D4C90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x13D4E68", Offset = "0x13D4E68", VA = "0x13D4E68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x13D51BC", Offset = "0x13D51BC", VA = "0x13D51BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x13D4EA0", Offset = "0x13D4EA0", VA = "0x13D4EA0")]
		private void UpdateSelector()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x13D525C", Offset = "0x13D525C", VA = "0x13D525C")]
		public UIManagerHSelector()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[ExecuteInEditMode]
	public class UIManagerInputField : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86274", Offset = "0xD86274")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD862AC", Offset = "0xD862AC")]
		public List<GameObject> images;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> texts;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x13D5304", Offset = "0x13D5304", VA = "0x13D5304")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x13D5444", Offset = "0x13D5444", VA = "0x13D5444")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x13D5674", Offset = "0x13D5674", VA = "0x13D5674")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x13D547C", Offset = "0x13D547C", VA = "0x13D547C")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x13D5714", Offset = "0x13D5714", VA = "0x13D5714")]
		public UIManagerInputField()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	[ExecuteInEditMode]
	public class UIManagerModalWindow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD862E4", Offset = "0xD862E4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8631C", Offset = "0xD8631C")]
		public Image background;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image contentBackground;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image icon;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI title;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI description;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x13D57A4", Offset = "0x13D57A4", VA = "0x13D57A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x13D58E4", Offset = "0x13D58E4", VA = "0x13D58E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x13D5B64", Offset = "0x13D5B64", VA = "0x13D5B64")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x13D591C", Offset = "0x13D591C", VA = "0x13D591C")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x13D5C04", Offset = "0x13D5C04", VA = "0x13D5C04")]
		public UIManagerModalWindow()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	[ExecuteInEditMode]
	public class UIManagerNotification : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86354", Offset = "0xD86354")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8638C", Offset = "0xD8638C")]
		public Image background;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image icon;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI title;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI description;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x13D5C0C", Offset = "0x13D5C0C", VA = "0x13D5C0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x13D5D4C", Offset = "0x13D5D4C", VA = "0x13D5D4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x13D5F8C", Offset = "0x13D5F8C", VA = "0x13D5F8C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x13D5D84", Offset = "0x13D5D84", VA = "0x13D5D84")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x13D602C", Offset = "0x13D602C", VA = "0x13D602C")]
		public UIManagerNotification()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	[ExecuteInEditMode]
	public class UIManagerProgressBar : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD863C4", Offset = "0xD863C4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD863FC", Offset = "0xD863FC")]
		public Image bar;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x13D6034", Offset = "0x13D6034", VA = "0x13D6034")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x13D6174", Offset = "0x13D6174", VA = "0x13D6174")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x13D6348", Offset = "0x13D6348", VA = "0x13D6348")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x13D61AC", Offset = "0x13D61AC", VA = "0x13D61AC")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x13D63E8", Offset = "0x13D63E8", VA = "0x13D63E8")]
		public UIManagerProgressBar()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[ExecuteInEditMode]
	public class UIManagerProgressBarLoop : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86434", Offset = "0xD86434")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasBackground;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool useRegularBackground;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8646C", Offset = "0xD8646C")]
		public Image bar;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Image background;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x13D63F0", Offset = "0x13D63F0", VA = "0x13D63F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x13D6530", Offset = "0x13D6530", VA = "0x13D6530")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x13D66E4", Offset = "0x13D66E4", VA = "0x13D66E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x13D6568", Offset = "0x13D6568", VA = "0x13D6568")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x13D6784", Offset = "0x13D6784", VA = "0x13D6784")]
		public UIManagerProgressBarLoop()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[ExecuteInEditMode]
	public class UIManagerScrollbar : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD864B4", Offset = "0xD864B4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD864EC", Offset = "0xD864EC")]
		public Image background;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image bar;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x13D678C", Offset = "0x13D678C", VA = "0x13D678C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x13D68CC", Offset = "0x13D68CC", VA = "0x13D68CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x13D6A34", Offset = "0x13D6A34", VA = "0x13D6A34")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x13D6904", Offset = "0x13D6904", VA = "0x13D6904")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x13D6AD4", Offset = "0x13D6AD4", VA = "0x13D6AD4")]
		public UIManagerScrollbar()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	[ExecuteInEditMode]
	public class UIManagerSlider : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86524", Offset = "0xD86524")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasLabel;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool hasPopupLabel;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8655C", Offset = "0xD8655C")]
		public Image background;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image bar;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image handle;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public TextMeshProUGUI popupLabel;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x13D6ADC", Offset = "0x13D6ADC", VA = "0x13D6ADC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x13D6C1C", Offset = "0x13D6C1C", VA = "0x13D6C1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x13D716C", Offset = "0x13D716C", VA = "0x13D716C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x13D6C54", Offset = "0x13D6C54", VA = "0x13D6C54")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x13D720C", Offset = "0x13D720C", VA = "0x13D720C")]
		public UIManagerSlider()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	[ExecuteInEditMode]
	public class UIManagerSwitch : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD865B4", Offset = "0xD865B4")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD865EC", Offset = "0xD865EC")]
		public Image border;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image handleOn;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image handleOff;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x13D7214", Offset = "0x13D7214", VA = "0x13D7214")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x13D7354", Offset = "0x13D7354", VA = "0x13D7354")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x13D7650", Offset = "0x13D7650", VA = "0x13D7650")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x13D738C", Offset = "0x13D738C", VA = "0x13D738C")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x13D76F0", Offset = "0x13D76F0", VA = "0x13D76F0")]
		public UIManagerSwitch()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	[ExecuteInEditMode]
	public class UIManagerToggle : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86624", Offset = "0xD86624")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8665C", Offset = "0xD8665C")]
		public Image border;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image check;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI onLabel;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI offLabel;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x13D76F8", Offset = "0x13D76F8", VA = "0x13D76F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x13D7838", Offset = "0x13D7838", VA = "0x13D7838")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x13D7B4C", Offset = "0x13D7B4C", VA = "0x13D7B4C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x13D7870", Offset = "0x13D7870", VA = "0x13D7870")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x13D7BEC", Offset = "0x13D7BEC", VA = "0x13D7BEC")]
		public UIManagerToggle()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[ExecuteInEditMode]
	public class UIManagerTooltip : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86694", Offset = "0xD86694")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD866CC", Offset = "0xD866CC")]
		public Image background;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI text;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x13D7BF4", Offset = "0x13D7BF4", VA = "0x13D7BF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x13D7D34", Offset = "0x13D7D34", VA = "0x13D7D34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x13D7EC8", Offset = "0x13D7EC8", VA = "0x13D7EC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x13D7D6C", Offset = "0x13D7D6C", VA = "0x13D7D6C")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x13D7F68", Offset = "0x13D7F68", VA = "0x13D7F68")]
		public UIManagerTooltip()
		{
		}
	}
}
namespace MeshCombineStudio
{
	[Token(Token = "0x20001E5")]
	public class CombineRuntime : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useSearchConditions;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] gos;

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x18E02FC", Offset = "0x18E02FC", VA = "0x18E02FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x18E0300", Offset = "0x18E0300", VA = "0x18E0300")]
		private void Combine()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x18E0340", Offset = "0x18E0340", VA = "0x18E0340")]
		public CombineRuntime()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class SelectOriginal : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera mainCamera;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material matSelect;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material oldMat;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 oldPos;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshRenderer oldMr;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x15BF868", Offset = "0x15BF868", VA = "0x15BF868")]
		private void Update()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x15BFAA0", Offset = "0x15BFAA0", VA = "0x15BFAA0")]
		private void Deselect()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x15BFB3C", Offset = "0x15BFB3C", VA = "0x15BFB3C")]
		private void SelectOrDeselect(Vector3 position, MeshRenderer mr, Material mat, bool select)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x15BFC6C", Offset = "0x15BFC6C", VA = "0x15BFC6C")]
		public SelectOriginal()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class DisabledLODGroup : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODGroup lodGroup;

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x18E7E94", Offset = "0x18E7E94", VA = "0x18E7E94")]
		public DisabledLODGroup()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	[ExecuteInEditMode]
	public class FindLodGroups : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool find;

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x18E7FC0", Offset = "0x18E7FC0", VA = "0x18E7FC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x18E8134", Offset = "0x18E8134", VA = "0x18E8134")]
		private void Update()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x18E7FC4", Offset = "0x18E7FC4", VA = "0x18E7FC4")]
		private void FindLods()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x18E8148", Offset = "0x18E8148", VA = "0x18E8148")]
		public FindLodGroups()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class LODGroupSetup : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODGroup lodGroup;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int lodGroupParentIndex;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int lodCount;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LODGroup[] lodGroups;

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x18E8300", Offset = "0x18E8300", VA = "0x18E8300")]
		public void Init(MeshCombiner meshCombiner, int lodGroupParentIndex)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x18E83C0", Offset = "0x18E83C0", VA = "0x18E83C0")]
		private void GetSetup()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x18E8510", Offset = "0x18E8510", VA = "0x18E8510")]
		public void ApplySetup()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x18E88E8", Offset = "0x18E88E8", VA = "0x18E88E8")]
		public void AddLODGroupsToChildren()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x18E8B04", Offset = "0x18E8B04", VA = "0x18E8B04")]
		public void RemoveLODGroupFromChildren()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x18E8C20", Offset = "0x18E8C20", VA = "0x18E8C20")]
		public LODGroupSetup()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class CamGeometryCapture : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ComputeShader computeDepthToArray;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Int2 resolution;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera cam;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform t;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RenderTexture rtCapture;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] heights;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Bounds bounds;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float maxSize;

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x18DE01C", Offset = "0x18DE01C", VA = "0x18DE01C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x18DE0EC", Offset = "0x18DE0EC", VA = "0x18DE0EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x18DE128", Offset = "0x18DE128", VA = "0x18DE128")]
		private void DisposeRenderTexture(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x18DE0F0", Offset = "0x18DE0F0", VA = "0x18DE0F0")]
		public void DisposeRTCapture()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x18DE1E8", Offset = "0x18DE1E8", VA = "0x18DE1E8")]
		public void RemoveTrianglesBelowSurface(Transform t, MeshCombineJobManager.MeshCombineJob meshCombineJob, MeshCache.SubMeshCache newMeshCache, ref byte[] vertexIsBelow)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x18DE538", Offset = "0x18DE538", VA = "0x18DE538")]
		public void Capture(Bounds bounds, int collisionMask, Vector3 direction, Int2 resolution)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x18DED4C", Offset = "0x18DED4C", VA = "0x18DED4C")]
		public void SetCamera(Vector3 direction)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x18DE958", Offset = "0x18DE958", VA = "0x18DE958")]
		public float GetHeight(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x18DF068", Offset = "0x18DF068", VA = "0x18DF068")]
		public CamGeometryCapture()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class CombinedLODManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004B4")]
		public enum LodMode
		{
			[Token(Token = "0x4001EC7")]
			Automatic,
			[Token(Token = "0x4001EC8")]
			DebugLod
		}

		[Token(Token = "0x20004B5")]
		public enum LodDistanceMode
		{
			[Token(Token = "0x4001ECA")]
			Automatic,
			[Token(Token = "0x4001ECB")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x20004B6")]
		public class LOD
		{
			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform searchParent;

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sphere3 sphere;

			[Token(Token = "0x6002017")]
			[Address(RVA = "0x18E0974", Offset = "0x18E0974", VA = "0x18E0974")]
			public LOD()
			{
			}

			[Token(Token = "0x6002018")]
			[Address(RVA = "0x18E187C", Offset = "0x18E187C", VA = "0x18E187C")]
			public LOD(Transform searchParent)
			{
			}
		}

		[Token(Token = "0x20004B7")]
		public class Cell : BaseOctree.Cell
		{
			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Cell[] cells;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private AABB3 box;

			[Token(Token = "0x6002019")]
			[Address(RVA = "0x18E132C", Offset = "0x18E132C", VA = "0x18E132C")]
			public Cell()
			{
			}

			[Token(Token = "0x600201A")]
			[Address(RVA = "0x18E0460", Offset = "0x18E0460", VA = "0x18E0460")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x600201B")]
			[Address(RVA = "0x18E09E8", Offset = "0x18E09E8", VA = "0x18E09E8")]
			public void AddMeshRenderer(MeshRenderer mr, Vector3 position, int lodLevel, int lodLevels)
			{
			}

			[Token(Token = "0x600201C")]
			[Address(RVA = "0x18E1334", Offset = "0x18E1334", VA = "0x18E1334")]
			private void AddMeshRendererInternal(MeshRenderer mr, Vector3 position, int lodLevel, int lodLevels)
			{
			}

			[Token(Token = "0x600201D")]
			[Address(RVA = "0x18E0BB0", Offset = "0x18E0BB0", VA = "0x18E0BB0")]
			public void AutoLodInternal(LOD[] lods, float lodCulledDistance)
			{
			}

			[Token(Token = "0x600201E")]
			[Address(RVA = "0x18E0F98", Offset = "0x18E0F98", VA = "0x18E0F98")]
			public void LodInternal(LOD[] lods, int lodLevel)
			{
			}

			[Token(Token = "0x600201F")]
			[Address(RVA = "0x18E1180", Offset = "0x18E1180", VA = "0x18E1180")]
			public void DrawGizmos(LOD[] lods)
			{
			}

			[Token(Token = "0x6002020")]
			[Address(RVA = "0x18E1658", Offset = "0x18E1658", VA = "0x18E1658")]
			public void DrawGizmosInternal()
			{
			}
		}

		[Token(Token = "0x20004B8")]
		public class MaxCell : Cell
		{
			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public List<MeshRenderer>[] mrList;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public int currentLod;

			[Token(Token = "0x6002021")]
			[Address(RVA = "0x18E18A8", Offset = "0x18E18A8", VA = "0x18E18A8")]
			public MaxCell()
			{
			}
		}

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool drawGizmos;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LOD[] lods;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] distances;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LodDistanceMode lodDistanceMode;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LodMode lodMode;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int showLod;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool lodCulled;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float lodCullDistance;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 octreeCenter;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 octreeSize;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int maxLevels;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool search;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Cell octree;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform cameraMainT;

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x18E0350", Offset = "0x18E0350", VA = "0x18E0350")]
		private void Awake()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x18E0388", Offset = "0x18E0388", VA = "0x18E0388")]
		private void InitOctree()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x18E0500", Offset = "0x18E0500", VA = "0x18E0500")]
		private void Start()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x18E06A8", Offset = "0x18E06A8", VA = "0x18E06A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x18E07CC", Offset = "0x18E07CC", VA = "0x18E07CC")]
		public void UpdateLods(MeshCombiner meshCombiner, int lodAmount)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x18E097C", Offset = "0x18E097C", VA = "0x18E097C")]
		public void UpdateDistances(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x18E0534", Offset = "0x18E0534", VA = "0x18E0534")]
		public void Search()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x18E0A70", Offset = "0x18E0A70", VA = "0x18E0A70")]
		public void ResetOctree()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x18E06D0", Offset = "0x18E06D0", VA = "0x18E06D0")]
		public void Lod(LodMode lodMode)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x18E1158", Offset = "0x18E1158", VA = "0x18E1158")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x18E125C", Offset = "0x18E125C", VA = "0x18E125C")]
		public CombinedLODManager()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class MCSDynamicObject : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x18E8CE4", Offset = "0x18E8CE4", VA = "0x18E8CE4")]
		public MCSDynamicObject()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xD7E254", Offset = "0xD7E254")]
	[ExecuteInEditMode]
	public class MeshCombineJobManager : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004B9")]
		public class JobSettings
		{
			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombineJobMode combineJobMode;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ThreadAmountMode threadAmountMode;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int combineMeshesPerFrame;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool useMultiThreading;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool useMainThread;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int customThreadAmount;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool showStats;

			[Token(Token = "0x6002022")]
			[Address(RVA = "0x15AEA18", Offset = "0x15AEA18", VA = "0x15AEA18")]
			public void CopySettings(JobSettings source)
			{
			}

			[Token(Token = "0x6002023")]
			[Address(RVA = "0x15AEA5C", Offset = "0x15AEA5C", VA = "0x15AEA5C")]
			public void ReportStatus()
			{
			}

			[Token(Token = "0x6002024")]
			[Address(RVA = "0x15AEC30", Offset = "0x15AEC30", VA = "0x15AEC30")]
			public JobSettings()
			{
			}
		}

		[Token(Token = "0x20004BA")]
		public enum CombineJobMode
		{
			[Token(Token = "0x4001EDA")]
			CombineAtOnce,
			[Token(Token = "0x4001EDB")]
			CombinePerFrame
		}

		[Token(Token = "0x20004BB")]
		public enum ThreadAmountMode
		{
			[Token(Token = "0x4001EDD")]
			AllThreads,
			[Token(Token = "0x4001EDE")]
			HalfThreads,
			[Token(Token = "0x4001EDF")]
			Custom
		}

		[Token(Token = "0x20004BC")]
		public enum ThreadState
		{
			[Token(Token = "0x4001EE1")]
			isFree,
			[Token(Token = "0x4001EE2")]
			isReady,
			[Token(Token = "0x4001EE3")]
			isRunning,
			[Token(Token = "0x4001EE4")]
			hasError
		}

		[Token(Token = "0x20004BD")]
		public class MeshCombineJobsThread
		{
			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int threadId;

			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ThreadState threadState;

			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Queue<MeshCombineJob> meshCombineJobs;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Queue<NewMeshObject> newMeshObjectsDone;

			[Token(Token = "0x6002025")]
			[Address(RVA = "0x15AED30", Offset = "0x15AED30", VA = "0x15AED30")]
			public MeshCombineJobsThread(int threadId)
			{
			}

			[Token(Token = "0x6002026")]
			[Address(RVA = "0x15AEDDC", Offset = "0x15AEDDC", VA = "0x15AEDDC")]
			public void ExecuteJobsThread(object state)
			{
			}
		}

		[Token(Token = "0x20004BE")]
		public class MeshCombineJob
		{
			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshCombiner meshCombiner;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshObjectsHolder meshObjectsHolder;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform parent;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int startIndex;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int endIndex;

			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool firstMesh;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool intersectsSurface;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int backFaceTrianglesRemoved;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int trianglesRemoved;

			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool abort;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string name;

			[Token(Token = "0x6002027")]
			[Address(RVA = "0x15AEC50", Offset = "0x15AEC50", VA = "0x15AEC50")]
			public MeshCombineJob(MeshCombiner meshCombiner, MeshObjectsHolder meshObjectsHolder, Transform parent, Vector3 position, int startIndex, int length, bool firstMesh, bool intersectsSurface)
			{
			}
		}

		[Token(Token = "0x20004BF")]
		public class NewMeshObject
		{
			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FastList<Vector3> weldVertices;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshCombineJob meshCombineJob;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshCache.SubMeshCache newMeshCache;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool allSkipped;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 newPosition;

			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] vertexIsBelow;

			[Token(Token = "0x4001EFB")]
			private const byte belowSurface = 1;

			[Token(Token = "0x4001EFC")]
			private const byte aboveSurface = 2;

			[Token(Token = "0x6002028")]
			[Address(RVA = "0x15AF448", Offset = "0x15AF448", VA = "0x15AF448")]
			public NewMeshObject()
			{
			}

			[Token(Token = "0x6002029")]
			[Address(RVA = "0x15AF4C8", Offset = "0x15AF4C8", VA = "0x15AF4C8")]
			public void Combine(MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x600202A")]
			[Address(RVA = "0x15B0918", Offset = "0x15B0918", VA = "0x15B0918")]
			private void PrintMissingArrayWarning(MeshCombiner meshCombiner, GameObject go, Mesh mesh, string text)
			{
			}

			[Token(Token = "0x600202B")]
			private void HasArray<T>(ref bool hasNewArray, bool hasArray, ref T[] newArray, Array array, int vertexCount, int totalVertices, bool useDefaultValue = false, [Optional] T defaultValue)
			{
			}

			[Token(Token = "0x600202C")]
			private void FillArray<T>(T[] array, int offset, int length, T value)
			{
			}

			[Token(Token = "0x600202D")]
			[Address(RVA = "0x15B0B74", Offset = "0x15B0B74", VA = "0x15B0B74")]
			public void RemoveTrianglesBelowSurface(Transform t, MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x600202E")]
			[Address(RVA = "0x15B0464", Offset = "0x15B0464", VA = "0x15B0464")]
			public void RemoveBackFaceTriangles(BitArray backfaceRemovalExclusions)
			{
			}

			[Token(Token = "0x600202F")]
			[Address(RVA = "0x15B0F10", Offset = "0x15B0F10", VA = "0x15B0F10")]
			public void WeldVertices(MeshCombineJob meshCombineJob)
			{
			}

			[Token(Token = "0x6002030")]
			[Address(RVA = "0x15B1350", Offset = "0x15B1350", VA = "0x15B1350")]
			private void ArrangeTriangles()
			{
			}

			[Token(Token = "0x6002031")]
			[Address(RVA = "0x15B1434", Offset = "0x15B1434", VA = "0x15B1434")]
			public void CreateMesh()
			{
			}
		}

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MeshCombineJobManager instance;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JobSettings jobSettings;

		[NonSerialized]
		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FastList<NewMeshObject> newMeshObjectsPool;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<Mesh, MeshCache> meshCacheDictionary;

		[NonSerialized]
		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int totalNewMeshObjects;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Queue<MeshCombineJob> meshCombineJobs;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshCombineJobsThread[] meshCombineJobsThreads;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CamGeometryCapture camGeometryCapture;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int cores;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int threadAmount;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int startThreadId;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int endThreadId;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool abort;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshCache.SubMeshCache tempMeshCache;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Ray ray;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RaycastHit hitInfo;

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x18EDA34", Offset = "0x18EDA34", VA = "0x18EDA34")]
		public static MeshCombineJobManager CreateInstance(MeshCombiner meshCombiner, GameObject instantiatePrefab)
		{
			return null;
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x18EDE20", Offset = "0x18EDE20", VA = "0x18EDE20")]
		public static void ResetMeshCache()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x18EDED4", Offset = "0x18EDED4", VA = "0x18EDED4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x18EDF28", Offset = "0x18EDF28", VA = "0x18EDF28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x18EDFA0", Offset = "0x18EDFA0", VA = "0x18EDFA0")]
		public void Init()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x18EE0B4", Offset = "0x18EE0B4", VA = "0x18EE0B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x18EE0B8", Offset = "0x18EE0B8", VA = "0x18EE0B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x18EE4EC", Offset = "0x18EE4EC", VA = "0x18EE4EC")]
		private void Update()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x18EE524", Offset = "0x18EE524", VA = "0x18EE524")]
		private void MyUpdate()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x18EDBEC", Offset = "0x18EDBEC", VA = "0x18EDBEC")]
		public void SetJobMode(JobSettings newJobSettings)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x18EEB3C", Offset = "0x18EEB3C", VA = "0x18EEB3C")]
		public void AddJob(MeshCombiner meshCombiner, MeshObjectsHolder meshObjectsHolder, Transform parent, Vector3 position)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x18EF1E8", Offset = "0x18EF1E8", VA = "0x18EF1E8")]
		private void EnqueueJob(MeshCombiner meshCombiner, MeshCombineJob meshCombineJob)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x18EF280", Offset = "0x18EF280", VA = "0x18EF280")]
		public int MeshIntersectsSurface(MeshCombiner meshCombiner, CachedGameObject cachedGO)
		{
			return default(int);
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x18EE15C", Offset = "0x18EE15C", VA = "0x18EE15C")]
		public void AbortJobs()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x18EE528", Offset = "0x18EE528", VA = "0x18EE528")]
		public void ExecuteJobs()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x18EF4DC", Offset = "0x18EF4DC", VA = "0x18EF4DC")]
		public void CombineMeshesDone(MeshCombineJobsThread meshCombineJobThread)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x18EF86C", Offset = "0x18EF86C", VA = "0x18EF86C")]
		public MeshCombineJobManager()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class MeshCache
	{
		[Token(Token = "0x20004C0")]
		public class SubMeshCache
		{
			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] uv;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv2;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2[] uv3;

			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2[] uv4;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color32[] colors32;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int[] triangles;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool hasNormals;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool hasTangents;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
			public bool hasUv;

			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
			public bool hasUv2;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool hasUv3;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
			public bool hasUv4;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
			public bool hasColors;

			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int vertexCount;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int triangleCount;

			[Token(Token = "0x6002032")]
			[Address(RVA = "0x18ED714", Offset = "0x18ED714", VA = "0x18ED714")]
			public SubMeshCache()
			{
			}

			[Token(Token = "0x6002033")]
			[Address(RVA = "0x18ED71C", Offset = "0x18ED71C", VA = "0x18ED71C")]
			public void CopySubMeshCache(SubMeshCache source)
			{
			}

			[Token(Token = "0x6002034")]
			public void CopyArray<T>(Array sourceArray, ref T[] destinationArray, int vertexCount)
			{
			}

			[Token(Token = "0x6002035")]
			[Address(RVA = "0x18ED1DC", Offset = "0x18ED1DC", VA = "0x18ED1DC")]
			public SubMeshCache(Mesh mesh, int subMeshIndex)
			{
			}

			[Token(Token = "0x6002036")]
			[Address(RVA = "0x18ED0E8", Offset = "0x18ED0E8", VA = "0x18ED0E8")]
			public SubMeshCache(Mesh mesh, bool assignTriangles)
			{
			}

			[Token(Token = "0x6002037")]
			[Address(RVA = "0x18ED8EC", Offset = "0x18ED8EC", VA = "0x18ED8EC")]
			public void CheckHasArrays()
			{
			}

			[Token(Token = "0x6002038")]
			[Address(RVA = "0x18ED998", Offset = "0x18ED998", VA = "0x18ED998")]
			public void ResetHasBooleans()
			{
			}

			[Token(Token = "0x6002039")]
			[Address(RVA = "0x18ED9A8", Offset = "0x18ED9A8", VA = "0x18ED9A8")]
			public void Init(bool initTriangles = true)
			{
			}

			[Token(Token = "0x600203A")]
			[Address(RVA = "0x18ED238", Offset = "0x18ED238", VA = "0x18ED238")]
			public void RebuildVertexBuffer(SubMeshCache sub, bool resizeArrays)
			{
			}
		}

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SubMeshCache[] subMeshCache;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshCount;

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x18ECF34", Offset = "0x18ECF34", VA = "0x18ECF34")]
		public MeshCache(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public static class MeshExtensionAlloc
	{
		[Token(Token = "0x6001038")]
		[Address(RVA = "0x15BA0F8", Offset = "0x15BA0F8", VA = "0x15BA0F8")]
		public static void ApplyVertices(Mesh mesh, Vector3[] vertices, int length)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x15BA188", Offset = "0x15BA188", VA = "0x15BA188")]
		public static void ApplyNormals(Mesh mesh, Vector3[] normals, int length)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x15BA218", Offset = "0x15BA218", VA = "0x15BA218")]
		public static void ApplyTangents(Mesh mesh, Vector4[] tangents, int length)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x15BA2A8", Offset = "0x15BA2A8", VA = "0x15BA2A8")]
		public static void ApplyUvs(Mesh mesh, int channel, Vector2[] uvs, int length)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x15BA3C4", Offset = "0x15BA3C4", VA = "0x15BA3C4")]
		public static void ApplyColors32(Mesh mesh, Color32[] colors, int length)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x15BA454", Offset = "0x15BA454", VA = "0x15BA454")]
		public static void ApplyTriangles(Mesh mesh, int[] triangles, int length)
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public enum CombineMode
	{
		[Token(Token = "0x4000EDF")]
		StaticObjects,
		[Token(Token = "0x4000EE0")]
		DynamicObjects
	}
	[Token(Token = "0x20001F1")]
	[ExecuteInEditMode]
	public class MeshCombiner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004C1")]
		public enum ObjectType
		{
			[Token(Token = "0x4001F10")]
			Normal,
			[Token(Token = "0x4001F11")]
			LodGroup,
			[Token(Token = "0x4001F12")]
			LodRenderer
		}

		[Token(Token = "0x20004C2")]
		public enum HandleComponent
		{
			[Token(Token = "0x4001F14")]
			Disable,
			[Token(Token = "0x4001F15")]
			Destroy
		}

		[Token(Token = "0x20004C3")]
		public enum ObjectCenter
		{
			[Token(Token = "0x4001F17")]
			BoundsCenter,
			[Token(Token = "0x4001F18")]
			TransformPosition
		}

		[Token(Token = "0x20004C4")]
		public enum BackFaceTriangleMode
		{
			[Token(Token = "0x4001F1A")]
			Transform,
			[Token(Token = "0x4001F1B")]
			Box,
			[Token(Token = "0x4001F1C")]
			Direction,
			[Token(Token = "0x4001F1D")]
			EulerAngles
		}

		[Token(Token = "0x20004C5")]
		public delegate void EventMethod(MeshCombiner meshCombiner);

		[Token(Token = "0x20004C6")]
		public enum RebakeLightingMode
		{
			[Token(Token = "0x4001F1F")]
			CopyLightmapUvs,
			[Token(Token = "0x4001F20")]
			RegenarateLightmapUvs
		}

		[Serializable]
		[Token(Token = "0x20004C7")]
		public class SearchOptions
		{
			[Token(Token = "0x2000582")]
			public enum ComponentCondition
			{
				[Token(Token = "0x40022F7")]
				And,
				[Token(Token = "0x40022F8")]
				Or,
				[Token(Token = "0x40022F9")]
				Not
			}

			[Token(Token = "0x2000583")]
			public enum LODGroupSearchMode
			{
				[Token(Token = "0x40022FB")]
				LodGroup,
				[Token(Token = "0x40022FC")]
				LodRenderers
			}

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool foldoutSearchParents;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool foldoutSearchConditions;

			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject parent;

			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject[] parentGOs;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ObjectCenter objectCenter;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public LODGroupSearchMode lodGroupSearchMode;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool useSearchBox;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Bounds searchBoxBounds;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool searchBoxSquare;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 searchBoxPivot;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 searchBoxSize;

			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool useMaxBoundsFactor;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public float maxBoundsFactor;

			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool useVertexInputLimit;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public int vertexInputLimit;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public bool useLayerMask;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public LayerMask layerMask;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public bool useTag;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public string tag;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public bool useNameContains;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public List<string> nameContainList;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public bool onlyActive;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
			public bool onlyStatic;

			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
			public bool onlyActiveMeshRenderers;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
			public bool useComponentsFilter;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public ComponentCondition componentCondition;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public List<string> componentNameList;

			[Token(Token = "0x600203F")]
			[Address(RVA = "0x15B5A70", Offset = "0x15B5A70", VA = "0x15B5A70")]
			public void GetSearchBoxBounds()
			{
			}

			[Token(Token = "0x6002040")]
			[Address(RVA = "0x15B9E70", Offset = "0x15B9E70", VA = "0x15B9E70")]
			public SearchOptions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C8")]
		public class LODGroupSettings
		{
			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool animateCrossFading;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LODFadeMode fadeMode;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LODSettings[] lodSettings;

			[Token(Token = "0x6002041")]
			[Address(RVA = "0x15B4E94", Offset = "0x15B4E94", VA = "0x15B4E94")]
			public LODGroupSettings(int lodParentIndex)
			{
			}

			[Token(Token = "0x6002042")]
			[Address(RVA = "0x15B8D94", Offset = "0x15B8D94", VA = "0x15B8D94")]
			public void CopyFromLodGroup(LODGroup lodGroup, LOD[] lods)
			{
			}

			[Token(Token = "0x6002043")]
			[Address(RVA = "0x15B9DB0", Offset = "0x15B9DB0", VA = "0x15B9DB0")]
			public void CopyToLodGroup(LODGroup lodGroup, LOD[] lods)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C9")]
		public class LODSettings
		{
			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float screenRelativeTransitionHeight;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float fadeTransitionWidth;

			[Token(Token = "0x6002044")]
			[Address(RVA = "0x15B9D7C", Offset = "0x15B9D7C", VA = "0x15B9D7C")]
			public LODSettings(float screenRelativeTransitionHeight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004CA")]
		public class LodParentHolder
		{
			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool found;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] lods;

			[Token(Token = "0x6002045")]
			[Address(RVA = "0x15B8280", Offset = "0x15B8280", VA = "0x15B8280")]
			public void Init(int lodCount)
			{
			}

			[Token(Token = "0x6002046")]
			[Address(RVA = "0x15B7B38", Offset = "0x15B7B38", VA = "0x15B7B38")]
			public void Create(MeshCombiner meshCombiner, int lodParentIndex)
			{
			}

			[Token(Token = "0x6002047")]
			[Address(RVA = "0x15B82E4", Offset = "0x15B82E4", VA = "0x15B82E4")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002048")]
			[Address(RVA = "0x15B9E68", Offset = "0x15B9E68", VA = "0x15B9E68")]
			public LodParentHolder()
			{
			}
		}

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EventMethod onInit;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<MeshCombiner> instances;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshCombineJobManager.JobSettings jobSettings;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LODGroupSettings[] lodGroupsSettings;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ComputeShader computeDepthToArray;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool useCustomInstantiatePrefab;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject instantiatePrefab;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool instantiatePrefabValid;

		[Token(Token = "0x4000EEC")]
		public const int maxLodCount = 8;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string saveMeshesFolder;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ObjectOctree.Cell octree;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<ObjectOctree.MaxCell> changedCells;

		[NonSerialized]
		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool octreeContainsObjects;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool unitySettingsFoldout;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SearchOptions searchOptions;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool useOriginalObjectsHideFlags;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public HideFlags orginalObjectsHideFlags;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CombineConditionSettings combineConditionSettings;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool outputSettingsFoldout;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public CombineMode combineMode;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int cellSize;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 cellOffset;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int cellCount;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool removeOriginalMeshReference;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool usedRemoveOriginalMeshRederences;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		public bool useVertexOutputLimit;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int vertexOutputLimit;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public RebakeLightingMode rebakeLightingMode;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool copyBakedLighting;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool validCopyBakedLighting;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool rebakeLighting;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public bool validRebakeLighting;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float scaleInLightmap;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool addMeshColliders;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public PhysicMaterial physicsMaterial;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool addMeshCollidersInRange;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public Bounds addMeshCollidersBounds;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool makeMeshesUnreadable;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		public bool excludeSingleMeshes;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		public bool removeTrianglesBelowSurface;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
		public bool noColliders;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public LayerMask surfaceLayerMask;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float maxSurfaceHeight;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool removeOverlappingTriangles;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool removeSamePositionTriangles;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		public bool reportFoundObjectsNotOnOverlapLayerMask;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject overlappingCollidersGO;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public LayerMask overlapLayerMask;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public int voxelizeLayer;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public int lodGroupLayer;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject overlappingNonCombineGO;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool disableOverlappingNonCombineGO;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool removeBackFaceTriangles;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public BackFaceTriangleMode backFaceTriangleMode;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Transform backFaceT;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector3 backFaceDirection;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public Vector3 backFaceRotation;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Bounds backFaceBounds;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public bool useExcludeOverlapRemovalTag;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string excludeOverlapRemovalTag;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool useExcludeBackfaceRemovalTag;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string excludeBackfaceRemovalTag;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool weldVertices;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		public bool weldSnapVertices;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float weldSnapSize;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool weldIncludeNormals;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		public bool jobSettingsFoldout;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		public bool runtimeSettingsFoldout;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x193")]
		public bool combineInRuntime;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public bool combineOnStart;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		public bool useCombineSwapKey;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public KeyCode combineSwapKey;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public HandleComponent originalMeshRenderers;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public HandleComponent originalLODGroups;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public bool meshSaveSettingsFoldout;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
		public bool deleteFilesFromSaveFolder;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Vector3 oldPosition;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public Vector3 oldScale;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public LodParentHolder[] lodParentHolders;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[HideInInspector]
		public List<GameObject> combinedGameObjects;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[HideInInspector]
		public List<CachedGameObject> foundObjects;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public List<CachedLodGameObject> foundLodObjects;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[HideInInspector]
		public List<LODGroup> foundLodGroups;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public List<Collider> foundColliders;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public HashSet<LODGroup> uniqueFoundLodGroups;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public HashSet<Mesh> unreadableMeshes;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public HashSet<Mesh> selectImportSettingsMeshes;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public FoundCombineConditions foundCombineConditions;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public HashSet<MeshCombineJobManager.MeshCombineJob> meshCombineJobs;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public int totalMeshCombineJobs;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public int mrDisabledCount;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public bool combined;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
		public bool isCombining;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x222")]
		public bool activeOriginal;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x223")]
		public bool combinedActive;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public bool drawGizmos;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
		public bool drawMeshBounds;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public int originalTotalVertices;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public int originalTotalTriangles;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public int newTotalVertices;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public int newTotalTriangles;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public int originalDrawCalls;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public int newDrawCalls;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public int originalTotalNormalChannels;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public int originalTotalTangentChannels;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public int originalTotalUvChannels;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public int originalTotalUv2Channels;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public int originalTotalUv3Channels;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public int originalTotalUv4Channels;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public int originalTotalColorChannels;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public int newTotalNormalChannels;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public int newTotalTangentChannels;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public int newTotalUvChannels;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public int newTotalUv2Channels;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public int newTotalUv3Channels;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public int newTotalUv4Channels;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		public int newTotalColorChannels;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public float combineTime;

		[NonSerialized]
		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public MeshCombinerData data;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public FastList<MeshColliderAdd> addMeshCollidersList;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private HashSet<Transform> uniqueLodObjects;

		[NonSerialized]
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private MeshCombiner thisInstance;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool hasFoundFirstObject;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private Bounds bounds;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Stopwatch stopwatch;

		[Token(Token = "0x14000021")]
		public event EventMethod onCombiningStart
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x15B2F30", Offset = "0x15B2F30", VA = "0x15B2F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92C50", Offset = "0xD92C50")]
			add
			{
			}
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x15B2FD4", Offset = "0x15B2FD4", VA = "0x15B2FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92C60", Offset = "0xD92C60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event EventMethod onCombiningAbort
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x15B3078", Offset = "0x15B3078", VA = "0x15B3078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92C70", Offset = "0xD92C70")]
			add
			{
			}
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x15B311C", Offset = "0x15B311C", VA = "0x15B311C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92C80", Offset = "0xD92C80")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event EventMethod onCombiningReady
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x15B31C0", Offset = "0x15B31C0", VA = "0x15B31C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92C90", Offset = "0xD92C90")]
			add
			{
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x15B3264", Offset = "0x15B3264", VA = "0x15B3264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92CA0", Offset = "0xD92CA0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x15B3308", Offset = "0x15B3308", VA = "0x15B3308")]
		public void AddMeshColliders()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x15B3520", Offset = "0x15B3520", VA = "0x15B3520")]
		public void ExecuteOnCombiningReady()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x15B4230", Offset = "0x15B4230", VA = "0x15B4230")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x15B4340", Offset = "0x15B4340", VA = "0x15B4340")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x15B4234", Offset = "0x15B4234", VA = "0x15B4234")]
		private void Init()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x15B4344", Offset = "0x15B4344", VA = "0x15B4344")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x15B43CC", Offset = "0x15B43CC", VA = "0x15B43CC")]
		public void InitData()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x15B4714", Offset = "0x15B4714", VA = "0x15B4714")]
		private void Start()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x15B4A08", Offset = "0x15B4A08", VA = "0x15B4A08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x15B4B64", Offset = "0x15B4B64", VA = "0x15B4B64")]
		public static MeshCombiner GetInstance(string name)
		{
			return null;
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x15B4CB8", Offset = "0x15B4CB8", VA = "0x15B4CB8")]
		public void CopyJobSettingsToAllInstances()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x15B483C", Offset = "0x15B483C", VA = "0x15B483C")]
		public void InitMeshCombineJobManager()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x15B4DA4", Offset = "0x15B4DA4", VA = "0x15B4DA4")]
		public void CreateLodGroupsSettings()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x15B48DC", Offset = "0x15B48DC", VA = "0x15B48DC")]
		private void StartRuntime()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x15B54B4", Offset = "0x15B54B4", VA = "0x15B54B4")]
		public void DestroyCombinedObjects()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x15B589C", Offset = "0x15B589C", VA = "0x15B589C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x15B55B8", Offset = "0x15B55B8", VA = "0x15B55B8")]
		public void AbortAndClearMeshCombineJobs(bool executeAbortEvent = true)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x15B5BE8", Offset = "0x15B5BE8", VA = "0x15B5BE8")]
		public void ClearMeshCombineJobs(bool executeAbortEvent = true)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x15B5CFC", Offset = "0x15B5CFC", VA = "0x15B5CFC")]
		public void AddObjects(Transform rootT, List<Transform> transforms, bool useSearchOptions, bool checkForLODGroups = true)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x15B6858", Offset = "0x15B6858", VA = "0x15B6858")]
		public void AddObjectsAutomatically(bool useSearchConditions = true)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x15B6E40", Offset = "0x15B6E40", VA = "0x15B6E40")]
		public void AddFoundObjectsToOctree()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x15B59E0", Offset = "0x15B59E0", VA = "0x15B59E0")]
		public void ResetOctree()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x15B7468", Offset = "0x15B7468", VA = "0x15B7468")]
		public void CalcOctreeSize(Bounds bounds)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x15B79AC", Offset = "0x15B79AC", VA = "0x15B79AC")]
		public void ApplyChanges()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x15B4FCC", Offset = "0x15B4FCC", VA = "0x15B4FCC")]
		public void CombineAll(bool useSearchConditions = true)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x15B5B60", Offset = "0x15B5B60", VA = "0x15B5B60")]
		private void InitAndResetLodParentsCount()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x15B6A10", Offset = "0x15B6A10", VA = "0x15B6A10")]
		public void AddObjectsFromSearchParent(bool useSearchConditions)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x15B8310", Offset = "0x15B8310", VA = "0x15B8310")]
		private void CheckForFoundObjectNotOnOverlapLayerMask(GameObject go)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x15B5EA8", Offset = "0x15B5EA8", VA = "0x15B5EA8")]
		private void AddLodGroups(Transform searchParentT, LODGroup[] lodGroups, bool useSearchOptions = true)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x15B65F0", Offset = "0x15B65F0", VA = "0x15B65F0")]
		private void AddTransforms(Transform searchParentT, Transform[] transforms, bool useSearchConditions = true)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x15B8594", Offset = "0x15B8594", VA = "0x15B8594")]
		private int ValidObject(Transform searchParentT, Transform t, ObjectType objectType, bool useSearchOptions, ref CachedGameObject cachedGameObject)
		{
			return default(int);
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x15B4B40", Offset = "0x15B4B40", VA = "0x15B4B40")]
		public void RestoreOriginalRenderersAndLODGroups(bool onDestroy)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x15B8FC8", Offset = "0x15B8FC8", VA = "0x15B8FC8")]
		public void SwapCombine()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x15B8FFC", Offset = "0x15B8FFC", VA = "0x15B8FFC")]
		private void SetOriginalCollidersActive(bool active, bool onDestroy)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x15B91C8", Offset = "0x15B91C8", VA = "0x15B91C8")]
		private void ExecuteMeshFilter(bool active, CachedGameObject cachedGO)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x15B3664", Offset = "0x15B3664", VA = "0x15B3664")]
		public void ExecuteHandleObjects(bool active, HandleComponent handleOriginalObjects, HandleComponent handleOriginalLodGroups, bool includeColliders = true, bool onDestroy = false)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x15B93B8", Offset = "0x15B93B8", VA = "0x15B93B8")]
		private void DrawGizmosCube(Bounds bounds, Color color)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x15B94D0", Offset = "0x15B94D0", VA = "0x15B94D0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x15B7278", Offset = "0x15B7278", VA = "0x15B7278")]
		private void LogOctreeInfo()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x15B99DC", Offset = "0x15B99DC", VA = "0x15B99DC")]
		public MeshCombiner()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public struct MeshColliderAdd
	{
		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject go;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Mesh mesh;

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x18EDA2C", Offset = "0x18EDA2C", VA = "0x18EDA2C")]
		public MeshColliderAdd(GameObject go, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x20001F3")]
	[ExecuteInEditMode]
	public class MeshCombinerData : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Collider, CachedGameObject> colliderLookup;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<LODGroup, CachedGameObject> lodGroupLookup;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<GameObject> combinedGameObjects;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<CachedGameObject> foundObjects;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public List<CachedLodGameObject> foundLodObjects;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public List<LODGroup> foundLodGroups;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public List<Collider> foundColliders;

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x15B9F80", Offset = "0x15B9F80", VA = "0x15B9F80")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x15B9F8C", Offset = "0x15B9F8C", VA = "0x15B9F8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x15B57B4", Offset = "0x15B57B4", VA = "0x15B57B4")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x15B9F98", Offset = "0x15B9F98", VA = "0x15B9F98")]
		public MeshCombinerData()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	[ExecuteInEditMode]
	public class ObjectSpawner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objects;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 spawnArea;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float density;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 scaleRange;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 rotationRange;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector2 heightRange;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float scaleMulti;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float metersBetweenSpawning;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool spawnInRuntime;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool spawn;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool deleteChildren;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform t;

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x15BC4FC", Offset = "0x15BC4FC", VA = "0x15BC4FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x15BCA80", Offset = "0x15BCA80", VA = "0x15BCA80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x15BCACC", Offset = "0x15BCACC", VA = "0x15BCACC")]
		public void DeleteChildren()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x15BCC40", Offset = "0x15BCC40", VA = "0x15BCC40")]
		private void SetObjectsActive(bool active)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x15BC548", Offset = "0x15BC548", VA = "0x15BC548")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x15BCCBC", Offset = "0x15BCCBC", VA = "0x15BCCBC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x15BCDA8", Offset = "0x15BCDA8", VA = "0x15BCDA8")]
		public ObjectSpawner()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class RemoveGeometryBelowTerrain : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int totalTriangles;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int removeTriangles;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int skippedObjects;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Transform> terrains;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> meshTerrains;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bounds[] terrainBounds;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Bounds[] meshBounds;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Terrain[] terrainComponents;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Terrain[] terrainArray;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bounds[] terrainBoundsArray;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer[] mrs;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] meshTerrainComponents;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh[] meshArray;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool runOnStart;

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x15BCFE4", Offset = "0x15BCFE4", VA = "0x15BCFE4")]
		private void Start()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x15BD01C", Offset = "0x15BD01C", VA = "0x15BD01C")]
		public void Remove(GameObject go)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x15BD348", Offset = "0x15BD348", VA = "0x15BD348")]
		public void RemoveMesh(Transform t, Mesh mesh)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x15BD4EC", Offset = "0x15BD4EC", VA = "0x15BD4EC")]
		public bool IsMeshUnderTerrain(Transform t, Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x15BD9CC", Offset = "0x15BD9CC", VA = "0x15BD9CC")]
		public void GetTerrainComponents()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x15BDAE0", Offset = "0x15BDAE0", VA = "0x15BDAE0")]
		public void GetMeshRenderersAndComponents()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x15BDC94", Offset = "0x15BDC94", VA = "0x15BDC94")]
		public void CreateTerrainBounds()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x15BDF48", Offset = "0x15BDF48", VA = "0x15BDF48")]
		public void MakeIntersectLists(Bounds bounds)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x15BE4F4", Offset = "0x15BE4F4", VA = "0x15BE4F4")]
		public int InterectTerrain(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x15BE59C", Offset = "0x15BE59C", VA = "0x15BE59C")]
		public int InterectMesh(Vector3 pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x15BE644", Offset = "0x15BE644", VA = "0x15BE644")]
		public float GetTerrainHeight(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x15BD6B8", Offset = "0x15BD6B8", VA = "0x15BD6B8")]
		public void RemoveTriangles(Transform t, List<int> newTriangles, Vector3[] vertices)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x15BE740", Offset = "0x15BE740", VA = "0x15BE740")]
		public RemoveGeometryBelowTerrain()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class SwapCombineKey : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SwapCombineKey instance;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MeshCombiner> meshCombinerList;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshCombiner meshCombiner;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIStyle textStyle;

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x15BFF28", Offset = "0x15BFF28", VA = "0x15BFF28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x15BFFC0", Offset = "0x15BFFC0", VA = "0x15BFFC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x15C0010", Offset = "0x15C0010", VA = "0x15C0010")]
		private void Update()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x15C0110", Offset = "0x15C0110", VA = "0x15C0110")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x15C0568", Offset = "0x15C0568", VA = "0x15C0568")]
		public SwapCombineKey()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class CachedComponents : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform t;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer mr;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter mf;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GarbageCollectMesh garbageCollectMesh;

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x18DDD58", Offset = "0x18DDD58", VA = "0x18DDD58")]
		public CachedComponents()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class ObjectHolder<T> : FastIndex
	{
		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T item;

		[Token(Token = "0x600108C")]
		public ObjectHolder()
		{
		}

		[Token(Token = "0x600108D")]
		public ObjectHolder(T item)
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public abstract class Parent<T>
	{
		[NonSerialized]
		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T parent;

		[Token(Token = "0x600108E")]
		protected Parent()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public abstract class ParentFastHashListIndex<T> : FastIndex
	{
		[NonSerialized]
		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T parent;

		[Token(Token = "0x600108F")]
		protected ParentFastHashListIndex()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public abstract class ParentMono<T> : UnityEngine.MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T parent;

		[Token(Token = "0x6001090")]
		protected ParentMono()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public abstract class ParentMonoHash<T> : MonoBehaviourFastIndex
	{
		[NonSerialized]
		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T parent;

		[Token(Token = "0x6001091")]
		protected ParentMonoHash()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public interface IFastIndexList
	{
		[Token(Token = "0x6001092")]
		bool RemoveAt(int index);

		[Token(Token = "0x6001093")]
		bool Remove(IFastIndex item);
	}
	[Token(Token = "0x20001FE")]
	public interface IFastIndex
	{
		[Token(Token = "0x17000219")]
		IFastIndexList List
		{
			[Token(Token = "0x6001094")]
			get;
			[Token(Token = "0x6001095")]
			set;
		}

		[Token(Token = "0x1700021A")]
		int ListIndex
		{
			[Token(Token = "0x6001096")]
			get;
			[Token(Token = "0x6001097")]
			set;
		}
	}
	[Token(Token = "0x20001FF")]
	public class FastIndex : IFastIndex
	{
		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD867E4", Offset = "0xD867E4")]
		private IFastIndexList <List>k__BackingField;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD867F4", Offset = "0xD867F4")]
		private int <ListIndex>k__BackingField;

		[Token(Token = "0x1700021B")]
		public IFastIndexList List
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x18E7EAC", Offset = "0x18E7EAC", VA = "0x18E7EAC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92CB0", Offset = "0xD92CB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x18E7EB4", Offset = "0x18E7EB4", VA = "0x18E7EB4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92CC0", Offset = "0xD92CC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public int ListIndex
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x18E7EBC", Offset = "0x18E7EBC", VA = "0x18E7EBC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92CD0", Offset = "0xD92CD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x18E7EC4", Offset = "0x18E7EC4", VA = "0x18E7EC4", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92CE0", Offset = "0xD92CE0")]
			set
			{
			}
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x18E7ECC", Offset = "0x18E7ECC", VA = "0x18E7ECC")]
		public FastIndex()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x18E7EF8", Offset = "0x18E7EF8", VA = "0x18E7EF8")]
		public void RemoveFromList()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class MonoBehaviourFastIndex : UnityEngine.MonoBehaviour, IFastIndex
	{
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86804", Offset = "0xD86804")]
		private IFastIndexList <List>k__BackingField;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86814", Offset = "0xD86814")]
		private int <ListIndex>k__BackingField;

		[Token(Token = "0x1700021D")]
		public IFastIndexList List
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0x15BB090", Offset = "0x15BB090", VA = "0x15BB090", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92CF0", Offset = "0xD92CF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600109F")]
			[Address(RVA = "0x15BB098", Offset = "0x15BB098", VA = "0x15BB098", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92D00", Offset = "0xD92D00")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public int ListIndex
		{
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x15BB0A0", Offset = "0x15BB0A0", VA = "0x15BB0A0", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92D10", Offset = "0xD92D10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x15BB0A8", Offset = "0x15BB0A8", VA = "0x15BB0A8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92D20", Offset = "0xD92D20")]
			set
			{
			}
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x15BB0B0", Offset = "0x15BB0B0", VA = "0x15BB0B0")]
		public MonoBehaviourFastIndex()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x15BB0DC", Offset = "0x15BB0DC", VA = "0x15BB0DC")]
		public void RemoveFromList()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class FastIndexList<T> : FastList<T>, IFastIndexList where T : IFastIndex
	{
		[Token(Token = "0x60010A4")]
		public FastIndexList()
		{
		}

		[Token(Token = "0x60010A5")]
		public FastIndexList(int capacity)
		{
		}

		[Token(Token = "0x60010A6")]
		public new void Clear()
		{
		}

		[Token(Token = "0x60010A7")]
		public void SetItem(int index, T item)
		{
		}

		[Token(Token = "0x60010A8")]
		public new int Add(T item)
		{
			return default(int);
		}

		[Token(Token = "0x60010A9")]
		public new void AddRange(T[] newItems)
		{
		}

		[Token(Token = "0x60010AA")]
		public new bool RemoveAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AB")]
		public override T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x60010AC")]
		public bool Remove(IFastIndex item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000202")]
	public class FastListBase
	{
		[Token(Token = "0x4000F96")]
		protected const int defaultCapacity = 4;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int _count;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int arraySize;

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x18E7FB8", Offset = "0x18E7FB8", VA = "0x18E7FB8")]
		public FastListBase()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class FastListBase<T> : FastListBase
	{
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] items;

		[Token(Token = "0x60010AE")]
		protected void DoubleCapacity()
		{
		}

		[Token(Token = "0x60010AF")]
		public FastListBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000204")]
	public class FastList<T> : FastListBase<T>
	{
		[Token(Token = "0x60010B0")]
		public FastList()
		{
		}

		[Token(Token = "0x60010B1")]
		public FastList(bool reserve, int reserved)
		{
		}

		[Token(Token = "0x60010B2")]
		public FastList(int capacity)
		{
		}

		[Token(Token = "0x60010B3")]
		public FastList(FastList<T> list)
		{
		}

		[Token(Token = "0x60010B4")]
		public FastList(T[] items)
		{
		}

		[Token(Token = "0x60010B5")]
		protected void SetCapacity(int capacity)
		{
		}

		[Token(Token = "0x60010B6")]
		public void SetCount(int count)
		{
		}

		[Token(Token = "0x60010B7")]
		public void EnsureCount(int count)
		{
		}

		[Token(Token = "0x60010B8")]
		public virtual void SetArray(T[] items)
		{
		}

		[Token(Token = "0x60010B9")]
		public int AddUnique(T item)
		{
			return default(int);
		}

		[Token(Token = "0x60010BA")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BB")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x60010BC")]
		public T GetIndex(T item)
		{
			return (T)null;
		}

		[Token(Token = "0x60010BD")]
		public virtual int Add(T item)
		{
			return default(int);
		}

		[Token(Token = "0x60010BE")]
		public virtual int AddThreadSafe(T item)
		{
			return default(int);
		}

		[Token(Token = "0x60010BF")]
		public virtual void Add(T item, T item2)
		{
		}

		[Token(Token = "0x60010C0")]
		public virtual void Add(T item, T item2, T item3)
		{
		}

		[Token(Token = "0x60010C1")]
		public virtual void Add(T item, T item2, T item3, T item4)
		{
		}

		[Token(Token = "0x60010C2")]
		public virtual void Add(T item, T item2, T item3, T item4, T item5)
		{
		}

		[Token(Token = "0x60010C3")]
		public virtual void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60010C4")]
		public virtual void AddRange(T[] arrayItems)
		{
		}

		[Token(Token = "0x60010C5")]
		public virtual void AddRange(T[] arrayItems, int startIndex, int length)
		{
		}

		[Token(Token = "0x60010C6")]
		public virtual void AddRange(FastList<T> list)
		{
		}

		[Token(Token = "0x60010C7")]
		public virtual int GrabListThreadSafe(FastList<T> threadList, bool fastClear = false)
		{
			return default(int);
		}

		[Token(Token = "0x60010C8")]
		public virtual void ChangeRange(int startIndex, T[] arrayItems)
		{
		}

		[Token(Token = "0x60010C9")]
		public virtual bool Remove(T item, bool weakReference = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60010CA")]
		public virtual void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60010CB")]
		public virtual void RemoveLast()
		{
		}

		[Token(Token = "0x60010CC")]
		public virtual void RemoveRange(int index, int length)
		{
		}

		[Token(Token = "0x60010CD")]
		public virtual T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x60010CE")]
		public virtual T Dequeue(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x60010CF")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x60010D0")]
		public virtual void ClearThreadSafe()
		{
		}

		[Token(Token = "0x60010D1")]
		public virtual void ClearRange(int startIndex)
		{
		}

		[Token(Token = "0x60010D2")]
		public virtual void FastClear()
		{
		}

		[Token(Token = "0x60010D3")]
		public virtual void FastClear(int newCount)
		{
		}

		[Token(Token = "0x60010D4")]
		public virtual T[] ToArray()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000205")]
	public class SortedFastList<T> : FastList<T>
	{
		[Token(Token = "0x60010D5")]
		public new void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60010D6")]
		public new void RemoveRange(int index, int endIndex)
		{
		}

		[Token(Token = "0x60010D7")]
		public SortedFastList()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class Console : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004CB")]
		public class LogEntry
		{
			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string logString;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string stackTrace;

			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LogType logType;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int commandType;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool unityLog;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float tStamp;

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject go;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MeshCombiner meshCombiner;

			[Token(Token = "0x6002049")]
			[Address(RVA = "0x18E2354", Offset = "0x18E2354", VA = "0x18E2354")]
			public LogEntry(string logString, string stackTrace, LogType logType, bool unityLog = false, int commandType = 0, [Optional] GameObject go, [Optional] MeshCombiner meshCombiner)
			{
			}
		}

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Console instance;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode consoleKey;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool logActive;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool showConsole;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool showOnError;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool combineAutomatic;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool showLast;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool setFocus;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject selectGO;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LogEntry> logs;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rect window;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rect inputRect;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rect logRect;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rect vScrollRect;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string inputText;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float scrollPos;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int lines;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool showUnityLog;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool showInputLog;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MeshCombiner[] meshCombiners;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MeshCombiner selectedMeshCombiner;

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x18E18B0", Offset = "0x18E18B0", VA = "0x18E18B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x18E19A0", Offset = "0x18E19A0", VA = "0x18E19A0")]
		private void ReportStartup()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x18E192C", Offset = "0x18E192C", VA = "0x18E192C")]
		private void FindMeshCombiners()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x18E1BDC", Offset = "0x18E1BDC", VA = "0x18E1BDC")]
		private void ReportMeshCombiners(bool reportSelected = true)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x18E1F00", Offset = "0x18E1F00", VA = "0x18E1F00")]
		private void ReportMeshCombiner(MeshCombiner meshCombiner, bool foundText = false)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x18E1CE4", Offset = "0x18E1CE4", VA = "0x18E1CE4")]
		public int SelectMeshCombiner(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x18E221C", Offset = "0x18E221C", VA = "0x18E221C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x18E2290", Offset = "0x18E2290", VA = "0x18E2290")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x18E2304", Offset = "0x18E2304", VA = "0x18E2304")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x18E1B04", Offset = "0x18E1B04", VA = "0x18E1B04")]
		public static void Log(string logString, int commandType = 0, [Optional] GameObject go, [Optional] MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x18E23C0", Offset = "0x18E23C0", VA = "0x18E23C0")]
		private void HandleLog(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x18E24B8", Offset = "0x18E24B8", VA = "0x18E24B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x18E24A0", Offset = "0x18E24A0", VA = "0x18E24A0")]
		private void SetConsoleActive(bool active)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x18E24FC", Offset = "0x18E24FC", VA = "0x18E24FC")]
		private void ExecuteCommand(string cmd)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x18E464C", Offset = "0x18E464C", VA = "0x18E464C")]
		private void DirSort()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x18E4504", Offset = "0x18E4504", VA = "0x18E4504")]
		private void DirSort(string name)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x18E46AC", Offset = "0x18E46AC", VA = "0x18E46AC")]
		public void SortLog(GameObject[] gos, bool showMeshInfo = false)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x18E4C28", Offset = "0x18E4C28", VA = "0x18E4C28")]
		private string GetMeshInfo(GameObject go, ref int meshCount)
		{
			return null;
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x18E4EEC", Offset = "0x18E4EEC", VA = "0x18E4EEC")]
		private void TimeStep(string cmd)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x18E4F24", Offset = "0x18E4F24", VA = "0x18E4F24")]
		private void TimeScale(string cmd)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x18E3E6C", Offset = "0x18E3E6C", VA = "0x18E3E6C")]
		private void Clear(LogEntry log, string cmd)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x18E4184", Offset = "0x18E4184", VA = "0x18E4184")]
		private void DirAll()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x18E3180", Offset = "0x18E3180", VA = "0x18E3180")]
		private void Dir()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x18E3790", Offset = "0x18E3790", VA = "0x18E3790")]
		private void Components(LogEntry log)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x18E50B8", Offset = "0x18E50B8", VA = "0x18E50B8")]
		private void ShowPath(bool showLines = true)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x18E4F5C", Offset = "0x18E4F5C", VA = "0x18E4F5C")]
		private string GetPath(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x18E390C", Offset = "0x18E390C", VA = "0x18E390C")]
		private void CD(LogEntry log, string name)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x18E3B18", Offset = "0x18E3B18", VA = "0x18E3B18")]
		public void SetActiveContains(string textContains, bool active)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x18E402C", Offset = "0x18E402C", VA = "0x18E402C")]
		public void DirContains(string textContains)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x18E5178", Offset = "0x18E5178", VA = "0x18E5178")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x18E5DE8", Offset = "0x18E5DE8", VA = "0x18E5DE8")]
		private void AnimateColor(Color col, LogEntry log, float multi)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x18E5F38", Offset = "0x18E5F38", VA = "0x18E5F38")]
		public Console()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class DirectDraw : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer[] mrs;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh[] meshes;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material[] mats;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] positions;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion[] rotations;

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x18E79E0", Offset = "0x18E79E0", VA = "0x18E79E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x18E7C90", Offset = "0x18E7C90", VA = "0x18E7C90")]
		private void SetMeshRenderersEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x18E7D0C", Offset = "0x18E7D0C", VA = "0x18E7D0C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x18E7E8C", Offset = "0x18E7E8C", VA = "0x18E7E8C")]
		public DirectDraw()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class DisabledLodMeshRender : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CachedLodGameObject cachedLodGO;

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x18E7E9C", Offset = "0x18E7E9C", VA = "0x18E7E9C")]
		public DisabledLodMeshRender()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class DisabledMeshRenderer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MeshCombiner meshCombiner;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CachedGameObject cachedGO;

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x18E7EA4", Offset = "0x18E7EA4", VA = "0x18E7EA4")]
		public DisabledMeshRenderer()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[ExecuteInEditMode]
	public class GarbageCollectMesh : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x18E821C", Offset = "0x18E821C", VA = "0x18E821C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x18E82D0", Offset = "0x18E82D0", VA = "0x18E82D0")]
		public GarbageCollectMesh()
		{
		}
	}
	[Token(Token = "0x200020B")]
	[ExecuteInEditMode]
	public class LightmapSettings : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer mr;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int lightmapIndex;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool setLightmapScaleOffset;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector4 lightmapScaleOffset;

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x18E8C28", Offset = "0x18E8C28", VA = "0x18E8C28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x18E8CDC", Offset = "0x18E8CDC", VA = "0x18E8CDC")]
		public LightmapSettings()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class MCS_CameraController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float mouseMoveSpeed;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float shiftMulti;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float controlMulti;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 oldMousePosition;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject cameraMountGO;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject cameraChildGO;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform cameraMountT;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform cameraChildT;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform t;

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x18E8CEC", Offset = "0x18E8CEC", VA = "0x18E8CEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x18E8D18", Offset = "0x18E8D18", VA = "0x18E8D18")]
		private void CreateParents()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x18E8E48", Offset = "0x18E8E48", VA = "0x18E8E48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x18E922C", Offset = "0x18E922C", VA = "0x18E922C")]
		public MCS_CameraController()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class MCS_FPSCounter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004CC")]
		public enum GUIType
		{
			[Token(Token = "0x4001F4E")]
			DisplayRunning,
			[Token(Token = "0x4001F4F")]
			DisplayResults,
			[Token(Token = "0x4001F50")]
			DisplayNothing
		}

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MCS_FPSCounter instance;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86844", Offset = "0xD86844")]
		public float interval;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GUIType displayType;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 gradientRange;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font fontRun;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font fontResult;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture logo;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showLogoOnResultsScreen;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KeyCode showHideButton;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool acceptInput;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool reset;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8687C", Offset = "0xD8687C")]
		public float currentFPS;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float averageFPS;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minimumFPS;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maximumFPS;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int totalFrameCount;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int tempFrameCount;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double tStamp;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double tStampTemp;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string currentFPSText;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string avgFPSText;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string minFPSText;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string maxFSPText;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GUIStyle bigStyle;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GUIStyle bigStyleShadow;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GUIStyle smallStyle;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GUIStyle smallStyleShadow;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GUIStyle smallStyleLabel;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GUIStyle headerStyle;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rect[] rectsRun;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Rect[] rectsResult;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Gradient gradient;

		[Token(Token = "0x4000FE8")]
		private const float line1 = 4f;

		[Token(Token = "0x4000FE9")]
		private const float line2 = 30f;

		[Token(Token = "0x4000FEA")]
		private const float line3 = 44f;

		[Token(Token = "0x4000FEB")]
		private const float line4 = 58f;

		[Token(Token = "0x4000FEC")]
		private const float labelWidth = 26f;

		[Token(Token = "0x4000FED")]
		private const float paddingH = 8f;

		[Token(Token = "0x4000FEE")]
		private const float lineHeight = 22f;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float columnRight;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float columnLeft;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Color fontShadow;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Color label;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Color colorCurrent;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Color colorAvg;

		[Token(Token = "0x4000FF5")]
		private const string resultHeader = "BENCHMARK RESULTS";

		[Token(Token = "0x4000FF6")]
		private const string resultLabelAvg = "AVERAGE FPS:";

		[Token(Token = "0x4000FF7")]
		private const string resultLabelMin = "MINIMUM FPS:";

		[Token(Token = "0x4000FF8")]
		private const string resultLabelMax = "MAXIMUM FPS:";

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GUIContent resultHeaderGUI;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GUIContent reslutLabelAvgGUI;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GUIContent avgTextGUI;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GUIContent instructions;

		[Token(Token = "0x4000FFD")]
		private const string runLabelAvg = "Avg:";

		[Token(Token = "0x4000FFE")]
		private const string runLabelMin = "Min:";

		[Token(Token = "0x4000FFF")]
		private const string runLabelMax = "Max:";

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector2 screenSize;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GUIType oldDisplayType;

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x18E9240", Offset = "0x18E9240", VA = "0x18E9240")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x18E942C", Offset = "0x18E942C", VA = "0x18E942C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x18E94C8", Offset = "0x18E94C8", VA = "0x18E94C8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x18E9AFC", Offset = "0x18E9AFC", VA = "0x18E9AFC")]
		private void SetRectsRun()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x18E9E70", Offset = "0x18E9E70", VA = "0x18E9E70")]
		private void SetRectsResult()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x18EA3A0", Offset = "0x18EA3A0", VA = "0x18EA3A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x18EA610", Offset = "0x18EA610", VA = "0x18EA610")]
		private void Update()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x18EAA14", Offset = "0x18EAA14", VA = "0x18EAA14")]
		public void StartBenchmark()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x18EAA40", Offset = "0x18EAA40", VA = "0x18EAA40")]
		public void StopBenchmark()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x18EA828", Offset = "0x18EA828", VA = "0x18EA828")]
		private void GetFPS()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x18EA7DC", Offset = "0x18EA7DC", VA = "0x18EA7DC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x18EA73C", Offset = "0x18EA73C", VA = "0x18EA73C")]
		private Color EvaluateGradient(float f)
		{
			return default(Color);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x18EAAB0", Offset = "0x18EAAB0", VA = "0x18EAAB0")]
		public MCS_FPSCounter()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public struct AABB3
	{
		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 min;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 max;

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x18DDAB8", Offset = "0x18DDAB8", VA = "0x18DDAB8")]
		public AABB3(Vector3 min, Vector3 max)
		{
		}
	}
	[Token(Token = "0x200020F")]
	public struct Triangle3
	{
		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 a;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 b;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 c;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 dirAb;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 dirAc;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 dirBc;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 h1;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float ab;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float ac;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float bc;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float area;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float h;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float ah;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float hb;

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x15C0F94", Offset = "0x15C0F94", VA = "0x15C0F94")]
		public void Calc()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public struct Sphere3
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 center;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float radius;

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x15BFF1C", Offset = "0x15BFF1C", VA = "0x15BFF1C")]
		public Sphere3(Vector3 center, float radius)
		{
		}
	}
	[Token(Token = "0x2000211")]
	public struct Int2
	{
		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x18DE530", Offset = "0x18DE530", VA = "0x18DE530")]
		public Int2(int x, int y)
		{
		}
	}
	[Token(Token = "0x2000212")]
	public struct Int3
	{
		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int z;

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x18E82D8", Offset = "0x18E82D8", VA = "0x18E82D8")]
		public Int3(int x, int y, int z)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x18E82E4", Offset = "0x18E82E4", VA = "0x18E82E4")]
		public static Int3 operator +(Int3 a, Int3 b)
		{
			return default(Int3);
		}
	}
	[Token(Token = "0x2000213")]
	public static class Mathw
	{
		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int[] bits;

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x18EB474", Offset = "0x18EB474", VA = "0x18EB474")]
		public static Vector3 Clamp(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x18EB4A8", Offset = "0x18EB4A8", VA = "0x18EB4A8")]
		public static Vector3 FloatToVector3(float v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x18EB4E4", Offset = "0x18EB4E4", VA = "0x18EB4E4")]
		public static float SinDeg(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x18EB558", Offset = "0x18EB558", VA = "0x18EB558")]
		public static float GetMax(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x18EB56C", Offset = "0x18EB56C", VA = "0x18EB56C")]
		public static Vector3 SetMin(Vector3 v, float min)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x18EB588", Offset = "0x18EB588", VA = "0x18EB588")]
		public static Vector3 Snap(Vector3 v, float snapSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x18EB628", Offset = "0x18EB628", VA = "0x18EB628")]
		public static Vector3 SnapRound(Vector3 v, float snapSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x18EB820", Offset = "0x18EB820", VA = "0x18EB820")]
		public static Vector3 Divide(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x18EB830", Offset = "0x18EB830", VA = "0x18EB830")]
		public static Vector3 Divide(float a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x18EB844", Offset = "0x18EB844", VA = "0x18EB844")]
		public static Vector3 Scale(Vector3 a, Int3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x18EB864", Offset = "0x18EB864", VA = "0x18EB864")]
		public static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x18E15C4", Offset = "0x18E15C4", VA = "0x18E15C4")]
		public static bool IntersectAABB3Sphere3(AABB3 box, Sphere3 sphere)
		{
			return default(bool);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x18EB8BC", Offset = "0x18EB8BC", VA = "0x18EB8BC")]
		public static bool IntersectAABB3Triangle3(Vector3 boxCenter, Vector3 boxHalfSize, Triangle3 triangle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x18ECC3C", Offset = "0x18ECC3C", VA = "0x18ECC3C")]
		private static void GetMinMax(float x0, float x1, float x2, out float min, out float max)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x18ECC8C", Offset = "0x18ECC8C", VA = "0x18ECC8C")]
		private static bool PlaneBoxOverlap(Vector3 normal, Vector3 vert, Vector3 maxBox)
		{
			return default(bool);
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x18EC4DC", Offset = "0x18EC4DC", VA = "0x18EC4DC")]
		private static float Abs(float v)
		{
			return default(float);
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x18EC4EC", Offset = "0x18EC4EC", VA = "0x18EC4EC")]
		private static bool AxisTest_X01(Vector3 v0, Vector3 v2, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x18EC9CC", Offset = "0x18EC9CC", VA = "0x18EC9CC")]
		private static bool AxisTest_X2(Vector3 v0, Vector3 v1, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x18EC624", Offset = "0x18EC624", VA = "0x18EC624")]
		private static bool AxisTest_Y02(Vector3 v0, Vector3 v2, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x18ECB04", Offset = "0x18ECB04", VA = "0x18ECB04")]
		private static bool AxisTest_Y1(Vector3 v0, Vector3 v1, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x18EC75C", Offset = "0x18EC75C", VA = "0x18EC75C")]
		private static bool AxisTest_Z12(Vector3 v1, Vector3 v2, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x18EC894", Offset = "0x18EC894", VA = "0x18EC894")]
		private static bool AxisTest_Z0(Vector3 v0, Vector3 v1, Vector3 boxHalfSize, float a, float b, float fa, float fb, out float min, out float max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000214")]
	public class MeshFilterRevert : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string guid;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string meshName;

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x15B9284", Offset = "0x15B9284", VA = "0x15B9284")]
		public bool DestroyAndReferenceMeshFilter(MeshFilter mf)
		{
			return default(bool);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x15B9280", Offset = "0x15B9280", VA = "0x15B9280")]
		public void RevertMeshFilter(MeshFilter mf)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x15BA4E4", Offset = "0x15BA4E4", VA = "0x15BA4E4")]
		public MeshFilterRevert()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public enum CustomHideFlags
	{
		[Token(Token = "0x400101D")]
		HideInHierarchy = 1,
		[Token(Token = "0x400101E")]
		HideInInspector = 2,
		[Token(Token = "0x400101F")]
		DontSaveInEditor = 4,
		[Token(Token = "0x4001020")]
		NotEditable = 8,
		[Token(Token = "0x4001021")]
		DontSaveInBuild = 0x10,
		[Token(Token = "0x4001022")]
		DontUnloadUnusedAsset = 0x20
	}
	[Token(Token = "0x2000216")]
	public static class Methods
	{
		[Token(Token = "0x6001133")]
		[Address(RVA = "0x15BA684", Offset = "0x15BA684", VA = "0x15BA684")]
		public static HideFlags CustomToHideFlags(CustomHideFlags customHideFlags)
		{
			return default(HideFlags);
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x15BA6A0", Offset = "0x15BA6A0", VA = "0x15BA6A0")]
		public static CustomHideFlags HideFlagsToCustom(HideFlags hideFlags)
		{
			return default(CustomHideFlags);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x15BA6BC", Offset = "0x15BA6BC", VA = "0x15BA6BC")]
		public static int GetFirstLayerOfLayerMask(LayerMask layerMask)
		{
			return default(int);
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x15B853C", Offset = "0x15B853C", VA = "0x15B853C")]
		public static bool IsLayerInLayerMask(LayerMask layerMask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x15BA70C", Offset = "0x15BA70C", VA = "0x15BA70C")]
		public static void SetMeshRenderersActive(FastList<MeshRenderer> mrs, bool active)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x15BA794", Offset = "0x15BA794", VA = "0x15BA794")]
		public static void SetCachedGOSActive(FastList<CachedGameObject> cachedGOS, bool active)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x15BA824", Offset = "0x15BA824", VA = "0x15BA824")]
		public static void SetTag(GameObject go, string tag)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x15BA8E0", Offset = "0x15BA8E0", VA = "0x15BA8E0")]
		public static void SetTagWhenCollider(GameObject go, string tag)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x15BAA0C", Offset = "0x15BAA0C", VA = "0x15BAA0C")]
		public static void SetTagAndLayer(GameObject go, string tag, int layer)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x15BAB00", Offset = "0x15BAB00", VA = "0x15BAB00")]
		public static void SetLayer(GameObject go, int layer)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x15BABD8", Offset = "0x15BABD8", VA = "0x15BABD8")]
		public static bool LayerMaskContainsLayer(int layerMask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x15BABEC", Offset = "0x15BABEC", VA = "0x15BABEC")]
		public static int GetFirstLayerInLayerMask(int layerMask)
		{
			return default(int);
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x15B8E54", Offset = "0x15B8E54", VA = "0x15B8E54")]
		public static bool Contains(string compare, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001140")]
		public static T[] Search<T>([Optional] GameObject parentGO)
		{
			return null;
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x15BACAC", Offset = "0x15BACAC", VA = "0x15BACAC")]
		public static FastList<GameObject> GetAllRootGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001142")]
		public static T[] SearchParent<T>(GameObject parentGO, bool searchInActiveGameObjects) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001143")]
		public static T[] SearchScene<T>(Scene scene, bool searchInActiveGameObjects) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001144")]
		public static FastList<T> SearchAllScenes<T>(bool searchInActiveGameObjects) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001145")]
		public static T Find<T>(GameObject parentGO, string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x15BADB8", Offset = "0x15BADB8", VA = "0x15BADB8")]
		public static void SetCollidersActive(Collider[] colliders, bool active, string[] nameList)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x15BAEB4", Offset = "0x15BAEB4", VA = "0x15BAEB4")]
		public static void SelectChildrenWithMeshRenderer(GameObject[] parentGOs)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x15BAEB8", Offset = "0x15BAEB8", VA = "0x15BAEB8")]
		public static void SelectChildrenWithMeshRenderer(Transform t)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x15B56D8", Offset = "0x15B56D8", VA = "0x15B56D8")]
		public static void DestroyChildren(Transform t)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x15B2CBC", Offset = "0x15B2CBC", VA = "0x15B2CBC")]
		public static void Destroy(GameObject go)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x15B928C", Offset = "0x15B928C", VA = "0x15B928C")]
		public static void Destroy(Component c)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x15B932C", Offset = "0x15B932C", VA = "0x15B932C")]
		public static void SetChildrenActive(Transform t, bool active)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x15B77F4", Offset = "0x15B77F4", VA = "0x15B77F4")]
		public static void SnapBoundsAndPreserveArea(ref Bounds bounds, float snapSize, Vector3 offset)
		{
		}

		[Token(Token = "0x600114E")]
		public static void ListRemoveAt<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x15BAEBC", Offset = "0x15BAEBC", VA = "0x15BAEBC")]
		public static void CopyComponent(Component component, GameObject target)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x15BAFD0", Offset = "0x15BAFD0", VA = "0x15BAFD0")]
		public static Transform GetChildRootTransform(Transform t, Transform rootT)
		{
			return null;
		}
	}
	[Token(Token = "0x2000217")]
	public class ReadMe : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool buttonEdit;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string readme;

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x15BCFDC", Offset = "0x15BCFDC", VA = "0x15BCFDC")]
		public ReadMe()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class SimpleMove : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rotDirMulti;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveMulti;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rotMulti;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 dir;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float t;

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x15BFC74", Offset = "0x15BFC74", VA = "0x15BFC74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x15BFCB4", Offset = "0x15BFCB4", VA = "0x15BFCB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x15BFE98", Offset = "0x15BFE98", VA = "0x15BFE98")]
		public SimpleMove()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class SwitchMeshCombineManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshCombiner[] meshCombiners;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] gos;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform t;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GUIStyle style1;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GUIStyle style2;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int selectIndex;

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x15C05D8", Offset = "0x15C05D8", VA = "0x15C05D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x15C0798", Offset = "0x15C0798", VA = "0x15C0798")]
		private void SetGosActive(bool active)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x15C0814", Offset = "0x15C0814", VA = "0x15C0814")]
		private void Update()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x15C0964", Offset = "0x15C0964", VA = "0x15C0964")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x15C0F84", Offset = "0x15C0F84", VA = "0x15C0F84")]
		public SwitchMeshCombineManager()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public static class TriangleAAB3
	{
	}
	[Token(Token = "0x200021B")]
	public class NavigationCamera : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float fov;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SO_NavigationCamera data;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Quaternion rot;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 currentSpeed;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float tStamp;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float deltaTime;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 startPosition;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 position;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion startRotation;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float scrollWheel;

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x15BB19C", Offset = "0x15BB19C", VA = "0x15BB19C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x15BB214", Offset = "0x15BB214", VA = "0x15BB214")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x15BB270", Offset = "0x15BB270", VA = "0x15BB270")]
		private void Update()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x15BB2AC", Offset = "0x15BB2AC", VA = "0x15BB2AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x15BB86C", Offset = "0x15BB86C", VA = "0x15BB86C")]
		public void SetCam()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x15BB218", Offset = "0x15BB218", VA = "0x15BB218")]
		public void RestoreCam()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x15BB78C", Offset = "0x15BB78C", VA = "0x15BB78C")]
		private float GetSpeedMulti()
		{
			return default(float);
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x15BB7F4", Offset = "0x15BB7F4", VA = "0x15BB7F4")]
		private void Lerp2Way(ref Vector3 v, Vector3 targetV, float upMulti, float downMulti)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x15BB8C4", Offset = "0x15BB8C4", VA = "0x15BB8C4")]
		private void Lerp2Way(ref float v, float targetV, float upMulti, float downMulti)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x15BB9B8", Offset = "0x15BB9B8", VA = "0x15BB9B8")]
		public NavigationCamera()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class SO_NavigationCamera : ScriptableObject
	{
		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mouseSensitity;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedUpLerpMulti;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedDownLerpMulti;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedSlow;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speedNormal;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speedFast;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float mouseScrollWheelMulti;

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x15BF840", Offset = "0x15BF840", VA = "0x15BF840")]
		public SO_NavigationCamera()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class BaseOctree
	{
		[Token(Token = "0x20004CD")]
		public class Cell
		{
			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Cell mainParent;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Cell parent;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool[] cellsUsed;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Bounds bounds;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int cellIndex;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int cellCount;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int level;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int maxLevels;

			[Token(Token = "0x600204A")]
			[Address(RVA = "0x18DDAD0", Offset = "0x18DDAD0", VA = "0x18DDAD0")]
			public Cell()
			{
			}

			[Token(Token = "0x600204B")]
			[Address(RVA = "0x18DDAD8", Offset = "0x18DDAD8", VA = "0x18DDAD8")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x600204C")]
			[Address(RVA = "0x18DDB78", Offset = "0x18DDB78", VA = "0x18DDB78")]
			public Cell(Cell parent, int cellIndex, Bounds bounds)
			{
			}

			[Token(Token = "0x600204D")]
			[Address(RVA = "0x18DDBE8", Offset = "0x18DDBE8", VA = "0x18DDBE8")]
			public void SetCell(Cell parent, int cellIndex, Bounds bounds)
			{
			}

			[Token(Token = "0x600204E")]
			protected int AddCell<T, U>(ref T[] cells, Vector3 position, out bool maxCellCreated) where T : Cell, new() where U : Cell, new()
			{
				return default(int);
			}

			[Token(Token = "0x600204F")]
			protected T GetCell<T>(T[] cells, Vector3 position)
			{
				return (T)null;
			}

			[Token(Token = "0x6002050")]
			protected void AddCell<T, U>(ref T[] cells, int index, int x, int y, int z, out bool maxCellCreated) where T : Cell, new() where U : Cell, new()
			{
			}

			[Token(Token = "0x6002051")]
			[Address(RVA = "0x18DDC24", Offset = "0x18DDC24", VA = "0x18DDC24")]
			public bool InsideBounds(Vector3 position)
			{
				return default(bool);
			}

			[Token(Token = "0x6002052")]
			[Address(RVA = "0x18DDD4C", Offset = "0x18DDD4C", VA = "0x18DDD4C")]
			public void Reset(ref Cell[] cells)
			{
			}
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x18DDAC8", Offset = "0x18DDAC8", VA = "0x18DDAC8")]
		public BaseOctree()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class ObjectOctree
	{
		[Token(Token = "0x20004CE")]
		public class LODParent
		{
			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject cellGO;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform cellT;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LODGroup lodGroup;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LODLevel[] lodLevels;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool hasChanged;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int jobsPending;

			[Token(Token = "0x6002053")]
			[Address(RVA = "0x15BBE6C", Offset = "0x15BBE6C", VA = "0x15BBE6C")]
			public LODParent(int lodCount)
			{
			}

			[Token(Token = "0x6002054")]
			[Address(RVA = "0x15B2D5C", Offset = "0x15B2D5C", VA = "0x15B2D5C")]
			public void AssignLODGroup(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6002055")]
			[Address(RVA = "0x15BC490", Offset = "0x15BC490", VA = "0x15BC490")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}
		}

		[Token(Token = "0x20004CF")]
		public class LODLevel
		{
			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FastList<CachedGameObject> cachedGOs;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<CombineCondition, MeshObjectsHolder> meshObjectsHoldersLookup;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FastList<MeshObjectsHolder> changedMeshObjectsHolders;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FastList<MeshRenderer> newMeshRenderers;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int vertCount;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int objectCount;

			[Token(Token = "0x6002056")]
			[Address(RVA = "0x15BC380", Offset = "0x15BC380", VA = "0x15BC380")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6002057")]
			[Address(RVA = "0x15BC3F8", Offset = "0x15BC3F8", VA = "0x15BC3F8")]
			public LODLevel()
			{
			}
		}

		[Token(Token = "0x20004D0")]
		public class MaxCell : Cell
		{
			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static int maxCellCount;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LODParent[] lodParents;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<LODParent> changedLodParents;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool hasChanged;

			[Token(Token = "0x6002058")]
			[Address(RVA = "0x15B7A8C", Offset = "0x15B7A8C", VA = "0x15B7A8C")]
			public void ApplyChanges(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6002059")]
			[Address(RVA = "0x15B79A4", Offset = "0x15B79A4", VA = "0x15B79A4")]
			public MaxCell()
			{
			}
		}

		[Token(Token = "0x20004D1")]
		public class Cell : BaseOctree.Cell
		{
			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Cell[] cells;

			[Token(Token = "0x600205A")]
			[Address(RVA = "0x15B77EC", Offset = "0x15B77EC", VA = "0x15B77EC")]
			public Cell()
			{
			}

			[Token(Token = "0x600205B")]
			[Address(RVA = "0x15BB9C8", Offset = "0x15BB9C8", VA = "0x15BB9C8")]
			public Cell(Vector3 position, Vector3 size, int maxLevels)
			{
			}

			[Token(Token = "0x600205C")]
			[Address(RVA = "0x15BB9D0", Offset = "0x15BB9D0", VA = "0x15BB9D0")]
			public MaxCell GetCell(Vector3 position)
			{
				return null;
			}

			[Token(Token = "0x600205D")]
			[Address(RVA = "0x15BBA3C", Offset = "0x15BBA3C", VA = "0x15BBA3C")]
			private MaxCell GetCellInternal(Vector3 position)
			{
				return null;
			}

			[Token(Token = "0x600205E")]
			[Address(RVA = "0x15B7750", Offset = "0x15B7750", VA = "0x15B7750")]
			public CachedGameObject AddObject(Vector3 position, MeshCombiner meshCombiner, CachedGameObject cachedGO, int lodParentIndex, int lodLevel, bool isChangeMode = false)
			{
				return null;
			}

			[Token(Token = "0x600205F")]
			[Address(RVA = "0x15BBB28", Offset = "0x15BBB28", VA = "0x15BBB28")]
			private void AddObjectInternal(MeshCombiner meshCombiner, CachedGameObject cachedGO, Vector3 position, int lodParentIndex, int lodLevel, bool isChangeMode)
			{
			}

			[Token(Token = "0x6002060")]
			[Address(RVA = "0x15B7068", Offset = "0x15B7068", VA = "0x15B7068")]
			public void SortObjects(MeshCombiner meshCombiner)
			{
			}

			[Token(Token = "0x6002061")]
			[Address(RVA = "0x15BBF68", Offset = "0x15BBF68", VA = "0x15BBF68")]
			public bool SortObject(MeshCombiner meshCombiner, LODLevel lod, CachedGameObject cachedGO, bool isChangeMode = false)
			{
				return default(bool);
			}

			[Token(Token = "0x6002062")]
			[Address(RVA = "0x15B7CD8", Offset = "0x15B7CD8", VA = "0x15B7CD8")]
			public void CombineMeshes(MeshCombiner meshCombiner, int lodParentIndex)
			{
			}

			[Token(Token = "0x6002063")]
			[Address(RVA = "0x15B963C", Offset = "0x15B963C", VA = "0x15B963C")]
			public void Draw(MeshCombiner meshCombiner, bool onlyMaxLevel, bool drawLevel0)
			{
			}
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x15BB9C0", Offset = "0x15BB9C0", VA = "0x15BB9C0")]
		public ObjectOctree()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021F")]
	public class MeshObjectsHolder
	{
		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastList<MeshObject> meshObjects;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectOctree.LODParent lodParent;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FastList<CachedGameObject> newCachedGOs;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int lodLevel;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material mat;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool hasChanged;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CombineCondition combineCondition;

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x15BA5E4", Offset = "0x15BA5E4", VA = "0x15BA5E4")]
		public MeshObjectsHolder(ref CombineCondition combineCondition, Material mat)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000220")]
	public class FoundCombineConditions
	{
		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HashSet<CombineCondition> combineConditions;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int combineConditionsCount;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int matCount;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int lightmapIndexCount;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int shadowCastingCount;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int receiveShadowsCount;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int lightmapScale;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int receiveGICount;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int lightProbeUsageCount;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int reflectionProbeUsageCount;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int probeAnchorCount;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int motionVectorGenerationModeCount;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int layerCount;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int staticEditorFlagsCount;

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x18E8150", Offset = "0x18E8150", VA = "0x18E8150")]
		public FoundCombineConditions()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000221")]
	public struct CombineCondition
	{
		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<object> countSet;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int matInstanceId;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int lightmapIndex;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ShadowCastingMode shadowCastingMode;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool receiveShadows;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lightmapScale;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LightProbeUsage lightProbeUsage;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReflectionProbeUsage reflectionProbeUsage;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform probeAnchor;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MotionVectorGenerationMode motionVectorGenerationMode;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int layer;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int rootInstanceId;

		[Token(Token = "0x1700021F")]
		public static CombineCondition Default
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x18DF078", Offset = "0x18DF078", VA = "0x18DF078")]
			get
			{
				return default(CombineCondition);
			}
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x18DF0B8", Offset = "0x18DF0B8", VA = "0x18DF0B8")]
		public static void MakeFoundReport(FoundCombineConditions fcc)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x18DFF74", Offset = "0x18DFF74", VA = "0x18DFF74")]
		public void ReadFromGameObject(int rootInstanceId, CombineConditionSettings combineConditions, bool copyBakedLighting, GameObject go, Transform t, MeshRenderer mr, Material mat)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x18E012C", Offset = "0x18E012C", VA = "0x18E012C")]
		private float GetLightmapScale(MeshRenderer mr)
		{
			return default(float);
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x18E0134", Offset = "0x18E0134", VA = "0x18E0134")]
		private void SetLightmapScale(MeshRenderer mr, float lightmapScale)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x18E0138", Offset = "0x18E0138", VA = "0x18E0138")]
		public void WriteToGameObject(GameObject go, MeshRenderer mr)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000222")]
	public class CombineConditionSettings
	{
		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool foldout;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool sameMaterial;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool sameShadowCastingMode;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool sameReceiveShadows;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool sameReceiveGI;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool sameLightmapScale;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool sameLightProbeUsage;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool sameReflectionProbeUsage;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool sameProbeAnchor;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool sameMotionVectorGenerationMode;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool sameStaticEditorFlags;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool sameLayer;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CombineCondition combineCondition;

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x18E0250", Offset = "0x18E0250", VA = "0x18E0250")]
		public CombineConditionSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public class MeshObject
	{
		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CachedGameObject cachedGO;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCache meshCache;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshIndex;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 position;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotation;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 lightmapScaleOffset;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool intersectsSurface;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int startNewTriangleIndex;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int newTriangleCount;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool skip;

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x15BA544", Offset = "0x15BA544", VA = "0x15BA544")]
		public MeshObject(CachedGameObject cachedGO, int subMeshIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000224")]
	public class CachedGameObject
	{
		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform searchParentT;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform t;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer mr;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilterRevert mfr;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshFilter mf;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh mesh;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Matrix4x4 mt;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Matrix4x4 mtNormals;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform rootT;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector3 rootTLossyScale;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public int rootInstanceId;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool excludeCombine;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool mrEnabled;

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x18DDD60", Offset = "0x18DDD60", VA = "0x18DDD60")]
		public CachedGameObject(Transform searchParentT, GameObject go, Transform t, MeshRenderer mr, MeshFilter mf, Mesh mesh)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x18DDE70", Offset = "0x18DDE70", VA = "0x18DDE70")]
		public CachedGameObject(CachedComponents cachedComponent)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x18DDF70", Offset = "0x18DDF70", VA = "0x18DDF70")]
		public void GetRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000225")]
	public class CachedLodGameObject : CachedGameObject
	{
		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Vector3 center;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int lodCount;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int lodLevel;

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x18DDFD0", Offset = "0x18DDFD0", VA = "0x18DDFD0")]
		public CachedLodGameObject(CachedGameObject cachedGO, int lodCount, int lodLevel)
		{
		}
	}
	[Token(Token = "0x2000226")]
	[ExecuteInEditMode]
	public class CreateOverlapColliders : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004D2")]
		public class LodInfo
		{
			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FastList<LodLevel> lodLevels;

			[Token(Token = "0x6002064")]
			[Address(RVA = "0x18E6B48", Offset = "0x18E6B48", VA = "0x18E6B48")]
			public void SetActiveOnlyLodLevel(int lodLevel)
			{
			}

			[Token(Token = "0x6002065")]
			[Address(RVA = "0x18E7838", Offset = "0x18E7838", VA = "0x18E7838")]
			public void SetActiveOtherLodLevels(int excludeLevel)
			{
			}

			[Token(Token = "0x6002066")]
			[Address(RVA = "0x18E6BD0", Offset = "0x18E6BD0", VA = "0x18E6BD0")]
			public void SetLayerLodLevel(int lodLevel, int layer, int otherLayer)
			{
			}

			[Token(Token = "0x6002067")]
			[Address(RVA = "0x18E6F14", Offset = "0x18E6F14", VA = "0x18E6F14")]
			public void CreateLodGroupColliders(LODGroup lodGroup, Transform parentT)
			{
			}

			[Token(Token = "0x6002068")]
			[Address(RVA = "0x18E6EA4", Offset = "0x18E6EA4", VA = "0x18E6EA4")]
			public LodInfo()
			{
			}
		}

		[Token(Token = "0x20004D3")]
		public class LodLevel
		{
			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FastList<Collider> colliders;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FastList<GameObject> gos;

			[Token(Token = "0x6002069")]
			[Address(RVA = "0x18E77B0", Offset = "0x18E77B0", VA = "0x18E77B0")]
			public void SetCollidersActive(bool active)
			{
			}

			[Token(Token = "0x600206A")]
			[Address(RVA = "0x18E78C0", Offset = "0x18E78C0", VA = "0x18E78C0")]
			public void SetLayer(int layer)
			{
			}

			[Token(Token = "0x600206B")]
			[Address(RVA = "0x18E7948", Offset = "0x18E7948", VA = "0x18E7948")]
			public LodLevel()
			{
			}
		}

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool create;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool destroy;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject newGO;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int lodLevel;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool setLayer;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool foundLodGroup;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<GameObject, GameObject> lookupOrigCollider;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<GameObject, GameObject> lookupColliderOrig;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Dictionary<Collider, LodInfo> lodInfoLookup;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static FastList<LodInfo> lodInfos;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static FastList<GameObject> selectGos;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static HashSet<Mesh> lodGroupMeshes;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Transform newT;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static int overlapLayer;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static float colliderScaleMulti;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static FastList<Collider> colliders;

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x18E5FD4", Offset = "0x18E5FD4", VA = "0x18E5FD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x18E6880", Offset = "0x18E6880", VA = "0x18E6880")]
		public static void SaveCollidersState(LayerMask layerMask)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x18E69F8", Offset = "0x18E69F8", VA = "0x18E69F8")]
		public static void RestoreCollidersState()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x18E6768", Offset = "0x18E6768", VA = "0x18E6768")]
		public static void EnableLodLevelCollider(int lodLevel, int lodGroupLayer)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x18E6C68", Offset = "0x18E6C68", VA = "0x18E6C68")]
		public static bool IsAnythingOnFreeLayers(int insideLayer, int lodGroupLayer)
		{
			return default(bool);
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x18E60FC", Offset = "0x18E60FC", VA = "0x18E60FC")]
		public static bool Create(Transform parentT, LayerMask overlapLayerMask, int lodGroupLayer, ref GameObject overlapCollidersGO, bool removeSamePositionTriangles)
		{
			return default(bool);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x18E731C", Offset = "0x18E731C", VA = "0x18E731C")]
		private static MeshCollider CreateMeshCollider(MeshFilter mf, Transform parentT, string prefixName)
		{
			return null;
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x18E66B4", Offset = "0x18E66B4", VA = "0x18E66B4")]
		public static void DestroyOverlapColliders(GameObject go)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x18E74F0", Offset = "0x18E74F0", VA = "0x18E74F0")]
		public static void CopyTransform(Transform st, Transform dt)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x18E7610", Offset = "0x18E7610", VA = "0x18E7610")]
		public CreateOverlapColliders()
		{
		}
	}
	[Token(Token = "0x2000227")]
	[ExecuteInEditMode]
	public class RandomizeTransform : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 scaleRange;

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x15BCE90", Offset = "0x15BCE90", VA = "0x15BCE90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x15BCF94", Offset = "0x15BCF94", VA = "0x15BCF94")]
		public RandomizeTransform()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public static class RemoveOverlappingTris
	{
		[Token(Token = "0x20004D4")]
		private struct ColliderInfo
		{
			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject go;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int layer;
		}

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FastList<Triangle3> triangles;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<ColliderInfo> collidersInfo;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static FastList<Collider> colliders;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static FastList<RaycastHit> hitInfos;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static FastList<RaycastHit> hitInfos2;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static RaycastHit hitInfo;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static HashSet<GameObject> toCombineGos;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Triangle3 tri;

		[Token(Token = "0x40010A6")]
		private const byte insideVoxel = 1;

		[Token(Token = "0x40010A7")]
		private const byte outsideVoxel = 2;

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x15B1D94", Offset = "0x15B1D94", VA = "0x15B1D94")]
		public static void RemoveOverlap(Transform t, MeshCombineJobManager.MeshCombineJob meshCombineJob, MeshCache.SubMeshCache newMeshCache, ref byte[] vertexIsInsideCollider, [Optional] string excludeOverlapRemovalTag)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x15BF038", Offset = "0x15BF038", VA = "0x15BF038")]
		private static bool CheckAnyInsideOfLodGroups(int layerMask, int lodLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x15BEEAC", Offset = "0x15BEEAC", VA = "0x15BEEAC")]
		private static bool IsOneColliderGOInToCombineGos()
		{
			return default(bool);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x15BED90", Offset = "0x15BED90", VA = "0x15BED90")]
		private static bool AreAllHitInfosALodGroup()
		{
			return default(bool);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x15BE7D0", Offset = "0x15BE7D0", VA = "0x15BE7D0")]
		private static bool AnythingInside()
		{
			return default(bool);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x15BF588", Offset = "0x15BF588", VA = "0x15BF588")]
		private static bool Linecast(Vector3 p1, Vector3 p2, int layerMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x15BE9A4", Offset = "0x15BE9A4", VA = "0x15BE9A4")]
		private static bool LinecastAll(Vector3 p1, Vector3 p2, int layerMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x15BEB58", Offset = "0x15BEB58", VA = "0x15BEB58")]
		private static bool IntersectAny()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000229")]
	public class SectorGrid3D<T>
	{
		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastIndexList<Sector3D<T>> sectorList;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Sector3D<T>[,,] sectors;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Rect rect;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Int3 sectorCount;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 sectorGridOffset;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 sectorSize;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 halfSectorSize;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 invSectorSize;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 totalSize;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 halfTotalSize;

		[Token(Token = "0x600118C")]
		public SectorGrid3D(Int3 sectorCount, Vector3 sectorSize, Vector3 sectorGridOffset)
		{
		}

		[Token(Token = "0x600118D")]
		public void GetSectors(FastList<Sector3D<T>> list, Vector3 pos, float radius)
		{
		}

		[Token(Token = "0x600118E")]
		public void GetOrCreateSector(Vector3 pos, out Sector3D<T> sector)
		{
		}

		[Token(Token = "0x600118F")]
		public Int3 GetSectorIndex(Vector3 pos)
		{
			return default(Int3);
		}

		[Token(Token = "0x6001190")]
		public Sector3D<T> GetSector(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6001191")]
		public Sector3D<T> CreateSector(ref Int3 s)
		{
			return null;
		}

		[Token(Token = "0x6001192")]
		public void RemoveSector(Vector3 pos)
		{
		}

		[Token(Token = "0x6001193")]
		public void RemoveSector(Int3 sectorIndex)
		{
		}

		[Token(Token = "0x6001194")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001195")]
		public void Draw()
		{
		}

		[Token(Token = "0x6001196")]
		public void DrawSectors(FastList<Sector3D<T>> sectors, Color color)
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class Sector3D<T> : FastIndex
	{
		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T list;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Bounds bounds;

		[Token(Token = "0x6001197")]
		public Sector3D()
		{
		}
	}
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xD7E304", Offset = "0xD7E304")]
	[ExecuteInEditMode]
	public abstract class MCS_RemoveTris : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HashSet<GameObjectLayer> gos;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasRegistered;

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x18EACEC", Offset = "0x18EACEC", VA = "0x18EACEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x18EAEA4", Offset = "0x18EAEA4", VA = "0x18EAEA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x18EACF4", Offset = "0x18EACF4", VA = "0x18EACF4")]
		private void Register(bool first)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x18EAEAC", Offset = "0x18EAEAC", VA = "0x18EAEAC")]
		private void Init(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x18EAFA0", Offset = "0x18EAFA0", VA = "0x18EAFA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x18EB1BC", Offset = "0x18EB1BC", VA = "0x18EB1BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x18EAFA4", Offset = "0x18EAFA4", VA = "0x18EAFA4")]
		private void Unregister()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x18EB2DC", Offset = "0x18EB2DC", VA = "0x18EB2DC")]
		private void OnCombine(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x18EB1C0", Offset = "0x18EB1C0", VA = "0x18EB1C0")]
		private void OnCombineReady(MeshCombiner meshCombiner)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x18DBA28", Offset = "0x18DBA28", VA = "0x18DBA28")]
		protected MCS_RemoveTris()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public struct GameObjectLayer
	{
		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject go;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int layer;

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x18E81C0", Offset = "0x18E81C0", VA = "0x18E81C0")]
		public GameObjectLayer(GameObject go)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x18E81F8", Offset = "0x18E81F8", VA = "0x18E81F8")]
		public void RestoreLayer()
		{
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x200022D")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x1A387BC", Offset = "0x1A387BC", VA = "0x1A387BC")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1A39074", Offset = "0x1A39074", VA = "0x1A39074")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x1A393FC", Offset = "0x1A393FC", VA = "0x1A393FC")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x1A3951C", Offset = "0x1A3951C", VA = "0x1A3951C")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x1A3966C", Offset = "0x1A3966C", VA = "0x1A3966C", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x1A39784", Offset = "0x1A39784", VA = "0x1A39784", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x1A39990", Offset = "0x1A39990", VA = "0x1A39990", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x1A39A8C", Offset = "0x1A39A8C", VA = "0x1A39A8C", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x1A39BC4", Offset = "0x1A39BC4", VA = "0x1A39BC4", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x1A39C7C", Offset = "0x1A39C7C", VA = "0x1A39C7C", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1A39DAC", Offset = "0x1A39DAC", VA = "0x1A39DAC", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x1A39EDC", Offset = "0x1A39EDC", VA = "0x1A39EDC", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1A3A3D0", Offset = "0x1A3A3D0", VA = "0x1A3A3D0", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1A3A994", Offset = "0x1A3A994", VA = "0x1A3A994", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1A3AA2C", Offset = "0x1A3AA2C", VA = "0x1A3AA2C", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x1A3ACEC", Offset = "0x1A3ACEC", VA = "0x1A3ACEC", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x1A3AD04", Offset = "0x1A3AD04", VA = "0x1A3AD04", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x1A3AE14", Offset = "0x1A3AE14", VA = "0x1A3AE14", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x1A3B058", Offset = "0x1A3B058", VA = "0x1A3B058", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x1A3B2C0", Offset = "0x1A3B2C0", VA = "0x1A3B2C0", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x1A3AA50", Offset = "0x1A3AA50", VA = "0x1A3AA50")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x1A3B40C", Offset = "0x1A3B40C", VA = "0x1A3B40C", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x1A38F44", Offset = "0x1A38F44", VA = "0x1A38F44")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1A3B794", Offset = "0x1A3B794", VA = "0x1A3B794")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x1A3B8D8", Offset = "0x1A3B8D8", VA = "0x1A3B8D8")]
		public void PingAll()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1A3B98C", Offset = "0x1A3B98C", VA = "0x1A3B98C")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1A3BA84", Offset = "0x1A3BA84", VA = "0x1A3BA84")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1A3BB24", Offset = "0x1A3BB24", VA = "0x1A3BB24")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1A3BC64", Offset = "0x1A3BC64", VA = "0x1A3BC64")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x1A395D0", Offset = "0x1A395D0", VA = "0x1A395D0")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x1A3947C", Offset = "0x1A3947C", VA = "0x1A3947C")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200022E")]
	public class HapticDevice
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x156C7A8", Offset = "0x156C7A8", VA = "0x156C7A8")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x20004D5")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x600206C")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004D6")]
		private class Device
		{
			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x600206D")]
			[Address(RVA = "0x1A3C4A0", Offset = "0x1A3C4A0", VA = "0x1A3C4A0")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004D7")]
		public class StreamHost
		{
			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x600206E")]
			[Address(RVA = "0x1A3C4A8", Offset = "0x1A3C4A8", VA = "0x1A3C4A8")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1A3C1E0", Offset = "0x1A3C1E0", VA = "0x1A3C1E0")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1A3C204", Offset = "0x1A3C204", VA = "0x1A3C204")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x1A3C388", Offset = "0x1A3C388", VA = "0x1A3C388")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x1A3C3B0", Offset = "0x1A3C3B0", VA = "0x1A3C3B0")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C9")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x1A3C3C0", Offset = "0x1A3C3C0", VA = "0x1A3C3C0")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x1A3B6A4", Offset = "0x1A3B6A4", VA = "0x1A3B6A4")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x1A3BD04", Offset = "0x1A3BD04", VA = "0x1A3BD04")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x1A3BF0C", Offset = "0x1A3BF0C", VA = "0x1A3BF0C")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000230")]
	public class AndroidWidget_ControlButton : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD868C4", Offset = "0xD868C4")]
		[SerializeField]
		private Sprite defaultImage;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x1A3C4B0", Offset = "0x1A3C4B0", VA = "0x1A3C4B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x1A3C558", Offset = "0x1A3C558", VA = "0x1A3C558")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x1A3CC70", Offset = "0x1A3CC70", VA = "0x1A3CC70")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x1A3CECC", Offset = "0x1A3CECC", VA = "0x1A3CECC")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x1A3CF5C", Offset = "0x1A3CF5C", VA = "0x1A3CF5C")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class AndroidWidget_ObjectPool : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x1A3CF64", Offset = "0x1A3CF64", VA = "0x1A3CF64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x1A3D0BC", Offset = "0x1A3D0BC", VA = "0x1A3D0BC")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x1A3D194", Offset = "0x1A3D194", VA = "0x1A3D194")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1A3D23C", Offset = "0x1A3D23C", VA = "0x1A3D23C")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class AndroidWidget_PairedDeviceUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86980", Offset = "0xD86980")]
		[SerializeField]
		private Image deviceImage;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD869FC", Offset = "0xD869FC")]
		[SerializeField]
		private Sprite leftSide;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1A3D244", Offset = "0x1A3D244", VA = "0x1A3D244")]
		private void Start()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x1A3D31C", Offset = "0x1A3D31C", VA = "0x1A3D31C")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1A3D5F4", Offset = "0x1A3D5F4", VA = "0x1A3D5F4")]
		private void OnPing()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x1A3D82C", Offset = "0x1A3D82C", VA = "0x1A3D82C")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x1A3D9B8", Offset = "0x1A3D9B8", VA = "0x1A3D9B8")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class AndroidWidget_SettingUIAnimation : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x1A3D9C0", Offset = "0x1A3D9C0", VA = "0x1A3D9C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x1A3DA30", Offset = "0x1A3DA30", VA = "0x1A3DA30")]
		public void Hide()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x1A3DA50", Offset = "0x1A3DA50", VA = "0x1A3DA50")]
		public void Show()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x1A3DA70", Offset = "0x1A3DA70", VA = "0x1A3DA70")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x1A3DB80", Offset = "0x1A3DB80", VA = "0x1A3DB80")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class AndroidWidget_UI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86A88", Offset = "0xD86A88")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x1A3DB88", Offset = "0x1A3DB88", VA = "0x1A3DB88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x1A3DF94", Offset = "0x1A3DF94", VA = "0x1A3DF94")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x1A3DCD0", Offset = "0x1A3DCD0", VA = "0x1A3DCD0")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x1A3E1F0", Offset = "0x1A3E1F0", VA = "0x1A3E1F0")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x1A3E288", Offset = "0x1A3E288", VA = "0x1A3E288")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x1A3E2A8", Offset = "0x1A3E2A8", VA = "0x1A3E2A8")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x1A3E2C8", Offset = "0x1A3E2C8", VA = "0x1A3E2C8")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x1A3E2E4", Offset = "0x1A3E2E4", VA = "0x1A3E2E4")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x1A3E0DC", Offset = "0x1A3E0DC", VA = "0x1A3E0DC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x1A3E598", Offset = "0x1A3E598", VA = "0x1A3E598")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000235")]
	public class PositonIconSetting
	{
		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x156FC9C", Offset = "0x156FC9C", VA = "0x156FC9C")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000236")]
	public class IconSetting
	{
		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86AD4", Offset = "0xD86AD4")]
		public PositonIconSetting Vest;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x156ED44", Offset = "0x156ED44", VA = "0x156ED44")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class Android_DeviceController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86B0C", Offset = "0xD86B0C")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86B88", Offset = "0xD86B88")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86C14", Offset = "0xD86C14")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x1A3E5A8", Offset = "0x1A3E5A8", VA = "0x1A3E5A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x1A3E77C", Offset = "0x1A3E77C", VA = "0x1A3E77C")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x1A3E920", Offset = "0x1A3E920", VA = "0x1A3E920")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x1A3E9B4", Offset = "0x1A3E9B4", VA = "0x1A3E9B4")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x1A3EA30", Offset = "0x1A3EA30", VA = "0x1A3EA30")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x1A3E818", Offset = "0x1A3E818", VA = "0x1A3E818")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x1A3EEB8", Offset = "0x1A3EEB8", VA = "0x1A3EEB8")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x1A3EEE0", Offset = "0x1A3EEE0", VA = "0x1A3EEE0")]
		private void Ping()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x1A3EF58", Offset = "0x1A3EF58", VA = "0x1A3EF58")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x1A3F038", Offset = "0x1A3F038", VA = "0x1A3F038")]
		private void ToRight()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x1A3F118", Offset = "0x1A3F118", VA = "0x1A3F118")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x1A3ED4C", Offset = "0x1A3ED4C", VA = "0x1A3ED4C")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x1A3ECE4", Offset = "0x1A3ECE4", VA = "0x1A3ECE4")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x1A3ED18", Offset = "0x1A3ED18", VA = "0x1A3ED18")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x1A3F164", Offset = "0x1A3F164", VA = "0x1A3F164")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class Android_UIController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86CD0", Offset = "0xD86CD0")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x1A3F208", Offset = "0x1A3F208", VA = "0x1A3F208")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x1A3F64C", Offset = "0x1A3F64C", VA = "0x1A3F64C")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x1A3FD40", Offset = "0x1A3FD40", VA = "0x1A3FD40")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x1A3FDD8", Offset = "0x1A3FDD8", VA = "0x1A3FDD8")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1A3FE70", Offset = "0x1A3FE70", VA = "0x1A3FE70")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x1A3FEBC", Offset = "0x1A3FEBC", VA = "0x1A3FEBC")]
		private void NextPage()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x1A3FF44", Offset = "0x1A3FF44", VA = "0x1A3FF44")]
		private void BackPage()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x1A3FFCC", Offset = "0x1A3FFCC", VA = "0x1A3FFCC")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class BhapticsAndroidManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x1A40484", Offset = "0x1A40484", VA = "0x1A40484")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x1A40598", Offset = "0x1A40598", VA = "0x1A40598")]
		private void Start()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x1A40634", Offset = "0x1A40634", VA = "0x1A40634")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x1A3CCD8", Offset = "0x1A3CCD8", VA = "0x1A3CCD8")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x1A3D908", Offset = "0x1A3D908", VA = "0x1A3D908")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1A3D678", Offset = "0x1A3D678", VA = "0x1A3D678")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1A40AA4", Offset = "0x1A40AA4", VA = "0x1A40AA4")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1A3E49C", Offset = "0x1A3E49C", VA = "0x1A3E49C")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x1A3CAF0", Offset = "0x1A3CAF0", VA = "0x1A3CAF0")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1A40B58", Offset = "0x1A40B58", VA = "0x1A40B58")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1A3DF10", Offset = "0x1A3DF10", VA = "0x1A3DF10")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1A40CD0", Offset = "0x1A40CD0", VA = "0x1A40CD0")]
		public static void RemoveRefreshAction()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x1A40D4C", Offset = "0x1A40D4C", VA = "0x1A40D4C")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x1A40E04", Offset = "0x1A40E04", VA = "0x1A40E04")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x1A40EB8", Offset = "0x1A40EB8", VA = "0x1A40EB8")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x1A40F88", Offset = "0x1A40F88", VA = "0x1A40F88")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x1A4103C", Offset = "0x1A4103C", VA = "0x1A4103C")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x1A41108", Offset = "0x1A41108", VA = "0x1A41108")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x1A411C4", Offset = "0x1A411C4", VA = "0x1A411C4")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023A")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x156FCA4", Offset = "0x156FCA4", VA = "0x156FCA4")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD86D5C", Offset = "0xD86D5C")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x1A3D4B8", Offset = "0x1A3D4B8", VA = "0x1A3D4B8")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x1A41DC8", Offset = "0x1A41DC8", VA = "0x1A41DC8")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class HapticApi
	{
		[Token(Token = "0x20004D8")]
		public struct point
		{
			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x20004D9")]
		public struct status
		{
			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x600121C")]
		[Address(RVA = "0x156B254", Offset = "0x156B254", VA = "0x156B254")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x600121D")]
		[Address(RVA = "0x156B2F4", Offset = "0x156B2F4", VA = "0x156B2F4")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x600121E")]
		[Address(RVA = "0x156B3AC", Offset = "0x156B3AC", VA = "0x156B3AC")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x600121F")]
		[Address(RVA = "0x156B41C", Offset = "0x156B41C", VA = "0x156B41C")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x6001220")]
		[Address(RVA = "0x156B4D0", Offset = "0x156B4D0", VA = "0x156B4D0")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6001221")]
		[Address(RVA = "0x156B588", Offset = "0x156B588", VA = "0x156B588")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6001222")]
		[Address(RVA = "0x156B640", Offset = "0x156B640", VA = "0x156B640")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6001223")]
		[Address(RVA = "0x156B6D0", Offset = "0x156B6D0", VA = "0x156B6D0")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x6001224")]
		[Address(RVA = "0x156B770", Offset = "0x156B770", VA = "0x156B770")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6001225")]
		[Address(RVA = "0x156B858", Offset = "0x156B858", VA = "0x156B858")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6001226")]
		[Address(RVA = "0x156B920", Offset = "0x156B920", VA = "0x156B920")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6001227")]
		[Address(RVA = "0x156B9E8", Offset = "0x156B9E8", VA = "0x156B9E8")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6001228")]
		[Address(RVA = "0x156BA84", Offset = "0x156BA84", VA = "0x156BA84")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x156BB00", Offset = "0x156BB00", VA = "0x156BB00")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x156BB9C", Offset = "0x156BB9C", VA = "0x156BB9C")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x600122B")]
		[Address(RVA = "0x156BC0C", Offset = "0x156BC0C", VA = "0x156BC0C")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x600122C")]
		[Address(RVA = "0x156BC9C", Offset = "0x156BC9C", VA = "0x156BC9C")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x156BD08", Offset = "0x156BD08", VA = "0x156BD08")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x600122E")]
		[Address(RVA = "0x156BD78", Offset = "0x156BD78", VA = "0x156BD78")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x600122F")]
		[Address(RVA = "0x156BDE4", Offset = "0x156BDE4", VA = "0x156BDE4")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x156BE6C", Offset = "0x156BE6C", VA = "0x156BE6C")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x156BF30", Offset = "0x156BF30", VA = "0x156BF30")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1A40050", Offset = "0x1A40050", VA = "0x1A40050", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1A40454", Offset = "0x1A40454", VA = "0x1A40454", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1A4047C", Offset = "0x1A4047C", VA = "0x1A4047C")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1A412B4", Offset = "0x1A412B4", VA = "0x1A412B4")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1A412F4", Offset = "0x1A412F4", VA = "0x1A412F4", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1A41300", Offset = "0x1A41300", VA = "0x1A41300", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1A413C0", Offset = "0x1A413C0", VA = "0x1A413C0", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1A413CC", Offset = "0x1A413CC", VA = "0x1A413CC", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1A413D8", Offset = "0x1A413D8", VA = "0x1A413D8", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1A413E0", Offset = "0x1A413E0", VA = "0x1A413E0", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x1A413F0", Offset = "0x1A413F0", VA = "0x1A413F0", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x1A41400", Offset = "0x1A41400", VA = "0x1A41400", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x1A41500", Offset = "0x1A41500", VA = "0x1A41500", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x1A416BC", Offset = "0x1A416BC", VA = "0x1A416BC", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x1A416E8", Offset = "0x1A416E8", VA = "0x1A416E8", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x1A41718", Offset = "0x1A41718", VA = "0x1A41718", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1A41724", Offset = "0x1A41724", VA = "0x1A41724", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1A41734", Offset = "0x1A41734", VA = "0x1A41734", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1A41740", Offset = "0x1A41740", VA = "0x1A41740", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1A41748", Offset = "0x1A41748", VA = "0x1A41748", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1A41750", Offset = "0x1A41750", VA = "0x1A41750", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x200023F")]
	public class BhapticsProject
	{
		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86D94", Offset = "0xD86D94")]
		private Track[] <Tracks>k__BackingField;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86DA4", Offset = "0xD86DA4")]
		private Layout <Layout>k__BackingField;

		[Token(Token = "0x17000220")]
		public Track[] Tracks
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0x1A41780", Offset = "0x1A41780", VA = "0x1A41780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92D30", Offset = "0xD92D30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001248")]
			[Address(RVA = "0x1A41788", Offset = "0x1A41788", VA = "0x1A41788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92D40", Offset = "0xD92D40")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public Layout Layout
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0x1A41790", Offset = "0x1A41790", VA = "0x1A41790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92D50", Offset = "0xD92D50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600124A")]
			[Address(RVA = "0x1A41798", Offset = "0x1A41798", VA = "0x1A41798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92D60", Offset = "0xD92D60")]
			set
			{
			}
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1A417A0", Offset = "0x1A417A0", VA = "0x1A417A0")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1A41960", Offset = "0x1A41960", VA = "0x1A41960")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1A41958", Offset = "0x1A41958", VA = "0x1A41958")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x156A698", Offset = "0x156A698", VA = "0x156A698")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x156D398", Offset = "0x156D398", VA = "0x156D398")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class Track
	{
		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86DB4", Offset = "0xD86DB4")]
		private HapticEffect[] <Effects>k__BackingField;

		[Token(Token = "0x17000222")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x15703D0", Offset = "0x15703D0", VA = "0x15703D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92D70", Offset = "0xD92D70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x15703D8", Offset = "0x15703D8", VA = "0x15703D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92D80", Offset = "0xD92D80")]
			set
			{
			}
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x15703E0", Offset = "0x15703E0", VA = "0x15703E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x1570440", Offset = "0x1570440", VA = "0x1570440")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x15705E4", Offset = "0x15705E4", VA = "0x15705E4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x15705DC", Offset = "0x15705DC", VA = "0x15705DC")]
		public Track()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class HapticEffect
	{
		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86DC4", Offset = "0xD86DC4")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86DD4", Offset = "0xD86DD4")]
		private int <OffsetTime>k__BackingField;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86DE4", Offset = "0xD86DE4")]
		private Dictionary<string, HapticEffectMode> <Modes>k__BackingField;

		[Token(Token = "0x17000223")]
		public int StartTime
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x156C7B0", Offset = "0x156C7B0", VA = "0x156C7B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92D90", Offset = "0xD92D90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x156C7B8", Offset = "0x156C7B8", VA = "0x156C7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92DA0", Offset = "0xD92DA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public int OffsetTime
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x156C7C0", Offset = "0x156C7C0", VA = "0x156C7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92DB0", Offset = "0xD92DB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x156C7C8", Offset = "0x156C7C8", VA = "0x156C7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92DC0", Offset = "0xD92DC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x156C7D0", Offset = "0x156C7D0", VA = "0x156C7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92DD0", Offset = "0xD92DD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x156C7D8", Offset = "0x156C7D8", VA = "0x156C7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92DE0", Offset = "0xD92DE0")]
			set
			{
			}
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x156C7E0", Offset = "0x156C7E0", VA = "0x156C7E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x156C9F4", Offset = "0x156C9F4", VA = "0x156C9F4")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x156CD5C", Offset = "0x156CD5C", VA = "0x156CD5C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x156CC10", Offset = "0x156CC10", VA = "0x156CC10")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class Layout
	{
		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86DF4", Offset = "0xD86DF4")]
		private string <Type>k__BackingField;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86E04", Offset = "0xD86E04")]
		private Dictionary<string, LayoutObject[]> <Layouts>k__BackingField;

		[Token(Token = "0x17000226")]
		public string Type
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0x156ED4C", Offset = "0x156ED4C", VA = "0x156ED4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92DF0", Offset = "0xD92DF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001261")]
			[Address(RVA = "0x156ED54", Offset = "0x156ED54", VA = "0x156ED54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92E00", Offset = "0xD92E00")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0x156ED5C", Offset = "0x156ED5C", VA = "0x156ED5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92E10", Offset = "0xD92E10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x156ED64", Offset = "0x156ED64", VA = "0x156ED64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92E20", Offset = "0xD92E20")]
			set
			{
			}
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x156ED6C", Offset = "0x156ED6C", VA = "0x156ED6C")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x156F194", Offset = "0x156F194", VA = "0x156F194")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x156F074", Offset = "0x156F074", VA = "0x156F074")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class LayoutObject
	{
		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86E14", Offset = "0xD86E14")]
		private int <Index>k__BackingField;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86E24", Offset = "0xD86E24")]
		private float <X>k__BackingField;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86E34", Offset = "0xD86E34")]
		private float <Y>k__BackingField;

		[Token(Token = "0x17000228")]
		public int Index
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x156F52C", Offset = "0x156F52C", VA = "0x156F52C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92E30", Offset = "0xD92E30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x156F534", Offset = "0x156F534", VA = "0x156F534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92E40", Offset = "0xD92E40")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public float X
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x156F53C", Offset = "0x156F53C", VA = "0x156F53C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92E50", Offset = "0xD92E50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600126A")]
			[Address(RVA = "0x156F544", Offset = "0x156F544", VA = "0x156F544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92E60", Offset = "0xD92E60")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public float Y
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x156F54C", Offset = "0x156F54C", VA = "0x156F54C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92E70", Offset = "0xD92E70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x156F554", Offset = "0x156F554", VA = "0x156F554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92E80", Offset = "0xD92E80")]
			set
			{
			}
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x156F07C", Offset = "0x156F07C", VA = "0x156F07C")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x156F414", Offset = "0x156F414", VA = "0x156F414")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x156F55C", Offset = "0x156F55C", VA = "0x156F55C")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class HapticEffectMode
	{
		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86E44", Offset = "0xD86E44")]
		private FeedbackMode <Mode>k__BackingField;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86E54", Offset = "0xD86E54")]
		private DotMode <DotMode>k__BackingField;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86E64", Offset = "0xD86E64")]
		private PathMode <PathMode>k__BackingField;

		[Token(Token = "0x1700022B")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x156D0C0", Offset = "0x156D0C0", VA = "0x156D0C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92E90", Offset = "0xD92E90")]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x156D0C8", Offset = "0x156D0C8", VA = "0x156D0C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92EA0", Offset = "0xD92EA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public DotMode DotMode
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x156D0D0", Offset = "0x156D0D0", VA = "0x156D0D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92EB0", Offset = "0xD92EB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x156D0D8", Offset = "0x156D0D8", VA = "0x156D0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92EC0", Offset = "0xD92EC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public PathMode PathMode
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x156D0E0", Offset = "0x156D0E0", VA = "0x156D0E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92ED0", Offset = "0xD92ED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x156D0E8", Offset = "0x156D0E8", VA = "0x156D0E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92EE0", Offset = "0xD92EE0")]
			set
			{
			}
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x156CC18", Offset = "0x156CC18", VA = "0x156CC18")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x156CF5C", Offset = "0x156CF5C", VA = "0x156CF5C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x156D0F0", Offset = "0x156D0F0", VA = "0x156D0F0")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class DotMode
	{
		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86E74", Offset = "0xD86E74")]
		private bool <DotConnected>k__BackingField;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86E84", Offset = "0xD86E84")]
		private DotModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x1700022E")]
		public bool DotConnected
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x1A41DD0", Offset = "0x1A41DD0", VA = "0x1A41DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92EF0", Offset = "0xD92EF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x1A41DD8", Offset = "0x1A41DD8", VA = "0x1A41DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92F00", Offset = "0xD92F00")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x1A41DE4", Offset = "0x1A41DE4", VA = "0x1A41DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92F10", Offset = "0xD92F10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x1A41DEC", Offset = "0x1A41DEC", VA = "0x1A41DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92F20", Offset = "0xD92F20")]
			set
			{
			}
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x1A41DF4", Offset = "0x1A41DF4", VA = "0x1A41DF4")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x1A41FD4", Offset = "0x1A41FD4", VA = "0x1A41FD4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x1A41FCC", Offset = "0x1A41FCC", VA = "0x1A41FCC")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86E94", Offset = "0xD86E94")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86EA4", Offset = "0xD86EA4")]
		private int <EndTime>k__BackingField;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86EB4", Offset = "0xD86EB4")]
		private DotModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x17000230")]
		public int StartTime
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0x156A210", Offset = "0x156A210", VA = "0x156A210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92F30", Offset = "0xD92F30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x156A218", Offset = "0x156A218", VA = "0x156A218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92F40", Offset = "0xD92F40")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public int EndTime
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x156A220", Offset = "0x156A220", VA = "0x156A220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92F50", Offset = "0xD92F50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001283")]
			[Address(RVA = "0x156A228", Offset = "0x156A228", VA = "0x156A228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92F60", Offset = "0xD92F60")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x156A230", Offset = "0x156A230", VA = "0x156A230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92F70", Offset = "0xD92F70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001285")]
			[Address(RVA = "0x156A238", Offset = "0x156A238", VA = "0x156A238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92F80", Offset = "0xD92F80")]
			set
			{
			}
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x156A240", Offset = "0x156A240", VA = "0x156A240")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x156A464", Offset = "0x156A464", VA = "0x156A464")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x156A45C", Offset = "0x156A45C", VA = "0x156A45C")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class DotModeObject
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86EC4", Offset = "0xD86EC4")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86ED4", Offset = "0xD86ED4")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x17000233")]
		public int Index
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x1569D94", Offset = "0x1569D94", VA = "0x1569D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92F90", Offset = "0xD92F90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x1569D9C", Offset = "0x1569D9C", VA = "0x1569D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92FA0", Offset = "0xD92FA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public float Intensity
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x1569DA4", Offset = "0x1569DA4", VA = "0x1569DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92FB0", Offset = "0xD92FB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x1569DAC", Offset = "0x1569DAC", VA = "0x1569DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92FC0", Offset = "0xD92FC0")]
			set
			{
			}
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1569DB4", Offset = "0x1569DB4", VA = "0x1569DB4")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x156A124", Offset = "0x156A124", VA = "0x156A124")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x1569E54", Offset = "0x1569E54", VA = "0x1569E54")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class PathMode
	{
		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86EE4", Offset = "0xD86EE4")]
		private PathModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x17000235")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6001290")]
			[Address(RVA = "0x156F56C", Offset = "0x156F56C", VA = "0x156F56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92FD0", Offset = "0xD92FD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001291")]
			[Address(RVA = "0x156F574", Offset = "0x156F574", VA = "0x156F574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92FE0", Offset = "0xD92FE0")]
			set
			{
			}
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x156D0F8", Offset = "0x156D0F8", VA = "0x156D0F8")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x156D288", Offset = "0x156D288", VA = "0x156D288")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x156F57C", Offset = "0x156F57C", VA = "0x156F57C")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86EF4", Offset = "0xD86EF4")]
		private PathModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x17000236")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0x156FC3C", Offset = "0x156FC3C", VA = "0x156FC3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD92FF0", Offset = "0xD92FF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001296")]
			[Address(RVA = "0x156FC44", Offset = "0x156FC44", VA = "0x156FC44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93000", Offset = "0xD93000")]
			set
			{
			}
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x156F584", Offset = "0x156F584", VA = "0x156F584")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x156F7C0", Offset = "0x156F7C0", VA = "0x156F7C0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x156FC4C", Offset = "0x156FC4C", VA = "0x156FC4C")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class PathModeObject
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86F04", Offset = "0xD86F04")]
		private float <X>k__BackingField;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86F14", Offset = "0xD86F14")]
		private float <Y>k__BackingField;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86F24", Offset = "0xD86F24")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD86F34", Offset = "0xD86F34")]
		private int <Time>k__BackingField;

		[Token(Token = "0x17000237")]
		public float X
		{
			[Token(Token = "0x600129A")]
			[Address(RVA = "0x156F9CC", Offset = "0x156F9CC", VA = "0x156F9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93010", Offset = "0xD93010")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x156F9D4", Offset = "0x156F9D4", VA = "0x156F9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93020", Offset = "0xD93020")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public float Y
		{
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x156F9DC", Offset = "0x156F9DC", VA = "0x156F9DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93030", Offset = "0xD93030")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x156F9E4", Offset = "0x156F9E4", VA = "0x156F9E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93040", Offset = "0xD93040")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public float Intensity
		{
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x156F9EC", Offset = "0x156F9EC", VA = "0x156F9EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93050", Offset = "0xD93050")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600129F")]
			[Address(RVA = "0x156F9F4", Offset = "0x156F9F4", VA = "0x156F9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93060", Offset = "0xD93060")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public int Time
		{
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x156F9FC", Offset = "0x156F9FC", VA = "0x156F9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93070", Offset = "0xD93070")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x156FA04", Offset = "0x156FA04", VA = "0x156FA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93080", Offset = "0xD93080")]
			set
			{
			}
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x156FA0C", Offset = "0x156FA0C", VA = "0x156FA0C")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x156FAF8", Offset = "0x156FAF8", VA = "0x156FAF8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x156FAF0", Offset = "0x156FAF0", VA = "0x156FAF0")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x200024C")]
	internal class ParseUtil
	{
		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x1569FC0", Offset = "0x1569FC0", VA = "0x1569FC0")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x1569E5C", Offset = "0x1569E5C", VA = "0x1569E5C")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x156F564", Offset = "0x156F564", VA = "0x156F564")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class BhapticsUtils
	{
		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x4001152")]
		public const string TypeHead = "Head";

		[Token(Token = "0x4001153")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x4001154")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x4001155")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x4001156")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x4001157")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x4001158")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x4001159")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x60012A8")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x1A41AAC", Offset = "0x1A41AAC", VA = "0x1A41AAC")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x1A41AF4", Offset = "0x1A41AF4", VA = "0x1A41AF4")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x1A41AFC", Offset = "0x1A41AFC", VA = "0x1A41AFC")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x1A41B04", Offset = "0x1A41B04", VA = "0x1A41B04")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x1A41B24", Offset = "0x1A41B24", VA = "0x1A41B24")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x1A41B28", Offset = "0x1A41B28", VA = "0x1A41B28")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x1A41CB0", Offset = "0x1A41CB0", VA = "0x1A41CB0")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x1A41D9C", Offset = "0x1A41D9C", VA = "0x1A41D9C")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x1A39938", Offset = "0x1A39938", VA = "0x1A39938")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1A41DBC", Offset = "0x1A41DBC", VA = "0x1A41DBC")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x156A658", Offset = "0x156A658", VA = "0x156A658")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD86F44", Offset = "0xD86F44")]
		public float Intensity;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD86F60", Offset = "0xD86F60")]
		public float Duration;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x1700023B")]
		public int ClipDurationTime
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x156A660", Offset = "0x156A660", VA = "0x156A660")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x156A814", Offset = "0x156A814", VA = "0x156A814", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x156A878", Offset = "0x156A878", VA = "0x156A878", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x156A890", Offset = "0x156A890", VA = "0x156A890", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x156A8A8", Offset = "0x156A8A8", VA = "0x156A8A8", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x156A8BC", Offset = "0x156A8BC", VA = "0x156A8BC", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x156A8CC", Offset = "0x156A8CC", VA = "0x156A8CC", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x156A9FC", Offset = "0x156A9FC", VA = "0x156A9FC", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x156AB4C", Offset = "0x156AB4C", VA = "0x156AB4C", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x156B178", Offset = "0x156B178", VA = "0x156B178", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x156A75C", Offset = "0x156A75C", VA = "0x156A75C")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x156B188", Offset = "0x156B188", VA = "0x156B188")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x156B24C", Offset = "0x156B24C", VA = "0x156B24C")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x4001160")]
		None,
		[Token(Token = "0x4001161")]
		Tactal,
		[Token(Token = "0x4001162")]
		TactSuit,
		[Token(Token = "0x4001163")]
		Tactosy_arms,
		[Token(Token = "0x4001164")]
		Tactosy_hands,
		[Token(Token = "0x4001165")]
		Tactosy_feet
	}
	[Serializable]
	[Token(Token = "0x2000252")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x4001167")]
		VestFront,
		[Token(Token = "0x4001168")]
		VestBack,
		[Token(Token = "0x4001169")]
		Head,
		[Token(Token = "0x400116A")]
		RightForearm,
		[Token(Token = "0x400116B")]
		LeftForearm,
		[Token(Token = "0x400116C")]
		LeftHand,
		[Token(Token = "0x400116D")]
		RightHand,
		[Token(Token = "0x400116E")]
		LeftFoot,
		[Token(Token = "0x400116F")]
		RightFoot
	}
	[Token(Token = "0x2000253")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x156BF38", Offset = "0x156BF38", VA = "0x156BF38", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x156BFA0", Offset = "0x156BFA0", VA = "0x156BFA0", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x156BFBC", Offset = "0x156BFBC", VA = "0x156BFBC", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x156BFD4", Offset = "0x156BFD4", VA = "0x156BFD4", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x156BFE8", Offset = "0x156BFE8", VA = "0x156BFE8", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x156BFF8", Offset = "0x156BFF8", VA = "0x156BFF8", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x156C128", Offset = "0x156C128", VA = "0x156C128", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x156C274", Offset = "0x156C274", VA = "0x156C274", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x156C3C8", Offset = "0x156C3C8", VA = "0x156C3C8", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x156C3CC", Offset = "0x156C3CC", VA = "0x156C3CC", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x156C4A8", Offset = "0x156C4A8", VA = "0x156C4A8", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x156C5B0", Offset = "0x156C5B0", VA = "0x156C5B0", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x156C698", Offset = "0x156C698", VA = "0x156C698", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x156B184", Offset = "0x156B184", VA = "0x156B184", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x156C7A0", Offset = "0x156C7A0", VA = "0x156C7A0")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x156B19C", Offset = "0x156B19C", VA = "0x156B19C")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class HapticReceiver : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x156D3A0", Offset = "0x156D3A0", VA = "0x156D3A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x156D5D4", Offset = "0x156D5D4", VA = "0x156D5D4")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x156D78C", Offset = "0x156D78C", VA = "0x156D78C")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x156D6A4", Offset = "0x156D6A4", VA = "0x156D6A4")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x156D998", Offset = "0x156D998", VA = "0x156D998")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class HapticSender : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x156D9A8", Offset = "0x156D9A8", VA = "0x156D9A8")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x156D880", Offset = "0x156D880", VA = "0x156D880")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x156DBD4", Offset = "0x156DBD4", VA = "0x156DBD4")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x156DD18", Offset = "0x156DD18", VA = "0x156DD18")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x156DE4C", Offset = "0x156DE4C", VA = "0x156DE4C")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x156DF74", Offset = "0x156DF74", VA = "0x156DF74")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x156D9B4", Offset = "0x156D9B4", VA = "0x156D9B4")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x156DF7C", Offset = "0x156DF7C", VA = "0x156DF7C")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public enum PositionTag
	{
		[Token(Token = "0x400117B")]
		Body,
		[Token(Token = "0x400117C")]
		Head,
		[Token(Token = "0x400117D")]
		LeftArm,
		[Token(Token = "0x400117E")]
		RightArm,
		[Token(Token = "0x400117F")]
		Default
	}
	[Token(Token = "0x2000257")]
	public class HapticSource : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80B64", Offset = "0xD80B64")]
		private sealed class <PlayCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x170003D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002072")]
				[Address(RVA = "0x156EA98", Offset = "0x156EA98", VA = "0x156EA98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002074")]
				[Address(RVA = "0x156EB00", Offset = "0x156EB00", VA = "0x156EB00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600206F")]
			[Address(RVA = "0x156E968", Offset = "0x156E968", VA = "0x156E968")]
			[DebuggerHidden]
			public <PlayCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002070")]
			[Address(RVA = "0x156E9C8", Offset = "0x156E9C8", VA = "0x156E9C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002071")]
			[Address(RVA = "0x156E9CC", Offset = "0x156E9CC", VA = "0x156E9CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002073")]
			[Address(RVA = "0x156EAA0", Offset = "0x156EAA0", VA = "0x156EAA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80B74", Offset = "0xD80B74")]
		private sealed class <PlayLoopCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x170003DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002078")]
				[Address(RVA = "0x156ECC0", Offset = "0x156ECC0", VA = "0x156ECC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600207A")]
				[Address(RVA = "0x156ED28", Offset = "0x156ED28", VA = "0x156ED28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002075")]
			[Address(RVA = "0x156E994", Offset = "0x156E994", VA = "0x156E994")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002076")]
			[Address(RVA = "0x156EB08", Offset = "0x156EB08", VA = "0x156EB08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002077")]
			[Address(RVA = "0x156EB0C", Offset = "0x156EB0C", VA = "0x156EB0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002079")]
			[Address(RVA = "0x156ECC8", Offset = "0x156ECC8", VA = "0x156ECC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x156DF8C", Offset = "0x156DF8C", VA = "0x156DF8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x156E594", Offset = "0x156E594", VA = "0x156E594")]
		public void Play()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x156E2DC", Offset = "0x156E2DC", VA = "0x156E2DC")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x156E608", Offset = "0x156E608", VA = "0x156E608")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x156E7F8", Offset = "0x156E7F8", VA = "0x156E7F8")]
		public void Stop()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x156E8C8", Offset = "0x156E8C8", VA = "0x156E8C8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x156E778", Offset = "0x156E778", VA = "0x156E778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD93090", Offset = "0xD93090")]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x156E440", Offset = "0x156E440", VA = "0x156E440")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x156E598", Offset = "0x156E598", VA = "0x156E598")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD930F4", Offset = "0xD930F4")]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x156E9C0", Offset = "0x156E9C0", VA = "0x156E9C0")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x156ED30", Offset = "0x156ED30", VA = "0x156ED30")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public interface IHaptic
	{
		[Token(Token = "0x60012EA")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x60012EB")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x60012EC")]
		bool IsPlaying(string key);

		[Token(Token = "0x60012ED")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x60012EE")]
		bool IsPlaying();

		[Token(Token = "0x60012EF")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x60012F0")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x60012F1")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x60012F2")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x60012F3")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x60012F4")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x60012F5")]
		void SubmitRegistered(string key);

		[Token(Token = "0x60012F6")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x60012F7")]
		void TurnOff(string key);

		[Token(Token = "0x60012F8")]
		void TurnOff();

		[Token(Token = "0x60012F9")]
		void Dispose();

		[Token(Token = "0x60012FA")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD7E344", Offset = "0xD7E344")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD86FCC", Offset = "0xD86FCC")]
		public int TimeMillis;

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x156FCAC", Offset = "0x156FCAC", VA = "0x156FCAC", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x1570168", Offset = "0x1570168", VA = "0x1570168", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x156FF38", Offset = "0x156FF38", VA = "0x156FF38")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x1570048", Offset = "0x1570048", VA = "0x1570048")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x15701F0", Offset = "0x15701F0", VA = "0x15701F0")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025B")]
	public class Point
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD86FE8", Offset = "0xD86FE8")]
		public float X;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87000", Offset = "0xD87000")]
		public float Y;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87018", Offset = "0xD87018")]
		public int Intensity;

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x156FC5C", Offset = "0x156FC5C", VA = "0x156FC5C")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200025C")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x4001191")]
		DotMode = 1,
		[Token(Token = "0x4001192")]
		PathMode
	}
	[Token(Token = "0x200025D")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87034", Offset = "0xD87034")]
		protected float TactFileAngleX;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87078", Offset = "0xD87078")]
		protected float TactFileOffsetY;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x15706F4", Offset = "0x15706F4", VA = "0x15706F4", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1570754", Offset = "0x1570754", VA = "0x1570754", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1570768", Offset = "0x1570768", VA = "0x1570768", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x157077C", Offset = "0x157077C", VA = "0x157077C", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x157078C", Offset = "0x157078C", VA = "0x157078C", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x157079C", Offset = "0x157079C", VA = "0x157079C", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x1570A50", Offset = "0x1570A50", VA = "0x1570A50", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1570A60", Offset = "0x1570A60", VA = "0x1570A60")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class VisualFeedback : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1570B04", Offset = "0x1570B04", VA = "0x1570B04")]
		private void Start()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x1570E04", Offset = "0x1570E04", VA = "0x1570E04")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x1570EB0", Offset = "0x1570EB0", VA = "0x1570EB0")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x157109C", Offset = "0x157109C", VA = "0x157109C")]
		public VisualFeedback()
		{
		}
	}
}
namespace BeautifulDissolves
{
	[Token(Token = "0x200025F")]
	public class Dissolve : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected DissolveSettings m_DissolveSettings;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnDissolveStart;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnDissolveFinish;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material[] m_Materials;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IEnumerator m_CurrentCoroutine;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool m_Dissolving;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_CanDissolve;

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x1A3481C", Offset = "0x1A3481C", VA = "0x1A3481C", Slot = "4")]
		protected virtual Material[] GetMaterials()
		{
			return null;
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x1A348CC", Offset = "0x1A348CC", VA = "0x1A348CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x1A348F8", Offset = "0x1A348F8", VA = "0x1A348F8")]
		public void TriggerDissolve()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x1A34900", Offset = "0x1A34900", VA = "0x1A34900")]
		public void TriggerDissolve(DissolveSettings settings)
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x1A34B50", Offset = "0x1A34B50", VA = "0x1A34B50")]
		public void TriggerReverseDissolve()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x1A34A18", Offset = "0x1A34A18", VA = "0x1A34A18")]
		public void TriggerDissolve(bool atomic, bool disableAfterDissolve, AnimationCurve dissolveCurve, float dissolveStartPercent, float time, float speed)
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x1A34B80", Offset = "0x1A34B80", VA = "0x1A34B80")]
		private void InvokeDissolveStartEvents()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x1A34C3C", Offset = "0x1A34C3C", VA = "0x1A34C3C")]
		private void InvokeDissolveEndEvents()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1A34C50", Offset = "0x1A34C50", VA = "0x1A34C50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x1A34D54", Offset = "0x1A34D54", VA = "0x1A34D54")]
		public Dissolve()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x1A34D64", Offset = "0x1A34D64", VA = "0x1A34D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93158", Offset = "0xD93158")]
		private void <TriggerDissolve>b__12_0()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class DissolveGlowUpdate : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004DC")]
		private enum StartMode
		{
			[Token(Token = "0x4001F88")]
			OnAwake,
			[Token(Token = "0x4001F89")]
			OnStart,
			[Token(Token = "0x4001F8A")]
			ByScript
		}

		[Token(Token = "0x20004DD")]
		private enum UpdateRate
		{
			[Token(Token = "0x4001F8C")]
			EveryFrame,
			[Token(Token = "0x4001F8D")]
			EveryNthFrame,
			[Token(Token = "0x4001F8E")]
			CustomFixedTimestep
		}

		[Token(Token = "0x20004DE")]
		private enum GlowSource
		{
			[Token(Token = "0x4001F90")]
			Emissive,
			[Token(Token = "0x4001F91")]
			Light
		}

		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80B84", Offset = "0xD80B84")]
		private sealed class <FixedGlowUpdate>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DissolveGlowUpdate <>4__this;

			[Token(Token = "0x170003DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600207E")]
				[Address(RVA = "0x1A35A94", Offset = "0x1A35A94", VA = "0x1A35A94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002080")]
				[Address(RVA = "0x1A35AFC", Offset = "0x1A35AFC", VA = "0x1A35AFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600207B")]
			[Address(RVA = "0x1A35508", Offset = "0x1A35508", VA = "0x1A35508")]
			[DebuggerHidden]
			public <FixedGlowUpdate>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600207C")]
			[Address(RVA = "0x1A359E0", Offset = "0x1A359E0", VA = "0x1A359E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600207D")]
			[Address(RVA = "0x1A359E4", Offset = "0x1A359E4", VA = "0x1A359E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600207F")]
			[Address(RVA = "0x1A35A9C", Offset = "0x1A35A9C", VA = "0x1A35A9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80B94", Offset = "0xD80B94")]
		private sealed class <FrameGlowUpdate>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DissolveGlowUpdate <>4__this;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <frame>5__2;

			[Token(Token = "0x170003DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002084")]
				[Address(RVA = "0x1A35BE4", Offset = "0x1A35BE4", VA = "0x1A35BE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002086")]
				[Address(RVA = "0x1A35C4C", Offset = "0x1A35C4C", VA = "0x1A35C4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002081")]
			[Address(RVA = "0x1A35534", Offset = "0x1A35534", VA = "0x1A35534")]
			[DebuggerHidden]
			public <FrameGlowUpdate>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002082")]
			[Address(RVA = "0x1A35B04", Offset = "0x1A35B04", VA = "0x1A35B04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002083")]
			[Address(RVA = "0x1A35B08", Offset = "0x1A35B08", VA = "0x1A35B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002085")]
			[Address(RVA = "0x1A35BEC", Offset = "0x1A35BEC", VA = "0x1A35BEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StartMode m_StartMode;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private UpdateRate m_UpdateRate;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GlowSource m_GlowSource;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD870F8", Offset = "0xD870F8")]
		[SerializeField]
		private float m_GlowCutoff;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_FrameDelay;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_UpdateTimestep;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Light m_GlowLightSource;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_Renderer;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_Material;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_UpdateFrames;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_GlowUpdating;

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x1A34D80", Offset = "0x1A34D80", VA = "0x1A34D80")]
		private void Awake()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x1A35000", Offset = "0x1A35000", VA = "0x1A35000")]
		private void Start()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x1A34E40", Offset = "0x1A34E40", VA = "0x1A34E40")]
		public void StartGlowUpdate()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x1A3518C", Offset = "0x1A3518C", VA = "0x1A3518C")]
		public void StopGlowUpdate()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x1A35198", Offset = "0x1A35198", VA = "0x1A35198")]
		private void GlowUpdate()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x1A350AC", Offset = "0x1A350AC", VA = "0x1A350AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD93168", Offset = "0xD93168")]
		private IEnumerator FixedGlowUpdate()
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x1A3511C", Offset = "0x1A3511C", VA = "0x1A3511C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD931CC", Offset = "0xD931CC")]
		private IEnumerator FrameGlowUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x1A351F0", Offset = "0x1A351F0", VA = "0x1A351F0")]
		private Color GetEmissiveColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x1A356B0", Offset = "0x1A356B0", VA = "0x1A356B0")]
		public void CreateLightSource()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x1A35904", Offset = "0x1A35904", VA = "0x1A35904")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x1A359B8", Offset = "0x1A359B8", VA = "0x1A359B8")]
		public DissolveGlowUpdate()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public static class DissolveHelper
	{
		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80BA4", Offset = "0xD80BA4")]
		private sealed class <CurveDissolve>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float curveStartPercentage;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Material[] mats;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve dissolveCurve;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float time;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float speed;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action callback;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170003E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600208A")]
				[Address(RVA = "0x1A37998", Offset = "0x1A37998", VA = "0x1A37998", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600208C")]
				[Address(RVA = "0x1A37A00", Offset = "0x1A37A00", VA = "0x1A37A00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002087")]
			[Address(RVA = "0x1A373C8", Offset = "0x1A373C8", VA = "0x1A373C8")]
			[DebuggerHidden]
			public <CurveDissolve>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6002088")]
			[Address(RVA = "0x1A37744", Offset = "0x1A37744", VA = "0x1A37744", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002089")]
			[Address(RVA = "0x1A37748", Offset = "0x1A37748", VA = "0x1A37748", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600208B")]
			[Address(RVA = "0x1A379A0", Offset = "0x1A379A0", VA = "0x1A379A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int dissolveMapID;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int tilingXID;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int tilingYID;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int directionMapID;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int dissolveMaskID;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int dissolveAmountID;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int dissolveDelayID;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int dissolveRampUpID;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int subTexID;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int outerEdgeColorID;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int innerEdgeColorID;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int edgeThicknessID;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static int edgeColorRampUseID;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int edgeColorRampID;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static int dissolveGlowID;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static int dissolveGlowColorID;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int dissolveGlowIntensityID;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static int dissolveGlowFollowID;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static int emissionColorID;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string subTexKeyword;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string edgeColorRampUseKeyword;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string dissolveGlowKeyword;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string dissolveGlowFollowKeyword;

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x1A35C54", Offset = "0x1A35C54", VA = "0x1A35C54")]
		public static void SetDissolveMap(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x1A35D3C", Offset = "0x1A35D3C", VA = "0x1A35D3C")]
		public static Texture GetDissolveMap(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x1A35E04", Offset = "0x1A35E04", VA = "0x1A35E04")]
		public static void SetDissolveMapTiling(Material mat, Vector2 tiling)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1A35F08", Offset = "0x1A35F08", VA = "0x1A35F08")]
		public static Vector2 GetDissolveMapTiling(Material mat)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1A36010", Offset = "0x1A36010", VA = "0x1A36010")]
		public static void SetDirectionMap(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x1A36090", Offset = "0x1A36090", VA = "0x1A36090")]
		public static Texture GetDirectionMap(Material mat)
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1A36100", Offset = "0x1A36100", VA = "0x1A36100")]
		public static void SetDissolveMask(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1A36180", Offset = "0x1A36180", VA = "0x1A36180")]
		public static Texture GetDissolveMask(Material mat)
		{
			return null;
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1A361F0", Offset = "0x1A361F0", VA = "0x1A361F0")]
		public static void SetDissolveAmount(Material mat, float value)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x1A35560", Offset = "0x1A35560", VA = "0x1A35560")]
		public static float GetDissolveAmount(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1A36270", Offset = "0x1A36270", VA = "0x1A36270")]
		public static void SetDissolveDelay(Material mat, float value)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1A362F0", Offset = "0x1A362F0", VA = "0x1A362F0")]
		public static float GetDissolveDelay(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1A36360", Offset = "0x1A36360", VA = "0x1A36360")]
		public static void SetDissolveRampUp(Material mat, float value)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1A363E0", Offset = "0x1A363E0", VA = "0x1A363E0")]
		public static float GetDissolveRampUp(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1A36450", Offset = "0x1A36450", VA = "0x1A36450")]
		public static void SetSubTex(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x1A3654C", Offset = "0x1A3654C", VA = "0x1A3654C")]
		public static Texture GetSubTex(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x1A365BC", Offset = "0x1A365BC", VA = "0x1A365BC")]
		public static void SetOuterEdgeColor(Material mat, Color color)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1A366E8", Offset = "0x1A366E8", VA = "0x1A366E8")]
		public static Color GetOuterEdgeColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x1A367B0", Offset = "0x1A367B0", VA = "0x1A367B0")]
		public static void SetInnerEdgeColor(Material mat, Color color)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x1A36850", Offset = "0x1A36850", VA = "0x1A36850")]
		public static Color GetInnerEdgeColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1A368C0", Offset = "0x1A368C0", VA = "0x1A368C0")]
		public static void SetEdgeThickness(Material mat, float value)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x1A36940", Offset = "0x1A36940", VA = "0x1A36940")]
		public static float GetEdgeThickness(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x1A369B0", Offset = "0x1A369B0", VA = "0x1A369B0")]
		public static void SetEdgeColorRampUse(Material mat, bool value)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x1A36AB4", Offset = "0x1A36AB4", VA = "0x1A36AB4")]
		public static bool GetEdgeColorRampUse(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x1A36B80", Offset = "0x1A36B80", VA = "0x1A36B80")]
		public static void SetEdgeColorRamp(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1A36C00", Offset = "0x1A36C00", VA = "0x1A36C00")]
		public static Texture GetEdgeColorRamp(Material mat)
		{
			return null;
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1A36C70", Offset = "0x1A36C70", VA = "0x1A36C70")]
		public static void SetDissolveGlow(Material mat, bool value)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x1A36D0C", Offset = "0x1A36D0C", VA = "0x1A36D0C")]
		public static bool GetDissolveGlow(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x1A36D7C", Offset = "0x1A36D7C", VA = "0x1A36D7C")]
		public static void SetDissolveGlowColor(Material mat, Color color)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x1A355D0", Offset = "0x1A355D0", VA = "0x1A355D0")]
		public static Color GetDissolveGlowColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x1A36E1C", Offset = "0x1A36E1C", VA = "0x1A36E1C")]
		public static void SetDissolveGlowIntensity(Material mat, float value)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x1A35640", Offset = "0x1A35640", VA = "0x1A35640")]
		public static float GetDissolveGlowIntensity(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x1A36E9C", Offset = "0x1A36E9C", VA = "0x1A36E9C")]
		public static void SetDissolveGlowFollow(Material mat, bool value)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x1A36F38", Offset = "0x1A36F38", VA = "0x1A36F38")]
		public static bool GetDissolveGlowFollow(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x1A35EA0", Offset = "0x1A35EA0", VA = "0x1A35EA0")]
		private static void SetFloat(int propertyID, Material mat, float value)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x1A35FB8", Offset = "0x1A35FB8", VA = "0x1A35FB8")]
		private static float GetFloat(int propertyID, Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x1A35CD4", Offset = "0x1A35CD4", VA = "0x1A35CD4")]
		private static void SetTexture(int propertyID, Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x1A35DAC", Offset = "0x1A35DAC", VA = "0x1A35DAC")]
		private static Texture GetTexture(int propertyID, Material mat)
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x1A3665C", Offset = "0x1A3665C", VA = "0x1A3665C")]
		private static void SetColor(int propertyID, Material mat, Color color)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x1A36758", Offset = "0x1A36758", VA = "0x1A36758")]
		private static Color GetColor(int propertyID, Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x1A36A4C", Offset = "0x1A36A4C", VA = "0x1A36A4C")]
		private static void SetBool(int propertyID, Material mat, bool value)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x1A36B24", Offset = "0x1A36B24", VA = "0x1A36B24")]
		private static bool GetBool(int propertyID, Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1A3651C", Offset = "0x1A3651C", VA = "0x1A3651C")]
		private static void EnableKeyword(string keyword, Material mat, bool condition)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x1A36FA8", Offset = "0x1A36FA8", VA = "0x1A36FA8")]
		public static void LinearDissolve(Material mat, float from, float to, float time, Action callback)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x1A37154", Offset = "0x1A37154", VA = "0x1A37154")]
		public static void LinearDissolve(Material[] mats, float from, float to, float time, Action callback)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x1A34B94", Offset = "0x1A34B94", VA = "0x1A34B94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD93230", Offset = "0xD93230")]
		public static IEnumerator CurveDissolve(Material[] mats, AnimationCurve dissolveCurve, float time, float curveStartPercentage, float speed, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x1A373F4", Offset = "0x1A373F4", VA = "0x1A373F4")]
		public static bool IsInLayerMask(this GameObject obj, LayerMask mask)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000262")]
	public class DissolveOnClick : Dissolve
	{
		[Token(Token = "0x6001354")]
		[Address(RVA = "0x1A37A08", Offset = "0x1A37A08", VA = "0x1A37A08")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x1A37A10", Offset = "0x1A37A10", VA = "0x1A37A10")]
		public DissolveOnClick()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class DissolveOnCollision : Dissolve
	{
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask collisionLayer;

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x1A37A20", Offset = "0x1A37A20", VA = "0x1A37A20")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x1A37AD4", Offset = "0x1A37AD4", VA = "0x1A37AD4")]
		public DissolveOnCollision()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class DissolveOnCollision2D : Dissolve
	{
		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask collisionLayer;

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x1A37B10", Offset = "0x1A37B10", VA = "0x1A37B10")]
		private void OnCollisionEnter2D(Collision2D col)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x1A37BC4", Offset = "0x1A37BC4", VA = "0x1A37BC4")]
		public DissolveOnCollision2D()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class DissolveOnKeyPress : Dissolve
	{
		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KeyCode key;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isToggle;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool toggle;

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x1A37C00", Offset = "0x1A37C00", VA = "0x1A37C00")]
		private void Update()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x1A37C74", Offset = "0x1A37C74", VA = "0x1A37C74")]
		public DissolveOnKeyPress()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class DissolveOnSpawn : Dissolve
	{
		[Token(Token = "0x600135C")]
		[Address(RVA = "0x1A37C84", Offset = "0x1A37C84", VA = "0x1A37C84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x1A37C8C", Offset = "0x1A37C8C", VA = "0x1A37C8C")]
		public DissolveOnSpawn()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class DissolveOnTrigger : Dissolve
	{
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask collisionLayer;

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x1A37C9C", Offset = "0x1A37C9C", VA = "0x1A37C9C")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x1A37D50", Offset = "0x1A37D50", VA = "0x1A37D50")]
		public DissolveOnTrigger()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class DissolveOnTrigger2D : Dissolve
	{
		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask collisionLayer;

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1A37D8C", Offset = "0x1A37D8C", VA = "0x1A37D8C")]
		private void OnTriggerEnter2D(Collider2D col)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x1A37E40", Offset = "0x1A37E40", VA = "0x1A37E40")]
		public DissolveOnTrigger2D()
		{
		}
	}
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD7E3A0", Offset = "0xD7E3A0")]
	public class DissolveSettings : ScriptableObject
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Atomic;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool DisableAfterDissolve;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve DissolveCurve;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87168", Offset = "0xD87168")]
		public float DissolveStartPercent;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Time;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Speed;

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1A37E7C", Offset = "0x1A37E7C", VA = "0x1A37E7C")]
		public DissolveSettings()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class DissolveUI : Dissolve
	{
		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1A37FC8", Offset = "0x1A37FC8", VA = "0x1A37FC8", Slot = "4")]
		protected override Material[] GetMaterials()
		{
			return null;
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x1A38178", Offset = "0x1A38178", VA = "0x1A38178")]
		public DissolveUI()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class DissolveSlider : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_Slider;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer[] m_Renderers;

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x1A37ED0", Offset = "0x1A37ED0", VA = "0x1A37ED0")]
		public void UpdateDissolve()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x1A37FC0", Offset = "0x1A37FC0", VA = "0x1A37FC0")]
		public DissolveSlider()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class LookAtObject : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Transform;

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x1A38188", Offset = "0x1A38188", VA = "0x1A38188")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x1A381E0", Offset = "0x1A381E0", VA = "0x1A381E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x1A38204", Offset = "0x1A38204", VA = "0x1A38204")]
		public LookAtObject()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class RespawnManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] zombies;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] zombiePrefabs;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] spawnPositions;

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1A3820C", Offset = "0x1A3820C", VA = "0x1A3820C")]
		public void Respawn()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1A384A0", Offset = "0x1A384A0", VA = "0x1A384A0")]
		public RespawnManager()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class UpdateLight : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Light m_Light;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_OriginalValue;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material m_Material;

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x1A384A8", Offset = "0x1A384A8", VA = "0x1A384A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x1A384F0", Offset = "0x1A384F0", VA = "0x1A384F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x1A385A4", Offset = "0x1A385A4", VA = "0x1A385A4")]
		private void OnDestory()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x1A38658", Offset = "0x1A38658", VA = "0x1A38658")]
		public UpdateLight()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class Zombie : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_Animator;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_Audio;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_DeathParticles;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Dissolve m_Dissolve;

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x1A38660", Offset = "0x1A38660", VA = "0x1A38660")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x1A3871C", Offset = "0x1A3871C", VA = "0x1A3871C")]
		private void InvokeDissolve()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x1A38738", Offset = "0x1A38738", VA = "0x1A38738")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x1A387B4", Offset = "0x1A387B4", VA = "0x1A387B4")]
		public Zombie()
		{
		}
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x2000270")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x20004E2")]
		public class ListIndices
		{
			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> m_listIndices;

			[Token(Token = "0x600208D")]
			[Address(RVA = "0x194040C", Offset = "0x194040C", VA = "0x194040C")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004E3")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _boneIndex0;

			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _boneIndex1;

			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int _boneIndex2;

			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int _boneIndex3;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _boneWeight0;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _boneWeight1;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float _boneWeight2;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _boneWeight3;

			[Token(Token = "0x600208E")]
			[Address(RVA = "0x1940614", Offset = "0x1940614", VA = "0x1940614")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x600208F")]
			[Address(RVA = "0x19406DC", Offset = "0x19406DC", VA = "0x19406DC")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x20004E4")]
		public class UniqueVertex
		{
			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nFixedX;

			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_nFixedY;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nFixedZ;

			[Token(Token = "0x4001FAE")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x6002090")]
			[Address(RVA = "0x1940794", Offset = "0x1940794", VA = "0x1940794", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002091")]
			[Address(RVA = "0x1940854", Offset = "0x1940854", VA = "0x1940854", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6002092")]
			[Address(RVA = "0x1940480", Offset = "0x1940480", VA = "0x1940480")]
			public UniqueVertex(Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x6002093")]
			[Address(RVA = "0x19408B4", Offset = "0x19408B4", VA = "0x19408B4")]
			public Vector3 ToVertex()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002094")]
			[Address(RVA = "0x1940964", Offset = "0x1940964", VA = "0x1940964")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002095")]
			[Address(RVA = "0x1940980", Offset = "0x1940980", VA = "0x1940980")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002096")]
			[Address(RVA = "0x1940868", Offset = "0x1940868", VA = "0x1940868")]
			private void FromVertex(Vector3 vertex)
			{
			}

			[Token(Token = "0x6002097")]
			[Address(RVA = "0x19409AC", Offset = "0x19409AC", VA = "0x19409AC")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x6002098")]
			[Address(RVA = "0x1940940", Offset = "0x1940940", VA = "0x1940940")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20004E5")]
		private class RepeatedVertex
		{
			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _nFaceIndex;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x170003E2")]
			public int FaceIndex
			{
				[Token(Token = "0x6002099")]
				[Address(RVA = "0x19406C4", Offset = "0x19406C4", VA = "0x19406C4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170003E3")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x600209A")]
				[Address(RVA = "0x19406CC", Offset = "0x19406CC", VA = "0x19406CC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600209B")]
			[Address(RVA = "0x19404D0", Offset = "0x19404D0", VA = "0x19404D0")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x20004E6")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nUniqueIndex;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x170003E4")]
			public int UniqueIndex
			{
				[Token(Token = "0x600209C")]
				[Address(RVA = "0x19406D4", Offset = "0x19406D4", VA = "0x19406D4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600209D")]
			[Address(RVA = "0x1940570", Offset = "0x1940570", VA = "0x1940570")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x600209E")]
			[Address(RVA = "0x1940508", Offset = "0x1940508", VA = "0x1940508")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Vector3> m_listVertices;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> m_listVerticesWorld;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x1700023C")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x6001374")]
			[Address(RVA = "0x193FE50", Offset = "0x193FE50", VA = "0x193FE50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public List<Vector3> ListVertices
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x193FE58", Offset = "0x193FE58", VA = "0x193FE58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public List<Vector3> ListVerticesWorld
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0x193FE60", Offset = "0x193FE60", VA = "0x193FE60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0x193FE68", Offset = "0x193FE68", VA = "0x193FE68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x193FE70", Offset = "0x193FE70", VA = "0x193FE70")]
		public void BuildData(Mesh sourceMesh, Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x19406BC", Offset = "0x19406BC", VA = "0x19406BC")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000271")]
	public class RelevanceSphere
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bExpanded;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 m_v3Position;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_v3Rotation;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_v3Scale;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fRelevance;

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x1940A44", Offset = "0x1940A44", VA = "0x1940A44")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x1940AC0", Offset = "0x1940AC0", VA = "0x1940AC0")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class Simplifier : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004E7")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x20004E8")]
		private class Triangle
		{
			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_bUVData;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int[] m_aUV;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] m_aIndices;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 m_v3Normal;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int m_nSubMesh;

			[Token(Token = "0x170003E5")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x60020A3")]
				[Address(RVA = "0x1946C94", Offset = "0x1946C94", VA = "0x1946C94")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E6")]
			public bool HasUVData
			{
				[Token(Token = "0x60020A4")]
				[Address(RVA = "0x1946C9C", Offset = "0x1946C9C", VA = "0x1946C9C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170003E7")]
			public int[] IndicesUV
			{
				[Token(Token = "0x60020A5")]
				[Address(RVA = "0x1946CA4", Offset = "0x1946CA4", VA = "0x1946CA4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E8")]
			public Vector3 Normal
			{
				[Token(Token = "0x60020A6")]
				[Address(RVA = "0x1946CAC", Offset = "0x1946CAC", VA = "0x1946CAC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170003E9")]
			public int[] Indices
			{
				[Token(Token = "0x60020A7")]
				[Address(RVA = "0x1946CB8", Offset = "0x1946CB8", VA = "0x1946CB8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x1943650", Offset = "0x1943650", VA = "0x1943650")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x1942A40", Offset = "0x1942A40", VA = "0x1942A40")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x1941EFC", Offset = "0x1941EFC", VA = "0x1941EFC")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x1946CC0", Offset = "0x1946CC0", VA = "0x1946CC0")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x1941F68", Offset = "0x1941F68", VA = "0x1941F68")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x1946E4C", Offset = "0x1946E4C", VA = "0x1946E4C")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x194294C", Offset = "0x194294C", VA = "0x194294C")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x1946E88", Offset = "0x1946E88", VA = "0x1946E88")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x1942BC0", Offset = "0x1942BC0", VA = "0x1942BC0")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x20004E9")]
		private class TriangleList
		{
			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x2403348", Offset = "0x2403348", VA = "0x2403348")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x20004EA")]
		private class Vertex
		{
			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_v3Position;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 m_v3PositionWorld;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int m_nID;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float m_fObjDist;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vertex m_collapse;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int m_nHeapSpot;

			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x24033BC", Offset = "0x24033BC", VA = "0x24033BC")]
			public Vertex(Simplifier simplifier, Vector3 v, Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x24034EC", Offset = "0x24034EC", VA = "0x24034EC")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x24035C0", Offset = "0x24035C0", VA = "0x24035C0")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x24036B0", Offset = "0x24036B0", VA = "0x24036B0")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004EB")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0x2403B00", Offset = "0x2403B00", VA = "0x2403B00", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x60020B7")]
			[Address(RVA = "0x2403C8C", Offset = "0x2403C8C", VA = "0x2403C8C", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x60020B8")]
			[Address(RVA = "0x2403CAC", Offset = "0x2403CAC", VA = "0x2403CAC")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x20004EC")]
		private class VertexDataHash
		{
			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3 _v3Vertex;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 _v3Normal;

			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color32 _color;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x170003EA")]
			public Vector3 Vertex
			{
				[Token(Token = "0x60020B9")]
				[Address(RVA = "0x24037C4", Offset = "0x24037C4", VA = "0x24037C4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170003EB")]
			public Vector3 Normal
			{
				[Token(Token = "0x60020BA")]
				[Address(RVA = "0x24037D0", Offset = "0x24037D0", VA = "0x24037D0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170003EC")]
			public Vector2 UV1
			{
				[Token(Token = "0x60020BB")]
				[Address(RVA = "0x24037DC", Offset = "0x24037DC", VA = "0x24037DC")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170003ED")]
			public Vector2 UV2
			{
				[Token(Token = "0x60020BC")]
				[Address(RVA = "0x24037E4", Offset = "0x24037E4", VA = "0x24037E4")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170003EE")]
			public Color32 Color
			{
				[Token(Token = "0x60020BD")]
				[Address(RVA = "0x24037EC", Offset = "0x24037EC", VA = "0x24037EC")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x24037F4", Offset = "0x24037F4", VA = "0x24037F4")]
			public VertexDataHash(Vector3 v3Vertex, Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x24038DC", Offset = "0x24038DC", VA = "0x24038DC", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x2403A98", Offset = "0x2403A98", VA = "0x2403A98", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x2403AB8", Offset = "0x2403AB8", VA = "0x2403AB8")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x2403AD4", Offset = "0x2403AD4", VA = "0x2403AD4")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80BB4", Offset = "0xD80BB4")]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh sourceMesh;

			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gameObject;

			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <nVertices>5__2;

			[Token(Token = "0x170003EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020C6")]
				[Address(RVA = "0x1946B68", Offset = "0x1946B68", VA = "0x1946B68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020C8")]
				[Address(RVA = "0x1946BD0", Offset = "0x1946BD0", VA = "0x1946BD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x1940E90", Offset = "0x1940E90", VA = "0x1940E90")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x19461B8", Offset = "0x19461B8", VA = "0x19461B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x19461BC", Offset = "0x19461BC", VA = "0x19461BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x1946B70", Offset = "0x1946B70", VA = "0x1946B70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80BC4", Offset = "0xD80BC4")]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nVertices;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh meshOut;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject gameObject;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x170003F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020CC")]
				[Address(RVA = "0x19450AC", Offset = "0x19450AC", VA = "0x19450AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020CE")]
				[Address(RVA = "0x1945114", Offset = "0x1945114", VA = "0x1945114", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x1940F64", Offset = "0x1940F64", VA = "0x1940F64")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x19445A0", Offset = "0x19445A0", VA = "0x19445A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x19445A4", Offset = "0x19445A4", VA = "0x19445A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020CD")]
			[Address(RVA = "0x19450B4", Offset = "0x19450B4", VA = "0x19450B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80BD4", Offset = "0xD80BD4")]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh meshIn;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh meshOut;

			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject gameObject;

			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x4001FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private bool <bUV1>5__17;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
			private bool <bUV2>5__18;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
			private bool <bNormal>5__19;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
			private bool <bTangent>5__20;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <strMesh>5__23;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private int <i>5__24;

			[Token(Token = "0x170003F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020D2")]
				[Address(RVA = "0x1946148", Offset = "0x1946148", VA = "0x1946148", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020D4")]
				[Address(RVA = "0x19461B0", Offset = "0x19461B0", VA = "0x19461B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020CF")]
			[Address(RVA = "0x1941988", Offset = "0x1941988", VA = "0x1941988")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x194511C", Offset = "0x194511C", VA = "0x194511C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x1945120", Offset = "0x1945120", VA = "0x1945120", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x1946150", Offset = "0x1946150", VA = "0x1946150", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80BE4", Offset = "0xD80BE4")]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform transform;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x170003F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020D8")]
				[Address(RVA = "0x1944530", Offset = "0x1944530", VA = "0x1944530", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020DA")]
				[Address(RVA = "0x1944598", Offset = "0x1944598", VA = "0x1944598", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020D5")]
			[Address(RVA = "0x19423FC", Offset = "0x19423FC", VA = "0x19423FC")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60020D6")]
			[Address(RVA = "0x1943DBC", Offset = "0x1943DBC", VA = "0x1943DBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020D7")]
			[Address(RVA = "0x1943DC0", Offset = "0x1943DC0", VA = "0x1943DC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020D9")]
			[Address(RVA = "0x1944538", Offset = "0x1944538", VA = "0x1944538", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD87240", Offset = "0xD87240")]
		private static bool <Cancelled>k__BackingField;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD87250", Offset = "0xD87250")]
		private bool <CoroutineEnded>k__BackingField;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x40011ED")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexMap;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_meshOriginal;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseCurvature;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[SerializeField]
		[HideInInspector]
		private bool m_bProtectTexture;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		[HideInInspector]
		private bool m_bLockBorder;

		[Token(Token = "0x17000240")]
		public static bool Cancelled
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x1940BDC", Offset = "0x1940BDC", VA = "0x1940BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD932A4", Offset = "0xD932A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x1940C44", Offset = "0x1940C44", VA = "0x1940C44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD932B4", Offset = "0xD932B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x1940CB4", Offset = "0x1940CB4", VA = "0x1940CB4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x1940D1C", Offset = "0x1940D1C", VA = "0x1940D1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x1940D88", Offset = "0x1940D88", VA = "0x1940D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD932C4", Offset = "0xD932C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x1940D90", Offset = "0x1940D90", VA = "0x1940D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD932D4", Offset = "0xD932D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x6001382")]
			[Address(RVA = "0x1940D9C", Offset = "0x1940D9C", VA = "0x1940D9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001383")]
			[Address(RVA = "0x1940DA4", Offset = "0x1940DA4", VA = "0x1940DA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public bool UseCurvature
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x1940DB0", Offset = "0x1940DB0", VA = "0x1940DB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x1940DB8", Offset = "0x1940DB8", VA = "0x1940DB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public bool ProtectTexture
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x1940DC4", Offset = "0x1940DC4", VA = "0x1940DC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x1940DCC", Offset = "0x1940DCC", VA = "0x1940DCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public bool LockBorder
		{
			[Token(Token = "0x6001388")]
			[Address(RVA = "0x1940DD8", Offset = "0x1940DD8", VA = "0x1940DD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001389")]
			[Address(RVA = "0x1940DE0", Offset = "0x1940DE0", VA = "0x1940DE0")]
			set
			{
			}
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x1940DEC", Offset = "0x1940DEC", VA = "0x1940DEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD932E4", Offset = "0xD932E4")]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x1940EBC", Offset = "0x1940EBC", VA = "0x1940EBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD93348", Offset = "0xD93348")]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x1940F90", Offset = "0x1940F90", VA = "0x1940F90")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x1940F98", Offset = "0x1940F98", VA = "0x1940F98")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x1940FDC", Offset = "0x1940FDC", VA = "0x1940FDC")]
		public static Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x19418E4", Offset = "0x19418E4", VA = "0x19418E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD933AC", Offset = "0xD933AC")]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x19419B4", Offset = "0x19419B4", VA = "0x19419B4")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x1941A4C", Offset = "0x1941A4C", VA = "0x1941A4C")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x1942054", Offset = "0x1942054", VA = "0x1942054")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x1942364", Offset = "0x1942364", VA = "0x1942364")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD93410", Offset = "0xD93410")]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x1942428", Offset = "0x1942428", VA = "0x1942428")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x19431FC", Offset = "0x19431FC", VA = "0x19431FC")]
		private void AddVertices(List<Vector3> listVertices, List<Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x19433B4", Offset = "0x19433B4", VA = "0x19433B4")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x19439A4", Offset = "0x19439A4", VA = "0x19439A4")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x1943BAC", Offset = "0x1943BAC", VA = "0x1943BAC")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x1943C50", Offset = "0x1943C50", VA = "0x1943C50")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x1942E30", Offset = "0x1942E30", VA = "0x1942E30")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x1943004", Offset = "0x1943004", VA = "0x1943004")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x1943D1C", Offset = "0x1943D1C", VA = "0x1943D1C")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x1943BB0", Offset = "0x1943BB0", VA = "0x1943BB0")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x1943D9C", Offset = "0x1943D9C", VA = "0x1943D9C")]
		public Simplifier()
		{
		}
	}
}
namespace AmplifyOcclusion
{
	[Token(Token = "0x2000273")]
	public static class AmplifyOcclusionCommon
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int PerPixelNormalSourceCount;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly float[] m_temporalRotations;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly float[] m_spatialOffsets;

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x1A2B600", Offset = "0x1A2B600", VA = "0x1A2B600")]
		public static void CommandBuffer_TemporalFilterDirectionsOffsets(CommandBuffer cb, uint aSampleStep)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x1A2B740", Offset = "0x1A2B740", VA = "0x1A2B740")]
		public static Material CreateMaterialWithShaderName(string aShaderName, bool aThroughErrorMsg)
		{
			return null;
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x1A2B8AC", Offset = "0x1A2B8AC", VA = "0x1A2B8AC")]
		public static int SafeAllocateTemporaryRT(CommandBuffer cb, string propertyName, int width, int height, RenderTextureFormat format = RenderTextureFormat.Default, RenderTextureReadWrite readWrite = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Point)
		{
			return default(int);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x1A2B940", Offset = "0x1A2B940", VA = "0x1A2B940")]
		public static void SafeReleaseTemporaryRT(CommandBuffer cb, int id)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x1A2B958", Offset = "0x1A2B958", VA = "0x1A2B958")]
		public static RenderTexture SafeAllocateRT(string name, int width, int height, RenderTextureFormat format, RenderTextureReadWrite readWrite, FilterMode filterMode = FilterMode.Point, int antiAliasing = 1, bool aUseMipMap = false)
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1A2BAE0", Offset = "0x1A2BAE0", VA = "0x1A2BAE0")]
		public static void SafeReleaseRT(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x1A2BBAC", Offset = "0x1A2BBAC", VA = "0x1A2BBAC")]
		public static bool IsStereoSinglePassEnabled(Camera aCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x1A2BBF8", Offset = "0x1A2BBF8", VA = "0x1A2BBF8")]
		public static bool IsStereoMultiPassEnabled(Camera aCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x1A2BC44", Offset = "0x1A2BC44", VA = "0x1A2BC44")]
		public static void UpdateGlobalShaderConstants(CommandBuffer cb, ref TargetDesc aTarget, Camera aCamera, bool isDownsample, bool isFilterDownsample)
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class AmplifyOcclusionViewProjMatrix
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Matrix4x4 m_prevViewProjMatrixLeft;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Matrix4x4 m_prevInvViewProjMatrixLeft;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Matrix4x4 m_prevViewProjMatrixRight;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Matrix4x4 m_prevInvViewProjMatrixRight;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x1A2C008", Offset = "0x1A2C008", VA = "0x1A2C008")]
		public void UpdateGlobalShaderConstants_Matrices(CommandBuffer cb, Camera aCamera, bool isUsingTemporalFilter)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x1A2C9A0", Offset = "0x1A2C9A0", VA = "0x1A2C9A0")]
		public AmplifyOcclusionViewProjMatrix()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public enum SampleCountLevel
	{
		[Token(Token = "0x4001203")]
		Low,
		[Token(Token = "0x4001204")]
		Medium,
		[Token(Token = "0x4001205")]
		High,
		[Token(Token = "0x4001206")]
		VeryHigh
	}
	[Token(Token = "0x2000276")]
	public struct TargetDesc
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int fullWidth;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int fullHeight;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int width;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int height;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float oneOverWidth;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float oneOverHeight;
	}
	[Token(Token = "0x2000277")]
	public static class ShaderPass
	{
		[Token(Token = "0x400120D")]
		public const int OcclusionLow_None_UseDynamicDepthMips = 16;

		[Token(Token = "0x400120E")]
		public const int CombineDownsampledOcclusionDepth = 32;

		[Token(Token = "0x400120F")]
		public const int NeighborMotionIntensity = 33;

		[Token(Token = "0x4001210")]
		public const int ClearTemporal = 34;

		[Token(Token = "0x4001211")]
		public const int ScaleDownCloserDepthEven = 35;

		[Token(Token = "0x4001212")]
		public const int ScaleDownCloserDepthEven_CameraDepthTexture = 36;

		[Token(Token = "0x4001213")]
		public const int Temporal = 37;

		[Token(Token = "0x4001214")]
		public const int BlurHorizontal1 = 0;

		[Token(Token = "0x4001215")]
		public const int BlurVertical1 = 1;

		[Token(Token = "0x4001216")]
		public const int BlurHorizontal2 = 2;

		[Token(Token = "0x4001217")]
		public const int BlurVertical2 = 3;

		[Token(Token = "0x4001218")]
		public const int BlurHorizontal3 = 4;

		[Token(Token = "0x4001219")]
		public const int BlurVertical3 = 5;

		[Token(Token = "0x400121A")]
		public const int BlurHorizontal4 = 6;

		[Token(Token = "0x400121B")]
		public const int BlurVertical4 = 7;

		[Token(Token = "0x400121C")]
		public const int BlurHorizontalIntensity = 8;

		[Token(Token = "0x400121D")]
		public const int BlurVerticalIntensity = 9;

		[Token(Token = "0x400121E")]
		public const int ApplyDebug = 0;

		[Token(Token = "0x400121F")]
		public const int ApplyDebugTemporal = 1;

		[Token(Token = "0x4001220")]
		public const int ApplyDeferred = 3;

		[Token(Token = "0x4001221")]
		public const int ApplyDeferredTemporal = 4;

		[Token(Token = "0x4001222")]
		public const int ApplyDeferredLog = 6;

		[Token(Token = "0x4001223")]
		public const int ApplyDeferredLogTemporal = 7;

		[Token(Token = "0x4001224")]
		public const int ApplyPostEffect = 9;

		[Token(Token = "0x4001225")]
		public const int ApplyPostEffectTemporal = 10;

		[Token(Token = "0x4001226")]
		public const int ApplyPostEffectTemporalMultiply = 12;

		[Token(Token = "0x4001227")]
		public const int ApplyDeferredTemporalMultiply = 13;

		[Token(Token = "0x4001228")]
		public const int ApplyDebugCombineFromTemporal = 14;

		[Token(Token = "0x4001229")]
		public const int ApplyCombineFromTemporal = 15;

		[Token(Token = "0x400122A")]
		public const int ApplyDeferredCombineFromTemporal = 16;

		[Token(Token = "0x400122B")]
		public const int ApplyDeferredLogCombineFromTemporal = 17;

		[Token(Token = "0x400122C")]
		public const int OcclusionLow_None = 0;

		[Token(Token = "0x400122D")]
		public const int OcclusionLow_Camera = 1;

		[Token(Token = "0x400122E")]
		public const int OcclusionLow_GBuffer = 2;

		[Token(Token = "0x400122F")]
		public const int OcclusionLow_GBufferOctaEncoded = 3;
	}
	[Token(Token = "0x2000278")]
	public static class PropertyID
	{
		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int _MainTex;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int _AO_Radius;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int _AO_PowExponent;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int _AO_Bias;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int _AO_Levels;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int _AO_ThicknessDecay;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int _AO_BlurSharpness;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int _AO_BufDepthToLinearEye;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int _AO_CameraViewLeft;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int _AO_CameraViewRight;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int _AO_ProjMatrixLeft;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int _AO_ProjMatrixRight;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly int _AO_InvViewProjMatrixLeft;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static readonly int _AO_PrevViewProjMatrixLeft;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int _AO_PrevInvViewProjMatrixLeft;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly int _AO_InvViewProjMatrixRight;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly int _AO_PrevViewProjMatrixRight;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static readonly int _AO_PrevInvViewProjMatrixRight;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly int _AO_GBufferNormals;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static readonly int _AO_Target_TexelSize;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly int _AO_TemporalCurveAdj;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static readonly int _AO_TemporalMotionSensibility;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly int _AO_CurrOcclusionDepth;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static readonly int _AO_CurrOcclusionDepth_TexelSize;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly int _AO_TemporalAccumm;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static readonly int _AO_TemporalDirections;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly int _AO_TemporalOffsets;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static readonly int _AO_GBufferAlbedo;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly int _AO_GBufferEmission;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static readonly int _AO_UVToView;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly int _AO_HalfProjScale;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public static readonly int _AO_FadeParams;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly int _AO_FadeValues;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public static readonly int _AO_FadeToTint;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly int _AO_CurrMotionIntensity;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public static readonly int _AO_CurrDepthSource_TexelSize;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly int _AO_CurrDepthSource;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public static readonly int _AO_CurrMotionIntensity_TexelSize;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly int _AO_SourceDepthMipmap;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public static readonly int _AO_Source_TexelSize;
	}
	[Serializable]
	[Token(Token = "0x2000279")]
	public class VersionInfo
	{
		[Token(Token = "0x4001258")]
		public const byte Major = 2;

		[Token(Token = "0x4001259")]
		public const byte Minor = 0;

		[Token(Token = "0x400125A")]
		public const byte Release = 8;

		[Token(Token = "0x400125B")]
		public const byte Revision = 0;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int m_major;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int m_minor;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_release;

		[Token(Token = "0x17000247")]
		public static int FullNumber
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x1A2D170", Offset = "0x1A2D170", VA = "0x1A2D170")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000248")]
		public int Number
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x1A2D178", Offset = "0x1A2D178", VA = "0x1A2D178")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x1A2CFD0", Offset = "0x1A2CFD0", VA = "0x1A2CFD0")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x1A2D09C", Offset = "0x1A2D09C", VA = "0x1A2D09C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x1A2D198", Offset = "0x1A2D198", VA = "0x1A2D198")]
		private VersionInfo()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1A2D1D0", Offset = "0x1A2D1D0", VA = "0x1A2D1D0")]
		private VersionInfo(byte major, byte minor, byte release)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x1A2D21C", Offset = "0x1A2D21C", VA = "0x1A2D21C")]
		public static VersionInfo Current()
		{
			return null;
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x1A2D28C", Offset = "0x1A2D28C", VA = "0x1A2D28C")]
		public static bool Matches(VersionInfo version)
		{
			return default(bool);
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E3F4", Offset = "0xD7E3F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E3F4", Offset = "0xD7E3F4")]
	public abstract class Baker : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004F1")]
		public enum Mode
		{
			[Token(Token = "0x4002005")]
			AnimationClips,
			[Token(Token = "0x4002006")]
			AnimationStates,
			[Token(Token = "0x4002007")]
			PlayableDirector,
			[Token(Token = "0x4002008")]
			Realtime
		}

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD874C0", Offset = "0xD874C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD874C0", Offset = "0xD874C0")]
		public int frameRate;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87518", Offset = "0xD87518")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87518", Offset = "0xD87518")]
		public float keyReductionError;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87570", Offset = "0xD87570")]
		public Mode mode;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD875A8", Offset = "0xD875A8")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD875E0", Offset = "0xD875E0")]
		public string[] animationStates;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87618", Offset = "0xD87618")]
		public bool loop;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87650", Offset = "0xD87650")]
		public string saveToFolder;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87688", Offset = "0xD87688")]
		public string appendName;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD876C0", Offset = "0xD876C0")]
		public string saveName;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD876F8", Offset = "0xD876F8")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD87708", Offset = "0xD87708")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD87788", Offset = "0xD87788")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x17000249")]
		public bool isBaking
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x1EA7F08", Offset = "0x1EA7F08", VA = "0x1EA7F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93554", Offset = "0xD93554")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x1EA7F10", Offset = "0x1EA7F10", VA = "0x1EA7F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93564", Offset = "0xD93564")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public float bakingProgress
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x1EA7F1C", Offset = "0x1EA7F1C", VA = "0x1EA7F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93574", Offset = "0xD93574")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x1EA7F24", Offset = "0x1EA7F24", VA = "0x1EA7F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93584", Offset = "0xD93584")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		protected float clipLength
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x1EA7F2C", Offset = "0x1EA7F2C", VA = "0x1EA7F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93594", Offset = "0xD93594")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x1EA7F34", Offset = "0x1EA7F34", VA = "0x1EA7F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD935A4", Offset = "0xD935A4")]
			private set
			{
			}
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1EA7DD8", Offset = "0x1EA7DD8", VA = "0x1EA7DD8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93474", Offset = "0xD93474")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1EA7E24", Offset = "0x1EA7E24", VA = "0x1EA7E24")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD934AC", Offset = "0xD934AC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1EA7E70", Offset = "0x1EA7E70", VA = "0x1EA7E70")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD934E4", Offset = "0xD934E4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1EA7EBC", Offset = "0x1EA7EBC", VA = "0x1EA7EBC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9351C", Offset = "0xD9351C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013BD")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x60013BE")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x60013BF")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x60013C0")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x60013C1")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x1EA7F3C", Offset = "0x1EA7F3C", VA = "0x1EA7F3C")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x1EA7F40", Offset = "0x1EA7F40", VA = "0x1EA7F40")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x1EA7F44", Offset = "0x1EA7F44", VA = "0x1EA7F44")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x1EA7F48", Offset = "0x1EA7F48", VA = "0x1EA7F48")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87798", Offset = "0xD87798")]
		public bool markAsLegacy;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD877D0", Offset = "0xD877D0")]
		public Transform root;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87808", Offset = "0xD87808")]
		public Transform rootNode;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87840", Offset = "0xD87840")]
		public Transform[] ignoreList;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87878", Offset = "0xD87878")]
		public Transform[] bakePositionList;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x1508B90", Offset = "0x1508B90", VA = "0x1508B90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1508F5C", Offset = "0x1508F5C", VA = "0x1508F5C", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1508F64", Offset = "0x1508F64", VA = "0x1508F64", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1509074", Offset = "0x1509074", VA = "0x1509074", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x15090F0", Offset = "0x15090F0", VA = "0x15090F0", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x150916C", Offset = "0x150916C", VA = "0x150916C", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x1508DAC", Offset = "0x1508DAC", VA = "0x1508DAC")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x1508E84", Offset = "0x1508E84", VA = "0x1508E84")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x15091E8", Offset = "0x15091E8", VA = "0x15091E8")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class TQ
	{
		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x150D9C4", Offset = "0x150D9C4", VA = "0x150D9C4")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class AvatarUtility
	{
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x1EA6DC0", Offset = "0x1EA6DC0", VA = "0x1EA6DC0")]
		public static Quaternion GetPostRotation(Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1EA6FD4", Offset = "0x1EA6FD4", VA = "0x1EA6FD4")]
		public static TQ GetIKGoalTQ(Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1EA6FB4", Offset = "0x1EA6FB4", VA = "0x1EA6FB4")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1EA7654", Offset = "0x1EA7654", VA = "0x1EA7654")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public static class BakerUtilities
	{
		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x1EA908C", Offset = "0x1EA908C", VA = "0x1EA908C")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x1EAA560", Offset = "0x1EAA560", VA = "0x1EAA560")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x1EA8AA0", Offset = "0x1EA8AA0", VA = "0x1EA8AA0")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x1EA90D4", Offset = "0x1EA90D4", VA = "0x1EA90D4")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x1EA85D8", Offset = "0x1EA85D8", VA = "0x1EA85D8")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200027F")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x1EA8008", Offset = "0x1EA8008", VA = "0x1EA8008")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x1EA8254", Offset = "0x1EA8254", VA = "0x1EA8254")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x1EA8128", Offset = "0x1EA8128", VA = "0x1EA8128")]
		public void Reset()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x1EA838C", Offset = "0x1EA838C", VA = "0x1EA838C")]
		public void SetIKKeyframes(float time, Avatar avatar, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x1EA8834", Offset = "0x1EA8834", VA = "0x1EA8834")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x1EA8930", Offset = "0x1EA8930", VA = "0x1EA8930")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x1EA8A2C", Offset = "0x1EA8A2C", VA = "0x1EA8A2C")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x1EA89A4", Offset = "0x1EA89A4", VA = "0x1EA89A4")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x1EA8CEC", Offset = "0x1EA8CEC", VA = "0x1EA8CEC")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x1EA8DA0", Offset = "0x1EA8DA0", VA = "0x1EA8DA0")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000280")]
	public class BakerMuscle
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x1EA90D8", Offset = "0x1EA90D8", VA = "0x1EA90D8")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x1EA9148", Offset = "0x1EA9148", VA = "0x1EA9148")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x1EA9830", Offset = "0x1EA9830", VA = "0x1EA9830")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x1EA98E4", Offset = "0x1EA98E4", VA = "0x1EA98E4")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x1EA97D0", Offset = "0x1EA97D0", VA = "0x1EA97D0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x1EA99C8", Offset = "0x1EA99C8", VA = "0x1EA99C8")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x1EA9A10", Offset = "0x1EA9A10", VA = "0x1EA9A10")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000281")]
	public class BakerTransform
	{
		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x1EA9A18", Offset = "0x1EA9A18", VA = "0x1EA9A18")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x1EA9BAC", Offset = "0x1EA9BAC", VA = "0x1EA9BAC")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x1EA9BC0", Offset = "0x1EA9BC0", VA = "0x1EA9BC0")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x1EA9E50", Offset = "0x1EA9E50", VA = "0x1EA9E50")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x1EA9AB4", Offset = "0x1EA9AB4", VA = "0x1EA9AB4")]
		public void Reset()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x1EAA09C", Offset = "0x1EAA09C", VA = "0x1EAA09C")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x1EAA110", Offset = "0x1EAA110", VA = "0x1EAA110")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x1EAA35C", Offset = "0x1EAA35C", VA = "0x1EAA35C")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD878B0", Offset = "0xD878B0")]
		public bool bakeHandIK;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD878E8", Offset = "0xD878E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD878E8", Offset = "0xD878E8")]
		public float IKKeyReductionError;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87940", Offset = "0xD87940")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87940", Offset = "0xD87940")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x150A120", Offset = "0x150A120", VA = "0x150A120")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x150A54C", Offset = "0x150A54C", VA = "0x150A54C", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x150A568", Offset = "0x150A568", VA = "0x150A568", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x150A688", Offset = "0x150A688", VA = "0x150A688", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x150A764", Offset = "0x150A764", VA = "0x150A764", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x150A934", Offset = "0x150A934", VA = "0x150A934", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x150AC5C", Offset = "0x150AC5C", VA = "0x150AC5C")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x150AD38", Offset = "0x150AD38", VA = "0x150AD38")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class CameraController : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004F2")]
		public enum UpdateMode
		{
			[Token(Token = "0x400200A")]
			Update,
			[Token(Token = "0x400200B")]
			FixedUpdate,
			[Token(Token = "0x400200C")]
			LateUpdate,
			[Token(Token = "0x400200D")]
			FixedLateUpdate
		}

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD87994", Offset = "0xD87994")]
		public bool smoothFollow;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD879CC", Offset = "0xD879CC")]
		public float rotationSensitivity;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD87A04", Offset = "0xD87A04")]
		public float distance;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD87A3C", Offset = "0xD87A3C")]
		public LayerMask blockingLayers;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87A74", Offset = "0xD87A74")]
		public float blockedOffset;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD87A8C", Offset = "0xD87A8C")]
		private float <x>k__BackingField;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD87A9C", Offset = "0xD87A9C")]
		private float <y>k__BackingField;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD87AAC", Offset = "0xD87AAC")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 targetDistance;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 position;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotation;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 smoothPosition;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x1700024C")]
		public float x
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x1EB10A8", Offset = "0x1EB10A8", VA = "0x1EB10A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD935B4", Offset = "0xD935B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x1EB10B0", Offset = "0x1EB10B0", VA = "0x1EB10B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD935C4", Offset = "0xD935C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public float y
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x1EB10B8", Offset = "0x1EB10B8", VA = "0x1EB10B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD935D4", Offset = "0xD935D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x1EB10C0", Offset = "0x1EB10C0", VA = "0x1EB10C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD935E4", Offset = "0xD935E4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public float distanceTarget
		{
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x1EB10C8", Offset = "0x1EB10C8", VA = "0x1EB10C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD935F4", Offset = "0xD935F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x1EB10D0", Offset = "0x1EB10D0", VA = "0x1EB10D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93604", Offset = "0xD93604")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		private float zoomAdd
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0x1EB1B7C", Offset = "0x1EB1B7C", VA = "0x1EB1B7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1EB10D8", Offset = "0x1EB10D8", VA = "0x1EB10D8")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x1EB1114", Offset = "0x1EB1114", VA = "0x1EB1114")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x1EB111C", Offset = "0x1EB111C", VA = "0x1EB111C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x1EB1238", Offset = "0x1EB1238", VA = "0x1EB1238", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x1EB1294", Offset = "0x1EB1294", VA = "0x1EB1294", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x1EB12FC", Offset = "0x1EB12FC", VA = "0x1EB12FC", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x1EB1360", Offset = "0x1EB1360", VA = "0x1EB1360")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x1EB126C", Offset = "0x1EB126C", VA = "0x1EB126C")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x1EB14E0", Offset = "0x1EB14E0", VA = "0x1EB14E0")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x1EB1ACC", Offset = "0x1EB1ACC", VA = "0x1EB1ACC")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x1EB1BF0", Offset = "0x1EB1BF0", VA = "0x1EB1BF0")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class CameraControllerFPS : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x1EB1D00", Offset = "0x1EB1D00", VA = "0x1EB1D00")]
		private void Awake()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1EB1D38", Offset = "0x1EB1D38", VA = "0x1EB1D38")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x1EB1EF0", Offset = "0x1EB1EF0", VA = "0x1EB1EF0")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x1EB1FA0", Offset = "0x1EB1FA0", VA = "0x1EB1FA0")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000285")]
	public enum Axis
	{
		[Token(Token = "0x40012D4")]
		X,
		[Token(Token = "0x40012D5")]
		Y,
		[Token(Token = "0x40012D6")]
		Z
	}
	[Token(Token = "0x2000286")]
	public class AxisTools
	{
		[Token(Token = "0x6001412")]
		[Address(RVA = "0x1EA765C", Offset = "0x1EA765C", VA = "0x1EA765C")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x1EA7714", Offset = "0x1EA7714", VA = "0x1EA7714")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x1EA77C0", Offset = "0x1EA77C0", VA = "0x1EA77C0")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x1EA79A4", Offset = "0x1EA79A4", VA = "0x1EA79A4")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x1EA78DC", Offset = "0x1EA78DC", VA = "0x1EA78DC")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x1EA7AC0", Offset = "0x1EA7AC0", VA = "0x1EA7AC0")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x1EA7B08", Offset = "0x1EA7B08", VA = "0x1EA7B08")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x1EA7DD0", Offset = "0x1EA7DD0", VA = "0x1EA7DD0")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000287")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x20004F3")]
		public class LimbOrientation
		{
			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x60020DB")]
			[Address(RVA = "0x1EAAC08", Offset = "0x1EAAC08", VA = "0x1EAAC08")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x17000250")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x600141B")]
			[Address(RVA = "0x1EAA994", Offset = "0x1EAA994", VA = "0x1EAA994")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x1EAAC80", Offset = "0x1EAAC80", VA = "0x1EAAC80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x1EAA948", Offset = "0x1EAA948", VA = "0x1EAA948")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x2000288")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x20004F4")]
		public enum BoneType
		{
			[Token(Token = "0x4002012")]
			Unassigned,
			[Token(Token = "0x4002013")]
			Spine,
			[Token(Token = "0x4002014")]
			Head,
			[Token(Token = "0x4002015")]
			Arm,
			[Token(Token = "0x4002016")]
			Leg,
			[Token(Token = "0x4002017")]
			Tail,
			[Token(Token = "0x4002018")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x20004F5")]
		public enum BoneSide
		{
			[Token(Token = "0x400201A")]
			Center,
			[Token(Token = "0x400201B")]
			Left,
			[Token(Token = "0x400201C")]
			Right
		}

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x1EAAEF4", Offset = "0x1EAAEF4", VA = "0x1EAAEF4")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x1EAB1F4", Offset = "0x1EAB1F4", VA = "0x1EAB1F4")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x1EAB444", Offset = "0x1EAB444", VA = "0x1EAB444")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x1EAB4C8", Offset = "0x1EAB4C8", VA = "0x1EAB4C8")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x1EAB574", Offset = "0x1EAB574", VA = "0x1EAB574")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x1EAB0A4", Offset = "0x1EAB0A4", VA = "0x1EAB0A4")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x1EAB3A4", Offset = "0x1EAB3A4", VA = "0x1EAB3A4")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x1EABDB4", Offset = "0x1EABDB4", VA = "0x1EABDB4")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x1EABBCC", Offset = "0x1EABBCC", VA = "0x1EABBCC")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x1EABCC0", Offset = "0x1EABCC0", VA = "0x1EABCC0")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x1EAB794", Offset = "0x1EAB794", VA = "0x1EAB794")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x1EAB848", Offset = "0x1EAB848", VA = "0x1EAB848")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x1EAB8FC", Offset = "0x1EAB8FC", VA = "0x1EAB8FC")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x1EAB9B0", Offset = "0x1EAB9B0", VA = "0x1EAB9B0")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x1EABA64", Offset = "0x1EABA64", VA = "0x1EABA64")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x1EABB18", Offset = "0x1EABB18", VA = "0x1EABB18")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x1EABFC8", Offset = "0x1EABFC8", VA = "0x1EABFC8")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x1EAB6A8", Offset = "0x1EAB6A8", VA = "0x1EAB6A8")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x1EABF38", Offset = "0x1EABF38", VA = "0x1EABF38")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x1EAC038", Offset = "0x1EAC038", VA = "0x1EAC038")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x1EAC110", Offset = "0x1EAC110", VA = "0x1EAC110")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x1EABEBC", Offset = "0x1EABEBC", VA = "0x1EABEBC")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x1EABE44", Offset = "0x1EABE44", VA = "0x1EABE44")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000289")]
	public class BipedReferences
	{
		[Token(Token = "0x20004F6")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x170003F7")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x60020DD")]
				[Address(RVA = "0x1EB10A0", Offset = "0x1EB10A0", VA = "0x1EB10A0")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x60020DC")]
			[Address(RVA = "0x1EB108C", Offset = "0x1EB108C", VA = "0x1EB108C")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x17000252")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x1EADC84", Offset = "0x1EADC84", VA = "0x1EADC84", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000253")]
		public bool isEmpty
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x1EAE070", Offset = "0x1EAE070", VA = "0x1EAE070")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x1EAE080", Offset = "0x1EAE080", VA = "0x1EAE080", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x1EAE4AC", Offset = "0x1EAE4AC", VA = "0x1EAE4AC", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x1EAE8E4", Offset = "0x1EAE8E4", VA = "0x1EAE8E4")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x1EAEEF4", Offset = "0x1EAEEF4", VA = "0x1EAEEF4")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x1EAEB30", Offset = "0x1EAEB30", VA = "0x1EAEB30")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x1EAF6A4", Offset = "0x1EAF6A4", VA = "0x1EAF6A4")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x1EAF798", Offset = "0x1EAF798", VA = "0x1EAF798")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x1EAFCF0", Offset = "0x1EAFCF0", VA = "0x1EAFCF0")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x1EAFAF4", Offset = "0x1EAFAF4", VA = "0x1EAFAF4")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x1EAF96C", Offset = "0x1EAF96C", VA = "0x1EAF96C")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x1EAF838", Offset = "0x1EAF838", VA = "0x1EAF838")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x1EAFBF8", Offset = "0x1EAFBF8", VA = "0x1EAFBF8")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x1EAFDEC", Offset = "0x1EAFDEC", VA = "0x1EAFDEC")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x1EB088C", Offset = "0x1EB088C", VA = "0x1EB088C")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x1EB0370", Offset = "0x1EB0370", VA = "0x1EB0370")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x1EB0B80", Offset = "0x1EB0B80", VA = "0x1EB0B80")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x1EB06B0", Offset = "0x1EB06B0", VA = "0x1EB06B0")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x1EB0B88", Offset = "0x1EB0B88", VA = "0x1EB0B88")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x1EB0B90", Offset = "0x1EB0B90", VA = "0x1EB0B90")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x1EB0D50", Offset = "0x1EB0D50", VA = "0x1EB0D50")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x1EB0F68", Offset = "0x1EB0F68", VA = "0x1EB0F68")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x1EAEAC0", Offset = "0x1EAEAC0", VA = "0x1EAEAC0")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class Comments : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x1EB1FBC", Offset = "0x1EB1FBC", VA = "0x1EB1FBC")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class DemoGUIMessage : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x1EB1FC4", Offset = "0x1EB1FC4", VA = "0x1EB1FC4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x1EB2104", Offset = "0x1EB2104", VA = "0x1EB2104")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class Hierarchy
	{
		[Token(Token = "0x6001450")]
		[Address(RVA = "0x1509250", Offset = "0x1509250", VA = "0x1509250")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x1509450", Offset = "0x1509450", VA = "0x1509450")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x15092E8", Offset = "0x15092E8", VA = "0x15092E8")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x1509574", Offset = "0x1509574", VA = "0x1509574")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x1509698", Offset = "0x1509698", VA = "0x1509698")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x1509940", Offset = "0x1509940", VA = "0x1509940")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1509A5C", Offset = "0x1509A5C", VA = "0x1509A5C")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x1509BE4", Offset = "0x1509BE4", VA = "0x1509BE4")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1509F78", Offset = "0x1509F78", VA = "0x1509F78")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x1509D64", Offset = "0x1509D64", VA = "0x1509D64")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x150A118", Offset = "0x150A118", VA = "0x150A118")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string color;

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x150ADEC", Offset = "0x150ADEC", VA = "0x150ADEC")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x150AE5C", Offset = "0x150AE5C", VA = "0x150AE5C")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028E")]
	public enum InterpolationMode
	{
		[Token(Token = "0x4001304")]
		None,
		[Token(Token = "0x4001305")]
		InOutCubic,
		[Token(Token = "0x4001306")]
		InOutQuintic,
		[Token(Token = "0x4001307")]
		InOutSine,
		[Token(Token = "0x4001308")]
		InQuintic,
		[Token(Token = "0x4001309")]
		InQuartic,
		[Token(Token = "0x400130A")]
		InCubic,
		[Token(Token = "0x400130B")]
		InQuadratic,
		[Token(Token = "0x400130C")]
		InElastic,
		[Token(Token = "0x400130D")]
		InElasticSmall,
		[Token(Token = "0x400130E")]
		InElasticBig,
		[Token(Token = "0x400130F")]
		InSine,
		[Token(Token = "0x4001310")]
		InBack,
		[Token(Token = "0x4001311")]
		OutQuintic,
		[Token(Token = "0x4001312")]
		OutQuartic,
		[Token(Token = "0x4001313")]
		OutCubic,
		[Token(Token = "0x4001314")]
		OutInCubic,
		[Token(Token = "0x4001315")]
		OutInQuartic,
		[Token(Token = "0x4001316")]
		OutElastic,
		[Token(Token = "0x4001317")]
		OutElasticSmall,
		[Token(Token = "0x4001318")]
		OutElasticBig,
		[Token(Token = "0x4001319")]
		OutSine,
		[Token(Token = "0x400131A")]
		OutBack,
		[Token(Token = "0x400131B")]
		OutBackCubic,
		[Token(Token = "0x400131C")]
		OutBackQuartic,
		[Token(Token = "0x400131D")]
		BackInCubic,
		[Token(Token = "0x400131E")]
		BackInQuartic
	}
	[Token(Token = "0x200028F")]
	public class Interp
	{
		[Token(Token = "0x600145D")]
		[Address(RVA = "0x150AECC", Offset = "0x150AECC", VA = "0x150AECC")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x150B934", Offset = "0x150B934", VA = "0x150B934")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x150BA3C", Offset = "0x150BA3C", VA = "0x150BA3C")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x150B238", Offset = "0x150B238", VA = "0x150B238")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x150B244", Offset = "0x150B244", VA = "0x150B244")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x150B268", Offset = "0x150B268", VA = "0x150B268")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x150B2A4", Offset = "0x150B2A4", VA = "0x150B2A4")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x150B2BC", Offset = "0x150B2BC", VA = "0x150B2BC")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x150B2D0", Offset = "0x150B2D0", VA = "0x150B2D0")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x150B2E4", Offset = "0x150B2E4", VA = "0x150B2E4")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x150B2F4", Offset = "0x150B2F4", VA = "0x150B2F4")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x150B33C", Offset = "0x150B33C", VA = "0x150B33C")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x150B374", Offset = "0x150B374", VA = "0x150B374")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x150B39C", Offset = "0x150B39C", VA = "0x150B39C")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x150BB38", Offset = "0x150BB38", VA = "0x150BB38")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x150B3D0", Offset = "0x150B3D0", VA = "0x150B3D0")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x150B3F8", Offset = "0x150B3F8", VA = "0x150B3F8")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x150B428", Offset = "0x150B428", VA = "0x150B428")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x150B45C", Offset = "0x150B45C", VA = "0x150B45C")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x150B4A0", Offset = "0x150B4A0", VA = "0x150B4A0")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x150B504", Offset = "0x150B504", VA = "0x150B504")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x150B568", Offset = "0x150B568", VA = "0x150B568")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x150B5BC", Offset = "0x150B5BC", VA = "0x150B5BC")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x150B610", Offset = "0x150B610", VA = "0x150B610")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x150B6A8", Offset = "0x150B6A8", VA = "0x150B6A8")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x150B73C", Offset = "0x150B73C", VA = "0x150B73C")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x150BB6C", Offset = "0x150BB6C", VA = "0x150BB6C")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x150B7E0", Offset = "0x150B7E0", VA = "0x150B7E0")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x150B8C4", Offset = "0x150B8C4", VA = "0x150B8C4")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x150B8F4", Offset = "0x150B8F4", VA = "0x150B8F4")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x150BC54", Offset = "0x150BC54", VA = "0x150BC54")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string color;

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x150BC5C", Offset = "0x150BC5C", VA = "0x150BC5C")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x150BCCC", Offset = "0x150BCCC", VA = "0x150BCCC")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x2000291")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x600147E")]
		[Address(RVA = "0x150BD3C", Offset = "0x150BD3C", VA = "0x150BD3C")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x150BD94", Offset = "0x150BD94", VA = "0x150BD94")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x150BE60", Offset = "0x150BE60", VA = "0x150BE60")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x150BDAC", Offset = "0x150BDAC", VA = "0x150BDAC")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x150BE78", Offset = "0x150BE78", VA = "0x150BE78")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x150BF1C", Offset = "0x150BF1C", VA = "0x150BF1C")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x150BF48", Offset = "0x150BF48", VA = "0x150BF48")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x150BF98", Offset = "0x150BF98", VA = "0x150BF98")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x150C004", Offset = "0x150C004", VA = "0x150C004")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x150C0F8", Offset = "0x150C0F8", VA = "0x150C0F8")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x150C1D0", Offset = "0x150C1D0", VA = "0x150C1D0")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x150C230", Offset = "0x150C230", VA = "0x150C230")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x2000292")]
	public static class QuaTools
	{
		[Token(Token = "0x600148A")]
		[Address(RVA = "0x150C260", Offset = "0x150C260", VA = "0x150C260")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x150C3AC", Offset = "0x150C3AC", VA = "0x150C3AC")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x150C4F8", Offset = "0x150C4F8", VA = "0x150C4F8")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x150C60C", Offset = "0x150C60C", VA = "0x150C60C")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x150C720", Offset = "0x150C720", VA = "0x150C720")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x150C8AC", Offset = "0x150C8AC", VA = "0x150C8AC")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x150C97C", Offset = "0x150C97C", VA = "0x150C97C")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x150CAD0", Offset = "0x150CAD0", VA = "0x150CAD0")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x150CD54", Offset = "0x150CD54", VA = "0x150CD54")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x150CF68", Offset = "0x150CF68", VA = "0x150CF68")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x150D0E8", Offset = "0x150D0E8", VA = "0x150D0E8")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x150D258", Offset = "0x150D258", VA = "0x150D258")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x150D368", Offset = "0x150D368", VA = "0x150D368")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000293")]
	public abstract class Singleton<T> : UnityEngine.MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x17000254")]
		public static T instance
		{
			[Token(Token = "0x6001497")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001498")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001499")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class SolverManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87ACC", Offset = "0xD87ACC")]
		public bool fixTransforms;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x17000255")]
		private bool animatePhysics
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x150D4FC", Offset = "0x150D4FC", VA = "0x150D4FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000256")]
		private bool isAnimated
		{
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0x150D7F8", Offset = "0x150D7F8", VA = "0x150D7F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x150D3C4", Offset = "0x150D3C4", VA = "0x150D3C4")]
		public void Disable()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x150D45C", Offset = "0x150D45C", VA = "0x150D45C", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x150D460", Offset = "0x150D460", VA = "0x150D460", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x150D464", Offset = "0x150D464", VA = "0x150D464", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x150D468", Offset = "0x150D468", VA = "0x150D468")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x150D4F8", Offset = "0x150D4F8", VA = "0x150D4F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x150D4A0", Offset = "0x150D4A0", VA = "0x150D4A0")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x150D7AC", Offset = "0x150D7AC", VA = "0x150D7AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x150D5EC", Offset = "0x150D5EC", VA = "0x150D5EC")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x150D8B4", Offset = "0x150D8B4", VA = "0x150D8B4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x150D910", Offset = "0x150D910", VA = "0x150D910")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x150D96C", Offset = "0x150D96C", VA = "0x150D96C")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x150D9B4", Offset = "0x150D9B4", VA = "0x150D9B4")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class TriggerEventBroadcaster : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x150DA34", Offset = "0x150DA34", VA = "0x150DA34")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x150DAEC", Offset = "0x150DAEC", VA = "0x150DAEC")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x150DBA4", Offset = "0x150DBA4", VA = "0x150DBA4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x150DC5C", Offset = "0x150DC5C", VA = "0x150DC5C")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public static class V3Tools
	{
		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x150DC64", Offset = "0x150DC64", VA = "0x150DC64")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x150DD5C", Offset = "0x150DD5C", VA = "0x150DD5C")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x150DE54", Offset = "0x150DE54", VA = "0x150DE54")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x150DF4C", Offset = "0x150DF4C", VA = "0x150DF4C")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x150E04C", Offset = "0x150E04C", VA = "0x150E04C")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x150E270", Offset = "0x150E270", VA = "0x150E270")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x150E4AC", Offset = "0x150E4AC", VA = "0x150E4AC")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x150E6FC", Offset = "0x150E6FC", VA = "0x150E6FC")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x150E8FC", Offset = "0x150E8FC", VA = "0x150E8FC")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x150EAD8", Offset = "0x150EAD8", VA = "0x150EAD8")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x150EC0C", Offset = "0x150EC0C", VA = "0x150EC0C")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000297")]
	public static class Warning
	{
		[Token(Token = "0x20004F7")]
		public delegate void Logger(string message);

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x150ED64", Offset = "0x150ED64", VA = "0x150ED64")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x150F190", Offset = "0x150F190", VA = "0x150F190")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E464", Offset = "0xD7E464")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E464", Offset = "0xD7E464")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x1AD7F58", Offset = "0x1AD7F58", VA = "0x1AD7F58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93684", Offset = "0xD93684")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x1AD7FA4", Offset = "0x1AD7FA4", VA = "0x1AD7FA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD936BC", Offset = "0xD936BC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x1AD7FF0", Offset = "0x1AD7FF0", VA = "0x1AD7FF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD936F4", Offset = "0xD936F4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x1AD803C", Offset = "0x1AD803C", VA = "0x1AD803C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9372C", Offset = "0xD9372C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x1AD8088", Offset = "0x1AD8088", VA = "0x1AD8088")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x1AD8124", Offset = "0x1AD8124", VA = "0x1AD8124")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x1AD8144", Offset = "0x1AD8144", VA = "0x1AD8144")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x1AD8174", Offset = "0x1AD8174", VA = "0x1AD8174")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x1AD81A4", Offset = "0x1AD81A4", VA = "0x1AD81A4")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x1AD81E4", Offset = "0x1AD81E4", VA = "0x1AD81E4")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x1AD8228", Offset = "0x1AD8228", VA = "0x1AD8228")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x1AD824C", Offset = "0x1AD824C", VA = "0x1AD824C")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x1AD8270", Offset = "0x1AD8270", VA = "0x1AD8270")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x1AD8298", Offset = "0x1AD8298", VA = "0x1AD8298")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x1AD82C4", Offset = "0x1AD82C4", VA = "0x1AD82C4")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x1AD82F0", Offset = "0x1AD82F0", VA = "0x1AD82F0")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1AD80A8", Offset = "0x1AD80A8", VA = "0x1AD80A8")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x1AD8318", Offset = "0x1AD8318", VA = "0x1AD8318")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x1AD8324", Offset = "0x1AD8324", VA = "0x1AD8324")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x1AD8330", Offset = "0x1AD8330", VA = "0x1AD8330")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x1AD8618", Offset = "0x1AD8618", VA = "0x1AD8618", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x1AD86C0", Offset = "0x1AD86C0", VA = "0x1AD86C0", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x1AD8A08", Offset = "0x1AD8A08", VA = "0x1AD8A08", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x1AD8EF0", Offset = "0x1AD8EF0", VA = "0x1AD8EF0")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x1AD8F24", Offset = "0x1AD8F24", VA = "0x1AD8F24")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000299")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x17000257")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0x1AD84D0", Offset = "0x1AD84D0", VA = "0x1AD84D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x1AD90F0", Offset = "0x1AD90F0", VA = "0x1AD90F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x1AD8890", Offset = "0x1AD8890", VA = "0x1AD8890")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x1AD8FA8", Offset = "0x1AD8FA8", VA = "0x1AD8FA8")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public abstract class Constraint
	{
		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x17000259")]
		public bool isValid
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x1AD96F0", Offset = "0x1AD96F0", VA = "0x1AD96F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014D9")]
		public abstract void UpdateConstraint();

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1AD9760", Offset = "0x1AD9760", VA = "0x1AD9760")]
		protected Constraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029B")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 position;

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x1AD9768", Offset = "0x1AD9768", VA = "0x1AD9768", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1AD9874", Offset = "0x1AD9874", VA = "0x1AD9874")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1AD987C", Offset = "0x1AD987C", VA = "0x1AD987C")]
		public ConstraintPosition(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastLocalPosition;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x1700025A")]
		private bool positionChanged
		{
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0x1AD9A44", Offset = "0x1AD9A44", VA = "0x1AD9A44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1AD98A8", Offset = "0x1AD98A8", VA = "0x1AD98A8", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1AD9B00", Offset = "0x1AD9B00", VA = "0x1AD9B00")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1AD9B08", Offset = "0x1AD9B08", VA = "0x1AD9B08")]
		public ConstraintPositionOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x1AD9B34", Offset = "0x1AD9B34", VA = "0x1AD9B34", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x1AD9C5C", Offset = "0x1AD9C5C", VA = "0x1AD9C5C")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1AD9C64", Offset = "0x1AD9C64", VA = "0x1AD9C64")]
		public ConstraintRotation(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x1700025B")]
		private bool rotationChanged
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x1AD9E30", Offset = "0x1AD9E30", VA = "0x1AD9E30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1AD9C90", Offset = "0x1AD9C90", VA = "0x1AD9C90", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1AD9F00", Offset = "0x1AD9F00", VA = "0x1AD9F00")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x1AD9F08", Offset = "0x1AD9F08", VA = "0x1AD9F08")]
		public ConstraintRotationOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029F")]
	public class Constraints
	{
		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87B04", Offset = "0xD87B04")]
		public float positionWeight;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87B1C", Offset = "0xD87B1C")]
		public float rotationWeight;

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1AD9F34", Offset = "0x1AD9F34", VA = "0x1AD9F34")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1AD89B4", Offset = "0x1AD89B4", VA = "0x1AD89B4")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1AD8B90", Offset = "0x1AD8B90", VA = "0x1AD8B90")]
		public void Update()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x1AD92BC", Offset = "0x1AD92BC", VA = "0x1AD92BC")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A0")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x20004F8")]
		public enum DOF
		{
			[Token(Token = "0x4002020")]
			One,
			[Token(Token = "0x4002021")]
			Three
		}

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87B34", Offset = "0xD87B34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87B34", Offset = "0xD87B34")]
		public float weight;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87B88", Offset = "0xD87B88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87B88", Offset = "0xD87B88")]
		public float rotationWeight;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87BDC", Offset = "0xD87BDC")]
		public DOF rotationDOF;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87C14", Offset = "0xD87C14")]
		public bool fixBone1Twist;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87C4C", Offset = "0xD87C4C")]
		public Transform bone1;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87C84", Offset = "0xD87C84")]
		public Transform bone2;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87CBC", Offset = "0xD87CBC")]
		public Transform bone3;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87CF4", Offset = "0xD87CF4")]
		public Transform tip;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87D2C", Offset = "0xD87D2C")]
		public Transform target;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD87D64", Offset = "0xD87D64")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 bone1TwistAxis;

		[Token(Token = "0x1700025C")]
		public bool initiated
		{
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x1AE126C", Offset = "0x1AE126C", VA = "0x1AE126C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93764", Offset = "0xD93764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x1AE1274", Offset = "0x1AE1274", VA = "0x1AE1274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93774", Offset = "0xD93774")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x1AE1280", Offset = "0x1AE1280", VA = "0x1AE1280")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0x1AE12A0", Offset = "0x1AE12A0", VA = "0x1AE12A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x1AE12C0", Offset = "0x1AE12C0", VA = "0x1AE12C0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x1AE12E0", Offset = "0x1AE12E0", VA = "0x1AE12E0")]
			set
			{
			}
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x1AE1300", Offset = "0x1AE1300", VA = "0x1AE1300")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x1AE1400", Offset = "0x1AE1400", VA = "0x1AE1400")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x1AE1994", Offset = "0x1AE1994", VA = "0x1AE1994")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x1AE1A70", Offset = "0x1AE1A70", VA = "0x1AE1A70")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x1AE1B38", Offset = "0x1AE1B38", VA = "0x1AE1B38")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x1AE227C", Offset = "0x1AE227C", VA = "0x1AE227C")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87D74", Offset = "0xD87D74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87D74", Offset = "0xD87D74")]
		public float weight;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD87DC8", Offset = "0xD87DC8")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x1700025F")]
		public bool initiated
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x1AE228C", Offset = "0x1AE228C", VA = "0x1AE228C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93784", Offset = "0xD93784")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x1AE2294", Offset = "0x1AE2294", VA = "0x1AE2294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93794", Offset = "0xD93794")]
			private set
			{
			}
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x1AE22A0", Offset = "0x1AE22A0", VA = "0x1AE22A0")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x1AE2328", Offset = "0x1AE2328", VA = "0x1AE2328")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD937A4", Offset = "0xD937A4")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x1AE264C", Offset = "0x1AE264C", VA = "0x1AE264C")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x1AE27BC", Offset = "0x1AE27BC", VA = "0x1AE27BC")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x1AE2544", Offset = "0x1AE2544", VA = "0x1AE2544")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1AE2924", Offset = "0x1AE2924", VA = "0x1AE2924", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x1AE29E4", Offset = "0x1AE29E4", VA = "0x1AE29E4")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x1AE2A5C", Offset = "0x1AE2A5C", VA = "0x1AE2A5C")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x1AE2AD0", Offset = "0x1AE2AD0", VA = "0x1AE2AD0")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x1AE2B38", Offset = "0x1AE2B38", VA = "0x1AE2B38", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x1AE2B3C", Offset = "0x1AE2B3C", VA = "0x1AE2B3C", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1AE2B50", Offset = "0x1AE2B50", VA = "0x1AE2B50")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public abstract class Grounder : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20004F9")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87DD8", Offset = "0xD87DD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD87DD8", Offset = "0xD87DD8")]
		public float weight;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87E2C", Offset = "0xD87E2C")]
		public Grounding solver;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD87E64", Offset = "0xD87E64")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000260")]
		public bool initiated
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0x1AE3B84", Offset = "0x1AE3B84", VA = "0x1AE3B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD937DC", Offset = "0xD937DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001509")]
			[Address(RVA = "0x1AE3B8C", Offset = "0x1AE3B8C", VA = "0x1AE3B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD937EC", Offset = "0xD937EC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001507")]
		public abstract void ResetPosition();

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x1AE3B98", Offset = "0x1AE3B98", VA = "0x1AE3B98")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x1AE3E6C", Offset = "0x1AE3E6C", VA = "0x1AE3E6C")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x1AE3CDC", Offset = "0x1AE3CDC", VA = "0x1AE3CDC")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x1AE3EA0", Offset = "0x1AE3EA0", VA = "0x1AE3EA0")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600150E")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x600150F")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1AE40A8", Offset = "0x1AE40A8", VA = "0x1AE40A8")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E4C4", Offset = "0xD7E4C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E4C4", Offset = "0xD7E4C4")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87E74", Offset = "0xD87E74")]
		public BipedIK ik;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87EAC", Offset = "0xD87EAC")]
		public float spineBend;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87EE4", Offset = "0xD87EE4")]
		public float spineSpeed;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1AE436C", Offset = "0x1AE436C", VA = "0x1AE436C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD937FC", Offset = "0xD937FC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x1AE43B8", Offset = "0x1AE43B8", VA = "0x1AE43B8", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93834", Offset = "0xD93834")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x1AE4404", Offset = "0x1AE4404", VA = "0x1AE4404", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x1AE4488", Offset = "0x1AE4488", VA = "0x1AE4488")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1AE4538", Offset = "0x1AE4538", VA = "0x1AE4538")]
		private void Update()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1AE45EC", Offset = "0x1AE45EC", VA = "0x1AE45EC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1AE48A4", Offset = "0x1AE48A4", VA = "0x1AE48A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x1AE48F8", Offset = "0x1AE48F8", VA = "0x1AE48F8")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x1AE4E4C", Offset = "0x1AE4E4C", VA = "0x1AE4E4C")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x1AE4F20", Offset = "0x1AE4F20", VA = "0x1AE4F20")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1AE50B0", Offset = "0x1AE50B0", VA = "0x1AE50B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x1AE5220", Offset = "0x1AE5220", VA = "0x1AE5220")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E524", Offset = "0xD7E524")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E524", Offset = "0xD7E524")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x20004FA")]
		public class SpineEffector
		{
			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D284", Offset = "0xD8D284")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D2BC", Offset = "0xD8D2BC")]
			public float horizontalWeight;

			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D2F4", Offset = "0xD8D2F4")]
			public float verticalWeight;

			[Token(Token = "0x60020E6")]
			[Address(RVA = "0x1AE6094", Offset = "0x1AE6094", VA = "0x1AE6094")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x60020E7")]
			[Address(RVA = "0x1AE60A4", Offset = "0x1AE60A4", VA = "0x1AE60A4")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87F1C", Offset = "0xD87F1C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87F54", Offset = "0xD87F54")]
		public float spineBend;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87F8C", Offset = "0xD87F8C")]
		public float spineSpeed;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x1AE52A0", Offset = "0x1AE52A0", VA = "0x1AE52A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9386C", Offset = "0xD9386C")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1AE52EC", Offset = "0x1AE52EC", VA = "0x1AE52EC", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD938A4", Offset = "0xD938A4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x1AE5338", Offset = "0x1AE5338", VA = "0x1AE5338", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD938DC", Offset = "0xD938DC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x1AE5384", Offset = "0x1AE5384", VA = "0x1AE5384", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x1AE5408", Offset = "0x1AE5408", VA = "0x1AE5408")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1AE54A0", Offset = "0x1AE54A0", VA = "0x1AE54A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x1AE5760", Offset = "0x1AE5760", VA = "0x1AE5760")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1AE576C", Offset = "0x1AE576C", VA = "0x1AE576C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1AE555C", Offset = "0x1AE555C", VA = "0x1AE555C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1AE5778", Offset = "0x1AE5778", VA = "0x1AE5778")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1AE5C1C", Offset = "0x1AE5C1C", VA = "0x1AE5C1C")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1AE5DDC", Offset = "0x1AE5DDC", VA = "0x1AE5DDC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1AE5F14", Offset = "0x1AE5F14", VA = "0x1AE5F14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1AE6014", Offset = "0x1AE6014", VA = "0x1AE6014")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E584", Offset = "0xD7E584")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E584", Offset = "0xD7E584")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87FC4", Offset = "0xD87FC4")]
		public Transform pelvis;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD87FFC", Offset = "0xD87FFC")]
		public Transform characterRoot;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88034", Offset = "0xD88034")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88034", Offset = "0xD88034")]
		public float rootRotationWeight;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88088", Offset = "0xD88088")]
		public float rootRotationSpeed;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD880C0", Offset = "0xD880C0")]
		public float maxRootRotationAngle;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1AE60EC", Offset = "0x1AE60EC", VA = "0x1AE60EC", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93914", Offset = "0xD93914")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1AE6138", Offset = "0x1AE6138", VA = "0x1AE6138", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9394C", Offset = "0xD9394C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x1AE6184", Offset = "0x1AE6184", VA = "0x1AE6184", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1AE61A0", Offset = "0x1AE61A0", VA = "0x1AE61A0")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1AE6390", Offset = "0x1AE6390", VA = "0x1AE6390")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1AE6490", Offset = "0x1AE6490", VA = "0x1AE6490")]
		private void Update()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x1AE69C4", Offset = "0x1AE69C4", VA = "0x1AE69C4")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1AE6DAC", Offset = "0x1AE6DAC", VA = "0x1AE6DAC")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1AE7020", Offset = "0x1AE7020", VA = "0x1AE7020")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x1AE7340", Offset = "0x1AE7340", VA = "0x1AE7340")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1AE74DC", Offset = "0x1AE74DC", VA = "0x1AE74DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1AE76A4", Offset = "0x1AE76A4", VA = "0x1AE76A4")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E5E4", Offset = "0xD7E5E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E5E4", Offset = "0xD7E5E4")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x20004FB")]
		public struct Foot
		{
			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x60020E8")]
			[Address(RVA = "0x2162118", Offset = "0x2162118", VA = "0x2162118")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD880F8", Offset = "0xD880F8")]
		public Grounding forelegSolver;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88130", Offset = "0xD88130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88130", Offset = "0xD88130")]
		public float rootRotationWeight;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88184", Offset = "0xD88184")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88184", Offset = "0xD88184")]
		public float minRootRotation;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD881DC", Offset = "0xD881DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD881DC", Offset = "0xD881DC")]
		public float maxRootRotation;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88234", Offset = "0xD88234")]
		public float rootRotationSpeed;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8826C", Offset = "0xD8826C")]
		public float maxLegOffset;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD882A4", Offset = "0xD882A4")]
		public float maxForeLegOffset;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD882DC", Offset = "0xD882DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD882DC", Offset = "0xD882DC")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88330", Offset = "0xD88330")]
		public Transform characterRoot;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88368", Offset = "0xD88368")]
		public Transform pelvis;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD883A0", Offset = "0xD883A0")]
		public Transform lastSpineBone;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD883D8", Offset = "0xD883D8")]
		public Transform head;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1AE7724", Offset = "0x1AE7724", VA = "0x1AE7724", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93984", Offset = "0xD93984")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1AE7770", Offset = "0x1AE7770", VA = "0x1AE7770", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD939BC", Offset = "0xD939BC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1AE77BC", Offset = "0x1AE77BC", VA = "0x1AE77BC", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1AE77F8", Offset = "0x1AE77F8", VA = "0x1AE77F8")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1AE7928", Offset = "0x1AE7928", VA = "0x1AE7928")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1AE7AE8", Offset = "0x1AE7AE8", VA = "0x1AE7AE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1AE7B50", Offset = "0x1AE7B50", VA = "0x1AE7B50")]
		private void Update()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1AE7C08", Offset = "0x1AE7C08", VA = "0x1AE7C08")]
		private void Initiate()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x1AE7F10", Offset = "0x1AE7F10", VA = "0x1AE7F10")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x1AE8234", Offset = "0x1AE8234", VA = "0x1AE8234")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x1AE8380", Offset = "0x1AE8380", VA = "0x1AE8380")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1AE8824", Offset = "0x1AE8824", VA = "0x1AE8824")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1AE901C", Offset = "0x1AE901C", VA = "0x1AE901C")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x1AE92DC", Offset = "0x1AE92DC", VA = "0x1AE92DC")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1AE943C", Offset = "0x1AE943C", VA = "0x1AE943C")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1AE9718", Offset = "0x1AE9718", VA = "0x1AE9718")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x1AE9750", Offset = "0x1AE9750", VA = "0x1AE9750")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x1AE9910", Offset = "0x1AE9910", VA = "0x1AE9910")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E644", Offset = "0xD7E644")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E644", Offset = "0xD7E644")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88420", Offset = "0xD88420")]
		public VRIK ik;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x2162158", Offset = "0x2162158", VA = "0x2162158")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD939F4", Offset = "0xD939F4")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x21621A4", Offset = "0x21621A4", VA = "0x21621A4", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93A2C", Offset = "0xD93A2C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x21621F0", Offset = "0x21621F0", VA = "0x21621F0", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93A64", Offset = "0xD93A64")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x216223C", Offset = "0x216223C", VA = "0x216223C", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x21622D8", Offset = "0x21622D8", VA = "0x21622D8")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x2162370", Offset = "0x2162370", VA = "0x2162370")]
		private void Update()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x2162424", Offset = "0x2162424", VA = "0x2162424")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x2162884", Offset = "0x2162884", VA = "0x2162884")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x2162D88", Offset = "0x2162D88", VA = "0x2162D88")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x2162E90", Offset = "0x2162E90", VA = "0x2162E90")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x2163090", Offset = "0x2163090", VA = "0x2163090")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x21631C8", Offset = "0x21631C8", VA = "0x21631C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x2163318", Offset = "0x2163318", VA = "0x2163318")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A8")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x20004FC")]
		public enum Quality
		{
			[Token(Token = "0x400202A")]
			Fastest,
			[Token(Token = "0x400202B")]
			Simple,
			[Token(Token = "0x400202C")]
			Best
		}

		[Token(Token = "0x20004FD")]
		public class Leg
		{
			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D32C", Offset = "0xD8D32C")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D33C", Offset = "0xD8D33C")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D34C", Offset = "0xD8D34C")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D35C", Offset = "0xD8D35C")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D36C", Offset = "0xD8D36C")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D37C", Offset = "0xD8D37C")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D38C", Offset = "0xD8D38C")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D39C", Offset = "0xD8D39C")]
			private RaycastHit <heelHit>k__BackingField;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D3AC", Offset = "0xD8D3AC")]
			private RaycastHit <capsuleHit>k__BackingField;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Grounding grounding;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float lastTime;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private float deltaTime;

			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Vector3 lastPosition;

			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private Quaternion toHitNormal;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Quaternion r;

			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 up;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private bool doOverrideFootPosition;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Vector3 overrideFootPosition;

			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 transformPosition;

			[Token(Token = "0x170003F8")]
			public bool isGrounded
			{
				[Token(Token = "0x60020E9")]
				[Address(RVA = "0x2164E88", Offset = "0x2164E88", VA = "0x2164E88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9734C", Offset = "0xD9734C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60020EA")]
				[Address(RVA = "0x2164E90", Offset = "0x2164E90", VA = "0x2164E90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9735C", Offset = "0xD9735C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003F9")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x60020EB")]
				[Address(RVA = "0x2164E9C", Offset = "0x2164E9C", VA = "0x2164E9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9736C", Offset = "0xD9736C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60020EC")]
				[Address(RVA = "0x2164EA8", Offset = "0x2164EA8", VA = "0x2164EA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9737C", Offset = "0xD9737C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003FA")]
			public bool initiated
			{
				[Token(Token = "0x60020ED")]
				[Address(RVA = "0x2164EB4", Offset = "0x2164EB4", VA = "0x2164EB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9738C", Offset = "0xD9738C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60020EE")]
				[Address(RVA = "0x2164EBC", Offset = "0x2164EBC", VA = "0x2164EBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9739C", Offset = "0xD9739C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003FB")]
			public float heightFromGround
			{
				[Token(Token = "0x60020EF")]
				[Address(RVA = "0x2164EC8", Offset = "0x2164EC8", VA = "0x2164EC8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD973AC", Offset = "0xD973AC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60020F0")]
				[Address(RVA = "0x2164ED0", Offset = "0x2164ED0", VA = "0x2164ED0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD973BC", Offset = "0xD973BC")]
				private set
				{
				}
			}

			[Token(Token = "0x170003FC")]
			public Vector3 velocity
			{
				[Token(Token = "0x60020F1")]
				[Address(RVA = "0x2164ED8", Offset = "0x2164ED8", VA = "0x2164ED8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD973CC", Offset = "0xD973CC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60020F2")]
				[Address(RVA = "0x2164EE4", Offset = "0x2164EE4", VA = "0x2164EE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD973DC", Offset = "0xD973DC")]
				private set
				{
				}
			}

			[Token(Token = "0x170003FD")]
			public Transform transform
			{
				[Token(Token = "0x60020F3")]
				[Address(RVA = "0x2164EF0", Offset = "0x2164EF0", VA = "0x2164EF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD973EC", Offset = "0xD973EC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60020F4")]
				[Address(RVA = "0x2164EF8", Offset = "0x2164EF8", VA = "0x2164EF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD973FC", Offset = "0xD973FC")]
				private set
				{
				}
			}

			[Token(Token = "0x170003FE")]
			public float IKOffset
			{
				[Token(Token = "0x60020F5")]
				[Address(RVA = "0x2164F00", Offset = "0x2164F00", VA = "0x2164F00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9740C", Offset = "0xD9740C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60020F6")]
				[Address(RVA = "0x2164F08", Offset = "0x2164F08", VA = "0x2164F08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9741C", Offset = "0xD9741C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003FF")]
			public RaycastHit heelHit
			{
				[Token(Token = "0x60020F7")]
				[Address(RVA = "0x2164F10", Offset = "0x2164F10", VA = "0x2164F10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9742C", Offset = "0xD9742C")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x60020F8")]
				[Address(RVA = "0x2164F28", Offset = "0x2164F28", VA = "0x2164F28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9743C", Offset = "0xD9743C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000400")]
			public RaycastHit capsuleHit
			{
				[Token(Token = "0x60020F9")]
				[Address(RVA = "0x2164F48", Offset = "0x2164F48", VA = "0x2164F48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9744C", Offset = "0xD9744C")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x60020FA")]
				[Address(RVA = "0x2164F60", Offset = "0x2164F60", VA = "0x2164F60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9745C", Offset = "0xD9745C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000401")]
			public RaycastHit GetHitPoint
			{
				[Token(Token = "0x60020FB")]
				[Address(RVA = "0x2164F80", Offset = "0x2164F80", VA = "0x2164F80")]
				get
				{
					return default(RaycastHit);
				}
			}

			[Token(Token = "0x17000402")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x6002101")]
				[Address(RVA = "0x2165D3C", Offset = "0x2165D3C", VA = "0x2165D3C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000403")]
			private float rootYOffset
			{
				[Token(Token = "0x600210A")]
				[Address(RVA = "0x2166014", Offset = "0x2166014", VA = "0x2166014")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x2164FC8", Offset = "0x2164FC8", VA = "0x2164FC8")]
			public void SetFootPosition(Vector3 position)
			{
			}

			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x2163A40", Offset = "0x2163A40", VA = "0x2163A40")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x2164FDC", Offset = "0x2164FDC", VA = "0x2164FDC")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x60020FF")]
			[Address(RVA = "0x2164954", Offset = "0x2164954", VA = "0x2164954")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002100")]
			[Address(RVA = "0x2163B4C", Offset = "0x2163B4C", VA = "0x2163B4C")]
			public void Process()
			{
			}

			[Token(Token = "0x6002102")]
			[Address(RVA = "0x21657B4", Offset = "0x21657B4", VA = "0x21657B4")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6002103")]
			[Address(RVA = "0x2165028", Offset = "0x2165028", VA = "0x2165028")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6002104")]
			[Address(RVA = "0x2165EBC", Offset = "0x2165EBC", VA = "0x2165EBC")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002105")]
			[Address(RVA = "0x2165460", Offset = "0x2165460", VA = "0x2165460")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x6002106")]
			[Address(RVA = "0x2165568", Offset = "0x2165568", VA = "0x2165568")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x6002107")]
			[Address(RVA = "0x2165FB8", Offset = "0x2165FB8", VA = "0x2165FB8")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x6002108")]
			[Address(RVA = "0x2165DC8", Offset = "0x2165DC8", VA = "0x2165DC8")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x6002109")]
			[Address(RVA = "0x216613C", Offset = "0x216613C", VA = "0x216613C")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600210B")]
			[Address(RVA = "0x2163990", Offset = "0x2163990", VA = "0x2163990")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x20004FE")]
		public class Pelvis
		{
			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D3BC", Offset = "0xD8D3BC")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D3CC", Offset = "0xD8D3CC")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x17000404")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x600210C")]
				[Address(RVA = "0x216622C", Offset = "0x216622C", VA = "0x216622C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9746C", Offset = "0xD9746C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600210D")]
				[Address(RVA = "0x2166238", Offset = "0x2166238", VA = "0x2166238")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9747C", Offset = "0xD9747C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000405")]
			public float heightOffset
			{
				[Token(Token = "0x600210E")]
				[Address(RVA = "0x2166244", Offset = "0x2166244", VA = "0x2166244")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9748C", Offset = "0xD9748C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600210F")]
				[Address(RVA = "0x216624C", Offset = "0x216624C", VA = "0x216624C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9749C", Offset = "0xD9749C")]
				private set
				{
				}
			}

			[Token(Token = "0x6002110")]
			[Address(RVA = "0x2163B24", Offset = "0x2163B24", VA = "0x2163B24")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x6002111")]
			[Address(RVA = "0x21648A4", Offset = "0x21648A4", VA = "0x21648A4")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002112")]
			[Address(RVA = "0x2166254", Offset = "0x2166254", VA = "0x2166254")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6002113")]
			[Address(RVA = "0x2164420", Offset = "0x2164420", VA = "0x2164420")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x6002114")]
			[Address(RVA = "0x2163A38", Offset = "0x2163A38", VA = "0x2163A38")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88458", Offset = "0xD88458")]
		public LayerMask layers;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88490", Offset = "0xD88490")]
		public float maxStep;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD884C8", Offset = "0xD884C8")]
		public float heightOffset;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88500", Offset = "0xD88500")]
		public float footSpeed;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88538", Offset = "0xD88538")]
		public float footRadius;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88570", Offset = "0xD88570")]
		[HideInInspector]
		public float footCenterOffset;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD885BC", Offset = "0xD885BC")]
		public float prediction;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD885F4", Offset = "0xD885F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD885F4", Offset = "0xD885F4")]
		public float footRotationWeight;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88648", Offset = "0xD88648")]
		public float footRotationSpeed;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88680", Offset = "0xD88680")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88680", Offset = "0xD88680")]
		public float maxFootRotationAngle;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD886D8", Offset = "0xD886D8")]
		public bool rotateSolver;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88710", Offset = "0xD88710")]
		public float pelvisSpeed;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88748", Offset = "0xD88748")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88748", Offset = "0xD88748")]
		public float pelvisDamper;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8879C", Offset = "0xD8879C")]
		public float lowerPelvisWeight;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD887D4", Offset = "0xD887D4")]
		public float liftPelvisWeight;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8880C", Offset = "0xD8880C")]
		public float rootSphereCastRadius;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88844", Offset = "0xD88844")]
		public bool overstepFallsDown;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8887C", Offset = "0xD8887C")]
		public Quality quality;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD888B4", Offset = "0xD888B4")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD888C4", Offset = "0xD888C4")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD888D4", Offset = "0xD888D4")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD888E4", Offset = "0xD888E4")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD888F4", Offset = "0xD888F4")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initiated;

		[Token(Token = "0x17000261")]
		public Leg[] legs
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x2163378", Offset = "0x2163378", VA = "0x2163378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93A9C", Offset = "0xD93A9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x2163380", Offset = "0x2163380", VA = "0x2163380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93AAC", Offset = "0xD93AAC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public Pelvis pelvis
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x2163388", Offset = "0x2163388", VA = "0x2163388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93ABC", Offset = "0xD93ABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001559")]
			[Address(RVA = "0x2163390", Offset = "0x2163390", VA = "0x2163390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93ACC", Offset = "0xD93ACC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public bool isGrounded
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x2163398", Offset = "0x2163398", VA = "0x2163398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93ADC", Offset = "0xD93ADC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x21633A0", Offset = "0x21633A0", VA = "0x21633A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93AEC", Offset = "0xD93AEC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public Transform root
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0x21633AC", Offset = "0x21633AC", VA = "0x21633AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93AFC", Offset = "0xD93AFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600155D")]
			[Address(RVA = "0x21633B4", Offset = "0x21633B4", VA = "0x21633B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93B0C", Offset = "0xD93B0C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0x21633BC", Offset = "0x21633BC", VA = "0x21633BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93B1C", Offset = "0xD93B1C")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x21633D4", Offset = "0x21633D4", VA = "0x21633D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD93B2C", Offset = "0xD93B2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public bool rootGrounded
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x21633F4", Offset = "0x21633F4", VA = "0x21633F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000267")]
		public Vector3 up
		{
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x2163828", Offset = "0x2163828", VA = "0x2163828")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000268")]
		private bool useRootRotation
		{
			[Token(Token = "0x600156B")]
			[Address(RVA = "0x2164A08", Offset = "0x2164A08", VA = "0x2164A08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x2163448", Offset = "0x2163448", VA = "0x2163448")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x21638B4", Offset = "0x21638B4", VA = "0x21638B4")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x2162624", Offset = "0x2162624", VA = "0x2162624")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x2162B20", Offset = "0x2162B20", VA = "0x2162B20")]
		public void Update()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x216468C", Offset = "0x216468C", VA = "0x216468C")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x2162254", Offset = "0x2162254", VA = "0x2162254")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x2163B34", Offset = "0x2163B34", VA = "0x2163B34")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x2164AD8", Offset = "0x2164AD8", VA = "0x2164AD8")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x2164C40", Offset = "0x2164C40", VA = "0x2164C40")]
		public Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x2164D44", Offset = "0x2164D44", VA = "0x2164D44")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x2164E34", Offset = "0x2164E34", VA = "0x2164E34")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E6A4", Offset = "0xD7E6A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E6A4", Offset = "0xD7E6A4")]
	public class AimIK : IK
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1AD72CC", Offset = "0x1AD72CC", VA = "0x1AD72CC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93B3C", Offset = "0xD93B3C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x1AD7318", Offset = "0x1AD7318", VA = "0x1AD7318", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93B74", Offset = "0xD93B74")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x1AD7364", Offset = "0x1AD7364", VA = "0x1AD7364")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93BAC", Offset = "0xD93BAC")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1AD73B0", Offset = "0x1AD73B0", VA = "0x1AD73B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93BE4", Offset = "0xD93BE4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1AD73FC", Offset = "0x1AD73FC", VA = "0x1AD73FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93C1C", Offset = "0xD93C1C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x1AD7448", Offset = "0x1AD7448", VA = "0x1AD7448", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x1AD7450", Offset = "0x1AD7450", VA = "0x1AD7450")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E704", Offset = "0xD7E704")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E704", Offset = "0xD7E704")]
	public class ArmIK : IK
	{
		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x1AD7DB8", Offset = "0x1AD7DB8", VA = "0x1AD7DB8", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93C54", Offset = "0xD93C54")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x1AD7E04", Offset = "0x1AD7E04", VA = "0x1AD7E04", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93C8C", Offset = "0xD93C8C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x1AD7E50", Offset = "0x1AD7E50", VA = "0x1AD7E50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93CC4", Offset = "0xD93CC4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x1AD7E9C", Offset = "0x1AD7E9C", VA = "0x1AD7E9C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93CFC", Offset = "0xD93CFC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x1AD7EE8", Offset = "0x1AD7EE8", VA = "0x1AD7EE8", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x1AD7EF0", Offset = "0x1AD7EF0", VA = "0x1AD7EF0")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E764", Offset = "0xD7E764")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E764", Offset = "0xD7E764")]
	public class CCDIK : IK
	{
		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x1AD9550", Offset = "0x1AD9550", VA = "0x1AD9550", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93D34", Offset = "0xD93D34")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x1AD959C", Offset = "0x1AD959C", VA = "0x1AD959C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93D6C", Offset = "0xD93D6C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x1AD95E8", Offset = "0x1AD95E8", VA = "0x1AD95E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93DA4", Offset = "0xD93DA4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x1AD9634", Offset = "0x1AD9634", VA = "0x1AD9634")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93DDC", Offset = "0xD93DDC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x1AD9680", Offset = "0x1AD9680", VA = "0x1AD9680", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1AD9688", Offset = "0x1AD9688", VA = "0x1AD9688")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E7C4", Offset = "0xD7E7C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E7C4", Offset = "0xD7E7C4")]
	public class FABRIK : IK
	{
		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x1ADA110", Offset = "0x1ADA110", VA = "0x1ADA110", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93E14", Offset = "0xD93E14")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1ADA15C", Offset = "0x1ADA15C", VA = "0x1ADA15C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93E4C", Offset = "0xD93E4C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x1ADA1A8", Offset = "0x1ADA1A8", VA = "0x1ADA1A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93E84", Offset = "0xD93E84")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1ADA1F4", Offset = "0x1ADA1F4", VA = "0x1ADA1F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93EBC", Offset = "0xD93EBC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x1ADA240", Offset = "0x1ADA240", VA = "0x1ADA240", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x1ADA248", Offset = "0x1ADA248", VA = "0x1ADA248")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E824", Offset = "0xD7E824")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E824", Offset = "0xD7E824")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x1ADA8C8", Offset = "0x1ADA8C8", VA = "0x1ADA8C8", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93EF4", Offset = "0xD93EF4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x1ADA914", Offset = "0x1ADA914", VA = "0x1ADA914", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93F2C", Offset = "0xD93F2C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x1ADA960", Offset = "0x1ADA960", VA = "0x1ADA960")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93F64", Offset = "0xD93F64")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1ADA9AC", Offset = "0x1ADA9AC", VA = "0x1ADA9AC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93F9C", Offset = "0xD93F9C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x1ADA9F8", Offset = "0x1ADA9F8", VA = "0x1ADA9F8", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x1ADAA00", Offset = "0x1ADAA00", VA = "0x1ADAA00")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E884", Offset = "0xD7E884")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E884", Offset = "0xD7E884")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1AE2BB8", Offset = "0x1AE2BB8", VA = "0x1AE2BB8", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD93FD4", Offset = "0xD93FD4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x1AE2C04", Offset = "0x1AE2C04", VA = "0x1AE2C04", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9400C", Offset = "0xD9400C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x1AE2C50", Offset = "0x1AE2C50", VA = "0x1AE2C50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94044", Offset = "0xD94044")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x1AE2C9C", Offset = "0x1AE2C9C", VA = "0x1AE2C9C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9407C", Offset = "0xD9407C")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x1AE2CE8", Offset = "0x1AE2CE8", VA = "0x1AE2CE8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD940B4", Offset = "0xD940B4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x1AE2D34", Offset = "0x1AE2D34", VA = "0x1AE2D34")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD940EC", Offset = "0xD940EC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x1AE2D80", Offset = "0x1AE2D80", VA = "0x1AE2D80")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x1AE2DA4", Offset = "0x1AE2DA4", VA = "0x1AE2DA4", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x1AE2DAC", Offset = "0x1AE2DAC", VA = "0x1AE2DAC")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1AE2F68", Offset = "0x1AE2F68", VA = "0x1AE2F68")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1AE32BC", Offset = "0x1AE32BC", VA = "0x1AE32BC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94124", Offset = "0xD94124")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x1AE32DC", Offset = "0x1AE32DC", VA = "0x1AE32DC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9415C", Offset = "0xD9415C")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x1AE33B8", Offset = "0x1AE33B8", VA = "0x1AE33B8")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x600159A")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x2168FBC", Offset = "0x2168FBC", VA = "0x2168FBC", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x21690A8", Offset = "0x21690A8", VA = "0x21690A8", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x2169264", Offset = "0x2169264", VA = "0x2169264", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x600159E")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x600159F")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x21692C4", Offset = "0x21692C4", VA = "0x21692C4")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class IKExecutionOrder : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88904", Offset = "0xD88904")]
		public IK[] IKComponents;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8893C", Offset = "0xD8893C")]
		public Animator animator;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x17000269")]
		private bool animatePhysics
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x216C258", Offset = "0x216C258", VA = "0x216C258")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x216C2F4", Offset = "0x216C2F4", VA = "0x216C2F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x216C364", Offset = "0x216C364", VA = "0x216C364")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x216C420", Offset = "0x216C420", VA = "0x216C420")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x216C45C", Offset = "0x216C45C", VA = "0x216C45C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x216C398", Offset = "0x216C398", VA = "0x216C398")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x216C4E8", Offset = "0x216C4E8", VA = "0x216C4E8")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E8E4", Offset = "0xD7E8E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E8E4", Offset = "0xD7E8E4")]
	public class LegIK : IK
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x1E4658C", Offset = "0x1E4658C", VA = "0x1E4658C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94194", Offset = "0xD94194")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1E465D8", Offset = "0x1E465D8", VA = "0x1E465D8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD941CC", Offset = "0xD941CC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x1E46624", Offset = "0x1E46624", VA = "0x1E46624")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94204", Offset = "0xD94204")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x1E46670", Offset = "0x1E46670", VA = "0x1E46670")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9423C", Offset = "0xD9423C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x1E466BC", Offset = "0x1E466BC", VA = "0x1E466BC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x1E466C4", Offset = "0x1E466C4", VA = "0x1E466C4")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E944", Offset = "0xD7E944")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E944", Offset = "0xD7E944")]
	public class LimbIK : IK
	{
		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x1E4672C", Offset = "0x1E4672C", VA = "0x1E4672C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94274", Offset = "0xD94274")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x1E46778", Offset = "0x1E46778", VA = "0x1E46778", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD942AC", Offset = "0xD942AC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x1E467C4", Offset = "0x1E467C4", VA = "0x1E467C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD942E4", Offset = "0xD942E4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x1E46810", Offset = "0x1E46810", VA = "0x1E46810")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9431C", Offset = "0xD9431C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x1E4685C", Offset = "0x1E4685C", VA = "0x1E4685C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x1E46864", Offset = "0x1E46864", VA = "0x1E46864")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7E9A4", Offset = "0xD7E9A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7E9A4", Offset = "0xD7E9A4")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x1E47720", Offset = "0x1E47720", VA = "0x1E47720", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94354", Offset = "0xD94354")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x1E4776C", Offset = "0x1E4776C", VA = "0x1E4776C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9438C", Offset = "0xD9438C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x1E477B8", Offset = "0x1E477B8", VA = "0x1E477B8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD943C4", Offset = "0xD943C4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x1E47804", Offset = "0x1E47804", VA = "0x1E47804")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD943FC", Offset = "0xD943FC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x1E47850", Offset = "0x1E47850", VA = "0x1E47850", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x1E47858", Offset = "0x1E47858", VA = "0x1E47858")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7EA04", Offset = "0xD7EA04")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7EA04", Offset = "0xD7EA04")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x1E4FF88", Offset = "0x1E4FF88", VA = "0x1E4FF88", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94434", Offset = "0xD94434")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x1E4FFD4", Offset = "0x1E4FFD4", VA = "0x1E4FFD4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9446C", Offset = "0xD9446C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1E50020", Offset = "0x1E50020", VA = "0x1E50020")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD944A4", Offset = "0xD944A4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x1E5006C", Offset = "0x1E5006C", VA = "0x1E5006C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD944DC", Offset = "0xD944DC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x1E500B8", Offset = "0x1E500B8", VA = "0x1E500B8", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1E500C0", Offset = "0x1E500C0", VA = "0x1E500C0")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7EA64", Offset = "0xD7EA64")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x20004FF")]
		public class References
		{
			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D3DC", Offset = "0xD8D3DC")]
			public Transform chest;

			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D414", Offset = "0xD8D414")]
			public Transform neck;

			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D44C", Offset = "0xD8D44C")]
			public Transform leftShoulder;

			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D484", Offset = "0xD8D484")]
			public Transform rightShoulder;

			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D4BC", Offset = "0xD8D4BC")]
			public Transform leftThigh;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D4F4", Offset = "0xD8D4F4")]
			public Transform leftCalf;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D52C", Offset = "0xD8D52C")]
			public Transform leftFoot;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D564", Offset = "0xD8D564")]
			public Transform leftToes;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D59C", Offset = "0xD8D59C")]
			public Transform rightThigh;

			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D5D4", Offset = "0xD8D5D4")]
			public Transform rightCalf;

			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D60C", Offset = "0xD8D60C")]
			public Transform rightFoot;

			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D644", Offset = "0xD8D644")]
			public Transform rightToes;

			[Token(Token = "0x17000406")]
			public bool isFilled
			{
				[Token(Token = "0x6002116")]
				[Address(RVA = "0x1E515C0", Offset = "0x1E515C0", VA = "0x1E515C0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000407")]
			public bool isEmpty
			{
				[Token(Token = "0x6002117")]
				[Address(RVA = "0x1E51144", Offset = "0x1E51144", VA = "0x1E51144")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002115")]
			[Address(RVA = "0x1E51C44", Offset = "0x1E51C44", VA = "0x1E51C44")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x6002118")]
			[Address(RVA = "0x1E50D30", Offset = "0x1E50D30", VA = "0x1E50D30")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x6002119")]
			[Address(RVA = "0x1E51C3C", Offset = "0x1E51C3C", VA = "0x1E51C3C")]
			public References()
			{
			}
		}

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0xD88974", Offset = "0xD88974")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88974", Offset = "0xD88974")]
		public References references;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD889F0", Offset = "0xD889F0")]
		public IKSolverVR solver;

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1E50C24", Offset = "0x1E50C24", VA = "0x1E50C24", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94514", Offset = "0xD94514")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x1E50C70", Offset = "0x1E50C70", VA = "0x1E50C70", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9454C", Offset = "0xD9454C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x1E50CBC", Offset = "0x1E50CBC", VA = "0x1E50CBC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94584", Offset = "0xD94584")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x1E50D08", Offset = "0x1E50D08", VA = "0x1E50D08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD945BC", Offset = "0xD945BC")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x1E510A0", Offset = "0x1E510A0", VA = "0x1E510A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD945F4", Offset = "0xD945F4")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x1E510C8", Offset = "0x1E510C8", VA = "0x1E510C8", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x1E510D0", Offset = "0x1E510D0", VA = "0x1E510D0", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1E51A3C", Offset = "0x1E51A3C", VA = "0x1E51A3C", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x1E51BB4", Offset = "0x1E51BB4", VA = "0x1E51BB4")]
		public VRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B6")]
	public class FABRIKChain
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88A28", Offset = "0xD88A28")]
		public float pull;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88A40", Offset = "0xD88A40")]
		public float pin;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x1ADA2B0", Offset = "0x1ADA2B0", VA = "0x1ADA2B0")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x1ADA378", Offset = "0x1ADA378", VA = "0x1ADA378")]
		public void Initiate()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x1ADA398", Offset = "0x1ADA398", VA = "0x1ADA398")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x1ADA768", Offset = "0x1ADA768", VA = "0x1ADA768")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x1ADA46C", Offset = "0x1ADA46C", VA = "0x1ADA46C")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x1ADA860", Offset = "0x1ADA860", VA = "0x1ADA860")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class FBBIKArmBending : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x1ADAA68", Offset = "0x1ADAA68", VA = "0x1ADAA68")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1ADAFD0", Offset = "0x1ADAFD0", VA = "0x1ADAFD0")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x1ADB190", Offset = "0x1ADB190", VA = "0x1ADB190")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x1ADB288", Offset = "0x1ADB288", VA = "0x1ADB288")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class FBBIKHeadEffector : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000500")]
		public class BendBone
		{
			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D67C", Offset = "0xD8D67C")]
			public Transform transform;

			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D6B4", Offset = "0xD8D6B4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8D6B4", Offset = "0xD8D6B4")]
			public float weight;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x600211A")]
			[Address(RVA = "0x1ADE2B8", Offset = "0x1ADE2B8", VA = "0x1ADE2B8")]
			public BendBone()
			{
			}

			[Token(Token = "0x600211B")]
			[Address(RVA = "0x1ADE338", Offset = "0x1ADE338", VA = "0x1ADE338")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x600211C")]
			[Address(RVA = "0x1ADBA48", Offset = "0x1ADBA48", VA = "0x1ADBA48")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x600211D")]
			[Address(RVA = "0x1ADBE4C", Offset = "0x1ADBE4C", VA = "0x1ADBE4C")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88A58", Offset = "0xD88A58")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xD88A90", Offset = "0xD88A90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88A90", Offset = "0xD88A90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88A90", Offset = "0xD88A90")]
		public float positionWeight;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88B08", Offset = "0xD88B08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88B08", Offset = "0xD88B08")]
		public float bodyWeight;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88B5C", Offset = "0xD88B5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88B5C", Offset = "0xD88B5C")]
		public float thighWeight;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88BB0", Offset = "0xD88BB0")]
		public bool handsPullBody;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xD88BE8", Offset = "0xD88BE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88BE8", Offset = "0xD88BE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88BE8", Offset = "0xD88BE8")]
		public float rotationWeight;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88C60", Offset = "0xD88C60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88C60", Offset = "0xD88C60")]
		public float bodyClampWeight;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88CB4", Offset = "0xD88CB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88CB4", Offset = "0xD88CB4")]
		public float headClampWeight;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88D08", Offset = "0xD88D08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88D08", Offset = "0xD88D08")]
		public float bendWeight;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88D5C", Offset = "0xD88D5C")]
		public BendBone[] bendBones;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xD88D94", Offset = "0xD88D94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88D94", Offset = "0xD88D94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88D94", Offset = "0xD88D94")]
		public float CCDWeight;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88E0C", Offset = "0xD88E0C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88E0C", Offset = "0xD88E0C")]
		public float roll;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88E60", Offset = "0xD88E60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88E60", Offset = "0xD88E60")]
		public float damper;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88EB8", Offset = "0xD88EB8")]
		public Transform[] CCDBones;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xD88EF0", Offset = "0xD88EF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88EF0", Offset = "0xD88EF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD88EF0", Offset = "0xD88EF0")]
		public float postStretchWeight;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88F68", Offset = "0xD88F68")]
		public float maxStretch;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88FA0", Offset = "0xD88FA0")]
		public float stretchDamper;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD88FD8", Offset = "0xD88FD8")]
		public bool fixHead;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89010", Offset = "0xD89010")]
		public Transform[] stretchBones;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xD89048", Offset = "0xD89048")]
		public Vector3 chestDirection;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89080", Offset = "0xD89080")]
		public float chestDirectionWeight;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x1ADB290", Offset = "0x1ADB290", VA = "0x1ADB290")]
		private void Start()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x1ADB5C0", Offset = "0x1ADB5C0", VA = "0x1ADB5C0")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x1ADBA80", Offset = "0x1ADBA80", VA = "0x1ADBA80")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x1ADBE74", Offset = "0x1ADBE74", VA = "0x1ADBE74")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x1ADC7EC", Offset = "0x1ADC7EC", VA = "0x1ADC7EC")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x1ADCB38", Offset = "0x1ADCB38", VA = "0x1ADCB38")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x1ADCED4", Offset = "0x1ADCED4", VA = "0x1ADCED4")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x1ADD940", Offset = "0x1ADD940", VA = "0x1ADD940")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x1ADC518", Offset = "0x1ADC518", VA = "0x1ADC518")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x1ADDB50", Offset = "0x1ADDB50", VA = "0x1ADDB50")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x1ADD7FC", Offset = "0x1ADD7FC", VA = "0x1ADD7FC")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x1ADD660", Offset = "0x1ADD660", VA = "0x1ADD660")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1ADDEBC", Offset = "0x1ADDEBC", VA = "0x1ADDEBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x1ADE13C", Offset = "0x1ADE13C", VA = "0x1ADE13C")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B9")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x2000501")]
		public class ChildConstraint
		{
			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D728", Offset = "0xD8D728")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8D738", Offset = "0xD8D738")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x17000408")]
			public float nominalDistance
			{
				[Token(Token = "0x600211E")]
				[Address(RVA = "0x1AE11FC", Offset = "0x1AE11FC", VA = "0x1AE11FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD974AC", Offset = "0xD974AC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600211F")]
				[Address(RVA = "0x1AE1204", Offset = "0x1AE1204", VA = "0x1AE1204")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD974BC", Offset = "0xD974BC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000409")]
			public bool isRigid
			{
				[Token(Token = "0x6002120")]
				[Address(RVA = "0x1AE120C", Offset = "0x1AE120C", VA = "0x1AE120C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD974CC", Offset = "0xD974CC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002121")]
				[Address(RVA = "0x1AE1214", Offset = "0x1AE1214", VA = "0x1AE1214")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD974DC", Offset = "0xD974DC")]
				private set
				{
				}
			}

			[Token(Token = "0x6002122")]
			[Address(RVA = "0x1AE1220", Offset = "0x1AE1220", VA = "0x1AE1220")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x6002123")]
			[Address(RVA = "0x1ADEF80", Offset = "0x1ADEF80", VA = "0x1ADEF80")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002124")]
			[Address(RVA = "0x1ADF4C0", Offset = "0x1ADF4C0", VA = "0x1ADF4C0")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002125")]
			[Address(RVA = "0x1AE0EF8", Offset = "0x1AE0EF8", VA = "0x1AE0EF8")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000502")]
		public enum Smoothing
		{
			[Token(Token = "0x400206D")]
			None,
			[Token(Token = "0x400206E")]
			Exponential,
			[Token(Token = "0x400206F")]
			Cubic
		}

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89098", Offset = "0xD89098")]
		public float pin;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD890B0", Offset = "0xD890B0")]
		public float pull;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD890C8", Offset = "0xD890C8")]
		public float push;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD890E0", Offset = "0xD890E0")]
		public float pushParent;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD890F8", Offset = "0xD890F8")]
		public float reach;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x400141A")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x1ADE3DC", Offset = "0x1ADE3DC", VA = "0x1ADE3DC")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x1ADE4A8", Offset = "0x1ADE4A8", VA = "0x1ADE4A8")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x1ADE5B4", Offset = "0x1ADE5B4", VA = "0x1ADE5B4")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x1ADE6D8", Offset = "0x1ADE6D8", VA = "0x1ADE6D8")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x1ADE7B4", Offset = "0x1ADE7B4", VA = "0x1ADE7B4")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x1ADE8B8", Offset = "0x1ADE8B8", VA = "0x1ADE8B8")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x1ADEFD8", Offset = "0x1ADEFD8", VA = "0x1ADEFD8")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x1ADEA48", Offset = "0x1ADEA48", VA = "0x1ADEA48")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x1ADF6C4", Offset = "0x1ADF6C4", VA = "0x1ADF6C4")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x1ADFA68", Offset = "0x1ADFA68", VA = "0x1ADFA68")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x1ADFE4C", Offset = "0x1ADFE4C", VA = "0x1ADFE4C")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x1AE03D0", Offset = "0x1AE03D0", VA = "0x1AE03D0")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x1AE09A0", Offset = "0x1AE09A0", VA = "0x1AE09A0")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x1AE0C38", Offset = "0x1AE0C38", VA = "0x1AE0C38")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x1AE0898", Offset = "0x1AE0898", VA = "0x1AE0898")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x1AE01B8", Offset = "0x1AE01B8", VA = "0x1AE01B8")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x1AE0820", Offset = "0x1AE0820", VA = "0x1AE0820")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x1AE0D20", Offset = "0x1AE0D20", VA = "0x1AE0D20")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x1AE0740", Offset = "0x1AE0740", VA = "0x1AE0740")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x1AE0B20", Offset = "0x1AE0B20", VA = "0x1AE0B20")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BA")]
	public class IKConstraintBend
	{
		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89110", Offset = "0xD89110")]
		public float weight;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD89128", Offset = "0xD89128")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x1700026A")]
		public bool initiated
		{
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0x2169494", Offset = "0x2169494", VA = "0x2169494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9462C", Offset = "0xD9462C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x216949C", Offset = "0x216949C", VA = "0x216949C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9463C", Offset = "0xD9463C")]
			private set
			{
			}
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x21692CC", Offset = "0x21692CC", VA = "0x21692CC")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x21694A8", Offset = "0x21694A8", VA = "0x21694A8")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x216952C", Offset = "0x216952C", VA = "0x216952C")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x21695D8", Offset = "0x21695D8", VA = "0x21695D8")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x21695E4", Offset = "0x21695E4", VA = "0x21695E4")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x2169B38", Offset = "0x2169B38", VA = "0x2169B38")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower, Vector3 last)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x2169D70", Offset = "0x2169D70", VA = "0x2169D70")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x216A20C", Offset = "0x216A20C", VA = "0x216A20C")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x2169908", Offset = "0x2169908", VA = "0x2169908")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x2169A20", Offset = "0x2169A20", VA = "0x2169A20")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20002BB")]
	public class IKEffector
	{
		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89138", Offset = "0xD89138")]
		public float positionWeight;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89150", Offset = "0xD89150")]
		public float rotationWeight;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD89168", Offset = "0xD89168")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89178", Offset = "0xD89178")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x1700026B")]
		public bool isEndEffector
		{
			[Token(Token = "0x6001602")]
			[Address(RVA = "0x216A8BC", Offset = "0x216A8BC", VA = "0x216A8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9464C", Offset = "0xD9464C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001603")]
			[Address(RVA = "0x216A8C4", Offset = "0x216A8C4", VA = "0x216A8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9465C", Offset = "0xD9465C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x216A854", Offset = "0x216A854", VA = "0x216A854")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x216A8D0", Offset = "0x216A8D0", VA = "0x216A8D0")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x216A9A4", Offset = "0x216A9A4", VA = "0x216A9A4")]
		public IKEffector()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x216AAE0", Offset = "0x216AAE0", VA = "0x216AAE0")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x216AC38", Offset = "0x216AC38", VA = "0x216AC38")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x216AF28", Offset = "0x216AF28", VA = "0x216AF28")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x216B1B4", Offset = "0x216B1B4", VA = "0x216B1B4")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x216B2EC", Offset = "0x216B2EC", VA = "0x216B2EC")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x216B398", Offset = "0x216B398", VA = "0x216B398")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x216B9D8", Offset = "0x216B9D8", VA = "0x216B9D8")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x216BA48", Offset = "0x216BA48", VA = "0x216BA48")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x216BC54", Offset = "0x216BC54", VA = "0x216BC54")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x216BF88", Offset = "0x216BF88", VA = "0x216BF88")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20002BC")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000503")]
		public class BoneMap
		{
			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x1700040A")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x6002127")]
				[Address(RVA = "0x216C758", Offset = "0x216C758", VA = "0x216C758")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700040B")]
			public bool isNodeBone
			{
				[Token(Token = "0x600212A")]
				[Address(RVA = "0x216C8C4", Offset = "0x216C8C4", VA = "0x216C8C4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700040C")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x600213E")]
				[Address(RVA = "0x216CE9C", Offset = "0x216CE9C", VA = "0x216CE9C")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6002126")]
			[Address(RVA = "0x216C730", Offset = "0x216C730", VA = "0x216C730")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002128")]
			[Address(RVA = "0x216C824", Offset = "0x216C824", VA = "0x216C824")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6002129")]
			[Address(RVA = "0x216C874", Offset = "0x216C874", VA = "0x216C874")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x600212B")]
			[Address(RVA = "0x216C8D4", Offset = "0x216C8D4", VA = "0x216C8D4")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x600212C")]
			[Address(RVA = "0x216C9BC", Offset = "0x216C9BC", VA = "0x216C9BC")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x600212D")]
			[Address(RVA = "0x216C9C4", Offset = "0x216C9C4", VA = "0x216C9C4")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x600212E")]
			[Address(RVA = "0x216CB54", Offset = "0x216CB54", VA = "0x216CB54")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x600212F")]
			[Address(RVA = "0x216CC60", Offset = "0x216CC60", VA = "0x216CC60")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x6002130")]
			[Address(RVA = "0x216CCEC", Offset = "0x216CCEC", VA = "0x216CCEC")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x6002131")]
			[Address(RVA = "0x216D0C0", Offset = "0x216D0C0", VA = "0x216D0C0")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x6002132")]
			[Address(RVA = "0x216D0F8", Offset = "0x216D0F8", VA = "0x216D0F8")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x6002133")]
			[Address(RVA = "0x216D130", Offset = "0x216D130", VA = "0x216D130")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x6002134")]
			[Address(RVA = "0x216D158", Offset = "0x216D158", VA = "0x216D158")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x6002135")]
			[Address(RVA = "0x216D280", Offset = "0x216D280", VA = "0x216D280")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002136")]
			[Address(RVA = "0x216D5B8", Offset = "0x216D5B8", VA = "0x216D5B8")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002137")]
			[Address(RVA = "0x216D5E8", Offset = "0x216D5E8", VA = "0x216D5E8")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6002138")]
			[Address(RVA = "0x216D780", Offset = "0x216D780", VA = "0x216D780")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x6002139")]
			[Address(RVA = "0x216D7F0", Offset = "0x216D7F0", VA = "0x216D7F0")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x600213A")]
			[Address(RVA = "0x216DA34", Offset = "0x216DA34", VA = "0x216DA34")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x600213B")]
			[Address(RVA = "0x216DC5C", Offset = "0x216DC5C", VA = "0x216DC5C")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x600213C")]
			[Address(RVA = "0x216DD74", Offset = "0x216DD74", VA = "0x216DD74")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x600213D")]
			[Address(RVA = "0x216D3C0", Offset = "0x216D3C0", VA = "0x216D3C0")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600213F")]
			[Address(RVA = "0x216DF04", Offset = "0x216DF04", VA = "0x216DF04")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x216C4F0", Offset = "0x216C4F0", VA = "0x216C4F0", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x216C4F8", Offset = "0x216C4F8", VA = "0x216C4F8", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x216C4FC", Offset = "0x216C4FC", VA = "0x216C4FC")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x216C620", Offset = "0x216C620", VA = "0x216C620")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x216C728", Offset = "0x216C728", VA = "0x216C728")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BD")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89190", Offset = "0xD89190")]
		public float maintainRotationWeight;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x216DF20", Offset = "0x216DF20", VA = "0x216DF20", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x216DFC0", Offset = "0x216DFC0", VA = "0x216DFC0")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x216E044", Offset = "0x216E044", VA = "0x216E044")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x216E0DC", Offset = "0x216E0DC", VA = "0x216E0DC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x216E0F4", Offset = "0x216E0F4", VA = "0x216E0F4")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x216E110", Offset = "0x216E110", VA = "0x216E110", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x216E1AC", Offset = "0x216E1AC", VA = "0x216E1AC")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x216E1C4", Offset = "0x216E1C4", VA = "0x216E1C4")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BE")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000504")]
		public enum BoneMapType
		{
			[Token(Token = "0x4002087")]
			Parent,
			[Token(Token = "0x4002088")]
			Bone1,
			[Token(Token = "0x4002089")]
			Bone2,
			[Token(Token = "0x400208A")]
			Bone3
		}

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD891A8", Offset = "0xD891A8")]
		public float maintainRotationWeight;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD891C0", Offset = "0xD891C0")]
		public float weight;

		[NonSerialized]
		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updatePlaneRotations;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMapParent;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap1;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap2;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap boneMap3;

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x216E1E8", Offset = "0x216E1E8", VA = "0x216E1E8", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x216E26C", Offset = "0x216E26C", VA = "0x216E26C")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x216E340", Offset = "0x216E340", VA = "0x216E340")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x216E694", Offset = "0x216E694", VA = "0x216E694")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x216E79C", Offset = "0x216E79C", VA = "0x216E79C")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x216E8D0", Offset = "0x216E8D0", VA = "0x216E8D0")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x216E8DC", Offset = "0x216E8DC", VA = "0x216E8DC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x216E984", Offset = "0x216E984", VA = "0x216E984")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x216EA3C", Offset = "0x216EA3C", VA = "0x216EA3C", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x216ECAC", Offset = "0x216ECAC", VA = "0x216ECAC")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x216ED64", Offset = "0x216ED64", VA = "0x216ED64")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BF")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD891D8", Offset = "0xD891D8")]
		public int iterations;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD891F0", Offset = "0xD891F0")]
		public float twistWeight;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x216EECC", Offset = "0x216EECC", VA = "0x216EECC", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x216F1BC", Offset = "0x216F1BC", VA = "0x216F1BC")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x216F2D8", Offset = "0x216F2D8", VA = "0x216F2D8")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x216F430", Offset = "0x216F430", VA = "0x216F430")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x216F440", Offset = "0x216F440", VA = "0x216F440")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x216F4A8", Offset = "0x216F4A8", VA = "0x216F4A8")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x216F528", Offset = "0x216F528", VA = "0x216F528", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x216FB7C", Offset = "0x216FB7C", VA = "0x216FB7C")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x216FBB4", Offset = "0x216FBB4", VA = "0x216FBB4")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x216FE94", Offset = "0x216FE94", VA = "0x216FE94")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x2170240", Offset = "0x2170240", VA = "0x2170240")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x217032C", Offset = "0x217032C", VA = "0x217032C")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x21703F4", Offset = "0x21703F4", VA = "0x21703F4")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C0")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000505")]
		public class Point
		{
			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8D748", Offset = "0xD8D748")]
			public float weight;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6002140")]
			[Address(RVA = "0x2171F18", Offset = "0x2171F18", VA = "0x2171F18")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6002141")]
			[Address(RVA = "0x2171F68", Offset = "0x2171F68", VA = "0x2171F68")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6002142")]
			[Address(RVA = "0x21720F0", Offset = "0x21720F0", VA = "0x21720F0")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x6002143")]
			[Address(RVA = "0x2172128", Offset = "0x2172128", VA = "0x2172128")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x6002144")]
			[Address(RVA = "0x2172160", Offset = "0x2172160", VA = "0x2172160")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x6002145")]
			[Address(RVA = "0x21721B0", Offset = "0x21721B0", VA = "0x21721B0")]
			public void UpdateSolverLocalState()
			{
			}

			[Token(Token = "0x6002146")]
			[Address(RVA = "0x21719EC", Offset = "0x21719EC", VA = "0x21719EC")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000506")]
		public class Bone : Point
		{
			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x1700040D")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x6002147")]
				[Address(RVA = "0x2170FBC", Offset = "0x2170FBC", VA = "0x2170FBC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002148")]
				[Address(RVA = "0x21710B0", Offset = "0x21710B0", VA = "0x21710B0")]
				set
				{
				}
			}

			[Token(Token = "0x6002149")]
			[Address(RVA = "0x2171138", Offset = "0x2171138", VA = "0x2171138")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600214A")]
			[Address(RVA = "0x21713F8", Offset = "0x21713F8", VA = "0x21713F8")]
			public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600214B")]
			[Address(RVA = "0x21716D8", Offset = "0x21716D8", VA = "0x21716D8")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600214C")]
			[Address(RVA = "0x2171940", Offset = "0x2171940", VA = "0x2171940")]
			public void SetToSolverPosition()
			{
			}

			[Token(Token = "0x600214D")]
			[Address(RVA = "0x2171968", Offset = "0x2171968", VA = "0x2171968")]
			public Bone()
			{
			}

			[Token(Token = "0x600214E")]
			[Address(RVA = "0x2171A6C", Offset = "0x2171A6C", VA = "0x2171A6C")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x600214F")]
			[Address(RVA = "0x2171B04", Offset = "0x2171B04", VA = "0x2171B04")]
			public Bone(Transform transform, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000507")]
		public class Node : Point
		{
			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x6002150")]
			[Address(RVA = "0x2171EB4", Offset = "0x2171EB4", VA = "0x2171EB4")]
			public Node()
			{
			}

			[Token(Token = "0x6002151")]
			[Address(RVA = "0x2171EB8", Offset = "0x2171EB8", VA = "0x2171EB8")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x6002152")]
			[Address(RVA = "0x2171EE0", Offset = "0x2171EE0", VA = "0x2171EE0")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x2000508")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x2000509")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool fixPelvisTransforms;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89218", Offset = "0xD89218")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89218", Offset = "0xD89218")]
		public float IKPositionWeight;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8926C", Offset = "0xD8926C")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool firstInitiation;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Transform root;

		[Token(Token = "0x1700026C")]
		public bool initiated
		{
			[Token(Token = "0x600163E")]
			[Address(RVA = "0x2170A08", Offset = "0x2170A08", VA = "0x2170A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9466C", Offset = "0xD9466C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600163F")]
			[Address(RVA = "0x2170A10", Offset = "0x2170A10", VA = "0x2170A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9467C", Offset = "0xD9467C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x21706D4", Offset = "0x21706D4", VA = "0x21706D4")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001636")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x2169118", Offset = "0x2169118", VA = "0x2169118")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x2169040", Offset = "0x2169040", VA = "0x2169040")]
		public void Update()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x217095C", Offset = "0x217095C", VA = "0x217095C", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x2170968", Offset = "0x2170968", VA = "0x2170968")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x2170974", Offset = "0x2170974", VA = "0x2170974")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x217097C", Offset = "0x217097C", VA = "0x217097C")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x2170A00", Offset = "0x2170A00", VA = "0x2170A00")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x6001640")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x6001641")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x6001642")]
		public abstract void FixTransforms();

		[Token(Token = "0x6001643")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x6001644")]
		protected abstract void OnInitiate();

		[Token(Token = "0x6001645")]
		protected abstract void OnUpdate();

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x2170A1C", Offset = "0x2170A1C", VA = "0x2170A1C")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x2170A34", Offset = "0x2170A34", VA = "0x2170A34")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x2170B70", Offset = "0x2170B70", VA = "0x2170B70")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x2170C1C", Offset = "0x2170C1C", VA = "0x2170C1C")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x2170FA0", Offset = "0x2170FA0", VA = "0x2170FA0")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C1")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD892B4", Offset = "0xD892B4")]
		public float poleWeight;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD892CC", Offset = "0xD892CC")]
		public float clampWeight;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD892E4", Offset = "0xD892E4")]
		public int clampSmoothing;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x1700026D")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0x2172338", Offset = "0x2172338", VA = "0x2172338")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700026E")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0x2172404", Offset = "0x2172404", VA = "0x2172404")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700026F")]
		protected override int minBones
		{
			[Token(Token = "0x6001650")]
			[Address(RVA = "0x2173174", Offset = "0x2173174", VA = "0x2173174", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000270")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6001654")]
			[Address(RVA = "0x2173718", Offset = "0x2173718", VA = "0x2173718", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x2172238", Offset = "0x2172238", VA = "0x2172238")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x21724D0", Offset = "0x21724D0", VA = "0x21724D0", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x2172750", Offset = "0x2172750", VA = "0x2172750", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x21730C0", Offset = "0x21730C0", VA = "0x21730C0")]
		private void Solve()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x2172CE8", Offset = "0x2172CE8", VA = "0x2172CE8")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x217317C", Offset = "0x217317C", VA = "0x217317C")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x217378C", Offset = "0x217378C", VA = "0x217378C")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C2")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD892FC", Offset = "0xD892FC")]
		public float IKRotationWeight;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x2173824", Offset = "0x2173824", VA = "0x2173824", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x2173B98", Offset = "0x2173B98", VA = "0x2173B98")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x2173C04", Offset = "0x2173C04", VA = "0x2173C04", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x2173D60", Offset = "0x2173D60", VA = "0x2173D60", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x2173EF8", Offset = "0x2173EF8", VA = "0x2173EF8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x2173F44", Offset = "0x2173F44", VA = "0x2173F44", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x2173FA4", Offset = "0x2173FA4", VA = "0x2173FA4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x2174314", Offset = "0x2174314", VA = "0x2174314", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x2174340", Offset = "0x2174340", VA = "0x2174340")]
		private void Solve()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x2174008", Offset = "0x2174008", VA = "0x2174008")]
		private void Read()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x21743AC", Offset = "0x21743AC", VA = "0x21743AC")]
		private void Write()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x2174538", Offset = "0x2174538", VA = "0x2174538")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C3")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x217468C", Offset = "0x217468C", VA = "0x217468C")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x217473C", Offset = "0x217473C", VA = "0x217473C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x21747C0", Offset = "0x21747C0", VA = "0x21747C0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x2174ABC", Offset = "0x2174ABC", VA = "0x2174ABC")]
		protected void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x2175210", Offset = "0x2175210", VA = "0x2175210")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C4")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x17000271")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x2176440", Offset = "0x2176440", VA = "0x2176440", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x2175218", Offset = "0x2175218", VA = "0x2175218")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x2175960", Offset = "0x2175960", VA = "0x2175960")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x2175A98", Offset = "0x2175A98", VA = "0x2175A98", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x2175B30", Offset = "0x2175B30", VA = "0x2175B30", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x21760D8", Offset = "0x21760D8", VA = "0x21760D8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x2176448", Offset = "0x2176448", VA = "0x2176448")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x21752EC", Offset = "0x21752EC", VA = "0x21752EC")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x2175A44", Offset = "0x2175A44", VA = "0x2175A44")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x21763E4", Offset = "0x21763E4", VA = "0x21763E4")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x2175788", Offset = "0x2175788", VA = "0x2175788")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x2176C88", Offset = "0x2176C88", VA = "0x2176C88")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x2176D98", Offset = "0x2176D98", VA = "0x2176D98")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x2176EC4", Offset = "0x2176EC4", VA = "0x2176EC4")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x2176FDC", Offset = "0x2176FDC", VA = "0x2176FDC")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x2175E40", Offset = "0x2175E40", VA = "0x2175E40")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x2175F8C", Offset = "0x2175F8C", VA = "0x2175F8C")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x21771C8", Offset = "0x21771C8", VA = "0x21771C8")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x2176700", Offset = "0x2176700", VA = "0x2176700")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x2175A34", Offset = "0x2175A34", VA = "0x2175A34")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x2177930", Offset = "0x2177930", VA = "0x2177930")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x217739C", Offset = "0x217739C", VA = "0x217739C")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x2176560", Offset = "0x2176560", VA = "0x2176560")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x217663C", Offset = "0x217663C", VA = "0x217663C")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x21779FC", Offset = "0x21779FC", VA = "0x21779FC")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C5")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89314", Offset = "0xD89314")]
		public float rootPin;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x2177A74", Offset = "0x2177A74", VA = "0x2177A74", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x2178340", Offset = "0x2178340", VA = "0x2178340", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x21783D8", Offset = "0x21783D8", VA = "0x21783D8", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x2178480", Offset = "0x2178480", VA = "0x2178480", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x2178580", Offset = "0x2178580", VA = "0x2178580")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x217861C", Offset = "0x217861C", VA = "0x217861C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x2178B84", Offset = "0x2178B84", VA = "0x2178B84", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x2178D84", Offset = "0x2178D84", VA = "0x2178D84", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x2178C34", Offset = "0x2178C34", VA = "0x2178C34")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x2178850", Offset = "0x2178850", VA = "0x2178850")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x2178E1C", Offset = "0x2178E1C", VA = "0x2178E1C")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C6")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8932C", Offset = "0xD8932C")]
		public int iterations;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x2178E98", Offset = "0x2178E98", VA = "0x2178E98")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x2178F8C", Offset = "0x2178F8C", VA = "0x2178F8C")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x2178FE8", Offset = "0x2178FE8", VA = "0x2178FE8")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x216A7F8", Offset = "0x216A7F8", VA = "0x216A7F8")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x2169888", Offset = "0x2169888", VA = "0x2169888")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x217911C", Offset = "0x217911C", VA = "0x217911C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x21792C4", Offset = "0x21792C4", VA = "0x21792C4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x2179438", Offset = "0x2179438", VA = "0x2179438", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x2179638", Offset = "0x2179638", VA = "0x2179638", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x2179708", Offset = "0x2179708", VA = "0x2179708", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x21797E4", Offset = "0x21797E4", VA = "0x21797E4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x2179954", Offset = "0x2179954", VA = "0x2179954", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x2179B0C", Offset = "0x2179B0C", VA = "0x2179B0C", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x2179D48", Offset = "0x2179D48", VA = "0x2179D48", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x217A008", Offset = "0x217A008", VA = "0x217A008", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x217A04C", Offset = "0x217A04C", VA = "0x217A04C", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x217A130", Offset = "0x217A130", VA = "0x217A130")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C7")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x40014A5")]
		Body,
		[Token(Token = "0x40014A6")]
		LeftShoulder,
		[Token(Token = "0x40014A7")]
		RightShoulder,
		[Token(Token = "0x40014A8")]
		LeftThigh,
		[Token(Token = "0x40014A9")]
		RightThigh,
		[Token(Token = "0x40014AA")]
		LeftHand,
		[Token(Token = "0x40014AB")]
		RightHand,
		[Token(Token = "0x40014AC")]
		LeftFoot,
		[Token(Token = "0x40014AD")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x20002C8")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x40014AF")]
		LeftArm,
		[Token(Token = "0x40014B0")]
		RightArm,
		[Token(Token = "0x40014B1")]
		LeftLeg,
		[Token(Token = "0x40014B2")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x20002C9")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89344", Offset = "0xD89344")]
		public float spineStiffness;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8935C", Offset = "0xD8935C")]
		public float pullBodyVertical;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89374", Offset = "0xD89374")]
		public float pullBodyHorizontal;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8938C", Offset = "0xD8938C")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x17000272")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x600169C")]
			[Address(RVA = "0x217A214", Offset = "0x217A214", VA = "0x217A214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x600169D")]
			[Address(RVA = "0x217A21C", Offset = "0x217A21C", VA = "0x217A21C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0x217A224", Offset = "0x217A224", VA = "0x217A224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x600169F")]
			[Address(RVA = "0x217A22C", Offset = "0x217A22C", VA = "0x217A22C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0x217A234", Offset = "0x217A234", VA = "0x217A234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x217A23C", Offset = "0x217A23C", VA = "0x217A23C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x60016A2")]
			[Address(RVA = "0x217A244", Offset = "0x217A244", VA = "0x217A244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0x217A24C", Offset = "0x217A24C", VA = "0x217A24C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x217A254", Offset = "0x217A254", VA = "0x217A254")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x217A25C", Offset = "0x217A25C", VA = "0x217A25C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x217A294", Offset = "0x217A294", VA = "0x217A294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x60016A7")]
			[Address(RVA = "0x217A2CC", Offset = "0x217A2CC", VA = "0x217A2CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x60016A8")]
			[Address(RVA = "0x217A304", Offset = "0x217A304", VA = "0x217A304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x60016A9")]
			[Address(RVA = "0x217A33C", Offset = "0x217A33C", VA = "0x217A33C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0x217A370", Offset = "0x217A370", VA = "0x217A370")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x217A3A8", Offset = "0x217A3A8", VA = "0x217A3A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0x217A3E0", Offset = "0x217A3E0", VA = "0x217A3E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0x217A418", Offset = "0x217A418", VA = "0x217A418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000284")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x217C368", Offset = "0x217C368", VA = "0x217C368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9468C", Offset = "0xD9468C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x217C374", Offset = "0x217C374", VA = "0x217C374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9469C", Offset = "0xD9469C")]
			private set
			{
			}
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x217A44C", Offset = "0x217A44C", VA = "0x217A44C")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x217A558", Offset = "0x217A558", VA = "0x217A558")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x217A4A0", Offset = "0x217A4A0", VA = "0x217A4A0")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x217A634", Offset = "0x217A634", VA = "0x217A634")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x2167C70", Offset = "0x2167C70", VA = "0x2167C70")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x217A704", Offset = "0x217A704", VA = "0x217A704")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x217A7BC", Offset = "0x217A7BC", VA = "0x217A7BC")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x217A870", Offset = "0x217A870", VA = "0x217A870")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x217A924", Offset = "0x217A924", VA = "0x217A924")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x217A92C", Offset = "0x217A92C", VA = "0x217A92C")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x217A960", Offset = "0x217A960", VA = "0x217A960")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x217AA28", Offset = "0x217AA28", VA = "0x217AA28", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x217ABB8", Offset = "0x217ABB8", VA = "0x217ABB8")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x217BC8C", Offset = "0x217BC8C", VA = "0x217BC8C")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x217C120", Offset = "0x217C120", VA = "0x217C120")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x217C180", Offset = "0x217C180", VA = "0x217C180")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x217BFA0", Offset = "0x217BFA0", VA = "0x217BFA0")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x217C060", Offset = "0x217C060", VA = "0x217C060")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x217C380", Offset = "0x217C380", VA = "0x217C380")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x217C45C", Offset = "0x217C45C", VA = "0x217C45C", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x217C5A0", Offset = "0x217C5A0", VA = "0x217C5A0")]
		private void PullBody()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x217C730", Offset = "0x217C730", VA = "0x217C730")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x217C930", Offset = "0x217C930", VA = "0x217C930")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x217CB30", Offset = "0x217CB30", VA = "0x217CB30", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x217CE60", Offset = "0x217CE60", VA = "0x217CE60", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x217CF60", Offset = "0x217CF60", VA = "0x217CF60")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CA")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x17000285")]
		protected virtual int minBones
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x25CEAC4", Offset = "0x25CEAC4", VA = "0x25CEAC4", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000286")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x25CEACC", Offset = "0x25CEACC", VA = "0x25CEACC", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000287")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x25CEAD4", Offset = "0x25CEAD4", VA = "0x25CEAD4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000288")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x25CF064", Offset = "0x25CF064", VA = "0x25CF064", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000289")]
		protected float positionOffset
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x25CF198", Offset = "0x25CF198", VA = "0x25CF198")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x25CE280", Offset = "0x25CE280", VA = "0x25CE280")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x25CE414", Offset = "0x25CE414", VA = "0x25CE414")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x25CE550", Offset = "0x25CE550", VA = "0x25CE550", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x25CE5BC", Offset = "0x25CE5BC", VA = "0x25CE5BC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x25CE63C", Offset = "0x25CE63C", VA = "0x25CE63C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x25CE9C8", Offset = "0x25CE9C8", VA = "0x25CE9C8", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x25CE9D0", Offset = "0x25CE9D0", VA = "0x25CE9D0", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x25CEADC", Offset = "0x25CEADC", VA = "0x25CEADC", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x25CEAE0", Offset = "0x25CEAE0", VA = "0x25CEAE0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x25CEAE4", Offset = "0x25CEAE4", VA = "0x25CEAE4")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x25CF25C", Offset = "0x25CF25C", VA = "0x25CF25C")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x25CF600", Offset = "0x25CF600", VA = "0x25CF600")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x25CF8B4", Offset = "0x25CF8B4", VA = "0x25CF8B4")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CB")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8939C", Offset = "0xD8939C")]
		public float IKRotationWeight;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x25CF924", Offset = "0x25CF924", VA = "0x25CF924", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x25CFC98", Offset = "0x25CFC98", VA = "0x25CFC98")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x25CFD08", Offset = "0x25CFD08", VA = "0x25CFD08", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x25CFE64", Offset = "0x25CFE64", VA = "0x25CFE64", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x25CFFFC", Offset = "0x25CFFFC", VA = "0x25CFFFC", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x25D0058", Offset = "0x25D0058", VA = "0x25D0058", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x25D00C8", Offset = "0x25D00C8", VA = "0x25D00C8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x25D0434", Offset = "0x25D0434", VA = "0x25D0434", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x25D0460", Offset = "0x25D0460", VA = "0x25D0460")]
		private void Solve()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x25D012C", Offset = "0x25D012C", VA = "0x25D012C")]
		private void Read()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x25D0564", Offset = "0x25D0564", VA = "0x25D0564")]
		private void Write()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x25D09E0", Offset = "0x25D09E0", VA = "0x25D09E0")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CC")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x200050A")]
		public enum BendModifier
		{
			[Token(Token = "0x400209B")]
			Animation,
			[Token(Token = "0x400209C")]
			Target,
			[Token(Token = "0x400209D")]
			Parent,
			[Token(Token = "0x400209E")]
			Arm,
			[Token(Token = "0x400209F")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x200050B")]
		public struct AxisDirection
		{
			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x600215B")]
			[Address(RVA = "0x25D2348", Offset = "0x25D2348", VA = "0x25D2348")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD893B4", Offset = "0xD893B4")]
		public float maintainRotationWeight;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD893CC", Offset = "0xD893CC")]
		public float bendModifierWeight;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x1700028A")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x25D232C", Offset = "0x25D232C", VA = "0x25D232C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x25D0C28", Offset = "0x25D0C28", VA = "0x25D0C28")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x25D0C78", Offset = "0x25D0C78", VA = "0x25D0C78")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x25D0D8C", Offset = "0x25D0D8C", VA = "0x25D0D8C", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x25D13FC", Offset = "0x25D13FC", VA = "0x25D13FC", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x25D1FD8", Offset = "0x25D1FD8", VA = "0x25D1FD8", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x25D2120", Offset = "0x25D2120", VA = "0x25D2120")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x25D22A4", Offset = "0x25D22A4", VA = "0x25D22A4")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x25D1108", Offset = "0x25D1108", VA = "0x25D1108")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x25D1528", Offset = "0x25D1528", VA = "0x25D1528")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20002CD")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x200050C")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 baseForwardOffsetEuler;

			[Token(Token = "0x1700040E")]
			public Vector3 forward
			{
				[Token(Token = "0x6002160")]
				[Address(RVA = "0x25D43E8", Offset = "0x25D43E8", VA = "0x25D43E8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x600215C")]
			[Address(RVA = "0x25D4B34", Offset = "0x25D4B34", VA = "0x25D4B34")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x600215D")]
			[Address(RVA = "0x25D3584", Offset = "0x25D3584", VA = "0x25D3584")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x600215E")]
			[Address(RVA = "0x25D38C0", Offset = "0x25D38C0", VA = "0x25D38C0")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x600215F")]
			[Address(RVA = "0x25D47EC", Offset = "0x25D47EC", VA = "0x25D47EC")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD893E4", Offset = "0xD893E4")]
		public float bodyWeight;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD893FC", Offset = "0xD893FC")]
		public float headWeight;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89414", Offset = "0xD89414")]
		public float eyesWeight;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8942C", Offset = "0xD8942C")]
		public float clampWeight;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89444", Offset = "0xD89444")]
		public float clampWeightHead;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8945C", Offset = "0xD8945C")]
		public float clampWeightEyes;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89474", Offset = "0xD89474")]
		public int clampSmoothing;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Vector3[] spineForwards;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3[] headForwards;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3[] eyeForward;

		[Token(Token = "0x1700028B")]
		protected bool spineIsValid
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x25D2CE8", Offset = "0x25D2CE8", VA = "0x25D2CE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028C")]
		protected bool spineIsEmpty
		{
			[Token(Token = "0x6001701")]
			[Address(RVA = "0x25D2EC0", Offset = "0x25D2EC0", VA = "0x25D2EC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028D")]
		protected bool headIsValid
		{
			[Token(Token = "0x6001703")]
			[Address(RVA = "0x25D2DCC", Offset = "0x25D2DCC", VA = "0x25D2DCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028E")]
		protected bool headIsEmpty
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0x25D2EE4", Offset = "0x25D2EE4", VA = "0x25D2EE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028F")]
		protected bool eyesIsValid
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0x25D2DDC", Offset = "0x25D2DDC", VA = "0x25D2DDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000290")]
		protected bool eyesIsEmpty
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0x25D2F60", Offset = "0x25D2F60", VA = "0x25D2F60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x25D23A8", Offset = "0x25D23A8", VA = "0x25D23A8")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x25D242C", Offset = "0x25D242C", VA = "0x25D242C")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x25D24D8", Offset = "0x25D24D8", VA = "0x25D24D8")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x25D25A0", Offset = "0x25D25A0", VA = "0x25D25A0")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x25D268C", Offset = "0x25D268C", VA = "0x25D268C")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x25D2798", Offset = "0x25D2798", VA = "0x25D2798")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x25D28E0", Offset = "0x25D28E0", VA = "0x25D28E0", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x25D2A10", Offset = "0x25D2A10", VA = "0x25D2A10", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x25D2B54", Offset = "0x25D2B54", VA = "0x25D2B54", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x25D2F84", Offset = "0x25D2F84", VA = "0x25D2F84", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x25D31BC", Offset = "0x25D31BC", VA = "0x25D31BC", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x25D335C", Offset = "0x25D335C", VA = "0x25D335C")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x25D35B0", Offset = "0x25D35B0", VA = "0x25D35B0", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x25D39FC", Offset = "0x25D39FC", VA = "0x25D39FC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x25D3B00", Offset = "0x25D3B00", VA = "0x25D3B00")]
		protected void SolveSpine()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x25D3D2C", Offset = "0x25D3D2C", VA = "0x25D3D2C")]
		protected void SolveHead()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x25D3F88", Offset = "0x25D3F88", VA = "0x25D3F88")]
		protected void SolveEyes()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x25D44B4", Offset = "0x25D44B4", VA = "0x25D44B4")]
		protected Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x25D340C", Offset = "0x25D340C", VA = "0x25D340C")]
		protected void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x25D4954", Offset = "0x25D4954", VA = "0x25D4954")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CE")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x200050D")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x6002161")]
			[Address(RVA = "0x25D610C", Offset = "0x25D610C", VA = "0x25D610C")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x6002162")]
			[Address(RVA = "0x25D6CC4", Offset = "0x25D6CC4", VA = "0x25D6CC4")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002163")]
			[Address(RVA = "0x25D0CC0", Offset = "0x25D0CC0", VA = "0x25D0CC0")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002164")]
			[Address(RVA = "0x25D6D8C", Offset = "0x25D6D8C", VA = "0x25D6D8C")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8948C", Offset = "0xD8948C")]
		public float IKRotationWeight;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x25D4B3C", Offset = "0x25D4B3C", VA = "0x25D4B3C")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x25D4D2C", Offset = "0x25D4D2C", VA = "0x25D4D2C")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x25D4EE0", Offset = "0x25D4EE0", VA = "0x25D4EE0")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x25D4EEC", Offset = "0x25D4EEC", VA = "0x25D4EEC")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x25D4F70", Offset = "0x25D4F70", VA = "0x25D4F70")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x25D4F7C", Offset = "0x25D4F7C", VA = "0x25D4F7C")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x25D4F84", Offset = "0x25D4F84", VA = "0x25D4F84", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x25D5088", Offset = "0x25D5088", VA = "0x25D5088", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x25D51A8", Offset = "0x25D51A8", VA = "0x25D51A8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x25D51F4", Offset = "0x25D51F4", VA = "0x25D51F4", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x25D5254", Offset = "0x25D5254", VA = "0x25D5254", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x25D5630", Offset = "0x25D5630", VA = "0x25D5630")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x25D5688", Offset = "0x25D5688", VA = "0x25D5688")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, Vector3 targetPosition, Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x25D5C30", Offset = "0x25D5C30", VA = "0x25D5C30")]
		private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x25D5E48", Offset = "0x25D5E48", VA = "0x25D5E48", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x25D6004", Offset = "0x25D6004", VA = "0x25D6004")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x25D5F80", Offset = "0x25D5F80", VA = "0x25D5F80")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x25D62AC", Offset = "0x25D62AC", VA = "0x25D62AC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x25D6D80", Offset = "0x25D6D80", VA = "0x25D6D80", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x25D6D84", Offset = "0x25D6D84", VA = "0x25D6D84", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x25D6D88", Offset = "0x25D6D88", VA = "0x25D6D88", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x25D69B8", Offset = "0x25D69B8", VA = "0x25D69B8")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x25D2194", Offset = "0x25D2194", VA = "0x25D2194")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CF")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x200050E")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x2000584")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x40022FE")]
				YawPitch,
				[Token(Token = "0x40022FF")]
				FromTo
			}

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D760", Offset = "0xD8D760")]
			public Transform target;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D798", Offset = "0xD8D798")]
			public Transform bendGoal;

			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D7D0", Offset = "0xD8D7D0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8D7D0", Offset = "0xD8D7D0")]
			public float positionWeight;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D824", Offset = "0xD8D824")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8D824", Offset = "0xD8D824")]
			public float rotationWeight;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D878", Offset = "0xD8D878")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D8B0", Offset = "0xD8D8B0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8D8B0", Offset = "0xD8D8B0")]
			public float shoulderRotationWeight;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D904", Offset = "0xD8D904")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8D904", Offset = "0xD8D904")]
			public float shoulderTwistWeight;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D958", Offset = "0xD8D958")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8D958", Offset = "0xD8D958")]
			public float bendGoalWeight;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8D9AC", Offset = "0xD8D9AC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8D9AC", Offset = "0xD8D9AC")]
			public float swivelOffset;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DA08", Offset = "0xD8DA08")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DA40", Offset = "0xD8DA40")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DA78", Offset = "0xD8DA78")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8DA78", Offset = "0xD8DA78")]
			public float armLengthMlp;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DAD0", Offset = "0xD8DAD0")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8DB48", Offset = "0xD8DB48")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8DB58", Offset = "0xD8DB58")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			private Vector3 upperArmBendAxis;

			[Token(Token = "0x40020C1")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x40020C2")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x1700040F")]
			public Vector3 position
			{
				[Token(Token = "0x6002165")]
				[Address(RVA = "0x25DFB38", Offset = "0x25DFB38", VA = "0x25DFB38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD974EC", Offset = "0xD974EC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002166")]
				[Address(RVA = "0x25DFB44", Offset = "0x25DFB44", VA = "0x25DFB44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD974FC", Offset = "0xD974FC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000410")]
			public Quaternion rotation
			{
				[Token(Token = "0x6002167")]
				[Address(RVA = "0x25DFB50", Offset = "0x25DFB50", VA = "0x25DFB50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9750C", Offset = "0xD9750C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6002168")]
				[Address(RVA = "0x25DFB5C", Offset = "0x25DFB5C", VA = "0x25DFB5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9751C", Offset = "0xD9751C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000411")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x6002169")]
				[Address(RVA = "0x25DFB68", Offset = "0x25DFB68", VA = "0x25DFB68")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000412")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x600216A")]
				[Address(RVA = "0x25DFB9C", Offset = "0x25DFB9C", VA = "0x25DFB9C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000413")]
			private VirtualBone forearm
			{
				[Token(Token = "0x600216B")]
				[Address(RVA = "0x25DFBDC", Offset = "0x25DFBDC", VA = "0x25DFBDC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000414")]
			private VirtualBone hand
			{
				[Token(Token = "0x600216C")]
				[Address(RVA = "0x25DFC28", Offset = "0x25DFC28", VA = "0x25DFC28")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600216D")]
			[Address(RVA = "0x25DFC74", Offset = "0x25DFC74", VA = "0x25DFC74", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x600216E")]
			[Address(RVA = "0x25E0588", Offset = "0x25E0588", VA = "0x25E0588", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x600216F")]
			[Address(RVA = "0x25E077C", Offset = "0x25E077C", VA = "0x25E077C", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x6002170")]
			[Address(RVA = "0x25E0828", Offset = "0x25E0828", VA = "0x25E0828")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6002171")]
			[Address(RVA = "0x25DDA84", Offset = "0x25DDA84", VA = "0x25DDA84")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x6002172")]
			[Address(RVA = "0x25E1C50", Offset = "0x25E1C50", VA = "0x25E1C50", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6002173")]
			[Address(RVA = "0x25E1CC0", Offset = "0x25E1CC0", VA = "0x25E1CC0", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6002174")]
			[Address(RVA = "0x25E0C40", Offset = "0x25E0C40", VA = "0x25E0C40")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6002175")]
			[Address(RVA = "0x25E0F4C", Offset = "0x25E0F4C", VA = "0x25E0F4C")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002176")]
			[Address(RVA = "0x25E1EE0", Offset = "0x25E1EE0", VA = "0x25E1EE0")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, Color color)
			{
			}

			[Token(Token = "0x6002177")]
			[Address(RVA = "0x25DF92C", Offset = "0x25DF92C", VA = "0x25DF92C")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200050F")]
		public abstract class BodyPart
		{
			[Token(Token = "0x40020C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8DB68", Offset = "0xD8DB68")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x40020C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8DB78", Offset = "0xD8DB78")]
			private float <mag>k__BackingField;

			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			protected int LOD;

			[Token(Token = "0x17000415")]
			public float sqrMag
			{
				[Token(Token = "0x600217D")]
				[Address(RVA = "0x25E20A0", Offset = "0x25E20A0", VA = "0x25E20A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9752C", Offset = "0xD9752C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600217E")]
				[Address(RVA = "0x25E20A8", Offset = "0x25E20A8", VA = "0x25E20A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9753C", Offset = "0xD9753C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000416")]
			public float mag
			{
				[Token(Token = "0x600217F")]
				[Address(RVA = "0x25E20B0", Offset = "0x25E20B0", VA = "0x25E20B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9754C", Offset = "0xD9754C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002180")]
				[Address(RVA = "0x25E20B8", Offset = "0x25E20B8", VA = "0x25E20B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9755C", Offset = "0xD9755C")]
				private set
				{
				}
			}

			[Token(Token = "0x6002178")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x6002179")]
			public abstract void PreSolve();

			[Token(Token = "0x600217A")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x600217B")]
			public abstract void ApplyOffsets();

			[Token(Token = "0x600217C")]
			public abstract void ResetOffsets();

			[Token(Token = "0x6002181")]
			[Address(RVA = "0x25E20C0", Offset = "0x25E20C0", VA = "0x25E20C0")]
			public void SetLOD(int LOD)
			{
			}

			[Token(Token = "0x6002182")]
			[Address(RVA = "0x25D0910", Offset = "0x25D0910", VA = "0x25D0910")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6002183")]
			[Address(RVA = "0x25E23B4", Offset = "0x25E23B4", VA = "0x25E23B4")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x6002184")]
			[Address(RVA = "0x25E2520", Offset = "0x25E2520", VA = "0x25E2520")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x6002185")]
			[Address(RVA = "0x25E27B0", Offset = "0x25E27B0", VA = "0x25E27B0")]
			public void Translate(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6002186")]
			[Address(RVA = "0x25DD844", Offset = "0x25DD844", VA = "0x25DD844")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x6002187")]
			[Address(RVA = "0x25E1AB0", Offset = "0x25E1AB0", VA = "0x25E1AB0")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x6002188")]
			[Address(RVA = "0x25E2804", Offset = "0x25E2804", VA = "0x25E2804")]
			public void Visualize(Color color)
			{
			}

			[Token(Token = "0x6002189")]
			[Address(RVA = "0x25E2948", Offset = "0x25E2948", VA = "0x25E2948")]
			public void Visualize()
			{
			}

			[Token(Token = "0x600218A")]
			[Address(RVA = "0x25E2008", Offset = "0x25E2008", VA = "0x25E2008")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000510")]
		public class Footstep
		{
			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8DB98", Offset = "0xD8DB98")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x17000417")]
			public bool isStepping
			{
				[Token(Token = "0x600218B")]
				[Address(RVA = "0x25E2970", Offset = "0x25E2970", VA = "0x25E2970")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000418")]
			public float stepProgress
			{
				[Token(Token = "0x600218C")]
				[Address(RVA = "0x25E2984", Offset = "0x25E2984", VA = "0x25E2984")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9756C", Offset = "0xD9756C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600218D")]
				[Address(RVA = "0x25E298C", Offset = "0x25E298C", VA = "0x25E298C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9757C", Offset = "0xD9757C")]
				private set
				{
				}
			}

			[Token(Token = "0x600218E")]
			[Address(RVA = "0x25E2994", Offset = "0x25E2994", VA = "0x25E2994")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x600218F")]
			[Address(RVA = "0x25E2B24", Offset = "0x25E2B24", VA = "0x25E2B24")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x6002190")]
			[Address(RVA = "0x25E2B6C", Offset = "0x25E2B6C", VA = "0x25E2B6C")]
			public void StepTo(Vector3 p, Quaternion rootRotation, float stepThreshold)
			{
			}

			[Token(Token = "0x6002191")]
			[Address(RVA = "0x25E2D2C", Offset = "0x25E2D2C", VA = "0x25E2D2C")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x6002192")]
			[Address(RVA = "0x25E2F04", Offset = "0x25E2F04", VA = "0x25E2F04")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x6002193")]
			[Address(RVA = "0x25E30F0", Offset = "0x25E30F0", VA = "0x25E30F0")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000511")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DBA8", Offset = "0xD8DBA8")]
			public Transform target;

			[Token(Token = "0x40020DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DBE0", Offset = "0xD8DBE0")]
			public Transform bendGoal;

			[Token(Token = "0x40020DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DC18", Offset = "0xD8DC18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8DC18", Offset = "0xD8DC18")]
			public float positionWeight;

			[Token(Token = "0x40020DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DC6C", Offset = "0xD8DC6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8DC6C", Offset = "0xD8DC6C")]
			public float rotationWeight;

			[Token(Token = "0x40020DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DCC0", Offset = "0xD8DCC0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8DCC0", Offset = "0xD8DCC0")]
			public float bendGoalWeight;

			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DD14", Offset = "0xD8DD14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8DD14", Offset = "0xD8DD14")]
			public float swivelOffset;

			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DD70", Offset = "0xD8DD70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8DD70", Offset = "0xD8DD70")]
			public float bendToTargetWeight;

			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DDC4", Offset = "0xD8DDC4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8DDC4", Offset = "0xD8DDC4")]
			public float legLengthMlp;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DE1C", Offset = "0xD8DE1C")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public bool useAnimatedBendNormal;

			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8DEC4", Offset = "0xD8DEC4")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8DED4", Offset = "0xD8DED4")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8DEE4", Offset = "0xD8DEE4")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8DEF4", Offset = "0xD8DEF4")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private Vector3 footPosition;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Quaternion footRotation;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private Vector3 bendNormal;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x17000419")]
			public Vector3 position
			{
				[Token(Token = "0x6002194")]
				[Address(RVA = "0x25E330C", Offset = "0x25E330C", VA = "0x25E330C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9758C", Offset = "0xD9758C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002195")]
				[Address(RVA = "0x25E3318", Offset = "0x25E3318", VA = "0x25E3318")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9759C", Offset = "0xD9759C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700041A")]
			public Quaternion rotation
			{
				[Token(Token = "0x6002196")]
				[Address(RVA = "0x25E3324", Offset = "0x25E3324", VA = "0x25E3324")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD975AC", Offset = "0xD975AC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6002197")]
				[Address(RVA = "0x25E3330", Offset = "0x25E3330", VA = "0x25E3330")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD975BC", Offset = "0xD975BC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700041B")]
			public bool hasToes
			{
				[Token(Token = "0x6002198")]
				[Address(RVA = "0x25E333C", Offset = "0x25E333C", VA = "0x25E333C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD975CC", Offset = "0xD975CC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002199")]
				[Address(RVA = "0x25E3344", Offset = "0x25E3344", VA = "0x25E3344")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD975DC", Offset = "0xD975DC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700041C")]
			public VirtualBone thigh
			{
				[Token(Token = "0x600219A")]
				[Address(RVA = "0x25E3350", Offset = "0x25E3350", VA = "0x25E3350")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041D")]
			private VirtualBone calf
			{
				[Token(Token = "0x600219B")]
				[Address(RVA = "0x25E3384", Offset = "0x25E3384", VA = "0x25E3384")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041E")]
			private VirtualBone foot
			{
				[Token(Token = "0x600219C")]
				[Address(RVA = "0x25E33BC", Offset = "0x25E33BC", VA = "0x25E33BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041F")]
			private VirtualBone toes
			{
				[Token(Token = "0x600219D")]
				[Address(RVA = "0x25E33F4", Offset = "0x25E33F4", VA = "0x25E33F4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000420")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x600219E")]
				[Address(RVA = "0x25DD698", Offset = "0x25DD698", VA = "0x25DD698")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000421")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x600219F")]
				[Address(RVA = "0x25E342C", Offset = "0x25E342C", VA = "0x25E342C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD975EC", Offset = "0xD975EC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60021A0")]
				[Address(RVA = "0x25E3438", Offset = "0x25E3438", VA = "0x25E3438")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD975FC", Offset = "0xD975FC")]
				private set
				{
				}
			}

			[Token(Token = "0x60021A1")]
			[Address(RVA = "0x25E3444", Offset = "0x25E3444", VA = "0x25E3444", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x60021A2")]
			[Address(RVA = "0x25E3A60", Offset = "0x25E3A60", VA = "0x25E3A60", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x60021A3")]
			[Address(RVA = "0x25E4348", Offset = "0x25E4348", VA = "0x25E4348", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x60021A4")]
			[Address(RVA = "0x25E4244", Offset = "0x25E4244", VA = "0x25E4244")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x60021A5")]
			[Address(RVA = "0x25E400C", Offset = "0x25E400C", VA = "0x25E400C")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x60021A6")]
			[Address(RVA = "0x25D06F0", Offset = "0x25D06F0", VA = "0x25D06F0")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x60021A7")]
			[Address(RVA = "0x25E4E2C", Offset = "0x25E4E2C", VA = "0x25E4E2C")]
			private void FixTwistRotations()
			{
			}

			[Token(Token = "0x60021A8")]
			[Address(RVA = "0x25E4900", Offset = "0x25E4900", VA = "0x25E4900")]
			private void Stretching()
			{
			}

			[Token(Token = "0x60021A9")]
			[Address(RVA = "0x25E5294", Offset = "0x25E5294", VA = "0x25E5294", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x60021AA")]
			[Address(RVA = "0x25E54B0", Offset = "0x25E54B0", VA = "0x25E54B0", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x25D0B34", Offset = "0x25D0B34", VA = "0x25D0B34")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000512")]
		public class Locomotion
		{
			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DF04", Offset = "0xD8DF04")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8DF04", Offset = "0xD8DF04")]
			public float weight;

			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DF58", Offset = "0xD8DF58")]
			public float footDistance;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DF90", Offset = "0xD8DF90")]
			public float stepThreshold;

			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8DFC8", Offset = "0xD8DFC8")]
			public float angleThreshold;

			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E000", Offset = "0xD8E000")]
			public float comAngleMlp;

			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E038", Offset = "0xD8E038")]
			public float maxVelocity;

			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E070", Offset = "0xD8E070")]
			public float velocityFactor;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E0A8", Offset = "0xD8E0A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E0A8", Offset = "0xD8E0A8")]
			public float maxLegStretch;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E100", Offset = "0xD8E100")]
			public float rootSpeed;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E138", Offset = "0xD8E138")]
			public float stepSpeed;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E170", Offset = "0xD8E170")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E1A8", Offset = "0xD8E1A8")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E1E0", Offset = "0xD8E1E0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E1E0", Offset = "0xD8E1E0")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E238", Offset = "0xD8E238")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E270", Offset = "0xD8E270")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E2A8", Offset = "0xD8E2A8")]
			public Vector3 offset;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E320", Offset = "0xD8E320")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E358", Offset = "0xD8E358")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8E390", Offset = "0xD8E390")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Footstep[] footsteps;

			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Vector3 lastComPosition;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private Vector3 comVelocity;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private int leftFootIndex;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			private int rightFootIndex;

			[Token(Token = "0x17000422")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x60021AC")]
				[Address(RVA = "0x25E5560", Offset = "0x25E5560", VA = "0x25E5560")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9760C", Offset = "0xD9760C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60021AD")]
				[Address(RVA = "0x25E556C", Offset = "0x25E556C", VA = "0x25E556C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9761C", Offset = "0xD9761C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000423")]
			public Vector3 leftFootstepPosition
			{
				[Token(Token = "0x60021B3")]
				[Address(RVA = "0x25E59AC", Offset = "0x25E59AC", VA = "0x25E59AC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000424")]
			public Vector3 rightFootstepPosition
			{
				[Token(Token = "0x60021B4")]
				[Address(RVA = "0x25E59EC", Offset = "0x25E59EC", VA = "0x25E59EC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000425")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x60021B5")]
				[Address(RVA = "0x25E5A30", Offset = "0x25E5A30", VA = "0x25E5A30")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x17000426")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x60021B6")]
				[Address(RVA = "0x25E5A70", Offset = "0x25E5A70", VA = "0x25E5A70")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x25DB814", Offset = "0x25DB814", VA = "0x25DB814")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes)
			{
			}

			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x25D8FF4", Offset = "0x25D8FF4", VA = "0x25D8FF4")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x25D8404", Offset = "0x25D8404", VA = "0x25D8404")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x25D8254", Offset = "0x25D8254", VA = "0x25D8254")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x25DC130", Offset = "0x25DC130", VA = "0x25DC130")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset)
			{
			}

			[Token(Token = "0x60021B7")]
			[Address(RVA = "0x25E55B8", Offset = "0x25E55B8", VA = "0x25E55B8")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x60021B8")]
			[Address(RVA = "0x25E575C", Offset = "0x25E575C", VA = "0x25E575C")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x25E57E0", Offset = "0x25E57E0", VA = "0x25E57E0")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x60021BA")]
			[Address(RVA = "0x25DFA54", Offset = "0x25DFA54", VA = "0x25DFA54")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000513")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E3A0", Offset = "0xD8E3A0")]
			public Transform headTarget;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E3D8", Offset = "0xD8E3D8")]
			public Transform pelvisTarget;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E410", Offset = "0xD8E410")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E410", Offset = "0xD8E410")]
			public float positionWeight;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E464", Offset = "0xD8E464")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E464", Offset = "0xD8E464")]
			public float rotationWeight;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E4B8", Offset = "0xD8E4B8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E4B8", Offset = "0xD8E4B8")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E50C", Offset = "0xD8E50C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E50C", Offset = "0xD8E50C")]
			public float pelvisRotationWeight;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E560", Offset = "0xD8E560")]
			public Transform chestGoal;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E598", Offset = "0xD8E598")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E598", Offset = "0xD8E598")]
			public float chestGoalWeight;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E5EC", Offset = "0xD8E5EC")]
			public float minHeadHeight;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E624", Offset = "0xD8E624")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E624", Offset = "0xD8E624")]
			public float bodyPosStiffness;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E678", Offset = "0xD8E678")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E678", Offset = "0xD8E678")]
			public float bodyRotStiffness;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E6CC", Offset = "0xD8E6CC")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xD8E6CC", Offset = "0xD8E6CC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E6CC", Offset = "0xD8E6CC")]
			public float neckStiffness;

			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E744", Offset = "0xD8E744")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E744", Offset = "0xD8E744")]
			public float rotateChestByHands;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E798", Offset = "0xD8E798")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E798", Offset = "0xD8E798")]
			public float chestClampWeight;

			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E7EC", Offset = "0xD8E7EC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E7EC", Offset = "0xD8E7EC")]
			public float headClampWeight;

			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E840", Offset = "0xD8E840")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E878", Offset = "0xD8E878")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E878", Offset = "0xD8E878")]
			public float maintainPelvisPosition;

			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E8CC", Offset = "0xD8E8CC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E8CC", Offset = "0xD8E8CC")]
			public float maxRootAngle;

			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8E924", Offset = "0xD8E924")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8E924", Offset = "0xD8E924")]
			public float rootHeadingOffset;

			[NonSerialized]
			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x4002127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8EA60", Offset = "0xD8EA60")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8EA70", Offset = "0xD8EA70")]
			private Quaternion <anchorRelativeToHead>k__BackingField;

			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			private Quaternion headRotation;

			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int pelvisIndex;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int spineIndex;

			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int chestIndex;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int neckIndex;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private int headIndex;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private float length;

			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private bool hasChest;

			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
			private bool hasNeck;

			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
			private bool hasLegs;

			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float headHeight;

			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private float sizeMlp;

			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
			private Vector3 chestForward;

			[Token(Token = "0x17000427")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x60021BB")]
				[Address(RVA = "0x25D9268", Offset = "0x25D9268", VA = "0x25D9268")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000428")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x60021BC")]
				[Address(RVA = "0x25E5AB4", Offset = "0x25E5AB4", VA = "0x25E5AB4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000429")]
			public VirtualBone chest
			{
				[Token(Token = "0x60021BD")]
				[Address(RVA = "0x25DDA30", Offset = "0x25DDA30", VA = "0x25DDA30")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042A")]
			private VirtualBone neck
			{
				[Token(Token = "0x60021BE")]
				[Address(RVA = "0x25E5AF4", Offset = "0x25E5AF4", VA = "0x25E5AF4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			public VirtualBone head
			{
				[Token(Token = "0x60021BF")]
				[Address(RVA = "0x25E5578", Offset = "0x25E5578", VA = "0x25E5578")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042C")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x60021C0")]
				[Address(RVA = "0x25E5B34", Offset = "0x25E5B34", VA = "0x25E5B34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9762C", Offset = "0xD9762C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60021C1")]
				[Address(RVA = "0x25E5B48", Offset = "0x25E5B48", VA = "0x25E5B48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9763C", Offset = "0xD9763C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700042D")]
			public Quaternion anchorRelativeToHead
			{
				[Token(Token = "0x60021C2")]
				[Address(RVA = "0x25E5B5C", Offset = "0x25E5B5C", VA = "0x25E5B5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9764C", Offset = "0xD9764C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60021C3")]
				[Address(RVA = "0x25E5B70", Offset = "0x25E5B70", VA = "0x25E5B70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9765C", Offset = "0xD9765C")]
				private set
				{
				}
			}

			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x25E5B84", Offset = "0x25E5B84", VA = "0x25E5B84", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x60021C5")]
			[Address(RVA = "0x25E6650", Offset = "0x25E6650", VA = "0x25E6650", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x25E6860", Offset = "0x25E6860", VA = "0x25E6860", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x25E6ED8", Offset = "0x25E6ED8", VA = "0x25E6ED8")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x25DBB0C", Offset = "0x25DBB0C", VA = "0x25DBB0C")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms)
			{
			}

			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x25E78B4", Offset = "0x25E78B4", VA = "0x25E78B4")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp, float weight)
			{
			}

			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x25E7F74", Offset = "0x25E7F74", VA = "0x25E7F74")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x25E875C", Offset = "0x25E875C", VA = "0x25E875C", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x25E8938", Offset = "0x25E8938", VA = "0x25E8938", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x25E7108", Offset = "0x25E7108", VA = "0x25E7108")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x25DD6D8", Offset = "0x25DD6D8", VA = "0x25DD6D8")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x25E7498", Offset = "0x25E7498", VA = "0x25E7498")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation)
			{
			}

			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x25E8A34", Offset = "0x25E8A34", VA = "0x25E8A34")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x25E7D28", Offset = "0x25E7D28", VA = "0x25E7D28")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x25E7A74", Offset = "0x25E7A74", VA = "0x25E7A74")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x25DF778", Offset = "0x25DF778", VA = "0x25DF778")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000514")]
		public enum PositionOffset
		{
			[Token(Token = "0x4002148")]
			Pelvis,
			[Token(Token = "0x4002149")]
			Chest,
			[Token(Token = "0x400214A")]
			Head,
			[Token(Token = "0x400214B")]
			LeftHand,
			[Token(Token = "0x400214C")]
			RightHand,
			[Token(Token = "0x400214D")]
			LeftFoot,
			[Token(Token = "0x400214E")]
			RightFoot,
			[Token(Token = "0x400214F")]
			LeftHeel,
			[Token(Token = "0x4002150")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x2000515")]
		public enum RotationOffset
		{
			[Token(Token = "0x4002152")]
			Pelvis,
			[Token(Token = "0x4002153")]
			Chest,
			[Token(Token = "0x4002154")]
			Head
		}

		[Serializable]
		[Token(Token = "0x2000516")]
		public class VirtualBone
		{
			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x25DB778", Offset = "0x25DB778", VA = "0x25DB778")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60021D5")]
			[Address(RVA = "0x25DB7F4", Offset = "0x25DB7F4", VA = "0x25DB7F4")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60021D6")]
			[Address(RVA = "0x25E8D5C", Offset = "0x25E8D5C", VA = "0x25E8D5C")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x60021D7")]
			[Address(RVA = "0x25E20C8", Offset = "0x25E20C8", VA = "0x25E20C8")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x60021D8")]
			[Address(RVA = "0x25E25C8", Offset = "0x25E25C8", VA = "0x25E25C8")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x60021D9")]
			[Address(RVA = "0x25E8FEC", Offset = "0x25E8FEC", VA = "0x25E8FEC")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x60021DA")]
			[Address(RVA = "0x25E0D18", Offset = "0x25E0D18", VA = "0x25E0D18")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x60021DB")]
			[Address(RVA = "0x25E9224", Offset = "0x25E9224", VA = "0x25E9224")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x60021DC")]
			[Address(RVA = "0x25E1504", Offset = "0x25E1504", VA = "0x25E1504")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x60021DD")]
			[Address(RVA = "0x25E92DC", Offset = "0x25E92DC", VA = "0x25E92DC")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60021DE")]
			[Address(RVA = "0x25E82FC", Offset = "0x25E82FC", VA = "0x25E82FC")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x60021DF")]
			[Address(RVA = "0x25E94F4", Offset = "0x25E94F4", VA = "0x25E94F4")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60021E0")]
			[Address(RVA = "0x25E95FC", Offset = "0x25E95FC", VA = "0x25E95FC")]
			public static void SolveCCD(VirtualBone[] bones, Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int lastLOD;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD894A4", Offset = "0xD894A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD894A4", Offset = "0xD894A4")]
		public int LOD;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD894F8", Offset = "0xD894F8")]
		public bool plantFeet;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD89530", Offset = "0xD89530")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89540", Offset = "0xD89540")]
		public Spine spine;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89578", Offset = "0xD89578")]
		public Arm leftArm;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD895B0", Offset = "0xD895B0")]
		public Arm rightArm;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD895E8", Offset = "0xD895E8")]
		public Leg leftLeg;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89620", Offset = "0xD89620")]
		public Leg rightLeg;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89658", Offset = "0xD89658")]
		public Locomotion locomotion;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Leg[] legs;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Arm[] arms;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 headPosition;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 lastOffset;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 debugPos1;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 debugPos2;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 debugPos3;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector3 debugPos4;

		[Token(Token = "0x17000291")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x25DF5C0", Offset = "0x25DF5C0", VA = "0x25DF5C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD946AC", Offset = "0xD946AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x25DF5C8", Offset = "0x25DF5C8", VA = "0x25DF5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD946BC", Offset = "0xD946BC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x25D6D94", Offset = "0x25D6D94", VA = "0x25D6D94")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x25D71D0", Offset = "0x25D71D0", VA = "0x25D71D0")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x25D7078", Offset = "0x25D7078", VA = "0x25D7078")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x25D7BBC", Offset = "0x25D7BBC", VA = "0x25D7BBC")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x25D7E98", Offset = "0x25D7E98", VA = "0x25D7E98")]
		public void AddRotationOffset(RotationOffset rotationOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x25D7F3C", Offset = "0x25D7F3C", VA = "0x25D7F3C")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x25D80D0", Offset = "0x25D80D0", VA = "0x25D80D0")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x25D87DC", Offset = "0x25D87DC", VA = "0x25D87DC")]
		public void Reset()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x25D92A8", Offset = "0x25D92A8", VA = "0x25D92A8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x25D941C", Offset = "0x25D941C", VA = "0x25D941C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x25D9624", Offset = "0x25D9624", VA = "0x25D9624", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x25D9698", Offset = "0x25D9698", VA = "0x25D9698", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x25D970C", Offset = "0x25D970C", VA = "0x25D970C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x25D9920", Offset = "0x25D9920", VA = "0x25D9920")]
		private Vector3 GetNormal(Transform[] transforms)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x25D7470", Offset = "0x25D7470", VA = "0x25D7470")]
		private Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x25D7648", Offset = "0x25D7648", VA = "0x25D7648")]
		private Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x25D7A98", Offset = "0x25D7A98", VA = "0x25D7A98")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x25D894C", Offset = "0x25D894C", VA = "0x25D894C")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x25D9C00", Offset = "0x25D9C00", VA = "0x25D9C00", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x25D9C48", Offset = "0x25D9C48", VA = "0x25D9C48", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x25DB300", Offset = "0x25DB300", VA = "0x25DB300")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x25D8AB4", Offset = "0x25D8AB4", VA = "0x25D8AB4")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x25DA108", Offset = "0x25DA108", VA = "0x25DA108")]
		private void Solve()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x25DB6EC", Offset = "0x25DB6EC", VA = "0x25DB6EC")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x25DB734", Offset = "0x25DB734", VA = "0x25DB734")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x25DB1B0", Offset = "0x25DB1B0", VA = "0x25DB1B0")]
		private void Write()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x25DEFD8", Offset = "0x25DEFD8", VA = "0x25DEFD8")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x25DF5D0", Offset = "0x25DF5D0", VA = "0x25DF5D0")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class TwistRelaxer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89690", Offset = "0xD89690")]
		public Transform parent;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD896C8", Offset = "0xD896C8")]
		public Transform child;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89700", Offset = "0xD89700")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89700", Offset = "0xD89700")]
		public float weight;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89754", Offset = "0xD89754")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89754", Offset = "0xD89754")]
		public float parentChildCrossfade;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD897A8", Offset = "0xD897A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD897A8", Offset = "0xD897A8")]
		public float twistAngleOffset;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 twistAxis;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 axis;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x1E50128", Offset = "0x1E50128", VA = "0x1E50128")]
		public void Relax()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x1E50508", Offset = "0x1E50508", VA = "0x1E50508")]
		private void Start()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x1E5097C", Offset = "0x1E5097C", VA = "0x1E5097C")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x1E50A04", Offset = "0x1E50A04", VA = "0x1E50A04")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x1E50A8C", Offset = "0x1E50A8C", VA = "0x1E50A8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x1E50B90", Offset = "0x1E50B90", VA = "0x1E50B90")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D1")]
	public class InteractionEffector
	{
		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD89804", Offset = "0xD89804")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD89814", Offset = "0xD89814")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD89824", Offset = "0xD89824")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultBendGoalWeight;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float resetTimer;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool positionWeightUsed;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rotationWeightUsed;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pullUsed;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool reachUsed;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pushUsed;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool pushParentUsed;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool bendGoalWeightUsed;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		private bool pickedUp;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool defaults;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform target;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<bool> triggered;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool started;

		[Token(Token = "0x17000292")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0x1E3CDAC", Offset = "0x1E3CDAC", VA = "0x1E3CDAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD946CC", Offset = "0xD946CC")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x6001748")]
			[Address(RVA = "0x1E3CDB4", Offset = "0x1E3CDB4", VA = "0x1E3CDB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD946DC", Offset = "0xD946DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public bool isPaused
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0x1E3CDBC", Offset = "0x1E3CDBC", VA = "0x1E3CDBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD946EC", Offset = "0xD946EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600174A")]
			[Address(RVA = "0x1E3CDC4", Offset = "0x1E3CDC4", VA = "0x1E3CDC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD946FC", Offset = "0xD946FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x600174B")]
			[Address(RVA = "0x1E3CDD0", Offset = "0x1E3CDD0", VA = "0x1E3CDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9470C", Offset = "0xD9470C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600174C")]
			[Address(RVA = "0x1E3CDD8", Offset = "0x1E3CDD8", VA = "0x1E3CDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9471C", Offset = "0xD9471C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public bool inInteraction
		{
			[Token(Token = "0x600174D")]
			[Address(RVA = "0x1E3CDE0", Offset = "0x1E3CDE0", VA = "0x1E3CDE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000296")]
		public float progress
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0x1E3F7A0", Offset = "0x1E3F7A0", VA = "0x1E3F7A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x1E3CE50", Offset = "0x1E3CE50", VA = "0x1E3CE50")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x1E3CED4", Offset = "0x1E3CED4", VA = "0x1E3CED4")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x1E3CF78", Offset = "0x1E3CF78", VA = "0x1E3CF78")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x1E3D0F0", Offset = "0x1E3D0F0", VA = "0x1E3D0F0")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x1E3D5A0", Offset = "0x1E3D5A0", VA = "0x1E3D5A0")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x1E3D960", Offset = "0x1E3D960", VA = "0x1E3D960")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x1E3D9B4", Offset = "0x1E3D9B4", VA = "0x1E3D9B4")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x1E3E508", Offset = "0x1E3E508", VA = "0x1E3E508")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x1E3EFE8", Offset = "0x1E3EFE8", VA = "0x1E3EFE8")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x1E3F210", Offset = "0x1E3F210", VA = "0x1E3F210")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x1E3F64C", Offset = "0x1E3F64C", VA = "0x1E3F64C")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x1E3FC88", Offset = "0x1E3FC88", VA = "0x1E3FC88")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D2")]
	public class InteractionLookAt
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89834", Offset = "0xD89834")]
		public LookAtIK ik;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8986C", Offset = "0xD8986C")]
		public float lerpSpeed;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD898A4", Offset = "0xD898A4")]
		public float weightSpeed;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x1E3FEEC", Offset = "0x1E3FEEC", VA = "0x1E3FEEC")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x1E40064", Offset = "0x1E40064", VA = "0x1E40064")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x1E4010C", Offset = "0x1E4010C", VA = "0x1E4010C")]
		public void Update()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x1E40350", Offset = "0x1E40350", VA = "0x1E40350")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x1E40448", Offset = "0x1E40448", VA = "0x1E40448")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x1E40514", Offset = "0x1E40514", VA = "0x1E40514")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7EA9C", Offset = "0xD7EA9C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7EA9C", Offset = "0xD7EA9C")]
	public class InteractionObject : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000517")]
		public class InteractionEvent
		{
			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EA80", Offset = "0xD8EA80")]
			public float time;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EAB8", Offset = "0xD8EAB8")]
			public bool pause;

			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EAF0", Offset = "0xD8EAF0")]
			public bool pickUp;

			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EB28", Offset = "0xD8EB28")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EB60", Offset = "0xD8EB60")]
			public Message[] messages;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EB98", Offset = "0xD8EB98")]
			public UnityEvent unityEvent;

			[Token(Token = "0x60021E1")]
			[Address(RVA = "0x1E3F7DC", Offset = "0x1E3F7DC", VA = "0x1E3F7DC")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x60021E2")]
			[Address(RVA = "0x1E41830", Offset = "0x1E41830", VA = "0x1E41830")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000518")]
		public class Message
		{
			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EBD0", Offset = "0xD8EBD0")]
			public string function;

			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EC08", Offset = "0xD8EC08")]
			public GameObject recipient;

			[Token(Token = "0x4002164")]
			private const string empty = "";

			[Token(Token = "0x60021E3")]
			[Address(RVA = "0x1E41740", Offset = "0x1E41740", VA = "0x1E41740")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x60021E4")]
			[Address(RVA = "0x1E41838", Offset = "0x1E41838", VA = "0x1E41838")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000519")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EC40", Offset = "0xD8EC40")]
			public Animator animator;

			[Token(Token = "0x4002166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EC78", Offset = "0xD8EC78")]
			public Animation animation;

			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ECB0", Offset = "0xD8ECB0")]
			public string animationState;

			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ECE8", Offset = "0xD8ECE8")]
			public float crossfadeTime;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ED20", Offset = "0xD8ED20")]
			public int layer;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ED58", Offset = "0xD8ED58")]
			public bool resetNormalizedTime;

			[Token(Token = "0x400216B")]
			private const string empty = "";

			[Token(Token = "0x60021E5")]
			[Address(RVA = "0x1E414A0", Offset = "0x1E414A0", VA = "0x1E414A0")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x1E41594", Offset = "0x1E41594", VA = "0x1E41594")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x60021E7")]
			[Address(RVA = "0x1E4164C", Offset = "0x1E4164C", VA = "0x1E4164C")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x1E4172C", Offset = "0x1E4172C", VA = "0x1E4172C")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200051A")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x2000585")]
			public enum Type
			{
				[Token(Token = "0x4002301")]
				PositionWeight,
				[Token(Token = "0x4002302")]
				RotationWeight,
				[Token(Token = "0x4002303")]
				PositionOffsetX,
				[Token(Token = "0x4002304")]
				PositionOffsetY,
				[Token(Token = "0x4002305")]
				PositionOffsetZ,
				[Token(Token = "0x4002306")]
				Pull,
				[Token(Token = "0x4002307")]
				Reach,
				[Token(Token = "0x4002308")]
				RotateBoneWeight,
				[Token(Token = "0x4002309")]
				Push,
				[Token(Token = "0x400230A")]
				PushParent,
				[Token(Token = "0x400230B")]
				PoserWeight,
				[Token(Token = "0x400230C")]
				BendGoalWeight
			}

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ED90", Offset = "0xD8ED90")]
			public Type type;

			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EDC8", Offset = "0xD8EDC8")]
			public AnimationCurve curve;

			[Token(Token = "0x60021E9")]
			[Address(RVA = "0x1E40CB8", Offset = "0x1E40CB8", VA = "0x1E40CB8")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x60021EA")]
			[Address(RVA = "0x1E41850", Offset = "0x1E41850", VA = "0x1E41850")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200051B")]
		public class Multiplier
		{
			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EE00", Offset = "0xD8EE00")]
			public WeightCurve.Type curve;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EE38", Offset = "0xD8EE38")]
			public float multiplier;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EE70", Offset = "0xD8EE70")]
			public WeightCurve.Type result;

			[Token(Token = "0x60021EB")]
			[Address(RVA = "0x1E41398", Offset = "0x1E41398", VA = "0x1E41398")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x60021EC")]
			[Address(RVA = "0x1E41840", Offset = "0x1E41840", VA = "0x1E41840")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD898EC", Offset = "0xD898EC")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89924", Offset = "0xD89924")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8995C", Offset = "0xD8995C")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD89994", Offset = "0xD89994")]
		private float <length>k__BackingField;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD899A4", Offset = "0xD899A4")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x17000297")]
		public float length
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0x1E40788", Offset = "0x1E40788", VA = "0x1E40788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD948EC", Offset = "0xD948EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x1E40790", Offset = "0x1E40790", VA = "0x1E40790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD948FC", Offset = "0xD948FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x600176B")]
			[Address(RVA = "0x1E40798", Offset = "0x1E40798", VA = "0x1E40798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9490C", Offset = "0xD9490C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x1E407A0", Offset = "0x1E407A0", VA = "0x1E407A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9491C", Offset = "0xD9491C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x600176E")]
			[Address(RVA = "0x1E409BC", Offset = "0x1E409BC", VA = "0x1E409BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		public Transform targetsRoot
		{
			[Token(Token = "0x6001776")]
			[Address(RVA = "0x1E3FB5C", Offset = "0x1E3FB5C", VA = "0x1E3FB5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x1E40528", Offset = "0x1E40528", VA = "0x1E40528")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9472C", Offset = "0xD9472C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x1E40574", Offset = "0x1E40574", VA = "0x1E40574")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94764", Offset = "0xD94764")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1E405C0", Offset = "0x1E405C0", VA = "0x1E405C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9479C", Offset = "0xD9479C")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1E4060C", Offset = "0x1E4060C", VA = "0x1E4060C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD947D4", Offset = "0xD947D4")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x1E40658", Offset = "0x1E40658", VA = "0x1E40658")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9480C", Offset = "0xD9480C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x1E406A4", Offset = "0x1E406A4", VA = "0x1E406A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94844", Offset = "0xD94844")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1E406F0", Offset = "0x1E406F0", VA = "0x1E406F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9487C", Offset = "0xD9487C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1E4073C", Offset = "0x1E4073C", VA = "0x1E4073C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD948B4", Offset = "0xD948B4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x1E407A8", Offset = "0x1E407A8", VA = "0x1E407A8")]
		public void Initiate()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x1E40A4C", Offset = "0x1E40A4C", VA = "0x1E40A4C")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x1E3DF30", Offset = "0x1E3DF30", VA = "0x1E3DF30")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x1E40BD0", Offset = "0x1E40BD0", VA = "0x1E40BD0")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x1E3DDE4", Offset = "0x1E3DDE4", VA = "0x1E3DDE4")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1E3DF28", Offset = "0x1E3DF28", VA = "0x1E3DF28")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x1E3EBCC", Offset = "0x1E3EBCC", VA = "0x1E3EBCC")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x1E3F424", Offset = "0x1E3F424", VA = "0x1E3F424")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x1E413D4", Offset = "0x1E413D4", VA = "0x1E413D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x1E40CD4", Offset = "0x1E40CD4", VA = "0x1E40CD4")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x1E40BD8", Offset = "0x1E40BD8", VA = "0x1E40BD8")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x1E41330", Offset = "0x1E41330", VA = "0x1E41330")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x1E413D8", Offset = "0x1E413D8", VA = "0x1E413D8")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x1E41440", Offset = "0x1E41440", VA = "0x1E41440")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7EAFC", Offset = "0xD7EAFC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7EAFC", Offset = "0xD7EAFC")]
	public class InteractionSystem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200051C")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x200051D")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD899B4", Offset = "0xD899B4")]
		public string targetTag;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD899EC", Offset = "0xD899EC")]
		public float fadeInTime;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89A24", Offset = "0xD89A24")]
		public float speed;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89A5C", Offset = "0xD89A5C")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD89A94", Offset = "0xD89A94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89A94", Offset = "0xD89A94")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xD89A94", Offset = "0xD89A94")]
		public Collider characterCollider;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89B18", Offset = "0xD89B18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xD89B18", Offset = "0xD89B18")]
		public Transform FPSCamera;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89B78", Offset = "0xD89B78")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89BB0", Offset = "0xD89BB0")]
		public float camRaycastDistance;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD89BE8", Offset = "0xD89BE8")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD89BF8", Offset = "0xD89BF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89BF8", Offset = "0xD89BF8")]
		[SerializeField]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89C58", Offset = "0xD89C58")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool initiated;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x1700029B")]
		public bool inInteraction
		{
			[Token(Token = "0x6001785")]
			[Address(RVA = "0x1E41AB8", Offset = "0x1E41AB8", VA = "0x1E41AB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029C")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x600179F")]
			[Address(RVA = "0x1E436D0", Offset = "0x1E436D0", VA = "0x1E436D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x1E436D8", Offset = "0x1E436D8", VA = "0x1E436D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x1E436E0", Offset = "0x1E436E0", VA = "0x1E436E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD94AEC", Offset = "0xD94AEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0x1E436E8", Offset = "0x1E436E8", VA = "0x1E436E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD94AFC", Offset = "0xD94AFC")]
			private set
			{
			}
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1E41858", Offset = "0x1E41858", VA = "0x1E41858")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9492C", Offset = "0xD9492C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1E418A4", Offset = "0x1E418A4", VA = "0x1E418A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94964", Offset = "0xD94964")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1E418F0", Offset = "0x1E418F0", VA = "0x1E418F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD9499C", Offset = "0xD9499C")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x1E4193C", Offset = "0x1E4193C", VA = "0x1E4193C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD949D4", Offset = "0xD949D4")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x1E41988", Offset = "0x1E41988", VA = "0x1E41988")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94A0C", Offset = "0xD94A0C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x1E419D4", Offset = "0x1E419D4", VA = "0x1E419D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94A44", Offset = "0xD94A44")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x1E41A20", Offset = "0x1E41A20", VA = "0x1E41A20")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94A7C", Offset = "0xD94A7C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x1E41A6C", Offset = "0x1E41A6C", VA = "0x1E41A6C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94AB4", Offset = "0xD94AB4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1E41C48", Offset = "0x1E41C48", VA = "0x1E41C48")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x1E41D14", Offset = "0x1E41D14", VA = "0x1E41D14")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x1E41DE0", Offset = "0x1E41DE0", VA = "0x1E41DE0")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x1E41E8C", Offset = "0x1E41E8C", VA = "0x1E41E8C")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x1E41F84", Offset = "0x1E41F84", VA = "0x1E41F84")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x1E420A0", Offset = "0x1E420A0", VA = "0x1E420A0")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x1E42130", Offset = "0x1E42130", VA = "0x1E42130")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x1E421C0", Offset = "0x1E421C0", VA = "0x1E421C0")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x1E42250", Offset = "0x1E42250", VA = "0x1E42250")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x1E422C4", Offset = "0x1E422C4", VA = "0x1E422C4")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x1E42338", Offset = "0x1E42338", VA = "0x1E42338")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x1E423A0", Offset = "0x1E423A0", VA = "0x1E423A0")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x1E4242C", Offset = "0x1E4242C", VA = "0x1E4242C")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x1E424E0", Offset = "0x1E424E0", VA = "0x1E424E0")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x1E425C4", Offset = "0x1E425C4", VA = "0x1E425C4")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x1E42868", Offset = "0x1E42868", VA = "0x1E42868")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x1E42A40", Offset = "0x1E42A40", VA = "0x1E42A40")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x1E42CB4", Offset = "0x1E42CB4", VA = "0x1E42CB4")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1E42FA8", Offset = "0x1E42FA8", VA = "0x1E42FA8")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1E42FEC", Offset = "0x1E42FEC", VA = "0x1E42FEC")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x1E43064", Offset = "0x1E43064", VA = "0x1E43064")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x1E43184", Offset = "0x1E43184", VA = "0x1E43184")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x1E432FC", Offset = "0x1E432FC", VA = "0x1E432FC")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x1E435A4", Offset = "0x1E435A4", VA = "0x1E435A4")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x1E42DB4", Offset = "0x1E42DB4", VA = "0x1E42DB4")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x1E436F0", Offset = "0x1E436F0", VA = "0x1E436F0")]
		public void Start()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x1E43DA4", Offset = "0x1E43DA4", VA = "0x1E43DA4")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x1E43DC4", Offset = "0x1E43DC4", VA = "0x1E43DC4")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x1E43DE0", Offset = "0x1E43DE0", VA = "0x1E43DE0")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x1E43DFC", Offset = "0x1E43DFC", VA = "0x1E43DFC")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x1E43E5C", Offset = "0x1E43E5C", VA = "0x1E43E5C")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x1E43F78", Offset = "0x1E43F78", VA = "0x1E43F78")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1E44074", Offset = "0x1E44074", VA = "0x1E44074")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1E443D4", Offset = "0x1E443D4", VA = "0x1E443D4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x1E444C0", Offset = "0x1E444C0", VA = "0x1E444C0")]
		public void Update()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1E4470C", Offset = "0x1E4470C", VA = "0x1E4470C")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x1E43B1C", Offset = "0x1E43B1C", VA = "0x1E43B1C")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x1E4484C", Offset = "0x1E4484C", VA = "0x1E4484C")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x1E44978", Offset = "0x1E44978", VA = "0x1E44978")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x1E44A10", Offset = "0x1E44A10", VA = "0x1E44A10")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x1E44AE8", Offset = "0x1E44AE8", VA = "0x1E44AE8")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x1E44B00", Offset = "0x1E44B00", VA = "0x1E44B00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x1E41B64", Offset = "0x1E41B64", VA = "0x1E41B64")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x1E42764", Offset = "0x1E42764", VA = "0x1E42764")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x1E44DF0", Offset = "0x1E44DF0", VA = "0x1E44DF0")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7EB5C", Offset = "0xD7EB5C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7EB5C", Offset = "0xD7EB5C")]
	public class InteractionTarget : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200051E")]
		public class Multiplier
		{
			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EEA8", Offset = "0xD8EEA8")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EEE0", Offset = "0xD8EEE0")]
			public float multiplier;

			[Token(Token = "0x60021F5")]
			[Address(RVA = "0x1E45590", Offset = "0x1E45590", VA = "0x1E45590")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89C90", Offset = "0xD89C90")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89CC8", Offset = "0xD89CC8")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89D00", Offset = "0xD89D00")]
		public float interactionSpeedMlp;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89D38", Offset = "0xD89D38")]
		public Transform pivot;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89D70", Offset = "0xD89D70")]
		public Vector3 twistAxis;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89DA8", Offset = "0xD89DA8")]
		public float twistWeight;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89DE0", Offset = "0xD89DE0")]
		public float swingWeight;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89E18", Offset = "0xD89E18")]
		public bool rotateOnce;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform lastPivot;

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x1E452A4", Offset = "0x1E452A4", VA = "0x1E452A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94B0C", Offset = "0xD94B0C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x1E452F0", Offset = "0x1E452F0", VA = "0x1E452F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94B44", Offset = "0xD94B44")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x1E4533C", Offset = "0x1E4533C", VA = "0x1E4533C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94B7C", Offset = "0xD94B7C")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x1E45388", Offset = "0x1E45388", VA = "0x1E45388")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94BB4", Offset = "0xD94BB4")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x1E453D4", Offset = "0x1E453D4", VA = "0x1E453D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94BEC", Offset = "0xD94BEC")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x1E45420", Offset = "0x1E45420", VA = "0x1E45420")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94C24", Offset = "0xD94C24")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x1E4546C", Offset = "0x1E4546C", VA = "0x1E4546C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94C5C", Offset = "0xD94C5C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x1E454B8", Offset = "0x1E454B8", VA = "0x1E454B8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94C94", Offset = "0xD94C94")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1E40C48", Offset = "0x1E40C48", VA = "0x1E40C48")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x1E3FBEC", Offset = "0x1E3FBEC", VA = "0x1E3FBEC")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x1E3DFE4", Offset = "0x1E3DFE4", VA = "0x1E3DFE4")]
		public void RotateTo(Vector3 position)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x1E45504", Offset = "0x1E45504", VA = "0x1E45504")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7EBBC", Offset = "0xD7EBBC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7EBBC", Offset = "0xD7EBBC")]
	public class InteractionTrigger : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200051F")]
		public class CharacterPosition
		{
			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EF18", Offset = "0xD8EF18")]
			public bool use;

			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EF50", Offset = "0xD8EF50")]
			public Vector2 offset;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EF88", Offset = "0xD8EF88")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8EF88", Offset = "0xD8EF88")]
			public float angleOffset;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8EFE4", Offset = "0xD8EFE4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8EFE4", Offset = "0xD8EFE4")]
			public float maxAngle;

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F03C", Offset = "0xD8F03C")]
			public float radius;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F074", Offset = "0xD8F074")]
			public bool orbit;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F0AC", Offset = "0xD8F0AC")]
			public bool fixYAxis;

			[Token(Token = "0x1700042E")]
			public Vector3 offset3D
			{
				[Token(Token = "0x60021F6")]
				[Address(RVA = "0x1E45DB0", Offset = "0x1E45DB0", VA = "0x1E45DB0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700042F")]
			public Vector3 direction3D
			{
				[Token(Token = "0x60021F7")]
				[Address(RVA = "0x1E45DEC", Offset = "0x1E45DEC", VA = "0x1E45DEC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x60021F8")]
			[Address(RVA = "0x1E45EE4", Offset = "0x1E45EE4", VA = "0x1E45EE4")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x60021F9")]
			[Address(RVA = "0x1E46560", Offset = "0x1E46560", VA = "0x1E46560")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000520")]
		public class CameraPosition
		{
			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F0E4", Offset = "0xD8F0E4")]
			public Collider lookAtTarget;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F11C", Offset = "0xD8F11C")]
			public Vector3 direction;

			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F154", Offset = "0xD8F154")]
			public float maxDistance;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F18C", Offset = "0xD8F18C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8F18C", Offset = "0xD8F18C")]
			public float maxAngle;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F1E4", Offset = "0xD8F1E4")]
			public bool fixYAxis;

			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x1E4589C", Offset = "0x1E4589C", VA = "0x1E4589C")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x1E45A44", Offset = "0x1E45A44", VA = "0x1E45A44")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x1E45D24", Offset = "0x1E45D24", VA = "0x1E45D24")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000521")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x2000586")]
			public class Interaction
			{
				[Token(Token = "0x400230D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90574", Offset = "0xD90574")]
				public InteractionObject interactionObject;

				[Token(Token = "0x400230E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD905AC", Offset = "0xD905AC")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x6002360")]
				[Address(RVA = "0x1E46584", Offset = "0x1E46584", VA = "0x1E46584")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			[SerializeField]
			public bool show;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F28C", Offset = "0xD8F28C")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F2C4", Offset = "0xD8F2C4")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F2FC", Offset = "0xD8F2FC")]
			public Interaction[] interactions;

			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x1E45718", Offset = "0x1E45718", VA = "0x1E45718")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x60021FE")]
			[Address(RVA = "0x1E46574", Offset = "0x1E46574", VA = "0x1E46574")]
			public Range()
			{
			}
		}

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89E50", Offset = "0xD89E50")]
		public Range[] ranges;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x1E45598", Offset = "0x1E45598", VA = "0x1E45598")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94CCC", Offset = "0xD94CCC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x1E455E4", Offset = "0x1E455E4", VA = "0x1E455E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94D04", Offset = "0xD94D04")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x1E45630", Offset = "0x1E45630", VA = "0x1E45630")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94D3C", Offset = "0xD94D3C")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x1E4567C", Offset = "0x1E4567C", VA = "0x1E4567C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94D74", Offset = "0xD94D74")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1E456C8", Offset = "0x1E456C8", VA = "0x1E456C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94DAC", Offset = "0xD94DAC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1E45714", Offset = "0x1E45714", VA = "0x1E45714")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1E44218", Offset = "0x1E44218", VA = "0x1E44218")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1E4583C", Offset = "0x1E4583C", VA = "0x1E4583C")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x2000522")]
		public class Map
		{
			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x1AE3728", Offset = "0x1AE3728", VA = "0x1AE3728")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x6002200")]
			[Address(RVA = "0x1AE3B2C", Offset = "0x1AE3B2C", VA = "0x1AE3B2C")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6002201")]
			[Address(RVA = "0x1AE3AE0", Offset = "0x1AE3AE0", VA = "0x1AE3AE0")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6002202")]
			[Address(RVA = "0x1AE38D8", Offset = "0x1AE38D8", VA = "0x1AE38D8")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1AE3440", Offset = "0x1AE3440", VA = "0x1AE3440", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94DE4", Offset = "0xD94DE4")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1AE37CC", Offset = "0x1AE37CC", VA = "0x1AE37CC", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1AE37D0", Offset = "0x1AE37D0", VA = "0x1AE37D0", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1AE3A78", Offset = "0x1AE3A78", VA = "0x1AE3A78", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1AE3764", Offset = "0x1AE3764", VA = "0x1AE3764")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1AE3688", Offset = "0x1AE3688", VA = "0x1AE3688")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1AE3B7C", Offset = "0x1AE3B7C", VA = "0x1AE3B7C")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform excluded;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int excludedIndex;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool dontFixRoot;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform[] children;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _poseRoot;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform[] poseChildren;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x21662B4", Offset = "0x21662B4", VA = "0x21662B4", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x2166368", Offset = "0x2166368", VA = "0x2166368", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x2166650", Offset = "0x2166650", VA = "0x2166650", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x2166750", Offset = "0x2166750", VA = "0x2166750", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x21664F4", Offset = "0x21664F4", VA = "0x21664F4")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x2166B00", Offset = "0x2166B00", VA = "0x2166B00")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89E88", Offset = "0xD89E88")]
		public float weight;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89EA0", Offset = "0xD89EA0")]
		public float localRotationWeight;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD89EB8", Offset = "0xD89EB8")]
		public float localPositionWeight;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x60017D8")]
		public abstract void AutoMapping();

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x1E49134", Offset = "0x1E49134", VA = "0x1E49134")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x60017DA")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x60017DB")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x60017DC")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x1E49140", Offset = "0x1E49140", VA = "0x1E49140", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1E49194", Offset = "0x1E49194", VA = "0x1E49194", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1E491D0", Offset = "0x1E491D0", VA = "0x1E491D0", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1E491E8", Offset = "0x1E491E8", VA = "0x1E491E8")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7EC1C", Offset = "0xD7EC1C")]
	public class RagdollUtility : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000523")]
		public class Rigidbone
		{
			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6002203")]
			[Address(RVA = "0x1E4976C", Offset = "0x1E4976C", VA = "0x1E4976C")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6002204")]
			[Address(RVA = "0x1E4A378", Offset = "0x1E4A378", VA = "0x1E4A378")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6002205")]
			[Address(RVA = "0x1E4A15C", Offset = "0x1E4A15C", VA = "0x1E4A15C")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x2000524")]
		public class Child
		{
			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x6002206")]
			[Address(RVA = "0x1E498C8", Offset = "0x1E498C8", VA = "0x1E498C8")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x6002207")]
			[Address(RVA = "0x1E4A514", Offset = "0x1E4A514", VA = "0x1E4A514")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x6002208")]
			[Address(RVA = "0x1E4A4C4", Offset = "0x1E4A4C4", VA = "0x1E4A4C4")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80BF4", Offset = "0xD80BF4")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x17000430")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600220C")]
				[Address(RVA = "0x1E4AAF4", Offset = "0x1E4AAF4", VA = "0x1E4AAF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000431")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600220E")]
				[Address(RVA = "0x1E4AB5C", Offset = "0x1E4AB5C", VA = "0x1E4AB5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002209")]
			[Address(RVA = "0x1E49928", Offset = "0x1E49928", VA = "0x1E49928")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600220A")]
			[Address(RVA = "0x1E4A8AC", Offset = "0x1E4A8AC", VA = "0x1E4A8AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600220B")]
			[Address(RVA = "0x1E4A8B0", Offset = "0x1E4A8B0", VA = "0x1E4A8B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600220D")]
			[Address(RVA = "0x1E4AAFC", Offset = "0x1E4AAFC", VA = "0x1E4AAFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89ED0", Offset = "0xD89ED0")]
		public IK ik;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89F08", Offset = "0xD89F08")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89F40", Offset = "0xD89F40")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89F78", Offset = "0xD89F78")]
		public float applyVelocity;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD89FB0", Offset = "0xD89FB0")]
		public float applyAngularVelocity;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x1700029E")]
		private bool isRagdoll
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x1E49230", Offset = "0x1E49230", VA = "0x1E49230")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029F")]
		private bool ikUsed
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x1E49D14", Offset = "0x1E49D14", VA = "0x1E49D14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1E491F8", Offset = "0x1E491F8", VA = "0x1E491F8")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1E492A8", Offset = "0x1E492A8", VA = "0x1E492A8")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1E493D8", Offset = "0x1E493D8", VA = "0x1E493D8")]
		public void Start()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1E49368", Offset = "0x1E49368", VA = "0x1E49368")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD94E1C", Offset = "0xD94E1C")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x1E49954", Offset = "0x1E49954", VA = "0x1E49954")]
		private void Update()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1E49BA0", Offset = "0x1E49BA0", VA = "0x1E49BA0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1E49C58", Offset = "0x1E49C58", VA = "0x1E49C58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x1E49E98", Offset = "0x1E49E98", VA = "0x1E49E98")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1E49CD8", Offset = "0x1E49CD8", VA = "0x1E49CD8")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1E49E54", Offset = "0x1E49E54", VA = "0x1E49E54")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1E49F34", Offset = "0x1E49F34", VA = "0x1E49F34")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x1E49ECC", Offset = "0x1E49ECC", VA = "0x1E49ECC")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x1E49300", Offset = "0x1E49300", VA = "0x1E49300")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x1E49BE0", Offset = "0x1E49BE0", VA = "0x1E49BE0")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x1E4A6DC", Offset = "0x1E4A6DC", VA = "0x1E4A6DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x1E4A7E0", Offset = "0x1E4A7E0", VA = "0x1E4A7E0")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public abstract class RotationLimit : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD89FF8", Offset = "0xD89FF8")]
		private bool <defaultLocalRotationOverride>k__BackingField;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool initiated;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool applicationQuit;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x170002A0")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x1E4C3E8", Offset = "0x1E4C3E8", VA = "0x1E4C3E8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002A1")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x1E4C424", Offset = "0x1E4C424", VA = "0x1E4C424")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002A2")]
		public bool defaultLocalRotationOverride
		{
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x1E4C4F4", Offset = "0x1E4C4F4", VA = "0x1E4C4F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD94E80", Offset = "0xD94E80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x1E4C4FC", Offset = "0x1E4C4FC", VA = "0x1E4C4FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD94E90", Offset = "0xD94E90")]
			private set
			{
			}
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x1E4C04C", Offset = "0x1E4C04C", VA = "0x1E4C04C")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x1E4C094", Offset = "0x1E4C094", VA = "0x1E4C094")]
		public void SetDefaultLocalRotation(Quaternion localRotation)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x1E4C0AC", Offset = "0x1E4C0AC", VA = "0x1E4C0AC")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x1E4C340", Offset = "0x1E4C340", VA = "0x1E4C340")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x1E4C3B0", Offset = "0x1E4C3B0", VA = "0x1E4C3B0")]
		public void Disable()
		{
		}

		[Token(Token = "0x60017FC")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x1E4C250", Offset = "0x1E4C250", VA = "0x1E4C250")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x1E4C508", Offset = "0x1E4C508", VA = "0x1E4C508")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x1E4C50C", Offset = "0x1E4C50C", VA = "0x1E4C50C")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x1E4C540", Offset = "0x1E4C540", VA = "0x1E4C540")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x1E4C624", Offset = "0x1E4C624", VA = "0x1E4C624")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x1E4C8A0", Offset = "0x1E4C8A0", VA = "0x1E4C8A0")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x1E4C95C", Offset = "0x1E4C95C", VA = "0x1E4C95C")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7EC80", Offset = "0xD7EC80")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7EC80", Offset = "0xD7EC80")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8A008", Offset = "0xD8A008")]
		public float limit;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8A024", Offset = "0xD8A024")]
		public float twistLimit;

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x1E4C9D4", Offset = "0x1E4C9D4", VA = "0x1E4C9D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94EA0", Offset = "0xD94EA0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x1E4CA20", Offset = "0x1E4CA20", VA = "0x1E4CA20")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94ED8", Offset = "0xD94ED8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x1E4CA6C", Offset = "0x1E4CA6C", VA = "0x1E4CA6C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94F10", Offset = "0xD94F10")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x1E4CAB8", Offset = "0x1E4CAB8", VA = "0x1E4CAB8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94F48", Offset = "0xD94F48")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x1E4CB04", Offset = "0x1E4CB04", VA = "0x1E4CB04", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x1E4CBBC", Offset = "0x1E4CBBC", VA = "0x1E4CBBC")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1E4CE04", Offset = "0x1E4CE04", VA = "0x1E4CE04")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7ECE0", Offset = "0xD7ECE0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7ECE0", Offset = "0xD7ECE0")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLimits;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float min;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float max;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion lastRotation;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastAngle;

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x1E4CE14", Offset = "0x1E4CE14", VA = "0x1E4CE14")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94F80", Offset = "0xD94F80")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x1E4CE60", Offset = "0x1E4CE60", VA = "0x1E4CE60")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94FB8", Offset = "0xD94FB8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x1E4CEAC", Offset = "0x1E4CEAC", VA = "0x1E4CEAC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD94FF0", Offset = "0xD94FF0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x1E4CEF8", Offset = "0x1E4CEF8", VA = "0x1E4CEF8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD95028", Offset = "0xD95028")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1E4CF44", Offset = "0x1E4CF44", VA = "0x1E4CF44", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x1E4CF6C", Offset = "0x1E4CF6C", VA = "0x1E4CF6C")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x1E4D26C", Offset = "0x1E4D26C", VA = "0x1E4D26C")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7ED40", Offset = "0xD7ED40")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7ED40", Offset = "0xD7ED40")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x2000526")]
		public class ReachCone
		{
			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x17000432")]
			public Vector3 o
			{
				[Token(Token = "0x600220F")]
				[Address(RVA = "0x1E4F214", Offset = "0x1E4F214", VA = "0x1E4F214")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000433")]
			public Vector3 a
			{
				[Token(Token = "0x6002210")]
				[Address(RVA = "0x1E4F24C", Offset = "0x1E4F24C", VA = "0x1E4F24C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000434")]
			public Vector3 b
			{
				[Token(Token = "0x6002211")]
				[Address(RVA = "0x1E4F288", Offset = "0x1E4F288", VA = "0x1E4F288")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000435")]
			public Vector3 c
			{
				[Token(Token = "0x6002212")]
				[Address(RVA = "0x1E4F2C4", Offset = "0x1E4F2C4", VA = "0x1E4F2C4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000436")]
			public bool isValid
			{
				[Token(Token = "0x6002214")]
				[Address(RVA = "0x1E4E378", Offset = "0x1E4E378", VA = "0x1E4E378")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002213")]
			[Address(RVA = "0x1E4E9C4", Offset = "0x1E4E9C4", VA = "0x1E4E9C4")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x6002215")]
			[Address(RVA = "0x1E4EB24", Offset = "0x1E4EB24", VA = "0x1E4EB24")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000527")]
		public class LimitPoint
		{
			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x6002216")]
			[Address(RVA = "0x1E4E388", Offset = "0x1E4E388", VA = "0x1E4E388")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8A050", Offset = "0xD8A050")]
		public float twistLimit;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8A06C", Offset = "0xD8A06C")]
		public int smoothIterations;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		public Vector3[] P;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1E4D2F4", Offset = "0x1E4D2F4", VA = "0x1E4D2F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD95060", Offset = "0xD95060")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1E4D340", Offset = "0x1E4D340", VA = "0x1E4D340")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD95098", Offset = "0xD95098")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1E4D38C", Offset = "0x1E4D38C", VA = "0x1E4D38C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD950D0", Offset = "0xD950D0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1E4D3D8", Offset = "0x1E4D3D8", VA = "0x1E4D3D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD95108", Offset = "0xD95108")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1E4D424", Offset = "0x1E4D424", VA = "0x1E4D424")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1E4D90C", Offset = "0x1E4D90C", VA = "0x1E4D90C", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x1E4DA04", Offset = "0x1E4DA04", VA = "0x1E4DA04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x1E4DFC4", Offset = "0x1E4DFC4", VA = "0x1E4DFC4")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x1E4D4C4", Offset = "0x1E4D4C4", VA = "0x1E4D4C4")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x1E4E40C", Offset = "0x1E4E40C", VA = "0x1E4E40C")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1E4ECE4", Offset = "0x1E4ECE4", VA = "0x1E4ECE4")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x1E4ED28", Offset = "0x1E4ED28", VA = "0x1E4ED28")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1E4EE70", Offset = "0x1E4EE70", VA = "0x1E4EE70")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1E4DC88", Offset = "0x1E4DC88", VA = "0x1E4DC88")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1E4F000", Offset = "0x1E4F000", VA = "0x1E4F000")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1E4F1B0", Offset = "0x1E4F1B0", VA = "0x1E4F1B0")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD7EDA0", Offset = "0xD7EDA0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD7EDA0", Offset = "0xD7EDA0")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8A12C", Offset = "0xD8A12C")]
		public float twistLimit;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1E4F300", Offset = "0x1E4F300", VA = "0x1E4F300")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD95140", Offset = "0xD95140")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x1E4F34C", Offset = "0x1E4F34C", VA = "0x1E4F34C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD95178", Offset = "0xD95178")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1E4F398", Offset = "0x1E4F398", VA = "0x1E4F398")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD951B0", Offset = "0xD951B0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x1E4F3E4", Offset = "0x1E4F3E4", VA = "0x1E4F3E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD951E8", Offset = "0xD951E8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1E4F430", Offset = "0x1E4F430", VA = "0x1E4F430")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x1E4F44C", Offset = "0x1E4F44C", VA = "0x1E4F44C", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1E4F504", Offset = "0x1E4F504", VA = "0x1E4F504")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x1E4F830", Offset = "0x1E4F830", VA = "0x1E4F830")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class AimController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80C04", Offset = "0xD80C04")]
		private sealed class <TurnToTarget>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x17000437")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600221A")]
				[Address(RVA = "0x1AD725C", Offset = "0x1AD725C", VA = "0x1AD725C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000438")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600221C")]
				[Address(RVA = "0x1AD72C4", Offset = "0x1AD72C4", VA = "0x1AD72C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002217")]
			[Address(RVA = "0x1AD7038", Offset = "0x1AD7038", VA = "0x1AD7038")]
			[DebuggerHidden]
			public <TurnToTarget>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002218")]
			[Address(RVA = "0x1AD7138", Offset = "0x1AD7138", VA = "0x1AD7138", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002219")]
			[Address(RVA = "0x1AD713C", Offset = "0x1AD713C", VA = "0x1AD713C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600221B")]
			[Address(RVA = "0x1AD7264", Offset = "0x1AD7264", VA = "0x1AD7264", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A180", Offset = "0xD8A180")]
		public AimIK ik;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A1B8", Offset = "0xD8A1B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8A1B8", Offset = "0xD8A1B8")]
		public float weight;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8A20C", Offset = "0xD8A20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A20C", Offset = "0xD8A20C")]
		public Transform target;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A26C", Offset = "0xD8A26C")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A2A4", Offset = "0xD8A2A4")]
		public float weightSmoothTime;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8A2DC", Offset = "0xD8A2DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A2DC", Offset = "0xD8A2DC")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A33C", Offset = "0xD8A33C")]
		public float maxRadiansDelta;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A374", Offset = "0xD8A374")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A3AC", Offset = "0xD8A3AC")]
		public float slerpSpeed;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A3E4", Offset = "0xD8A3E4")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A41C", Offset = "0xD8A41C")]
		public float minDistance;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A454", Offset = "0xD8A454")]
		public Vector3 offset;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8A48C", Offset = "0xD8A48C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A48C", Offset = "0xD8A48C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8A48C", Offset = "0xD8A48C")]
		public float maxRootAngle;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A508", Offset = "0xD8A508")]
		public bool turnToTarget;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A540", Offset = "0xD8A540")]
		public float turnToTargetTime;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8A578", Offset = "0xD8A578")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A578", Offset = "0xD8A578")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A5D8", Offset = "0xD8A5D8")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lastTarget;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float switchWeight;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float switchWeightV;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float weightV;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 lastPosition;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 dir;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool turningToTarget;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float turnToTargetMlp;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float turnToTargetMlpV;

		[Token(Token = "0x170002A3")]
		private Vector3 pivot
		{
			[Token(Token = "0x600182C")]
			[Address(RVA = "0x1AD6238", Offset = "0x1AD6238", VA = "0x1AD6238")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1AD613C", Offset = "0x1AD613C", VA = "0x1AD613C")]
		private void Start()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x1AD6384", Offset = "0x1AD6384", VA = "0x1AD6384")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x1AD6ABC", Offset = "0x1AD6ABC", VA = "0x1AD6ABC")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x1AD6C58", Offset = "0x1AD6C58", VA = "0x1AD6C58")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1AD6FC8", Offset = "0x1AD6FC8", VA = "0x1AD6FC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD95220", Offset = "0xD95220")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x1AD7064", Offset = "0x1AD7064", VA = "0x1AD7064")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class AimPoser : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000529")]
		public class Pose
		{
			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x600221D")]
			[Address(RVA = "0x1AD74B8", Offset = "0x1AD74B8", VA = "0x1AD74B8")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x600221E")]
			[Address(RVA = "0x1AD77B8", Offset = "0x1AD77B8", VA = "0x1AD77B8")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x600221F")]
			[Address(RVA = "0x1AD77C0", Offset = "0x1AD77C0", VA = "0x1AD77C0")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x1AD1CA8", Offset = "0x1AD1CA8", VA = "0x1AD1CA8")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x1AD1D84", Offset = "0x1AD1D84", VA = "0x1AD1D84")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x1AD7750", Offset = "0x1AD7750", VA = "0x1AD7750")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200052A")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000587")]
			public class EffectorLink
			{
				[Token(Token = "0x400230F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD905E4", Offset = "0xD905E4")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002310")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD9061C", Offset = "0xD9061C")]
				public float weight;

				[Token(Token = "0x6002361")]
				[Address(RVA = "0x1AD7DB0", Offset = "0x1AD7DB0", VA = "0x1AD7DB0")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F334", Offset = "0xD8F334")]
			public Transform transform;

			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F36C", Offset = "0xD8F36C")]
			public Transform relativeTo;

			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F3A4", Offset = "0xD8F3A4")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F3DC", Offset = "0xD8F3DC")]
			public float verticalWeight;

			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F414", Offset = "0xD8F414")]
			public float horizontalWeight;

			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F44C", Offset = "0xD8F44C")]
			public float speed;

			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x6002220")]
			[Address(RVA = "0x1AD791C", Offset = "0x1AD791C", VA = "0x1AD791C")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x6002221")]
			[Address(RVA = "0x1AD7D88", Offset = "0x1AD7D88", VA = "0x1AD7D88")]
			private static Vector3 Multiply(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002222")]
			[Address(RVA = "0x1AD7D98", Offset = "0x1AD7D98", VA = "0x1AD7D98")]
			public Body()
			{
			}
		}

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A610", Offset = "0xD8A610")]
		public Body[] bodies;

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x1AD77DC", Offset = "0x1AD77DC", VA = "0x1AD77DC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x1AD7D80", Offset = "0x1AD7D80", VA = "0x1AD7D80")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A648", Offset = "0xD8A648")]
		public float tiltSpeed;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A680", Offset = "0xD8A680")]
		public float tiltSensitivity;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A6B8", Offset = "0xD8A6B8")]
		public OffsetPose poseLeft;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A6F0", Offset = "0xD8A6F0")]
		public OffsetPose poseRight;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x1AD92C4", Offset = "0x1AD92C4", VA = "0x1AD92C4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x1AD930C", Offset = "0x1AD930C", VA = "0x1AD930C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x1AD953C", Offset = "0x1AD953C", VA = "0x1AD953C")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[ExecuteInEditMode]
	public class EditorIK : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IK ik;

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1AD9FA4", Offset = "0x1AD9FA4", VA = "0x1AD9FA4")]
		private void Start()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1ADA038", Offset = "0x1ADA038", VA = "0x1ADA038")]
		private void Update()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1ADA108", Offset = "0x1ADA108", VA = "0x1ADA108")]
		public EditorIK()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200052B")]
		public abstract class HitPoint
		{
			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F484", Offset = "0xD8F484")]
			public string name;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F4BC", Offset = "0xD8F4BC")]
			public Collider collider;

			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F4F4", Offset = "0xD8F4F4")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8F540", Offset = "0xD8F540")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8F550", Offset = "0xD8F550")]
			private float <timer>k__BackingField;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8F560", Offset = "0xD8F560")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8F570", Offset = "0xD8F570")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000439")]
			public bool inProgress
			{
				[Token(Token = "0x6002223")]
				[Address(RVA = "0x2166BD4", Offset = "0x2166BD4", VA = "0x2166BD4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700043A")]
			protected float crossFader
			{
				[Token(Token = "0x6002224")]
				[Address(RVA = "0x216717C", Offset = "0x216717C", VA = "0x216717C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9770C", Offset = "0xD9770C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002225")]
				[Address(RVA = "0x2167184", Offset = "0x2167184", VA = "0x2167184")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9771C", Offset = "0xD9771C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700043B")]
			protected float timer
			{
				[Token(Token = "0x6002226")]
				[Address(RVA = "0x216718C", Offset = "0x216718C", VA = "0x216718C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9772C", Offset = "0xD9772C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002227")]
				[Address(RVA = "0x2167194", Offset = "0x2167194", VA = "0x2167194")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9773C", Offset = "0xD9773C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700043C")]
			protected Vector3 force
			{
				[Token(Token = "0x6002228")]
				[Address(RVA = "0x216719C", Offset = "0x216719C", VA = "0x216719C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9774C", Offset = "0xD9774C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002229")]
				[Address(RVA = "0x21671A8", Offset = "0x21671A8", VA = "0x21671A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9775C", Offset = "0xD9775C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700043D")]
			protected Vector3 point
			{
				[Token(Token = "0x600222A")]
				[Address(RVA = "0x21671B4", Offset = "0x21671B4", VA = "0x21671B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9776C", Offset = "0xD9776C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600222B")]
				[Address(RVA = "0x21671C0", Offset = "0x21671C0", VA = "0x21671C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9777C", Offset = "0xD9777C")]
				private set
				{
				}
			}

			[Token(Token = "0x600222C")]
			[Address(RVA = "0x2167048", Offset = "0x2167048", VA = "0x2167048")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x600222D")]
			[Address(RVA = "0x2166CBC", Offset = "0x2166CBC", VA = "0x2166CBC")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x600222E")]
			protected abstract float GetLength();

			[Token(Token = "0x600222F")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6002230")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x6002231")]
			[Address(RVA = "0x21671CC", Offset = "0x21671CC", VA = "0x21671CC")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200052C")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000588")]
			public class EffectorLink
			{
				[Token(Token = "0x4002311")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90654", Offset = "0xD90654")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002312")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD9068C", Offset = "0xD9068C")]
				public float weight;

				[Token(Token = "0x4002313")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4002314")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6002362")]
				[Address(RVA = "0x2167B38", Offset = "0x2167B38", VA = "0x2167B38")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6002363")]
				[Address(RVA = "0x216792C", Offset = "0x216792C", VA = "0x216792C")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002364")]
				[Address(RVA = "0x2167DB0", Offset = "0x2167DB0", VA = "0x2167DB0")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F580", Offset = "0xD8F580")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F5B8", Offset = "0xD8F5B8")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F5F0", Offset = "0xD8F5F0")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6002232")]
			[Address(RVA = "0x2167748", Offset = "0x2167748", VA = "0x2167748", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6002233")]
			[Address(RVA = "0x21678C0", Offset = "0x21678C0", VA = "0x21678C0", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6002234")]
			[Address(RVA = "0x2167940", Offset = "0x2167940", VA = "0x2167940", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6002235")]
			[Address(RVA = "0x2167C5C", Offset = "0x2167C5C", VA = "0x2167C5C")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200052D")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000589")]
			public class BoneLink
			{
				[Token(Token = "0x4002315")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD906C4", Offset = "0xD906C4")]
				public Transform bone;

				[Token(Token = "0x4002316")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD906FC", Offset = "0xD906FC")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD906FC", Offset = "0xD906FC")]
				public float weight;

				[Token(Token = "0x4002317")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x4002318")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x6002365")]
				[Address(RVA = "0x2167550", Offset = "0x2167550", VA = "0x2167550")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6002366")]
				[Address(RVA = "0x21672E8", Offset = "0x21672E8", VA = "0x21672E8")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002367")]
				[Address(RVA = "0x21676C0", Offset = "0x21676C0", VA = "0x21676C0")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F628", Offset = "0xD8F628")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F660", Offset = "0xD8F660")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6002236")]
			[Address(RVA = "0x21671E0", Offset = "0x21671E0", VA = "0x21671E0", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6002237")]
			[Address(RVA = "0x2167284", Offset = "0x2167284", VA = "0x2167284", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6002238")]
			[Address(RVA = "0x21672F4", Offset = "0x21672F4", VA = "0x21672F4", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6002239")]
			[Address(RVA = "0x21676AC", Offset = "0x21676AC", VA = "0x21676AC")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A728", Offset = "0xD8A728")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A760", Offset = "0xD8A760")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x170002A4")]
		public bool inProgress
		{
			[Token(Token = "0x600183C")]
			[Address(RVA = "0x2166B18", Offset = "0x2166B18", VA = "0x2166B18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x2166BE8", Offset = "0x2166BE8", VA = "0x2166BE8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x2166E08", Offset = "0x2166E08", VA = "0x2166E08")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x2167174", Offset = "0x2167174", VA = "0x2167174")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x200052E")]
		public abstract class Offset
		{
			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F698", Offset = "0xD8F698")]
			public string name;

			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F6D0", Offset = "0xD8F6D0")]
			public Collider collider;

			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F708", Offset = "0xD8F708")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8F754", Offset = "0xD8F754")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8F764", Offset = "0xD8F764")]
			private float <timer>k__BackingField;

			[Token(Token = "0x40021C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8F774", Offset = "0xD8F774")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8F784", Offset = "0xD8F784")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x40021C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x40021CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x1700043E")]
			protected float crossFader
			{
				[Token(Token = "0x600223A")]
				[Address(RVA = "0x2168368", Offset = "0x2168368", VA = "0x2168368")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9778C", Offset = "0xD9778C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600223B")]
				[Address(RVA = "0x2168370", Offset = "0x2168370", VA = "0x2168370")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9779C", Offset = "0xD9779C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700043F")]
			protected float timer
			{
				[Token(Token = "0x600223C")]
				[Address(RVA = "0x2168378", Offset = "0x2168378", VA = "0x2168378")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD977AC", Offset = "0xD977AC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600223D")]
				[Address(RVA = "0x2168380", Offset = "0x2168380", VA = "0x2168380")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD977BC", Offset = "0xD977BC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000440")]
			protected Vector3 force
			{
				[Token(Token = "0x600223E")]
				[Address(RVA = "0x2168388", Offset = "0x2168388", VA = "0x2168388")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD977CC", Offset = "0xD977CC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600223F")]
				[Address(RVA = "0x2168394", Offset = "0x2168394", VA = "0x2168394")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD977DC", Offset = "0xD977DC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000441")]
			protected Vector3 point
			{
				[Token(Token = "0x6002240")]
				[Address(RVA = "0x21683A0", Offset = "0x21683A0", VA = "0x21683A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD977EC", Offset = "0xD977EC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002241")]
				[Address(RVA = "0x21683AC", Offset = "0x21683AC", VA = "0x21683AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD977FC", Offset = "0xD977FC")]
				private set
				{
				}
			}

			[Token(Token = "0x6002242")]
			[Address(RVA = "0x2168220", Offset = "0x2168220", VA = "0x2168220")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x6002243")]
			[Address(RVA = "0x2167E84", Offset = "0x2167E84", VA = "0x2167E84")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6002244")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x6002245")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6002246")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x6002247")]
			[Address(RVA = "0x21683B8", Offset = "0x21683B8", VA = "0x21683B8")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200052F")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x200058A")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4002319")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90750", Offset = "0xD90750")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x400231A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90788", Offset = "0xD90788")]
				public float weight;

				[Token(Token = "0x400231B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x400231C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6002368")]
				[Address(RVA = "0x2168874", Offset = "0x2168874", VA = "0x2168874")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6002369")]
				[Address(RVA = "0x2168630", Offset = "0x2168630", VA = "0x2168630")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x600236A")]
				[Address(RVA = "0x2168990", Offset = "0x2168990", VA = "0x2168990")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x40021CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F794", Offset = "0xD8F794")]
			public int forceDirCurveIndex;

			[Token(Token = "0x40021CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F7CC", Offset = "0xD8F7CC")]
			public int upDirCurveIndex;

			[Token(Token = "0x40021CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F804", Offset = "0xD8F804")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x6002248")]
			[Address(RVA = "0x21683CC", Offset = "0x21683CC", VA = "0x21683CC", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6002249")]
			[Address(RVA = "0x21685C4", Offset = "0x21685C4", VA = "0x21685C4", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x600224A")]
			[Address(RVA = "0x2168644", Offset = "0x2168644", VA = "0x2168644", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x600224B")]
			[Address(RVA = "0x2168974", Offset = "0x2168974", VA = "0x2168974")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000530")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x200058B")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x400231D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD907C0", Offset = "0xD907C0")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x400231E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD907F8", Offset = "0xD907F8")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD907F8", Offset = "0xD907F8")]
				public float weight;

				[Token(Token = "0x400231F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x4002320")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x600236B")]
				[Address(RVA = "0x2168DF8", Offset = "0x2168DF8", VA = "0x2168DF8")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x600236C")]
				[Address(RVA = "0x2168AE0", Offset = "0x2168AE0", VA = "0x2168AE0")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x600236D")]
				[Address(RVA = "0x2168F34", Offset = "0x2168F34", VA = "0x2168F34")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x40021CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F83C", Offset = "0xD8F83C")]
			public int curveIndex;

			[Token(Token = "0x40021CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F874", Offset = "0xD8F874")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x40021D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x600224C")]
			[Address(RVA = "0x2168998", Offset = "0x2168998", VA = "0x2168998", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x600224D")]
			[Address(RVA = "0x2168A7C", Offset = "0x2168A7C", VA = "0x2168A7C", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x600224E")]
			[Address(RVA = "0x2168AEC", Offset = "0x2168AEC", VA = "0x2168AEC", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x600224F")]
			[Address(RVA = "0x2168F20", Offset = "0x2168F20", VA = "0x2168F20")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A798", Offset = "0xD8A798")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A7D0", Offset = "0xD8A7D0")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x2167DB8", Offset = "0x2167DB8", VA = "0x2167DB8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x2167FD8", Offset = "0x2167FD8", VA = "0x2167FD8")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x2168360", Offset = "0x2168360", VA = "0x2168360")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000531")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x200058C")]
			public class EffectorLink
			{
				[Token(Token = "0x4002321")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD9084C", Offset = "0xD9084C")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002322")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90884", Offset = "0xD90884")]
				public float weight;

				[Token(Token = "0x600236E")]
				[Address(RVA = "0x1E3CDA4", Offset = "0x1E3CDA4", VA = "0x1E3CDA4")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40021D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F8AC", Offset = "0xD8F8AC")]
			public Transform transform;

			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F8E4", Offset = "0xD8F8E4")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F91C", Offset = "0xD8F91C")]
			public float speed;

			[Token(Token = "0x40021D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F954", Offset = "0xD8F954")]
			public float acceleration;

			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F98C", Offset = "0xD8F98C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8F98C", Offset = "0xD8F98C")]
			public float matchVelocity;

			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8F9E0", Offset = "0xD8F9E0")]
			public float gravity;

			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x6002250")]
			[Address(RVA = "0x1E3C774", Offset = "0x1E3C774", VA = "0x1E3C774")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002251")]
			[Address(RVA = "0x1E3C934", Offset = "0x1E3C934", VA = "0x1E3C934")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x6002252")]
			[Address(RVA = "0x1E3CD88", Offset = "0x1E3CD88", VA = "0x1E3CD88")]
			public Body()
			{
			}
		}

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A808", Offset = "0xD8A808")]
		public Body[] bodies;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A840", Offset = "0xD8A840")]
		public OffsetLimits[] limits;

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x1E3C6FC", Offset = "0x1E3C6FC", VA = "0x1E3C6FC")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x1E3C850", Offset = "0x1E3C850", VA = "0x1E3C850", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x1E3CD68", Offset = "0x1E3CD68", VA = "0x1E3CD68")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class LookAtController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8A878", Offset = "0xD8A878")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A878", Offset = "0xD8A878")]
		public Transform target;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8A8D8", Offset = "0xD8A8D8")]
		public float weight;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A8F0", Offset = "0xD8A8F0")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A928", Offset = "0xD8A928")]
		public float weightSmoothTime;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8A960", Offset = "0xD8A960")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A960", Offset = "0xD8A960")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A9C0", Offset = "0xD8A9C0")]
		public float maxRadiansDelta;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8A9F8", Offset = "0xD8A9F8")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AA30", Offset = "0xD8AA30")]
		public float slerpSpeed;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AA68", Offset = "0xD8AA68")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AAA0", Offset = "0xD8AAA0")]
		public float minDistance;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8AAD8", Offset = "0xD8AAD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AAD8", Offset = "0xD8AAD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8AAD8", Offset = "0xD8AAD8")]
		public float maxRootAngle;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x170002A5")]
		private Vector3 pivot
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0x1E469B4", Offset = "0x1E469B4", VA = "0x1E469B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x1E468CC", Offset = "0x1E468CC", VA = "0x1E468CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1E46B00", Offset = "0x1E46B00", VA = "0x1E46B00")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1E471B4", Offset = "0x1E471B4", VA = "0x1E471B4")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x1E47350", Offset = "0x1E47350", VA = "0x1E47350")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x1E4766C", Offset = "0x1E4766C", VA = "0x1E4766C")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public abstract class OffsetModifier : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000532")]
		public class OffsetLimits
		{
			[Token(Token = "0x40021DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FA18", Offset = "0xD8FA18")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40021DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FA50", Offset = "0xD8FA50")]
			public float spring;

			[Token(Token = "0x40021DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FA88", Offset = "0xD8FA88")]
			public bool x;

			[Token(Token = "0x40021DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FAC0", Offset = "0xD8FAC0")]
			public bool y;

			[Token(Token = "0x40021E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FAF8", Offset = "0xD8FAF8")]
			public bool z;

			[Token(Token = "0x40021E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FB30", Offset = "0xD8FB30")]
			public float minX;

			[Token(Token = "0x40021E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FB68", Offset = "0xD8FB68")]
			public float maxX;

			[Token(Token = "0x40021E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FBA0", Offset = "0xD8FBA0")]
			public float minY;

			[Token(Token = "0x40021E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FBD8", Offset = "0xD8FBD8")]
			public float maxY;

			[Token(Token = "0x40021E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FC10", Offset = "0xD8FC10")]
			public float minZ;

			[Token(Token = "0x40021E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FC48", Offset = "0xD8FC48")]
			public float maxZ;

			[Token(Token = "0x6002253")]
			[Address(RVA = "0x1E47A94", Offset = "0x1E47A94", VA = "0x1E47A94")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6002254")]
			[Address(RVA = "0x1E47F9C", Offset = "0x1E47F9C", VA = "0x1E47F9C")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x6002255")]
			[Address(RVA = "0x1E47FCC", Offset = "0x1E47FCC", VA = "0x1E47FCC")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x6002256")]
			[Address(RVA = "0x1E480A4", Offset = "0x1E480A4", VA = "0x1E480A4")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80C14", Offset = "0xD80C14")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x17000442")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600225A")]
				[Address(RVA = "0x1E47F2C", Offset = "0x1E47F2C", VA = "0x1E47F2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000443")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600225C")]
				[Address(RVA = "0x1E47F94", Offset = "0x1E47F94", VA = "0x1E47F94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002257")]
			[Address(RVA = "0x1E4795C", Offset = "0x1E4795C", VA = "0x1E4795C")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002258")]
			[Address(RVA = "0x1E47DEC", Offset = "0x1E47DEC", VA = "0x1E47DEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002259")]
			[Address(RVA = "0x1E47DF0", Offset = "0x1E47DF0", VA = "0x1E47DF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600225B")]
			[Address(RVA = "0x1E47F34", Offset = "0x1E47F34", VA = "0x1E47F34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AB54", Offset = "0xD8AB54")]
		public float weight;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AB8C", Offset = "0xD8AB8C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x170002A6")]
		protected float deltaTime
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0x1E3C908", Offset = "0x1E3C908", VA = "0x1E3C908")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600184D")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x1E478C0", Offset = "0x1E478C0", VA = "0x1E478C0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x1E478EC", Offset = "0x1E478EC", VA = "0x1E478EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD95284", Offset = "0xD95284")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x1E47988", Offset = "0x1E47988", VA = "0x1E47988")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x1E3CCAC", Offset = "0x1E3CCAC", VA = "0x1E3CCAC")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x1E47CF4", Offset = "0x1E47CF4", VA = "0x1E47CF4", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1E3CD78", Offset = "0x1E3CD78", VA = "0x1E3CD78")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public abstract class OffsetModifierVRIK : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80C24", Offset = "0xD80C24")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x17000444")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002260")]
				[Address(RVA = "0x1E484F4", Offset = "0x1E484F4", VA = "0x1E484F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000445")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002262")]
				[Address(RVA = "0x1E4855C", Offset = "0x1E4855C", VA = "0x1E4855C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600225D")]
			[Address(RVA = "0x1E48174", Offset = "0x1E48174", VA = "0x1E48174")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600225E")]
			[Address(RVA = "0x1E483B4", Offset = "0x1E483B4", VA = "0x1E483B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600225F")]
			[Address(RVA = "0x1E483B8", Offset = "0x1E483B8", VA = "0x1E483B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002261")]
			[Address(RVA = "0x1E484FC", Offset = "0x1E484FC", VA = "0x1E484FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ABC4", Offset = "0xD8ABC4")]
		public float weight;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ABFC", Offset = "0xD8ABFC")]
		public VRIK ik;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x170002A7")]
		protected float deltaTime
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0x1E480AC", Offset = "0x1E480AC", VA = "0x1E480AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001855")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x1E480D8", Offset = "0x1E480D8", VA = "0x1E480D8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x1E48104", Offset = "0x1E48104", VA = "0x1E48104")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD952E8", Offset = "0xD952E8")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1E481A0", Offset = "0x1E481A0", VA = "0x1E481A0")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x1E482AC", Offset = "0x1E482AC", VA = "0x1E482AC", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x1E483A4", Offset = "0x1E483A4", VA = "0x1E483A4")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class OffsetPose : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000535")]
		public class EffectorLink
		{
			[Token(Token = "0x40021ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40021EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x40021EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x40021F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x6002263")]
			[Address(RVA = "0x1E48624", Offset = "0x1E48624", VA = "0x1E48624")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x6002264")]
			[Address(RVA = "0x1E48A74", Offset = "0x1E48A74", VA = "0x1E48A74")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x1E48564", Offset = "0x1E48564", VA = "0x1E48564")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x1E4895C", Offset = "0x1E4895C", VA = "0x1E4895C")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x1E48A14", Offset = "0x1E48A14", VA = "0x1E48A14")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000536")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x200058D")]
			public class EffectorLink
			{
				[Token(Token = "0x4002323")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD908BC", Offset = "0xD908BC")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002324")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD908F4", Offset = "0xD908F4")]
				public float weight;

				[Token(Token = "0x600236F")]
				[Address(RVA = "0x1E4912C", Offset = "0x1E4912C", VA = "0x1E4912C")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40021F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FC80", Offset = "0xD8FC80")]
			public Transform[] raycastFrom;

			[Token(Token = "0x40021F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FCB8", Offset = "0xD8FCB8")]
			public Transform raycastTo;

			[Token(Token = "0x40021F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FCF0", Offset = "0xD8FCF0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8FCF0", Offset = "0xD8FCF0")]
			public float raycastRadius;

			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FD44", Offset = "0xD8FD44")]
			public EffectorLink[] effectors;

			[Token(Token = "0x40021F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FD7C", Offset = "0xD8FD7C")]
			public float smoothTimeIn;

			[Token(Token = "0x40021F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FDB4", Offset = "0xD8FDB4")]
			public float smoothTimeOut;

			[Token(Token = "0x40021F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FDEC", Offset = "0xD8FDEC")]
			public LayerMask layers;

			[Token(Token = "0x40021F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x40021F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x40021FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x6002265")]
			[Address(RVA = "0x1E48B00", Offset = "0x1E48B00", VA = "0x1E48B00")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6002266")]
			[Address(RVA = "0x1E48D0C", Offset = "0x1E48D0C", VA = "0x1E48D0C")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002267")]
			[Address(RVA = "0x1E48EA4", Offset = "0x1E48EA4", VA = "0x1E48EA4")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002268")]
			[Address(RVA = "0x1E49118", Offset = "0x1E49118", VA = "0x1E49118")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AC34", Offset = "0xD8AC34")]
		public Avoider[] avoiders;

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x1E48A7C", Offset = "0x1E48A7C", VA = "0x1E48A7C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x1E48CFC", Offset = "0x1E48CFC", VA = "0x1E48CFC")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000537")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x200058E")]
			public class EffectorLink
			{
				[Token(Token = "0x4002325")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD9092C", Offset = "0xD9092C")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002326")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90964", Offset = "0xD90964")]
				public float weight;

				[Token(Token = "0x6002370")]
				[Address(RVA = "0x1E4C044", Offset = "0x1E4C044", VA = "0x1E4C044")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40021FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FE24", Offset = "0xD8FE24")]
			public Vector3 offset;

			[Token(Token = "0x40021FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FE5C", Offset = "0xD8FE5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8FE5C", Offset = "0xD8FE5C")]
			public float additivity;

			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FEB0", Offset = "0xD8FEB0")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FEE8", Offset = "0xD8FEE8")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x6002269")]
			[Address(RVA = "0x1E4AD8C", Offset = "0x1E4AD8C", VA = "0x1E4AD8C")]
			public void Start()
			{
			}

			[Token(Token = "0x600226A")]
			[Address(RVA = "0x1E4B91C", Offset = "0x1E4B91C", VA = "0x1E4B91C")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x600226B")]
			[Address(RVA = "0x1E4C030", Offset = "0x1E4C030", VA = "0x1E4C030")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000538")]
		public enum Handedness
		{
			[Token(Token = "0x4002202")]
			Right,
			[Token(Token = "0x4002203")]
			Left
		}

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AC6C", Offset = "0xD8AC6C")]
		public AimIK aimIK;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ACA4", Offset = "0xD8ACA4")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ACDC", Offset = "0xD8ACDC")]
		public Handedness handedness;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AD14", Offset = "0xD8AD14")]
		public bool twoHanded;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AD4C", Offset = "0xD8AD4C")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AD84", Offset = "0xD8AD84")]
		public float magnitudeRandom;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ADBC", Offset = "0xD8ADBC")]
		public Vector3 rotationRandom;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8ADF4", Offset = "0xD8ADF4")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AE2C", Offset = "0xD8AE2C")]
		public float blendTime;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD8AE64", Offset = "0xD8AE64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AE64", Offset = "0xD8AE64")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x170002A8")]
		public bool isFinished
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0x1E4AB64", Offset = "0x1E4AB64", VA = "0x1E4AB64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A9")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x6001866")]
			[Address(RVA = "0x1E4BBD0", Offset = "0x1E4BBD0", VA = "0x1E4BBD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0x1E4BC10", Offset = "0x1E4BC10", VA = "0x1E4BC10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		private Transform primaryHand
		{
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x1E4BB90", Offset = "0x1E4BB90", VA = "0x1E4BB90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AC")]
		private Transform secondaryHand
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0x1E4BBB0", Offset = "0x1E4BBB0", VA = "0x1E4BBB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x1E4AB94", Offset = "0x1E4AB94", VA = "0x1E4AB94")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x1E4ABC0", Offset = "0x1E4ABC0", VA = "0x1E4ABC0")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x1E4AE3C", Offset = "0x1E4AE3C", VA = "0x1E4AE3C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x1E4BC50", Offset = "0x1E4BC50", VA = "0x1E4BC50")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x1E4BDA8", Offset = "0x1E4BDA8", VA = "0x1E4BDA8")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1E4BDE4", Offset = "0x1E4BDE4", VA = "0x1E4BDE4", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x1E4BF7C", Offset = "0x1E4BF7C", VA = "0x1E4BF7C")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class ShoulderRotator : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AEC4", Offset = "0xD8AEC4")]
		public float weight;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AEFC", Offset = "0xD8AEFC")]
		public float offset;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1E4F83C", Offset = "0x1E4F83C", VA = "0x1E4F83C")]
		private void Start()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1E4F910", Offset = "0x1E4F910", VA = "0x1E4F910")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x1E4F9FC", Offset = "0x1E4F9FC", VA = "0x1E4F9FC")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x1E4FE44", Offset = "0x1E4FE44", VA = "0x1E4FE44")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1E4FE7C", Offset = "0x1E4FE7C", VA = "0x1E4FE7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1E4FF74", Offset = "0x1E4FF74", VA = "0x1E4FF74")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x2000539")]
		public class Settings
		{
			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FF20", Offset = "0xD8FF20")]
			public float scaleMlp;

			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FF58", Offset = "0xD8FF58")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FF90", Offset = "0xD8FF90")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x4002207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8FFC8", Offset = "0xD8FFC8")]
			public Vector3 bodyTrackerForward;

			[Token(Token = "0x4002208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90000", Offset = "0xD90000")]
			public Vector3 bodyTrackerUp;

			[Token(Token = "0x4002209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90038", Offset = "0xD90038")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x400220A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90070", Offset = "0xD90070")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x400220B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD900A8", Offset = "0xD900A8")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD900E0", Offset = "0xD900E0")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD90118", Offset = "0xD90118")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90118", Offset = "0xD90118")]
			public Vector3 headOffset;

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90168", Offset = "0xD90168")]
			public Vector3 handOffset;

			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD901A0", Offset = "0xD901A0")]
			public float footForwardOffset;

			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD901D8", Offset = "0xD901D8")]
			public float footInwardOffset;

			[Token(Token = "0x4002211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90210", Offset = "0xD90210")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD90210", Offset = "0xD90210")]
			public float footHeadingOffset;

			[Token(Token = "0x4002212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD9026C", Offset = "0xD9026C")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4002213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD90284", Offset = "0xD90284")]
			public float pelvisRotationWeight;

			[Token(Token = "0x600226C")]
			[Address(RVA = "0x1E54E18", Offset = "0x1E54E18", VA = "0x1E54E18")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200053A")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x200058F")]
			public class Target
			{
				[Token(Token = "0x4002327")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x4002328")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x4002329")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x6002371")]
				[Address(RVA = "0x1E53EC4", Offset = "0x1E53EC4", VA = "0x1E53EC4")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x6002372")]
				[Address(RVA = "0x1E54A18", Offset = "0x1E54A18", VA = "0x1E54A18")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x4002214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x4002216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x4002217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x4002218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x4002219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x400221A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x400221B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x400221C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x400221D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x600226D")]
			[Address(RVA = "0x1E534D8", Offset = "0x1E534D8", VA = "0x1E534D8")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1E52090", Offset = "0x1E52090", VA = "0x1E52090")]
		public static void RecalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x1E521F8", Offset = "0x1E521F8", VA = "0x1E521F8")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x1E534E0", Offset = "0x1E534E0", VA = "0x1E534E0")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x1E53F88", Offset = "0x1E53F88", VA = "0x1E53F88")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x1E54A78", Offset = "0x1E54A78", VA = "0x1E54A78")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class VRIKLODController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer LODRenderer;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LODDistance;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allowCulled;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRIK ik;

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x1E54F10", Offset = "0x1E54F10", VA = "0x1E54F10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x1E54F68", Offset = "0x1E54F68", VA = "0x1E54F68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x1E54F9C", Offset = "0x1E54F9C", VA = "0x1E54F9C")]
		private int GetLODLevel()
		{
			return default(int);
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x1E55124", Offset = "0x1E55124", VA = "0x1E55124")]
		public VRIKLODController()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class VRIKRootController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8AF34", Offset = "0xD8AF34")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x170002AD")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x600187B")]
			[Address(RVA = "0x1E5513C", Offset = "0x1E5513C", VA = "0x1E5513C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9534C", Offset = "0xD9534C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600187C")]
			[Address(RVA = "0x1E55148", Offset = "0x1E55148", VA = "0x1E55148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9535C", Offset = "0xD9535C")]
			private set
			{
			}
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x1E55154", Offset = "0x1E55154", VA = "0x1E55154")]
		private void Awake()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x1E53CA0", Offset = "0x1E53CA0", VA = "0x1E53CA0")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x1E54CA8", Offset = "0x1E54CA8", VA = "0x1E54CA8")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x1E5522C", Offset = "0x1E5522C", VA = "0x1E5522C")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x1E556D0", Offset = "0x1E556D0", VA = "0x1E556D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x1E557C8", Offset = "0x1E557C8", VA = "0x1E557C8")]
		public VRIKRootController()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20002F2")]
	public class FKOffset : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200053B")]
		public class Offset
		{
			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x4002221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4002222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotationOffset;

			[Token(Token = "0x4002223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x600226E")]
			[Address(RVA = "0x1EBAAA8", Offset = "0x1EBAAA8", VA = "0x1EBAAA8")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x600226F")]
			[Address(RVA = "0x1EBAD34", Offset = "0x1EBAD34", VA = "0x1EBAD34")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x1EBA9D8", Offset = "0x1EBA9D8", VA = "0x1EBA9D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x1EBAA30", Offset = "0x1EBAA30", VA = "0x1EBAA30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1EBAC50", Offset = "0x1EBAC50", VA = "0x1EBAC50")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1EBAD2C", Offset = "0x1EBAD2C", VA = "0x1EBAD2C")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class AimBoxing : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pin;

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x1EB2138", Offset = "0x1EB2138", VA = "0x1EB2138")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x1EB21BC", Offset = "0x1EB21BC", VA = "0x1EB21BC")]
		public AimBoxing()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class AimSwing : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK ik;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AF44", Offset = "0xD8AF44")]
		public Vector3 animatedSwingDirection;

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x1EB21C4", Offset = "0x1EB21C4", VA = "0x1EB21C4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x1EB22CC", Offset = "0x1EB22CC", VA = "0x1EB22CC")]
		public AimSwing()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class SecondHandOnGun : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aim;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbIK leftArmIK;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftHand;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightHand;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 leftHandPositionOffset;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 leftHandRotationOffset;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 leftHandPosRelToRight;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion leftHandRotRelToRight;

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x1AD1470", Offset = "0x1AD1470", VA = "0x1AD1470")]
		private void Start()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x1AD14B4", Offset = "0x1AD14B4", VA = "0x1AD14B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x1AD1714", Offset = "0x1AD1714", VA = "0x1AD1714")]
		public SecondHandOnGun()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class SimpleAimingSystem : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AF7C", Offset = "0xD8AF7C")]
		public AimPoser aimPoser;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AFB4", Offset = "0xD8AFB4")]
		public AimIK aim;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8AFEC", Offset = "0xD8AFEC")]
		public LookAtIK lookAt;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B024", Offset = "0xD8B024")]
		public Animator animator;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B05C", Offset = "0xD8B05C")]
		public float crossfadeTime;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B094", Offset = "0xD8B094")]
		public float minAimDistance;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AimPoser.Pose aimPose;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AimPoser.Pose lastPose;

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x1AD171C", Offset = "0x1AD171C", VA = "0x1AD171C")]
		private void Start()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x1AD1760", Offset = "0x1AD1760", VA = "0x1AD1760")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x1AD18B4", Offset = "0x1AD18B4", VA = "0x1AD18B4")]
		private void Pose()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x1AD1AB0", Offset = "0x1AD1AB0", VA = "0x1AD1AB0")]
		private void LimitAimTarget()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x1AD1DF0", Offset = "0x1AD1DF0", VA = "0x1AD1DF0")]
		private void DirectCrossFade(string state, float target)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x1AD1EC8", Offset = "0x1AD1EC8", VA = "0x1AD1EC8")]
		public SimpleAimingSystem()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class TerrainOffset : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 raycastOffset;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float min;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float lerpSpeed;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit hit;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 offset;

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x1AD2C50", Offset = "0x1AD2C50", VA = "0x1AD2C50")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x1AD2EB4", Offset = "0x1AD2EB4", VA = "0x1AD2EB4")]
		private Vector3 GetGroundHeightOffset(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x1AD3104", Offset = "0x1AD3104", VA = "0x1AD3104")]
		public TerrainOffset()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class BipedIKvsAnimatorIK : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xD8B0CC", Offset = "0xD8B0CC")]
		public Animator animator;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedIK bipedIK;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xD8B104", Offset = "0xD8B104")]
		public Transform lookAtTargetBiped;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lookAtTargetAnimator;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B13C", Offset = "0xD8B13C")]
		public float lookAtWeight;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B154", Offset = "0xD8B154")]
		public float lookAtBodyWeight;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B16C", Offset = "0xD8B16C")]
		public float lookAtHeadWeight;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B184", Offset = "0xD8B184")]
		public float lookAtEyesWeight;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B19C", Offset = "0xD8B19C")]
		public float lookAtClampWeight;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B1B4", Offset = "0xD8B1B4")]
		public float lookAtClampWeightHead;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B1CC", Offset = "0xD8B1CC")]
		public float lookAtClampWeightEyes;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xD8B1E4", Offset = "0xD8B1E4")]
		public Transform footTargetBiped;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform footTargetAnimator;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B21C", Offset = "0xD8B21C")]
		public float footPositionWeight;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B234", Offset = "0xD8B234")]
		public float footRotationWeight;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xD8B24C", Offset = "0xD8B24C")]
		public Transform handTargetBiped;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform handTargetAnimator;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B284", Offset = "0xD8B284")]
		public float handPositionWeight;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B29C", Offset = "0xD8B29C")]
		public float handRotationWeight;

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x1EB3E5C", Offset = "0x1EB3E5C", VA = "0x1EB3E5C")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x1EB4308", Offset = "0x1EB4308", VA = "0x1EB4308")]
		public BipedIKvsAnimatorIK()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class MechSpider : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask raycastLayers;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform body;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MechSpiderLeg[] legs;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float legRotationWeight;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rootPositionSpeed;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootRotationSpeed;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float breatheSpeed;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float breatheMagnitude;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minHeight;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float raycastHeight;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float raycastDistance;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 defaultBodyLocalPosition;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float sine;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit rootHit;

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x1EBE740", Offset = "0x1EBE740", VA = "0x1EBE740")]
		private void Update()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x1EBF174", Offset = "0x1EBF174", VA = "0x1EBF174")]
		private Vector3 GetLegCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x1EBEE5C", Offset = "0x1EBEE5C", VA = "0x1EBEE5C")]
		private Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x1EBF31C", Offset = "0x1EBF31C", VA = "0x1EBF31C")]
		public MechSpider()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class MechSpiderController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTransform;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float turnSpeed;

		[Token(Token = "0x170002AE")]
		public Vector3 inputVector
		{
			[Token(Token = "0x600189D")]
			[Address(RVA = "0x1EBF348", Offset = "0x1EBF348", VA = "0x1EBF348")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x1EBF3E8", Offset = "0x1EBF3E8", VA = "0x1EBF3E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x1EBF680", Offset = "0x1EBF680", VA = "0x1EBF680")]
		public MechSpiderController()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class MechSpiderLeg : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80C34", Offset = "0xD80C34")]
		private sealed class <Step>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MechSpiderLeg <>4__this;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 stepStartPosition;

			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x17000446")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002273")]
				[Address(RVA = "0x1EC0A68", Offset = "0x1EC0A68", VA = "0x1EC0A68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000447")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002275")]
				[Address(RVA = "0x1EC0AD0", Offset = "0x1EC0AD0", VA = "0x1EC0AD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002270")]
			[Address(RVA = "0x1EC0660", Offset = "0x1EC0660", VA = "0x1EC0660")]
			[DebuggerHidden]
			public <Step>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002271")]
			[Address(RVA = "0x1EC0734", Offset = "0x1EC0734", VA = "0x1EC0734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002272")]
			[Address(RVA = "0x1EC0738", Offset = "0x1EC0738", VA = "0x1EC0738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002274")]
			[Address(RVA = "0x1EC0A70", Offset = "0x1EC0A70", VA = "0x1EC0A70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechSpiderLeg unSync;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minDelay;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxOffset;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stepSpeed;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float footHeight;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velocityPrediction;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastFocus;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve yOffset;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform foot;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 footUpAxis;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float footRotationSpeed;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ParticleSystem sand;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IK ik;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float stepProgress;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastStepTime;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private RaycastHit hit;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion lastFootLocalRotation;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 smoothHitNormal;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 lastStepPosition;

		[Token(Token = "0x170002AF")]
		public bool isStepping
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x1EBF694", Offset = "0x1EBF694", VA = "0x1EBF694")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B0")]
		public Vector3 position
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x1EBF2E8", Offset = "0x1EBF2E8", VA = "0x1EBF2E8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x1EBF6A8", Offset = "0x1EBF6A8", VA = "0x1EBF6A8")]
			set
			{
			}
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x1EBF6F8", Offset = "0x1EBF6F8", VA = "0x1EBF6F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x1EBF944", Offset = "0x1EBF944", VA = "0x1EBF944")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x1EBFB60", Offset = "0x1EBFB60", VA = "0x1EBFB60")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x1EBFE0C", Offset = "0x1EBFE0C", VA = "0x1EBFE0C")]
		private Vector3 GetStepTarget(out bool stepFound, float focus, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1EC01CC", Offset = "0x1EC01CC", VA = "0x1EC01CC")]
		private void UpdatePosition(float distance)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x1EC0428", Offset = "0x1EC0428", VA = "0x1EC0428")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x1EBFD60", Offset = "0x1EBFD60", VA = "0x1EBFD60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD9536C", Offset = "0xD9536C")]
		private IEnumerator Step(Vector3 stepStartPosition, Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x1EC068C", Offset = "0x1EC068C", VA = "0x1EC068C")]
		public MechSpiderLeg()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class MechSpiderParticles : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpiderController mechSpiderController;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particles;

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x1EC0AD8", Offset = "0x1EC0AD8", VA = "0x1EC0AD8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x1EC0B84", Offset = "0x1EC0B84", VA = "0x1EC0B84")]
		private void Update()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x1EC0E18", Offset = "0x1EC0E18", VA = "0x1EC0E18")]
		public MechSpiderParticles()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class AnimationWarping : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200053D")]
		public struct Warp
		{
			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD902D4", Offset = "0xD902D4")]
			public int animationLayer;

			[Token(Token = "0x400222A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD9030C", Offset = "0xD9030C")]
			public string animationState;

			[Token(Token = "0x400222B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90344", Offset = "0xD90344")]
			public AnimationCurve weightCurve;

			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD9037C", Offset = "0xD9037C")]
			public Transform warpFrom;

			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD903B4", Offset = "0xD903B4")]
			public Transform warpTo;

			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD903EC", Offset = "0xD903EC")]
			public FullBodyBipedEffector effector;
		}

		[Serializable]
		[Token(Token = "0x200053E")]
		public enum EffectorMode
		{
			[Token(Token = "0x4002230")]
			PositionOffset,
			[Token(Token = "0x4002231")]
			Position
		}

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B2B4", Offset = "0xD8B2B4")]
		public Animator animator;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B2EC", Offset = "0xD8B2EC")]
		public EffectorMode effectorMode;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD8B324", Offset = "0xD8B324")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B324", Offset = "0xD8B324")]
		public Warp[] warps;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EffectorMode lastMode;

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x1EB2344", Offset = "0x1EB2344", VA = "0x1EB2344", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x1EB2370", Offset = "0x1EB2370", VA = "0x1EB2370")]
		public float GetWarpWeight(int warpIndex)
		{
			return default(float);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1EB2590", Offset = "0x1EB2590", VA = "0x1EB2590", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x1EB2944", Offset = "0x1EB2944", VA = "0x1EB2944")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1EB29E4", Offset = "0x1EB29E4", VA = "0x1EB29E4")]
		public AnimationWarping()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7EE10", Offset = "0xD7EE10")]
	public class AnimatorController3rdPerson : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blendSpeed;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAngle;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveSpeed;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rootMotionWeight;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator animator;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 moveBlend;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Vector3 moveInput;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 velocity;

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x1EB29EC", Offset = "0x1EB29EC", VA = "0x1EB29EC", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x1EB2A44", Offset = "0x1EB2A44", VA = "0x1EB2A44")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1EB2C7C", Offset = "0x1EB2C7C", VA = "0x1EB2C7C", Slot = "5")]
		public virtual void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1EB2EE0", Offset = "0x1EB2EE0", VA = "0x1EB2EE0")]
		public AnimatorController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7EE74", Offset = "0xD7EE74")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7EE74", Offset = "0xD7EE74")]
	public class AnimatorController3rdPersonIK : AnimatorController3rdPerson
	{
		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B374", Offset = "0xD8B374")]
		public float headLookWeight;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 gunHoldOffset;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Recoil recoil;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AimIK aim;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 headLookAxis;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 leftHandPosRelToRightHand;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion leftHandRotRelToRightHand;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 aimTarget;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1EB2EF4", Offset = "0x1EB2EF4", VA = "0x1EB2EF4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1EB3060", Offset = "0x1EB3060", VA = "0x1EB3060", Slot = "5")]
		public override void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1EB30DC", Offset = "0x1EB30DC", VA = "0x1EB30DC")]
		private void Read()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x1EB3234", Offset = "0x1EB3234", VA = "0x1EB3234")]
		private void AimIK()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x1EB327C", Offset = "0x1EB327C", VA = "0x1EB327C")]
		private void FBBIK()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1EB3874", Offset = "0x1EB3874", VA = "0x1EB3874")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x1EB3638", Offset = "0x1EB3638", VA = "0x1EB3638")]
		private void HeadLookAt(Vector3 lookAtTarget)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1EB3BCC", Offset = "0x1EB3BCC", VA = "0x1EB3BCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1EB3CC4", Offset = "0x1EB3CC4", VA = "0x1EB3CC4")]
		public AnimatorController3rdPersonIK()
		{
		}
	}
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7EF00", Offset = "0xD7EF00")]
	public class CharacterAnimationThirdPersonIK : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1EB52A8", Offset = "0x1EB52A8", VA = "0x1EB52A8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1EB5308", Offset = "0x1EB5308", VA = "0x1EB5308", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x1EB55CC", Offset = "0x1EB55CC", VA = "0x1EB55CC")]
		private void RotateEffector(IKEffector effector, Quaternion rotation, float mlp)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x1EB5784", Offset = "0x1EB5784", VA = "0x1EB5784")]
		public CharacterAnimationThirdPersonIK()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7EF64", Offset = "0xD7EF64")]
	public class CharacterController3rdPerson : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CameraController cam;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimatorController3rdPerson animatorController;

		[Token(Token = "0x170002B1")]
		private static Vector3 inputVector
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0x1EB65B8", Offset = "0x1EB65B8", VA = "0x1EB65B8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002B2")]
		private static Vector3 inputVectorRaw
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0x1EB6658", Offset = "0x1EB6658", VA = "0x1EB6658")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x1EB6304", Offset = "0x1EB6304", VA = "0x1EB6304")]
		private void Start()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x1EB6374", Offset = "0x1EB6374", VA = "0x1EB6374")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x1EB66F8", Offset = "0x1EB66F8", VA = "0x1EB66F8")]
		public CharacterController3rdPerson()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class EffectorOffset : OffsetModifier
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B38C", Offset = "0xD8B38C")]
		public float handsMaintainRelativePositionWeight;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 bodyOffset;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 leftShoulderOffset;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rightShoulderOffset;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 leftThighOffset;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 rightThighOffset;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 rightHandOffset;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 leftFootOffset;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 rightFootOffset;

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x1EB9060", Offset = "0x1EB9060", VA = "0x1EB9060", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1EB9644", Offset = "0x1EB9644", VA = "0x1EB9644")]
		public EffectorOffset()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class ExplosionDemo : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleLocomotion character;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forceMlp;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float upForce;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightFalloffSpeed;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve weightFalloff;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve explosionForceByDistance;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scale;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float weight;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 defaultScale;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody r;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1EB964C", Offset = "0x1EB964C", VA = "0x1EB964C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1EB96EC", Offset = "0x1EB96EC", VA = "0x1EB96EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1EB9B68", Offset = "0x1EB9B68", VA = "0x1EB9B68")]
		private void SetEffectorWeights(float w)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1EB9C14", Offset = "0x1EB9C14", VA = "0x1EB9C14")]
		public ExplosionDemo()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class FBBIKSettings : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200053F")]
		public class Limb
		{
			[Token(Token = "0x4002232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FBIKChain.Smoothing reachSmoothing;

			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maintainRelativePositionWeight;

			[Token(Token = "0x4002234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float mappingWeight;

			[Token(Token = "0x6002276")]
			[Address(RVA = "0x1EB9DE8", Offset = "0x1EB9DE8", VA = "0x1EB9DE8")]
			public void Apply(FullBodyBipedChain chain, IKSolverFullBodyBiped solver)
			{
			}

			[Token(Token = "0x6002277")]
			[Address(RVA = "0x1EB9F1C", Offset = "0x1EB9F1C", VA = "0x1EB9F1C")]
			public Limb()
			{
			}
		}

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableAfterStart;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Limb leftArm;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Limb rightArm;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Limb leftLeg;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Limb rightLeg;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rootPin;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bodyEffectChildNodes;

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1EB9C9C", Offset = "0x1EB9C9C", VA = "0x1EB9C9C")]
		public void UpdateSettings()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1EB9E6C", Offset = "0x1EB9E6C", VA = "0x1EB9E6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1EB9F08", Offset = "0x1EB9F08", VA = "0x1EB9F08")]
		private void Update()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1EB9F0C", Offset = "0x1EB9F0C", VA = "0x1EB9F0C")]
		public FBBIKSettings()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class FBIKBendGoal : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedChain chain;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weight;

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1EB9F2C", Offset = "0x1EB9F2C", VA = "0x1EB9F2C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x1EB9F98", Offset = "0x1EB9F98", VA = "0x1EB9F98")]
		private void Update()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1EBA070", Offset = "0x1EBA070", VA = "0x1EBA070")]
		public FBIKBendGoal()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class FBIKBoxing : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B3A4", Offset = "0xD8B3A4")]
		public Transform target;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B3DC", Offset = "0xD8B3DC")]
		public Transform pin;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B414", Offset = "0xD8B414")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B44C", Offset = "0xD8B44C")]
		public AimIK aim;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B484", Offset = "0xD8B484")]
		public float weight;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B4BC", Offset = "0xD8B4BC")]
		public FullBodyBipedEffector effector;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B4F4", Offset = "0xD8B4F4")]
		public AnimationCurve aimWeight;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x1EBA078", Offset = "0x1EBA078", VA = "0x1EBA078")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x1EBA0D0", Offset = "0x1EBA0D0", VA = "0x1EBA0D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x1EBA26C", Offset = "0x1EBA26C", VA = "0x1EBA26C")]
		public FBIKBoxing()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class FBIKHandsOnProp : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftHanded;

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x1EBA274", Offset = "0x1EBA274", VA = "0x1EBA274")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x1EBA334", Offset = "0x1EBA334", VA = "0x1EBA334")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x1EBA3C4", Offset = "0x1EBA3C4", VA = "0x1EBA3C4")]
		private void HandsOnProp(IKEffector mainHand, IKEffector otherHand)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x1EBA8D8", Offset = "0x1EBA8D8", VA = "0x1EBA8D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x1EBA9D0", Offset = "0x1EBA9D0", VA = "0x1EBA9D0")]
		public FBIKHandsOnProp()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class FPSAiming : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B52C", Offset = "0xD8B52C")]
		public float aimWeight;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B544", Offset = "0xD8B544")]
		public float sightWeight;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B55C", Offset = "0xD8B55C")]
		public float maxAngle;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 aimOffset;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool animatePhysics;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform gun;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform gunTarget;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AimIK gunAim;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CameraControllerFPS cam;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Recoil recoil;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B578", Offset = "0xD8B578")]
		public float cameraRecoilWeight;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 gunTargetDefaultLocalPosition;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 gunTargetDefaultLocalRotation;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 camDefaultLocalPosition;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 camRelativeToGunTarget;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool updateFrame;

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x1EBAD3C", Offset = "0x1EBAD3C", VA = "0x1EBAD3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x1EBAE9C", Offset = "0x1EBAE9C", VA = "0x1EBAE9C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x1EBAEA8", Offset = "0x1EBAEA8", VA = "0x1EBAEA8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x1EBB1E8", Offset = "0x1EBB1E8", VA = "0x1EBB1E8")]
		private void Aiming()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1EBB450", Offset = "0x1EBB450", VA = "0x1EBB450")]
		private void LookDownTheSight()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x1EBAF6C", Offset = "0x1EBAF6C", VA = "0x1EBAF6C")]
		private void RotateCharacter()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x1EBBE70", Offset = "0x1EBBE70", VA = "0x1EBBE70")]
		public FPSAiming()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7EFC8", Offset = "0xD7EFC8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD7EFC8", Offset = "0xD7EFC8")]
	public class FPSCharacter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B590", Offset = "0xD8B590")]
		public float walkSpeed;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float sVel;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FPSAiming FPSAiming;

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x1EBBE90", Offset = "0x1EBBE90", VA = "0x1EBBE90")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1EBBF00", Offset = "0x1EBBF00", VA = "0x1EBBF00")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x1EBC024", Offset = "0x1EBC024", VA = "0x1EBC024")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x1EBC0D4", Offset = "0x1EBC0D4", VA = "0x1EBC0D4")]
		public FPSCharacter()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class HitReactionTrigger : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReaction hitReaction;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x1EBC468", Offset = "0x1EBC468", VA = "0x1EBC468")]
		private void Update()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x1EBC628", Offset = "0x1EBC628", VA = "0x1EBC628")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x1EBC7EC", Offset = "0x1EBC7EC", VA = "0x1EBC7EC")]
		public HitReactionTrigger()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class HoldingHands : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK rightHandChar;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedIK leftHandChar;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTarget;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHandTarget;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float crossFade;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandRotation;

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x1EBCB90", Offset = "0x1EBCB90", VA = "0x1EBCB90")]
		private void Start()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x1EBCD3C", Offset = "0x1EBCD3C", VA = "0x1EBCD3C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x1EBD0F8", Offset = "0x1EBD0F8", VA = "0x1EBD0F8")]
		public HoldingHands()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class InteractionC2CDemo : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem character1;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem character2;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject handShake;

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x1EBD108", Offset = "0x1EBD108", VA = "0x1EBD108")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x1EBD23C", Offset = "0x1EBD23C", VA = "0x1EBD23C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x1EBD38C", Offset = "0x1EBD38C", VA = "0x1EBD38C")]
		public InteractionC2CDemo()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class InteractionDemo : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool interrupt;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject ball;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionObject benchMain;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractionObject benchHands;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionObject button;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractionObject cigarette;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionObject door;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isSitting;

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x1EBD394", Offset = "0x1EBD394", VA = "0x1EBD394")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x1EBDA64", Offset = "0x1EBDA64", VA = "0x1EBDA64")]
		public InteractionDemo()
		{
		}
	}
	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD80054", Offset = "0xD80054")]
	public class InteractionSystemTestGUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B5A8", Offset = "0xD8B5A8")]
		public InteractionObject interactionObject;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B5E0", Offset = "0xD8B5E0")]
		public FullBodyBipedEffector[] effectors;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x1EBDA6C", Offset = "0x1EBDA6C", VA = "0x1EBDA6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x1EBDAC4", Offset = "0x1EBDAC4", VA = "0x1EBDAC4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x1EBDDD0", Offset = "0x1EBDDD0", VA = "0x1EBDDD0")]
		public InteractionSystemTestGUI()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class KissingRig : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000540")]
		public class Partner
		{
			[Token(Token = "0x4002235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedIK ik;

			[Token(Token = "0x4002236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform mouth;

			[Token(Token = "0x4002237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform mouthTarget;

			[Token(Token = "0x4002238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform touchTargetLeftHand;

			[Token(Token = "0x4002239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform touchTargetRightHand;

			[Token(Token = "0x400223A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float bodyWeightHorizontal;

			[Token(Token = "0x400223B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float bodyWeightVertical;

			[Token(Token = "0x400223C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float neckRotationWeight;

			[Token(Token = "0x400223D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float headTiltAngle;

			[Token(Token = "0x400223E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 headTiltAxis;

			[Token(Token = "0x400223F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion neckRotation;

			[Token(Token = "0x17000448")]
			private Transform neck
			{
				[Token(Token = "0x600227A")]
				[Address(RVA = "0x1EBE6D4", Offset = "0x1EBE6D4", VA = "0x1EBE6D4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002278")]
			[Address(RVA = "0x1EBDE0C", Offset = "0x1EBDE0C", VA = "0x1EBDE0C")]
			public void Initiate()
			{
			}

			[Token(Token = "0x6002279")]
			[Address(RVA = "0x1EBDE8C", Offset = "0x1EBDE8C", VA = "0x1EBDE8C")]
			public void Update(float weight)
			{
			}

			[Token(Token = "0x600227B")]
			[Address(RVA = "0x1EBE4F8", Offset = "0x1EBE4F8", VA = "0x1EBE4F8")]
			private void InverseTransformEffector(FullBodyBipedEffector effector, Transform target, Vector3 targetPosition, float weight)
			{
			}

			[Token(Token = "0x600227C")]
			[Address(RVA = "0x1EBE72C", Offset = "0x1EBE72C", VA = "0x1EBE72C")]
			public Partner()
			{
			}
		}

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Partner partner1;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Partner partner2;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int iterations;

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x1EBDDD8", Offset = "0x1EBDDD8", VA = "0x1EBDDD8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x1EBDE2C", Offset = "0x1EBDE2C", VA = "0x1EBDE2C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x1EBE4E8", Offset = "0x1EBE4E8", VA = "0x1EBE4E8")]
		public KissingRig()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class MotionAbsorb : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000541")]
		public enum Mode
		{
			[Token(Token = "0x4002241")]
			Position,
			[Token(Token = "0x4002242")]
			PositionOffset
		}

		[Serializable]
		[Token(Token = "0x2000542")]
		public class Absorber
		{
			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD90424", Offset = "0xD90424")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD9045C", Offset = "0xD9045C")]
			public float weight;

			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 position;

			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion rotation;

			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IKEffector e;

			[Token(Token = "0x600227D")]
			[Address(RVA = "0x1EC0F80", Offset = "0x1EC0F80", VA = "0x1EC0F80")]
			public void SetToBone(IKSolverFullBodyBiped solver, Mode mode)
			{
			}

			[Token(Token = "0x600227E")]
			[Address(RVA = "0x1EC1160", Offset = "0x1EC1160", VA = "0x1EC1160")]
			public void UpdateEffectorWeights(float w)
			{
			}

			[Token(Token = "0x600227F")]
			[Address(RVA = "0x1EC119C", Offset = "0x1EC119C", VA = "0x1EC119C")]
			public void SetPosition(float w)
			{
			}

			[Token(Token = "0x6002280")]
			[Address(RVA = "0x1EC134C", Offset = "0x1EC134C", VA = "0x1EC134C")]
			public void SetRotation(float w)
			{
			}

			[Token(Token = "0x6002281")]
			[Address(RVA = "0x1EC1570", Offset = "0x1EC1570", VA = "0x1EC1570")]
			public Absorber()
			{
			}
		}

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B618", Offset = "0xD8B618")]
		public Mode mode;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B650", Offset = "0xD8B650")]
		public Absorber[] absorbers;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B688", Offset = "0xD8B688")]
		public AnimationCurve falloff;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B6C0", Offset = "0xD8B6C0")]
		public float falloffSpeed;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float w;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Mode initialMode;

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x1EC0E20", Offset = "0x1EC0E20", VA = "0x1EC0E20", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x1EC0EF4", Offset = "0x1EC0EF4", VA = "0x1EC0EF4")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x1EC1054", Offset = "0x1EC1054", VA = "0x1EC1054", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x1EC12C4", Offset = "0x1EC12C4", VA = "0x1EC12C4")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x1EC145C", Offset = "0x1EC145C", VA = "0x1EC145C", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x1EC1560", Offset = "0x1EC1560", VA = "0x1EC1560")]
		public MotionAbsorb()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class MotionAbsorbCharacter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MotionAbsorb motionAbsorb;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cube;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float cubeRandomPosition;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve motionAbsorbWeight;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 cubeDefaultPosition;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorStateInfo info;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigidbody;

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x1EC15F0", Offset = "0x1EC15F0", VA = "0x1EC15F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x1EC1668", Offset = "0x1EC1668", VA = "0x1EC1668")]
		private void Update()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x1EC1734", Offset = "0x1EC1734", VA = "0x1EC1734")]
		private void SwingStart()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x1EC1894", Offset = "0x1EC1894", VA = "0x1EC1894")]
		public MotionAbsorbCharacter()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class OffsetEffector : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000543")]
		public class EffectorLink
		{
			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float weightMultiplier;

			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Vector3 localPosition;

			[Token(Token = "0x6002282")]
			[Address(RVA = "0x1ACEA94", Offset = "0x1ACEA94", VA = "0x1ACEA94")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x1ACE760", Offset = "0x1ACE760", VA = "0x1ACE760", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x1ACE860", Offset = "0x1ACE860", VA = "0x1ACE860", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x1ACEA8C", Offset = "0x1ACEA8C", VA = "0x1ACEA8C")]
		public OffsetEffector()
		{
		}
	}
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD800B8", Offset = "0xD800B8")]
	public class PendulumExample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B6F8", Offset = "0xD8B6F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B6F8", Offset = "0xD8B6F8")]
		public float weight;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B74C", Offset = "0xD8B74C")]
		public float hangingDistanceMlp;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B784", Offset = "0xD8B784")]
		[HideInInspector]
		public Vector3 rootTargetPosition;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B7D0", Offset = "0xD8B7D0")]
		[HideInInspector]
		public Quaternion rootTargetRotation;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform target;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform leftHandTarget;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightHandTarget;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftFootTarget;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform rightFootTarget;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform pelvisTarget;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform bodyTarget;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform headTarget;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 pelvisDownAxis;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rootRelativeToPelvis;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 pelvisToRoot;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastWeight;

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x1ACEAA4", Offset = "0x1ACEAA4", VA = "0x1ACEAA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x1ACEDE0", Offset = "0x1ACEDE0", VA = "0x1ACEDE0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x1ACF530", Offset = "0x1ACF530", VA = "0x1ACF530")]
		public PendulumExample()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public abstract class PickUp2Handed : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GUIspace;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject obj;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pivot;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform holdPoint;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pickUpTime;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float holdWeight;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float holdWeightVel;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x170002B3")]
		private bool holding
		{
			[Token(Token = "0x6001911")]
			[Address(RVA = "0x1ACF874", Offset = "0x1ACF874", VA = "0x1ACF874")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x1ACF5B4", Offset = "0x1ACF5B4", VA = "0x1ACF5B4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600190B")]
		protected abstract void RotatePivot();

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x1ACF894", Offset = "0x1ACF894", VA = "0x1ACF894")]
		private void Start()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x1ACF9FC", Offset = "0x1ACF9FC", VA = "0x1ACF9FC")]
		private void OnPause(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x1ACFB78", Offset = "0x1ACFB78", VA = "0x1ACFB78")]
		private void OnStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x1ACFC58", Offset = "0x1ACFC58", VA = "0x1ACFC58")]
		private void OnDrop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x1ACFD84", Offset = "0x1ACFD84", VA = "0x1ACFD84")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x1ACFF94", Offset = "0x1ACFF94", VA = "0x1ACFF94")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x1AD0134", Offset = "0x1AD0134", VA = "0x1AD0134")]
		protected PickUp2Handed()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class PickUpBox : PickUp2Handed
	{
		[Token(Token = "0x6001914")]
		[Address(RVA = "0x1AD0148", Offset = "0x1AD0148", VA = "0x1AD0148", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x1AD033C", Offset = "0x1AD033C", VA = "0x1AD033C")]
		public PickUpBox()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class PickUpSphere : PickUp2Handed
	{
		[Token(Token = "0x6001916")]
		[Address(RVA = "0x1AD0350", Offset = "0x1AD0350", VA = "0x1AD0350", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x1AD04FC", Offset = "0x1AD04FC", VA = "0x1AD04FC")]
		public PickUpSphere()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class RagdollUtilityDemo : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollUtility ragdollUtility;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform root;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody pelvis;

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x1AD0C78", Offset = "0x1AD0C78", VA = "0x1AD0C78")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x1AD0D50", Offset = "0x1AD0D50", VA = "0x1AD0D50")]
		private void Update()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x1AD0EF8", Offset = "0x1AD0EF8", VA = "0x1AD0EF8")]
		public RagdollUtilityDemo()
		{
		}
	}
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD8011C", Offset = "0xD8011C")]
	public class RecoilTest : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recoil recoil;

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x1AD0F00", Offset = "0x1AD0F00", VA = "0x1AD0F00")]
		private void Start()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x1AD0F58", Offset = "0x1AD0F58", VA = "0x1AD0F58")]
		private void Update()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x1AD0FB4", Offset = "0x1AD0FB4", VA = "0x1AD0FB4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x1AD108C", Offset = "0x1AD108C", VA = "0x1AD108C")]
		public RecoilTest()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class ResetInteractionObject : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80C44", Offset = "0xD80C44")]
		private sealed class <ResetObject>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float resetTime;

			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetInteractionObject <>4__this;

			[Token(Token = "0x17000449")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002286")]
				[Address(RVA = "0x1AD1400", Offset = "0x1AD1400", VA = "0x1AD1400", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002288")]
				[Address(RVA = "0x1AD1468", Offset = "0x1AD1468", VA = "0x1AD1468", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0x1AD121C", Offset = "0x1AD121C", VA = "0x1AD121C")]
			[DebuggerHidden]
			public <ResetObject>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002284")]
			[Address(RVA = "0x1AD1258", Offset = "0x1AD1258", VA = "0x1AD1258", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002285")]
			[Address(RVA = "0x1AD125C", Offset = "0x1AD125C", VA = "0x1AD125C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002287")]
			[Address(RVA = "0x1AD1408", Offset = "0x1AD1408", VA = "0x1AD1408", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float resetDelay;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform defaultParent;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody r;

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x1AD109C", Offset = "0x1AD109C", VA = "0x1AD109C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x1AD1154", Offset = "0x1AD1154", VA = "0x1AD1154")]
		private void OnPickUp(Transform t)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x1AD119C", Offset = "0x1AD119C", VA = "0x1AD119C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD953D0", Offset = "0xD953D0")]
		private IEnumerator ResetObject(float resetTime)
		{
			return null;
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x1AD1248", Offset = "0x1AD1248", VA = "0x1AD1248")]
		public ResetInteractionObject()
		{
		}
	}
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD80180", Offset = "0xD80180")]
	public class SoccerDemo : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80C54", Offset = "0xD80C54")]
		private sealed class <ResetDelayed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoccerDemo <>4__this;

			[Token(Token = "0x1700044B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600228C")]
				[Address(RVA = "0x1AD2BE0", Offset = "0x1AD2BE0", VA = "0x1AD2BE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600228E")]
				[Address(RVA = "0x1AD2C48", Offset = "0x1AD2C48", VA = "0x1AD2C48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002289")]
			[Address(RVA = "0x1AD2A88", Offset = "0x1AD2A88", VA = "0x1AD2A88")]
			[DebuggerHidden]
			public <ResetDelayed>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600228A")]
			[Address(RVA = "0x1AD2ABC", Offset = "0x1AD2ABC", VA = "0x1AD2ABC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600228B")]
			[Address(RVA = "0x1AD2AC0", Offset = "0x1AD2AC0", VA = "0x1AD2AC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0x1AD2BE8", Offset = "0x1AD2BE8", VA = "0x1AD2BE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator animator;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x1AD2968", Offset = "0x1AD2968", VA = "0x1AD2968")]
		private void Start()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1AD2A18", Offset = "0x1AD2A18", VA = "0x1AD2A18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD95434", Offset = "0xD95434")]
		private IEnumerator ResetDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1AD2AB4", Offset = "0x1AD2AB4", VA = "0x1AD2AB4")]
		public SoccerDemo()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class TouchWalls : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000546")]
		public class EffectorLink
		{
			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4002254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractionObject interactionObject;

			[Token(Token = "0x4002255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spherecastFrom;

			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float spherecastRadius;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float minDistance;

			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LayerMask touchLayers;

			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float lerpSpeed;

			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float minSwitchTime;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float releaseDistance;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool sliding;

			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 raycastDirectionLocal;

			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float raycastDistance;

			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private bool inTouch;

			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private RaycastHit hit;

			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 targetPosition;

			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Quaternion targetRotation;

			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private bool initiated;

			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private float nextSwitchTime;

			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float speedF;

			[Token(Token = "0x600228F")]
			[Address(RVA = "0x1AD31F0", Offset = "0x1AD31F0", VA = "0x1AD31F0")]
			public void Initiate(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6002290")]
			[Address(RVA = "0x1AD3E78", Offset = "0x1AD3E78", VA = "0x1AD3E78")]
			private bool FindWalls(Vector3 direction)
			{
				return default(bool);
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0x1AD3530", Offset = "0x1AD3530", VA = "0x1AD3530")]
			public void Update(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6002292")]
			[Address(RVA = "0x1AD3F60", Offset = "0x1AD3F60", VA = "0x1AD3F60")]
			private void StopTouch(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6002293")]
			[Address(RVA = "0x1AD40FC", Offset = "0x1AD40FC", VA = "0x1AD40FC")]
			private void OnInteractionStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6002294")]
			[Address(RVA = "0x1AD4198", Offset = "0x1AD4198", VA = "0x1AD4198")]
			private void OnInteractionResume(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6002295")]
			[Address(RVA = "0x1AD4230", Offset = "0x1AD4230", VA = "0x1AD4230")]
			private void OnInteractionStop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6002296")]
			[Address(RVA = "0x1AD3D10", Offset = "0x1AD3D10", VA = "0x1AD3D10")]
			public void Destroy(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6002297")]
			[Address(RVA = "0x1AD42C8", Offset = "0x1AD42C8", VA = "0x1AD42C8")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1AD3178", Offset = "0x1AD3178", VA = "0x1AD3178")]
		private void Start()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x1AD34C4", Offset = "0x1AD34C4", VA = "0x1AD34C4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1AD3C48", Offset = "0x1AD3C48", VA = "0x1AD3C48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x1AD3E70", Offset = "0x1AD3E70", VA = "0x1AD3E70")]
		public TouchWalls()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class TransferMotion : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B81C", Offset = "0xD8B81C")]
		public Transform to;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B854", Offset = "0xD8B854")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B854", Offset = "0xD8B854")]
		public float transferMotion;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1AD42FC", Offset = "0x1AD42FC", VA = "0x1AD42FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1AD4338", Offset = "0x1AD4338", VA = "0x1AD4338")]
		private void Update()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1AD4490", Offset = "0x1AD4490", VA = "0x1AD4490")]
		public TransferMotion()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class TwoHandedProp : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B8A8", Offset = "0xD8B8A8")]
		public Transform leftHandTarget;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 targetPosRelativeToRight;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion targetRotRelativeToRight;

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1AD4650", Offset = "0x1AD4650", VA = "0x1AD4650")]
		private void Start()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1AD4808", Offset = "0x1AD4808", VA = "0x1AD4808")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1AD4AA4", Offset = "0x1AD4AA4", VA = "0x1AD4AA4")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1AD4B70", Offset = "0x1AD4B70", VA = "0x1AD4B70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1AD4C68", Offset = "0x1AD4C68", VA = "0x1AD4C68")]
		public TwoHandedProp()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class UserControlInteractions : UserControlThirdPerson
	{
		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CharacterThirdPerson character;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool disableInputInInteraction;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float enableInputAtProgress;

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1AD4FCC", Offset = "0x1AD4FCC", VA = "0x1AD4FCC", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x1AD5444", Offset = "0x1AD5444", VA = "0x1AD5444")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x1AD569C", Offset = "0x1AD569C", VA = "0x1AD569C")]
		public UserControlInteractions()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class GrounderDemo : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] characters;

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x1EBC0E4", Offset = "0x1EBC0E4", VA = "0x1EBC0E4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1EBC3E0", Offset = "0x1EBC3E0", VA = "0x1EBC3E0")]
		public void Activate(int index)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1EBC460", Offset = "0x1EBC460", VA = "0x1EBC460")]
		public GrounderDemo()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class PlatformRotator : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80C64", Offset = "0xD80C64")]
		private sealed class <SwitchRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformRotator <>4__this;

			[Token(Token = "0x1700044D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600229B")]
				[Address(RVA = "0x1AD0C08", Offset = "0x1AD0C08", VA = "0x1AD0C08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600229D")]
				[Address(RVA = "0x1AD0C70", Offset = "0x1AD0C70", VA = "0x1AD0C70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002298")]
			[Address(RVA = "0x1AD08C4", Offset = "0x1AD08C4", VA = "0x1AD08C4")]
			[DebuggerHidden]
			public <SwitchRotation>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002299")]
			[Address(RVA = "0x1AD0AD0", Offset = "0x1AD0AD0", VA = "0x1AD0AD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600229A")]
			[Address(RVA = "0x1AD0AD4", Offset = "0x1AD0AD4", VA = "0x1AD0AD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600229C")]
			[Address(RVA = "0x1AD0C10", Offset = "0x1AD0C10", VA = "0x1AD0C10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAngle;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float switchRotationTime;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float random;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationSpeed;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 movePosition;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float moveSpeed;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int characterLayer;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion targetRotation;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 targetPosition;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 velocity;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody r;

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1AD0510", Offset = "0x1AD0510", VA = "0x1AD0510")]
		private void Start()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1AD069C", Offset = "0x1AD069C", VA = "0x1AD069C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x1AD062C", Offset = "0x1AD062C", VA = "0x1AD062C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD95498", Offset = "0xD95498")]
		private IEnumerator SwitchRotation()
		{
			return null;
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x1AD08F0", Offset = "0x1AD08F0", VA = "0x1AD08F0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x1AD09D4", Offset = "0x1AD09D4", VA = "0x1AD09D4")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x1AD0AB4", Offset = "0x1AD0AB4", VA = "0x1AD0AB4")]
		public PlatformRotator()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class BendGoal : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbIK limbIK;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8B8E0", Offset = "0xD8B8E0")]
		public float weight;

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x1EB3D24", Offset = "0x1EB3D24", VA = "0x1EB3D24")]
		private void Start()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x1EB3D90", Offset = "0x1EB3D90", VA = "0x1EB3D90")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x1EB3E4C", Offset = "0x1EB3E4C", VA = "0x1EB3E4C")]
		public BendGoal()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class Turret : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000548")]
		public class Part
		{
			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400226A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RotationLimit rotationLimit;

			[Token(Token = "0x600229E")]
			[Address(RVA = "0x1AD451C", Offset = "0x1AD451C", VA = "0x1AD451C")]
			public void AimAt(Transform target)
			{
			}

			[Token(Token = "0x600229F")]
			[Address(RVA = "0x1AD4648", Offset = "0x1AD4648", VA = "0x1AD4648")]
			public Part()
			{
			}
		}

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Part[] parts;

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x1AD44A4", Offset = "0x1AD44A4", VA = "0x1AD44A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x1AD4640", Offset = "0x1AD4640", VA = "0x1AD4640")]
		public Turret()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class HitReactionVRIKTrigger : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReactionVRIK hitReaction;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x1EBC7FC", Offset = "0x1EBC7FC", VA = "0x1EBC7FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x1EBC9BC", Offset = "0x1EBC9BC", VA = "0x1EBC9BC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x1EBCB80", Offset = "0x1EBCB80", VA = "0x1EBCB80")]
		public HitReactionVRIKTrigger()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class VRIKCalibrationController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B8F8", Offset = "0xD8B8F8")]
		public VRIK ik;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B930", Offset = "0xD8B930")]
		public VRIKCalibrator.Settings settings;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B968", Offset = "0xD8B968")]
		public Transform headTracker;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B9A0", Offset = "0xD8B9A0")]
		public Transform bodyTracker;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8B9D8", Offset = "0xD8B9D8")]
		public Transform leftHandTracker;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BA10", Offset = "0xD8BA10")]
		public Transform rightHandTracker;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BA48", Offset = "0xD8BA48")]
		public Transform leftFootTracker;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BA80", Offset = "0xD8BA80")]
		public Transform rightFootTracker;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8BAB8", Offset = "0xD8BAB8")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x1AD56C0", Offset = "0x1AD56C0", VA = "0x1AD56C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x1AD581C", Offset = "0x1AD581C", VA = "0x1AD581C")]
		public VRIKCalibrationController()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class VRIKPlatform : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion lastRotation;

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x1AD5884", Offset = "0x1AD5884", VA = "0x1AD5884")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x1AD58E0", Offset = "0x1AD58E0", VA = "0x1AD58E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1AD5AF4", Offset = "0x1AD5AF4", VA = "0x1AD5AF4")]
		public VRIKPlatform()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class VRIKPlatformController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackingSpace;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform platform;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool moveToPlatform;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform lastPlatform;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPosition;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1AD5B6C", Offset = "0x1AD5B6C", VA = "0x1AD5B6C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1AD60BC", Offset = "0x1AD60BC", VA = "0x1AD60BC")]
		public VRIKPlatformController()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public abstract class CharacterAnimationBase : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x170002B4")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x600194E")]
			[Address(RVA = "0x1EB434C", Offset = "0x1EB434C", VA = "0x1EB434C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1EB4328", Offset = "0x1EB4328", VA = "0x1EB4328", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1EB4354", Offset = "0x1EB4354", VA = "0x1EB4354")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x1EB4418", Offset = "0x1EB4418", VA = "0x1EB4418", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x1EB4590", Offset = "0x1EB4590", VA = "0x1EB4590", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x1EB4844", Offset = "0x1EB4844", VA = "0x1EB4844", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x1EB45A0", Offset = "0x1EB45A0", VA = "0x1EB45A0")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1EB4854", Offset = "0x1EB4854", VA = "0x1EB4854")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD801E4", Offset = "0xD801E4")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x1EB486C", Offset = "0x1EB486C", VA = "0x1EB486C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x1EB48CC", Offset = "0x1EB48CC", VA = "0x1EB48CC", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1EB49F8", Offset = "0x1EB49F8", VA = "0x1EB49F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x1EB4B74", Offset = "0x1EB4B74", VA = "0x1EB4B74")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD80248", Offset = "0xD80248")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD8BB20", Offset = "0xD8BB20")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x400176E")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x400176F")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x170002B5")]
		public override bool animationGrounded
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x1EB4C2C", Offset = "0x1EB4C2C", VA = "0x1EB4C2C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x1EB4B8C", Offset = "0x1EB4B8C", VA = "0x1EB4B8C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x1EB4C10", Offset = "0x1EB4C10", VA = "0x1EB4C10", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x1EB4D1C", Offset = "0x1EB4D1C", VA = "0x1EB4D1C", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x1EB50D0", Offset = "0x1EB50D0", VA = "0x1EB50D0")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x1EB5284", Offset = "0x1EB5284", VA = "0x1EB5284")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD802AC", Offset = "0xD802AC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD802AC", Offset = "0xD802AC")]
	public abstract class CharacterBase : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8BB64", Offset = "0xD8BB64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BB64", Offset = "0xD8BB64")]
		public Transform gravityTarget;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BBC4", Offset = "0xD8BBC4")]
		public float gravityMultiplier;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x400177B")]
		protected const float half = 0.5f;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x600195F")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x1EB57A8", Offset = "0x1EB57A8", VA = "0x1EB57A8")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1EB592C", Offset = "0x1EB592C", VA = "0x1EB592C", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x1EB5AC4", Offset = "0x1EB5AC4", VA = "0x1EB5AC4", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x1EB5D3C", Offset = "0x1EB5D3C", VA = "0x1EB5D3C")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x1EB5E00", Offset = "0x1EB5E00", VA = "0x1EB5E00")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x1EB5FE8", Offset = "0x1EB5FE8", VA = "0x1EB5FE8")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x1EB6198", Offset = "0x1EB6198", VA = "0x1EB6198")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x1EB61BC", Offset = "0x1EB61BC", VA = "0x1EB61BC")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x1EB61E0", Offset = "0x1EB61E0", VA = "0x1EB61E0")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1EB62E4", Offset = "0x1EB62E4", VA = "0x1EB62E4")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x2000549")]
		public enum MoveMode
		{
			[Token(Token = "0x400226C")]
			Directional,
			[Token(Token = "0x400226D")]
			Strafe
		}

		[Token(Token = "0x200054A")]
		public struct AnimState
		{
			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x4002274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80C74", Offset = "0xD80C74")]
		private sealed class <JumpSmooth>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x4002278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x4002279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x400227A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x1700044F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022A3")]
				[Address(RVA = "0x1EB8FF0", Offset = "0x1EB8FF0", VA = "0x1EB8FF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000450")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A5")]
				[Address(RVA = "0x1EB9058", Offset = "0x1EB9058", VA = "0x1EB9058", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A0")]
			[Address(RVA = "0x1EB8D50", Offset = "0x1EB8D50", VA = "0x1EB8D50")]
			[DebuggerHidden]
			public <JumpSmooth>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x1EB8EB0", Offset = "0x1EB8EB0", VA = "0x1EB8EB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A2")]
			[Address(RVA = "0x1EB8EB4", Offset = "0x1EB8EB4", VA = "0x1EB8EB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x1EB8FF8", Offset = "0x1EB8FF8", VA = "0x1EB8FF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8BBFC", Offset = "0xD8BBFC")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8BC34", Offset = "0xD8BC34")]
		public MoveMode moveMode;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8BC6C", Offset = "0xD8BC6C")]
		public bool lookInCameraDirection;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8BCA4", Offset = "0xD8BCA4")]
		public bool smoothJump;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8BCDC", Offset = "0xD8BCDC")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD8BD14", Offset = "0xD8BD14")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8BD4C", Offset = "0xD8BD4C")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool fixedFrame;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float wallRunEndTime;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 gravity;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float velocityY;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool doubleJumped;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool jumpReleased;

		[Token(Token = "0x170002B6")]
		public bool onGround
		{
			[Token(Token = "0x600196A")]
			[Address(RVA = "0x1EB6700", Offset = "0x1EB6700", VA = "0x1EB6700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD954FC", Offset = "0xD954FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600196B")]
			[Address(RVA = "0x1EB6708", Offset = "0x1EB6708", VA = "0x1EB6708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9550C", Offset = "0xD9550C")]
			private set
			{
			}
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x1EB6714", Offset = "0x1EB6714", VA = "0x1EB6714", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x1EB6898", Offset = "0x1EB6898", VA = "0x1EB6898")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1EB6928", Offset = "0x1EB6928", VA = "0x1EB6928", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x1EB6A64", Offset = "0x1EB6A64", VA = "0x1EB6A64")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x1EB79A0", Offset = "0x1EB79A0", VA = "0x1EB79A0", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x1EB7D38", Offset = "0x1EB7D38", VA = "0x1EB7D38", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x1EB7070", Offset = "0x1EB7070", VA = "0x1EB7070")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x1EB7E18", Offset = "0x1EB7E18", VA = "0x1EB7E18")]
		private void WallRun()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x1EB8408", Offset = "0x1EB8408", VA = "0x1EB8408")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x1EB7A7C", Offset = "0x1EB7A7C", VA = "0x1EB7A7C")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x1EB84A8", Offset = "0x1EB84A8", VA = "0x1EB84A8", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x1EB8918", Offset = "0x1EB8918", VA = "0x1EB8918")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x1EB8AA4", Offset = "0x1EB8AA4", VA = "0x1EB8AA4", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x1EB8CBC", Offset = "0x1EB8CBC", VA = "0x1EB8CBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD9551C", Offset = "0xD9551C")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1EB7580", Offset = "0x1EB7580", VA = "0x1EB7580")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x1EB8D7C", Offset = "0x1EB8D7C", VA = "0x1EB8D7C")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD80338", Offset = "0xD80338")]
	public class SimpleLocomotion : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200054C")]
		public enum RotationMode
		{
			[Token(Token = "0x400227C")]
			Smooth,
			[Token(Token = "0x400227D")]
			Linear
		}

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BD5C", Offset = "0xD8BD5C")]
		public CameraController cameraController;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BD94", Offset = "0xD8BD94")]
		public float accelerationTime;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BDCC", Offset = "0xD8BDCC")]
		public float turnTime;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BE04", Offset = "0xD8BE04")]
		public bool walkByDefault;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BE3C", Offset = "0xD8BE3C")]
		public RotationMode rotationMode;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BE74", Offset = "0xD8BE74")]
		public float moveSpeed;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8BEAC", Offset = "0xD8BEAC")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x170002B7")]
		public bool isGrounded
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0x1AD1EDC", Offset = "0x1AD1EDC", VA = "0x1AD1EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95580", Offset = "0xD95580")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600197D")]
			[Address(RVA = "0x1AD1EE4", Offset = "0x1AD1EE4", VA = "0x1AD1EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95590", Offset = "0xD95590")]
			private set
			{
			}
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1AD1EF0", Offset = "0x1AD1EF0", VA = "0x1AD1EF0")]
		private void Start()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1AD1F78", Offset = "0x1AD1F78", VA = "0x1AD1F78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x1AD2674", Offset = "0x1AD2674", VA = "0x1AD2674")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x1AD1FCC", Offset = "0x1AD1FCC", VA = "0x1AD1FCC")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1AD23CC", Offset = "0x1AD23CC", VA = "0x1AD23CC")]
		private void Move()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x1AD26B0", Offset = "0x1AD26B0", VA = "0x1AD26B0")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x1AD27A8", Offset = "0x1AD27A8", VA = "0x1AD27A8")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x1AD2848", Offset = "0x1AD2848", VA = "0x1AD2848")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x1AD4C70", Offset = "0x1AD4C70", VA = "0x1AD4C70", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x1AD4CE8", Offset = "0x1AD4CE8", VA = "0x1AD4CE8", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x1AD4F7C", Offset = "0x1AD4F7C", VA = "0x1AD4F7C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x1AD4FA0", Offset = "0x1AD4FA0", VA = "0x1AD4FA0")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class UserControlThirdPerson : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200054D")]
		public struct State
		{
			[Token(Token = "0x400227E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x400227F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x4002282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1AD4CB0", Offset = "0x1AD4CB0", VA = "0x1AD4CB0", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x1AD50E0", Offset = "0x1AD50E0", VA = "0x1AD50E0", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x1AD4FBC", Offset = "0x1AD4FBC", VA = "0x1AD4FBC")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class ApplicationQuit : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600198D")]
		[Address(RVA = "0x1EB3CE0", Offset = "0x1EB3CE0", VA = "0x1EB3CE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x1EB3D1C", Offset = "0x1EB3D1C", VA = "0x1EB3D1C")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class SlowMo : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x1AD2870", Offset = "0x1AD2870", VA = "0x1AD2870")]
		private void Update()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x1AD28A4", Offset = "0x1AD28A4", VA = "0x1AD28A4")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x1AD2954", Offset = "0x1AD2954", VA = "0x1AD2954")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000331")]
	public class Navigator
	{
		[Token(Token = "0x200054E")]
		public enum State
		{
			[Token(Token = "0x4002284")]
			Idle,
			[Token(Token = "0x4002285")]
			Seeking,
			[Token(Token = "0x4002286")]
			OnPath
		}

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BEBC", Offset = "0xD8BEBC")]
		public bool activeTargetSeeking;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BEF4", Offset = "0xD8BEF4")]
		public float cornerRadius;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BF2C", Offset = "0xD8BF2C")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BF64", Offset = "0xD8BF64")]
		public float maxSampleDistance;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8BF9C", Offset = "0xD8BF9C")]
		public float nextPathInterval;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8BFD4", Offset = "0xD8BFD4")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8BFE4", Offset = "0xD8BFE4")]
		private State <state>k__BackingField;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x170002B8")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x1ACDD4C", Offset = "0x1ACDD4C", VA = "0x1ACDD4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD955A0", Offset = "0xD955A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x1ACDD58", Offset = "0x1ACDD58", VA = "0x1ACDD58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD955B0", Offset = "0xD955B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public State state
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x1ACDD64", Offset = "0x1ACDD64", VA = "0x1ACDD64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD955C0", Offset = "0xD955C0")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x1ACDD6C", Offset = "0x1ACDD6C", VA = "0x1ACDD6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD955D0", Offset = "0xD955D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x1ACDD74", Offset = "0x1ACDD74", VA = "0x1ACDD74")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x1ACDE48", Offset = "0x1ACDE48", VA = "0x1ACDE48")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x1ACE38C", Offset = "0x1ACE38C", VA = "0x1ACE38C")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x1ACE3FC", Offset = "0x1ACE3FC", VA = "0x1ACE3FC")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x1ACE254", Offset = "0x1ACE254", VA = "0x1ACE254")]
		private void Stop()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x1ACE2C8", Offset = "0x1ACE2C8", VA = "0x1ACE2C8")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x1ACE544", Offset = "0x1ACE544", VA = "0x1ACE544")]
		public void Visualize()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x1ACE6F4", Offset = "0x1ACE6F4", VA = "0x1ACE6F4")]
		public Navigator()
		{
		}
	}
}
namespace POpusCodec
{
	[Token(Token = "0x2000332")]
	public class OpusDecoder : IDisposable
	{
		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr _handle;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _version;

		[Token(Token = "0x40017E1")]
		private const int MaxFrameSize = 5760;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _previousPacketInvalid;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _channelCount;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] EmptyBufferFloat;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly short[] EmptyBufferShort;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Bandwidth? _previousPacketBandwidth;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] bufferFloat;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private short[] bufferShort;

		[Token(Token = "0x170002BA")]
		public string Version
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x1BC93E4", Offset = "0x1BC93E4", VA = "0x1BC93E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		public Bandwidth? PreviousPacketBandwidth
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x1BC93EC", Offset = "0x1BC93EC", VA = "0x1BC93EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x1BC93F4", Offset = "0x1BC93F4", VA = "0x1BC93F4")]
		public OpusDecoder(SamplingRate outputSamplingRateHz, Channels numChannels)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x1BC9860", Offset = "0x1BC9860", VA = "0x1BC9860")]
		public float[] DecodePacketFloat(byte[] packetData)
		{
			return null;
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x1BC9B3C", Offset = "0x1BC9B3C", VA = "0x1BC9B3C")]
		public short[] DecodePacketShort(byte[] packetData)
		{
			return null;
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x1BC9D94", Offset = "0x1BC9D94", VA = "0x1BC9D94", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class OpusEncoder : IDisposable
	{
		[Token(Token = "0x40017E9")]
		public const int BitrateMax = -1;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr _handle;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _version;

		[Token(Token = "0x40017EC")]
		private const int RecommendedMaxPacketSize = 4000;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _frameSizePerChannel;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private SamplingRate _inputSamplingRate;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Channels _inputChannels;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly byte[] writePacket;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ArraySegment<byte> EmptyBuffer;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Delay _encoderDelay;

		[Token(Token = "0x170002BC")]
		public SamplingRate InputSamplingRate
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x1BC9EE0", Offset = "0x1BC9EE0", VA = "0x1BC9EE0")]
			get
			{
				return default(SamplingRate);
			}
		}

		[Token(Token = "0x170002BD")]
		public Channels InputChannels
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x1BC9EE8", Offset = "0x1BC9EE8", VA = "0x1BC9EE8")]
			get
			{
				return default(Channels);
			}
		}

		[Token(Token = "0x170002BE")]
		public string Version
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x1BC9EF0", Offset = "0x1BC9EF0", VA = "0x1BC9EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BF")]
		public Delay EncoderDelay
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x1BC9FFC", Offset = "0x1BC9FFC", VA = "0x1BC9FFC")]
			get
			{
				return default(Delay);
			}
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x1BC9EF8", Offset = "0x1BC9EF8", VA = "0x1BC9EF8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public int FrameSizePerChannel
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x1BCA004", Offset = "0x1BCA004", VA = "0x1BCA004")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C1")]
		public int Bitrate
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x1BCA00C", Offset = "0x1BCA00C", VA = "0x1BCA00C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x1BCA0D4", Offset = "0x1BCA0D4", VA = "0x1BCA0D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public Bandwidth MaxBandwidth
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0x1BCA194", Offset = "0x1BCA194", VA = "0x1BCA194")]
			get
			{
				return default(Bandwidth);
			}
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0x1BCA1A0", Offset = "0x1BCA1A0", VA = "0x1BCA1A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public Complexity Complexity
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0x1BCA1B0", Offset = "0x1BCA1B0", VA = "0x1BCA1B0")]
			get
			{
				return default(Complexity);
			}
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0x1BCA1BC", Offset = "0x1BCA1BC", VA = "0x1BCA1BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public int ExpectedPacketLossPercentage
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0x1BCA1CC", Offset = "0x1BCA1CC", VA = "0x1BCA1CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x1BCA1D8", Offset = "0x1BCA1D8", VA = "0x1BCA1D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public SignalHint SignalHint
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0x1BCA1E8", Offset = "0x1BCA1E8", VA = "0x1BCA1E8")]
			get
			{
				return default(SignalHint);
			}
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x1BCA1F4", Offset = "0x1BCA1F4", VA = "0x1BCA1F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public ForceChannels ForceChannels
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x1BCA204", Offset = "0x1BCA204", VA = "0x1BCA204")]
			get
			{
				return default(ForceChannels);
			}
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x1BCA210", Offset = "0x1BCA210", VA = "0x1BCA210")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public bool UseInbandFEC
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x1BCA220", Offset = "0x1BCA220", VA = "0x1BCA220")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x1BCA244", Offset = "0x1BCA244", VA = "0x1BCA244")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public bool UseUnconstrainedVBR
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x1BCA254", Offset = "0x1BCA254", VA = "0x1BCA254")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x1BCA278", Offset = "0x1BCA278", VA = "0x1BCA278")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public bool DtxEnabled
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x1BCA28C", Offset = "0x1BCA28C", VA = "0x1BCA28C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x1BCA2B0", Offset = "0x1BCA2B0", VA = "0x1BCA2B0")]
			set
			{
			}
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x1BCA2C0", Offset = "0x1BCA2C0", VA = "0x1BCA2C0")]
		public OpusEncoder(SamplingRate inputSamplingRateHz, Channels numChannels, int bitrate, OpusApplicationType applicationType, Delay encoderDelay)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x1BCA7B8", Offset = "0x1BCA7B8", VA = "0x1BCA7B8")]
		public ArraySegment<byte> Encode(float[] pcmSamples)
		{
			return default(ArraySegment<byte>);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x1BCA968", Offset = "0x1BCA968", VA = "0x1BCA968")]
		public ArraySegment<byte> Encode(short[] pcmSamples)
		{
			return default(ArraySegment<byte>);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x1BCAB18", Offset = "0x1BCAB18", VA = "0x1BCAB18", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class OpusException : Exception
	{
		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private OpusStatusCode _statusCode;

		[Token(Token = "0x170002CA")]
		public OpusStatusCode StatusCode
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x1BCAC6C", Offset = "0x1BCAC6C", VA = "0x1BCAC6C")]
			get
			{
				return default(OpusStatusCode);
			}
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x1BC97DC", Offset = "0x1BC97DC", VA = "0x1BC97DC")]
		public OpusException(OpusStatusCode statusCode, string message)
		{
		}
	}
	[Token(Token = "0x2000335")]
	internal class Wrapper
	{
		[Token(Token = "0x40017F4")]
		private const string lib_name = "opus_egpv";

		[PreserveSig]
		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x1BCAC74", Offset = "0x1BCAC74", VA = "0x1BCAC74")]
		private static extern int opus_encoder_get_size(Channels channels);

		[PreserveSig]
		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x1BCACF4", Offset = "0x1BCACF4", VA = "0x1BCACF4")]
		private static extern OpusStatusCode opus_encoder_init(IntPtr st, SamplingRate Fs, Channels channels, OpusApplicationType application);

		[PreserveSig]
		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x1BC976C", Offset = "0x1BC976C", VA = "0x1BC976C")]
		public static extern IntPtr opus_get_version_string();

		[PreserveSig]
		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x1BCAD9C", Offset = "0x1BCAD9C", VA = "0x1BCAD9C")]
		private static extern int opus_encode(IntPtr st, short[] pcm, int frame_size, byte[] data, int max_data_bytes);

		[PreserveSig]
		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x1BCAE5C", Offset = "0x1BCAE5C", VA = "0x1BCAE5C")]
		private static extern int opus_encode_float(IntPtr st, float[] pcm, int frame_size, byte[] data, int max_data_bytes);

		[PreserveSig]
		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x1BCAF1C", Offset = "0x1BCAF1C", VA = "0x1BCAF1C")]
		private static extern int opus_encoder_ctl_set(IntPtr st, OpusCtlSetRequest request, int value);

		[PreserveSig]
		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x1BCAFB4", Offset = "0x1BCAFB4", VA = "0x1BCAFB4")]
		private static extern int opus_encoder_ctl_get(IntPtr st, OpusCtlGetRequest request, ref int value);

		[PreserveSig]
		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x1BCB048", Offset = "0x1BCB048", VA = "0x1BCB048")]
		private static extern int opus_decoder_ctl_set(IntPtr st, OpusCtlSetRequest request, int value);

		[PreserveSig]
		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x1BCB0E0", Offset = "0x1BCB0E0", VA = "0x1BCB0E0")]
		private static extern int opus_decoder_ctl_get(IntPtr st, OpusCtlGetRequest request, ref int value);

		[PreserveSig]
		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x1BCB174", Offset = "0x1BCB174", VA = "0x1BCB174")]
		private static extern int opus_decoder_get_size(Channels channels);

		[PreserveSig]
		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x1BCB1F4", Offset = "0x1BCB1F4", VA = "0x1BCB1F4")]
		private static extern OpusStatusCode opus_decoder_init(IntPtr st, SamplingRate Fs, Channels channels);

		[PreserveSig]
		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x1BCB28C", Offset = "0x1BCB28C", VA = "0x1BCB28C")]
		private static extern int opus_decode(IntPtr st, byte[] data, int len, short[] pcm, int frame_size, int decode_fec);

		[PreserveSig]
		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x1BCB35C", Offset = "0x1BCB35C", VA = "0x1BCB35C")]
		private static extern int opus_decode_float(IntPtr st, byte[] data, int len, float[] pcm, int frame_size, int decode_fec);

		[PreserveSig]
		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x1BC9AB4", Offset = "0x1BC9AB4", VA = "0x1BC9AB4")]
		public static extern int opus_packet_get_bandwidth(byte[] data);

		[PreserveSig]
		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x1BCB42C", Offset = "0x1BCB42C", VA = "0x1BCB42C")]
		public static extern int opus_packet_get_nb_channels(byte[] data);

		[PreserveSig]
		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x1BCB4B4", Offset = "0x1BCB4B4", VA = "0x1BCB4B4")]
		private static extern IntPtr opus_strerror(OpusStatusCode error);

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1BCA674", Offset = "0x1BCA674", VA = "0x1BCA674")]
		public static IntPtr opus_encoder_create(SamplingRate Fs, Channels channels, OpusApplicationType application)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x1BCAA34", Offset = "0x1BCAA34", VA = "0x1BCAA34")]
		public static int opus_encode(IntPtr st, short[] pcm, int frame_size, byte[] data)
		{
			return default(int);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x1BCA884", Offset = "0x1BCA884", VA = "0x1BCA884")]
		public static int opus_encode(IntPtr st, float[] pcm, int frame_size, byte[] data)
		{
			return default(int);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1BCAB78", Offset = "0x1BCAB78", VA = "0x1BCAB78")]
		public static void opus_encoder_destroy(IntPtr st)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x1BCA018", Offset = "0x1BCA018", VA = "0x1BCA018")]
		public static int get_opus_encoder_ctl(IntPtr st, OpusCtlGetRequest request)
		{
			return default(int);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x1BCA0E4", Offset = "0x1BCA0E4", VA = "0x1BCA0E4")]
		public static void set_opus_encoder_ctl(IntPtr st, OpusCtlSetRequest request, int value)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x1BCB5F8", Offset = "0x1BCB5F8", VA = "0x1BCB5F8")]
		public static int get_opus_decoder_ctl(IntPtr st, OpusCtlGetRequest request)
		{
			return default(int);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x1BCB6B4", Offset = "0x1BCB6B4", VA = "0x1BCB6B4")]
		public static void set_opus_decoder_ctl(IntPtr st, OpusCtlSetRequest request, int value)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x1BC9630", Offset = "0x1BC9630", VA = "0x1BC9630")]
		public static IntPtr opus_decoder_create(SamplingRate Fs, Channels channels)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x1BC9DF4", Offset = "0x1BC9DF4", VA = "0x1BC9DF4")]
		public static void opus_decoder_destroy(IntPtr st)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x1BC9C78", Offset = "0x1BC9C78", VA = "0x1BC9C78")]
		public static int opus_decode(IntPtr st, byte[] data, short[] pcm, int decode_fec, int channels)
		{
			return default(int);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x1BC9998", Offset = "0x1BC9998", VA = "0x1BC9998")]
		public static int opus_decode(IntPtr st, byte[] data, float[] pcm, int decode_fec, int channels)
		{
			return default(int);
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x1BCB534", Offset = "0x1BCB534", VA = "0x1BCB534")]
		private static void HandleStatusCode(OpusStatusCode statusCode)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x1BCB764", Offset = "0x1BCB764", VA = "0x1BCB764")]
		public Wrapper()
		{
		}
	}
}
namespace POpusCodec.Enums
{
	[Token(Token = "0x2000336")]
	public enum Bandwidth
	{
		[Token(Token = "0x40017F6")]
		Narrowband = 1101,
		[Token(Token = "0x40017F7")]
		Mediumband,
		[Token(Token = "0x40017F8")]
		Wideband,
		[Token(Token = "0x40017F9")]
		SuperWideband,
		[Token(Token = "0x40017FA")]
		Fullband
	}
	[Token(Token = "0x2000337")]
	public enum Channels
	{
		[Token(Token = "0x40017FC")]
		Mono = 1,
		[Token(Token = "0x40017FD")]
		Stereo
	}
	[Token(Token = "0x2000338")]
	public enum Complexity
	{
		[Token(Token = "0x40017FF")]
		Complexity0,
		[Token(Token = "0x4001800")]
		Complexity1,
		[Token(Token = "0x4001801")]
		Complexity2,
		[Token(Token = "0x4001802")]
		Complexity3,
		[Token(Token = "0x4001803")]
		Complexity4,
		[Token(Token = "0x4001804")]
		Complexity5,
		[Token(Token = "0x4001805")]
		Complexity6,
		[Token(Token = "0x4001806")]
		Complexity7,
		[Token(Token = "0x4001807")]
		Complexity8,
		[Token(Token = "0x4001808")]
		Complexity9,
		[Token(Token = "0x4001809")]
		Complexity10
	}
	[Token(Token = "0x2000339")]
	public enum Delay
	{
		[Token(Token = "0x400180B")]
		Delay2dot5ms = 5,
		[Token(Token = "0x400180C")]
		Delay5ms = 10,
		[Token(Token = "0x400180D")]
		Delay10ms = 20,
		[Token(Token = "0x400180E")]
		Delay20ms = 40,
		[Token(Token = "0x400180F")]
		Delay40ms = 80,
		[Token(Token = "0x4001810")]
		Delay60ms = 120
	}
	[Token(Token = "0x200033A")]
	public enum ForceChannels
	{
		[Token(Token = "0x4001812")]
		NoForce = -1000,
		[Token(Token = "0x4001813")]
		Mono = 1,
		[Token(Token = "0x4001814")]
		Stereo = 2
	}
	[Token(Token = "0x200033B")]
	public enum OpusApplicationType
	{
		[Token(Token = "0x4001816")]
		Voip = 2048,
		[Token(Token = "0x4001817")]
		Audio = 2049,
		[Token(Token = "0x4001818")]
		RestrictedLowDelay = 2051
	}
	[Token(Token = "0x200033C")]
	internal enum OpusCtlGetRequest
	{
		[Token(Token = "0x400181A")]
		Application = 4001,
		[Token(Token = "0x400181B")]
		Bitrate = 4003,
		[Token(Token = "0x400181C")]
		MaxBandwidth = 4005,
		[Token(Token = "0x400181D")]
		VBR = 4007,
		[Token(Token = "0x400181E")]
		Bandwidth = 4009,
		[Token(Token = "0x400181F")]
		Complexity = 4011,
		[Token(Token = "0x4001820")]
		InbandFec = 4013,
		[Token(Token = "0x4001821")]
		PacketLossPercentage = 4015,
		[Token(Token = "0x4001822")]
		Dtx = 4017,
		[Token(Token = "0x4001823")]
		VBRConstraint = 4021,
		[Token(Token = "0x4001824")]
		ForceChannels = 4023,
		[Token(Token = "0x4001825")]
		Signal = 4025,
		[Token(Token = "0x4001826")]
		LookAhead = 4027,
		[Token(Token = "0x4001827")]
		SampleRate = 4029,
		[Token(Token = "0x4001828")]
		FinalRange = 4031,
		[Token(Token = "0x4001829")]
		Pitch = 4033,
		[Token(Token = "0x400182A")]
		Gain = 4035,
		[Token(Token = "0x400182B")]
		LsbDepth = 4037,
		[Token(Token = "0x400182C")]
		LastPacketDurationRequest = 4039
	}
	[Token(Token = "0x200033D")]
	internal enum OpusCtlSetRequest
	{
		[Token(Token = "0x400182E")]
		Application = 4000,
		[Token(Token = "0x400182F")]
		Bitrate = 4002,
		[Token(Token = "0x4001830")]
		MaxBandwidth = 4004,
		[Token(Token = "0x4001831")]
		VBR = 4006,
		[Token(Token = "0x4001832")]
		Bandwidth = 4008,
		[Token(Token = "0x4001833")]
		Complexity = 4010,
		[Token(Token = "0x4001834")]
		InbandFec = 4012,
		[Token(Token = "0x4001835")]
		PacketLossPercentage = 4014,
		[Token(Token = "0x4001836")]
		Dtx = 4016,
		[Token(Token = "0x4001837")]
		VBRConstraint = 4020,
		[Token(Token = "0x4001838")]
		ForceChannels = 4022,
		[Token(Token = "0x4001839")]
		Signal = 4024,
		[Token(Token = "0x400183A")]
		Gain = 4034,
		[Token(Token = "0x400183B")]
		LsbDepth = 4036
	}
	[Token(Token = "0x200033E")]
	public enum OpusStatusCode
	{
		[Token(Token = "0x400183D")]
		OK = 0,
		[Token(Token = "0x400183E")]
		BadArguments = -1,
		[Token(Token = "0x400183F")]
		BufferTooSmall = -2,
		[Token(Token = "0x4001840")]
		InternalError = -3,
		[Token(Token = "0x4001841")]
		InvalidPacket = -4,
		[Token(Token = "0x4001842")]
		Unimplemented = -5,
		[Token(Token = "0x4001843")]
		InvalidState = -6,
		[Token(Token = "0x4001844")]
		AllocFail = -7
	}
	[Token(Token = "0x200033F")]
	public enum SamplingRate
	{
		[Token(Token = "0x4001846")]
		Sampling08000 = 8000,
		[Token(Token = "0x4001847")]
		Sampling12000 = 12000,
		[Token(Token = "0x4001848")]
		Sampling16000 = 16000,
		[Token(Token = "0x4001849")]
		Sampling24000 = 24000,
		[Token(Token = "0x400184A")]
		Sampling48000 = 48000
	}
	[Token(Token = "0x2000340")]
	public enum SignalHint
	{
		[Token(Token = "0x400184C")]
		Auto = -1000,
		[Token(Token = "0x400184D")]
		Voice = 3001,
		[Token(Token = "0x400184E")]
		Music = 3002
	}
}
namespace Photon
{
	[Token(Token = "0x2000341")]
	public class MonoBehaviour : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhotonView pvCache;

		[Token(Token = "0x170002CB")]
		public PhotonView photonView
		{
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x1BC5D34", Offset = "0x1BC5D34", VA = "0x1BC5D34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x1BC5B50", Offset = "0x1BC5B50", VA = "0x1BC5B50")]
		public MonoBehaviour()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class PunBehaviour : MonoBehaviour, IPunCallbacks
	{
		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x1BD1D74", Offset = "0x1BD1D74", VA = "0x1BD1D74", Slot = "33")]
		public virtual void OnConnectedToPhoton()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x1BD1D78", Offset = "0x1BD1D78", VA = "0x1BD1D78", Slot = "34")]
		public virtual void OnLeftRoom()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x1BD1D7C", Offset = "0x1BD1D7C", VA = "0x1BD1D7C", Slot = "35")]
		public virtual void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x1BD1D80", Offset = "0x1BD1D80", VA = "0x1BD1D80", Slot = "36")]
		public virtual void OnPhotonCreateRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x1BD1D84", Offset = "0x1BD1D84", VA = "0x1BD1D84", Slot = "37")]
		public virtual void OnPhotonJoinRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x1BD1D88", Offset = "0x1BD1D88", VA = "0x1BD1D88", Slot = "38")]
		public virtual void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x1BD1D8C", Offset = "0x1BD1D8C", VA = "0x1BD1D8C", Slot = "39")]
		public virtual void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x1BD1D90", Offset = "0x1BD1D90", VA = "0x1BD1D90", Slot = "40")]
		public virtual void OnLeftLobby()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x1BD1D94", Offset = "0x1BD1D94", VA = "0x1BD1D94", Slot = "41")]
		public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x1BD1D98", Offset = "0x1BD1D98", VA = "0x1BD1D98", Slot = "42")]
		public virtual void OnDisconnectedFromPhoton()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x1BD1D9C", Offset = "0x1BD1D9C", VA = "0x1BD1D9C", Slot = "43")]
		public virtual void OnConnectionFail(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x1BD1DA0", Offset = "0x1BD1DA0", VA = "0x1BD1DA0", Slot = "44")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x1BD1DA4", Offset = "0x1BD1DA4", VA = "0x1BD1DA4", Slot = "45")]
		public virtual void OnReceivedRoomListUpdate()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x1BD1DA8", Offset = "0x1BD1DA8", VA = "0x1BD1DA8", Slot = "46")]
		public virtual void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x1BD1DAC", Offset = "0x1BD1DAC", VA = "0x1BD1DAC", Slot = "47")]
		public virtual void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x1BD1DB0", Offset = "0x1BD1DB0", VA = "0x1BD1DB0", Slot = "48")]
		public virtual void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x1BD1DB4", Offset = "0x1BD1DB4", VA = "0x1BD1DB4", Slot = "49")]
		public virtual void OnPhotonRandomJoinFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x1BD1DB8", Offset = "0x1BD1DB8", VA = "0x1BD1DB8", Slot = "50")]
		public virtual void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x1BD1DBC", Offset = "0x1BD1DBC", VA = "0x1BD1DBC", Slot = "51")]
		public virtual void OnPhotonMaxCccuReached()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x1BD1DC0", Offset = "0x1BD1DC0", VA = "0x1BD1DC0", Slot = "52")]
		public virtual void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x1BD1DC4", Offset = "0x1BD1DC4", VA = "0x1BD1DC4", Slot = "53")]
		public virtual void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x1BD1DC8", Offset = "0x1BD1DC8", VA = "0x1BD1DC8", Slot = "54")]
		public virtual void OnUpdatedFriendList()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x1BD1DCC", Offset = "0x1BD1DCC", VA = "0x1BD1DCC", Slot = "55")]
		public virtual void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x1BD1DD0", Offset = "0x1BD1DD0", VA = "0x1BD1DD0", Slot = "56")]
		public virtual void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x1BD1DD4", Offset = "0x1BD1DD4", VA = "0x1BD1DD4", Slot = "57")]
		public virtual void OnWebRpcResponse(OperationResponse response)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x1BD1DD8", Offset = "0x1BD1DD8", VA = "0x1BD1DD8", Slot = "58")]
		public virtual void OnOwnershipRequest(object[] viewAndPlayer)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x1BD1DDC", Offset = "0x1BD1DDC", VA = "0x1BD1DDC", Slot = "59")]
		public virtual void OnLobbyStatisticsUpdate()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x1BD1DE0", Offset = "0x1BD1DE0", VA = "0x1BD1DE0", Slot = "60")]
		public virtual void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x1BD1DE4", Offset = "0x1BD1DE4", VA = "0x1BD1DE4", Slot = "61")]
		public virtual void OnOwnershipTransfered(object[] viewAndPlayers)
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x1BD1DE8", Offset = "0x1BD1DE8", VA = "0x1BD1DE8")]
		public PunBehaviour()
		{
		}
	}
}
namespace Photon.Chat
{
	[Token(Token = "0x2000343")]
	public class ChannelCreationOptions
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ChannelCreationOptions Default;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8BFF4", Offset = "0xD8BFF4")]
		private bool <PublishSubscribers>k__BackingField;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C004", Offset = "0xD8C004")]
		private int <MaxSubscribers>k__BackingField;

		[Token(Token = "0x170002CC")]
		public bool PublishSubscribers
		{
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0x1BCBAA0", Offset = "0x1BCBAA0", VA = "0x1BCBAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD955E0", Offset = "0xD955E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0x1BCBAA8", Offset = "0x1BCBAA8", VA = "0x1BCBAA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD955F0", Offset = "0xD955F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public int MaxSubscribers
		{
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0x1BCBAB4", Offset = "0x1BCBAB4", VA = "0x1BCBAB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95600", Offset = "0xD95600")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A05")]
			[Address(RVA = "0x1BCBABC", Offset = "0x1BCBABC", VA = "0x1BCBABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95610", Offset = "0xD95610")]
			set
			{
			}
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x1BCBAC4", Offset = "0x1BCBAC4", VA = "0x1BCBAC4")]
		public ChannelCreationOptions()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class ChannelWellKnownProperties
	{
		[Token(Token = "0x4001853")]
		public const byte MaxSubscribers = byte.MaxValue;

		[Token(Token = "0x4001854")]
		public const byte PublishSubscribers = 254;

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x1BCBB30", Offset = "0x1BCBB30", VA = "0x1BCBB30")]
		public ChannelWellKnownProperties()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class ChatChannel
	{
		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<string> Senders;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly List<object> Messages;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MessageLimit;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C014", Offset = "0xD8C014")]
		private bool <IsPrivate>k__BackingField;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C024", Offset = "0xD8C024")]
		private int <LastMsgId>k__BackingField;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<object, object> properties;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C034", Offset = "0xD8C034")]
		private bool <PublishSubscribers>k__BackingField;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C044", Offset = "0xD8C044")]
		private int <MaxSubscribers>k__BackingField;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly HashSet<string> Subscribers;

		[Token(Token = "0x170002CE")]
		public bool IsPrivate
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0x1BCBB38", Offset = "0x1BCBB38", VA = "0x1BCBB38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95620", Offset = "0xD95620")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x1BCBB40", Offset = "0x1BCBB40", VA = "0x1BCBB40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95630", Offset = "0xD95630")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public int MessageCount
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x1BCBB4C", Offset = "0x1BCBB4C", VA = "0x1BCBB4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D0")]
		public int LastMsgId
		{
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0x1BCBB9C", Offset = "0x1BCBB9C", VA = "0x1BCBB9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95640", Offset = "0xD95640")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x1BCBBA4", Offset = "0x1BCBBA4", VA = "0x1BCBBA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95650", Offset = "0xD95650")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public bool PublishSubscribers
		{
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x1BCBBAC", Offset = "0x1BCBBAC", VA = "0x1BCBBAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95660", Offset = "0xD95660")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x1BCBBB4", Offset = "0x1BCBBB4", VA = "0x1BCBBB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95670", Offset = "0xD95670")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public int MaxSubscribers
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x1BCBBC0", Offset = "0x1BCBBC0", VA = "0x1BCBBC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95680", Offset = "0xD95680")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x1BCBBC8", Offset = "0x1BCBBC8", VA = "0x1BCBBC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95690", Offset = "0xD95690")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x1BCBBD0", Offset = "0x1BCBBD0", VA = "0x1BCBBD0")]
		public ChatChannel(string name)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x1BCBCA4", Offset = "0x1BCBCA4", VA = "0x1BCBCA4")]
		public void Add(string sender, object message, int msgId)
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x1BCBDF0", Offset = "0x1BCBDF0", VA = "0x1BCBDF0")]
		public void Add(string[] senders, object[] messages, int lastMsgId)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x1BCBD44", Offset = "0x1BCBD44", VA = "0x1BCBD44")]
		public void TruncateMessages()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x1BCBE90", Offset = "0x1BCBE90", VA = "0x1BCBE90")]
		public void ClearMessages()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x1BCBF00", Offset = "0x1BCBF00", VA = "0x1BCBF00")]
		public string ToStringMessages()
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x1BCC028", Offset = "0x1BCC028", VA = "0x1BCC028")]
		internal void ReadProperties(Dictionary<object, object> newProperties)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x1BCC354", Offset = "0x1BCC354", VA = "0x1BCC354")]
		internal void AddSubscribers(string[] users)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x1BCC408", Offset = "0x1BCC408", VA = "0x1BCC408")]
		internal void ClearProperties()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class ChatClient : IPhotonPeerListener
	{
		[Token(Token = "0x400185F")]
		private const int FriendRequestListMax = 1024;

		[Token(Token = "0x4001860")]
		public const int DefaultMaxSubscribers = 100;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C054", Offset = "0xD8C054")]
		private string <NameServerAddress>k__BackingField;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C064", Offset = "0xD8C064")]
		private string <FrontendAddress>k__BackingField;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string chatRegion;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C074", Offset = "0xD8C074")]
		private ChatState <State>k__BackingField;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C084", Offset = "0xD8C084")]
		private ChatDisconnectCause <DisconnectedCause>k__BackingField;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C094", Offset = "0xD8C094")]
		private string <AppVersion>k__BackingField;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C0A4", Offset = "0xD8C0A4")]
		private string <AppId>k__BackingField;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C0B4", Offset = "0xD8C0B4")]
		private AuthenticationValues <AuthValues>k__BackingField;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int MessageLimit;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly Dictionary<string, ChatChannel> PublicChannels;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly Dictionary<string, ChatChannel> PrivateChannels;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly HashSet<string> PublicChannelsUnsubscribing;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly IChatClientListener listener;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChatPeer chatPeer;

		[Token(Token = "0x400186F")]
		private const string ChatAppName = "chat";

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool didAuthenticate;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int? statusToSetWhenConnected;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private object messageToSetWhenConnected;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int msDeltaForServiceCalls;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int msTimestampOfLastServiceCall;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C0C4", Offset = "0xD8C0C4")]
		private bool <UseBackgroundWorkerForSending>k__BackingField;

		[Token(Token = "0x170002D3")]
		public string NameServerAddress
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x1BCC48C", Offset = "0x1BCC48C", VA = "0x1BCC48C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD956A0", Offset = "0xD956A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x1BCC494", Offset = "0x1BCC494", VA = "0x1BCC494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD956B0", Offset = "0xD956B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public string FrontendAddress
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x1BCC49C", Offset = "0x1BCC49C", VA = "0x1BCC49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD956C0", Offset = "0xD956C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0x1BCC4A4", Offset = "0x1BCC4A4", VA = "0x1BCC4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD956D0", Offset = "0xD956D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public string ChatRegion
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0x1BCC4AC", Offset = "0x1BCC4AC", VA = "0x1BCC4AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x1BCC4B4", Offset = "0x1BCC4B4", VA = "0x1BCC4B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public ChatState State
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x1BCC4BC", Offset = "0x1BCC4BC", VA = "0x1BCC4BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD956E0", Offset = "0xD956E0")]
			get
			{
				return default(ChatState);
			}
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x1BCC4C4", Offset = "0x1BCC4C4", VA = "0x1BCC4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD956F0", Offset = "0xD956F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public ChatDisconnectCause DisconnectedCause
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x1BCC4CC", Offset = "0x1BCC4CC", VA = "0x1BCC4CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95700", Offset = "0xD95700")]
			get
			{
				return default(ChatDisconnectCause);
			}
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x1BCC4D4", Offset = "0x1BCC4D4", VA = "0x1BCC4D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95710", Offset = "0xD95710")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public bool CanChat
		{
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0x1BCC4DC", Offset = "0x1BCC4DC", VA = "0x1BCC4DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D9")]
		private bool HasPeer
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x1BCC500", Offset = "0x1BCC500", VA = "0x1BCC500")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DA")]
		public string AppVersion
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x1BCC5C0", Offset = "0x1BCC5C0", VA = "0x1BCC5C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95720", Offset = "0xD95720")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x1BCC5C8", Offset = "0x1BCC5C8", VA = "0x1BCC5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95730", Offset = "0xD95730")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public string AppId
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x1BCC5D0", Offset = "0x1BCC5D0", VA = "0x1BCC5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95740", Offset = "0xD95740")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x1BCC5D8", Offset = "0x1BCC5D8", VA = "0x1BCC5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95750", Offset = "0xD95750")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public AuthenticationValues AuthValues
		{
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x1BCC5E0", Offset = "0x1BCC5E0", VA = "0x1BCC5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95760", Offset = "0xD95760")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x1BCC5E8", Offset = "0x1BCC5E8", VA = "0x1BCC5E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95770", Offset = "0xD95770")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public string UserId
		{
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x1BCC5F0", Offset = "0x1BCC5F0", VA = "0x1BCC5F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x1BCC608", Offset = "0x1BCC608", VA = "0x1BCC608")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public bool UseBackgroundWorkerForSending
		{
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x1BCC690", Offset = "0x1BCC690", VA = "0x1BCC690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95780", Offset = "0xD95780")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x1BCC698", Offset = "0x1BCC698", VA = "0x1BCC698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95790", Offset = "0xD95790")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public ConnectionProtocol TransportProtocol
		{
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x1BCC6A4", Offset = "0x1BCC6A4", VA = "0x1BCC6A4")]
			get
			{
				return default(ConnectionProtocol);
			}
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x1BCC6C0", Offset = "0x1BCC6C0", VA = "0x1BCC6C0")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public Dictionary<ConnectionProtocol, Type> SocketImplementationConfig
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x1BCC838", Offset = "0x1BCC838", VA = "0x1BCC838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		public DebugLevel DebugOut
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x1BCD424", Offset = "0x1BCD424", VA = "0x1BCD424")]
			get
			{
				return default(DebugLevel);
			}
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x1BCE8B4", Offset = "0x1BCE8B4", VA = "0x1BCE8B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x1BCC510", Offset = "0x1BCC510", VA = "0x1BCC510")]
		public bool CanChatInChannel(string channelName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x1BCC854", Offset = "0x1BCC854", VA = "0x1BCC854")]
		public ChatClient(IChatClientListener listener, ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x1BCC9F4", Offset = "0x1BCC9F4", VA = "0x1BCC9F4")]
		public bool Connect(string appId, string appVersion, AuthenticationValues authValues)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x1BCCCAC", Offset = "0x1BCCCAC", VA = "0x1BCCCAC")]
		public bool ConnectAndSetStatus(string appId, string appVersion, AuthenticationValues authValues, int status = 2, [Optional] object message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x1BCCD58", Offset = "0x1BCCD58", VA = "0x1BCCD58")]
		public void Service()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x1BCCDDC", Offset = "0x1BCCDDC", VA = "0x1BCCDDC")]
		private bool SendOutgoingInBackground()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x1BCCE1C", Offset = "0x1BCCE1C", VA = "0x1BCCE1C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD957A0", Offset = "0xD957A0")]
		public void SendAcksOnly()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x1BCCE38", Offset = "0x1BCCE38", VA = "0x1BCCE38")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x1BCCE8C", Offset = "0x1BCCE8C", VA = "0x1BCCE8C")]
		public void StopThread()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x1BCCEA4", Offset = "0x1BCCEA4", VA = "0x1BCCEA4")]
		public bool Subscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x1BCD05C", Offset = "0x1BCD05C", VA = "0x1BCD05C")]
		public bool Subscribe(string[] channels, int[] lastMsgIds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x1BCCEAC", Offset = "0x1BCCEAC", VA = "0x1BCCEAC")]
		public bool Subscribe(string[] channels, int messagesFromHistory)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x1BCD570", Offset = "0x1BCD570", VA = "0x1BCD570")]
		public bool Unsubscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x1BCD778", Offset = "0x1BCD778", VA = "0x1BCD778")]
		public bool PublishMessage(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x1BCDA18", Offset = "0x1BCDA18", VA = "0x1BCDA18")]
		internal bool PublishMessageUnreliable(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x1BCD784", Offset = "0x1BCD784", VA = "0x1BCD784")]
		private bool publishMessage(string channelName, object message, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x1BCDA24", Offset = "0x1BCDA24", VA = "0x1BCDA24")]
		public bool SendPrivateMessage(string target, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x1BCDA34", Offset = "0x1BCDA34", VA = "0x1BCDA34")]
		public bool SendPrivateMessage(string target, object message, bool encrypt, bool forwardAsWebhook)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x1BCDCE4", Offset = "0x1BCDCE4", VA = "0x1BCDCE4")]
		internal bool SendPrivateMessageUnreliable(string target, object message, bool encrypt, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x1BCDA44", Offset = "0x1BCDA44", VA = "0x1BCDA44")]
		private bool sendPrivateMessage(string target, object message, bool encrypt, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x1BCDCF4", Offset = "0x1BCDCF4", VA = "0x1BCDCF4")]
		private bool SetOnlineStatus(int status, object message, bool skipMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x1BCDF04", Offset = "0x1BCDF04", VA = "0x1BCDF04")]
		public bool SetOnlineStatus(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x1BCDF10", Offset = "0x1BCDF10", VA = "0x1BCDF10")]
		public bool SetOnlineStatus(int status, object message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x1BCDF18", Offset = "0x1BCDF18", VA = "0x1BCDF18")]
		public bool AddFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x1BCE2E0", Offset = "0x1BCE2E0", VA = "0x1BCE2E0")]
		public bool RemoveFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x1BCE6A8", Offset = "0x1BCE6A8", VA = "0x1BCE6A8")]
		public string GetPrivateChannelNameByUser(string userName)
		{
			return null;
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x1BCE71C", Offset = "0x1BCE71C", VA = "0x1BCE71C")]
		public bool TryGetChannel(string channelName, bool isPrivate, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x1BCE7A4", Offset = "0x1BCE7A4", VA = "0x1BCE7A4")]
		public bool TryGetChannel(string channelName, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x1BCE844", Offset = "0x1BCE844", VA = "0x1BCE844")]
		public bool TryGetPrivateChannelByUser(string userId, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x1BCE8D0", Offset = "0x1BCE8D0", VA = "0x1BCE8D0", Slot = "4")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x1BCE998", Offset = "0x1BCE998", VA = "0x1BCE998", Slot = "7")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x1BCFF8C", Offset = "0x1BCFF8C", VA = "0x1BCFF8C", Slot = "5")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x1BD0868", Offset = "0x1BD0868", VA = "0x1BD0868", Slot = "6")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x1BCD440", Offset = "0x1BCD440", VA = "0x1BCD440")]
		private bool SendChannelOperation(string[] channels, byte operation, int historyLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x1BCECDC", Offset = "0x1BCECDC", VA = "0x1BCECDC")]
		private void HandlePrivateMessageEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x1BCE9E8", Offset = "0x1BCE9E8", VA = "0x1BCE9E8")]
		private void HandleChatMessagesEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x1BCF10C", Offset = "0x1BCF10C", VA = "0x1BCF10C")]
		private void HandleSubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x1BCF5FC", Offset = "0x1BCF5FC", VA = "0x1BCF5FC")]
		private void HandleUnsubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x1BD018C", Offset = "0x1BD018C", VA = "0x1BD018C")]
		private void HandleAuthResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x1BCEF64", Offset = "0x1BCEF64", VA = "0x1BCEF64")]
		private void HandleStatusUpdate(EventData eventData)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x1BD1140", Offset = "0x1BD1140", VA = "0x1BD1140")]
		private void ConnectToFrontEnd()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x1BD0F34", Offset = "0x1BD0F34", VA = "0x1BD0F34")]
		private bool AuthenticateOnFrontEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x1BCFC04", Offset = "0x1BCFC04", VA = "0x1BCFC04")]
		private void HandleUserUnsubscribedEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x1BCF78C", Offset = "0x1BCF78C", VA = "0x1BCF78C")]
		private void HandleUserSubscribedEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x1BD125C", Offset = "0x1BD125C", VA = "0x1BD125C")]
		public bool Subscribe(string channel, int lastMsgId = 0, int messagesFromHistory = -1, [Optional] ChannelCreationOptions creationOptions)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000347")]
	public enum ChatDisconnectCause
	{
		[Token(Token = "0x4001877")]
		None,
		[Token(Token = "0x4001878")]
		DisconnectByServerUserLimit,
		[Token(Token = "0x4001879")]
		ExceptionOnConnect,
		[Token(Token = "0x400187A")]
		DisconnectByServer,
		[Token(Token = "0x400187B")]
		TimeoutDisconnect,
		[Token(Token = "0x400187C")]
		Exception,
		[Token(Token = "0x400187D")]
		InvalidAuthentication,
		[Token(Token = "0x400187E")]
		MaxCcuReached,
		[Token(Token = "0x400187F")]
		InvalidRegion,
		[Token(Token = "0x4001880")]
		OperationNotAllowedInCurrentState,
		[Token(Token = "0x4001881")]
		CustomAuthenticationFailed
	}
	[Token(Token = "0x2000348")]
	public class ChatEventCode
	{
		[Token(Token = "0x4001882")]
		public const byte ChatMessages = 0;

		[Token(Token = "0x4001883")]
		public const byte Users = 1;

		[Token(Token = "0x4001884")]
		public const byte PrivateMessage = 2;

		[Token(Token = "0x4001885")]
		public const byte FriendsList = 3;

		[Token(Token = "0x4001886")]
		public const byte StatusUpdate = 4;

		[Token(Token = "0x4001887")]
		public const byte Subscribe = 5;

		[Token(Token = "0x4001888")]
		public const byte Unsubscribe = 6;

		[Token(Token = "0x4001889")]
		public const byte UserSubscribed = 8;

		[Token(Token = "0x400188A")]
		public const byte UserUnsubscribed = 9;

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x1BD18C4", Offset = "0x1BD18C4", VA = "0x1BD18C4")]
		public ChatEventCode()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class ChatOperationCode
	{
		[Token(Token = "0x400188B")]
		public const byte Authenticate = 230;

		[Token(Token = "0x400188C")]
		public const byte Subscribe = 0;

		[Token(Token = "0x400188D")]
		public const byte Unsubscribe = 1;

		[Token(Token = "0x400188E")]
		public const byte Publish = 2;

		[Token(Token = "0x400188F")]
		public const byte SendPrivate = 3;

		[Token(Token = "0x4001890")]
		public const byte ChannelHistory = 4;

		[Token(Token = "0x4001891")]
		public const byte UpdateStatus = 5;

		[Token(Token = "0x4001892")]
		public const byte AddFriends = 6;

		[Token(Token = "0x4001893")]
		public const byte RemoveFriends = 7;

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x1BD18CC", Offset = "0x1BD18CC", VA = "0x1BD18CC")]
		public ChatOperationCode()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class ChatParameterCode
	{
		[Token(Token = "0x4001894")]
		public const byte Channels = 0;

		[Token(Token = "0x4001895")]
		public const byte Channel = 1;

		[Token(Token = "0x4001896")]
		public const byte Messages = 2;

		[Token(Token = "0x4001897")]
		public const byte Message = 3;

		[Token(Token = "0x4001898")]
		public const byte Senders = 4;

		[Token(Token = "0x4001899")]
		public const byte Sender = 5;

		[Token(Token = "0x400189A")]
		public const byte ChannelUserCount = 6;

		[Token(Token = "0x400189B")]
		public const byte UserId = 225;

		[Token(Token = "0x400189C")]
		public const byte MsgId = 8;

		[Token(Token = "0x400189D")]
		public const byte MsgIds = 9;

		[Token(Token = "0x400189E")]
		public const byte Secret = 221;

		[Token(Token = "0x400189F")]
		public const byte SubscribeResults = 15;

		[Token(Token = "0x40018A0")]
		public const byte Status = 10;

		[Token(Token = "0x40018A1")]
		public const byte Friends = 11;

		[Token(Token = "0x40018A2")]
		public const byte SkipMessage = 12;

		[Token(Token = "0x40018A3")]
		public const byte HistoryLength = 14;

		[Token(Token = "0x40018A4")]
		public const byte WebFlags = 21;

		[Token(Token = "0x40018A5")]
		public const byte Properties = 22;

		[Token(Token = "0x40018A6")]
		public const byte ChannelSubscribers = 23;

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x1BD18D4", Offset = "0x1BD18D4", VA = "0x1BD18D4")]
		public ChatParameterCode()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class ChatPeer : PhotonPeer
	{
		[Token(Token = "0x40018A7")]
		public const string NameServerHost = "ns.exitgames.com";

		[Token(Token = "0x40018A8")]
		public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

		[Token(Token = "0x170002E2")]
		public string NameServerAddress
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x1BCCB8C", Offset = "0x1BCCB8C", VA = "0x1BCCB8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		internal virtual bool IsProtocolSecure
		{
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x1BD1A54", Offset = "0x1BD1A54", VA = "0x1BD1A54", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x1BCC96C", Offset = "0x1BCC96C", VA = "0x1BCC96C")]
		public ChatPeer(IPhotonPeerListener listener, ConnectionProtocol protocol)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x1BD1A78", Offset = "0x1BD1A78", VA = "0x1BD1A78")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD957D8", Offset = "0xD957D8")]
		private void ConfigUnitySockets()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x1BD18DC", Offset = "0x1BD18DC", VA = "0x1BD18DC")]
		private string GetNameServerAddress()
		{
			return null;
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x1BCCB90", Offset = "0x1BCCB90", VA = "0x1BCCB90")]
		public bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x1BD0CB8", Offset = "0x1BD0CB8", VA = "0x1BD0CB8")]
		public bool AuthenticateOnNameServer(string appId, string appVersion, string region, AuthenticationValues authValues)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200034C")]
	public enum CustomAuthenticationType : byte
	{
		[Token(Token = "0x40018AB")]
		Custom = 0,
		[Token(Token = "0x40018AC")]
		Steam = 1,
		[Token(Token = "0x40018AD")]
		Facebook = 2,
		[Token(Token = "0x40018AE")]
		Oculus = 3,
		[Token(Token = "0x40018AF")]
		PlayStation = 4,
		[Token(Token = "0x40018B0")]
		Xbox = 5,
		[Token(Token = "0x40018B1")]
		Viveport = 10,
		[Token(Token = "0x40018B2")]
		None = byte.MaxValue
	}
	[Token(Token = "0x200034D")]
	public class AuthenticationValues
	{
		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CustomAuthenticationType authType;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C0D4", Offset = "0xD8C0D4")]
		private string <AuthGetParameters>k__BackingField;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C0E4", Offset = "0xD8C0E4")]
		private object <AuthPostData>k__BackingField;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C0F4", Offset = "0xD8C0F4")]
		private string <Token>k__BackingField;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C104", Offset = "0xD8C104")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x170002E4")]
		public CustomAuthenticationType AuthType
		{
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0x1BCB774", Offset = "0x1BCB774", VA = "0x1BCB774")]
			get
			{
				return default(CustomAuthenticationType);
			}
			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0x1BCB77C", Offset = "0x1BCB77C", VA = "0x1BCB77C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public string AuthGetParameters
		{
			[Token(Token = "0x6001A70")]
			[Address(RVA = "0x1BCB784", Offset = "0x1BCB784", VA = "0x1BCB784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95810", Offset = "0xD95810")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A71")]
			[Address(RVA = "0x1BCB78C", Offset = "0x1BCB78C", VA = "0x1BCB78C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95820", Offset = "0xD95820")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public object AuthPostData
		{
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0x1BCB794", Offset = "0x1BCB794", VA = "0x1BCB794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95830", Offset = "0xD95830")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0x1BCB79C", Offset = "0x1BCB79C", VA = "0x1BCB79C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95840", Offset = "0xD95840")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public string Token
		{
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x1BCB7A4", Offset = "0x1BCB7A4", VA = "0x1BCB7A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95850", Offset = "0xD95850")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0x1BCB7AC", Offset = "0x1BCB7AC", VA = "0x1BCB7AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95860", Offset = "0xD95860")]
			set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public string UserId
		{
			[Token(Token = "0x6001A76")]
			[Address(RVA = "0x1BCB7B4", Offset = "0x1BCB7B4", VA = "0x1BCB7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95870", Offset = "0xD95870")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0x1BCB7BC", Offset = "0x1BCB7BC", VA = "0x1BCB7BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95880", Offset = "0xD95880")]
			set
			{
			}
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x1BCB7C4", Offset = "0x1BCB7C4", VA = "0x1BCB7C4")]
		public AuthenticationValues()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x1BCB7D4", Offset = "0x1BCB7D4", VA = "0x1BCB7D4")]
		public AuthenticationValues(string userId)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x1BCB808", Offset = "0x1BCB808", VA = "0x1BCB808", Slot = "4")]
		public virtual void SetAuthPostData(string stringData)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x1BCB848", Offset = "0x1BCB848", VA = "0x1BCB848", Slot = "5")]
		public virtual void SetAuthPostData(byte[] byteData)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x1BCB850", Offset = "0x1BCB850", VA = "0x1BCB850", Slot = "6")]
		public virtual void AddAuthParameter(string key, string value)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x1BCBA0C", Offset = "0x1BCBA0C", VA = "0x1BCBA0C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200034E")]
	public class ParameterCode
	{
		[Token(Token = "0x40018B8")]
		public const byte ApplicationId = 224;

		[Token(Token = "0x40018B9")]
		public const byte Secret = 221;

		[Token(Token = "0x40018BA")]
		public const byte AppVersion = 220;

		[Token(Token = "0x40018BB")]
		public const byte ClientAuthenticationType = 217;

		[Token(Token = "0x40018BC")]
		public const byte ClientAuthenticationParams = 216;

		[Token(Token = "0x40018BD")]
		public const byte ClientAuthenticationData = 214;

		[Token(Token = "0x40018BE")]
		public const byte Region = 210;

		[Token(Token = "0x40018BF")]
		public const byte Address = 230;

		[Token(Token = "0x40018C0")]
		public const byte UserId = 225;

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x1BD1D6C", Offset = "0x1BD1D6C", VA = "0x1BD1D6C")]
		public ParameterCode()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class ErrorCode
	{
		[Token(Token = "0x40018C1")]
		public const int Ok = 0;

		[Token(Token = "0x40018C2")]
		public const int OperationNotAllowedInCurrentState = -3;

		[Token(Token = "0x40018C3")]
		public const int InvalidOperationCode = -2;

		[Token(Token = "0x40018C4")]
		public const int InternalServerError = -1;

		[Token(Token = "0x40018C5")]
		public const int InvalidAuthentication = 32767;

		[Token(Token = "0x40018C6")]
		public const int GameIdAlreadyExists = 32766;

		[Token(Token = "0x40018C7")]
		public const int GameFull = 32765;

		[Token(Token = "0x40018C8")]
		public const int GameClosed = 32764;

		[Token(Token = "0x40018C9")]
		public const int ServerFull = 32762;

		[Token(Token = "0x40018CA")]
		public const int UserBlocked = 32761;

		[Token(Token = "0x40018CB")]
		public const int NoRandomMatchFound = 32760;

		[Token(Token = "0x40018CC")]
		public const int GameDoesNotExist = 32758;

		[Token(Token = "0x40018CD")]
		public const int MaxCcuReached = 32757;

		[Token(Token = "0x40018CE")]
		public const int InvalidRegion = 32756;

		[Token(Token = "0x40018CF")]
		public const int CustomAuthenticationFailed = 32755;

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x1BD1D64", Offset = "0x1BD1D64", VA = "0x1BD1D64")]
		public ErrorCode()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public enum ChatState
	{
		[Token(Token = "0x40018D1")]
		Uninitialized,
		[Token(Token = "0x40018D2")]
		ConnectingToNameServer,
		[Token(Token = "0x40018D3")]
		ConnectedToNameServer,
		[Token(Token = "0x40018D4")]
		Authenticating,
		[Token(Token = "0x40018D5")]
		Authenticated,
		[Token(Token = "0x40018D6")]
		DisconnectingFromNameServer,
		[Token(Token = "0x40018D7")]
		ConnectingToFrontEnd,
		[Token(Token = "0x40018D8")]
		ConnectedToFrontEnd,
		[Token(Token = "0x40018D9")]
		DisconnectingFromFrontEnd,
		[Token(Token = "0x40018DA")]
		QueuedComingFromFrontEnd,
		[Token(Token = "0x40018DB")]
		Disconnecting,
		[Token(Token = "0x40018DC")]
		Disconnected
	}
	[Token(Token = "0x2000351")]
	public static class ChatUserStatus
	{
		[Token(Token = "0x40018DD")]
		public const int Offline = 0;

		[Token(Token = "0x40018DE")]
		public const int Invisible = 1;

		[Token(Token = "0x40018DF")]
		public const int Online = 2;

		[Token(Token = "0x40018E0")]
		public const int Away = 3;

		[Token(Token = "0x40018E1")]
		public const int DND = 4;

		[Token(Token = "0x40018E2")]
		public const int LFG = 5;

		[Token(Token = "0x40018E3")]
		public const int Playing = 6;
	}
	[Token(Token = "0x2000352")]
	public interface IChatClientListener
	{
		[Token(Token = "0x6001A80")]
		void DebugReturn(DebugLevel level, string message);

		[Token(Token = "0x6001A81")]
		void OnDisconnected();

		[Token(Token = "0x6001A82")]
		void OnConnected();

		[Token(Token = "0x6001A83")]
		void OnChatStateChange(ChatState state);

		[Token(Token = "0x6001A84")]
		void OnGetMessages(string channelName, string[] senders, object[] messages);

		[Token(Token = "0x6001A85")]
		void OnPrivateMessage(string sender, object message, string channelName);

		[Token(Token = "0x6001A86")]
		void OnSubscribed(string[] channels, bool[] results);

		[Token(Token = "0x6001A87")]
		void OnUnsubscribed(string[] channels);

		[Token(Token = "0x6001A88")]
		void OnStatusUpdate(string user, int status, bool gotMessage, object message);

		[Token(Token = "0x6001A89")]
		void OnUserSubscribed(string channel, string user);

		[Token(Token = "0x6001A8A")]
		void OnUserUnsubscribed(string channel, string user);
	}
}
namespace Photon.Realtime
{
	[Token(Token = "0x2000353")]
	public abstract class PhotonPing : IDisposable
	{
		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string DebugString;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Successful;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected internal bool GotResult;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected internal int PingLength;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected internal byte[] PingBytes;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected internal byte PingId;

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x1BD1DF0", Offset = "0x1BD1DF0", VA = "0x1BD1DF0", Slot = "5")]
		public virtual bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x1BD1E50", Offset = "0x1BD1E50", VA = "0x1BD1E50", Slot = "6")]
		public virtual bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x1BD1EB0", Offset = "0x1BD1EB0", VA = "0x1BD1EB0", Slot = "7")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x1BD1F10", Offset = "0x1BD1F10", VA = "0x1BD1F10")]
		protected internal void Init()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x1BD1F5C", Offset = "0x1BD1F5C", VA = "0x1BD1F5C")]
		protected PhotonPing()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class PingMono : PhotonPing
	{
		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Socket sock;

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x1BD1FEC", Offset = "0x1BD1FEC", VA = "0x1BD1FEC", Slot = "5")]
		public override bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x1BD2260", Offset = "0x1BD2260", VA = "0x1BD2260", Slot = "6")]
		public override bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x1BD2398", Offset = "0x1BD2398", VA = "0x1BD2398", Slot = "7")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x1BD2460", Offset = "0x1BD2460", VA = "0x1BD2460")]
		public PingMono()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x2000355")]
	public class AxisTouchButton : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x2404F50", Offset = "0x2404F50", VA = "0x2404F50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x24051E0", Offset = "0x24051E0", VA = "0x24051E0")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x2405360", Offset = "0x2405360", VA = "0x2405360")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x24053E0", Offset = "0x24053E0", VA = "0x24053E0", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x24054C8", Offset = "0x24054C8", VA = "0x24054C8", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x2405570", Offset = "0x2405570", VA = "0x2405570")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class ButtonHandler : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x24055DC", Offset = "0x24055DC", VA = "0x24055DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x24055E0", Offset = "0x24055E0", VA = "0x24055E0")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x24056C8", Offset = "0x24056C8", VA = "0x24056C8")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x24057B0", Offset = "0x24057B0", VA = "0x24057B0")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x2405898", Offset = "0x2405898", VA = "0x2405898")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x2405980", Offset = "0x2405980", VA = "0x2405980")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x2405A68", Offset = "0x2405A68", VA = "0x2405A68")]
		public void Update()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x2405A6C", Offset = "0x2405A6C", VA = "0x2405A6C")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x200054F")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4002288")]
			Hardware,
			[Token(Token = "0x4002289")]
			Touch
		}

		[Token(Token = "0x2000550")]
		public class VirtualAxis
		{
			[Token(Token = "0x400228A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD904A4", Offset = "0xD904A4")]
			private string <name>k__BackingField;

			[Token(Token = "0x400228B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD904B4", Offset = "0xD904B4")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x17000451")]
			public string name
			{
				[Token(Token = "0x60022A6")]
				[Address(RVA = "0x24069BC", Offset = "0x24069BC", VA = "0x24069BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97A3C", Offset = "0xD97A3C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60022A7")]
				[Address(RVA = "0x24069C4", Offset = "0x24069C4", VA = "0x24069C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97A4C", Offset = "0xD97A4C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000452")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x60022A8")]
				[Address(RVA = "0x24069CC", Offset = "0x24069CC", VA = "0x24069CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97A5C", Offset = "0xD97A5C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60022A9")]
				[Address(RVA = "0x24069D4", Offset = "0x24069D4", VA = "0x24069D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97A6C", Offset = "0xD97A6C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000453")]
			public float GetValue
			{
				[Token(Token = "0x60022AE")]
				[Address(RVA = "0x2406A28", Offset = "0x2406A28", VA = "0x2406A28")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000454")]
			public float GetValueRaw
			{
				[Token(Token = "0x60022AF")]
				[Address(RVA = "0x2406A30", Offset = "0x2406A30", VA = "0x2406A30")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60022AA")]
			[Address(RVA = "0x24050BC", Offset = "0x24050BC", VA = "0x24050BC")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x60022AB")]
			[Address(RVA = "0x24069E0", Offset = "0x24069E0", VA = "0x24069E0")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x60022AC")]
			[Address(RVA = "0x2405378", Offset = "0x2405378", VA = "0x2405378")]
			public void Remove()
			{
			}

			[Token(Token = "0x60022AD")]
			[Address(RVA = "0x2406A20", Offset = "0x2406A20", VA = "0x2406A20")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x2000551")]
		public class VirtualButton
		{
			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD904C4", Offset = "0xD904C4")]
			private string <name>k__BackingField;

			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD904D4", Offset = "0xD904D4")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x17000455")]
			public string name
			{
				[Token(Token = "0x60022B0")]
				[Address(RVA = "0x2406A38", Offset = "0x2406A38", VA = "0x2406A38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97A7C", Offset = "0xD97A7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60022B1")]
				[Address(RVA = "0x2406A40", Offset = "0x2406A40", VA = "0x2406A40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97A8C", Offset = "0xD97A8C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000456")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x60022B2")]
				[Address(RVA = "0x2406A48", Offset = "0x2406A48", VA = "0x2406A48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97A9C", Offset = "0xD97A9C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60022B3")]
				[Address(RVA = "0x2406A50", Offset = "0x2406A50", VA = "0x2406A50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97AAC", Offset = "0xD97AAC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000457")]
			public bool GetButton
			{
				[Token(Token = "0x60022B9")]
				[Address(RVA = "0x2406BB0", Offset = "0x2406BB0", VA = "0x2406BB0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000458")]
			public bool GetButtonDown
			{
				[Token(Token = "0x60022BA")]
				[Address(RVA = "0x2406BB8", Offset = "0x2406BB8", VA = "0x2406BB8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000459")]
			public bool GetButtonUp
			{
				[Token(Token = "0x60022BB")]
				[Address(RVA = "0x2406BE8", Offset = "0x2406BE8", VA = "0x2406BE8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60022B4")]
			[Address(RVA = "0x2406A5C", Offset = "0x2406A5C", VA = "0x2406A5C")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x2406A98", Offset = "0x2406A98", VA = "0x2406A98")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x60022B6")]
			[Address(RVA = "0x2406AE0", Offset = "0x2406AE0", VA = "0x2406AE0")]
			public void Pressed()
			{
			}

			[Token(Token = "0x60022B7")]
			[Address(RVA = "0x2406B1C", Offset = "0x2406B1C", VA = "0x2406B1C")]
			public void Released()
			{
			}

			[Token(Token = "0x60022B8")]
			[Address(RVA = "0x2406B48", Offset = "0x2406B48", VA = "0x2406B48")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x170002E9")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0x240663C", Offset = "0x240663C", VA = "0x240663C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x2405A74", Offset = "0x2405A74", VA = "0x2405A74")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x2405B14", Offset = "0x2405B14", VA = "0x2405B14")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x2405044", Offset = "0x2405044", VA = "0x2405044")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x2405C2C", Offset = "0x2405C2C", VA = "0x2405C2C")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x24050F0", Offset = "0x24050F0", VA = "0x24050F0")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x2405E34", Offset = "0x2405E34", VA = "0x2405E34")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x2405FD4", Offset = "0x2405FD4", VA = "0x2405FD4")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x2406124", Offset = "0x2406124", VA = "0x2406124")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x2405168", Offset = "0x2405168", VA = "0x2405168")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x24062C8", Offset = "0x24062C8", VA = "0x24062C8")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x24063C0", Offset = "0x24063C0", VA = "0x24063C0")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x2406330", Offset = "0x2406330", VA = "0x2406330")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x2406428", Offset = "0x2406428", VA = "0x2406428")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x24064A8", Offset = "0x24064A8", VA = "0x24064A8")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x2406528", Offset = "0x2406528", VA = "0x2406528")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x2405648", Offset = "0x2405648", VA = "0x2405648")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x2405730", Offset = "0x2405730", VA = "0x2405730")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x2405818", Offset = "0x2405818", VA = "0x2405818")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x24059E8", Offset = "0x24059E8", VA = "0x24059E8")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x2405900", Offset = "0x2405900", VA = "0x2405900")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x24065A8", Offset = "0x24065A8", VA = "0x24065A8")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x24066B8", Offset = "0x24066B8", VA = "0x24066B8")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x24067B4", Offset = "0x24067B4", VA = "0x24067B4")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x24068BC", Offset = "0x24068BC", VA = "0x24068BC")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class InputAxisScrollbar : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x2406C18", Offset = "0x2406C18", VA = "0x2406C18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x2406C1C", Offset = "0x2406C1C", VA = "0x2406C1C")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x2406C9C", Offset = "0x2406C9C", VA = "0x2406C9C")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class Joystick : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x2000552")]
		public enum AxisOption
		{
			[Token(Token = "0x4002293")]
			Both,
			[Token(Token = "0x4002294")]
			OnlyHorizontal,
			[Token(Token = "0x4002295")]
			OnlyVertical
		}

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x2406CA4", Offset = "0x2406CA4", VA = "0x2406CA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x2406DE4", Offset = "0x2406DE4", VA = "0x2406DE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x2406E20", Offset = "0x2406E20", VA = "0x2406E20")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x2406CA8", Offset = "0x2406CA8", VA = "0x2406CA8")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x2406F10", Offset = "0x2406F10", VA = "0x2406F10", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x2407100", Offset = "0x2407100", VA = "0x2407100", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x2407148", Offset = "0x2407148", VA = "0x2407148", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x240714C", Offset = "0x240714C", VA = "0x240714C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x240719C", Offset = "0x240719C", VA = "0x240719C")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[ExecuteInEditMode]
	public class MobileControlRig : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x240720C", Offset = "0x240720C", VA = "0x240720C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x240721C", Offset = "0x240721C", VA = "0x240721C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x2407214", Offset = "0x2407214", VA = "0x2407214")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x24072F8", Offset = "0x24072F8", VA = "0x24072F8")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x2407564", Offset = "0x2407564", VA = "0x2407564")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD803AC", Offset = "0xD803AC")]
	public class TouchPad : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x2000553")]
		public enum AxisOption
		{
			[Token(Token = "0x4002297")]
			Both,
			[Token(Token = "0x4002298")]
			OnlyHorizontal,
			[Token(Token = "0x4002299")]
			OnlyVertical
		}

		[Token(Token = "0x2000554")]
		public enum ControlStyle
		{
			[Token(Token = "0x400229B")]
			Absolute,
			[Token(Token = "0x400229C")]
			Relative,
			[Token(Token = "0x400229D")]
			Swipe
		}

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x24080A0", Offset = "0x24080A0", VA = "0x24080A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x24081E0", Offset = "0x24081E0", VA = "0x24081E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x24080A4", Offset = "0x24080A4", VA = "0x24080A4")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x240825C", Offset = "0x240825C", VA = "0x240825C")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x24082C8", Offset = "0x24082C8", VA = "0x24082C8", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x2408378", Offset = "0x2408378", VA = "0x2408378")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x240854C", Offset = "0x240854C", VA = "0x240854C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x24085C4", Offset = "0x24085C4", VA = "0x24085C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x24086B8", Offset = "0x24086B8", VA = "0x24086B8")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C114", Offset = "0xD8C114")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x170002EA")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x2408730", Offset = "0x2408730", VA = "0x2408730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95890", Offset = "0xD95890")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0x240873C", Offset = "0x240873C", VA = "0x240873C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD958A0", Offset = "0xD958A0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x2405BC4", Offset = "0x2405BC4", VA = "0x2405BC4")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x2405CA4", Offset = "0x2405CA4", VA = "0x2405CA4")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x2405D0C", Offset = "0x2405D0C", VA = "0x2405D0C")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x2405EAC", Offset = "0x2405EAC", VA = "0x2405EAC")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x240608C", Offset = "0x240608C", VA = "0x240608C")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x240619C", Offset = "0x240619C", VA = "0x240619C")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x2406234", Offset = "0x2406234", VA = "0x2406234")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x2406768", Offset = "0x2406768", VA = "0x2406768")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x2406868", Offset = "0x2406868", VA = "0x2406868")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x240696C", Offset = "0x240696C", VA = "0x240696C")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x6001AE1")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x6001AE2")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x6001AE3")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x6001AE4")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6001AE5")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6001AE6")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6001AE7")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6001AE8")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6001AE9")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6001AEA")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001AEB")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x2407D18", Offset = "0x2407D18", VA = "0x2407D18")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x200035D")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x240756C", Offset = "0x240756C", VA = "0x240756C")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x2407600", Offset = "0x2407600", VA = "0x2407600")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x240768C", Offset = "0x240768C", VA = "0x240768C", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x2407728", Offset = "0x2407728", VA = "0x2407728", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x24077E0", Offset = "0x24077E0", VA = "0x24077E0", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x240788C", Offset = "0x240788C", VA = "0x240788C", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x240792C", Offset = "0x240792C", VA = "0x240792C", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x24079CC", Offset = "0x24079CC", VA = "0x24079CC", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x2407A68", Offset = "0x2407A68", VA = "0x2407A68", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x2407B10", Offset = "0x2407B10", VA = "0x2407B10", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x2407BC0", Offset = "0x2407BC0", VA = "0x2407BC0", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x2407C70", Offset = "0x2407C70", VA = "0x2407C70", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x2407D0C", Offset = "0x2407D0C", VA = "0x2407D0C", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x2405B0C", Offset = "0x2405B0C", VA = "0x2405B0C")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x2407DD8", Offset = "0x2407DD8", VA = "0x2407DD8", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x2407DEC", Offset = "0x2407DEC", VA = "0x2407DEC", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x2407DF8", Offset = "0x2407DF8", VA = "0x2407DF8", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x2407E04", Offset = "0x2407E04", VA = "0x2407E04", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x2407E10", Offset = "0x2407E10", VA = "0x2407E10", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x2407E7C", Offset = "0x2407E7C", VA = "0x2407E7C", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x2407EE8", Offset = "0x2407EE8", VA = "0x2407EE8", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x2407F54", Offset = "0x2407F54", VA = "0x2407F54", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x2407FC0", Offset = "0x2407FC0", VA = "0x2407FC0", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x240802C", Offset = "0x240802C", VA = "0x240802C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x2408098", Offset = "0x2408098", VA = "0x2408098", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x2405B10", Offset = "0x2405B10", VA = "0x2405B10")]
		public StandaloneInput()
		{
		}
	}
}
namespace ExitGames.UtilityScripts
{
	[Token(Token = "0x200035F")]
	public class PlayerRoomIndexing : PunBehaviour
	{
		[Token(Token = "0x2000555")]
		public delegate void RoomIndexingChanged();

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerRoomIndexing instance;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomIndexingChanged OnRoomIndexingChanged;

		[Token(Token = "0x4001917")]
		public const string RoomPlayerIndexedProp = "PlayerIndexes";

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _playerIds;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object _indexes;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, int> _indexesLUT;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<bool> _indexesPool;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PhotonPlayer _p;

		[Token(Token = "0x170002EB")]
		public int[] PlayerIds
		{
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0x16FE658", Offset = "0x16FE658", VA = "0x16FE658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x16FE660", Offset = "0x16FE660", VA = "0x16FE660")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x16FE9B8", Offset = "0x16FE9B8", VA = "0x16FE9B8", Slot = "46")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x16FF064", Offset = "0x16FF064", VA = "0x16FF064", Slot = "34")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x16FF068", Offset = "0x16FF068", VA = "0x16FF068", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x16FF0F8", Offset = "0x16FF0F8", VA = "0x16FF0F8", Slot = "48")]
		public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x16FF324", Offset = "0x16FF324", VA = "0x16FF324", Slot = "52")]
		public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x16FF3B0", Offset = "0x16FF3B0", VA = "0x16FF3B0", Slot = "35")]
		public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x16FF430", Offset = "0x16FF430", VA = "0x16FF430")]
		public int GetRoomIndex(PhotonPlayer player)
		{
			return default(int);
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x16FE774", Offset = "0x16FE774", VA = "0x16FE774")]
		private void SanitizeIndexing(bool forceIndexing = false)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x16FEDE8", Offset = "0x16FEDE8", VA = "0x16FEDE8")]
		private void RefreshData()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x16FEA5C", Offset = "0x16FEA5C", VA = "0x16FEA5C")]
		private void AssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x16FF188", Offset = "0x16FF188", VA = "0x16FF188")]
		private void UnAssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x16FF6DC", Offset = "0x16FF6DC", VA = "0x16FF6DC")]
		public PlayerRoomIndexing()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public static class PlayerRoomIndexingExtensions
	{
		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x16FF72C", Offset = "0x16FF72C", VA = "0x16FF72C")]
		public static int GetRoomIndex(this PhotonPlayer player)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000361")]
	public class ButtonInsideScrollList : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScrollRect scrollRect;

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x16FE49C", Offset = "0x16FE49C", VA = "0x16FE49C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x16FE4F4", Offset = "0x16FE4F4", VA = "0x16FE4F4", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x16FE5A4", Offset = "0x16FE5A4", VA = "0x16FE5A4", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x16FE650", Offset = "0x16FE650", VA = "0x16FE650")]
		public ButtonInsideScrollList()
		{
		}
	}
	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD80420", Offset = "0xD80420")]
	public class TextButtonTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color NormalColor;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color HoverColor;

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x16FF81C", Offset = "0x16FF81C", VA = "0x16FF81C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x16FF874", Offset = "0x16FF874", VA = "0x16FF874", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x16FF8A4", Offset = "0x16FF8A4", VA = "0x16FF8A4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x16FF8D4", Offset = "0x16FF8D4", VA = "0x16FF8D4")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD80484", Offset = "0xD80484")]
	public class TextToggleIsOnTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x16FF918", Offset = "0x16FF918", VA = "0x16FF918")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x16FF9D4", Offset = "0x16FF9D4", VA = "0x16FF9D4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x16FFA78", Offset = "0x16FFA78", VA = "0x16FFA78")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x16FFB14", Offset = "0x16FFB14", VA = "0x16FFB14", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x16FFB8C", Offset = "0x16FFB8C", VA = "0x16FFB8C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x16FFC00", Offset = "0x16FFC00", VA = "0x16FFC00")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace ExitGames.Client.Photon.Voice
{
	[Token(Token = "0x2000364")]
	public static class AudioUtil
	{
		[Token(Token = "0x2000556")]
		public class Resampler<T> : LocalVoiceFramed<T>.IProcessor, IDisposable
		{
			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected T[] frameResampled;

			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int channels;

			[Token(Token = "0x60022C0")]
			public Resampler(int dstSize, int channels)
			{
			}

			[Token(Token = "0x60022C1")]
			public T[] Process(T[] buf)
			{
				return null;
			}

			[Token(Token = "0x60022C2")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x2000557")]
		public interface ILevelMeter
		{
			[Token(Token = "0x1700045A")]
			float CurrentAvgAmp
			{
				[Token(Token = "0x60022C3")]
				get;
			}

			[Token(Token = "0x1700045B")]
			float CurrentPeakAmp
			{
				[Token(Token = "0x60022C4")]
				get;
			}

			[Token(Token = "0x1700045C")]
			float AccumAvgPeakAmp
			{
				[Token(Token = "0x60022C5")]
				get;
			}

			[Token(Token = "0x60022C6")]
			void ResetAccumAvgPeakAmp();
		}

		[Token(Token = "0x2000558")]
		public class LevelMetterDummy : ILevelMeter
		{
			[Token(Token = "0x1700045D")]
			public float CurrentAvgAmp
			{
				[Token(Token = "0x60022C7")]
				[Address(RVA = "0x18AF2E0", Offset = "0x18AF2E0", VA = "0x18AF2E0", Slot = "4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700045E")]
			public float CurrentPeakAmp
			{
				[Token(Token = "0x60022C8")]
				[Address(RVA = "0x18AF2E8", Offset = "0x18AF2E8", VA = "0x18AF2E8", Slot = "5")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700045F")]
			public float AccumAvgPeakAmp
			{
				[Token(Token = "0x60022C9")]
				[Address(RVA = "0x18AF2F0", Offset = "0x18AF2F0", VA = "0x18AF2F0", Slot = "6")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60022CA")]
			[Address(RVA = "0x18AF2F8", Offset = "0x18AF2F8", VA = "0x18AF2F8", Slot = "7")]
			public void ResetAccumAvgPeakAmp()
			{
			}

			[Token(Token = "0x60022CB")]
			[Address(RVA = "0x18AF2FC", Offset = "0x18AF2FC", VA = "0x18AF2FC")]
			public LevelMetterDummy()
			{
			}
		}

		[Token(Token = "0x2000559")]
		public abstract class LevelMeter<T> : LocalVoiceFramed<T>.IProcessor, IDisposable, ILevelMeter
		{
			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected float ampSum;

			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected float ampPeak;

			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected int bufferSize;

			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected float[] buffer;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected int prevValuesPtr;

			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected float accumAvgPeakAmpSum;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected int accumAvgPeakAmpCount;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD904E4", Offset = "0xD904E4")]
			private float <CurrentPeakAmp>k__BackingField;

			[Token(Token = "0x17000460")]
			public float CurrentAvgAmp
			{
				[Token(Token = "0x60022CD")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000461")]
			public float CurrentPeakAmp
			{
				[Token(Token = "0x60022CE")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97ABC", Offset = "0xD97ABC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60022CF")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97ACC", Offset = "0xD97ACC")]
				protected set
				{
				}
			}

			[Token(Token = "0x17000462")]
			public float AccumAvgPeakAmp
			{
				[Token(Token = "0x60022D0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60022CC")]
			internal LevelMeter(int samplingRate, int numChannels)
			{
			}

			[Token(Token = "0x60022D1")]
			public void ResetAccumAvgPeakAmp()
			{
			}

			[Token(Token = "0x60022D2")]
			public abstract T[] Process(T[] buf);

			[Token(Token = "0x60022D3")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x200055A")]
		public class LevelMeterFloat : LevelMeter<float>
		{
			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x18AEFA4", Offset = "0x18AEFA4", VA = "0x18AEFA4")]
			public LevelMeterFloat(int samplingRate, int numChannels)
			{
			}

			[Token(Token = "0x60022D5")]
			[Address(RVA = "0x18AF00C", Offset = "0x18AF00C", VA = "0x18AF00C", Slot = "10")]
			public override float[] Process(float[] buf)
			{
				return null;
			}
		}

		[Token(Token = "0x200055B")]
		public class LevelMeterShort : LevelMeter<short>
		{
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x18AF140", Offset = "0x18AF140", VA = "0x18AF140")]
			public LevelMeterShort(int samplingRate, int numChannels)
			{
			}

			[Token(Token = "0x60022D7")]
			[Address(RVA = "0x18AF1A8", Offset = "0x18AF1A8", VA = "0x18AF1A8", Slot = "10")]
			public override short[] Process(short[] buf)
			{
				return null;
			}
		}

		[Token(Token = "0x200055C")]
		public interface IVoiceDetector
		{
			[Token(Token = "0x17000463")]
			bool On
			{
				[Token(Token = "0x60022D8")]
				get;
				[Token(Token = "0x60022D9")]
				set;
			}

			[Token(Token = "0x17000464")]
			float Threshold
			{
				[Token(Token = "0x60022DA")]
				get;
				[Token(Token = "0x60022DB")]
				set;
			}

			[Token(Token = "0x17000465")]
			bool Detected
			{
				[Token(Token = "0x60022DC")]
				get;
			}

			[Token(Token = "0x17000466")]
			DateTime DetectedTime
			{
				[Token(Token = "0x60022DD")]
				get;
			}

			[Token(Token = "0x17000467")]
			int ActivityDelayMs
			{
				[Token(Token = "0x60022E0")]
				get;
				[Token(Token = "0x60022E1")]
				set;
			}

			[Token(Token = "0x1400002B")]
			event Action OnDetected;
		}

		[Token(Token = "0x200055D")]
		public class VoiceDetectorCalibration<T> : LocalVoiceFramed<T>.IProcessor, IDisposable
		{
			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IVoiceDetector voiceDetector;

			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ILevelMeter levelMeter;

			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int valuesPerSec;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected int voiceDetectorCalibrateCount;

			[Token(Token = "0x17000468")]
			public bool VoiceDetectorCalibrating
			{
				[Token(Token = "0x60022E2")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60022E3")]
			public VoiceDetectorCalibration(IVoiceDetector voiceDetector, ILevelMeter levelMeter, int samplingRate, int channels)
			{
			}

			[Token(Token = "0x60022E4")]
			public void VoiceDetectorCalibrate(int durationMs)
			{
			}

			[Token(Token = "0x60022E5")]
			public T[] Process(T[] buf)
			{
				return null;
			}

			[Token(Token = "0x60022E6")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x200055E")]
		public class VoiceDetectorDummy : IVoiceDetector
		{
			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD904F4", Offset = "0xD904F4")]
			private DateTime <DetectedTime>k__BackingField;

			[Token(Token = "0x17000469")]
			public bool On
			{
				[Token(Token = "0x60022E7")]
				[Address(RVA = "0x18AF304", Offset = "0x18AF304", VA = "0x18AF304", Slot = "4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60022E8")]
				[Address(RVA = "0x18AF30C", Offset = "0x18AF30C", VA = "0x18AF30C", Slot = "5")]
				set
				{
				}
			}

			[Token(Token = "0x1700046A")]
			public float Threshold
			{
				[Token(Token = "0x60022E9")]
				[Address(RVA = "0x18AF310", Offset = "0x18AF310", VA = "0x18AF310", Slot = "6")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60022EA")]
				[Address(RVA = "0x18AF318", Offset = "0x18AF318", VA = "0x18AF318", Slot = "7")]
				set
				{
				}
			}

			[Token(Token = "0x1700046B")]
			public bool Detected
			{
				[Token(Token = "0x60022EB")]
				[Address(RVA = "0x18AF31C", Offset = "0x18AF31C", VA = "0x18AF31C", Slot = "8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700046C")]
			public int ActivityDelayMs
			{
				[Token(Token = "0x60022EC")]
				[Address(RVA = "0x18AF324", Offset = "0x18AF324", VA = "0x18AF324", Slot = "12")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60022ED")]
				[Address(RVA = "0x18AF32C", Offset = "0x18AF32C", VA = "0x18AF32C", Slot = "13")]
				set
				{
				}
			}

			[Token(Token = "0x1700046D")]
			public DateTime DetectedTime
			{
				[Token(Token = "0x60022EE")]
				[Address(RVA = "0x18AF330", Offset = "0x18AF330", VA = "0x18AF330", Slot = "9")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97AFC", Offset = "0xD97AFC")]
				get
				{
					return default(DateTime);
				}
				[Token(Token = "0x60022EF")]
				[Address(RVA = "0x18AF338", Offset = "0x18AF338", VA = "0x18AF338")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97B0C", Offset = "0xD97B0C")]
				private set
				{
				}
			}

			[Token(Token = "0x1400002C")]
			public event Action OnDetected
			{
				[Token(Token = "0x60022F0")]
				[Address(RVA = "0x18AF340", Offset = "0x18AF340", VA = "0x18AF340", Slot = "10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97B1C", Offset = "0xD97B1C")]
				add
				{
				}
				[Token(Token = "0x60022F1")]
				[Address(RVA = "0x18AF3E4", Offset = "0x18AF3E4", VA = "0x18AF3E4", Slot = "11")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97B2C", Offset = "0xD97B2C")]
				remove
				{
				}
			}

			[Token(Token = "0x60022F2")]
			[Address(RVA = "0x18AF488", Offset = "0x18AF488", VA = "0x18AF488")]
			public VoiceDetectorDummy()
			{
			}
		}

		[Token(Token = "0x200055F")]
		public abstract class VoiceDetector<T> : LocalVoiceFramed<T>.IProcessor, IDisposable, IVoiceDetector
		{
			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90514", Offset = "0xD90514")]
			private bool <On>k__BackingField;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90524", Offset = "0xD90524")]
			private float <Threshold>k__BackingField;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool detected;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90534", Offset = "0xD90534")]
			private DateTime <DetectedTime>k__BackingField;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected int activityDelay;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected int autoSilenceCounter;

			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected int valuesCountPerSec;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected int activityDelayValuesCount;

			[Token(Token = "0x1700046E")]
			public bool On
			{
				[Token(Token = "0x60022F3")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97B3C", Offset = "0xD97B3C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60022F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97B4C", Offset = "0xD97B4C")]
				set
				{
				}
			}

			[Token(Token = "0x1700046F")]
			public float Threshold
			{
				[Token(Token = "0x60022F5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97B5C", Offset = "0xD97B5C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60022F6")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97B6C", Offset = "0xD97B6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000470")]
			public bool Detected
			{
				[Token(Token = "0x60022F7")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60022F8")]
				protected set
				{
				}
			}

			[Token(Token = "0x17000471")]
			public DateTime DetectedTime
			{
				[Token(Token = "0x60022F9")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97B7C", Offset = "0xD97B7C")]
				get
				{
					return default(DateTime);
				}
				[Token(Token = "0x60022FA")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97B8C", Offset = "0xD97B8C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000472")]
			public int ActivityDelayMs
			{
				[Token(Token = "0x60022FB")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60022FC")]
				set
				{
				}
			}

			[Token(Token = "0x1400002D")]
			public event Action OnDetected
			{
				[Token(Token = "0x60022FD")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97B9C", Offset = "0xD97B9C")]
				add
				{
				}
				[Token(Token = "0x60022FE")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97BAC", Offset = "0xD97BAC")]
				remove
				{
				}
			}

			[Token(Token = "0x60022FF")]
			internal VoiceDetector(int samplingRate, int numChannels)
			{
			}

			[Token(Token = "0x6002300")]
			public abstract T[] Process(T[] buf);

			[Token(Token = "0x6002301")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x2000560")]
		public class VoiceDetectorFloat : VoiceDetector<float>
		{
			[Token(Token = "0x6002302")]
			[Address(RVA = "0x18AF490", Offset = "0x18AF490", VA = "0x18AF490")]
			public VoiceDetectorFloat(int samplingRate, int numChannels)
			{
			}

			[Token(Token = "0x6002303")]
			[Address(RVA = "0x18AF508", Offset = "0x18AF508", VA = "0x18AF508", Slot = "16")]
			public override float[] Process(float[] buffer)
			{
				return null;
			}
		}

		[Token(Token = "0x2000561")]
		public class VoiceDetectorShort : VoiceDetector<short>
		{
			[Token(Token = "0x6002304")]
			[Address(RVA = "0x18AF620", Offset = "0x18AF620", VA = "0x18AF620")]
			internal VoiceDetectorShort(int samplingRate, int numChannels)
			{
			}

			[Token(Token = "0x6002305")]
			[Address(RVA = "0x18AF698", Offset = "0x18AF698", VA = "0x18AF698", Slot = "16")]
			public override short[] Process(short[] buffer)
			{
				return null;
			}
		}

		[Token(Token = "0x2000562")]
		public class VoiceLevelDetectCalibrate<T> : LocalVoiceFramed<T>.IProcessor, IDisposable
		{
			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90554", Offset = "0xD90554")]
			private ILevelMeter <Level>k__BackingField;

			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD90564", Offset = "0xD90564")]
			private IVoiceDetector <Detector>k__BackingField;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private VoiceDetectorCalibration<T> c;

			[Token(Token = "0x17000473")]
			public ILevelMeter Level
			{
				[Token(Token = "0x6002306")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97BBC", Offset = "0xD97BBC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002307")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97BCC", Offset = "0xD97BCC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000474")]
			public IVoiceDetector Detector
			{
				[Token(Token = "0x6002308")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97BDC", Offset = "0xD97BDC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002309")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD97BEC", Offset = "0xD97BEC")]
				private set
				{
				}
			}

			[Token(Token = "0x600230A")]
			public VoiceLevelDetectCalibrate(int samplingRate, int channels)
			{
			}

			[Token(Token = "0x600230B")]
			public void Calibrate(int durationMs)
			{
			}

			[Token(Token = "0x600230C")]
			public T[] Process(T[] buf)
			{
				return null;
			}

			[Token(Token = "0x600230D")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x6001B24")]
		public static void Resample<T>(T[] src, T[] dst, int dstCount, int channels)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x18AEA54", Offset = "0x18AEA54", VA = "0x18AEA54")]
		public static void ResampleAndConvert(short[] src, float[] dst, int dstCount, int channels)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x18AEC48", Offset = "0x18AEC48", VA = "0x18AEC48")]
		public static void ResampleAndConvert(float[] src, short[] dst, int dstCount, int channels)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x18AEE94", Offset = "0x18AEE94", VA = "0x18AEE94")]
		public static void Convert(float[] src, short[] dst, int dstCount)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x18AEF28", Offset = "0x18AEF28", VA = "0x18AEF28")]
		public static void Convert(short[] src, float[] dst, int dstCount)
		{
		}

		[Token(Token = "0x6001B29")]
		public static void ForceToStereo<T>(T[] src, T[] dst, int srcChannels)
		{
		}

		[Token(Token = "0x6001B2A")]
		internal static string tostr<T>(T[] x, int lim = 10)
		{
			return null;
		}
	}
	[Token(Token = "0x2000365")]
	public interface IAudioOut
	{
		[Token(Token = "0x170002EC")]
		bool IsPlaying
		{
			[Token(Token = "0x6001B2B")]
			get;
		}

		[Token(Token = "0x170002ED")]
		int CurrentBufferLag
		{
			[Token(Token = "0x6001B30")]
			get;
		}

		[Token(Token = "0x6001B2C")]
		void Start(int frequency, int channels, int frameSamplesPerChannel, int playDelayMs);

		[Token(Token = "0x6001B2D")]
		void Stop();

		[Token(Token = "0x6001B2E")]
		void OnAudioFrame(float[] frame);

		[Token(Token = "0x6001B2F")]
		void Service();
	}
	[Token(Token = "0x2000366")]
	public abstract class ObjectPool<TType, TInfo> : IDisposable
	{
		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int capacity;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TInfo info;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TType[] freeObj;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int pos;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string name;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool inited;

		[Token(Token = "0x170002EE")]
		internal string LogPrefix
		{
			[Token(Token = "0x6001B34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		public TInfo Info
		{
			[Token(Token = "0x6001B38")]
			get
			{
				return (TInfo)null;
			}
		}

		[Token(Token = "0x6001B31")]
		protected abstract TType createObject(TInfo info);

		[Token(Token = "0x6001B32")]
		protected abstract void destroyObject(TType obj);

		[Token(Token = "0x6001B33")]
		protected abstract bool infosMatch(TInfo i0, TInfo i1);

		[Token(Token = "0x6001B35")]
		public ObjectPool(int capacity, string name)
		{
		}

		[Token(Token = "0x6001B36")]
		public ObjectPool(int capacity, string name, TInfo info)
		{
		}

		[Token(Token = "0x6001B37")]
		public void Init(TInfo info)
		{
		}

		[Token(Token = "0x6001B39")]
		public TType AcquireOrCreate()
		{
			return (TType)null;
		}

		[Token(Token = "0x6001B3A")]
		public TType AcquireOrCreate(TInfo info)
		{
			return (TType)null;
		}

		[Token(Token = "0x6001B3B")]
		public virtual bool Release(TType obj, TInfo objInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3C")]
		public virtual bool Release(TType obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3D")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class PrimitiveArrayPool<T> : ObjectPool<T[], int>
	{
		[Token(Token = "0x6001B3E")]
		public PrimitiveArrayPool(int capacity, string name)
		{
		}

		[Token(Token = "0x6001B3F")]
		public PrimitiveArrayPool(int capacity, string name, int info)
		{
		}

		[Token(Token = "0x6001B40")]
		protected override T[] createObject(int info)
		{
			return null;
		}

		[Token(Token = "0x6001B41")]
		protected override void destroyObject(T[] obj)
		{
		}

		[Token(Token = "0x6001B42")]
		protected override bool infosMatch(int i0, int i1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000368")]
	public class ImageBufferNativePool<T> : ObjectPool<T, ImageBufferInfo> where T : ImageBufferNative
	{
		[Token(Token = "0x2000563")]
		public delegate T Factory(ImageBufferNativePool<T> pool, ImageBufferInfo info);

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Factory factory;

		[Token(Token = "0x6001B43")]
		public ImageBufferNativePool(int capacity, Factory factory, string name)
		{
		}

		[Token(Token = "0x6001B44")]
		public ImageBufferNativePool(int capacity, Factory factory, string name, ImageBufferInfo info)
		{
		}

		[Token(Token = "0x6001B45")]
		protected override T createObject(ImageBufferInfo info)
		{
			return null;
		}

		[Token(Token = "0x6001B46")]
		protected override void destroyObject(T obj)
		{
		}

		[Token(Token = "0x6001B47")]
		protected override bool infosMatch(ImageBufferInfo i0, ImageBufferInfo i1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000369")]
	public class OpusCodec
	{
		[Token(Token = "0x2000564")]
		public enum FrameDuration
		{
			[Token(Token = "0x40022BB")]
			Frame2dot5ms = 2500,
			[Token(Token = "0x40022BC")]
			Frame5ms = 5000,
			[Token(Token = "0x40022BD")]
			Frame10ms = 10000,
			[Token(Token = "0x40022BE")]
			Frame20ms = 20000,
			[Token(Token = "0x40022BF")]
			Frame40ms = 40000,
			[Token(Token = "0x40022C0")]
			Frame60ms = 60000
		}

		[Token(Token = "0x2000565")]
		public static class EncoderFactory
		{
			[Token(Token = "0x6002312")]
			[Address(RVA = "0x18B4970", Offset = "0x18B4970", VA = "0x18B4970")]
			public static IEncoder Create(VoiceInfo i, LocalVoice localVoice)
			{
				return null;
			}
		}

		[Token(Token = "0x2000566")]
		public abstract class Encoder<T> : IEncoderDataFlowDirect<T>, IEncoderDataFlow<T>, IEncoder, IDisposable
		{
			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected OpusEncoder encoder;

			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected bool disposed;

			[Token(Token = "0x6002313")]
			protected Encoder(VoiceInfo i)
			{
			}

			[Token(Token = "0x6002314")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002315")]
			public abstract ArraySegment<byte> EncodeAndGetOutput(T[] buf);
		}

		[Token(Token = "0x2000567")]
		public class EncoderFloat : Encoder<float>
		{
			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly ArraySegment<byte> EmptyBuffer;

			[Token(Token = "0x6002316")]
			[Address(RVA = "0x18B4B24", Offset = "0x18B4B24", VA = "0x18B4B24")]
			internal EncoderFloat(VoiceInfo i)
			{
			}

			[Token(Token = "0x6002317")]
			[Address(RVA = "0x18B4DEC", Offset = "0x18B4DEC", VA = "0x18B4DEC", Slot = "6")]
			public override ArraySegment<byte> EncodeAndGetOutput(float[] buf)
			{
				return default(ArraySegment<byte>);
			}
		}

		[Token(Token = "0x2000568")]
		public class EncoderShort : Encoder<short>
		{
			[Token(Token = "0x40022C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly ArraySegment<byte> EmptyBuffer;

			[Token(Token = "0x6002319")]
			[Address(RVA = "0x18B4BAC", Offset = "0x18B4BAC", VA = "0x18B4BAC")]
			internal EncoderShort(VoiceInfo i)
			{
			}

			[Token(Token = "0x600231A")]
			[Address(RVA = "0x18B4F9C", Offset = "0x18B4F9C", VA = "0x18B4F9C", Slot = "6")]
			public override ArraySegment<byte> EncodeAndGetOutput(short[] buf)
			{
				return default(ArraySegment<byte>);
			}
		}

		[Token(Token = "0x2000569")]
		public class Decoder : IDecoderDirect, IDecoder, IDisposable
		{
			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private OpusDecoder decoder;

			[Token(Token = "0x600231C")]
			[Address(RVA = "0x18B4838", Offset = "0x18B4838", VA = "0x18B4838", Slot = "7")]
			public void Open(VoiceInfo i)
			{
			}

			[Token(Token = "0x600231D")]
			[Address(RVA = "0x18B48B4", Offset = "0x18B48B4", VA = "0x18B48B4", Slot = "4")]
			public byte[] DecodeToByte(byte[] buf)
			{
				return null;
			}

			[Token(Token = "0x600231E")]
			[Address(RVA = "0x18B4914", Offset = "0x18B4914", VA = "0x18B4914", Slot = "5")]
			public float[] DecodeToFloat(byte[] buf)
			{
				return null;
			}

			[Token(Token = "0x600231F")]
			[Address(RVA = "0x18B4930", Offset = "0x18B4930", VA = "0x18B4930", Slot = "6")]
			public short[] DecodeToShort(byte[] buf)
			{
				return null;
			}

			[Token(Token = "0x6002320")]
			[Address(RVA = "0x18B494C", Offset = "0x18B494C", VA = "0x18B494C", Slot = "8")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002321")]
			[Address(RVA = "0x18B4968", Offset = "0x18B4968", VA = "0x18B4968")]
			public Decoder()
			{
			}
		}

		[Token(Token = "0x200056A")]
		public class Util
		{
			[Token(Token = "0x6002322")]
			[Address(RVA = "0x18B514C", Offset = "0x18B514C", VA = "0x18B514C")]
			internal static int bestEncoderSampleRate(int f)
			{
				return default(int);
			}

			[Token(Token = "0x6002323")]
			[Address(RVA = "0x18B547C", Offset = "0x18B547C", VA = "0x18B547C")]
			public Util()
			{
			}
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x18B4830", Offset = "0x18B4830", VA = "0x18B4830")]
		public OpusCodec()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public interface IDataReader<T> : IDisposable
	{
		[Token(Token = "0x6001B49")]
		bool Read(T[] buffer);
	}
	[Token(Token = "0x200036B")]
	public interface IServiceable
	{
		[Token(Token = "0x6001B4A")]
		void Service(LocalVoice localVoice);
	}
	[Token(Token = "0x200036C")]
	public class LocalVoice : IDisposable
	{
		[Token(Token = "0x400192F")]
		public const int DATA_POOL_CAPACITY = 50;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C124", Offset = "0xD8C124")]
		private byte <Group>k__BackingField;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C134", Offset = "0xD8C134")]
		private bool <Transmit>k__BackingField;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C144", Offset = "0xD8C144")]
		private bool <IsTransmitting>k__BackingField;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C154", Offset = "0xD8C154")]
		private int <FramesSent>k__BackingField;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C164", Offset = "0xD8C164")]
		private int <FramesSentBytes>k__BackingField;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C174", Offset = "0xD8C174")]
		private bool <Reliable>k__BackingField;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C184", Offset = "0xD8C184")]
		private bool <Encrypt>k__BackingField;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C194", Offset = "0xD8C194")]
		private object <LocalUserObject>k__BackingField;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C1A4", Offset = "0xD8C1A4")]
		private IServiceable <LocalUserServiceable>k__BackingField;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool debugEchoMode;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal VoiceInfo info;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IEncoder encoder;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal byte id;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal int channelId;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal byte evNumber;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected VoiceClient voiceClient;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool disposed;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected object disposeLock;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int noTransmitCnt;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal Dictionary<byte, int> eventTimestamps;

		[Token(Token = "0x170002F0")]
		public byte Group
		{
			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0x18B3070", Offset = "0x18B3070", VA = "0x18B3070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD958C0", Offset = "0xD958C0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0x18B3078", Offset = "0x18B3078", VA = "0x18B3078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD958D0", Offset = "0xD958D0")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public VoiceInfo Info
		{
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0x18B3080", Offset = "0x18B3080", VA = "0x18B3080")]
			get
			{
				return default(VoiceInfo);
			}
		}

		[Token(Token = "0x170002F2")]
		public bool Transmit
		{
			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0x18B3098", Offset = "0x18B3098", VA = "0x18B3098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD958E0", Offset = "0xD958E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x18B30A0", Offset = "0x18B30A0", VA = "0x18B30A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD958F0", Offset = "0xD958F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public bool IsTransmitting
		{
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x18B30AC", Offset = "0x18B30AC", VA = "0x18B30AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95900", Offset = "0xD95900")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B51")]
			[Address(RVA = "0x18B30B4", Offset = "0x18B30B4", VA = "0x18B30B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95910", Offset = "0xD95910")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		public int FramesSent
		{
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0x18B30C0", Offset = "0x18B30C0", VA = "0x18B30C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95920", Offset = "0xD95920")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x18B30C8", Offset = "0x18B30C8", VA = "0x18B30C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95930", Offset = "0xD95930")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public int FramesSentBytes
		{
			[Token(Token = "0x6001B54")]
			[Address(RVA = "0x18B30D0", Offset = "0x18B30D0", VA = "0x18B30D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95940", Offset = "0xD95940")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x18B30D8", Offset = "0x18B30D8", VA = "0x18B30D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95950", Offset = "0xD95950")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public bool Reliable
		{
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x18B30E0", Offset = "0x18B30E0", VA = "0x18B30E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95960", Offset = "0xD95960")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B57")]
			[Address(RVA = "0x18B30E8", Offset = "0x18B30E8", VA = "0x18B30E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95970", Offset = "0xD95970")]
			set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public bool Encrypt
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0x18B30F4", Offset = "0x18B30F4", VA = "0x18B30F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95980", Offset = "0xD95980")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0x18B30FC", Offset = "0x18B30FC", VA = "0x18B30FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95990", Offset = "0xD95990")]
			set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		public object LocalUserObject
		{
			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0x18B3108", Offset = "0x18B3108", VA = "0x18B3108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD959A0", Offset = "0xD959A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0x18B3110", Offset = "0x18B3110", VA = "0x18B3110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD959B0", Offset = "0xD959B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public IServiceable LocalUserServiceable
		{
			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0x18B3118", Offset = "0x18B3118", VA = "0x18B3118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD959C0", Offset = "0xD959C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0x18B3120", Offset = "0x18B3120", VA = "0x18B3120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD959D0", Offset = "0xD959D0")]
			set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public bool DebugEchoMode
		{
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0x18B3128", Offset = "0x18B3128", VA = "0x18B3128")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0x18B3130", Offset = "0x18B3130", VA = "0x18B3130")]
			set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		internal string Name
		{
			[Token(Token = "0x6001B62")]
			[Address(RVA = "0x18B33A0", Offset = "0x18B33A0", VA = "0x18B33A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		internal string LogPrefix
		{
			[Token(Token = "0x6001B63")]
			[Address(RVA = "0x18B3704", Offset = "0x18B3704", VA = "0x18B3704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x18B3224", Offset = "0x18B3224", VA = "0x18B3224")]
		internal LocalVoice()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x18B32B4", Offset = "0x18B32B4", VA = "0x18B32B4")]
		internal LocalVoice(VoiceClient voiceClient, IEncoder encoder, byte id, VoiceInfo voiceInfo, int channelId)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x18B3764", Offset = "0x18B3764", VA = "0x18B3764")]
		protected void resetNoTransmitCnt()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x18B3770", Offset = "0x18B3770", VA = "0x18B3770", Slot = "5")]
		internal virtual void service()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x18B3BC8", Offset = "0x18B3BC8", VA = "0x18B3BC8")]
		internal void sendFrame(ArraySegment<byte> compressed)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x18B3D24", Offset = "0x18B3D24", VA = "0x18B3D24")]
		public void RemoveSelf()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x18B401C", Offset = "0x18B401C", VA = "0x18B401C", Slot = "6")]
		public virtual void Dispose()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public struct RemoteVoiceOptions
	{
		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C1B4", Offset = "0xD8C1B4")]
		private Action<byte[]> <OnDecodedFrameByteAction>k__BackingField;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C1C4", Offset = "0xD8C1C4")]
		private Action<float[]> <OnDecodedFrameFloatAction>k__BackingField;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C1D4", Offset = "0xD8C1D4")]
		private Action<short[]> <OnDecodedFrameShortAction>k__BackingField;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C1E4", Offset = "0xD8C1E4")]
		private Action <OnRemoteVoiceRemoveAction>k__BackingField;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C1F4", Offset = "0xD8C1F4")]
		private object <LocalUserObject>k__BackingField;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C204", Offset = "0xD8C204")]
		private IDecoder <Decoder>k__BackingField;

		[Token(Token = "0x170002FD")]
		public Action<byte[]> OnDecodedFrameByteAction
		{
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0x18B769C", Offset = "0x18B769C", VA = "0x18B769C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD959E0", Offset = "0xD959E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0x18B76A4", Offset = "0x18B76A4", VA = "0x18B76A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD959F0", Offset = "0xD959F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public Action<float[]> OnDecodedFrameFloatAction
		{
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0x18B76AC", Offset = "0x18B76AC", VA = "0x18B76AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95A00", Offset = "0xD95A00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0x18B76B4", Offset = "0x18B76B4", VA = "0x18B76B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95A10", Offset = "0xD95A10")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public Action<short[]> OnDecodedFrameShortAction
		{
			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0x18B76BC", Offset = "0x18B76BC", VA = "0x18B76BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95A20", Offset = "0xD95A20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0x18B76C4", Offset = "0x18B76C4", VA = "0x18B76C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95A30", Offset = "0xD95A30")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public Action OnRemoteVoiceRemoveAction
		{
			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0x18B76CC", Offset = "0x18B76CC", VA = "0x18B76CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95A40", Offset = "0xD95A40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B70")]
			[Address(RVA = "0x18B76D4", Offset = "0x18B76D4", VA = "0x18B76D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95A50", Offset = "0xD95A50")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public object LocalUserObject
		{
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0x18B76DC", Offset = "0x18B76DC", VA = "0x18B76DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95A60", Offset = "0xD95A60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B72")]
			[Address(RVA = "0x18B76E4", Offset = "0x18B76E4", VA = "0x18B76E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95A70", Offset = "0xD95A70")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public IDecoder Decoder
		{
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0x18B76EC", Offset = "0x18B76EC", VA = "0x18B76EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95A80", Offset = "0xD95A80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B74")]
			[Address(RVA = "0x18B76F4", Offset = "0x18B76F4", VA = "0x18B76F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95A90", Offset = "0xD95A90")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200036E")]
	internal class RemoteVoice : IDisposable
	{
		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C214", Offset = "0xD8C214")]
		private VoiceInfo <Info>k__BackingField;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal RemoteVoiceOptions options;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int channelId;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int playerId;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private byte voiceId;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool disposed;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private object disposeLock;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal byte lastEvNumber;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VoiceClient voiceClient;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Queue<byte[]> frameQueue;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AutoResetEvent frameQueueReady;

		[Token(Token = "0x17000303")]
		internal VoiceInfo Info
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0x18B5484", Offset = "0x18B5484", VA = "0x18B5484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95AA0", Offset = "0xD95AA0")]
			get
			{
				return default(VoiceInfo);
			}
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0x18B5498", Offset = "0x18B5498", VA = "0x18B5498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95AB0", Offset = "0xD95AB0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000304")]
		protected string Name
		{
			[Token(Token = "0x6001B78")]
			[Address(RVA = "0x18B5814", Offset = "0x18B5814", VA = "0x18B5814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		protected string LogPrefix
		{
			[Token(Token = "0x6001B79")]
			[Address(RVA = "0x18B57B4", Offset = "0x18B57B4", VA = "0x18B57B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x18B54AC", Offset = "0x18B54AC", VA = "0x18B54AC")]
		internal RemoteVoice(VoiceClient client, RemoteVoiceOptions options, int channelId, int playerId, byte voiceId, VoiceInfo info, byte lastEventNumber)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x18B5A04", Offset = "0x18B5A04", VA = "0x18B5A04")]
		private static byte byteDiff(byte latest, byte last)
		{
			return default(byte);
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x18B5A10", Offset = "0x18B5A10", VA = "0x18B5A10")]
		internal void receiveBytes(byte[] receivedBytes, byte evNumber)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x18B6000", Offset = "0x18B6000", VA = "0x18B6000")]
		private void receiveFrame(byte[] frame)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x18B5E28", Offset = "0x18B5E28", VA = "0x18B5E28")]
		private void receiveNullFrames(int count)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x18B61B8", Offset = "0x18B61B8", VA = "0x18B61B8")]
		private void decodeThread(IDecoder decoder)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x18B6A48", Offset = "0x18B6A48", VA = "0x18B6A48")]
		private void decodeFrame(IDecoder decoder, byte[] frame)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x18B6C1C", Offset = "0x18B6C1C", VA = "0x18B6C1C")]
		internal byte[] decodeFrameToByte(byte[] buffer)
		{
			return null;
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x18B6F00", Offset = "0x18B6F00", VA = "0x18B6F00")]
		internal short[] decodeFrameToShort(byte[] buffer)
		{
			return null;
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x18B71EC", Offset = "0x18B71EC", VA = "0x18B71EC")]
		internal float[] decodeFrameToFloat(byte[] buffer)
		{
			return null;
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x18B74D8", Offset = "0x18B74D8", VA = "0x18B74D8")]
		internal void removeAndDispose()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x18B7508", Offset = "0x18B7508", VA = "0x18B7508", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x18B75C8", Offset = "0x18B75C8", VA = "0x18B75C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95AC0", Offset = "0xD95AC0")]
		private void <.ctor>b__10_0()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public interface IAudioSource : IDisposable
	{
		[Token(Token = "0x17000306")]
		int SamplingRate
		{
			[Token(Token = "0x6001B86")]
			get;
		}

		[Token(Token = "0x17000307")]
		int Channels
		{
			[Token(Token = "0x6001B87")]
			get;
		}
	}
	[Token(Token = "0x2000370")]
	public interface IAudioReader<T> : IDataReader<T>, IDisposable, IAudioSource
	{
	}
	[Token(Token = "0x2000371")]
	public interface IAudioPusher<T> : IAudioSource, IDisposable
	{
		[Token(Token = "0x6001B88")]
		void SetCallback(Action<T[]> callback, LocalVoice localVoice);
	}
	[Token(Token = "0x2000372")]
	public interface ILocalVoiceAudio
	{
		[Token(Token = "0x17000308")]
		AudioUtil.IVoiceDetector VoiceDetector
		{
			[Token(Token = "0x6001B89")]
			get;
		}

		[Token(Token = "0x17000309")]
		AudioUtil.ILevelMeter LevelMeter
		{
			[Token(Token = "0x6001B8A")]
			get;
		}

		[Token(Token = "0x1700030A")]
		bool VoiceDetectorCalibrating
		{
			[Token(Token = "0x6001B8B")]
			get;
		}

		[Token(Token = "0x6001B8C")]
		void VoiceDetectorCalibrate(int durationMs);
	}
	[Token(Token = "0x2000373")]
	public static class LocalVoiceAudio
	{
		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LocalVoiceAudioDummy Dummy;

		[Token(Token = "0x6001B8D")]
		public static LocalVoiceAudio<T> Create<T>(VoiceClient voiceClient, byte voiceId, IEncoder encoder, VoiceInfo voiceInfo, int channelId)
		{
			return null;
		}
	}
	[Token(Token = "0x2000374")]
	public abstract class LocalVoiceAudio<T> : LocalVoiceFramed<T>, ILocalVoiceAudio
	{
		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected AudioUtil.VoiceDetector<T> voiceDetector;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected AudioUtil.VoiceDetectorCalibration<T> voiceDetectorCalibration;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected AudioUtil.LevelMeter<T> levelMeter;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int channels;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int sourceSamplingRateHz;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool resampleSource;

		[Token(Token = "0x1700030B")]
		public virtual AudioUtil.IVoiceDetector VoiceDetector
		{
			[Token(Token = "0x6001B8F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		public virtual AudioUtil.ILevelMeter LevelMeter
		{
			[Token(Token = "0x6001B90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		public bool VoiceDetectorCalibrating
		{
			[Token(Token = "0x6001B92")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B91")]
		public void VoiceDetectorCalibrate(int durationMs)
		{
		}

		[Token(Token = "0x6001B93")]
		internal LocalVoiceAudio(VoiceClient voiceClient, IEncoderDataFlow<T> encoder, byte id, VoiceInfo voiceInfo, int channelId)
		{
		}

		[Token(Token = "0x6001B94")]
		protected void initBuiltinProcessors()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class LocalVoiceAudioDummy : LocalVoice, ILocalVoiceAudio
	{
		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AudioUtil.VoiceDetectorDummy voiceDetector;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private AudioUtil.LevelMetterDummy levelMeter;

		[Token(Token = "0x1700030E")]
		public AudioUtil.IVoiceDetector VoiceDetector
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x18B41D4", Offset = "0x18B41D4", VA = "0x18B41D4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		public AudioUtil.ILevelMeter LevelMeter
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x18B41DC", Offset = "0x18B41DC", VA = "0x18B41DC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000310")]
		public bool VoiceDetectorCalibrating
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x18B41E4", Offset = "0x18B41E4", VA = "0x18B41E4", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x18B41EC", Offset = "0x18B41EC", VA = "0x18B41EC", Slot = "10")]
		public void VoiceDetectorCalibrate(int durationMs)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x18B414C", Offset = "0x18B414C", VA = "0x18B414C")]
		public LocalVoiceAudioDummy()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class LocalVoiceAudioFloat : LocalVoiceAudio<float>
	{
		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x18B41F0", Offset = "0x18B41F0", VA = "0x18B41F0")]
		internal LocalVoiceAudioFloat(VoiceClient voiceClient, IEncoderDataFlow<float> encoder, byte id, VoiceInfo voiceInfo, int channelId)
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class LocalVoiceAudioShort : LocalVoiceAudio<short>
	{
		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x18B4314", Offset = "0x18B4314", VA = "0x18B4314")]
		internal LocalVoiceAudioShort(VoiceClient voiceClient, IEncoderDataFlow<short> encoder, byte id, VoiceInfo voiceInfo, int channelId)
		{
		}
	}
	[Token(Token = "0x2000378")]
	internal enum EventSubcode : byte
	{
		[Token(Token = "0x400195F")]
		VoiceInfo = 1,
		[Token(Token = "0x4001960")]
		VoiceRemove,
		[Token(Token = "0x4001961")]
		Frame
	}
	[Token(Token = "0x2000379")]
	internal enum EventParam : byte
	{
		[Token(Token = "0x4001963")]
		VoiceId = 1,
		[Token(Token = "0x4001964")]
		SamplingRate = 2,
		[Token(Token = "0x4001965")]
		Channels = 3,
		[Token(Token = "0x4001966")]
		FrameDurationUs = 4,
		[Token(Token = "0x4001967")]
		Bitrate = 5,
		[Token(Token = "0x4001968")]
		UserData = 10,
		[Token(Token = "0x4001969")]
		EventNumber = 11,
		[Token(Token = "0x400196A")]
		Codec = 12
	}
	[Token(Token = "0x200037A")]
	public interface ILogger
	{
		[Token(Token = "0x6001B9C")]
		void LogError(string fmt, params object[] args);

		[Token(Token = "0x6001B9D")]
		void LogWarning(string fmt, params object[] args);

		[Token(Token = "0x6001B9E")]
		void LogInfo(string fmt, params object[] args);

		[Token(Token = "0x6001B9F")]
		void LogDebug(string fmt, params object[] args);
	}
	[Token(Token = "0x200037B")]
	internal interface IVoiceFrontend : ILogger
	{
		[Token(Token = "0x6001BA0")]
		int AssignChannel(VoiceInfo v);

		[Token(Token = "0x6001BA1")]
		bool IsChannelJoined(int channelId);

		[Token(Token = "0x6001BA2")]
		void SendVoicesInfo(IEnumerable<LocalVoice> voices, int channelId, int targetPlayerId);

		[Token(Token = "0x6001BA3")]
		void SendVoiceRemove(LocalVoice voice, int channelId, int targetPlayerId);

		[Token(Token = "0x6001BA4")]
		void SendFrame(ArraySegment<byte> data, byte evNumber, byte voiceId, int channelId, LocalVoice localVoice);

		[Token(Token = "0x6001BA5")]
		string ChannelIdStr(int channelId);

		[Token(Token = "0x6001BA6")]
		string PlayerIdStr(int playerId);

		[Token(Token = "0x6001BA7")]
		void SetDebugEchoMode(LocalVoice v);
	}
	[Token(Token = "0x200037C")]
	public class VoiceClient : IDisposable
	{
		[Token(Token = "0x200056B")]
		public delegate void RemoteVoiceInfoDelegate(int channelId, int playerId, byte voiceId, VoiceInfo voiceInfo, ref RemoteVoiceOptions options);

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80C84", Offset = "0xD80C84")]
		private sealed class <get_RemoteVoiceInfos>d__39 : IEnumerable<RemoteVoiceInfo>, IEnumerable, IEnumerator<RemoteVoiceInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RemoteVoiceInfo <>2__current;

			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VoiceClient <>4__this;

			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<int, Dictionary<int, Dictionary<byte, RemoteVoice>>>.Enumerator <>7__wrap1;

			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private KeyValuePair<int, Dictionary<int, Dictionary<byte, RemoteVoice>>> <channelVoices>5__3;

			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Dictionary<int, Dictionary<byte, RemoteVoice>>.Enumerator <>7__wrap3;

			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private KeyValuePair<int, Dictionary<byte, RemoteVoice>> <playerVoices>5__5;

			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Dictionary<byte, RemoteVoice>.Enumerator <>7__wrap5;

			[Token(Token = "0x17000475")]
			private RemoteVoiceInfo System.Collections.Generic.IEnumerator<ExitGames.Client.Photon.Voice.RemoteVoiceInfo>.Current
			{
				[Token(Token = "0x600232E")]
				[Address(RVA = "0x16F2514", Offset = "0x16F2514", VA = "0x16F2514", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002330")]
				[Address(RVA = "0x16F257C", Offset = "0x16F257C", VA = "0x16F257C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002328")]
			[Address(RVA = "0x16F203C", Offset = "0x16F203C", VA = "0x16F203C")]
			[DebuggerHidden]
			public <get_RemoteVoiceInfos>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6002329")]
			[Address(RVA = "0x16F2074", Offset = "0x16F2074", VA = "0x16F2074", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600232A")]
			[Address(RVA = "0x16F2244", Offset = "0x16F2244", VA = "0x16F2244", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600232B")]
			[Address(RVA = "0x16F21EC", Offset = "0x16F21EC", VA = "0x16F21EC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600232C")]
			[Address(RVA = "0x16F2194", Offset = "0x16F2194", VA = "0x16F2194")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600232D")]
			[Address(RVA = "0x16F213C", Offset = "0x16F213C", VA = "0x16F213C")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x600232F")]
			[Address(RVA = "0x16F251C", Offset = "0x16F251C", VA = "0x16F251C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002331")]
			[Address(RVA = "0x16F2584", Offset = "0x16F2584", VA = "0x16F2584", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<RemoteVoiceInfo> System.Collections.Generic.IEnumerable<ExitGames.Client.Photon.Voice.RemoteVoiceInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002332")]
			[Address(RVA = "0x16F2630", Offset = "0x16F2630", VA = "0x16F2630", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80C94", Offset = "0xD80C94")]
		private sealed class <get_RemoteVoiceLocalUserObjects>d__41 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VoiceClient <>4__this;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<int, Dictionary<int, Dictionary<byte, RemoteVoice>>>.Enumerator <>7__wrap1;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Dictionary<int, Dictionary<byte, RemoteVoice>>.Enumerator <>7__wrap2;

			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Dictionary<byte, RemoteVoice>.Enumerator <>7__wrap3;

			[Token(Token = "0x17000477")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002339")]
				[Address(RVA = "0x16F2A98", Offset = "0x16F2A98", VA = "0x16F2A98", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000478")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600233B")]
				[Address(RVA = "0x16F2B00", Offset = "0x16F2B00", VA = "0x16F2B00", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002333")]
			[Address(RVA = "0x16F2634", Offset = "0x16F2634", VA = "0x16F2634")]
			[DebuggerHidden]
			public <get_RemoteVoiceLocalUserObjects>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002334")]
			[Address(RVA = "0x16F266C", Offset = "0x16F266C", VA = "0x16F266C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002335")]
			[Address(RVA = "0x16F283C", Offset = "0x16F283C", VA = "0x16F283C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002336")]
			[Address(RVA = "0x16F27E4", Offset = "0x16F27E4", VA = "0x16F27E4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002337")]
			[Address(RVA = "0x16F278C", Offset = "0x16F278C", VA = "0x16F278C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002338")]
			[Address(RVA = "0x16F2734", Offset = "0x16F2734", VA = "0x16F2734")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x600233A")]
			[Address(RVA = "0x16F2AA0", Offset = "0x16F2AA0", VA = "0x16F2AA0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600233C")]
			[Address(RVA = "0x16F2B08", Offset = "0x16F2B08", VA = "0x16F2B08", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600233D")]
			[Address(RVA = "0x16F2BB4", Offset = "0x16F2BB4", VA = "0x16F2BB4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80CA4", Offset = "0xD80CA4")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VoiceClient <>4__this;

			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEncoder encoder;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VoiceInfo voiceInfo;

			[Token(Token = "0x600233E")]
			[Address(RVA = "0x16F1F8C", Offset = "0x16F1F8C", VA = "0x16F1F8C")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x600233F")]
			[Address(RVA = "0x16F1F94", Offset = "0x16F1F94", VA = "0x16F1F94")]
			internal LocalVoice <CreateLocalVoice>b__0(byte vId, int chId)
			{
				return null;
			}
		}

		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80CB4", Offset = "0xD80CB4")]
		private sealed class <>c__DisplayClass47_0<T>
		{
			[Token(Token = "0x40022D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VoiceClient <>4__this;

			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEncoderDataFlow<T> encoder;

			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VoiceInfo voiceInfo;

			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int frameSize;

			[Token(Token = "0x6002340")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6002341")]
			internal LocalVoice <CreateLocalVoiceFramed>b__0(byte vId, int chId)
			{
				return null;
			}
		}

		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80CC4", Offset = "0xD80CC4")]
		private sealed class <>c__DisplayClass48_0<T>
		{
			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VoiceClient <>4__this;

			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEncoderDataFlow<T> encoder;

			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public VoiceInfo voiceInfo;

			[Token(Token = "0x6002342")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6002343")]
			internal LocalVoice <CreateLocalVoiceAudio>b__0(byte vId, int chId)
			{
				return null;
			}
		}

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal IVoiceFrontend frontend;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C224", Offset = "0xD8C224")]
		private int <FramesLost>k__BackingField;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C234", Offset = "0xD8C234")]
		private int <FramesReceived>k__BackingField;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C244", Offset = "0xD8C244")]
		private int <RoundTripTime>k__BackingField;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C254", Offset = "0xD8C254")]
		private int <RoundTripTimeVariance>k__BackingField;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C264", Offset = "0xD8C264")]
		private bool <SuppressInfoDuplicateWarning>k__BackingField;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C274", Offset = "0xD8C274")]
		private RemoteVoiceInfoDelegate <OnRemoteVoiceInfoAction>k__BackingField;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C284", Offset = "0xD8C284")]
		private int <DebugLostPercent>k__BackingField;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int prevRtt;

		[Token(Token = "0x4001974")]
		public const int ChannelAuto = -1;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte globalGroup;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private byte voiceIdCnt;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<byte, LocalVoice> localVoices;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, List<LocalVoice>> localVoicesPerChannel;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<int, Dictionary<int, Dictionary<byte, RemoteVoice>>> remoteVoices;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private System.Random rnd;

		[Token(Token = "0x17000311")]
		public int FramesLost
		{
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0x18B7794", Offset = "0x18B7794", VA = "0x18B7794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95AD0", Offset = "0xD95AD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0x18B779C", Offset = "0x18B779C", VA = "0x18B779C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95AE0", Offset = "0xD95AE0")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000312")]
		public int FramesReceived
		{
			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0x18B77A4", Offset = "0x18B77A4", VA = "0x18B77A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95AF0", Offset = "0xD95AF0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0x18B77AC", Offset = "0x18B77AC", VA = "0x18B77AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95B00", Offset = "0xD95B00")]
			private set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public int FramesSent
		{
			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0x18B77B4", Offset = "0x18B77B4", VA = "0x18B77B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000314")]
		public int FramesSentBytes
		{
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0x18B78B8", Offset = "0x18B78B8", VA = "0x18B78B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000315")]
		public int RoundTripTime
		{
			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0x18B79BC", Offset = "0x18B79BC", VA = "0x18B79BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95B10", Offset = "0xD95B10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0x18B79C4", Offset = "0x18B79C4", VA = "0x18B79C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95B20", Offset = "0xD95B20")]
			private set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public int RoundTripTimeVariance
		{
			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0x18B79CC", Offset = "0x18B79CC", VA = "0x18B79CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95B30", Offset = "0xD95B30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0x18B79D4", Offset = "0x18B79D4", VA = "0x18B79D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95B40", Offset = "0xD95B40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public bool SuppressInfoDuplicateWarning
		{
			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0x18B79DC", Offset = "0x18B79DC", VA = "0x18B79DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95B50", Offset = "0xD95B50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0x18B79E4", Offset = "0x18B79E4", VA = "0x18B79E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95B60", Offset = "0xD95B60")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public RemoteVoiceInfoDelegate OnRemoteVoiceInfoAction
		{
			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0x18B79F0", Offset = "0x18B79F0", VA = "0x18B79F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95B70", Offset = "0xD95B70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x18B79F8", Offset = "0x18B79F8", VA = "0x18B79F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95B80", Offset = "0xD95B80")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public int DebugLostPercent
		{
			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0x18B7A00", Offset = "0x18B7A00", VA = "0x18B7A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95B90", Offset = "0xD95B90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0x18B7A08", Offset = "0x18B7A08", VA = "0x18B7A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95BA0", Offset = "0xD95BA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public IEnumerable<LocalVoice> LocalVoices
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0x18B16FC", Offset = "0x18B16FC", VA = "0x18B16FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		public IEnumerable<RemoteVoiceInfo> RemoteVoiceInfos
		{
			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0x18B7AEC", Offset = "0x18B7AEC", VA = "0x18B7AEC")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD95BB0", Offset = "0xD95BB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		public IEnumerable<object> RemoteVoiceLocalUserObjects
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0x18B7B5C", Offset = "0x18B7B5C", VA = "0x18B7B5C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD95C14", Offset = "0xD95C14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		internal byte GlobalGroup
		{
			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0x18BA2C8", Offset = "0x18BA2C8", VA = "0x18BA2C8")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0x18B0B58", Offset = "0x18B0B58", VA = "0x18B0B58")]
			set
			{
			}
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x18B7A10", Offset = "0x18B7A10", VA = "0x18B7A10")]
		public IEnumerable<LocalVoice> LocalVoicesInChannel(int channelId)
		{
			return null;
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x18B07C8", Offset = "0x18B07C8", VA = "0x18B07C8")]
		internal VoiceClient(IVoiceFrontend frontend)
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x18B08F8", Offset = "0x18B08F8", VA = "0x18B08F8")]
		public void Service()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x18B7BCC", Offset = "0x18B7BCC", VA = "0x18B7BCC")]
		private LocalVoice createLocalVoice(VoiceInfo voiceInfo, int channelId, Func<byte, int, LocalVoice> voiceFactory)
		{
			return null;
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x18B8274", Offset = "0x18B8274", VA = "0x18B8274")]
		public LocalVoice CreateLocalVoice(VoiceInfo voiceInfo, int channelId = -1, [Optional] IEncoder encoder)
		{
			return null;
		}

		[Token(Token = "0x6001BC0")]
		public LocalVoiceFramed<T> CreateLocalVoiceFramed<T>(VoiceInfo voiceInfo, int frameSize, int channelId = -1, [Optional] IEncoderDataFlow<T> encoder)
		{
			return null;
		}

		[Token(Token = "0x6001BC1")]
		public LocalVoiceAudio<T> CreateLocalVoiceAudio<T>(VoiceInfo voiceInfo, int channelId = -1, [Optional] IEncoderDataFlow<T> encoder)
		{
			return null;
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x18B7E84", Offset = "0x18B7E84", VA = "0x18B7E84")]
		private byte getNewVoiceId()
		{
			return default(byte);
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x18B8028", Offset = "0x18B8028", VA = "0x18B8028")]
		private void addVoice(byte newId, int channelId, LocalVoice v)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x18B3D40", Offset = "0x18B3D40", VA = "0x18B3D40")]
		public void RemoveLocalVoice(LocalVoice voice)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x18B2314", Offset = "0x18B2314", VA = "0x18B2314")]
		internal void sendVoicesInfo(int targetPlayerId)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x18B8360", Offset = "0x18B8360", VA = "0x18B8360")]
		internal void sendChannelVoicesInfo(int channelId, int targetPlayerId)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x18B1EE0", Offset = "0x18B1EE0", VA = "0x18B1EE0")]
		internal void onVoiceEvent(object content0, int channelId, int playerId, int localPlayerId)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x18B0C64", Offset = "0x18B0C64", VA = "0x18B0C64")]
		internal object[] buildVoicesInfo(IEnumerable<LocalVoice> voicesToSend, bool logInfo)
		{
			return null;
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x18B17B0", Offset = "0x18B17B0", VA = "0x18B17B0")]
		internal object[] buildVoiceRemoveMessage(LocalVoice v)
		{
			return null;
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x18B2424", Offset = "0x18B2424", VA = "0x18B2424")]
		internal void clearRemoteVoices()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x18BA2D0", Offset = "0x18BA2D0", VA = "0x18BA2D0")]
		internal void clearRemoteVoicesInChannel(int channelId)
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x18B84DC", Offset = "0x18B84DC", VA = "0x18B84DC")]
		private void onVoiceInfo(int channelId, int playerId, object payload)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x18B8F0C", Offset = "0x18B8F0C", VA = "0x18B8F0C")]
		private void onVoiceRemove(int channelId, int playerId, object payload)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x18B99A0", Offset = "0x18B99A0", VA = "0x18B99A0")]
		private void onFrame(int channelId, int playerId, byte voiceId, byte evNumber, byte[] receivedBytes)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x18B2A90", Offset = "0x18B2A90", VA = "0x18B2A90")]
		internal bool removePlayerVoices(int playerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x18BA878", Offset = "0x18BA878", VA = "0x18BA878")]
		internal bool removePlayerVoices(int channelId, int playerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x18B3514", Offset = "0x18B3514", VA = "0x18B3514")]
		internal string channelStr(int channelId)
		{
			return null;
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x18BA688", Offset = "0x18BA688", VA = "0x18BA688")]
		internal string playerStr(int playerId)
		{
			return null;
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x18B2BBC", Offset = "0x18B2BBC", VA = "0x18B2BBC", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public interface IEncoder : IDisposable
	{
	}
	[Token(Token = "0x200037E")]
	public interface IEncoderDataFlow<T> : IEncoder, IDisposable
	{
	}
	[Token(Token = "0x200037F")]
	public interface IEncoderDataFlowDirect<T> : IEncoderDataFlow<T>, IEncoder, IDisposable
	{
		[Token(Token = "0x6001BD6")]
		ArraySegment<byte> EncodeAndGetOutput(T[] buf);
	}
	[Token(Token = "0x2000380")]
	public interface IEncoderNativeImageDirect : IEncoder, IDisposable
	{
		[Token(Token = "0x6001BD7")]
		IEnumerable<ArraySegment<byte>> EncodeAndGetOutput(IntPtr[] buf, int width, int height, int[] stride, ImageFormat imageFormat, Rotation rotation, Flip flip);
	}
	[Token(Token = "0x2000381")]
	public interface IEncoderQueued : IEncoder, IDisposable
	{
		[Token(Token = "0x6001BD8")]
		IEnumerable<ArraySegment<byte>> GetOutput();
	}
	[Token(Token = "0x2000382")]
	public interface IDecoder : IDisposable
	{
		[Token(Token = "0x6001BD9")]
		void Open(VoiceInfo info);
	}
	[Token(Token = "0x2000383")]
	public interface IDecoderDirect : IDecoder, IDisposable
	{
		[Token(Token = "0x6001BDA")]
		byte[] DecodeToByte(byte[] buf);

		[Token(Token = "0x6001BDB")]
		float[] DecodeToFloat(byte[] buf);

		[Token(Token = "0x6001BDC")]
		short[] DecodeToShort(byte[] buf);
	}
	[Token(Token = "0x2000384")]
	public interface IDecoderQueued : IDecoder, IDisposable
	{
		[Token(Token = "0x6001BDD")]
		void Decode(byte[] buf);
	}
	[Token(Token = "0x2000385")]
	public delegate void OnImageOutputNative(IntPtr buf, int width, int height, int stride);
	[Token(Token = "0x2000386")]
	public interface IDecoderQueuedOutputImageNative : IDecoderQueued, IDecoder, IDisposable
	{
		[Token(Token = "0x1700031E")]
		ImageFormat OutputImageFormat
		{
			[Token(Token = "0x6001BE2")]
			get;
			[Token(Token = "0x6001BE3")]
			set;
		}

		[Token(Token = "0x1700031F")]
		Flip OutputImageFlip
		{
			[Token(Token = "0x6001BE4")]
			get;
			[Token(Token = "0x6001BE5")]
			set;
		}

		[Token(Token = "0x17000320")]
		Func<int, int, IntPtr> OutputImageBufferGetter
		{
			[Token(Token = "0x6001BE6")]
			get;
			[Token(Token = "0x6001BE7")]
			set;
		}

		[Token(Token = "0x17000321")]
		OnImageOutputNative OnOutputImage
		{
			[Token(Token = "0x6001BE8")]
			get;
			[Token(Token = "0x6001BE9")]
			set;
		}
	}
	[Token(Token = "0x2000387")]
	internal class UnsupportedSampleTypeException : Exception
	{
		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x18B76FC", Offset = "0x18B76FC", VA = "0x18B76FC")]
		public UnsupportedSampleTypeException(Type t)
		{
		}
	}
	[Token(Token = "0x2000388")]
	internal class UnsupportedCodecException : Exception
	{
		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x18B4C34", Offset = "0x18B4C34", VA = "0x18B4C34")]
		public UnsupportedCodecException(Codec codec, LocalVoice voice)
		{
		}
	}
	[Token(Token = "0x2000389")]
	public enum Codec
	{
		[Token(Token = "0x400197C")]
		AudioOpus = 11
	}
	[Token(Token = "0x200038A")]
	public enum ImageFormat
	{
		[Token(Token = "0x400197E")]
		I420,
		[Token(Token = "0x400197F")]
		YV12,
		[Token(Token = "0x4001980")]
		Android420,
		[Token(Token = "0x4001981")]
		RGBA,
		[Token(Token = "0x4001982")]
		ABGR,
		[Token(Token = "0x4001983")]
		BGRA,
		[Token(Token = "0x4001984")]
		ARGB
	}
	[Token(Token = "0x200038B")]
	public enum Rotation
	{
		[Token(Token = "0x4001986")]
		Rotate0 = 0,
		[Token(Token = "0x4001987")]
		Rotate90 = 90,
		[Token(Token = "0x4001988")]
		Rotate180 = 180,
		[Token(Token = "0x4001989")]
		Rotate270 = 270
	}
	[Token(Token = "0x200038C")]
	public enum Flip
	{
		[Token(Token = "0x400198B")]
		None,
		[Token(Token = "0x400198C")]
		Vertical,
		[Token(Token = "0x400198D")]
		Horizontal
	}
	[Token(Token = "0x200038D")]
	public class ImageBufferInfo
	{
		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C294", Offset = "0xD8C294")]
		private int <Width>k__BackingField;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C2A4", Offset = "0xD8C2A4")]
		private int <Height>k__BackingField;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C2B4", Offset = "0xD8C2B4")]
		private int[] <Stride>k__BackingField;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C2C4", Offset = "0xD8C2C4")]
		private ImageFormat <Format>k__BackingField;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C2D4", Offset = "0xD8C2D4")]
		private Rotation <Rotation>k__BackingField;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C2E4", Offset = "0xD8C2E4")]
		private Flip <Flip>k__BackingField;

		[Token(Token = "0x17000322")]
		public int Width
		{
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0x18AFA90", Offset = "0x18AFA90", VA = "0x18AFA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95C78", Offset = "0xD95C78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0x18AFA98", Offset = "0x18AFA98", VA = "0x18AFA98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95C88", Offset = "0xD95C88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public int Height
		{
			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0x18AFAA0", Offset = "0x18AFAA0", VA = "0x18AFAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95C98", Offset = "0xD95C98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0x18AFAA8", Offset = "0x18AFAA8", VA = "0x18AFAA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95CA8", Offset = "0xD95CA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public int[] Stride
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x18AFAB0", Offset = "0x18AFAB0", VA = "0x18AFAB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95CB8", Offset = "0xD95CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x18AFAB8", Offset = "0x18AFAB8", VA = "0x18AFAB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95CC8", Offset = "0xD95CC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public ImageFormat Format
		{
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0x18AFAC0", Offset = "0x18AFAC0", VA = "0x18AFAC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95CD8", Offset = "0xD95CD8")]
			get
			{
				return default(ImageFormat);
			}
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x18AFAC8", Offset = "0x18AFAC8", VA = "0x18AFAC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95CE8", Offset = "0xD95CE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public Rotation Rotation
		{
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x18AFAD0", Offset = "0x18AFAD0", VA = "0x18AFAD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95CF8", Offset = "0xD95CF8")]
			get
			{
				return default(Rotation);
			}
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0x18AFAD8", Offset = "0x18AFAD8", VA = "0x18AFAD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95D08", Offset = "0xD95D08")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public Flip Flip
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0x18AFAE0", Offset = "0x18AFAE0", VA = "0x18AFAE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95D18", Offset = "0xD95D18")]
			get
			{
				return default(Flip);
			}
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x18AFAE8", Offset = "0x18AFAE8", VA = "0x18AFAE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95D28", Offset = "0xD95D28")]
			set
			{
			}
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x18AFAF0", Offset = "0x18AFAF0", VA = "0x18AFAF0")]
		public ImageBufferInfo(int width, int height, int[] stride, ImageFormat format)
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class ImageBufferNative
	{
		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C2F4", Offset = "0xD8C2F4")]
		private ImageBufferInfo <Info>k__BackingField;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C304", Offset = "0xD8C304")]
		private IntPtr[] <Planes>k__BackingField;

		[Token(Token = "0x17000328")]
		public ImageBufferInfo Info
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0x18AFB6C", Offset = "0x18AFB6C", VA = "0x18AFB6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95D38", Offset = "0xD95D38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x18AFB74", Offset = "0x18AFB74", VA = "0x18AFB74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95D48", Offset = "0xD95D48")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public IntPtr[] Planes
		{
			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0x18AFB7C", Offset = "0x18AFB7C", VA = "0x18AFB7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95D58", Offset = "0xD95D58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0x18AFB84", Offset = "0x18AFB84", VA = "0x18AFB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95D68", Offset = "0xD95D68")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x18AFB40", Offset = "0x18AFB40", VA = "0x18AFB40")]
		public ImageBufferNative(ImageBufferInfo info)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x18AFB8C", Offset = "0x18AFB8C", VA = "0x18AFB8C", Slot = "4")]
		public virtual void Release()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x18AFB90", Offset = "0x18AFB90", VA = "0x18AFB90", Slot = "5")]
		public virtual void Dispose()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class ImageBufferNativeAlloc : ImageBufferNative, IDisposable
	{
		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ImageBufferNativePool<ImageBufferNativeAlloc> pool;

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x18AFB94", Offset = "0x18AFB94", VA = "0x18AFB94")]
		public ImageBufferNativeAlloc(ImageBufferNativePool<ImageBufferNativeAlloc> pool, ImageBufferInfo info)
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x18AFCBC", Offset = "0x18AFCBC", VA = "0x18AFCBC", Slot = "4")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x18AFCD8", Offset = "0x18AFCD8", VA = "0x18AFCD8", Slot = "5")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class ImageBufferNativeGCHandleSinglePlane : ImageBufferNative, IDisposable
	{
		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ImageBufferNativePool<ImageBufferNativeGCHandleSinglePlane> pool;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GCHandle planeHandle;

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x18AFDA4", Offset = "0x18AFDA4", VA = "0x18AFDA4")]
		public ImageBufferNativeGCHandleSinglePlane(ImageBufferNativePool<ImageBufferNativeGCHandleSinglePlane> pool, ImageBufferInfo info)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x18AFECC", Offset = "0x18AFECC", VA = "0x18AFECC")]
		public void PinPlane(byte[] plane)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x18AFF30", Offset = "0x18AFF30", VA = "0x18AFF30", Slot = "4")]
		public override void Release()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x18AFF78", Offset = "0x18AFF78", VA = "0x18AFF78", Slot = "5")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000391")]
	internal static class VoiceCodec
	{
		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x16F30A4", Offset = "0x16F30A4", VA = "0x16F30A4")]
		internal static IEncoder CreateDefaultEncoder(VoiceInfo info, LocalVoice localVoice)
		{
			return null;
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x16F3160", Offset = "0x16F3160", VA = "0x16F3160")]
		internal static IDecoder CreateDefaultDecoder(int channelId, int playerId, byte voiceId, VoiceInfo info)
		{
			return null;
		}
	}
	[Token(Token = "0x2000392")]
	public class Framer<T>
	{
		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80CD4", Offset = "0xD80CD4")]
		private sealed class <Frame>d__5 : IEnumerable<T[]>, IEnumerable, IEnumerator<T[]>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40022E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] <>2__current;

			[Token(Token = "0x40022E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Framer<T> <>4__this;

			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] buf;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] <>3__buf;

			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <s>5__2;

			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <bufPos>5__3;

			[Token(Token = "0x17000479")]
			private T[] System.Collections.Generic.IEnumerator<T[]>.Current
			{
				[Token(Token = "0x6002347")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002349")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002344")]
			[DebuggerHidden]
			public <Frame>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002345")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002346")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002348")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600234A")]
			[DebuggerHidden]
			private IEnumerator<T[]> System.Collections.Generic.IEnumerable<T[]>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600234B")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] frame;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int sizeofT;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int framePos;

		[Token(Token = "0x6001C09")]
		public Framer(int frameSize)
		{
		}

		[Token(Token = "0x6001C0A")]
		public int Count(int bufLen)
		{
			return default(int);
		}

		[Token(Token = "0x6001C0B")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD95D78", Offset = "0xD95D78")]
		public IEnumerable<T[]> Frame(T[] buf)
		{
			return null;
		}
	}
	[Token(Token = "0x2000393")]
	public class LocalVoiceFramed : LocalVoice
	{
		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C314", Offset = "0xD8C314")]
		private int <FrameSize>k__BackingField;

		[Token(Token = "0x1700032A")]
		public int FrameSize
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x18B4438", Offset = "0x18B4438", VA = "0x18B4438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95DDC", Offset = "0xD95DDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x18B4440", Offset = "0x18B4440", VA = "0x18B4440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95DEC", Offset = "0xD95DEC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x18B4448", Offset = "0x18B4448", VA = "0x18B4448")]
		internal LocalVoiceFramed(VoiceClient voiceClient, IEncoder encoder, byte id, VoiceInfo voiceInfo, int channelId, int frameSize)
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class LocalVoiceFramed<T> : LocalVoiceFramed
	{
		[Token(Token = "0x2000572")]
		public interface IProcessor : IDisposable
		{
			[Token(Token = "0x600234C")]
			T[] Process(T[] buf);
		}

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Framer<T> framer;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int preProcessorsCnt;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<IProcessor> processors;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool dataEncodeThreadStarted;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T[]> pushDataQueue;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AutoResetEvent pushDataQueueReady;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PrimitiveArrayPool<T> pushDataBufferPool;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int framesSkipped;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool exitThread;

		[Token(Token = "0x1700032B")]
		public PrimitiveArrayPool<T> PushDataBufferPool
		{
			[Token(Token = "0x6001C14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		public bool PushDataAsyncReady
		{
			[Token(Token = "0x6001C15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C0F")]
		internal T[] processFrame(T[] buf)
		{
			return null;
		}

		[Token(Token = "0x6001C10")]
		public void AddPostProcessor(params IProcessor[] processors)
		{
		}

		[Token(Token = "0x6001C11")]
		public void AddPreProcessor(params IProcessor[] processors)
		{
		}

		[Token(Token = "0x6001C12")]
		public void ClearProcessors()
		{
		}

		[Token(Token = "0x6001C13")]
		internal LocalVoiceFramed(VoiceClient voiceClient, IEncoder encoder, byte id, VoiceInfo voiceInfo, int channelId, int frameSize)
		{
		}

		[Token(Token = "0x6001C16")]
		public void PushDataAsync(T[] buf)
		{
		}

		[Token(Token = "0x6001C17")]
		private void PushDataAsyncThread()
		{
		}

		[Token(Token = "0x6001C18")]
		public void PushData(T[] buf)
		{
		}

		[Token(Token = "0x6001C19")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public struct VoiceInfo
	{
		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C324", Offset = "0xD8C324")]
		private Codec <Codec>k__BackingField;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C334", Offset = "0xD8C334")]
		private int <SamplingRate>k__BackingField;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C344", Offset = "0xD8C344")]
		private int <SourceSamplingRate>k__BackingField;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C354", Offset = "0xD8C354")]
		private int <Channels>k__BackingField;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C364", Offset = "0xD8C364")]
		private int <FrameDurationUs>k__BackingField;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C374", Offset = "0xD8C374")]
		private int <Bitrate>k__BackingField;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C384", Offset = "0xD8C384")]
		private object <UserData>k__BackingField;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C394", Offset = "0xD8C394")]
		private int <Width>k__BackingField;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C3A4", Offset = "0xD8C3A4")]
		private int <Height>k__BackingField;

		[Token(Token = "0x1700032D")]
		public Codec Codec
		{
			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x16F38E0", Offset = "0x16F38E0", VA = "0x16F38E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95DFC", Offset = "0xD95DFC")]
			get
			{
				return default(Codec);
			}
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0x16F38E8", Offset = "0x16F38E8", VA = "0x16F38E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95E0C", Offset = "0xD95E0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public int SamplingRate
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x16F38F0", Offset = "0x16F38F0", VA = "0x16F38F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95E1C", Offset = "0xD95E1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x16F38F8", Offset = "0x16F38F8", VA = "0x16F38F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95E2C", Offset = "0xD95E2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		public int SourceSamplingRate
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x16F3900", Offset = "0x16F3900", VA = "0x16F3900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95E3C", Offset = "0xD95E3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0x16F3908", Offset = "0x16F3908", VA = "0x16F3908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95E4C", Offset = "0xD95E4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public int Channels
		{
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0x16F3910", Offset = "0x16F3910", VA = "0x16F3910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95E5C", Offset = "0xD95E5C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x16F3918", Offset = "0x16F3918", VA = "0x16F3918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95E6C", Offset = "0xD95E6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public int FrameDurationUs
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x16F3920", Offset = "0x16F3920", VA = "0x16F3920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95E7C", Offset = "0xD95E7C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C26")]
			[Address(RVA = "0x16F3928", Offset = "0x16F3928", VA = "0x16F3928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95E8C", Offset = "0xD95E8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000332")]
		public int Bitrate
		{
			[Token(Token = "0x6001C27")]
			[Address(RVA = "0x16F3930", Offset = "0x16F3930", VA = "0x16F3930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95E9C", Offset = "0xD95E9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0x16F3938", Offset = "0x16F3938", VA = "0x16F3938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95EAC", Offset = "0xD95EAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public object UserData
		{
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0x16F3940", Offset = "0x16F3940", VA = "0x16F3940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95EBC", Offset = "0xD95EBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0x16F3948", Offset = "0x16F3948", VA = "0x16F3948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95ECC", Offset = "0xD95ECC")]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public int FrameDurationSamples
		{
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0x16F3950", Offset = "0x16F3950", VA = "0x16F3950")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000335")]
		public int FrameSize
		{
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x16F3700", Offset = "0x16F3700", VA = "0x16F3700")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000336")]
		public int Width
		{
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0x16F3980", Offset = "0x16F3980", VA = "0x16F3980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95EDC", Offset = "0xD95EDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x16F3988", Offset = "0x16F3988", VA = "0x16F3988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95EEC", Offset = "0xD95EEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000337")]
		public int Height
		{
			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0x16F3990", Offset = "0x16F3990", VA = "0x16F3990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95EFC", Offset = "0xD95EFC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x16F3998", Offset = "0x16F3998", VA = "0x16F3998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95F0C", Offset = "0xD95F0C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x16F3218", Offset = "0x16F3218", VA = "0x16F3218")]
		public static VoiceInfo CreateAudioOpus(SamplingRate samplingRate, int sourceSamplingRate, int channels, OpusCodec.FrameDuration frameDurationUs, int bitrate, [Optional] object userdata)
		{
			return default(VoiceInfo);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x16F3230", Offset = "0x16F3230", VA = "0x16F3230", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x16F3738", Offset = "0x16F3738", VA = "0x16F3738")]
		internal static VoiceInfo CreateFromEventPayload(Dictionary<byte, object> h)
		{
			return default(VoiceInfo);
		}
	}
	[Token(Token = "0x2000396")]
	public class RemoteVoiceInfo
	{
		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C3B4", Offset = "0xD8C3B4")]
		private VoiceInfo <Info>k__BackingField;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C3C4", Offset = "0xD8C3C4")]
		private int <ChannelId>k__BackingField;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C3D4", Offset = "0xD8C3D4")]
		private int <PlayerId>k__BackingField;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C3E4", Offset = "0xD8C3E4")]
		private byte <VoiceId>k__BackingField;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C3F4", Offset = "0xD8C3F4")]
		private object <LocalUserObject>k__BackingField;

		[Token(Token = "0x17000338")]
		public VoiceInfo Info
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x18B7634", Offset = "0x18B7634", VA = "0x18B7634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95F1C", Offset = "0xD95F1C")]
			get
			{
				return default(VoiceInfo);
			}
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x18B7648", Offset = "0x18B7648", VA = "0x18B7648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95F2C", Offset = "0xD95F2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000339")]
		public int ChannelId
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x18B765C", Offset = "0x18B765C", VA = "0x18B765C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95F3C", Offset = "0xD95F3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x18B7664", Offset = "0x18B7664", VA = "0x18B7664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95F4C", Offset = "0xD95F4C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033A")]
		public int PlayerId
		{
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0x18B766C", Offset = "0x18B766C", VA = "0x18B766C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95F5C", Offset = "0xD95F5C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0x18B7674", Offset = "0x18B7674", VA = "0x18B7674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95F6C", Offset = "0xD95F6C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public byte VoiceId
		{
			[Token(Token = "0x6001C38")]
			[Address(RVA = "0x18B767C", Offset = "0x18B767C", VA = "0x18B767C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95F7C", Offset = "0xD95F7C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0x18B7684", Offset = "0x18B7684", VA = "0x18B7684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95F8C", Offset = "0xD95F8C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public object LocalUserObject
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x18B768C", Offset = "0x18B768C", VA = "0x18B768C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95F9C", Offset = "0xD95F9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0x18B7694", Offset = "0x18B7694", VA = "0x18B7694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95FAC", Offset = "0xD95FAC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x18B75D0", Offset = "0x18B75D0", VA = "0x18B75D0")]
		internal RemoteVoiceInfo(int channelId, int playerId, byte voiceId, VoiceInfo info, object localUserObject)
		{
		}
	}
	[Token(Token = "0x2000397")]
	public abstract class BufferReaderPushAdapterBase<T> : IServiceable
	{
		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected IDataReader<T> reader;

		[Token(Token = "0x6001C3C")]
		public abstract void Service(LocalVoice localVoice);

		[Token(Token = "0x6001C3D")]
		public BufferReaderPushAdapterBase(IDataReader<T> reader)
		{
		}

		[Token(Token = "0x6001C3E")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class BufferReaderPushAdapter<T> : BufferReaderPushAdapterBase<T>
	{
		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] buffer;

		[Token(Token = "0x6001C3F")]
		public BufferReaderPushAdapter(LocalVoice localVoice, IDataReader<T> reader)
		{
		}

		[Token(Token = "0x6001C40")]
		public override void Service(LocalVoice localVoice)
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class BufferReaderPushAdapterAsyncPool<T> : BufferReaderPushAdapterBase<T>
	{
		[Token(Token = "0x6001C41")]
		public BufferReaderPushAdapterAsyncPool(LocalVoice localVoice, IDataReader<T> reader)
		{
		}

		[Token(Token = "0x6001C42")]
		public override void Service(LocalVoice localVoice)
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class BufferReaderPushAdapterAsyncPoolCopy<T> : BufferReaderPushAdapterBase<T>
	{
		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] buffer;

		[Token(Token = "0x6001C43")]
		public BufferReaderPushAdapterAsyncPoolCopy(LocalVoice localVoice, IDataReader<T> reader)
		{
		}

		[Token(Token = "0x6001C44")]
		public override void Service(LocalVoice localVoice)
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class BufferReaderPushAdapterAsyncPoolFloatToShort : BufferReaderPushAdapterBase<float>
	{
		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] buffer;

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x18AF7B4", Offset = "0x18AF7B4", VA = "0x18AF7B4")]
		public BufferReaderPushAdapterAsyncPoolFloatToShort(LocalVoice localVoice, IDataReader<float> reader)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x18AF878", Offset = "0x18AF878", VA = "0x18AF878", Slot = "5")]
		public override void Service(LocalVoice localVoice)
		{
		}
	}
	[Token(Token = "0x200039C")]
	internal class VoiceEventCode
	{
		[Token(Token = "0x40019B8")]
		public const byte Code0 = 201;

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x16F31D4", Offset = "0x16F31D4", VA = "0x16F31D4")]
		public static byte GetCode(int channelID)
		{
			return default(byte);
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x16F31DC", Offset = "0x16F31DC", VA = "0x16F31DC")]
		public static bool TryGetChannelID(byte evCode, int maxChannels, out byte channelID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x16F3210", Offset = "0x16F3210", VA = "0x16F3210")]
		public VoiceEventCode()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class LoadBalancingFrontend : LoadBalancingClient, IVoiceFrontend, ILogger, IDisposable
	{
		[Serializable]
		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD80CE4", Offset = "0xD80CE4")]
		private sealed class <>c
		{
			[Token(Token = "0x40022E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LocalVoice, bool> <>9__26_0;

			[Token(Token = "0x600234E")]
			[Address(RVA = "0x18B3050", Offset = "0x18B3050", VA = "0x18B3050")]
			public <>c()
			{
			}

			[Token(Token = "0x600234F")]
			[Address(RVA = "0x18B3058", Offset = "0x18B3058", VA = "0x18B3058")]
			internal bool <SendDebugEchoVoicesInfo>b__26_0(LocalVoice x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected VoiceClient voiceClient;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C404", Offset = "0xD8C404")]
		private Action<EventData> <OnEventAction>k__BackingField;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C414", Offset = "0xD8C414")]
		private Action<ExitGames.Client.Photon.LoadBalancing.ClientState> <OnStateChangeAction>k__BackingField;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private object sendLock;

		[Token(Token = "0x1700033D")]
		public VoiceClient VoiceClient
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0x18AFF7C", Offset = "0x18AFF7C", VA = "0x18AFF7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		public new Action<EventData> OnEventAction
		{
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x18B05D8", Offset = "0x18B05D8", VA = "0x18B05D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95FBC", Offset = "0xD95FBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0x18B05E0", Offset = "0x18B05E0", VA = "0x18B05E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95FCC", Offset = "0xD95FCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public new Action<ExitGames.Client.Photon.LoadBalancing.ClientState> OnStateChangeAction
		{
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x18B05E8", Offset = "0x18B05E8", VA = "0x18B05E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95FDC", Offset = "0xD95FDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0x18B05F0", Offset = "0x18B05F0", VA = "0x18B05F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD95FEC", Offset = "0xD95FEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000340")]
		public byte GlobalAudioGroup
		{
			[Token(Token = "0x6001C59")]
			[Address(RVA = "0x18B0A20", Offset = "0x18B0A20", VA = "0x18B0A20")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0x18B0A3C", Offset = "0x18B0A3C", VA = "0x18B0A3C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x18AFF84", Offset = "0x18AFF84", VA = "0x18AFF84", Slot = "27")]
		public void LogError(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x18AFFC8", Offset = "0x18AFFC8", VA = "0x18AFFC8", Slot = "28")]
		public void LogWarning(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x18B000C", Offset = "0x18B000C", VA = "0x18B000C", Slot = "29")]
		public void LogInfo(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x18B0050", Offset = "0x18B0050", VA = "0x18B0050", Slot = "30")]
		public void LogDebug(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x18B0094", Offset = "0x18B0094", VA = "0x18B0094", Slot = "19")]
		public int AssignChannel(VoiceInfo v)
		{
			return default(int);
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x18B017C", Offset = "0x18B017C", VA = "0x18B017C", Slot = "20")]
		public bool IsChannelJoined(int channelId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x18B018C", Offset = "0x18B018C", VA = "0x18B018C", Slot = "26")]
		public void SetDebugEchoMode(LocalVoice v)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x18B05F8", Offset = "0x18B05F8", VA = "0x18B05F8")]
		public LoadBalancingFrontend(ConnectionProtocol connectionProtocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x18B08BC", Offset = "0x18B08BC", VA = "0x18B08BC")]
		public new void Service()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x18B09FC", Offset = "0x18B09FC", VA = "0x18B09FC", Slot = "32")]
		public virtual bool ChangeAudioGroups(byte[] groupsToRemove, byte[] groupsToAdd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x18B0284", Offset = "0x18B0284", VA = "0x18B0284", Slot = "21")]
		public void SendVoicesInfo(IEnumerable<LocalVoice> voices, int channelId, int targetPlayerId)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x18B159C", Offset = "0x18B159C", VA = "0x18B159C")]
		public void SendDebugEchoVoicesInfo(int channelId)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x18B0424", Offset = "0x18B0424", VA = "0x18B0424", Slot = "22")]
		public void SendVoiceRemove(LocalVoice voice, int channelId, int targetPlayerId)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x18B1A44", Offset = "0x18B1A44", VA = "0x18B1A44", Slot = "23")]
		public void SendFrame(ArraySegment<byte> data, byte evNumber, byte voiceId, int channelId, LocalVoice localVoice)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x18B1CCC", Offset = "0x18B1CCC", VA = "0x18B1CCC", Slot = "24")]
		public string ChannelIdStr(int channelId)
		{
			return null;
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x18B1CD4", Offset = "0x18B1CD4", VA = "0x18B1CD4", Slot = "25")]
		public string PlayerIdStr(int playerId)
		{
			return null;
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x18B1CDC", Offset = "0x18B1CDC", VA = "0x18B1CDC")]
		private void onEventActionVoiceClient(EventData ev)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x18B2958", Offset = "0x18B2958", VA = "0x18B2958")]
		private void onStateChangeVoiceClient(ExitGames.Client.Photon.LoadBalancing.ClientState state)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x18B289C", Offset = "0x18B289C", VA = "0x18B289C")]
		private void onPlayerLeave(int playerId)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x18B2BA4", Offset = "0x18B2BA4", VA = "0x18B2BA4", Slot = "31")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class AudioInEnumerator : IDisposable
	{
		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool IsSupported;

		[Token(Token = "0x17000341")]
		public int Count
		{
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0x18AEA2C", Offset = "0x18AEA2C", VA = "0x18AEA2C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x18AEA20", Offset = "0x18AEA20", VA = "0x18AEA20")]
		public AudioInEnumerator()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x18AEA28", Offset = "0x18AEA28", VA = "0x18AEA28")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x18AEA34", Offset = "0x18AEA34", VA = "0x18AEA34")]
		public string NameAtIndex(int i)
		{
			return null;
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x18AEA3C", Offset = "0x18AEA3C", VA = "0x18AEA3C")]
		public int IDAtIndex(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x18AEA44", Offset = "0x18AEA44", VA = "0x18AEA44")]
		public bool IDIsValid(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x18AEA50", Offset = "0x18AEA50", VA = "0x18AEA50", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace ExitGames.Client.Photon.LoadBalancing
{
	[Token(Token = "0x200039F")]
	public static class Extensions
	{
		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x18A2AB0", Offset = "0x18A2AB0", VA = "0x18A2AB0")]
		public static void Merge(this IDictionary target, IDictionary addHash)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x18A2E7C", Offset = "0x18A2E7C", VA = "0x18A2E7C")]
		public static void MergeStringKeys(this IDictionary target, IDictionary addHash)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x18A3264", Offset = "0x18A3264", VA = "0x18A3264")]
		public static string ToStringFull(this IDictionary origin)
		{
			return null;
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x18A32D0", Offset = "0x18A32D0", VA = "0x18A32D0")]
		public static string ToStringFull(this object[] data)
		{
			return null;
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x18A3424", Offset = "0x18A3424", VA = "0x18A3424")]
		public static Hashtable StripToStringKeys(this IDictionary original)
		{
			return null;
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x18A37BC", Offset = "0x18A37BC", VA = "0x18A37BC")]
		public static void StripKeysWithNullValues(this IDictionary original)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x18A3A8C", Offset = "0x18A3A8C", VA = "0x18A3A8C")]
		public static bool Contains(this int[] target, int nr)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A0")]
	public class FriendInfo
	{
		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C424", Offset = "0xD8C424")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C434", Offset = "0xD8C434")]
		private bool <IsOnline>k__BackingField;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C444", Offset = "0xD8C444")]
		private string <Room>k__BackingField;

		[Token(Token = "0x17000342")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD98724", Offset = "0xD98724")]
		public string Name
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x18A3AE8", Offset = "0x18A3AE8", VA = "0x18A3AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		public string UserId
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x18A3AF0", Offset = "0x18A3AF0", VA = "0x18A3AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9606C", Offset = "0xD9606C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x18A3AF8", Offset = "0x18A3AF8", VA = "0x18A3AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9607C", Offset = "0xD9607C")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public bool IsOnline
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x18A3B00", Offset = "0x18A3B00", VA = "0x18A3B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9608C", Offset = "0xD9608C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x18A3B08", Offset = "0x18A3B08", VA = "0x18A3B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9609C", Offset = "0xD9609C")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public string Room
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x18A3B14", Offset = "0x18A3B14", VA = "0x18A3B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD960AC", Offset = "0xD960AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x18A3B1C", Offset = "0x18A3B1C", VA = "0x18A3B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD960BC", Offset = "0xD960BC")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000346")]
		public bool IsInRoom
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x18A3B24", Offset = "0x18A3B24", VA = "0x18A3B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x18A3B50", Offset = "0x18A3B50", VA = "0x18A3B50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x18A3BF0", Offset = "0x18A3BF0", VA = "0x18A3BF0")]
		public FriendInfo()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public enum ClientState
	{
		[Token(Token = "0x40019C2")]
		PeerCreated = 0,
		[Token(Token = "0x40019C3")]
		Authenticating = 1,
		[Token(Token = "0x40019C4")]
		Authenticated = 2,
		[Token(Token = "0x40019C5")]
		JoinedLobby = 3,
		[Token(Token = "0x40019C6")]
		DisconnectingFromMasterserver = 4,
		[Token(Token = "0x40019C7")]
		ConnectingToGameserver = 5,
		[Token(Token = "0x40019C8")]
		ConnectedToGameserver = 6,
		[Token(Token = "0x40019C9")]
		Joining = 7,
		[Token(Token = "0x40019CA")]
		Joined = 8,
		[Token(Token = "0x40019CB")]
		Leaving = 9,
		[Token(Token = "0x40019CC")]
		DisconnectingFromGameserver = 10,
		[Token(Token = "0x40019CD")]
		ConnectingToMasterserver = 11,
		[Token(Token = "0x40019CE")]
		Disconnecting = 12,
		[Token(Token = "0x40019CF")]
		Disconnected = 13,
		[Token(Token = "0x40019D0")]
		ConnectedToMasterserver = 14,
		[Token(Token = "0x40019D1")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C454", Offset = "0xD8C454")]
		ConnectedToMaster = 14,
		[Token(Token = "0x40019D2")]
		ConnectingToNameServer = 15,
		[Token(Token = "0x40019D3")]
		ConnectedToNameServer = 16,
		[Token(Token = "0x40019D4")]
		DisconnectingFromNameServer = 17
	}
	[Token(Token = "0x20003A2")]
	internal enum JoinType
	{
		[Token(Token = "0x40019D6")]
		CreateRoom,
		[Token(Token = "0x40019D7")]
		JoinRoom,
		[Token(Token = "0x40019D8")]
		JoinRandomRoom,
		[Token(Token = "0x40019D9")]
		JoinOrCreateRoom
	}
	[Token(Token = "0x20003A3")]
	public enum DisconnectCause
	{
		[Token(Token = "0x40019DB")]
		None,
		[Token(Token = "0x40019DC")]
		DisconnectByServerUserLimit,
		[Token(Token = "0x40019DD")]
		ExceptionOnConnect,
		[Token(Token = "0x40019DE")]
		DisconnectByServer,
		[Token(Token = "0x40019DF")]
		TimeoutDisconnect,
		[Token(Token = "0x40019E0")]
		Exception,
		[Token(Token = "0x40019E1")]
		InvalidAuthentication,
		[Token(Token = "0x40019E2")]
		MaxCcuReached,
		[Token(Token = "0x40019E3")]
		InvalidRegion,
		[Token(Token = "0x40019E4")]
		OperationNotAllowedInCurrentState,
		[Token(Token = "0x40019E5")]
		CustomAuthenticationFailed,
		[Token(Token = "0x40019E6")]
		DisconnectByServerLogic,
		[Token(Token = "0x40019E7")]
		AuthenticationTicketExpired
	}
	[Token(Token = "0x20003A4")]
	public enum ServerConnection
	{
		[Token(Token = "0x40019E9")]
		MasterServer,
		[Token(Token = "0x40019EA")]
		GameServer,
		[Token(Token = "0x40019EB")]
		NameServer
	}
	[Token(Token = "0x20003A5")]
	public enum EncryptionMode
	{
		[Token(Token = "0x40019ED")]
		PayloadEncryption = 0,
		[Token(Token = "0x40019EE")]
		DatagramEncryption = 10,
		[Token(Token = "0x40019EF")]
		DatagramEncryptionRandomSequence = 11
	}
	[Token(Token = "0x20003A6")]
	public static class EncryptionDataParameters
	{
		[Token(Token = "0x40019F0")]
		public const byte Mode = 0;

		[Token(Token = "0x40019F1")]
		public const byte Secret1 = 1;

		[Token(Token = "0x40019F2")]
		public const byte Secret2 = 2;
	}
	[Token(Token = "0x20003A7")]
	public class LoadBalancingClient : IPhotonPeerListener
	{
		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LoadBalancingPeer loadBalancingPeer;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C48C", Offset = "0xD8C48C")]
		private string <AppVersion>k__BackingField;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C49C", Offset = "0xD8C49C")]
		private string <AppId>k__BackingField;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C4AC", Offset = "0xD8C4AC")]
		private AuthenticationValues <AuthValues>k__BackingField;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AuthModeOption AuthMode;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EncryptionMode EncryptionMode;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ConnectionProtocol ExpectedProtocol;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C4BC", Offset = "0xD8C4BC")]
		private bool <IsUsingNameServer>k__BackingField;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string NameServerHost;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string NameServerHttp;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C4CC", Offset = "0xD8C4CC")]
		private string <MasterServerAddress>k__BackingField;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C4DC", Offset = "0xD8C4DC")]
		private string <GameServerAddress>k__BackingField;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C4EC", Offset = "0xD8C4EC")]
		private ServerConnection <Server>k__BackingField;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private ClientState state;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C52C", Offset = "0xD8C52C")]
		private DisconnectCause <DisconnectedCause>k__BackingField;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool inLobby;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C53C", Offset = "0xD8C53C")]
		private TypedLobby <CurrentLobby>k__BackingField;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool autoJoinLobby;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool EnableLobbyStatistics;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<TypedLobbyInfo> lobbyStatistics;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C54C", Offset = "0xD8C54C")]
		private Player <LocalPlayer>k__BackingField;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Dictionary<string, RoomInfo> RoomInfoList;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Room CurrentRoom;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C55C", Offset = "0xD8C55C")]
		private int <PlayersOnMasterCount>k__BackingField;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C56C", Offset = "0xD8C56C")]
		private int <PlayersInRoomsCount>k__BackingField;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C57C", Offset = "0xD8C57C")]
		private int <RoomsCount>k__BackingField;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private JoinType lastJoinType;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected internal EnterRoomParams enterRoomParamsCache;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool didAuthenticate;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C58C", Offset = "0xD8C58C")]
		private List<FriendInfo> <FriendList>k__BackingField;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private string[] friendListRequested;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int friendListTimestamp;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool isFetchingFriendList;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C59C", Offset = "0xD8C59C")]
		private string[] <AvailableRegions>k__BackingField;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C5AC", Offset = "0xD8C5AC")]
		private string[] <AvailableRegionsServers>k__BackingField;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C5BC", Offset = "0xD8C5BC")]
		private string <CloudRegion>k__BackingField;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private byte[] encryptionSecret;

		[Token(Token = "0x17000347")]
		public string AppVersion
		{
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x18A3C00", Offset = "0x18A3C00", VA = "0x18A3C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD960CC", Offset = "0xD960CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x18A3C08", Offset = "0x18A3C08", VA = "0x18A3C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD960DC", Offset = "0xD960DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000348")]
		public string AppId
		{
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0x18A3C10", Offset = "0x18A3C10", VA = "0x18A3C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD960EC", Offset = "0xD960EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x18A3C18", Offset = "0x18A3C18", VA = "0x18A3C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD960FC", Offset = "0xD960FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public AuthenticationValues AuthValues
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x18A3C20", Offset = "0x18A3C20", VA = "0x18A3C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9610C", Offset = "0xD9610C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x18A3C28", Offset = "0x18A3C28", VA = "0x18A3C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9611C", Offset = "0xD9611C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		public ConnectionProtocol TransportProtocol
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x18A3C30", Offset = "0x18A3C30", VA = "0x18A3C30")]
			get
			{
				return default(ConnectionProtocol);
			}
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x18A3C4C", Offset = "0x18A3C4C", VA = "0x18A3C4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		public Dictionary<ConnectionProtocol, Type> SocketImplementationConfig
		{
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x18A3D60", Offset = "0x18A3D60", VA = "0x18A3D60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		private string TokenForInit
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x18A3D7C", Offset = "0x18A3D7C", VA = "0x18A3D7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		public bool IsUsingNameServer
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x18A3D9C", Offset = "0x18A3D9C", VA = "0x18A3D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9612C", Offset = "0xD9612C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x18A3DA4", Offset = "0x18A3DA4", VA = "0x18A3DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9613C", Offset = "0xD9613C")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x1700034E")]
		public string NameServerAddress
		{
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x18A3DB0", Offset = "0x18A3DB0", VA = "0x18A3DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public string CurrentServerAddress
		{
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x18A3F40", Offset = "0x18A3F40", VA = "0x18A3F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public string MasterServerAddress
		{
			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0x18A3F5C", Offset = "0x18A3F5C", VA = "0x18A3F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9614C", Offset = "0xD9614C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x18A3F64", Offset = "0x18A3F64", VA = "0x18A3F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9615C", Offset = "0xD9615C")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public string GameServerAddress
		{
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x18A3F6C", Offset = "0x18A3F6C", VA = "0x18A3F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9616C", Offset = "0xD9616C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x18A3F74", Offset = "0x18A3F74", VA = "0x18A3F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9617C", Offset = "0xD9617C")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public ServerConnection Server
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0x18A3F7C", Offset = "0x18A3F7C", VA = "0x18A3F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9618C", Offset = "0xD9618C")]
			get
			{
				return default(ServerConnection);
			}
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0x18A3F84", Offset = "0x18A3F84", VA = "0x18A3F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9619C", Offset = "0xD9619C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public ClientState State
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x18A3F8C", Offset = "0x18A3F8C", VA = "0x18A3F8C")]
			get
			{
				return default(ClientState);
			}
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0x18A3F94", Offset = "0x18A3F94", VA = "0x18A3F94")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public bool IsConnected
		{
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x18A4014", Offset = "0x18A4014", VA = "0x18A4014")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000355")]
		public bool IsConnectedAndReady
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0x18A4040", Offset = "0x18A4040", VA = "0x18A4040")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000356")]
		public DisconnectCause DisconnectedCause
		{
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x18A444C", Offset = "0x18A444C", VA = "0x18A444C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9620C", Offset = "0xD9620C")]
			get
			{
				return default(DisconnectCause);
			}
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x18A4454", Offset = "0x18A4454", VA = "0x18A4454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9621C", Offset = "0xD9621C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public TypedLobby CurrentLobby
		{
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x18A445C", Offset = "0x18A445C", VA = "0x18A445C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9622C", Offset = "0xD9622C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x18A4464", Offset = "0x18A4464", VA = "0x18A4464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9623C", Offset = "0xD9623C")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public bool AutoJoinLobby
		{
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x18A446C", Offset = "0x18A446C", VA = "0x18A446C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x18A4474", Offset = "0x18A4474", VA = "0x18A4474")]
			set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public List<TypedLobbyInfo> LobbyStatistics
		{
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0x18A4480", Offset = "0x18A4480", VA = "0x18A4480")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x18A4488", Offset = "0x18A4488", VA = "0x18A4488")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public Player LocalPlayer
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x18A4490", Offset = "0x18A4490", VA = "0x18A4490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9624C", Offset = "0xD9624C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x18A4498", Offset = "0x18A4498", VA = "0x18A4498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9625C", Offset = "0xD9625C")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public string NickName
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x18A44A0", Offset = "0x18A44A0", VA = "0x18A44A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x18A44BC", Offset = "0x18A44BC", VA = "0x18A44BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public string UserId
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x18A4544", Offset = "0x18A4544", VA = "0x18A4544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x18A455C", Offset = "0x18A455C", VA = "0x18A455C")]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public int PlayersOnMasterCount
		{
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x18A45E4", Offset = "0x18A45E4", VA = "0x18A45E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9626C", Offset = "0xD9626C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0x18A45EC", Offset = "0x18A45EC", VA = "0x18A45EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9627C", Offset = "0xD9627C")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public int PlayersInRoomsCount
		{
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x18A45F4", Offset = "0x18A45F4", VA = "0x18A45F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9628C", Offset = "0xD9628C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0x18A45FC", Offset = "0x18A45FC", VA = "0x18A45FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9629C", Offset = "0xD9629C")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public int RoomsCount
		{
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x18A4604", Offset = "0x18A4604", VA = "0x18A4604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD962AC", Offset = "0xD962AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0x18A460C", Offset = "0x18A460C", VA = "0x18A460C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD962BC", Offset = "0xD962BC")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public List<FriendInfo> FriendList
		{
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x18A4614", Offset = "0x18A4614", VA = "0x18A4614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD962CC", Offset = "0xD962CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0x18A461C", Offset = "0x18A461C", VA = "0x18A461C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD962DC", Offset = "0xD962DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public int FriendListAge
		{
			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0x18A4624", Offset = "0x18A4624", VA = "0x18A4624")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000362")]
		protected bool IsAuthorizeSecretAvailable
		{
			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0x18A4668", Offset = "0x18A4668", VA = "0x18A4668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000363")]
		public string[] AvailableRegions
		{
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0x18A4694", Offset = "0x18A4694", VA = "0x18A4694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD962EC", Offset = "0xD962EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0x18A469C", Offset = "0x18A469C", VA = "0x18A469C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD962FC", Offset = "0xD962FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public string[] AvailableRegionsServers
		{
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0x18A46A4", Offset = "0x18A46A4", VA = "0x18A46A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9630C", Offset = "0xD9630C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0x18A46AC", Offset = "0x18A46AC", VA = "0x18A46AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9631C", Offset = "0xD9631C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public string CloudRegion
		{
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x18A46B4", Offset = "0x18A46B4", VA = "0x18A46B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9632C", Offset = "0xD9632C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x18A46BC", Offset = "0x18A46BC", VA = "0x18A46BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9633C", Offset = "0xD9633C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<ClientState> OnStateChangeAction
		{
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x18A4074", Offset = "0x18A4074", VA = "0x18A4074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD961AC", Offset = "0xD961AC")]
			add
			{
			}
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x18A4118", Offset = "0x18A4118", VA = "0x18A4118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD961BC", Offset = "0xD961BC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<EventData> OnEventAction
		{
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x18A41BC", Offset = "0x18A41BC", VA = "0x18A41BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD961CC", Offset = "0xD961CC")]
			add
			{
			}
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x18A4260", Offset = "0x18A4260", VA = "0x18A4260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD961DC", Offset = "0xD961DC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action<OperationResponse> OnOpResponseAction
		{
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x18A4304", Offset = "0x18A4304", VA = "0x18A4304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD961EC", Offset = "0xD961EC")]
			add
			{
			}
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x18A43A8", Offset = "0x18A43A8", VA = "0x18A43A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD961FC", Offset = "0xD961FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x18A400C", Offset = "0x18A400C", VA = "0x18A400C")]
		public void SetState(ClientState value)
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x18A46C4", Offset = "0x18A46C4", VA = "0x18A46C4")]
		public LoadBalancingClient(ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x18A4874", Offset = "0x18A4874", VA = "0x18A4874")]
		public LoadBalancingClient(string masterAddress, string appId, string gameVersion, ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x18A3DB4", Offset = "0x18A3DB4", VA = "0x18A3DB4")]
		private string GetNameServerAddress()
		{
			return null;
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x18A48B4", Offset = "0x18A48B4", VA = "0x18A48B4")]
		public bool Connect(string masterServerAddress, string appId, string appVersion, string nickName, AuthenticationValues authValues)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x18A4960", Offset = "0x18A4960", VA = "0x18A4960", Slot = "8")]
		public virtual bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x18A49DC", Offset = "0x18A49DC", VA = "0x18A49DC")]
		public bool ConnectToNameServer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x18A4ABC", Offset = "0x18A4ABC", VA = "0x18A4ABC")]
		public bool ConnectToRegionMaster(string region)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x18A4C40", Offset = "0x18A4C40", VA = "0x18A4C40")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x18A4BC4", Offset = "0x18A4BC4", VA = "0x18A4BC4")]
		private bool CallAuthenticate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x18A4C90", Offset = "0x18A4C90", VA = "0x18A4C90")]
		public void Service()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x18A4CA8", Offset = "0x18A4CA8", VA = "0x18A4CA8")]
		private void DisconnectToReconnect()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x18A4D0C", Offset = "0x18A4D0C", VA = "0x18A4D0C")]
		private bool ConnectToGameServer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x18A4D84", Offset = "0x18A4D84", VA = "0x18A4D84")]
		public bool OpGetRegions()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x18A4DE0", Offset = "0x18A4DE0", VA = "0x18A4DE0")]
		public bool OpFindFriends(string[] friendsToFind)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x18A50B8", Offset = "0x18A50B8", VA = "0x18A50B8")]
		public bool OpJoinLobby(TypedLobby lobby)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x18A5168", Offset = "0x18A5168", VA = "0x18A5168")]
		public bool OpLeaveLobby()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x18A518C", Offset = "0x18A518C", VA = "0x18A518C")]
		public bool OpJoinRandomRoom(Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers, [Optional] string[] expectedUsers)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x18A5370", Offset = "0x18A5370", VA = "0x18A5370")]
		public bool OpJoinRandomRoom(Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers, MatchmakingMode matchmakingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x18A522C", Offset = "0x18A522C", VA = "0x18A522C")]
		public bool OpJoinRandomRoom(Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers, MatchmakingMode matchmakingMode, TypedLobby lobby, string sqlLobbyFilter, [Optional] string[] expectedUsers)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x18A5418", Offset = "0x18A5418", VA = "0x18A5418")]
		public bool OpJoinRoom(string roomName, [Optional] string[] expectedUsers)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x18A54E0", Offset = "0x18A54E0", VA = "0x18A54E0")]
		public bool OpReJoinRoom(string roomName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x18A55A4", Offset = "0x18A55A4", VA = "0x18A55A4")]
		public bool OpJoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby lobby, [Optional] string[] expectedUsers)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x18A568C", Offset = "0x18A568C", VA = "0x18A568C")]
		public bool OpCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby lobby, [Optional] string[] expectedUsers)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x18A576C", Offset = "0x18A576C", VA = "0x18A576C")]
		public bool OpLeaveRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x18A5778", Offset = "0x18A5778", VA = "0x18A5778")]
		public bool OpLeaveRoom(bool becomeInactive, bool sendAuthCookie = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x18A5804", Offset = "0x18A5804", VA = "0x18A5804")]
		public bool OpGetGameList(TypedLobby typedLobby, string sqlLobbyFilter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x18A5828", Offset = "0x18A5828", VA = "0x18A5828")]
		public bool OpSetCustomPropertiesOfActor(int actorNr, Hashtable propertiesToSet, [Optional] Hashtable expectedProperties, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x18A5BD0", Offset = "0x18A5BD0", VA = "0x18A5BD0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD9634C", Offset = "0xD9634C")]
		public bool OpSetCustomPropertiesOfActor(int actorNr, Hashtable propertiesToSet, Hashtable expectedProperties, bool webForward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x18A5A7C", Offset = "0x18A5A7C", VA = "0x18A5A7C")]
		protected internal bool OpSetPropertiesOfActor(int actorNr, Hashtable actorProperties, [Optional] Hashtable expectedProperties, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x18A5FA0", Offset = "0x18A5FA0", VA = "0x18A5FA0")]
		public bool OpSetCustomPropertiesOfRoom(Hashtable propertiesToSet, [Optional] Hashtable expectedProperties, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x18A6160", Offset = "0x18A6160", VA = "0x18A6160")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD96384", Offset = "0xD96384")]
		public bool OpSetCustomPropertiesOfRoom(Hashtable propertiesToSet, Hashtable expectedProperties, bool webForward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x18A6034", Offset = "0x18A6034", VA = "0x18A6034")]
		protected internal bool OpSetPropertiesOfRoom(Hashtable gameProperties, [Optional] Hashtable expectedProperties, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x18A6420", Offset = "0x18A6420", VA = "0x18A6420", Slot = "9")]
		public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, RaiseEventOptions raiseEventOptions, SendOptions sendOptions)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x18A643C", Offset = "0x18A643C", VA = "0x18A643C", Slot = "10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD963BC", Offset = "0xD963BC")]
		public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x18A64D0", Offset = "0x18A64D0", VA = "0x18A64D0", Slot = "11")]
		public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x18A64EC", Offset = "0x18A64EC", VA = "0x18A64EC")]
		private void ReadoutProperties(Hashtable gameProperties, Hashtable actorProperties, int targetActorNr)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x18A6850", Offset = "0x18A6850", VA = "0x18A6850")]
		private Hashtable ReadoutPropertiesForActorNr(Hashtable actorProperties, int actorNr)
		{
			return null;
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x18A6940", Offset = "0x18A6940", VA = "0x18A6940")]
		protected internal void ChangeLocalID(int newID)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x18A6A94", Offset = "0x18A6A94", VA = "0x18A6A94")]
		private void CleanCachedValues()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x18A6B3C", Offset = "0x18A6B3C", VA = "0x18A6B3C")]
		private void GameEnteredOnGameServer(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x18A6D48", Offset = "0x18A6D48", VA = "0x18A6D48")]
		private void UpdatedActorList(int[] actorsInGame)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x18A6E54", Offset = "0x18A6E54", VA = "0x18A6E54", Slot = "12")]
		protected internal virtual Player CreatePlayer(string actorName, int actorNumber, bool isLocal, Hashtable actorProperties)
		{
			return null;
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x18A6F98", Offset = "0x18A6F98", VA = "0x18A6F98", Slot = "13")]
		protected internal virtual Room CreateRoom(string roomName, RoomOptions opt)
		{
			return null;
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x18A70E0", Offset = "0x18A70E0", VA = "0x18A70E0", Slot = "14")]
		public virtual void DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x18A721C", Offset = "0x18A721C", VA = "0x18A721C", Slot = "15")]
		public virtual void OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x18A8168", Offset = "0x18A8168", VA = "0x18A8168", Slot = "16")]
		public virtual void OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x18A86F8", Offset = "0x18A86F8", VA = "0x18A86F8", Slot = "17")]
		public virtual void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x18A9108", Offset = "0x18A9108", VA = "0x18A9108", Slot = "18")]
		public virtual void OnMessage(object message)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x18A7E2C", Offset = "0x18A7E2C", VA = "0x18A7E2C")]
		private void SetupEncryption(Dictionary<byte, object> encryptionData)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x18A9184", Offset = "0x18A9184", VA = "0x18A9184")]
		public bool OpWebRpc(string uriPath, object parameters, bool sendAuthCookie = false)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A8")]
	public class LoadBalancingPeer : PhotonPeer
	{
		[Token(Token = "0x2000574")]
		private enum RoomOptionBit
		{
			[Token(Token = "0x40022EB")]
			CheckUserOnJoin = 1,
			[Token(Token = "0x40022EC")]
			DeleteCacheOnLeave = 2,
			[Token(Token = "0x40022ED")]
			SuppressRoomEvents = 4,
			[Token(Token = "0x40022EE")]
			PublishUserId = 8,
			[Token(Token = "0x40022EF")]
			DeleteNullProps = 0x10,
			[Token(Token = "0x40022F0")]
			BroadcastPropsChangeToAll = 0x20
		}

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected internal static Type PingImplementation;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly Dictionary<byte, object> opParameters;

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x18A9390", Offset = "0x18A9390", VA = "0x18A9390")]
		public LoadBalancingPeer(ConnectionProtocol protocolType)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x18A47F4", Offset = "0x18A47F4", VA = "0x18A47F4")]
		public LoadBalancingPeer(IPhotonPeerListener listener, ConnectionProtocol protocolType)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x18A9438", Offset = "0x18A9438", VA = "0x18A9438")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD963F4", Offset = "0xD963F4")]
		private void ConfigUnitySockets()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x18A96C4", Offset = "0x18A96C4", VA = "0x18A96C4", Slot = "16")]
		public virtual bool OpGetRegions(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x18A979C", Offset = "0x18A979C", VA = "0x18A979C", Slot = "17")]
		public virtual bool OpJoinLobby([Optional] TypedLobby lobby)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x18A9978", Offset = "0x18A9978", VA = "0x18A9978", Slot = "18")]
		public virtual bool OpLeaveLobby()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x18A9A90", Offset = "0x18A9A90", VA = "0x18A9A90")]
		private void RoomOptionsToOpParameters(Dictionary<byte, object> op, RoomOptions roomOptions)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x18A9EEC", Offset = "0x18A9EEC", VA = "0x18A9EEC", Slot = "19")]
		public virtual bool OpCreateRoom(EnterRoomParams opParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x18AA190", Offset = "0x18AA190", VA = "0x18AA190", Slot = "20")]
		public virtual bool OpJoinRoom(EnterRoomParams opParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x18AA4A0", Offset = "0x18AA4A0", VA = "0x18AA4A0", Slot = "21")]
		public virtual bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x18AA7C4", Offset = "0x18AA7C4", VA = "0x18AA7C4", Slot = "22")]
		public virtual bool OpLeaveRoom(bool becomeInactive, bool sendAuthCookie = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x18AA900", Offset = "0x18AA900", VA = "0x18AA900", Slot = "23")]
		public virtual bool OpGetGameList(TypedLobby lobby, string queryData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x18AABC4", Offset = "0x18AABC4", VA = "0x18AABC4", Slot = "24")]
		public virtual bool OpFindFriends(string[] friendsToFind)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x18AACA0", Offset = "0x18AACA0", VA = "0x18AACA0")]
		public bool OpSetCustomPropertiesOfActor(int actorNr, Hashtable actorProperties)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x18A5CAC", Offset = "0x18A5CAC", VA = "0x18A5CAC")]
		protected internal bool OpSetPropertiesOfActor(int actorNr, Hashtable actorProperties, [Optional] Hashtable expectedProperties, [Optional] WebFlags webflags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x18AACE8", Offset = "0x18AACE8", VA = "0x18AACE8")]
		protected void OpSetPropertyOfRoom(byte propCode, object value)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x18AADA4", Offset = "0x18AADA4", VA = "0x18AADA4")]
		public bool OpSetCustomPropertiesOfRoom(Hashtable gameProperties)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x18A6208", Offset = "0x18A6208", VA = "0x18A6208")]
		protected internal bool OpSetPropertiesOfRoom(Hashtable gameProperties, [Optional] Hashtable expectedProperties, [Optional] WebFlags webflags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x18AADD8", Offset = "0x18AADD8", VA = "0x18AADD8", Slot = "25")]
		public virtual bool OpAuthenticate(string appId, string appVersion, AuthenticationValues authValues, string regionCode, bool getLobbyStatistics)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x18AB0E8", Offset = "0x18AB0E8", VA = "0x18AB0E8", Slot = "26")]
		public virtual bool OpAuthenticateOnce(string appId, string appVersion, AuthenticationValues authValues, string regionCode, EncryptionMode encryptionMode, ConnectionProtocol expectedProtocol)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x18AB40C", Offset = "0x18AB40C", VA = "0x18AB40C", Slot = "27")]
		public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x18AB5A0", Offset = "0x18AB5A0", VA = "0x18AB5A0", Slot = "28")]
		public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, RaiseEventOptions raiseEventOptions, SendOptions sendOptions)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x18AB7C4", Offset = "0x18AB7C4", VA = "0x18AB7C4", Slot = "29")]
		public virtual bool OpSettings(bool receiveLobbyStats)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A9")]
	public class OpJoinRandomRoomParams
	{
		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Hashtable ExpectedCustomRoomProperties;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte ExpectedMaxPlayers;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public MatchmakingMode MatchingType;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TypedLobby TypedLobby;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SqlLobbyFilter;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] ExpectedUsers;

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x18A5410", Offset = "0x18A5410", VA = "0x18A5410")]
		public OpJoinRandomRoomParams()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class EnterRoomParams
	{
		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string RoomName;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomOptions RoomOptions;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TypedLobby Lobby;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Hashtable PlayerProperties;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool OnGameServer;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool CreateIfNotExists;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool RejoinOnly;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] ExpectedUsers;

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x18A2A90", Offset = "0x18A2A90", VA = "0x18A2A90")]
		public EnterRoomParams()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class ErrorCode
	{
		[Token(Token = "0x4001A2C")]
		public const int Ok = 0;

		[Token(Token = "0x4001A2D")]
		public const int OperationNotAllowedInCurrentState = -3;

		[Token(Token = "0x4001A2E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C5CC", Offset = "0xD8C5CC")]
		public const int InvalidOperationCode = -2;

		[Token(Token = "0x4001A2F")]
		public const int InvalidOperation = -2;

		[Token(Token = "0x4001A30")]
		public const int InternalServerError = -1;

		[Token(Token = "0x4001A31")]
		public const int InvalidAuthentication = 32767;

		[Token(Token = "0x4001A32")]
		public const int GameIdAlreadyExists = 32766;

		[Token(Token = "0x4001A33")]
		public const int GameFull = 32765;

		[Token(Token = "0x4001A34")]
		public const int GameClosed = 32764;

		[Token(Token = "0x4001A35")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C604", Offset = "0xD8C604")]
		public const int AlreadyMatched = 32763;

		[Token(Token = "0x4001A36")]
		public const int ServerFull = 32762;

		[Token(Token = "0x4001A37")]
		public const int UserBlocked = 32761;

		[Token(Token = "0x4001A38")]
		public const int NoRandomMatchFound = 32760;

		[Token(Token = "0x4001A39")]
		public const int GameDoesNotExist = 32758;

		[Token(Token = "0x4001A3A")]
		public const int MaxCcuReached = 32757;

		[Token(Token = "0x4001A3B")]
		public const int InvalidRegion = 32756;

		[Token(Token = "0x4001A3C")]
		public const int CustomAuthenticationFailed = 32755;

		[Token(Token = "0x4001A3D")]
		public const int AuthenticationTicketExpired = 32753;

		[Token(Token = "0x4001A3E")]
		public const int PluginReportedError = 32752;

		[Token(Token = "0x4001A3F")]
		public const int PluginMismatch = 32751;

		[Token(Token = "0x4001A40")]
		public const int JoinFailedPeerAlreadyJoined = 32750;

		[Token(Token = "0x4001A41")]
		public const int JoinFailedFoundInactiveJoiner = 32749;

		[Token(Token = "0x4001A42")]
		public const int JoinFailedWithRejoinerNotFound = 32748;

		[Token(Token = "0x4001A43")]
		public const int JoinFailedFoundExcludedUserId = 32747;

		[Token(Token = "0x4001A44")]
		public const int JoinFailedFoundActiveJoiner = 32746;

		[Token(Token = "0x4001A45")]
		public const int HttpLimitReached = 32745;

		[Token(Token = "0x4001A46")]
		public const int ExternalHttpCallFailed = 32744;

		[Token(Token = "0x4001A47")]
		public const int SlotError = 32742;

		[Token(Token = "0x4001A48")]
		public const int InvalidEncryptionParameters = 32741;

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x18A2AA0", Offset = "0x18A2AA0", VA = "0x18A2AA0")]
		public ErrorCode()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class ActorProperties
	{
		[Token(Token = "0x4001A49")]
		public const byte PlayerName = byte.MaxValue;

		[Token(Token = "0x4001A4A")]
		public const byte IsInactive = 254;

		[Token(Token = "0x4001A4B")]
		public const byte UserId = 253;

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x18A2764", Offset = "0x18A2764", VA = "0x18A2764")]
		public ActorProperties()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class GamePropertyKey
	{
		[Token(Token = "0x4001A4C")]
		public const byte MaxPlayers = byte.MaxValue;

		[Token(Token = "0x4001A4D")]
		public const byte IsVisible = 254;

		[Token(Token = "0x4001A4E")]
		public const byte IsOpen = 253;

		[Token(Token = "0x4001A4F")]
		public const byte PlayerCount = 252;

		[Token(Token = "0x4001A50")]
		public const byte Removed = 251;

		[Token(Token = "0x4001A51")]
		public const byte PropsListedInLobby = 250;

		[Token(Token = "0x4001A52")]
		public const byte CleanupCacheOnLeave = 249;

		[Token(Token = "0x4001A53")]
		public const byte MasterClientId = 248;

		[Token(Token = "0x4001A54")]
		public const byte ExpectedUsers = 247;

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x18A3BF8", Offset = "0x18A3BF8", VA = "0x18A3BF8")]
		public GamePropertyKey()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class EventCode
	{
		[Token(Token = "0x4001A55")]
		public const byte GameList = 230;

		[Token(Token = "0x4001A56")]
		public const byte GameListUpdate = 229;

		[Token(Token = "0x4001A57")]
		public const byte QueueState = 228;

		[Token(Token = "0x4001A58")]
		public const byte Match = 227;

		[Token(Token = "0x4001A59")]
		public const byte AppStats = 226;

		[Token(Token = "0x4001A5A")]
		public const byte LobbyStats = 224;

		[Token(Token = "0x4001A5B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C63C", Offset = "0xD8C63C")]
		public const byte AzureNodeInfo = 210;

		[Token(Token = "0x4001A5C")]
		public const byte Join = byte.MaxValue;

		[Token(Token = "0x4001A5D")]
		public const byte Leave = 254;

		[Token(Token = "0x4001A5E")]
		public const byte PropertiesChanged = 253;

		[Token(Token = "0x4001A5F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C674", Offset = "0xD8C674")]
		public const byte SetProperties = 253;

		[Token(Token = "0x4001A60")]
		public const byte ErrorInfo = 251;

		[Token(Token = "0x4001A61")]
		public const byte CacheSliceChanged = 250;

		[Token(Token = "0x4001A62")]
		public const byte AuthEvent = 223;

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x18A2AA8", Offset = "0x18A2AA8", VA = "0x18A2AA8")]
		public EventCode()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class ParameterCode
	{
		[Token(Token = "0x4001A63")]
		public const byte SuppressRoomEvents = 237;

		[Token(Token = "0x4001A64")]
		public const byte EmptyRoomTTL = 236;

		[Token(Token = "0x4001A65")]
		public const byte PlayerTTL = 235;

		[Token(Token = "0x4001A66")]
		public const byte EventForward = 234;

		[Token(Token = "0x4001A67")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C6AC", Offset = "0xD8C6AC")]
		public const byte IsComingBack = 233;

		[Token(Token = "0x4001A68")]
		public const byte IsInactive = 233;

		[Token(Token = "0x4001A69")]
		public const byte CheckUserOnJoin = 232;

		[Token(Token = "0x4001A6A")]
		public const byte ExpectedValues = 231;

		[Token(Token = "0x4001A6B")]
		public const byte Address = 230;

		[Token(Token = "0x4001A6C")]
		public const byte PeerCount = 229;

		[Token(Token = "0x4001A6D")]
		public const byte GameCount = 228;

		[Token(Token = "0x4001A6E")]
		public const byte MasterPeerCount = 227;

		[Token(Token = "0x4001A6F")]
		public const byte UserId = 225;

		[Token(Token = "0x4001A70")]
		public const byte ApplicationId = 224;

		[Token(Token = "0x4001A71")]
		public const byte Position = 223;

		[Token(Token = "0x4001A72")]
		public const byte MatchMakingType = 223;

		[Token(Token = "0x4001A73")]
		public const byte GameList = 222;

		[Token(Token = "0x4001A74")]
		public const byte Secret = 221;

		[Token(Token = "0x4001A75")]
		public const byte AppVersion = 220;

		[Token(Token = "0x4001A76")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C6E4", Offset = "0xD8C6E4")]
		public const byte AzureNodeInfo = 210;

		[Token(Token = "0x4001A77")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C71C", Offset = "0xD8C71C")]
		public const byte AzureLocalNodeId = 209;

		[Token(Token = "0x4001A78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C754", Offset = "0xD8C754")]
		public const byte AzureMasterNodeId = 208;

		[Token(Token = "0x4001A79")]
		public const byte RoomName = byte.MaxValue;

		[Token(Token = "0x4001A7A")]
		public const byte Broadcast = 250;

		[Token(Token = "0x4001A7B")]
		public const byte ActorList = 252;

		[Token(Token = "0x4001A7C")]
		public const byte ActorNr = 254;

		[Token(Token = "0x4001A7D")]
		public const byte PlayerProperties = 249;

		[Token(Token = "0x4001A7E")]
		public const byte CustomEventContent = 245;

		[Token(Token = "0x4001A7F")]
		public const byte Data = 245;

		[Token(Token = "0x4001A80")]
		public const byte Code = 244;

		[Token(Token = "0x4001A81")]
		public const byte GameProperties = 248;

		[Token(Token = "0x4001A82")]
		public const byte Properties = 251;

		[Token(Token = "0x4001A83")]
		public const byte TargetActorNr = 253;

		[Token(Token = "0x4001A84")]
		public const byte ReceiverGroup = 246;

		[Token(Token = "0x4001A85")]
		public const byte Cache = 247;

		[Token(Token = "0x4001A86")]
		public const byte CleanupCacheOnLeave = 241;

		[Token(Token = "0x4001A87")]
		public const byte Group = 240;

		[Token(Token = "0x4001A88")]
		public const byte Remove = 239;

		[Token(Token = "0x4001A89")]
		public const byte PublishUserId = 239;

		[Token(Token = "0x4001A8A")]
		public const byte Add = 238;

		[Token(Token = "0x4001A8B")]
		public const byte Info = 218;

		[Token(Token = "0x4001A8C")]
		public const byte ClientAuthenticationType = 217;

		[Token(Token = "0x4001A8D")]
		public const byte ClientAuthenticationParams = 216;

		[Token(Token = "0x4001A8E")]
		public const byte JoinMode = 215;

		[Token(Token = "0x4001A8F")]
		public const byte ClientAuthenticationData = 214;

		[Token(Token = "0x4001A90")]
		public const byte MasterClientId = 203;

		[Token(Token = "0x4001A91")]
		public const byte FindFriendsRequestList = 1;

		[Token(Token = "0x4001A92")]
		public const byte FindFriendsResponseOnlineList = 1;

		[Token(Token = "0x4001A93")]
		public const byte FindFriendsResponseRoomIdList = 2;

		[Token(Token = "0x4001A94")]
		public const byte LobbyName = 213;

		[Token(Token = "0x4001A95")]
		public const byte LobbyType = 212;

		[Token(Token = "0x4001A96")]
		public const byte LobbyStats = 211;

		[Token(Token = "0x4001A97")]
		public const byte Region = 210;

		[Token(Token = "0x4001A98")]
		public const byte UriPath = 209;

		[Token(Token = "0x4001A99")]
		public const byte WebRpcParameters = 208;

		[Token(Token = "0x4001A9A")]
		public const byte WebRpcReturnCode = 207;

		[Token(Token = "0x4001A9B")]
		public const byte WebRpcReturnMessage = 206;

		[Token(Token = "0x4001A9C")]
		public const byte CacheSliceIndex = 205;

		[Token(Token = "0x4001A9D")]
		public const byte Plugins = 204;

		[Token(Token = "0x4001A9E")]
		public const byte NickName = 202;

		[Token(Token = "0x4001A9F")]
		public const byte PluginName = 201;

		[Token(Token = "0x4001AA0")]
		public const byte PluginVersion = 200;

		[Token(Token = "0x4001AA1")]
		public const byte ExpectedProtocol = 195;

		[Token(Token = "0x4001AA2")]
		public const byte CustomInitData = 194;

		[Token(Token = "0x4001AA3")]
		public const byte EncryptionMode = 193;

		[Token(Token = "0x4001AA4")]
		public const byte EncryptionData = 192;

		[Token(Token = "0x4001AA5")]
		public const byte RoomOptionFlags = 191;

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x18AB978", Offset = "0x18AB978", VA = "0x18AB978")]
		public ParameterCode()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class OperationCode
	{
		[Token(Token = "0x4001AA6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C78C", Offset = "0xD8C78C")]
		public const byte ExchangeKeysForEncryption = 250;

		[Token(Token = "0x4001AA7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C7C4", Offset = "0xD8C7C4")]
		public const byte Join = byte.MaxValue;

		[Token(Token = "0x4001AA8")]
		public const byte AuthenticateOnce = 231;

		[Token(Token = "0x4001AA9")]
		public const byte Authenticate = 230;

		[Token(Token = "0x4001AAA")]
		public const byte JoinLobby = 229;

		[Token(Token = "0x4001AAB")]
		public const byte LeaveLobby = 228;

		[Token(Token = "0x4001AAC")]
		public const byte CreateGame = 227;

		[Token(Token = "0x4001AAD")]
		public const byte JoinGame = 226;

		[Token(Token = "0x4001AAE")]
		public const byte JoinRandomGame = 225;

		[Token(Token = "0x4001AAF")]
		public const byte Leave = 254;

		[Token(Token = "0x4001AB0")]
		public const byte RaiseEvent = 253;

		[Token(Token = "0x4001AB1")]
		public const byte SetProperties = 252;

		[Token(Token = "0x4001AB2")]
		public const byte GetProperties = 251;

		[Token(Token = "0x4001AB3")]
		public const byte ChangeGroups = 248;

		[Token(Token = "0x4001AB4")]
		public const byte FindFriends = 222;

		[Token(Token = "0x4001AB5")]
		public const byte GetLobbyStats = 221;

		[Token(Token = "0x4001AB6")]
		public const byte GetRegions = 220;

		[Token(Token = "0x4001AB7")]
		public const byte WebRpc = 219;

		[Token(Token = "0x4001AB8")]
		public const byte ServerSettings = 218;

		[Token(Token = "0x4001AB9")]
		public const byte GetGameList = 217;

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x18AB970", Offset = "0x18AB970", VA = "0x18AB970")]
		public OperationCode()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public enum JoinMode : byte
	{
		[Token(Token = "0x4001ABB")]
		Default,
		[Token(Token = "0x4001ABC")]
		CreateIfNotExists,
		[Token(Token = "0x4001ABD")]
		JoinOrRejoin,
		[Token(Token = "0x4001ABE")]
		RejoinOnly
	}
	[Token(Token = "0x20003B2")]
	public enum MatchmakingMode : byte
	{
		[Token(Token = "0x4001AC0")]
		FillRoom,
		[Token(Token = "0x4001AC1")]
		SerialMatching,
		[Token(Token = "0x4001AC2")]
		RandomMatching
	}
	[Token(Token = "0x20003B3")]
	public enum ReceiverGroup : byte
	{
		[Token(Token = "0x4001AC4")]
		Others,
		[Token(Token = "0x4001AC5")]
		All,
		[Token(Token = "0x4001AC6")]
		MasterClient
	}
	[Token(Token = "0x20003B4")]
	public enum EventCaching : byte
	{
		[Token(Token = "0x4001AC8")]
		DoNotCache = 0,
		[Token(Token = "0x4001AC9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C7D4", Offset = "0xD8C7D4")]
		MergeCache = 1,
		[Token(Token = "0x4001ACA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C7E4", Offset = "0xD8C7E4")]
		ReplaceCache = 2,
		[Token(Token = "0x4001ACB")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C7F4", Offset = "0xD8C7F4")]
		RemoveCache = 3,
		[Token(Token = "0x4001ACC")]
		AddToRoomCache = 4,
		[Token(Token = "0x4001ACD")]
		AddToRoomCacheGlobal = 5,
		[Token(Token = "0x4001ACE")]
		RemoveFromRoomCache = 6,
		[Token(Token = "0x4001ACF")]
		RemoveFromRoomCacheForActorsLeft = 7,
		[Token(Token = "0x4001AD0")]
		SliceIncreaseIndex = 10,
		[Token(Token = "0x4001AD1")]
		SliceSetIndex = 11,
		[Token(Token = "0x4001AD2")]
		SlicePurgeIndex = 12,
		[Token(Token = "0x4001AD3")]
		SlicePurgeUpToIndex = 13
	}
	[Token(Token = "0x20003B5")]
	[Flags]
	public enum PropertyTypeFlag : byte
	{
		[Token(Token = "0x4001AD5")]
		None = 0,
		[Token(Token = "0x4001AD6")]
		Game = 1,
		[Token(Token = "0x4001AD7")]
		Actor = 2,
		[Token(Token = "0x4001AD8")]
		GameAndActor = 3
	}
	[Token(Token = "0x20003B6")]
	public class RoomOptions
	{
		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isVisible;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool isOpen;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public byte MaxPlayers;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int PlayerTtl;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int EmptyRoomTtl;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool cleanupCacheOnLeave;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hashtable CustomRoomProperties;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] CustomRoomPropertiesForLobby;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] Plugins;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C804", Offset = "0xD8C804")]
		private bool <SuppressRoomEvents>k__BackingField;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C814", Offset = "0xD8C814")]
		private bool <PublishUserId>k__BackingField;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C824", Offset = "0xD8C824")]
		private bool <DeleteNullProperties>k__BackingField;

		[Token(Token = "0x17000366")]
		public bool IsVisible
		{
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x18AE21C", Offset = "0x18AE21C", VA = "0x18AE21C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x18AE224", Offset = "0x18AE224", VA = "0x18AE224")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public bool IsOpen
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x18AE230", Offset = "0x18AE230", VA = "0x18AE230")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x18AE238", Offset = "0x18AE238", VA = "0x18AE238")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public bool CleanupCacheOnLeave
		{
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x18AE244", Offset = "0x18AE244", VA = "0x18AE244")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D12")]
			[Address(RVA = "0x18AE24C", Offset = "0x18AE24C", VA = "0x18AE24C")]
			set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public bool SuppressRoomEvents
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0x18AE258", Offset = "0x18AE258", VA = "0x18AE258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9642C", Offset = "0xD9642C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x18AE260", Offset = "0x18AE260", VA = "0x18AE260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9643C", Offset = "0xD9643C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public bool PublishUserId
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x18AE26C", Offset = "0x18AE26C", VA = "0x18AE26C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9644C", Offset = "0xD9644C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x18AE274", Offset = "0x18AE274", VA = "0x18AE274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9645C", Offset = "0xD9645C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public bool DeleteNullProperties
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0x18AE280", Offset = "0x18AE280", VA = "0x18AE280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9646C", Offset = "0xD9646C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0x18AE288", Offset = "0x18AE288", VA = "0x18AE288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9647C", Offset = "0xD9647C")]
			set
			{
			}
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x18A9E7C", Offset = "0x18A9E7C", VA = "0x18A9E7C")]
		public RoomOptions()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class RaiseEventOptions
	{
		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly RaiseEventOptions Default;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventCaching CachingOption;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public byte InterestGroup;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] TargetActors;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReceiverGroup Receivers;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD8C834", Offset = "0xD8C834")]
		public byte SequenceChannel;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WebFlags Flags;

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x18AC840", Offset = "0x18AC840", VA = "0x18AC840")]
		public RaiseEventOptions()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public enum LobbyType : byte
	{
		[Token(Token = "0x4001AED")]
		Default = 0,
		[Token(Token = "0x4001AEE")]
		SqlLobby = 2,
		[Token(Token = "0x4001AEF")]
		AsyncRandomLobby = 3
	}
	[Token(Token = "0x20003B9")]
	public class TypedLobby
	{
		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LobbyType Type;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly TypedLobby Default;

		[Token(Token = "0x1700036C")]
		public bool IsDefault
		{
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x18A995C", Offset = "0x18A995C", VA = "0x18A995C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x18AE294", Offset = "0x18AE294", VA = "0x18AE294")]
		public TypedLobby()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x18AE2FC", Offset = "0x18AE2FC", VA = "0x18AE2FC")]
		public TypedLobby(string name, LobbyType type)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x18AE338", Offset = "0x18AE338", VA = "0x18AE338", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BA")]
	public class TypedLobbyInfo : TypedLobby
	{
		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int PlayerCount;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int RoomCount;

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x18AE420", Offset = "0x18AE420", VA = "0x18AE420", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x18A90A4", Offset = "0x18A90A4", VA = "0x18A90A4")]
		public TypedLobbyInfo()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public enum AuthModeOption
	{
		[Token(Token = "0x4001AF6")]
		Auth,
		[Token(Token = "0x4001AF7")]
		AuthOnce,
		[Token(Token = "0x4001AF8")]
		AuthOnceWss
	}
	[Token(Token = "0x20003BC")]
	public enum CustomAuthenticationType : byte
	{
		[Token(Token = "0x4001AFA")]
		Custom = 0,
		[Token(Token = "0x4001AFB")]
		Steam = 1,
		[Token(Token = "0x4001AFC")]
		Facebook = 2,
		[Token(Token = "0x4001AFD")]
		Oculus = 3,
		[Token(Token = "0x4001AFE")]
		PlayStation = 4,
		[Token(Token = "0x4001AFF")]
		Xbox = 5,
		[Token(Token = "0x4001B00")]
		None = byte.MaxValue
	}
	[Token(Token = "0x20003BD")]
	public class AuthenticationValues
	{
		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CustomAuthenticationType authType;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C86C", Offset = "0xD8C86C")]
		private string <AuthGetParameters>k__BackingField;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C87C", Offset = "0xD8C87C")]
		private object <AuthPostData>k__BackingField;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C88C", Offset = "0xD8C88C")]
		private string <Token>k__BackingField;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C89C", Offset = "0xD8C89C")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x1700036D")]
		public CustomAuthenticationType AuthType
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0x18A276C", Offset = "0x18A276C", VA = "0x18A276C")]
			get
			{
				return default(CustomAuthenticationType);
			}
			[Token(Token = "0x6001D24")]
			[Address(RVA = "0x18A2774", Offset = "0x18A2774", VA = "0x18A2774")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		public string AuthGetParameters
		{
			[Token(Token = "0x6001D25")]
			[Address(RVA = "0x18A277C", Offset = "0x18A277C", VA = "0x18A277C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9648C", Offset = "0xD9648C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D26")]
			[Address(RVA = "0x18A2784", Offset = "0x18A2784", VA = "0x18A2784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9649C", Offset = "0xD9649C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public object AuthPostData
		{
			[Token(Token = "0x6001D27")]
			[Address(RVA = "0x18A278C", Offset = "0x18A278C", VA = "0x18A278C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD964AC", Offset = "0xD964AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D28")]
			[Address(RVA = "0x18A2794", Offset = "0x18A2794", VA = "0x18A2794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD964BC", Offset = "0xD964BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public string Token
		{
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0x18A279C", Offset = "0x18A279C", VA = "0x18A279C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD964CC", Offset = "0xD964CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0x18A27A4", Offset = "0x18A27A4", VA = "0x18A27A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD964DC", Offset = "0xD964DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public string UserId
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0x18A27AC", Offset = "0x18A27AC", VA = "0x18A27AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD964EC", Offset = "0xD964EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0x18A27B4", Offset = "0x18A27B4", VA = "0x18A27B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD964FC", Offset = "0xD964FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x18A27BC", Offset = "0x18A27BC", VA = "0x18A27BC")]
		public AuthenticationValues()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x18A27CC", Offset = "0x18A27CC", VA = "0x18A27CC")]
		public AuthenticationValues(string userId)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x18A2800", Offset = "0x18A2800", VA = "0x18A2800", Slot = "4")]
		public virtual void SetAuthPostData(string stringData)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x18A2840", Offset = "0x18A2840", VA = "0x18A2840", Slot = "5")]
		public virtual void SetAuthPostData(byte[] byteData)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x18A2848", Offset = "0x18A2848", VA = "0x18A2848", Slot = "6")]
		public virtual void AddAuthParameter(string key, string value)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x18A29FC", Offset = "0x18A29FC", VA = "0x18A29FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BE")]
	public abstract class PhotonPing : IDisposable
	{
		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string DebugString;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Successful;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected internal bool GotResult;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected internal int PingLength;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected internal byte[] PingBytes;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected internal byte PingId;

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x18AB980", Offset = "0x18AB980", VA = "0x18AB980", Slot = "5")]
		public virtual bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x18AB9E0", Offset = "0x18AB9E0", VA = "0x18AB9E0", Slot = "6")]
		public virtual bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x18ABA40", Offset = "0x18ABA40", VA = "0x18ABA40", Slot = "7")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x18ABAA0", Offset = "0x18ABAA0", VA = "0x18ABAA0")]
		protected internal void Init()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x18ABAEC", Offset = "0x18ABAEC", VA = "0x18ABAEC")]
		protected PhotonPing()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class PingMono : PhotonPing
	{
		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Socket sock;

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x18ABB7C", Offset = "0x18ABB7C", VA = "0x18ABB7C", Slot = "5")]
		public override bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x18ABDF0", Offset = "0x18ABDF0", VA = "0x18ABDF0", Slot = "6")]
		public override bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x18ABF28", Offset = "0x18ABF28", VA = "0x18ABF28", Slot = "7")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x18ABFF0", Offset = "0x18ABFF0", VA = "0x18ABFF0")]
		public PingMono()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class Player
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C8AC", Offset = "0xD8C8AC")]
		private Room <RoomReference>k__BackingField;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int actorID;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool IsLocal;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string nickName;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C8BC", Offset = "0xD8C8BC")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C8CC", Offset = "0xD8C8CC")]
		private bool <IsInactive>k__BackingField;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C8DC", Offset = "0xD8C8DC")]
		private Hashtable <CustomProperties>k__BackingField;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public object TagObject;

		[Token(Token = "0x17000372")]
		protected internal Room RoomReference
		{
			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0x18ABFF4", Offset = "0x18ABFF4", VA = "0x18ABFF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9650C", Offset = "0xD9650C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0x18ABFFC", Offset = "0x18ABFFC", VA = "0x18ABFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9651C", Offset = "0xD9651C")]
			set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public int ID
		{
			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0x18AC004", Offset = "0x18AC004", VA = "0x18AC004")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000374")]
		public string NickName
		{
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0x18AC00C", Offset = "0x18AC00C", VA = "0x18AC00C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D40")]
			[Address(RVA = "0x18A44CC", Offset = "0x18A44CC", VA = "0x18A44CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public string UserId
		{
			[Token(Token = "0x6001D41")]
			[Address(RVA = "0x18AC0EC", Offset = "0x18AC0EC", VA = "0x18AC0EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9652C", Offset = "0xD9652C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D42")]
			[Address(RVA = "0x18AC0F4", Offset = "0x18AC0F4", VA = "0x18AC0F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9653C", Offset = "0xD9653C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public bool IsMasterClient
		{
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x18AC0FC", Offset = "0x18AC0FC", VA = "0x18AC0FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000377")]
		public bool IsInactive
		{
			[Token(Token = "0x6001D44")]
			[Address(RVA = "0x18AC120", Offset = "0x18AC120", VA = "0x18AC120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9654C", Offset = "0xD9654C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x18AC128", Offset = "0x18AC128", VA = "0x18AC128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9655C", Offset = "0xD9655C")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public Hashtable CustomProperties
		{
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0x18AC134", Offset = "0x18AC134", VA = "0x18AC134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9656C", Offset = "0xD9656C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0x18AC13C", Offset = "0x18AC13C", VA = "0x18AC13C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9657C", Offset = "0xD9657C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public Hashtable AllProperties
		{
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0x18A8018", Offset = "0x18A8018", VA = "0x18A8018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x18AC144", Offset = "0x18AC144", VA = "0x18AC144")]
		protected internal Player(string nickName, int actorID, bool isLocal)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x18A6EDC", Offset = "0x18A6EDC", VA = "0x18A6EDC")]
		protected internal Player(string nickName, int actorID, bool isLocal, Hashtable playerProperties)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x18AC150", Offset = "0x18AC150", VA = "0x18AC150")]
		public Player Get(int id)
		{
			return null;
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x18AC168", Offset = "0x18AC168", VA = "0x18AC168")]
		public Player GetNext()
		{
			return null;
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x18AC304", Offset = "0x18AC304", VA = "0x18AC304")]
		public Player GetNextFor(Player currentPlayer)
		{
			return null;
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x18AC170", Offset = "0x18AC170", VA = "0x18AC170")]
		public Player GetNextFor(int currentPlayerId)
		{
			return null;
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x18AC318", Offset = "0x18AC318", VA = "0x18AC318", Slot = "4")]
		public virtual void InternalCacheProperties(Hashtable properties)
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x18AC558", Offset = "0x18AC558", VA = "0x18AC558", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x18AC5E4", Offset = "0x18AC5E4", VA = "0x18AC5E4")]
		public string ToStringFull()
		{
			return null;
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x18AC774", Offset = "0x18AC774", VA = "0x18AC774", Slot = "0")]
		public override bool Equals(object p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x18AC838", Offset = "0x18AC838", VA = "0x18AC838", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x18A6A84", Offset = "0x18A6A84", VA = "0x18A6A84")]
		protected internal void ChangeLocalID(int newID)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x18A598C", Offset = "0x18A598C", VA = "0x18A598C")]
		public void SetCustomProperties(Hashtable propertiesToSet, [Optional] Hashtable expectedValues, [Optional] WebFlags webFlags)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x18AC014", Offset = "0x18AC014", VA = "0x18AC014")]
		private void SetPlayerNameProperty()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class Room : RoomInfo
	{
		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected internal int PlayerTTL;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected internal int RoomTTL;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C8EC", Offset = "0xD8C8EC")]
		private LoadBalancingClient <LoadBalancingClient>k__BackingField;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, Player> players;

		[Token(Token = "0x1700037A")]
		protected internal LoadBalancingClient LoadBalancingClient
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0x18AC918", Offset = "0x18AC918", VA = "0x18AC918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9658C", Offset = "0xD9658C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0x18AC920", Offset = "0x18AC920", VA = "0x18AC920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9659C", Offset = "0xD9659C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public new string Name
		{
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x18AC928", Offset = "0x18AC928", VA = "0x18AC928")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x18AC930", Offset = "0x18AC930", VA = "0x18AC930")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public new bool IsOpen
		{
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x18AC938", Offset = "0x18AC938", VA = "0x18AC938")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0x18AC940", Offset = "0x18AC940", VA = "0x18AC940")]
			set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public new bool IsVisible
		{
			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0x18ACA74", Offset = "0x18ACA74", VA = "0x18ACA74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0x18ACA7C", Offset = "0x18ACA7C", VA = "0x18ACA7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		public new byte MaxPlayers
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x18ACBB0", Offset = "0x18ACBB0", VA = "0x18ACBB0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0x18ACBB8", Offset = "0x18ACBB8", VA = "0x18ACBB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public new byte PlayerCount
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x18ACCE0", Offset = "0x18ACCE0", VA = "0x18ACCE0")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000380")]
		public Dictionary<int, Player> Players
		{
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0x18ACD38", Offset = "0x18ACD38", VA = "0x18ACD38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0x18ACD40", Offset = "0x18ACD40", VA = "0x18ACD40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000381")]
		public string[] ExpectedUsers
		{
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0x18ACD48", Offset = "0x18ACD48", VA = "0x18ACD48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000382")]
		public int MasterClientId
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0x18ACD50", Offset = "0x18ACD50", VA = "0x18ACD50")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000383")]
		public string[] PropertiesListedInLobby
		{
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x18ACD58", Offset = "0x18ACD58", VA = "0x18ACD58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x18ACD60", Offset = "0x18ACD60", VA = "0x18ACD60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000384")]
		public bool AutoCleanUp
		{
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x18ACD68", Offset = "0x18ACD68", VA = "0x18ACD68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x18A7008", Offset = "0x18A7008", VA = "0x18A7008")]
		protected internal Room(string roomName, RoomOptions options)
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x18ACD70", Offset = "0x18ACD70", VA = "0x18ACD70", Slot = "5")]
		public virtual void SetCustomProperties(Hashtable propertiesToSet, [Optional] Hashtable expectedProperties, [Optional] WebFlags webFlags)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x18ACE44", Offset = "0x18ACE44", VA = "0x18ACE44")]
		public void SetPropertiesListedInLobby(string[] propertiesListedInLobby)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x18ACF04", Offset = "0x18ACF04", VA = "0x18ACF04", Slot = "6")]
		protected internal virtual void RemovePlayer(Player player)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x18ACF78", Offset = "0x18ACF78", VA = "0x18ACF78", Slot = "7")]
		protected internal virtual void RemovePlayer(int id)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x18ACFB0", Offset = "0x18ACFB0", VA = "0x18ACFB0")]
		public bool SetMasterClient(Player masterClientPlayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x18AD140", Offset = "0x18AD140", VA = "0x18AD140", Slot = "8")]
		public virtual bool AddPlayer(Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x18AD1D4", Offset = "0x18AD1D4", VA = "0x18AD1D4", Slot = "9")]
		public virtual Player StorePlayer(Player player)
		{
			return null;
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x18AD268", Offset = "0x18AD268", VA = "0x18AD268", Slot = "10")]
		public virtual Player GetPlayer(int id)
		{
			return null;
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x18AD2E0", Offset = "0x18AD2E0", VA = "0x18AD2E0")]
		public void ClearExpectedUsers()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x18AD3FC", Offset = "0x18AD3FC", VA = "0x18AD3FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x18AD5F0", Offset = "0x18AD5F0", VA = "0x18AD5F0")]
		public new string ToStringFull()
		{
			return null;
		}
	}
	[Token(Token = "0x20003C2")]
	public class RoomInfo
	{
		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected internal bool removedFromList;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hashtable customProperties;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected byte maxPlayers;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected string[] expectedUsers;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool isOpen;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		protected bool isVisible;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		protected bool autoCleanUp;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected string name;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected internal int masterClientId;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected string[] propertiesListedInLobby;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C8FC", Offset = "0xD8C8FC")]
		private int <PlayerCount>k__BackingField;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C90C", Offset = "0xD8C90C")]
		private bool <IsLocalClientInside>k__BackingField;

		[Token(Token = "0x17000385")]
		public Hashtable CustomProperties
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0x18AD818", Offset = "0x18AD818", VA = "0x18AD818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		public string Name
		{
			[Token(Token = "0x6001D76")]
			[Address(RVA = "0x18AD820", Offset = "0x18AD820", VA = "0x18AD820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		public int PlayerCount
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0x18AD828", Offset = "0x18AD828", VA = "0x18AD828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD965AC", Offset = "0xD965AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D78")]
			[Address(RVA = "0x18AD830", Offset = "0x18AD830", VA = "0x18AD830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD965BC", Offset = "0xD965BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000388")]
		public bool IsLocalClientInside
		{
			[Token(Token = "0x6001D79")]
			[Address(RVA = "0x18AD838", Offset = "0x18AD838", VA = "0x18AD838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD965CC", Offset = "0xD965CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0x18AD840", Offset = "0x18AD840", VA = "0x18AD840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD965DC", Offset = "0xD965DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public byte MaxPlayers
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0x18AD84C", Offset = "0x18AD84C", VA = "0x18AD84C")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x1700038A")]
		public bool IsOpen
		{
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0x18AD854", Offset = "0x18AD854", VA = "0x18AD854")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038B")]
		public bool IsVisible
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x18AD85C", Offset = "0x18AD85C", VA = "0x18AD85C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x18A80C4", Offset = "0x18A80C4", VA = "0x18A80C4")]
		protected internal RoomInfo(string roomName, Hashtable roomProperties)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x18AD864", Offset = "0x18AD864", VA = "0x18AD864", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x18AD918", Offset = "0x18AD918", VA = "0x18AD918", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x18AD938", Offset = "0x18AD938", VA = "0x18AD938", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x18ADB2C", Offset = "0x18ADB2C", VA = "0x18ADB2C")]
		public string ToStringFull()
		{
			return null;
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x18ADD54", Offset = "0x18ADD54", VA = "0x18ADD54", Slot = "4")]
		protected internal virtual void InternalCacheProperties(Hashtable propertiesToCache)
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class WebRpcResponse
	{
		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C91C", Offset = "0xD8C91C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C92C", Offset = "0xD8C92C")]
		private int <ReturnCode>k__BackingField;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C93C", Offset = "0xD8C93C")]
		private string <DebugMessage>k__BackingField;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C94C", Offset = "0xD8C94C")]
		private Dictionary<string, object> <Parameters>k__BackingField;

		[Token(Token = "0x1700038C")]
		public string Name
		{
			[Token(Token = "0x6001D84")]
			[Address(RVA = "0x18AE6B4", Offset = "0x18AE6B4", VA = "0x18AE6B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD965EC", Offset = "0xD965EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0x18AE6BC", Offset = "0x18AE6BC", VA = "0x18AE6BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD965FC", Offset = "0xD965FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public int ReturnCode
		{
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x18AE6C4", Offset = "0x18AE6C4", VA = "0x18AE6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9660C", Offset = "0xD9660C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x18AE6CC", Offset = "0x18AE6CC", VA = "0x18AE6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9661C", Offset = "0xD9661C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public string DebugMessage
		{
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x18AE6D4", Offset = "0x18AE6D4", VA = "0x18AE6D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9662C", Offset = "0xD9662C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x18AE6DC", Offset = "0x18AE6DC", VA = "0x18AE6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9663C", Offset = "0xD9663C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public Dictionary<string, object> Parameters
		{
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0x18AE6E4", Offset = "0x18AE6E4", VA = "0x18AE6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9664C", Offset = "0xD9664C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x18AE6EC", Offset = "0x18AE6EC", VA = "0x18AE6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9665C", Offset = "0xD9665C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x18AE6F4", Offset = "0x18AE6F4", VA = "0x18AE6F4")]
		public WebRpcResponse(OperationResponse response)
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x18AE890", Offset = "0x18AE890", VA = "0x18AE890")]
		public string ToStringFull()
		{
			return null;
		}
	}
	[Token(Token = "0x20003C4")]
	public class WebFlags
	{
		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly WebFlags Default;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte WebhookFlags;

		[Token(Token = "0x4001B2B")]
		public const byte HttpForwardConst = 1;

		[Token(Token = "0x4001B2C")]
		public const byte SendAuthCookieConst = 2;

		[Token(Token = "0x4001B2D")]
		public const byte SendSyncConst = 4;

		[Token(Token = "0x4001B2E")]
		public const byte SendStateConst = 8;

		[Token(Token = "0x17000390")]
		public bool HttpForward
		{
			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x18AACDC", Offset = "0x18AACDC", VA = "0x18AACDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x18AE5B8", Offset = "0x18AE5B8", VA = "0x18AE5B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public bool SendAuthCookie
		{
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x18AE5D4", Offset = "0x18AE5D4", VA = "0x18AE5D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x18AE5E0", Offset = "0x18AE5E0", VA = "0x18AE5E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000392")]
		public bool SendSync
		{
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x18AE5FC", Offset = "0x18AE5FC", VA = "0x18AE5FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x18AE608", Offset = "0x18AE608", VA = "0x18AE608")]
			set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public bool SendState
		{
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x18AE624", Offset = "0x18AE624", VA = "0x18AE624")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x18AE630", Offset = "0x18AE630", VA = "0x18AE630")]
			set
			{
			}
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x18A5C80", Offset = "0x18A5C80", VA = "0x18A5C80")]
		public WebFlags(byte webhookFlags)
		{
		}
	}
}
namespace ExitGames.Client.DemoParticle
{
	[Token(Token = "0x20003C5")]
	public class TimeKeeper
	{
		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int lastExecutionTime;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool shouldExecute;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C95C", Offset = "0xD8C95C")]
		private int <Interval>k__BackingField;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD8C96C", Offset = "0xD8C96C")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x17000394")]
		public int Interval
		{
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x18A246C", Offset = "0x18A246C", VA = "0x18A246C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9666C", Offset = "0xD9666C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x18A2474", Offset = "0x18A2474", VA = "0x18A2474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9667C", Offset = "0xD9667C")]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x18A247C", Offset = "0x18A247C", VA = "0x18A247C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9668C", Offset = "0xD9668C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x18A2484", Offset = "0x18A2484", VA = "0x18A2484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9669C", Offset = "0xD9669C")]
			set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public bool ShouldExecute
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x18A2490", Offset = "0x18A2490", VA = "0x18A2490")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x18A24E8", Offset = "0x18A24E8", VA = "0x18A24E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x18A24F4", Offset = "0x18A24F4", VA = "0x18A24F4")]
		public TimeKeeper(int interval)
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x18A2538", Offset = "0x18A2538", VA = "0x18A2538")]
		public void Reset()
		{
		}
	}
}
namespace ExitGames.Client.GUI
{
	[Token(Token = "0x20003C6")]
	public enum GizmoType
	{
		[Token(Token = "0x4001B34")]
		WireSphere,
		[Token(Token = "0x4001B35")]
		Sphere,
		[Token(Token = "0x4001B36")]
		WireCube,
		[Token(Token = "0x4001B37")]
		Cube
	}
	[Token(Token = "0x20003C7")]
	public class GizmoTypeDrawer
	{
		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x18A2564", Offset = "0x18A2564", VA = "0x18A2564")]
		public static void Draw(Vector3 center, GizmoType type, Color color, float size)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x18A275C", Offset = "0x18A275C", VA = "0x18A275C")]
		public GizmoTypeDrawer()
		{
		}
	}
}
namespace ExitGames.Demos
{
	[Token(Token = "0x20003C8")]
	public class DemoHubManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000575")]
		private struct DemoData
		{
			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Title;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Description;

			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Scene;

			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string TutorialLink;

			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string DocLink;
		}

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text TitleText;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text DescriptionText;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject OpenSceneButton;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject OpenTutorialLinkButton;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject OpenDocLinkButton;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string MainDemoWebLink;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, DemoData> _data;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string currentSelection;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rect BugFixbounds;

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x16F6780", Offset = "0x16F6780", VA = "0x16F6780")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x16F6BDC", Offset = "0x16F6BDC", VA = "0x16F6BDC")]
		public void SelectDemo(string Reference)
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x16F6D78", Offset = "0x16F6D78", VA = "0x16F6D78")]
		public void OpenScene()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x16F6E64", Offset = "0x16F6E64", VA = "0x16F6E64")]
		public void OpenTutorialLink()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x16F6F2C", Offset = "0x16F6F2C", VA = "0x16F6F2C")]
		public void OpenDocLink()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x16F6FF4", Offset = "0x16F6FF4", VA = "0x16F6FF4")]
		public void OpenMainWebLink()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x16F7000", Offset = "0x16F7000", VA = "0x16F7000")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x16F70D8", Offset = "0x16F70D8", VA = "0x16F70D8")]
		public DemoHubManager()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class ToDemoHubButton : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ToDemoHubButton instance;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x17000397")]
		public static ToDemoHubButton Instance
		{
			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0x16FDE90", Offset = "0x16FDE90", VA = "0x16FDE90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x16FDFCC", Offset = "0x16FDFCC", VA = "0x16FDFCC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x16FE0D0", Offset = "0x16FE0D0", VA = "0x16FE0D0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x16FE1C4", Offset = "0x16FE1C4", VA = "0x16FE1C4")]
		private void CalledOnLevelWasLoaded(int level)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x16FE2CC", Offset = "0x16FE2CC", VA = "0x16FE2CC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x16FE3DC", Offset = "0x16FE3DC", VA = "0x16FE3DC")]
		public void BackToHub()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x16FE468", Offset = "0x16FE468", VA = "0x16FE468")]
		public ToDemoHubButton()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x16FE470", Offset = "0x16FE470", VA = "0x16FE470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD966AC", Offset = "0xD966AC")]
		private void <Start>b__5_0(Scene scene, LoadSceneMode loadingMode)
		{
		}
	}
}
namespace ExitGames.Demos.DemoAnimator
{
	[Token(Token = "0x20003CA")]
	public class CameraWork : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8C97C", Offset = "0xD8C97C")]
		public float distance;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8C9B4", Offset = "0xD8C9B4")]
		public float height;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8C9EC", Offset = "0xD8C9EC")]
		public float heightSmoothLag;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CA24", Offset = "0xD8CA24")]
		public Vector3 centerOffset;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CA5C", Offset = "0xD8CA5C")]
		public bool followOnStart;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform cameraTransform;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isFollowing;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float heightVelocity;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float targetHeight;

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x16F39A0", Offset = "0x16F39A0", VA = "0x16F39A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x16F3A0C", Offset = "0x16F3A0C", VA = "0x16F3A0C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x16F39B0", Offset = "0x16F39B0", VA = "0x16F39B0")]
		public void OnStartFollowing()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x16F3AAC", Offset = "0x16F3AAC", VA = "0x16F3AAC")]
		private void Apply()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x16F3D80", Offset = "0x16F3D80", VA = "0x16F3D80")]
		private void Cut()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x16F3DB4", Offset = "0x16F3DB4", VA = "0x16F3DB4")]
		private void SetUpRotation(Vector3 centerPos)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x16F3F78", Offset = "0x16F3F78", VA = "0x16F3F78")]
		public CameraWork()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class GameManager : PunBehaviour
	{
		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameManager Instance;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CA94", Offset = "0xD8CA94")]
		public GameObject playerPrefab;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject instance;

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x16F4014", Offset = "0x16F4014", VA = "0x16F4014")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x16F4330", Offset = "0x16F4330", VA = "0x16F4330")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x16F4364", Offset = "0x16F4364", VA = "0x16F4364", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer other)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x16F463C", Offset = "0x16F463C", VA = "0x16F463C", Slot = "48")]
		public override void OnPhotonPlayerDisconnected(PhotonPlayer other)
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x16F4788", Offset = "0x16F4788", VA = "0x16F4788", Slot = "34")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x16F47F4", Offset = "0x16F47F4", VA = "0x16F47F4")]
		public void LeaveRoom()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x16F435C", Offset = "0x16F435C", VA = "0x16F435C")]
		public void QuitApplication()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x16F44B0", Offset = "0x16F44B0", VA = "0x16F44B0")]
		private void LoadArena()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x16F4858", Offset = "0x16F4858", VA = "0x16F4858")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class Launcher : PunBehaviour
	{
		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CACC", Offset = "0xD8CACC")]
		public GameObject controlPanel;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CB04", Offset = "0xD8CB04")]
		public Text feedbackText;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CB3C", Offset = "0xD8CB3C")]
		public byte maxPlayersPerRoom;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CB74", Offset = "0xD8CB74")]
		public LoaderAnime loaderAnime;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isConnecting;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _gameVersion;

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x16F4860", Offset = "0x16F4860", VA = "0x16F4860")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x16F4944", Offset = "0x16F4944", VA = "0x16F4944")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x16F4B20", Offset = "0x16F4B20", VA = "0x16F4B20")]
		private void LogFeedback(string message)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x16F4C08", Offset = "0x16F4C08", VA = "0x16F4C08", Slot = "50")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x16F4D60", Offset = "0x16F4D60", VA = "0x16F4D60", Slot = "49")]
		public override void OnPhotonRandomJoinFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x16F4E44", Offset = "0x16F4E44", VA = "0x16F4E44", Slot = "42")]
		public override void OnDisconnectedFromPhoton()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x16F4F10", Offset = "0x16F4F10", VA = "0x16F4F10", Slot = "46")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x16F5088", Offset = "0x16F5088", VA = "0x16F5088")]
		public Launcher()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class LoaderAnime : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CBAC", Offset = "0xD8CBAC")]
		public float speed;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CBE4", Offset = "0xD8CBE4")]
		public float radius;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject particles;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _offset;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _particleTransform;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isAnimating;

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x16F50E8", Offset = "0x16F50E8", VA = "0x16F50E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x16F5160", Offset = "0x16F5160", VA = "0x16F5160")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x16F4AAC", Offset = "0x16F4AAC", VA = "0x16F4AAC")]
		public void StartLoaderAnimation()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x16F4EF0", Offset = "0x16F4EF0", VA = "0x16F4EF0")]
		public void StopLoaderAnimation()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x16F5298", Offset = "0x16F5298", VA = "0x16F5298")]
		public LoaderAnime()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class PlayerAnimatorManager : Photon.MonoBehaviour
	{
		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DirectionDampTime;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x16F52AC", Offset = "0x16F52AC", VA = "0x16F52AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x16F5304", Offset = "0x16F5304", VA = "0x16F5304")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x16F54F0", Offset = "0x16F54F0", VA = "0x16F54F0")]
		public PlayerAnimatorManager()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class PlayerManager : PunBehaviour, IPunObservable
	{
		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CC1C", Offset = "0xD8CC1C")]
		public GameObject PlayerUiPrefab;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CC54", Offset = "0xD8CC54")]
		public GameObject Beams;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CC8C", Offset = "0xD8CC8C")]
		public float Health;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CCC4", Offset = "0xD8CCC4")]
		public static GameObject LocalPlayerInstance;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool IsFiring;

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x16F5500", Offset = "0x16F5500", VA = "0x16F5500")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x16F5644", Offset = "0x16F5644", VA = "0x16F5644")]
		public void Start()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x16F5868", Offset = "0x16F5868", VA = "0x16F5868")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x16F5904", Offset = "0x16F5904", VA = "0x16F5904")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x16F5AE0", Offset = "0x16F5AE0", VA = "0x16F5AE0")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x16F5B8C", Offset = "0x16F5B8C", VA = "0x16F5B8C")]
		public void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x16F5C4C", Offset = "0x16F5C4C", VA = "0x16F5C4C")]
		private void CalledOnLevelWasLoaded(int level)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x16F5DC4", Offset = "0x16F5DC4", VA = "0x16F5DC4")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadingMode)
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x16F5A0C", Offset = "0x16F5A0C", VA = "0x16F5A0C")]
		private void ProcessInputs()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x16F5DF8", Offset = "0x16F5DF8", VA = "0x16F5DF8", Slot = "62")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x16F5F2C", Offset = "0x16F5F2C", VA = "0x16F5F2C")]
		public PlayerManager()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD80508", Offset = "0xD80508")]
	public class PlayerNameInputField : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string playerNamePrefKey;

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x16F5F3C", Offset = "0x16F5F3C", VA = "0x16F5F3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x16F6088", Offset = "0x16F6088", VA = "0x16F6088")]
		public void SetPlayerName(string value)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x16F6148", Offset = "0x16F6148", VA = "0x16F6148")]
		public PlayerNameInputField()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class PlayerUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CCFC", Offset = "0xD8CCFC")]
		public Vector3 ScreenOffset;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CD34", Offset = "0xD8CD34")]
		public Text PlayerNameText;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD8CD6C", Offset = "0xD8CD6C")]
		public Slider PlayerHealthSlider;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerManager _target;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _characterControllerHeight;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _targetTransform;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer _targetRenderer;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _targetPosition;

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x16F61AC", Offset = "0x16F61AC", VA = "0x16F61AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x16F6244", Offset = "0x16F6244", VA = "0x16F6244")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x16F636C", Offset = "0x16F636C", VA = "0x16F636C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x16F6538", Offset = "0x16F6538", VA = "0x16F6538")]
		public void SetTarget(PlayerManager target)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x16F6720", Offset = "0x16F6720", VA = "0x16F6720")]
		public PlayerUI()
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD8056C", Offset = "0xD8056C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD8056C", Offset = "0xD8056C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD8056C", Offset = "0xD8056C")]
	public abstract class BaseController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Touch myTouch;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float x;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float y;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 touchOrigin;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x16F718C", Offset = "0x16F718C", VA = "0x16F718C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x16F72BC", Offset = "0x16F72BC", VA = "0x16F72BC", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x16F73DC", Offset = "0x16F73DC", VA = "0x16F73DC", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x16F7494", Offset = "0x16F7494", VA = "0x16F7494", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x16F7530", Offset = "0x16F7530", VA = "0x16F7530", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x16F75A0", Offset = "0x16F75A0", VA = "0x16F75A0", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x16F76BC", Offset = "0x16F76BC", VA = "0x16F76BC", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x16F773C", Offset = "0x16F773C", VA = "0x16F773C", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x16F78BC", Offset = "0x16F78BC", VA = "0x16F78BC", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x16F795C", Offset = "0x16F795C", VA = "0x16F795C", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001DF0")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x16F79FC", Offset = "0x16F79FC", VA = "0x16F79FC")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD80620", Offset = "0xD80620")]
	[DisallowMultipleComponent]
	public class BetterToggle : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000576")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x14000027")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0x16F7A80", Offset = "0x16F7A80", VA = "0x16F7A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD966BC", Offset = "0xD966BC")]
			add
			{
			}
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x16F7B34", Offset = "0x16F7B34", VA = "0x16F7B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD966CC", Offset = "0xD966CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x16F7BE8", Offset = "0x16F7BE8", VA = "0x16F7BE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x16F7CA0", Offset = "0x16F7CA0", VA = "0x16F7CA0")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x16F809C", Offset = "0x16F809C", VA = "0x16F809C")]
		public BetterToggle()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x16F80A4", Offset = "0x16F80A4", VA = "0x16F80A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD966DC", Offset = "0xD966DC")]
		private void <Start>b__5_0(bool <p0>)
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class ChangePOV : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000577")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000028")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x16F7208", Offset = "0x16F7208", VA = "0x16F7208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD966EC", Offset = "0xD966EC")]
			add
			{
			}
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x16F7328", Offset = "0x16F7328", VA = "0x16F7328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD966FC", Offset = "0xD966FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x16F80E8", Offset = "0x16F80E8", VA = "0x16F80E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x16F8214", Offset = "0x16F8214", VA = "0x16F8214")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x16F8330", Offset = "0x16F8330", VA = "0x16F8330")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x16F8574", Offset = "0x16F8574", VA = "0x16F8574")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x16F8644", Offset = "0x16F8644", VA = "0x16F8644")]
		private void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x16F8718", Offset = "0x16F8718", VA = "0x16F8718")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x16F88BC", Offset = "0x16F88BC", VA = "0x16F88BC")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x16F88C4", Offset = "0x16F88C4", VA = "0x16F88C4")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x16F8720", Offset = "0x16F8720", VA = "0x16F8720")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x16F88CC", Offset = "0x16F88CC", VA = "0x16F88CC")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x16F8CFC", Offset = "0x16F8CFC", VA = "0x16F8CFC")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class CharacterInstantiation : OnJoinedInstantiate
	{
		[Token(Token = "0x2000578")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x14000029")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x16F8160", Offset = "0x16F8160", VA = "0x16F8160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9670C", Offset = "0xD9670C")]
			add
			{
			}
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0x16F827C", Offset = "0x16F827C", VA = "0x16F827C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9671C", Offset = "0xD9671C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x16F8D34", Offset = "0x16F8D34", VA = "0x16F8D34")]
		public new void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x16F93CC", Offset = "0x16F93CC", VA = "0x16F93CC")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float oldYRotation;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Quaternion velRotation;

		[Token(Token = "0x17000398")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x16F9404", Offset = "0x16F9404", VA = "0x16F9404")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x16F9420", Offset = "0x16F9420", VA = "0x16F9420", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x16F9468", Offset = "0x16F9468", VA = "0x16F9468", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x16F9584", Offset = "0x16F9584", VA = "0x16F9584")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x16F9588", Offset = "0x16F9588", VA = "0x16F9588")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x16F970C", Offset = "0x16F970C", VA = "0x16F970C")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD80694", Offset = "0xD80694")]
	public class Highlighter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhotonVoiceRecorder recorder;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PhotonVoiceSpeaker speaker;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool showSpeakerLag;

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x16F9770", Offset = "0x16F9770", VA = "0x16F9770")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x16F98C8", Offset = "0x16F98C8", VA = "0x16F98C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x16F9A10", Offset = "0x16F9A10", VA = "0x16F9A10")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x16F9A1C", Offset = "0x16F9A1C", VA = "0x16F9A1C")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x16F9A38", Offset = "0x16F9A38", VA = "0x16F9A38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x16F9B44", Offset = "0x16F9B44", VA = "0x16F9B44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x16F9D80", Offset = "0x16F9D80", VA = "0x16F9D80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x16F9EE4", Offset = "0x16F9EE4", VA = "0x16F9EE4")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float smoothing;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 offset;

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x16F9EEC", Offset = "0x16F9EEC", VA = "0x16F9EEC", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x16F9F18", Offset = "0x16F9F18", VA = "0x16F9F18", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x16FA004", Offset = "0x16FA004", VA = "0x16FA004", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x16FA1D4", Offset = "0x16FA1D4", VA = "0x16FA1D4")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x16FA308", Offset = "0x16FA308", VA = "0x16FA308")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD806F8", Offset = "0xD806F8")]
	[DisallowMultipleComponent]
	[SelectionBase]
	public class PushToTalkPrivateButton : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button pushToTalkPrivateButton;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text buttonText;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PushToTalkScript pttScript;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int TargetActorNr;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public byte AudioGroup;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool Subscribed;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private KeyCode keyCode;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private KeyCode keyCode2;

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x16FA324", Offset = "0x16FA324", VA = "0x16FA324")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x16FA440", Offset = "0x16FA440", VA = "0x16FA440")]
		private void OnVoiceClientStateChanged(ExitGames.Client.Photon.LoadBalancing.ClientState state)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x16FA600", Offset = "0x16FA600", VA = "0x16FA600")]
		public void SetAudioGroup(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x16FA914", Offset = "0x16FA914", VA = "0x16FA914")]
		public void PushToTalkOn()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x16FADB4", Offset = "0x16FADB4", VA = "0x16FADB4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x16FAE30", Offset = "0x16FAE30", VA = "0x16FAE30")]
		public void PushToTalkOff()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x16FA524", Offset = "0x16FA524", VA = "0x16FA524")]
		public bool Subscribe()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x16FAF1C", Offset = "0x16FAF1C", VA = "0x16FAF1C")]
		public PushToTalkPrivateButton()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class PushToTalkScript : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button pushToTalkButton;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text pushToTalkText;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceRecorder rec;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform parent;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject buttonPrefab;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, PushToTalkPrivateButton> buttons;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool MuteOthersWhileTalking;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int CurrentTargetGroup;

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x16FAF24", Offset = "0x16FAF24", VA = "0x16FAF24")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x16FAF8C", Offset = "0x16FAF8C", VA = "0x16FAF8C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x16FAFF4", Offset = "0x16FAFF4", VA = "0x16FAFF4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x16FB228", Offset = "0x16FB228", VA = "0x16FB228")]
		public void OnToggleValueChanged(bool v)
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x16FB694", Offset = "0x16FB694", VA = "0x16FB694")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x16FB758", Offset = "0x16FB758", VA = "0x16FB758")]
		private void OnVoiceClientStateChanged(ExitGames.Client.Photon.LoadBalancing.ClientState state)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x16FAB74", Offset = "0x16FAB74", VA = "0x16FAB74")]
		public void PushToTalkOn(int group)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x16FAEE4", Offset = "0x16FAEE4", VA = "0x16FAEE4")]
		public void PushToTalkOff(int group)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x16FBB84", Offset = "0x16FBB84", VA = "0x16FBB84")]
		public void PushToTalkOff()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x16FBC38", Offset = "0x16FBC38", VA = "0x16FBC38")]
		public void PushToTalkOn()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x16FBAD4", Offset = "0x16FBAD4", VA = "0x16FBAD4")]
		public void PushToTalk(bool toggle)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x16FBC40", Offset = "0x16FBC40", VA = "0x16FBC40")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x16FBCD4", Offset = "0x16FBCD4", VA = "0x16FBCD4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x16FB8B0", Offset = "0x16FB8B0", VA = "0x16FB8B0")]
		public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x16FBD60", Offset = "0x16FBD60", VA = "0x16FBD60")]
		public void OnPhotonPlayerDisconnected(PhotonPlayer leavingPlayer)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x16FB524", Offset = "0x16FB524", VA = "0x16FB524")]
		private void SubscribeToAllPrivateGroups()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x16FB30C", Offset = "0x16FB30C", VA = "0x16FB30C")]
		private void KeepOnlyOneGroup(byte group)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x16FBFA8", Offset = "0x16FBFA8", VA = "0x16FBFA8")]
		public PushToTalkScript()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x16FA028", Offset = "0x16FA028", VA = "0x16FA028", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x16FA318", Offset = "0x16FA318", VA = "0x16FA318")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class VoiceDemoUI : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000579")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas canvas;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text punSwitchText;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Text voiceSwitchText;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Text calibrateText;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PhotonVoiceRecorder rec;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject debugGO;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool debugMode;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float volumeBeforeMute;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x17000399")]
		public bool DebugMode
		{
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x16FBFB8", Offset = "0x16FBFB8", VA = "0x16FBFB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x16FBFC0", Offset = "0x16FBFC0", VA = "0x16FBFC0")]
			set
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x16F9814", Offset = "0x16F9814", VA = "0x16F9814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9672C", Offset = "0xD9672C")]
			add
			{
			}
			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x16F995C", Offset = "0x16F995C", VA = "0x16F995C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD9673C", Offset = "0xD9673C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x16FC374", Offset = "0x16FC374", VA = "0x16FC374")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x16FC434", Offset = "0x16FC434", VA = "0x16FC434")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x16FC4F4", Offset = "0x16FC4F4", VA = "0x16FC4F4")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x16FC90C", Offset = "0x16FC90C", VA = "0x16FC90C")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x16FC984", Offset = "0x16FC984", VA = "0x16FC984")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x16FCDD0", Offset = "0x16FCDD0", VA = "0x16FCDD0")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x16FCDEC", Offset = "0x16FCDEC", VA = "0x16FCDEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x16FD36C", Offset = "0x16FD36C", VA = "0x16FD36C")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x16FD4EC", Offset = "0x16FD4EC", VA = "0x16FD4EC")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x16FD5F4", Offset = "0x16FD5F4", VA = "0x16FD5F4")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x16FD69C", Offset = "0x16FD69C", VA = "0x16FD69C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x16FDDE4", Offset = "0x16FDDE4", VA = "0x16FDDE4")]
		public VoiceDemoUI()
		{
		}
	}
}
